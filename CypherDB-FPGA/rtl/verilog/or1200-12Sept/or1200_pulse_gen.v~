//------------------------------
// Module name: pulse_gen
// Function: Generate one clock pulse on for every load/store
// instruction
// Creator:  Bony Chen
// Version:  1.0
// Date:     11 Jan 2015
//------------------------------

// This code is modified by the pulse generator that
// generates a clock pulse on every +ve edge input signal

// The tricky point here is that there may have two consecutive
// load/store instruction that a simple pulse generator may
// cause error

// case:
//    consecative load/store
//    load/store but piplined stall, and then load/store again

module or1200_pulse_gen(pulse, in, clk);

	output 			pulse;	// output pulse lasting one clk cycle
	input 			in;		// input, +ve edge to be detected
	input 			clk;		// clock signal

	reg	state;
	reg	pulse;
	
	parameter	IDLE = 1'b0;	// state coding for IDLE state
	parameter	WAIT_FOR_LOW = 1'b1;  
	
	initial state = IDLE;
	
	always @ (posedge clk) begin
		pulse <= 0;
		case (state)
			IDLE: if (in == 1) begin
					state <= WAIT_FOR_LOW;
					pulse <= 1;
					end
				  else
					state <= IDLE;
			WAIT_FOR_LOW: if (in == 1) 	state <= WAIT_FOR_LOW;
					else  state <= IDLE;
			default: state <= IDLE;
			endcase
		end			//... always
endmodule

