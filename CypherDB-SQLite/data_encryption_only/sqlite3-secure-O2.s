	.file	"sqlite3-secure.c"
	.global __divsi3
	.global __floatsidf
	.global __subdf3
	.global __muldf3
	.global __fixdfdi
	.section	.rodata
	.align	4
.LC0:
	.long	1083691520
	.long	0
	.align	4
.LC1:
	.long	1100257648
	.long	0
	.align	4
.LC2:
	.long	1083129856
	.long	0
	.section .text
	.align	4
.proc	computeJD
	.type	computeJD, @function
computeJD:
.LFB11:
	l.sw    	-20(r1),r2	 # SI store
.LCFI0:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3:
	l.sw    	-8(r1),r18	 # SI store
.LCFI4:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbs   	r3,42(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
.LCFI5:
	l.bf	.L1	# delay slot filled
	l.addi  	r1,r1,-28
	l.movhi  	r5,hi(-1457336832)
	l.ori   	r4,r0,49316	 # move immediate K
	l.lbs   	r3,40(r2)	 # extendqisi2_no_sext_mem
	l.ori   	r5,r5,lo(-1457336832)
	l.sfeqi	r3,0
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.bf	.L15	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.lwz   	r14,12(r2)	 # SI load
	l.lwz   	r16,8(r2)	 # SI load
	l.sflesi	r14,2
	l.bf	.L4	# delay slot filled
	l.lwz   	r18,16(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,100	 # move immediate I
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r18,r18,2
	l.ori   	r3,r0,36525	 # move immediate K
	l.mul   	r16,r16,r3
	l.srai  	r5,r11,31
	l.movhi 	r4,hi(172228608)	 # move immediate M
	l.addi  	r14,r14,1
	l.andi  	r5,r5,3
	l.ori   	r4,r4,23292
	l.add   	r5,r5,r11
	l.add   	r3,r16,r4
	l.srai  	r5,r5,2
	l.addi  	r4,r0,100	 # move immediate I
	l.add   	r18,r18,r5
	l.jal   	__divsi3	# delay slot filled
	l.sub   	r18,r18,r11
	l.movhi 	r5,hi(262144)	 # move immediate M
	l.add   	r18,r18,r11
	l.ori   	r5,r5,43857
	l.addi  	r4,r0,10000	 # move immediate I
	l.jal   	__divsi3	# delay slot filled
	l.mul   	r3,r14,r5
	l.add   	r3,r18,r11
.L10:
	l.jal   	__floatsidf
	l.nop			# nop delay slot
	l.movhi  	r5,hi(.LC0)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC0)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__subdf3
	l.nop			# nop delay slot
	l.movhi  	r5,hi(.LC1)
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC1)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r4,r12,0	 # move reg to reg
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
	l.addi  	r5,r0,1	 # movqi: move immediate
.L15:
	l.lbs   	r3,41(r2)	 # extendqisi2_no_sext_mem
	l.sb    	42(r2),r5	    # movqi
	l.sfeqi	r3,0
		l.lwz   	r4, 0(r1)
		l.lwz   	r5, 4(r1)
		l.sw    	0(r2), r4
		l.sw    	4(r2), r5
	l.bf	.L1	# delay slot filled
	l.movhi 	r3,hi(3538944)	 # move immediate M
	l.ori   	r4,r0,60000	 # move immediate K
	l.lwz   	r5,20(r2)	 # SI load
	l.lwz   	r14,24(r2)	 # SI load
	l.ori   	r3,r3,61056
	l.mul   	r14,r14,r4
	l.mul   	r3,r5,r3
	l.add   	r14,r14,r3
	l.movhi  	r3,hi(.LC2)
	l.ori   	r3,r3,lo(.LC2)
		l.lwz   	r5, 0(r3)
		l.lwz   	r6, 4(r3)
		l.lwz   	r3, 32(r2)
		l.lwz   	r4, 32+4(r2)
	l.jal   	__muldf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
	l.add   	r12,r14,r12
	l.srai  	r3,r14,31
	l.sfltu 	r12,r14
	l.bnf	.L12	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r5,4(r1)	 # SI load
	l.add   	r11,r3,r11
	l.add   	r3,r12,r5
	l.sfltu 	r3,r12
	l.bnf	.L13	# delay slot filled
	l.add   	r11,r4,r11
.L7:
	l.lwz   	r5,0(r1)	 # SI load
	l.sw    	4(r2),r3	 # SI store
	l.add   	r11,r11,r5
	l.lbs   	r5,43(r2)	 # extendqisi2_no_sext_mem
	l.add   	r11,r4,r11
	l.sfeqi	r5,0
	l.bf	.L1	# delay slot filled
	l.sw    	0(r2),r11	 # SI store
	l.ori   	r4,r0,60000	 # move immediate K
	l.lwz   	r5,28(r2)	 # SI load
	l.addi  	r6,r0,1	 # move immediate I
	l.mul   	r5,r5,r4
	l.sub   	r4,r3,r5
	l.sfgtu 	r4,r3
	l.bnf	.L14	# delay slot filled
	l.srai  	r5,r5,31
	l.sub   	r11,r11,r5
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sub   	r6,r11,r6
	l.sw    	4(r2),r4	 # SI store
	l.sb    	40(r2),r3	    # movqi
	l.sw    	0(r2),r6	 # SI store
	l.sb    	41(r2),r3	    # movqi
	l.sb    	43(r2),r3	    # movqi
.L1:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L13:
	l.j     	.L7	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L12:
	l.lwz   	r5,4(r1)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r11,r3,r11
	l.add   	r3,r12,r5
	l.add   	r11,r4,r11
	l.sfltu 	r3,r12
	l.bf	.L7	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L7	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L14:
	l.addi  	r6,r0,0	 # move immediate I
	l.sub   	r11,r11,r5
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sub   	r6,r11,r6
	l.sw    	4(r2),r4	 # SI store
	l.sb    	40(r2),r3	    # movqi
	l.sw    	0(r2),r6	 # SI store
	l.sb    	41(r2),r3	    # movqi
	l.j     	.L1	# delay slot filled
	l.sb    	43(r2),r3	    # movqi
.L4:
	l.addi  	r16,r16,-1
	l.addi  	r4,r0,100	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r14,r14,13
	l.ori   	r3,r0,36525	 # move immediate K
	l.mul   	r3,r16,r3
	l.srai  	r5,r11,31
	l.movhi 	r4,hi(172228608)	 # move immediate M
	l.addi  	r16,r18,2
	l.andi  	r5,r5,3
	l.ori   	r4,r4,23292
	l.add   	r5,r5,r11
	l.add   	r3,r3,r4
	l.srai  	r5,r5,2
	l.addi  	r4,r0,100	 # move immediate I
	l.add   	r16,r16,r5
	l.jal   	__divsi3	# delay slot filled
	l.sub   	r16,r16,r11
	l.movhi 	r3,hi(262144)	 # move immediate M
	l.addi  	r4,r0,10000	 # move immediate I
	l.ori   	r3,r3,43857
	l.mul   	r3,r14,r3
	l.jal   	__divsi3	# delay slot filled
	l.add   	r14,r16,r11
	l.j     	.L10	# delay slot filled
	l.add   	r3,r14,r11
.LFE11:
	.size	computeJD, .-computeJD
	.global __divdi3
	.global __divdf3
	.global __fixdfsi
	.section	.rodata
	.align	4
.LC3:
	.long	1094483408
	.long	1073741824
	.align	4
.LC4:
	.long	1088542088
	.long	0
	.align	4
.LC5:
	.long	1079936614
	.long	1717986918
	.align	4
.LC6:
	.long	1081529344
	.long	0
	.align	4
.LC7:
	.long	1077844384
	.long	659706977
	.section .text
	.align	4
.proc	computeYMD
	.type	computeYMD, @function
computeYMD:
.LFB15:
	l.sw    	-24(r1),r2	 # SI store
.LCFI6:
	l.sw    	-4(r1),r9	 # SI store
.LCFI7:
	l.sw    	-20(r1),r14	 # SI store
.LCFI8:
	l.sw    	-16(r1),r16	 # SI store
.LCFI9:
	l.sw    	-12(r1),r18	 # SI store
.LCFI10:
	l.sw    	-8(r1),r20	 # SI store
.LCFI11:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbs   	r5,40(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
.LCFI12:
	l.bf	.L16	# delay slot filled
	l.addi  	r1,r1,-24
	l.lbs   	r3,42(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L18	# delay slot filled
	l.movhi 	r3,hi(43188224)	 # move immediate M
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r4,r0,2000	 # move immediate I
	l.sw    	12(r2),r3	 # SI store
	l.sw    	8(r2),r4	 # SI store
	l.sw    	16(r2),r3	 # SI store
.L19:
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	40(r2),r3	    # movqi
.L16:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L18:
	l.lwz   	r7,4(r2)	 # SI load
	l.ori   	r3,r3,11776
	l.lwz   	r6,0(r2)	 # SI load
	l.add   	r4,r7,r3
	l.sfltu 	r4,r7
	l.bnf	.L25	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L20:
	l.add   	r3,r3,r6
	l.movhi  	r6,hi(86400000)
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r6,lo(86400000)
	l.jal   	__divdi3	# delay slot filled
	l.movhi  	r20,hi(.LC7)
	l.ori   	r3,r12,0	 # move reg to reg
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r18,r12,0	 # move reg to reg
	l.movhi  	r5,hi(.LC3)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC3)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__subdf3	# delay slot filled
	l.addi  	r18,r18,1525
	l.movhi  	r5,hi(.LC4)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC4)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__divdf3	# delay slot filled
	l.ori   	r20,r20,lo(.LC7)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.srai  	r3,r11,31
	l.add   	r18,r18,r11
	l.andi  	r3,r3,3
	l.add   	r11,r3,r11
	l.srai  	r11,r11,2
	l.sub   	r18,r18,r11
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.movhi  	r5,hi(.LC5)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC5)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__subdf3
	l.nop			# nop delay slot
	l.movhi  	r5,hi(.LC6)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC6)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__divdf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.ori   	r3,r0,36525	 # move immediate K
	l.mul   	r3,r11,r3
	l.addi  	r4,r0,100	 # move immediate I
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sub   	r18,r18,r11
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
		l.lwz   	r5, 0(r20)
		l.lwz   	r6, 4(r20)
	l.jal   	__divdf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
		l.lwz   	r5, 0(r20)
		l.lwz   	r6, 4(r20)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__muldf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.sub   	r11,r18,r11
	l.sfgtsi	r14,13
	l.bnf	.L26	# delay slot filled
	l.sw    	16(r2),r11	 # SI store
	l.addi  	r14,r14,-13
	l.sflesi	r14,2
	l.bf	.L23	# delay slot filled
	l.sw    	12(r2),r14	 # SI store
.L27:
	l.addi  	r16,r16,-4716
	l.j     	.L19	# delay slot filled
	l.sw    	8(r2),r16	 # SI store
.L26:
	l.addi  	r14,r14,-1
	l.sflesi	r14,2
	l.bnf	.L27	# delay slot filled
	l.sw    	12(r2),r14	 # SI store
.L23:
	l.addi  	r16,r16,-4715
	l.j     	.L19	# delay slot filled
	l.sw    	8(r2),r16	 # SI store
.L25:
	l.j     	.L20	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
.LFE15:
	.size	computeYMD, .-computeYMD
	.global __moddi3
	.global __adddf3
	.section	.rodata
	.align	4
.LC8:
	.long	1083129856
	.long	0
	.section .text
	.align	4
.proc	computeYMD_HMS
	.type	computeYMD_HMS, @function
computeYMD_HMS:
.LFB17:
	l.sw    	-28(r1),r2	 # SI store
.LCFI13:
	l.sw    	-24(r1),r14	 # SI store
.LCFI14:
	l.sw    	-4(r1),r9	 # SI store
.LCFI15:
	l.sw    	-20(r1),r16	 # SI store
.LCFI16:
	l.sw    	-16(r1),r18	 # SI store
.LCFI17:
	l.sw    	-12(r1),r20	 # SI store
.LCFI18:
	l.sw    	-8(r1),r22	 # SI store
.LCFI19:
	l.ori   	r2,r3,0	 # move reg to reg
.LCFI20:
	l.jal   	computeYMD	# delay slot filled
	l.addi  	r1,r1,-36
	l.lbs   	r14,41(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r14,0
	l.bnf	.L31
	l.nop			# nop delay slot
.L28:
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L31:
	l.jal   	computeJD	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.movhi 	r3,hi(43188224)	 # move immediate M
	l.lwz   	r6,4(r2)	 # SI load
	l.ori   	r3,r3,11776
	l.lwz   	r5,0(r2)	 # SI load
	l.add   	r4,r6,r3
	l.sfltu 	r4,r6
	l.bnf	.L32	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L30:
	l.movhi  	r6,hi(86400000)
	l.add   	r3,r3,r5
	l.ori   	r6,r6,lo(86400000)
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	__moddi3	# delay slot filled
	l.addi  	r18,r0,-3600	 # move immediate I
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r3,r12,0	 # move reg to reg
	l.movhi  	r5,hi(.LC8)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC8)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__divdf3
	l.nop			# nop delay slot
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	__fixdfsi	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
	l.addi  	r4,r0,3600	 # move immediate I
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.mul   	r18,r11,r18
	l.add   	r18,r18,r16
	l.addi  	r4,r0,60	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.sw    	20(r2),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	24(r2),r11	 # SI store
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r7,r22,0	 # move reg to reg
	l.ori   	r8,r20,0	 # move reg to reg
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
		l.or    	r3, r7, r0
		l.or    	r4, r8, r0
	l.jal   	__subdf3
	l.nop			# nop delay slot
	l.slli  	r3,r14,2
	l.slli  	r14,r14,6
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
	l.sub   	r3,r3,r14
	l.jal   	__floatsidf	# delay slot filled
	l.add   	r3,r3,r18
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.addi  	r3,r0,1	 # movqi: move immediate
		l.sw    	32(r2), r11
		l.sw    	32+4(r2), r12
	l.j     	.L28	# delay slot filled
	l.sb    	41(r2),r3	    # movqi
.L32:
	l.j     	.L30	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.LFE17:
	.size	computeYMD_HMS, .-computeYMD_HMS
	.align	4
.proc	vfsUnlink
	.type	vfsUnlink, @function
vfsUnlink:
.LFB53:
	l.sfeqi	r3,0
	l.bf	.L33
	l.nop			# nop delay slot
	l.movhi  	r4,hi(vfsList)
	l.ori   	r4,r4,lo(vfsList)
	l.lwz   	r5,0(r4)	 # SI load
	l.sfne 	r5,r3
	l.bnf	.L40	# delay slot filled
	l.sfeqi	r5,0
	l.bnf	.L39
	l.nop			# nop delay slot
	l.j     	.L33
	l.nop			# nop delay slot
.L42:
	l.bnf	.L41
	l.nop			# nop delay slot
	l.ori   	r5,r4,0	 # move reg to reg
.L39:
	l.lwz   	r4,12(r5)	 # SI load
	l.sfeqi	r4,0
	l.bnf	.L42	# delay slot filled
	l.sfne 	r3,r4
.L33:
	l.jr    	r9
	l.nop			# nop delay slot
.L41:
	l.lwz   	r3,12(r3)	 # SI load
	l.jr    	r9	# delay slot filled
	l.sw    	12(r5),r3	 # SI store
.L40:
	l.lwz   	r3,12(r5)	 # SI load
	l.jr    	r9	# delay slot filled
	l.sw    	0(r4),r3	 # SI store
.LFE53:
	.size	vfsUnlink, .-vfsUnlink
	.align	4
.proc	sqlite3MemSize
	.type	sqlite3MemSize, @function
sqlite3MemSize:
.LFB62:
	l.sfeqi	r3,0
	l.bf	.L44
	l.nop			# nop delay slot
	l.lwz   	r3,-4(r3)	 # SI load
.L44:
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
.LFE62:
	.size	sqlite3MemSize, .-sqlite3MemSize
	.align	4
.proc	sqlite3MemRoundup
	.type	sqlite3MemRoundup, @function
sqlite3MemRoundup:
.LFB63:
	l.sw    	-4(r1),r2	 # SI store
.LCFI21:
	l.addi  	r1,r1,-4
.LCFI22:
	l.addi  	r2,r0,-8	 # move immediate I
	l.addi  	r3,r3,7
	l.addi	r1,r1,4
	l.and   	r11,r3,r2
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE63:
	.size	sqlite3MemRoundup, .-sqlite3MemRoundup
	.align	4
.proc	sqlite3MemInit
	.type	sqlite3MemInit, @function
sqlite3MemInit:
.LFB64:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE64:
	.size	sqlite3MemInit, .-sqlite3MemInit
	.align	4
.proc	sqlite3MemShutdown
	.type	sqlite3MemShutdown, @function
sqlite3MemShutdown:
.LFB65:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE65:
	.size	sqlite3MemShutdown, .-sqlite3MemShutdown
	.align	4
.proc	softHeapLimitEnforcer
	.type	softHeapLimitEnforcer, @function
softHeapLimitEnforcer:
.LFB67:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE67:
	.size	softHeapLimitEnforcer, .-softHeapLimitEnforcer
	.align	4
.proc	sqlite3MallocAlarm
	.type	sqlite3MallocAlarm, @function
sqlite3MallocAlarm:
.LFB76:
	l.sw    	-12(r1),r2	 # SI store
.LCFI23:
	l.movhi  	r2,hi(mem0)
	l.sw    	-4(r1),r9	 # SI store
.LCFI24:
	l.ori   	r2,r2,lo(mem0)
	l.sw    	-8(r1),r14	 # SI store
.LCFI25:
	l.lwz   	r7,20(r2)	 # SI load
	l.addi  	r1,r1,-12
.LCFI26:
	l.sfeqi	r7,0
	l.bf	.L50	# delay slot filled
	l.ori   	r6,r3,0	 # move reg to reg
	l.lwz   	r14,28(r2)	 # SI load
	l.sfnei	r14,0
	l.bf	.L50
	l.nop			# nop delay slot
	l.movhi  	r3,hi(sqlite3Stat)
	l.ori   	r3,r3,lo(sqlite3Stat)
	l.lwz   	r5,0(r3)	 # SI load
	l.addi  	r3,r0,1	 # move immediate I
	l.srai  	r4,r5,31
	l.sw    	28(r2),r3	 # SI store
	l.jalr  	r7	# delay slot filled
	l.lwz   	r3,24(r2)	 # SI load
	l.sw    	28(r2),r14	 # SI store
.L50:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE76:
	.size	sqlite3MallocAlarm, .-sqlite3MallocAlarm
	.align	4
.proc	mallocWithAlarm
	.type	mallocWithAlarm, @function
mallocWithAlarm:
.LFB77:
	l.sw    	-20(r1),r16	 # SI store
.LCFI27:
	l.movhi  	r16,hi(sqlite3Config)
	l.sw    	-28(r1),r2	 # SI store
.LCFI28:
	l.ori   	r16,r16,lo(sqlite3Config)
	l.movhi  	r2,hi(sqlite3Stat)
	l.sw    	-24(r1),r14	 # SI store
.LCFI29:
	l.sw    	-16(r1),r18	 # SI store
.LCFI30:
	l.sw    	-8(r1),r22	 # SI store
.LCFI31:
	l.sw    	-4(r1),r9	 # SI store
.LCFI32:
	l.sw    	-12(r1),r20	 # SI store
.LCFI33:
	l.lwz   	r11,40(r16)	 # SI load
	l.addi  	r1,r1,-28
.LCFI34:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r2,r2,lo(sqlite3Stat)
	l.jalr  	r11	# delay slot filled
	l.ori   	r22,r4,0	 # move reg to reg
	l.lwz   	r3,56(r2)	 # SI load
	l.sw    	20(r2),r18	 # SI store
	l.sfles 	r18,r3
	l.bf	.L53	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sw    	56(r2),r18	 # SI store
.L53:
	l.movhi  	r20,hi(mem0)
	l.ori   	r20,r20,lo(mem0)
	l.lwz   	r3,20(r20)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L54
	l.nop			# nop delay slot
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r4,12(r20)	 # SI load
	l.add   	r5,r14,r5
	l.srai  	r3,r5,31
	l.sfgts 	r4,r3
	l.bnf	.L59	# delay slot filled
	l.sfne 	r4,r3
.L54:
	l.lwz   	r11,24(r16)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L60	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L56:
	l.lwz   	r11,36(r16)	 # SI load
.L61:
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r4,36(r2)	 # SI load
	l.add   	r3,r11,r3
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfles 	r3,r4
	l.bf	.L57	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
	l.movhi  	r2,hi(sqlite3Stat)
	l.ori   	r2,r2,lo(sqlite3Stat)
	l.sw    	36(r2),r3	 # SI store
.L57:
	l.sw    	0(r22),r18	 # SI store
	l.addi	r1,r1,28
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L59:
	l.bf	.L58
	l.nop			# nop delay slot
	l.lwz   	r3,16(r20)	 # SI load
	l.sfgtu 	r3,r5
	l.bf	.L54
	l.nop			# nop delay slot
.L58:
	l.jal   	sqlite3MallocAlarm	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r11,24(r16)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L56	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L60:
	l.lwz   	r3,20(r20)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L57
	l.nop			# nop delay slot
	l.jal   	sqlite3MallocAlarm	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r11,24(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L57	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L61	# delay slot filled
	l.lwz   	r11,36(r16)	 # SI load
.LFE77:
	.size	mallocWithAlarm, .-mallocWithAlarm
	.align	4
.proc	sqlite3Malloc
	.type	sqlite3Malloc, @function
sqlite3Malloc:
.LFB78:
	l.sw    	-8(r1),r2	 # SI store
.LCFI35:
	l.movhi 	r2,hi(2147418112)	 # move immediate M
	l.sw    	-4(r1),r9	 # SI store
.LCFI36:
	l.addi  	r4,r3,-1
	l.ori   	r2,r2,65278
	l.addi  	r1,r1,-12
.LCFI37:
	l.sfgtu 	r4,r2
	l.bf	.L63	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r5,0(r4)	 # SI load
	l.sfeq 	r5,r11
	l.bnf	.L66
	l.nop			# nop delay slot
	l.lwz   	r11,24(r4)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
.L63:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L66:
	l.jal   	mallocWithAlarm	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r11,0(r1)	 # SI load
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE78:
	.size	sqlite3Malloc, .-sqlite3Malloc
	.align	4
.proc	sqlite3ScratchFree
	.type	sqlite3ScratchFree, @function
sqlite3ScratchFree:
.LFB81:
	l.sw    	-20(r1),r2	 # SI store
.LCFI38:
	l.sw    	-4(r1),r9	 # SI store
.LCFI39:
	l.sw    	-16(r1),r14	 # SI store
.LCFI40:
	l.sw    	-12(r1),r16	 # SI store
.LCFI41:
	l.sw    	-8(r1),r18	 # SI store
.LCFI42:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI43:
	l.bf	.L67	# delay slot filled
	l.addi  	r1,r1,-20
	l.movhi  	r14,hi(sqlite3Config)
	l.ori   	r14,r14,lo(sqlite3Config)
	l.lwz   	r3,152(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L69	# delay slot filled
	l.sfltu 	r2,r3
	l.bnf	.L74	# delay slot filled
	l.movhi  	r16,hi(mem0)
.L69:
	l.lwz   	r4,0(r14)	 # SI load
	l.movhi  	r3,hi(sqlite3Config)
	l.sfeqi	r4,0
	l.bf	.L71	# delay slot filled
	l.ori   	r3,r3,lo(sqlite3Config)
	l.lwz   	r11,36(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.movhi  	r3,hi(sqlite3Stat)
	l.sub   	r11,r0,r11
	l.ori   	r3,r3,lo(sqlite3Stat)
	l.lwz   	r4,16(r3)	 # SI load
	l.lwz   	r5,52(r3)	 # SI load
	l.add   	r4,r11,r4
	l.sfles 	r4,r5
	l.bf	.L72	# delay slot filled
	l.sw    	16(r3),r4	 # SI store
	l.sw    	52(r3),r4	 # SI store
.L72:
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r4,36(r3)	 # SI load
	l.add   	r11,r11,r5
	l.sfles 	r11,r4
	l.bf	.L73	# delay slot filled
	l.sw    	0(r3),r11	 # SI store
	l.movhi  	r3,hi(sqlite3Stat)
	l.ori   	r3,r3,lo(sqlite3Stat)
	l.sw    	36(r3),r11	 # SI store
.L73:
	l.lwz   	r4,28(r14)	 # SI load
	l.addi	r1,r1,20
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr	r4	# delay slot filled	# sibcall Rsc
	l.lwz   	r18,-8(r1)	 # SI load
.L74:
	l.ori   	r16,r16,lo(mem0)
	l.lwz   	r5,32(r16)	 # SI load
	l.sfltu 	r2,r5
	l.bnf	.L69
	l.nop			# nop delay slot
	l.lwz   	r18,0(r16)	 # SI load
	l.lwz   	r4,156(r14)	 # SI load
	l.slli  	r14,r18,2
	l.sub   	r3,r2,r3
	l.movhi  	r2,hi(sqlite3Stat)
	l.add   	r14,r5,r14
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r2,r2,lo(sqlite3Stat)
	l.sw    	0(r14),r11	 # SI store
	l.addi  	r18,r18,1
	l.lwz   	r3,12(r2)	 # SI load
	l.lwz   	r4,48(r2)	 # SI load
	l.addi  	r3,r3,-1
	l.sw    	0(r16),r18	 # SI store
	l.sfles 	r3,r4
	l.bf	.L67	# delay slot filled
	l.sw    	12(r2),r3	 # SI store
	l.sw    	48(r2),r3	 # SI store
.L67:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L71:
	l.lwz   	r4,28(r3)	 # SI load
	l.addi	r1,r1,20
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr	r4	# delay slot filled	# sibcall Rsc
	l.lwz   	r18,-8(r1)	 # SI load
.LFE81:
	.size	sqlite3ScratchFree, .-sqlite3ScratchFree
	.align	4
.proc	sqlite3DbMallocSize
	.type	sqlite3DbMallocSize, @function
sqlite3DbMallocSize:
.LFB84:
	l.sw    	-4(r1),r9	 # SI store
.LCFI44:
	l.sfeqi	r4,0
.LCFI45:
	l.bf	.L78	# delay slot filled
	l.addi  	r1,r1,-4
	l.sub   	r5,r0,r3
	l.or    	r5,r3,r5
	l.sfgesi	r5,0
	l.bf	.L77
	l.nop			# nop delay slot
	l.lwz   	r5,240(r3)	 # SI load
	l.sfltu 	r4,r5
	l.bf	.L77
	l.nop			# nop delay slot
	l.lwz   	r5,244(r3)	 # SI load
	l.sfgeu 	r4,r5
	l.bf	.L77
	l.nop			# nop delay slot
	l.lhz   	r11,224(r3)	 # zero_extendqisi2
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L77:
	l.ori   	r3,r4,0	 # move reg to reg
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r4,36(r4)	 # SI load
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr	r4
	l.nop			# nop delay slot	# sibcall Rsc
.L78:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
.LFE84:
	.size	sqlite3DbMallocSize, .-sqlite3DbMallocSize
	.align	4
.proc	sqlite3_free
	.global sqlite3_free
	.type	sqlite3_free, @function
sqlite3_free:
.LFB85:
	l.sw    	-8(r1),r14	 # SI store
.LCFI46:
	l.sw    	-4(r1),r9	 # SI store
.LCFI47:
	l.sw    	-12(r1),r2	 # SI store
.LCFI48:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI49:
	l.bf	.L79	# delay slot filled
	l.addi  	r1,r1,-12
	l.movhi  	r2,hi(sqlite3Config)
	l.ori   	r2,r2,lo(sqlite3Config)
	l.lwz   	r4,0(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L81
	l.nop			# nop delay slot
	l.lwz   	r11,36(r2)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.movhi  	r4,hi(sqlite3Stat)
	l.ori   	r4,r4,lo(sqlite3Stat)
	l.lwz   	r5,0(r4)	 # SI load
	l.lwz   	r3,36(r4)	 # SI load
	l.sub   	r11,r5,r11
	l.sfles 	r11,r3
	l.bf	.L82	# delay slot filled
	l.sw    	0(r4),r11	 # SI store
	l.sw    	36(r4),r11	 # SI store
.L82:
	l.lwz   	r2,28(r2)	 # SI load
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r14,-8(r1)	 # SI load
	l.jr	r2		# sibcall r
	l.lwz	r2,-12(r1)

.L81:
	l.lwz   	r2,28(r2)	 # SI load
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r14,-8(r1)	 # SI load
	l.jr	r2		# sibcall r
	l.lwz	r2,-12(r1)

.L79:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE85:
	.size	sqlite3_free, .-sqlite3_free
	.align	4
.proc	sqlite3OsCloseFree
	.type	sqlite3OsCloseFree, @function
sqlite3OsCloseFree:
.LFB51:
	l.sw    	-12(r1),r2	 # SI store
.LCFI50:
	l.sw    	-8(r1),r14	 # SI store
.LCFI51:
	l.sw    	-4(r1),r9	 # SI store
.LCFI52:
	l.lwz   	r2,0(r3)	 # SI load
	l.addi  	r1,r1,-12
.LCFI53:
	l.sfeqi	r2,0
	l.bf	.L84	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r11,4(r2)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r2,r11,0	 # move reg to reg
	l.sw    	0(r14),r3	 # SI store
.L84:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE51:
	.size	sqlite3OsCloseFree, .-sqlite3OsCloseFree
	.align	4
.proc	sqlite3DbFree
	.type	sqlite3DbFree, @function
sqlite3DbFree:
.LFB86:
	l.sub   	r5,r0,r4
	l.sw    	-4(r1),r9	 # SI store
.LCFI54:
	l.or    	r5,r4,r5
	l.sfgesi	r5,0
.LCFI55:
	l.bf	.L87	# delay slot filled
	l.addi  	r1,r1,-4
	l.sub   	r5,r0,r3
	l.or    	r5,r3,r5
	l.sfgesi	r5,0
	l.bf	.L87
	l.nop			# nop delay slot
	l.lwz   	r5,240(r3)	 # SI load
	l.sfltu 	r4,r5
	l.bf	.L87
	l.nop			# nop delay slot
	l.lwz   	r5,244(r3)	 # SI load
	l.sfgeu 	r4,r5
	l.bf	.L87
	l.nop			# nop delay slot
	l.lwz   	r5,228(r3)	 # SI load
	l.lwz   	r6,236(r3)	 # SI load
	l.addi  	r5,r5,-1
	l.sw    	0(r4),r6	 # SI store
	l.sw    	236(r3),r4	 # SI store
	l.sw    	228(r3),r5	 # SI store
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L87:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_free	# delay slot filled	# sibcall s
	l.ori   	r3,r4,0	 # move reg to reg
.LFE86:
	.size	sqlite3DbFree, .-sqlite3DbFree
	.align	4
.proc	sqlite3Realloc
	.type	sqlite3Realloc, @function
sqlite3Realloc:
.LFB87:
	l.sw    	-28(r1),r16	 # SI store
.LCFI56:
	l.sw    	-20(r1),r20	 # SI store
.LCFI57:
	l.sw    	-4(r1),r9	 # SI store
.LCFI58:
	l.sw    	-36(r1),r2	 # SI store
.LCFI59:
	l.sw    	-32(r1),r14	 # SI store
.LCFI60:
	l.sw    	-24(r1),r18	 # SI store
.LCFI61:
	l.sw    	-16(r1),r22	 # SI store
.LCFI62:
	l.sw    	-12(r1),r24	 # SI store
.LCFI63:
	l.sw    	-8(r1),r26	 # SI store
.LCFI64:
	l.ori   	r20,r3,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI65:
	l.sfnei	r3,0
	l.bnf	.L99	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r2,r4,-1
	l.movhi 	r4,hi(2147418112)	 # move immediate M
	l.ori   	r4,r4,65278
	l.sfleu 	r2,r4
	l.bnf	.L100	# delay slot filled
	l.movhi  	r2,hi(sqlite3Config)
	l.ori   	r2,r2,lo(sqlite3Config)
	l.lwz   	r11,36(r2)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L92	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.movhi  	r14,hi(sqlite3Stat)
	l.ori   	r14,r14,lo(sqlite3Stat)
	l.lwz   	r3,56(r14)	 # SI load
	l.sfles 	r16,r3
	l.bf	.L93	# delay slot filled
	l.sw    	20(r14),r16	 # SI store
	l.sw    	56(r14),r16	 # SI store
.L93:
	l.lwz   	r11,40(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.sfeq 	r11,r22
	l.bf	.L91	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r5,0(r14)	 # SI load
	l.movhi  	r26,hi(mem0)
	l.sub   	r5,r5,r22
	l.ori   	r26,r26,lo(mem0)
	l.add   	r5,r5,r11
	l.lwz   	r4,12(r26)	 # SI load
	l.srai  	r3,r5,31
	l.sfgts 	r4,r3
	l.bnf	.L101	# delay slot filled
	l.sfne 	r4,r3
.L94:
	l.lwz   	r11,32(r2)	 # SI load
.L103:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L102	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r11,36(r2)	 # SI load
.L105:
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.lwz   	r2,36(r14)	 # SI load
	l.sub   	r22,r3,r22
	l.add   	r11,r22,r11
	l.sfles 	r11,r2
	l.bf	.L91	# delay slot filled
	l.sw    	0(r14),r11	 # SI store
	l.movhi  	r2,hi(sqlite3Stat)
	l.ori   	r2,r2,lo(sqlite3Stat)
	l.sw    	36(r2),r11	 # SI store
.L91:
	l.addi	r1,r1,36
.L104:
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L92:
	l.lwz   	r2,32(r2)	 # SI load
	l.addi	r1,r1,36
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.lwz   	r26,-8(r1)	 # SI load
	l.jr	r2		# sibcall r
	l.lwz	r2,-36(r1)

.L101:
	l.bf	.L98
	l.nop			# nop delay slot
	l.lwz   	r3,16(r26)	 # SI load
	l.sfgtu 	r3,r5
	l.bf	.L94
	l.nop			# nop delay slot
.L98:
	l.jal   	sqlite3MallocAlarm	# delay slot filled
	l.sub   	r3,r24,r22
	l.j     	.L103	# delay slot filled
	l.lwz   	r11,32(r2)	 # SI load
.L100:
	l.jal   	sqlite3_free	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.j     	.L104	# delay slot filled
	l.addi	r1,r1,36
.L102:
	l.lwz   	r3,20(r26)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L91
	l.nop			# nop delay slot
	l.jal   	sqlite3MallocAlarm	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r11,32(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L91	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L105	# delay slot filled
	l.lwz   	r11,36(r2)	 # SI load
.L99:
	l.addi	r1,r1,36
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.j	sqlite3Malloc	# delay slot filled	# sibcall s
	l.lwz   	r26,-8(r1)	 # SI load
.LFE87:
	.size	sqlite3Realloc, .-sqlite3Realloc
	.align	4
.proc	sqlite3DbMallocRaw
	.type	sqlite3DbMallocRaw, @function
sqlite3DbMallocRaw:
.LFB91:
	l.sw    	-8(r1),r2	 # SI store
.LCFI66:
	l.sw    	-4(r1),r9	 # SI store
.LCFI67:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI68:
	l.bf	.L107	# delay slot filled
	l.addi  	r1,r1,-8
	l.lbz   	r3,30(r3)	 # zero_extendqisi2
	l.addi  	r11,r0,0	 # move immediate I
	l.sfne 	r3,r11
	l.bf	.L108
	l.nop			# nop delay slot
	l.lbz   	r3,226(r2)	 # zero_extendqisi2
	l.sfeq 	r3,r11
	l.bf	.L109
	l.nop			# nop delay slot
	l.lhz   	r3,224(r2)	 # zero_extendqisi2
	l.sflts 	r3,r4
	l.bf	.L109
	l.nop			# nop delay slot
	l.lwz   	r11,236(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L109
	l.nop			# nop delay slot
	l.lwz   	r3,228(r2)	 # SI load
	l.lwz   	r5,0(r11)	 # SI load
	l.addi  	r3,r3,1
	l.lwz   	r4,232(r2)	 # SI load
	l.sw    	236(r2),r5	 # SI store
	l.sfles 	r3,r4
	l.bf	.L108	# delay slot filled
	l.sw    	228(r2),r3	 # SI store
	l.sw    	232(r2),r3	 # SI store
.L108:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L109:
	l.jal   	sqlite3Malloc	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.sub   	r3,r0,r11
	l.or    	r3,r11,r3
	l.sfltsi	r3,0
	l.bf	.L108	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r11,r0,0	 # move immediate I
	l.sb    	30(r2),r3	    # movqi
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L107:
	l.addi	r1,r1,8
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3Malloc	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE91:
	.size	sqlite3DbMallocRaw, .-sqlite3DbMallocRaw
	.align	4
.proc	sqlite3StrAccumReset
	.type	sqlite3StrAccumReset, @function
sqlite3StrAccumReset:
.LFB103:
	l.sw    	-8(r1),r2	 # SI store
.LCFI69:
	l.lwz   	r4,8(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI70:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,4(r3)	 # SI load
	l.sfeq 	r4,r3
.LCFI71:
	l.bf	.L113	# delay slot filled
	l.addi  	r1,r1,-8
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
.L113:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	8(r2),r3	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE103:
	.size	sqlite3StrAccumReset, .-sqlite3StrAccumReset
	.align	4
.proc	sqlite3Utf8Read
	.type	sqlite3Utf8Read, @function
sqlite3Utf8Read:
.LFB116:
	l.sw    	-4(r1),r2	 # SI store
.LCFI72:
	l.addi  	r1,r1,-4
.LCFI73:
	l.lbz   	r11,0(r3)	 # zero_extendqisi2
	l.sflesi	r11,191
	l.bf	.L115	# delay slot filled
	l.addi  	r3,r3,1
	l.movhi  	r2,hi(sqlite3Utf8Trans1)
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3Utf8Trans1)
	l.andi  	r6,r5,192
	l.add   	r11,r11,r2
	l.sfnei	r6,128
	l.bf	.L116	# delay slot filled
	l.lbz   	r11,-192(r11)	 # zero_extendqisi2
.L121:
	l.addi  	r3,r3,1
	l.andi  	r7,r5,63
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.slli  	r11,r11,6
	l.andi  	r6,r5,192
	l.sfeqi	r6,128
	l.bf	.L121	# delay slot filled
	l.add   	r11,r7,r11
.L116:
	l.sflesi	r11,127
	l.bnf	.L123
	l.nop			# nop delay slot
.L120:
	l.ori   	r11,r0,65533	 # move immediate K
.L115:
	l.addi	r1,r1,4
	l.sw    	0(r4),r3	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L123:
	l.addi  	r2,r0,-2048	 # move immediate I
	l.and   	r5,r11,r2
	l.ori   	r2,r0,55296	 # move immediate K
	l.sfeq 	r5,r2
	l.bf	.L120
	l.nop			# nop delay slot
	l.addi  	r2,r0,-2	 # move immediate I
	l.and   	r5,r11,r2
	l.ori   	r2,r0,65534	 # move immediate K
	l.sfeq 	r5,r2
	l.bnf	.L115
	l.nop			# nop delay slot
	l.j     	.L115	# delay slot filled
	l.ori   	r11,r0,65533	 # move immediate K
.LFE116:
	.size	sqlite3Utf8Read, .-sqlite3Utf8Read
	.align	4
.proc	sqlite3Utf8CharLen
	.type	sqlite3Utf8CharLen, @function
sqlite3Utf8CharLen:
.LFB119:
	l.ori   	r5,r3,0	 # move reg to reg
	l.sfltsi	r4,0
	l.bf	.L125	# delay slot filled
	l.addi  	r6,r0,-1	 # move immediate I
	l.add   	r6,r3,r4
.L125:
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sfgtu 	r6,r3
	l.bf	.L127	# delay slot filled
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.addi  	r7,r0,0	 # movqi: move immediate
.L127:
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.sfeqi	r7,0
	l.bf	.L135	# delay slot filled
	l.sfeqi	r4,0
	l.bf	.L135	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L142	# delay slot filled
	l.sfgtui	r4,191
.L139:
	l.lbz   	r4,0(r5)	 # zero_extendqisi2
.L129:
	l.addi  	r11,r11,1
.L140:
	l.sfltu 	r5,r6
	l.bf	.L133	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L133:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L126	# delay slot filled
	l.sfnei	r4,0
	l.bnf	.L126	# delay slot filled
	l.sfgtui	r4,191
.L142:
	l.bnf	.L139	# delay slot filled
	l.addi  	r5,r5,1
	l.lbz   	r4,0(r5)	 # zero_extendqisi2
	l.andi  	r3,r4,192
	l.sfnei	r3,128
	l.bf	.L129
	l.nop			# nop delay slot
	l.addi  	r5,r5,1
.L141:
	l.lbz   	r4,0(r5)	 # zero_extendqisi2
	l.andi  	r3,r4,192
	l.sfeqi	r3,128
	l.bf	.L141	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.j     	.L140	# delay slot filled
	l.addi  	r11,r11,1
.L135:
	l.addi  	r11,r0,0	 # move immediate I
.L126:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE119:
	.size	sqlite3Utf8CharLen, .-sqlite3Utf8CharLen
	.align	4
.proc	sqlite3Dequote
	.type	sqlite3Dequote, @function
sqlite3Dequote:
.LFB127:
	l.sw    	-4(r1),r2	 # SI store
.LCFI74:
	l.addi  	r11,r0,-1	 # move immediate I
	l.sfeqi	r3,0
.LCFI75:
	l.bnf	.L160	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi	r1,r1,4
.L162:
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L160:
	l.lbs   	r8,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r8,39
	l.bf	.L146	# delay slot filled
	l.sfgtsi	r8,39
	l.bf	.L147	# delay slot filled
	l.sfeqi	r8,91
	l.sfeqi	r8,34
	l.bf	.L146	# delay slot filled
	l.addi  	r11,r0,-1	 # move immediate I
	l.j     	.L162	# delay slot filled
	l.addi	r1,r1,4
.L147:
	l.bnf	.L161	# delay slot filled
	l.sfeqi	r8,96
	l.addi  	r8,r0,93	 # move immediate I
.L146:
	l.lbs   	r6,1(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r6,0
	l.bf	.L148	# delay slot filled
	l.ori   	r11,r6,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r7,r3,0	 # move reg to reg
	l.ori   	r12,r4,0	 # move reg to reg
	l.j     	.L152	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
.L149:
	l.sb    	0(r7),r6	    # movqi
	l.ori   	r11,r4,0	 # move reg to reg
.L151:
	l.addi  	r5,r5,1
	l.addi  	r4,r4,1
	l.add   	r6,r3,r5
	l.ori   	r12,r5,0	 # move reg to reg
	l.lbs   	r6,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bnf	.L158	# delay slot filled
	l.addi  	r7,r7,1
.L152:
	l.sfne 	r8,r6
	l.bf	.L149	# delay slot filled
	l.addi  	r11,r4,-1
	l.add   	r12,r3,r12
	l.lbs   	r6,1(r12)	 # extendqisi2_no_sext_mem
	l.sfeq 	r6,r8
	l.bnf	.L158	# delay slot filled
	l.addi  	r5,r5,1
	l.sb    	0(r7),r8	    # movqi
	l.j     	.L151	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
.L158:
	l.ori   	r6,r11,0	 # move reg to reg
.L148:
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.add   	r6,r3,r6
	l.sb    	0(r6),r2	    # movqi
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L161:
	l.bf	.L146	# delay slot filled
	l.addi  	r11,r0,-1	 # move immediate I
	l.j     	.L162	# delay slot filled
	l.addi	r1,r1,4
.LFE127:
	.size	sqlite3Dequote, .-sqlite3Dequote
	.align	4
.proc	sqlite3StrICmp
	.type	sqlite3StrICmp, @function
sqlite3StrICmp:
.LFB128:
	l.sw    	-4(r1),r2	 # SI store
.LCFI76:
	l.ori   	r5,r4,0	 # move reg to reg
	l.lbz   	r6,0(r3)	 # zero_extendqisi2
	l.sfnei	r6,0
.LCFI77:
	l.bnf	.L170	# delay slot filled
	l.addi  	r1,r1,-4
	l.movhi  	r2,hi(sqlite3UpperToLower)
	l.lbz   	r7,0(r4)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3UpperToLower)
	l.add   	r6,r6,r2
	l.add   	r7,r7,r2
	l.lbz   	r4,0(r6)	 # zero_extendqisi2
	l.lbz   	r6,0(r7)	 # zero_extendqisi2
	l.sfne 	r4,r6
	l.bnf	.L172	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r3,r3,-1
	l.j     	.L171	# delay slot filled
	l.addi	r1,r1,4
.L166:
	l.movhi  	r2,hi(sqlite3UpperToLower)
	l.lbz   	r7,0(r5)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3UpperToLower)
	l.lbz   	r4,0(r6)	 # zero_extendqisi2
	l.add   	r7,r7,r2
	l.lbz   	r6,0(r7)	 # zero_extendqisi2
	l.sfeq 	r4,r6
	l.bnf	.L165	# delay slot filled
	l.addi  	r3,r3,1
.L172:
	l.movhi  	r2,hi(sqlite3UpperToLower)
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3UpperToLower)
	l.addi  	r5,r5,1
	l.sfnei	r4,0
	l.bf	.L166	# delay slot filled
	l.add   	r6,r4,r2
	l.lbz   	r3,0(r5)	 # zero_extendqisi2
	l.add   	r3,r3,r2
	l.lbz   	r6,0(r3)	 # zero_extendqisi2
.L165:
	l.addi	r1,r1,4
.L171:
	l.sub   	r11,r4,r6
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L170:
	l.movhi  	r2,hi(sqlite3UpperToLower)
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3UpperToLower)
	l.ori   	r4,r6,0	 # move reg to reg
	l.add   	r3,r3,r2
	l.j     	.L165	# delay slot filled
	l.lbz   	r6,0(r3)	 # zero_extendqisi2
.LFE128:
	.size	sqlite3StrICmp, .-sqlite3StrICmp
	.align	4
.proc	sqlite3StrNICmp
	.type	sqlite3StrNICmp, @function
sqlite3StrNICmp:
.LFB129:
	l.sw    	-4(r1),r2	 # SI store
.LCFI78:
	l.addi  	r6,r5,-1
	l.sflesi	r5,0
.LCFI79:
	l.bf	.L174	# delay slot filled
	l.addi  	r1,r1,-4
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L174	# delay slot filled
	l.movhi  	r2,hi(sqlite3UpperToLower)
	l.lbz   	r8,0(r4)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3UpperToLower)
	l.add   	r5,r5,r2
	l.add   	r8,r8,r2
	l.lbz   	r7,0(r5)	 # zero_extendqisi2
	l.lbz   	r5,0(r8)	 # zero_extendqisi2
	l.sfne 	r7,r5
	l.bnf	.L182	# delay slot filled
	l.addi  	r6,r6,-1
	l.addi  	r6,r6,1
	l.j     	.L181	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L180:
	l.movhi  	r2,hi(sqlite3UpperToLower)
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3UpperToLower)
	l.sfeqi	r5,0
	l.bf	.L174	# delay slot filled
	l.add   	r7,r5,r2
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.add   	r5,r5,r2
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.sfeq 	r7,r5
	l.bnf	.L181	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r6,r6,-1
.L182:
	l.addi  	r3,r3,1
	l.addi  	r5,r6,1
	l.sflesi	r5,0
	l.bnf	.L180	# delay slot filled
	l.addi  	r4,r4,1
.L174:
	l.addi  	r11,r0,0	 # move immediate I
.L181:
	l.sflts 	r6,r11
	l.bf	.L176
	l.nop			# nop delay slot
	l.movhi  	r2,hi(sqlite3UpperToLower)
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3UpperToLower)
	l.add   	r4,r5,r2
	l.add   	r3,r3,r2
	l.lbz   	r11,0(r4)	 # zero_extendqisi2
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.sub   	r11,r11,r3
.L176:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE129:
	.size	sqlite3StrNICmp, .-sqlite3StrNICmp
	.align	4
.proc	sqlite3IsNumber
	.type	sqlite3IsNumber, @function
sqlite3IsNumber:
.LFB130:
	l.sw    	-4(r1),r2	 # SI store
.LCFI80:
	l.ori   	r6,r5,0	 # move reg to reg
	l.sfeqi	r5,1
.LCFI81:
	l.bf	.L184	# delay slot filled
	l.addi  	r1,r1,-4
	l.sfnei	r6,3
	l.bnf	.L209	# delay slot filled
	l.addi  	r5,r0,2	 # move immediate I
.L184:
	l.lbs   	r6,0(r3)	 # extendqisi2_no_sext_mem
	l.xori  	r7,r6,43
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r7,r7,-1
	l.sfltsi	r7,0
	l.bf	.L202	# delay slot filled
	l.xori  	r7,r6,45
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r7,r7,-1
	l.sfgesi	r7,0
	l.bnf	.L202
	l.nop			# nop delay slot
.L185:
	l.movhi  	r2,hi(sqlite3CtypeMap)
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3CtypeMap)
	l.add   	r6,r6,r2
	l.lbz   	r11,0(r6)	 # zero_extendqisi2
	l.andi  	r11,r11,4
	l.sfeqi	r11,0
	l.bf	.L187	# delay slot filled
	l.add   	r3,r3,r5
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	0(r4),r2	 # SI store
	l.movhi  	r2,hi(sqlite3CtypeMap)
	l.lbs   	r7,0(r3)	 # extendqisi2_no_sext_mem
	l.ori   	r2,r2,lo(sqlite3CtypeMap)
	l.andi  	r6,r7,0xff	 # zero_extendqisi2
	l.add   	r6,r6,r2
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.andi  	r6,r6,4
	l.sfeqi	r6,0
	l.bf	.L188	# delay slot filled
	l.add   	r6,r3,r5
.L189:
	l.lbs   	r7,0(r6)	 # extendqisi2_no_sext_mem
	l.movhi  	r2,hi(sqlite3CtypeMap)
	l.andi  	r8,r7,0xff	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3CtypeMap)
	l.ori   	r3,r6,0	 # move reg to reg
	l.add   	r8,r8,r2
	l.lbz   	r8,0(r8)	 # zero_extendqisi2
	l.andi  	r8,r8,4
	l.sfnei	r8,0
	l.bf	.L189	# delay slot filled
	l.add   	r6,r6,r5
.L188:
	l.sfnei	r7,46
	l.bnf	.L210	# delay slot filled
	l.movhi  	r2,hi(sqlite3CtypeMap)
.L190:
	l.lbs   	r11,0(r3)	 # extendqisi2_no_sext_mem
	l.xori  	r6,r11,69
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.addi  	r6,r6,-1
	l.sfltsi	r6,0
	l.bnf	.L211	# delay slot filled
	l.xori  	r6,r11,101
.L203:
	l.add   	r3,r3,r5
	l.lbs   	r6,0(r3)	 # extendqisi2_no_sext_mem
	l.xori  	r7,r6,45
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r7,r7,-1
	l.sfltsi	r7,0
	l.bf	.L204	# delay slot filled
	l.xori  	r7,r6,43
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r7,r7,-1
	l.sfgesi	r7,0
	l.bf	.L212	# delay slot filled
	l.movhi  	r2,hi(sqlite3CtypeMap)
.L204:
	l.add   	r3,r3,r5
	l.lbs   	r6,0(r3)	 # extendqisi2_no_sext_mem
	l.movhi  	r2,hi(sqlite3CtypeMap)
.L212:
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3CtypeMap)
	l.add   	r6,r6,r2
	l.lbz   	r11,0(r6)	 # zero_extendqisi2
	l.andi  	r11,r11,4
	l.sfeqi	r11,0
	l.bf	.L187	# delay slot filled
	l.add   	r3,r3,r5
.L196:
	l.movhi  	r2,hi(sqlite3CtypeMap)
	l.lbz   	r6,0(r3)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3CtypeMap)
	l.ori   	r7,r3,0	 # move reg to reg
	l.add   	r6,r6,r2
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.andi  	r6,r6,4
	l.sfnei	r6,0
	l.bf	.L196	# delay slot filled
	l.add   	r3,r3,r5
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	0(r4),r3	 # SI store
	l.lbs   	r11,0(r7)	 # extendqisi2_no_sext_mem
	l.andi  	r11,r11,0xff	 # zero_extendqisi2
	l.addi  	r11,r11,-1
	l.srli  	r11,r11,31
.L187:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L202:
	l.add   	r3,r3,r5
	l.j     	.L185	# delay slot filled
	l.lbs   	r6,0(r3)	 # extendqisi2_no_sext_mem
.L209:
	l.j     	.L184	# delay slot filled
	l.addi  	r3,r3,1
.L211:
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.addi  	r6,r6,-1
	l.sfgesi	r6,0
	l.bnf	.L203
	l.nop			# nop delay slot
	l.andi  	r11,r11,0xff	 # zero_extendqisi2
	l.addi  	r11,r11,-1
	l.j     	.L187	# delay slot filled
	l.srli  	r11,r11,31
.L210:
	l.add   	r3,r3,r5
	l.lbz   	r6,0(r3)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3CtypeMap)
	l.add   	r6,r6,r2
	l.lbz   	r11,0(r6)	 # zero_extendqisi2
	l.andi  	r11,r11,4
	l.sfeqi	r11,0
	l.bf	.L187	# delay slot filled
	l.add   	r6,r3,r5
.L191:
	l.movhi  	r2,hi(sqlite3CtypeMap)
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3CtypeMap)
	l.ori   	r3,r6,0	 # move reg to reg
	l.add   	r7,r7,r2
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.andi  	r7,r7,4
	l.sfnei	r7,0
	l.bf	.L191	# delay slot filled
	l.add   	r6,r6,r5
	l.addi  	r6,r0,1	 # move immediate I
	l.j     	.L190	# delay slot filled
	l.sw    	0(r4),r6	 # SI store
.LFE130:
	.size	sqlite3IsNumber, .-sqlite3IsNumber
	.section	.rodata
	.align	4
.LC11:
	.long	1076101120
	.long	0
	.align	4
.LC12:
	.long	1295535875
	.long	3913284085
	.align	4
.LC13:
	.long	1128383353
	.long	937459712
	.align	4
.LC14:
	.long	1086556160
	.long	0
	.section .text
	.align	4
.proc	sqlite3AtoF
	.type	sqlite3AtoF, @function
sqlite3AtoF:
.LFB131:
	l.sw    	-44(r1),r2	 # SI store
.LCFI82:
	l.sw    	-16(r1),r26	 # SI store
.LCFI83:
	l.sw    	-8(r1),r30	 # SI store
.LCFI84:
	l.sw    	-4(r1),r9	 # SI store
.LCFI85:
	l.sw    	-40(r1),r14	 # SI store
.LCFI86:
	l.sw    	-36(r1),r16	 # SI store
.LCFI87:
	l.sw    	-32(r1),r18	 # SI store
.LCFI88:
	l.sw    	-28(r1),r20	 # SI store
.LCFI89:
	l.sw    	-24(r1),r22	 # SI store
.LCFI90:
	l.sw    	-20(r1),r24	 # SI store
.LCFI91:
	l.sw    	-12(r1),r28	 # SI store
.LCFI92:
	l.ori   	r30,r4,0	 # move reg to reg
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.ori   	r26,r3,0	 # move reg to reg
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.andi  	r3,r5,0xff	 # zero_extendqisi2
	l.addi  	r1,r1,-48
.LCFI93:
	l.add   	r3,r3,r4
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L214	# delay slot filled
	l.ori   	r2,r26,0	 # move reg to reg
	l.addi  	r2,r2,1
.L275:
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.andi  	r6,r5,0xff	 # zero_extendqisi2
	l.add   	r6,r6,r7
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.andi  	r6,r6,1
	l.sfnei	r6,0
	l.bf	.L275	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
.L214:
	l.sfnei	r5,45
	l.bnf	.L267	# delay slot filled
	l.sfnei	r5,43
	l.addi  	r4,r0,1	 # move immediate I
	l.bnf	.L268	# delay slot filled
	l.sw    	0(r1),r4	 # SI store
.L217:
	l.lbs   	r14,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r14,48
	l.bf	.L218
	l.nop			# nop delay slot
	l.addi  	r2,r2,1
.L276:
	l.lbs   	r14,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r14,48
	l.bf	.L276	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
.L218:
	l.movhi  	r5,hi(sqlite3CtypeMap)
	l.andi  	r3,r14,0xff	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3CtypeMap)
	l.add   	r3,r3,r5
	l.lbz   	r16,0(r3)	 # zero_extendqisi2
	l.andi  	r16,r16,4
	l.sfeqi	r16,0
	l.bf	.L249
	l.nop			# nop delay slot
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r18,r16,0	 # move reg to reg
	l.ori   	r20,r16,0	 # move reg to reg
.L221:
	l.movhi  	r7,hi(.LC11)
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC11)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r3,r14,-48
	l.ori   	r20,r11,0	 # move reg to reg
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r18,r12,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3	# delay slot filled
	l.addi  	r2,r2,1
	l.lbs   	r14,0(r2)	 # extendqisi2_no_sext_mem
	l.movhi  	r3,hi(sqlite3CtypeMap)
	l.andi  	r6,r14,0xff	 # zero_extendqisi2
	l.ori   	r3,r3,lo(sqlite3CtypeMap)
	l.addi  	r16,r16,1
	l.add   	r6,r6,r3
	l.ori   	r18,r11,0	 # move reg to reg
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.andi  	r6,r6,4
	l.sfnei	r6,0
	l.bf	.L221	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
.L220:
	l.sfeqi	r14,46
	l.bf	.L269	# delay slot filled
	l.sfeqi	r16,0
.L223:
	l.xori  	r3,r14,69
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bf	.L253	# delay slot filled
	l.xori  	r3,r14,101
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bnf	.L253
	l.nop			# nop delay slot
.L232:
	l.lwz   	r3,0(r1)	 # SI load
	l.sfnei	r3,-1
	l.bf	.L277	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.movhi 	r4,hi(-2147483648)	 # move immediate M
	l.add   	r18,r18,r4
	l.ori   	r5,r18,0	 # move reg to reg
.L277:
	l.ori   	r6,r20,0	 # move reg to reg
	l.sub   	r11,r2,r26
		l.sw    	0(r30), r5
		l.sw    	4(r30), r6
	l.addi	r1,r1,48
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L253:
	l.addi  	r2,r2,1
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,45
	l.bnf	.L270	# delay slot filled
	l.sfnei	r5,43
	l.bnf	.L271	# delay slot filled
	l.addi  	r22,r0,1	 # move immediate I
.L235:
	l.movhi  	r6,hi(sqlite3CtypeMap)
	l.andi  	r3,r5,0xff	 # zero_extendqisi2
	l.ori   	r6,r6,lo(sqlite3CtypeMap)
	l.add   	r3,r3,r6
	l.lbz   	r12,0(r3)	 # zero_extendqisi2
	l.andi  	r12,r12,4
	l.sfeqi	r12,0
	l.bf	.L243	# delay slot filled
	l.movhi 	r11,hi(1072693248)	 # move immediate M
	l.addi  	r14,r0,0	 # move immediate I
.L237:
	l.slli  	r6,r14,3
	l.add   	r14,r14,r14
	l.addi  	r2,r2,1
	l.add   	r14,r14,r6
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.add   	r14,r14,r5
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.andi  	r6,r5,0xff	 # zero_extendqisi2
	l.add   	r6,r6,r7
	l.lbz   	r12,0(r6)	 # zero_extendqisi2
	l.andi  	r12,r12,4
	l.sfnei	r12,0
	l.bf	.L237	# delay slot filled
	l.addi  	r14,r14,-48
	l.ori   	r16,r14,0	 # move reg to reg
	l.sflesi	r14,63
	l.bf	.L238	# delay slot filled
	l.movhi 	r11,hi(1072693248)	 # move immediate M
	l.movhi 	r11,hi(1072693248)	 # move immediate M
	l.movhi  	r7,hi(.LC12)
.L278:
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC12)
	l.ori   	r4,r12,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r14,r14,-64
	l.sfgtsi	r14,63
	l.bf	.L278	# delay slot filled
	l.movhi  	r7,hi(.LC12)
	l.andi  	r14,r16,63
.L238:
	l.sflesi	r14,15
	l.bf	.L279	# delay slot filled
	l.sflesi	r14,3
	l.ori   	r16,r14,0	 # move reg to reg
	l.movhi  	r7,hi(.LC13)
.L280:
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC13)
	l.ori   	r4,r12,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r16,r16,-16
	l.sfgtsi	r16,15
	l.bf	.L280	# delay slot filled
	l.movhi  	r7,hi(.LC13)
	l.andi  	r14,r14,15
	l.sflesi	r14,3
.L279:
	l.bf	.L281	# delay slot filled
	l.sflesi	r14,0
	l.ori   	r16,r14,0	 # move reg to reg
	l.movhi  	r7,hi(.LC14)
.L282:
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC14)
	l.ori   	r4,r12,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r16,r16,-4
	l.sfgtsi	r16,3
	l.bf	.L282	# delay slot filled
	l.movhi  	r7,hi(.LC14)
	l.andi  	r14,r14,3
	l.sflesi	r14,0
.L281:
	l.bf	.L283	# delay slot filled
	l.sfnei	r22,-1
	l.movhi  	r7,hi(.LC11)
.L284:
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC11)
	l.ori   	r4,r12,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r14,r14,-1
	l.sfnei	r14,0
	l.bf	.L284	# delay slot filled
	l.movhi  	r7,hi(.LC11)
.L243:
	l.sfnei	r22,-1
.L283:
	l.bnf	.L272	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r6,r12,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L232	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
.L269:
	l.bf	.L224	# delay slot filled
	l.addi  	r2,r2,1
	l.lbs   	r14,0(r2)	 # extendqisi2_no_sext_mem
	l.movhi 	r24,hi(1072693248)	 # move immediate M
	l.addi  	r22,r0,0	 # move immediate I
.L225:
	l.movhi  	r28,hi(.LC11)
.L274:
	l.andi  	r3,r14,0xff	 # zero_extendqisi2
	l.j     	.L266	# delay slot filled
	l.ori   	r28,r28,lo(.LC11)
.L254:
	l.addi  	r2,r2,1
	l.sfgtsi	r16,17
	l.bf	.L230	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
		l.lwz   	r5, 0(r28)
		l.lwz   	r6, 4(r28)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r16,r16,1
	l.addi  	r3,r14,-48
	l.ori   	r20,r11,0	 # move reg to reg
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r18,r12,0	 # move reg to reg
	l.ori   	r7,r20,0	 # move reg to reg
	l.ori   	r8,r18,0	 # move reg to reg
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
		l.or    	r3, r7, r0
		l.or    	r4, r8, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.ori   	r7,r24,0	 # move reg to reg
	l.ori   	r8,r22,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
		l.lwz   	r5, 0(r28)
		l.lwz   	r6, 4(r28)
		l.or    	r3, r7, r0
		l.or    	r4, r8, r0
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r22,r12,0	 # move reg to reg
.L230:
	l.lbs   	r14,0(r2)	 # extendqisi2_no_sext_mem
	l.andi  	r3,r14,0xff	 # zero_extendqisi2
.L266:
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.add   	r3,r3,r4
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,4
	l.sfnei	r3,0
	l.bf	.L254	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	__divdf3	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L223	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
.L267:
	l.addi  	r3,r0,-1	 # move immediate I
	l.addi  	r2,r2,1
	l.j     	.L217	# delay slot filled
	l.sw    	0(r1),r3	 # SI store
.L268:
	l.j     	.L217	# delay slot filled
	l.add   	r2,r2,r4
.L224:
	l.lbs   	r14,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r14,48
	l.bnf	.L273	# delay slot filled
	l.movhi 	r24,hi(1072693248)	 # move immediate M
	l.ori   	r22,r16,0	 # move reg to reg
.L229:
	l.movhi  	r3,hi(.LC11)
	l.ori   	r7,r24,0	 # move reg to reg
	l.ori   	r8,r22,0	 # move reg to reg
	l.ori   	r3,r3,lo(.LC11)
		l.lwz   	r5, 0(r3)
		l.lwz   	r6, 4(r3)
		l.or    	r3, r7, r0
		l.or    	r4, r8, r0
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r2,r2,1
	l.lbs   	r14,0(r2)	 # extendqisi2_no_sext_mem
	l.ori   	r24,r11,0	 # move reg to reg
	l.sfeqi	r14,48
	l.bf	.L229	# delay slot filled
	l.ori   	r22,r12,0	 # move reg to reg
	l.j     	.L274	# delay slot filled
	l.movhi  	r28,hi(.LC11)
.L270:
	l.addi  	r2,r2,1
	l.addi  	r22,r0,-1	 # move immediate I
	l.j     	.L235	# delay slot filled
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
.L272:
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	__divdf3	# delay slot filled
	l.ori   	r6,r12,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L232	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
.L271:
	l.add   	r2,r2,r22
	l.j     	.L235	# delay slot filled
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
.L249:
	l.ori   	r18,r16,0	 # move reg to reg
	l.j     	.L220	# delay slot filled
	l.ori   	r20,r16,0	 # move reg to reg
.L273:
	l.j     	.L225	# delay slot filled
	l.ori   	r22,r16,0	 # move reg to reg
.LFE131:
	.size	sqlite3AtoF, .-sqlite3AtoF
	.align	4
.proc	sqlite3GetInt32
	.type	sqlite3GetInt32, @function
sqlite3GetInt32:
.LFB135:
	l.sw    	-4(r1),r2	 # SI store
.LCFI94:
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,45
.LCFI95:
	l.bnf	.L307	# delay slot filled
	l.addi  	r1,r1,-4
	l.sfnei	r5,43
	l.bnf	.L308	# delay slot filled
	l.addi  	r25,r0,0	 # move immediate I
.L287:
	l.sfnei	r5,48
	l.bf	.L313	# delay slot filled
	l.addi  	r13,r0,0	 # move immediate I
	l.addi  	r3,r3,1
.L314:
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,48
	l.bf	.L314	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r3,r3,-1
	l.addi  	r13,r0,0	 # move immediate I
.L313:
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L290	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L309:
	l.addi  	r6,r0,1	 # move immediate I
	l.sfltu 	r7,r15
	l.bf	.L292	# delay slot filled
	l.add   	r5,r5,r5
	l.addi  	r6,r0,0	 # move immediate I
.L292:
	l.add   	r5,r6,r5
	l.addi  	r15,r0,1	 # move immediate I
	l.slli  	r6,r5,2
	l.sfltu 	r17,r7
	l.srai  	r8,r8,31
	l.ori   	r7,r15,0	 # move reg to reg
	l.bf	.L293	# delay slot filled
	l.or    	r6,r21,r6
	l.addi  	r15,r0,0	 # move immediate I
.L293:
	l.add   	r6,r5,r6
	l.sfltu 	r19,r17
	l.bf	.L294	# delay slot filled
	l.add   	r15,r15,r6
	l.addi  	r7,r0,0	 # move immediate I
.L294:
	l.add   	r8,r15,r8
	l.ori   	r12,r23,0	 # move reg to reg
	l.add   	r7,r7,r8
	l.ori   	r11,r7,0	 # move reg to reg
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
.L290:
	l.add   	r7,r3,r13
	l.ori   	r15,r6,0	 # move reg to reg
	l.lbs   	r8,0(r7)	 # extendqisi2_no_sext_mem
	l.add   	r7,r6,r6
	l.addi  	r8,r8,-48
	l.addi  	r13,r13,1
	l.sfltsi	r8,0
	l.slli  	r17,r7,2
	l.bf	.L295	# delay slot filled
	l.srli  	r21,r7,30
	l.add   	r17,r7,r17
	l.sflesi	r8,9
	l.bnf	.L295	# delay slot filled
	l.add   	r19,r17,r8
	l.sfeqi	r13,11
	l.bnf	.L309	# delay slot filled
	l.ori   	r23,r19,0	 # move reg to reg
.L304:
	l.addi	r1,r1,4
.L312:
	l.addi  	r11,r0,0	 # move immediate I
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L295:
	l.sub   	r7,r6,r25
	l.sfgtu 	r7,r6
	l.bnf	.L310	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L299:
	l.sub   	r3,r5,r3
	l.sfgtsi	r3,0
	l.bf	.L304	# delay slot filled
	l.sfnei	r3,0
	l.bnf	.L311	# delay slot filled
	l.movhi 	r2,hi(2147418112)	 # move immediate M
	l.sfeqi	r25,0
.L315:
	l.bf	.L297	# delay slot filled
	l.sub   	r3,r0,r6
	l.ori   	r6,r3,0	 # move reg to reg
.L297:
	l.addi	r1,r1,4
	l.addi  	r11,r0,1	 # move immediate I
	l.sw    	0(r4),r6	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L307:
	l.addi  	r3,r3,1
	l.addi  	r25,r0,1	 # move immediate I
	l.j     	.L287	# delay slot filled
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
.L308:
	l.addi  	r3,r3,1
	l.j     	.L287	# delay slot filled
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
.L310:
	l.j     	.L299	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L311:
	l.ori   	r2,r2,65535
	l.sfgtu 	r7,r2
	l.bnf	.L315	# delay slot filled
	l.sfeqi	r25,0
	l.j     	.L312	# delay slot filled
	l.addi	r1,r1,4
.LFE135:
	.size	sqlite3GetInt32, .-sqlite3GetInt32
	.align	4
.proc	sqlite3PutVarint
	.type	sqlite3PutVarint, @function
sqlite3PutVarint:
.LFB136:
	l.sw    	-4(r1),r2	 # SI store
.LCFI96:
	l.movhi 	r2,hi(-16777216)	 # move immediate M
	l.and   	r6,r4,r2
	l.sfeqi	r6,0
.LCFI97:
	l.bf	.L317	# delay slot filled
	l.addi  	r1,r1,-16
	l.slli  	r7,r4,24
	l.srli  	r6,r5,8
	l.srli  	r4,r4,8
	l.sb    	8(r3),r5	    # movqi
	l.or    	r6,r7,r6
	l.addi  	r5,r0,7	 # move immediate I
	l.addi  	r2,r0,-128	 # move immediate I
.L326:
	l.add   	r8,r3,r5
	l.or    	r11,r6,r2
	l.slli  	r7,r4,25
	l.srli  	r6,r6,7
	l.addi  	r5,r5,-1
	l.sb    	0(r8),r11	    # movqi
	l.srli  	r4,r4,7
	l.sfnei	r5,-1
	l.bf	.L326	# delay slot filled
	l.or    	r6,r7,r6
	l.addi	r1,r1,16
	l.addi  	r11,r0,9	 # move immediate I
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L317:
	l.ori   	r13,r1,0	 # move reg to reg
.L321:
	l.slli  	r12,r4,25
	l.srli  	r11,r5,7
	l.addi  	r2,r0,-128	 # move immediate I
	l.srli  	r4,r4,7
	l.or    	r8,r5,r2
	l.add   	r7,r13,r6
	l.or    	r5,r12,r11
	l.sb    	0(r7),r8	    # movqi
	l.addi  	r11,r6,1
	l.or    	r8,r4,r5
	l.sfnei	r8,0
	l.bf	.L321	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.lbz   	r5,0(r1)	 # zero_extendqisi2
	l.andi  	r5,r5,127
	l.ori   	r4,r7,0	 # move reg to reg
	l.sb    	0(r1),r5	    # movqi
	l.addi  	r5,r1,-1
.L322:
	l.lbz   	r2,0(r4)	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.sb    	0(r3),r2	    # movqi
	l.sfne 	r4,r5
	l.bf	.L322	# delay slot filled
	l.addi  	r3,r3,1
	l.addi	r1,r1,16
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE136:
	.size	sqlite3PutVarint, .-sqlite3PutVarint
	.align	4
.proc	sqlite3PutVarint32
	.type	sqlite3PutVarint32, @function
sqlite3PutVarint32:
.LFB137:
	l.sw    	-8(r1),r2	 # SI store
.LCFI98:
	l.ori   	r5,r4,0	 # move reg to reg
	l.addi  	r2,r0,-16384	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI99:
	l.and   	r6,r5,r2
	l.addi  	r1,r1,-8
.LCFI100:
	l.sfnei	r6,0
	l.bf	.L328	# delay slot filled
	l.ori   	r4,r3,0	 # move reg to reg
	l.srli  	r3,r5,7
	l.addi  	r2,r0,-128	 # move immediate I
	l.andi  	r5,r5,127
	l.or    	r3,r3,r2
	l.sb    	1(r4),r5	    # movqi
	l.sb    	0(r4),r3	    # movqi
	l.addi	r1,r1,8
	l.addi  	r11,r0,2	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L328:
	l.addi	r1,r1,8
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3PutVarint	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE137:
	.size	sqlite3PutVarint32, .-sqlite3PutVarint32
	.align	4
.proc	sqlite3GetVarint
	.type	sqlite3GetVarint, @function
sqlite3GetVarint:
.LFB138:
	l.sw    	-4(r1),r2	 # SI store
.LCFI101:
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.andi  	r6,r5,128
	l.sfnei	r6,0
.LCFI102:
	l.bnf	.L340	# delay slot filled
	l.addi  	r1,r1,-4
	l.lbz   	r6,1(r3)	 # zero_extendqisi2
	l.andi  	r7,r6,128
	l.sfnei	r7,0
	l.bf	.L333	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.andi  	r5,r5,127
	l.sw    	0(r4),r7	 # SI store
	l.slli  	r5,r5,7
	l.or    	r6,r5,r6
	l.sw    	4(r4),r6	 # SI store
.L332:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L333:
	l.lbz   	r7,2(r3)	 # zero_extendqisi2
	l.slli  	r5,r5,14
	l.or    	r5,r7,r5
	l.andi  	r7,r5,128
	l.sfnei	r7,0
	l.bf	.L334	# delay slot filled
	l.movhi 	r2,hi(2031616)	 # move immediate M
	l.andi  	r6,r6,127
	l.ori   	r2,r2,49279
	l.slli  	r6,r6,7
	l.and   	r5,r5,r2
	l.addi	r1,r1,4
	l.or    	r5,r5,r6
	l.addi  	r11,r0,3	 # move immediate I
	l.sw    	0(r4),r7	 # SI store
	l.sw    	4(r4),r5	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L340:
	l.addi	r1,r1,4
	l.addi  	r11,r0,1	 # move immediate I
	l.sw    	4(r4),r5	 # SI store
	l.sw    	0(r4),r6	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L334:
	l.lbz   	r7,3(r3)	 # zero_extendqisi2
	l.slli  	r6,r6,14
	l.or    	r6,r7,r6
	l.ori   	r2,r2,49279
	l.andi  	r7,r6,128
	l.sfnei	r7,0
	l.bf	.L335	# delay slot filled
	l.and   	r5,r5,r2
	l.movhi 	r2,hi(2031616)	 # move immediate M
	l.slli  	r5,r5,7
	l.ori   	r2,r2,49279
	l.sw    	0(r4),r7	 # SI store
	l.and   	r6,r6,r2
	l.addi  	r11,r0,4	 # move immediate I
	l.or    	r5,r5,r6
	l.j     	.L332	# delay slot filled
	l.sw    	4(r4),r5	 # SI store
.L335:
	l.slli  	r8,r5,14
	l.lbz   	r7,4(r3)	 # zero_extendqisi2
	l.movhi 	r2,hi(2031616)	 # move immediate M
	l.or    	r7,r8,r7
	l.ori   	r2,r2,49279
	l.andi  	r8,r7,128
	l.sfnei	r8,0
	l.bf	.L336	# delay slot filled
	l.and   	r6,r6,r2
	l.slli  	r6,r6,7
	l.srli  	r5,r5,18
	l.addi  	r11,r0,5	 # move immediate I
	l.or    	r7,r6,r7
	l.sw    	0(r4),r5	 # SI store
	l.j     	.L332	# delay slot filled
	l.sw    	4(r4),r7	 # SI store
.L336:
	l.slli  	r11,r6,14
	l.lbz   	r8,5(r3)	 # zero_extendqisi2
	l.or    	r8,r11,r8
	l.slli  	r5,r5,7
	l.andi  	r11,r8,128
	l.sfnei	r11,0
	l.bf	.L337	# delay slot filled
	l.or    	r6,r5,r6
	l.movhi 	r2,hi(2031616)	 # move immediate M
	l.srli  	r6,r6,18
	l.ori   	r2,r2,49279
	l.addi  	r11,r0,6	 # move immediate I
	l.and   	r3,r7,r2
	l.sw    	0(r4),r6	 # SI store
	l.slli  	r3,r3,7
	l.or    	r8,r3,r8
	l.j     	.L332	# delay slot filled
	l.sw    	4(r4),r8	 # SI store
.L337:
	l.slli  	r7,r7,14
	l.lbz   	r5,6(r3)	 # zero_extendqisi2
	l.or    	r5,r7,r5
	l.andi  	r7,r5,128
	l.sfnei	r7,0
	l.bf	.L338	# delay slot filled
	l.movhi 	r2,hi(2031616)	 # move immediate M
	l.srli  	r6,r6,11
	l.ori   	r2,r2,49279
	l.addi  	r11,r0,7	 # move immediate I
	l.and   	r3,r8,r2
	l.movhi 	r2,hi(-266403840)	 # move immediate M
	l.slli  	r3,r3,7
	l.ori   	r2,r2,49279
	l.sw    	0(r4),r6	 # SI store
	l.and   	r5,r5,r2
	l.or    	r3,r3,r5
	l.j     	.L332	# delay slot filled
	l.sw    	4(r4),r3	 # SI store
.L338:
	l.slli  	r8,r8,14
	l.lbz   	r7,7(r3)	 # zero_extendqisi2
	l.or    	r7,r8,r7
	l.ori   	r2,r2,49279
	l.andi  	r8,r7,128
	l.sfnei	r8,0
	l.bf	.L339	# delay slot filled
	l.and   	r5,r5,r2
	l.movhi 	r2,hi(-266403840)	 # move immediate M
	l.slli  	r3,r5,7
	l.ori   	r2,r2,49279
	l.srli  	r6,r6,4
	l.and   	r7,r7,r2
	l.addi  	r11,r0,8	 # move immediate I
	l.or    	r3,r3,r7
	l.sw    	0(r4),r6	 # SI store
	l.j     	.L332	# delay slot filled
	l.sw    	4(r4),r3	 # SI store
.L339:
	l.addi  	r3,r3,8
	l.movhi 	r2,hi(2031616)	 # move immediate M
	l.slli  	r11,r5,15
	l.lbz   	r5,-4(r3)	 # zero_extendqisi2
	l.ori   	r2,r2,49279
	l.lbz   	r8,0(r3)	 # zero_extendqisi2
	l.andi  	r5,r5,127
	l.and   	r3,r7,r2
	l.slli  	r6,r6,4
	l.srli  	r5,r5,3
	l.slli  	r3,r3,8
	l.or    	r7,r11,r8
	l.or    	r5,r5,r6
	l.or    	r3,r7,r3
	l.sw    	0(r4),r5	 # SI store
	l.sw    	4(r4),r3	 # SI store
	l.j     	.L332	# delay slot filled
	l.addi  	r11,r0,9	 # move immediate I
.LFE138:
	.size	sqlite3GetVarint, .-sqlite3GetVarint
	.align	4
.proc	sqlite3GetVarint32
	.type	sqlite3GetVarint32, @function
sqlite3GetVarint32:
.LFB139:
	l.sw    	-8(r1),r2	 # SI store
.LCFI103:
	l.sw    	-4(r1),r9	 # SI store
.LCFI104:
	l.addi  	r6,r3,1
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbz   	r4,0(r6)	 # zero_extendqisi2
	l.andi  	r7,r4,128
	l.addi  	r1,r1,-16
.LCFI105:
	l.sfnei	r7,0
	l.bf	.L342	# delay slot filled
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.andi  	r5,r5,127
	l.addi  	r11,r0,2	 # move immediate I
	l.slli  	r5,r5,7
	l.or    	r4,r5,r4
	l.sw    	0(r2),r4	 # SI store
.L343:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L342:
	l.lbz   	r6,1(r6)	 # zero_extendqisi2
	l.slli  	r5,r5,14
	l.or    	r5,r6,r5
	l.andi  	r6,r5,128
	l.sfnei	r6,0
	l.bf	.L344	# delay slot filled
	l.andi  	r4,r4,127
	l.movhi 	r3,hi(2031616)	 # move immediate M
	l.ori   	r3,r3,49279
	l.slli  	r4,r4,7
	l.and   	r5,r5,r3
	l.addi  	r11,r0,3	 # move immediate I
	l.or    	r5,r5,r4
	l.sw    	0(r2),r5	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L344:
	l.jal   	sqlite3GetVarint	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r3,4(r1)	 # SI load
	l.j     	.L343	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
.LFE139:
	.size	sqlite3GetVarint32, .-sqlite3GetVarint32
	.align	4
.proc	sqlite3Get4byte
	.type	sqlite3Get4byte, @function
sqlite3Get4byte:
.LFB141:
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.lbz   	r4,1(r3)	 # zero_extendqisi2
	l.lbz   	r11,3(r3)	 # zero_extendqisi2
	l.slli  	r5,r5,24
	l.lbz   	r3,2(r3)	 # zero_extendqisi2
	l.slli  	r4,r4,16
	l.or    	r11,r11,r5
	l.slli  	r3,r3,8
	l.or    	r11,r11,r4
	l.jr    	r9	# delay slot filled
	l.or    	r11,r11,r3
.LFE141:
	.size	sqlite3Get4byte, .-sqlite3Get4byte
	.align	4
.proc	sqlite3HexToBlob
	.type	sqlite3HexToBlob, @function
sqlite3HexToBlob:
.LFB144:
	l.sw    	-12(r1),r2	 # SI store
.LCFI106:
	l.ori   	r2,r5,0	 # move reg to reg
	l.srli  	r5,r5,31
	l.sw    	-8(r1),r14	 # SI store
.LCFI107:
	l.sw    	-4(r1),r9	 # SI store
.LCFI108:
	l.add   	r5,r5,r2
	l.addi  	r1,r1,-12
.LCFI109:
	l.srai  	r5,r5,1
	l.ori   	r14,r4,0	 # move reg to reg
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r5,1
	l.sfeqi	r11,0
	l.bf	.L347	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r19,r2,-1
	l.sfles 	r19,r3
	l.bf	.L348
	l.nop			# nop delay slot
	l.ori   	r4,r14,0	 # move reg to reg
.L349:
	l.lbs   	r7,0(r4)	 # extendqisi2_no_sext_mem
	l.lbs   	r6,1(r4)	 # extendqisi2_no_sext_mem
	l.srai  	r12,r7,6
	l.srai  	r8,r6,6
	l.srai  	r13,r3,1
	l.andi  	r12,r12,1
	l.andi  	r8,r8,1
	l.slli  	r17,r12,3
	l.slli  	r15,r8,3
	l.add   	r13,r11,r13
	l.add   	r12,r17,r12
	l.add   	r8,r15,r8
	l.add   	r7,r12,r7
	l.add   	r8,r8,r6
	l.andi  	r7,r7,15
	l.andi  	r8,r8,15
	l.slli  	r6,r7,4
	l.addi  	r3,r3,2
	l.addi  	r4,r4,2
	l.or    	r6,r6,r8
	l.sfgts 	r19,r3
	l.bf	.L349	# delay slot filled
	l.sb    	0(r13),r6	    # movqi
	l.addi  	r3,r2,-2
	l.addi  	r2,r0,-2	 # move immediate I
	l.and   	r3,r3,r2
	l.addi  	r3,r3,2
	l.srai  	r3,r3,1
.L348:
	l.add   	r3,r11,r3
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	0(r3),r2	    # movqi
.L347:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE144:
	.size	sqlite3HexToBlob, .-sqlite3HexToBlob
	.align	4
.proc	sqlite3HashClear
	.type	sqlite3HashClear, @function
sqlite3HashClear:
.LFB148:
	l.sw    	-8(r1),r16	 # SI store
.LCFI110:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r16,r3,0	 # move reg to reg
	l.sw    	-16(r1),r2	 # SI store
.LCFI111:
	l.sw    	-4(r1),r9	 # SI store
.LCFI112:
	l.sw    	-12(r1),r14	 # SI store
.LCFI113:
	l.lwz   	r2,8(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI114:
	l.lwz   	r3,12(r3)	 # SI load
	l.jal   	sqlite3_free	# delay slot filled
	l.sw    	8(r16),r4	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	12(r16),r3	 # SI store
	l.sfeq 	r2,r3
	l.bf	.L353	# delay slot filled
	l.sw    	0(r16),r3	 # SI store
.L356:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r14,0(r2)	 # SI load
	l.sfnei	r14,0
	l.bf	.L356	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
.L353:
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	4(r16),r4	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE148:
	.size	sqlite3HashClear, .-sqlite3HashClear
	.align	4
.proc	findElementGivenHash
	.type	findElementGivenHash, @function
findElementGivenHash:
.LFB152:
	l.sw    	-20(r1),r2	 # SI store
.LCFI115:
	l.sw    	-12(r1),r16	 # SI store
.LCFI116:
	l.sw    	-8(r1),r18	 # SI store
.LCFI117:
	l.sw    	-4(r1),r9	 # SI store
.LCFI118:
	l.sw    	-16(r1),r14	 # SI store
.LCFI119:
	l.lwz   	r2,12(r3)	 # SI load
	l.addi  	r1,r1,-20
.LCFI120:
	l.ori   	r18,r4,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L358	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.slli  	r6,r6,3
	l.add   	r6,r2,r6
	l.lwz   	r2,4(r6)	 # SI load
	l.lwz   	r14,0(r6)	 # SI load
.L359:
	l.sfeqi	r14,0
	l.bnf	.L370	# delay slot filled
	l.sfeqi	r2,0
	l.j     	.L369	# delay slot filled
	l.addi	r1,r1,20
.L368:
	l.lwz   	r3,16(r2)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfne 	r3,r16
	l.bf	.L361	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.lwz   	r3,12(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L360
	l.nop			# nop delay slot
.L361:
	l.sfeqi	r14,0
	l.bf	.L364	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
.L370:
	l.bnf	.L368	# delay slot filled
	l.addi  	r14,r14,-1
.L360:
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L364:
	l.addi	r1,r1,20
.L369:
	l.ori   	r2,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L358:
	l.lwz   	r2,8(r3)	 # SI load
	l.j     	.L359	# delay slot filled
	l.lwz   	r14,4(r3)	 # SI load
.LFE152:
	.size	findElementGivenHash, .-findElementGivenHash
	.global __umodsi3
	.align	4
.proc	sqlite3HashFind
	.type	sqlite3HashFind, @function
sqlite3HashFind:
.LFB154:
	l.sw    	-16(r1),r2	 # SI store
.LCFI121:
	l.sw    	-12(r1),r14	 # SI store
.LCFI122:
	l.sw    	-8(r1),r16	 # SI store
.LCFI123:
	l.sw    	-4(r1),r9	 # SI store
.LCFI124:
	l.lwz   	r6,12(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI125:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfeqi	r6,0
	l.bf	.L372	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.sfles 	r5,r6
	l.bf	.L372	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
.L374:
	l.add   	r5,r14,r6
	l.movhi  	r3,hi(sqlite3UpperToLower)
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.ori   	r3,r3,lo(sqlite3UpperToLower)
	l.slli  	r8,r7,3
	l.add   	r5,r5,r3
	l.addi  	r6,r6,1
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.xor   	r5,r8,r5
	l.sfne 	r6,r2
	l.bf	.L374	# delay slot filled
	l.xor   	r7,r7,r5
	l.ori   	r3,r7,0	 # move reg to reg
	l.jal   	__umodsi3	# delay slot filled
	l.lwz   	r4,0(r16)	 # SI load
	l.ori   	r6,r11,0	 # move reg to reg
.L372:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	findElementGivenHash	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L375
	l.nop			# nop delay slot
	l.lwz   	r11,8(r11)	 # SI load
.L375:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE154:
	.size	sqlite3HashFind, .-sqlite3HashFind
	.align	4
.proc	sqliteErrorFromPosixError
	.type	sqliteErrorFromPosixError, @function
sqliteErrorFromPosixError:
.LFB159:
	l.sfeqi	r3,13
	l.bf	.L385	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
	l.sfgtsi	r3,13
	l.bnf	.L395	# delay slot filled
	l.sfeqi	r3,1
	l.sfeqi	r3,35
	l.bf	.L386	# delay slot filled
	l.sfgtsi	r3,35
	l.bnf	.L396	# delay slot filled
	l.sfeqi	r3,16
	l.sfeqi	r3,37
	l.bf	.L392	# delay slot filled
	l.sfeqi	r3,110
	l.bf	.L392
	l.nop			# nop delay slot
.L384:
	l.jr    	r9
	l.nop			# nop delay slot
.L395:
	l.bf	.L393	# delay slot filled
	l.sfgtsi	r3,1
	l.bnf	.L397	# delay slot filled
	l.sfeqi	r3,4
	l.bf	.L392	# delay slot filled
	l.sfeqi	r3,11
	l.bnf	.L384
	l.nop			# nop delay slot
.L392:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
.L385:
	l.xori  	r3,r4,2058
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L392
	l.nop			# nop delay slot
	l.xori  	r3,r11,3850
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L392
	l.nop			# nop delay slot
	l.xori  	r3,r11,3594
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L392
	l.nop			# nop delay slot
	l.xori  	r11,r11,2314
	l.sub   	r3,r0,r11
	l.or    	r11,r3,r11
	l.sfgesi	r11,0
	l.bf	.L392
	l.nop			# nop delay slot
.L393:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,3	 # move immediate I
.L396:
	l.bf	.L392
	l.nop			# nop delay slot
	l.jr    	r9
	l.nop			# nop delay slot
.L397:
	l.sfeqi	r3,0
	l.bnf	.L384
	l.nop			# nop delay slot
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
.L386:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,2826	 # move immediate I
.LFE159:
	.size	sqliteErrorFromPosixError, .-sqliteErrorFromPosixError
	.align	4
.proc	nolockCheckReservedLock
	.type	nolockCheckReservedLock, @function
nolockCheckReservedLock:
.LFB168:
	l.sw    	-4(r1),r2	 # SI store
.LCFI126:
	l.addi  	r1,r1,-4
.LCFI127:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.ori   	r11,r2,0	 # move reg to reg
	l.sw    	0(r4),r2	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE168:
	.size	nolockCheckReservedLock, .-nolockCheckReservedLock
	.align	4
.proc	nolockLock
	.type	nolockLock, @function
nolockLock:
.LFB169:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE169:
	.size	nolockLock, .-nolockLock
	.align	4
.proc	nolockUnlock
	.type	nolockUnlock, @function
nolockUnlock:
.LFB170:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE170:
	.size	nolockUnlock, .-nolockUnlock
	.align	4
.proc	unixFileControl
	.type	unixFileControl, @function
unixFileControl:
.LFB184:
	l.sfeqi	r4,1
	l.bf	.L403	# delay slot filled
	l.sfeqi	r4,4
	l.bf	.L407	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.jr    	r9
	l.nop			# nop delay slot
.L407:
	l.lwz   	r3,24(r3)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.jr    	r9	# delay slot filled
	l.sw    	0(r5),r3	 # SI store
.L403:
	l.lbz   	r3,20(r3)	 # zero_extendqisi2
	l.addi  	r11,r0,0	 # move immediate I
	l.jr    	r9	# delay slot filled
	l.sw    	0(r5),r3	 # SI store
.LFE184:
	.size	unixFileControl, .-unixFileControl
	.align	4
.proc	unixSectorSize
	.type	unixSectorSize, @function
unixSectorSize:
.LFB185:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,512	 # move immediate I
.LFE185:
	.size	unixSectorSize, .-unixSectorSize
	.align	4
.proc	unixDeviceCharacteristics
	.type	unixDeviceCharacteristics, @function
unixDeviceCharacteristics:
.LFB186:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE186:
	.size	unixDeviceCharacteristics, .-unixDeviceCharacteristics
	.align	4
.proc	posixIoFinderImpl
	.type	posixIoFinderImpl, @function
posixIoFinderImpl:
.LFB187:
	l.movhi  	r11,hi(posixIoMethods)
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r11,lo(posixIoMethods)
.LFE187:
	.size	posixIoFinderImpl, .-posixIoFinderImpl
	.align	4
.proc	nolockIoFinderImpl
	.type	nolockIoFinderImpl, @function
nolockIoFinderImpl:
.LFB188:
	l.movhi  	r11,hi(nolockIoMethods)
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r11,lo(nolockIoMethods)
.LFE188:
	.size	nolockIoFinderImpl, .-nolockIoFinderImpl
	.align	4
.proc	dotlockIoFinderImpl
	.type	dotlockIoFinderImpl, @function
dotlockIoFinderImpl:
.LFB189:
	l.movhi  	r11,hi(dotlockIoMethods)
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r11,lo(dotlockIoMethods)
.LFE189:
	.size	dotlockIoFinderImpl, .-dotlockIoFinderImpl
	.align	4
.proc	unixGetLastError
	.type	unixGetLastError, @function
unixGetLastError:
.LFB200:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE200:
	.size	unixGetLastError, .-unixGetLastError
	.global __udivsi3
	.align	4
.proc	sqlite3BitvecTest
	.type	sqlite3BitvecTest, @function
sqlite3BitvecTest:
.LFB204:
	l.sw    	-16(r1),r2	 # SI store
.LCFI128:
	l.sw    	-4(r1),r9	 # SI store
.LCFI129:
	l.sw    	-12(r1),r14	 # SI store
.LCFI130:
	l.sw    	-8(r1),r16	 # SI store
.LCFI131:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI132:
	l.sfeqi	r3,0
	l.bf	.L415	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
	l.sub   	r3,r0,r4
	l.or    	r3,r3,r4
	l.xori  	r3,r3,0xffff
	l.srli  	r3,r3,31
	l.sfnei	r3,0
	l.bf	.L424
	l.nop			# nop delay slot
	l.lwz   	r6,0(r2)	 # SI load
	l.sfltu 	r6,r4
	l.bnf	.L428	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.andi  	r5,r5,0xff	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L424	# delay slot filled
	l.addi  	r14,r4,-1
	l.j     	.L417
	l.nop			# nop delay slot
.L418:
	l.jal   	__udivsi3
	l.nop			# nop delay slot
	l.addi  	r11,r11,3
	l.ori   	r3,r14,0	 # move reg to reg
	l.slli  	r11,r11,2
	l.add   	r2,r2,r11
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L425	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	__umodsi3
	l.nop			# nop delay slot
	l.ori   	r14,r11,0	 # move reg to reg
.L417:
	l.lwz   	r16,8(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r16,0
	l.bf	.L418	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.sfgtui	r3,4000
	l.bnf	.L429	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,125	 # move immediate I
	l.jal   	__umodsi3	# delay slot filled
	l.addi  	r14,r14,1
.L420:
	l.addi  	r4,r11,3
	l.slli  	r4,r4,2
	l.j     	.L421	# delay slot filled
	l.add   	r4,r2,r4
.L422:
	l.sfeq 	r14,r3
	l.bf	.L426	# delay slot filled
	l.sfleui	r11,124
	l.bnf	.L430	# delay slot filled
	l.addi  	r4,r4,4
.L421:
	l.lwz   	r3,0(r4)	 # SI load
	l.sfnei	r3,0
	l.bf	.L422	# delay slot filled
	l.addi  	r11,r11,1
	l.ori   	r11,r3,0	 # move reg to reg
.L415:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L428:
	l.ori   	r5,r3,0	  # movqi: move reg to reg
	l.andi  	r5,r5,0xff	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bnf	.L417	# delay slot filled
	l.addi  	r14,r4,-1
.L424:
	l.addi	r1,r1,16
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L425:
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L429:
	l.srli  	r3,r14,3
	l.andi  	r14,r14,7
	l.add   	r2,r2,r3
	l.lbz   	r11,12(r2)	 # zero_extendqisi2
	l.addi	r1,r1,16
	l.sra   	r11,r11,r14
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.andi  	r11,r11,1
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L426:
	l.j     	.L415	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L430:
	l.j     	.L420	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE204:
	.size	sqlite3BitvecTest, .-sqlite3BitvecTest
	.align	4
.proc	sqlite3BitvecDestroy
	.type	sqlite3BitvecDestroy, @function
sqlite3BitvecDestroy:
.LFB207:
	l.sw    	-8(r1),r16	 # SI store
.LCFI133:
	l.sw    	-4(r1),r9	 # SI store
.LCFI134:
	l.sw    	-16(r1),r2	 # SI store
.LCFI135:
	l.sw    	-12(r1),r14	 # SI store
.LCFI136:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI137:
	l.bf	.L432	# delay slot filled
	l.addi  	r1,r1,-16
	l.lwz   	r2,8(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L434	# delay slot filled
	l.addi  	r14,r3,12
	l.addi  	r2,r0,125	 # move immediate I
.L435:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.addi  	r2,r2,-1
	l.sfnei	r2,0
	l.bf	.L435	# delay slot filled
	l.addi  	r14,r14,4
.L434:
	l.addi	r1,r1,16
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3_free	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L432:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE207:
	.size	sqlite3BitvecDestroy, .-sqlite3BitvecDestroy
	.align	4
.proc	pcacheRemoveFromDirtyList
	.type	pcacheRemoveFromDirtyList, @function
pcacheRemoveFromDirtyList:
.LFB210:
	l.lwz   	r5,24(r3)	 # SI load
	l.sw    	-4(r1),r2	 # SI store
.LCFI138:
	l.lwz   	r4,8(r5)	 # SI load
	l.sfne 	r4,r3
.LCFI139:
	l.bnf	.L447	# delay slot filled
	l.addi  	r1,r1,-4
.L438:
	l.lwz   	r4,28(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L441
	l.nop			# nop delay slot
	l.lwz   	r6,32(r3)	 # SI load
	l.sw    	32(r4),r6	 # SI store
	l.lwz   	r6,32(r3)	 # SI load
.L442:
	l.sfeqi	r6,0
	l.bf	.L443
	l.nop			# nop delay slot
	l.sw    	28(r6),r4	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.sw    	28(r3),r2	 # SI store
	l.sw    	32(r3),r2	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L443:
	l.sw    	0(r5),r4	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.sw    	28(r3),r2	 # SI store
	l.sw    	32(r3),r2	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L441:
	l.lwz   	r6,32(r3)	 # SI load
	l.j     	.L442	# delay slot filled
	l.sw    	4(r5),r6	 # SI store
.L447:
	l.lwz   	r4,32(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L439
	l.nop			# nop delay slot
	l.lhz   	r6,20(r4)	 # zero_extendqisi2
	l.andi  	r6,r6,4
	l.sfeqi	r6,0
	l.bnf	.L445
	l.nop			# nop delay slot
	l.j     	.L438	# delay slot filled
	l.sw    	8(r5),r4	 # SI store
.L448:
	l.lhz   	r6,20(r4)	 # zero_extendqisi2
	l.andi  	r6,r6,4
	l.sfnei	r6,0
	l.bnf	.L439
	l.nop			# nop delay slot
.L445:
	l.lwz   	r4,32(r4)	 # SI load
	l.sfeqi	r4,0
	l.bnf	.L448
	l.nop			# nop delay slot
.L439:
	l.j     	.L438	# delay slot filled
	l.sw    	8(r5),r4	 # SI store
.LFE210:
	.size	pcacheRemoveFromDirtyList, .-pcacheRemoveFromDirtyList
	.align	4
.proc	pcacheAddToDirtyList
	.type	pcacheAddToDirtyList, @function
pcacheAddToDirtyList:
.LFB211:
	l.lwz   	r4,24(r3)	 # SI load
	l.lwz   	r5,0(r4)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L450	# delay slot filled
	l.sw    	28(r3),r5	 # SI store
	l.sw    	32(r5),r3	 # SI store
.L450:
	l.lwz   	r5,4(r4)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L453	# delay slot filled
	l.sw    	0(r4),r3	 # SI store
.L451:
	l.lwz   	r5,8(r4)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L454
	l.nop			# nop delay slot
.L449:
	l.jr    	r9
	l.nop			# nop delay slot
.L454:
	l.lhz   	r5,20(r3)	 # zero_extendqisi2
	l.andi  	r5,r5,4
	l.sfnei	r5,0
	l.bf	.L449
	l.nop			# nop delay slot
	l.jr    	r9	# delay slot filled
	l.sw    	8(r4),r3	 # SI store
.L453:
	l.j     	.L451	# delay slot filled
	l.sw    	4(r4),r3	 # SI store
.LFE211:
	.size	pcacheAddToDirtyList, .-pcacheAddToDirtyList
	.align	4
.proc	sqlite3PcacheRelease
	.type	sqlite3PcacheRelease, @function
sqlite3PcacheRelease:
.LFB219:
	l.lhz   	r4,22(r3)	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.sw    	-8(r1),r2	 # SI store
.LCFI140:
	l.slli  	r4,r4,16
	l.sw    	-4(r1),r9	 # SI store
.LCFI141:
	l.ori   	r2,r3,0	 # move reg to reg
	l.srai  	r4,r4,16
	l.addi  	r1,r1,-8
.LCFI142:
	l.sfnei	r4,0
	l.bf	.L455	# delay slot filled
	l.sh    	22(r3),r4	 # movhi
	l.lwz   	r4,24(r3)	 # SI load
	l.lhz   	r5,20(r3)	 # zero_extendqisi2
	l.lwz   	r6,12(r4)	 # SI load
	l.andi  	r5,r5,2
	l.addi  	r6,r6,-1
	l.sfnei	r5,0
	l.bf	.L457	# delay slot filled
	l.sw    	12(r4),r6	 # SI store
	l.lwz   	r3,28(r4)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L455
	l.nop			# nop delay slot
	l.lwz   	r3,12(r2)	 # SI load
	l.sfnei	r3,1
	l.bnf	.L459
	l.nop			# nop delay slot
.L458:
	l.lwz   	r3,40(r4)	 # SI load
	l.movhi  	r4,hi(sqlite3Config)
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r6,120(r4)	 # SI load
	l.addi	r1,r1,8
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr	r6	# delay slot filled	# sibcall Rsc
	l.lwz   	r2,-8(r1)	 # SI load
.L455:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L457:
	l.jal   	pcacheRemoveFromDirtyList
	l.nop			# nop delay slot
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	pcacheAddToDirtyList	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L459:
	l.j     	.L458	# delay slot filled
	l.sw    	44(r4),r5	 # SI store
.LFE219:
	.size	sqlite3PcacheRelease, .-sqlite3PcacheRelease
	.align	4
.proc	sqlite3PcacheDrop
	.type	sqlite3PcacheDrop, @function
sqlite3PcacheDrop:
.LFB221:
	l.lhz   	r4,20(r3)	 # zero_extendqisi2
	l.sw    	-8(r1),r2	 # SI store
.LCFI143:
	l.sw    	-4(r1),r9	 # SI store
.LCFI144:
	l.andi  	r4,r4,2
	l.addi  	r1,r1,-8
.LCFI145:
	l.sfeqi	r4,0
	l.bnf	.L463	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,24(r2)	 # SI load
.L464:
	l.lwz   	r5,12(r2)	 # SI load
	l.lwz   	r4,12(r3)	 # SI load
	l.sfnei	r5,1
	l.addi  	r4,r4,-1
	l.bf	.L462	# delay slot filled
	l.sw    	12(r3),r4	 # SI store
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	44(r3),r4	 # SI store
.L462:
	l.movhi  	r4,hi(sqlite3Config)
	l.lwz   	r3,40(r3)	 # SI load
	l.ori   	r4,r4,lo(sqlite3Config)
	l.addi  	r5,r0,1	 # move immediate I
	l.lwz   	r6,120(r4)	 # SI load
	l.addi	r1,r1,8
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr	r6	# delay slot filled	# sibcall Rsc
	l.lwz   	r2,-8(r1)	 # SI load
.L463:
	l.jal   	pcacheRemoveFromDirtyList
	l.nop			# nop delay slot
	l.j     	.L464	# delay slot filled
	l.lwz   	r3,24(r2)	 # SI load
.LFE221:
	.size	sqlite3PcacheDrop, .-sqlite3PcacheDrop
	.align	4
.proc	sqlite3PcacheMakeDirty
	.type	sqlite3PcacheMakeDirty, @function
sqlite3PcacheMakeDirty:
.LFB222:
	l.lhz   	r5,20(r3)	 # zero_extendqisi2
	l.andi  	r5,r5,65503
	l.sw    	-4(r1),r9	 # SI store
.LCFI146:
	l.andi  	r6,r5,2
	l.sh    	20(r3),r5	 # movhi
	l.sfnei	r6,0
.LCFI147:
	l.bnf	.L467	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L467:
	l.ori   	r5,r5,2
	l.addi	r1,r1,4
	l.sh    	20(r3),r5	 # movhi
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	pcacheAddToDirtyList
	l.nop			# nop delay slot	# sibcall s
.LFE222:
	.size	sqlite3PcacheMakeDirty, .-sqlite3PcacheMakeDirty
	.align	4
.proc	sqlite3PcacheMakeClean
	.type	sqlite3PcacheMakeClean, @function
sqlite3PcacheMakeClean:
.LFB223:
	l.lhz   	r4,20(r3)	 # zero_extendqisi2
	l.sw    	-8(r1),r2	 # SI store
.LCFI148:
	l.sw    	-4(r1),r9	 # SI store
.LCFI149:
	l.andi  	r4,r4,2
	l.addi  	r1,r1,-8
.LCFI150:
	l.sfeqi	r4,0
	l.bnf	.L471	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L468:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L471:
	l.jal   	pcacheRemoveFromDirtyList
	l.nop			# nop delay slot
	l.lhz   	r3,20(r2)	 # zero_extendqisi2
	l.addi  	r4,r0,-7	 # move immediate I
	l.and   	r3,r3,r4
	l.lhs   	r4,22(r2)	 # extendhisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L468	# delay slot filled
	l.sh    	20(r2),r3	 # movhi
	l.lwz   	r3,24(r2)	 # SI load
	l.lwz   	r5,28(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L468
	l.nop			# nop delay slot
	l.lwz   	r5,12(r2)	 # SI load
	l.sfnei	r5,1
	l.bnf	.L472
	l.nop			# nop delay slot
.L470:
	l.movhi  	r4,hi(sqlite3Config)
	l.lwz   	r3,40(r3)	 # SI load
	l.ori   	r4,r4,lo(sqlite3Config)
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r6,120(r4)	 # SI load
	l.addi	r1,r1,8
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr	r6	# delay slot filled	# sibcall Rsc
	l.lwz   	r2,-8(r1)	 # SI load
.L472:
	l.j     	.L470	# delay slot filled
	l.sw    	44(r3),r4	 # SI store
.LFE223:
	.size	sqlite3PcacheMakeClean, .-sqlite3PcacheMakeClean
	.align	4
.proc	pcacheMergeDirtyList
	.type	pcacheMergeDirtyList, @function
pcacheMergeDirtyList:
.LFB230:
	l.addi  	r1,r1,-36
.LCFI151:
	l.sub   	r8,r0,r4
	l.ori   	r5,r1,0	 # move reg to reg
.L483:
	l.sub   	r7,r0,r3
	l.or    	r6,r4,r8
	l.sfgesi	r6,0
	l.bf	.L482	# delay slot filled
	l.or    	r7,r3,r7
.L484:
	l.sfltsi	r7,0
	l.bnf	.L485	# delay slot filled
	l.sfeqi	r3,0
	l.lwz   	r7,12(r3)	 # SI load
	l.lwz   	r6,12(r4)	 # SI load
	l.sfgeu 	r7,r6
	l.bf	.L475	# delay slot filled
	l.or    	r6,r4,r8
	l.sw    	8(r5),r3	 # SI store
	l.ori   	r5,r3,0	 # move reg to reg
	l.lwz   	r3,8(r3)	 # SI load
	l.sub   	r7,r0,r3
	l.sfgesi	r6,0
	l.bnf	.L484	# delay slot filled
	l.or    	r7,r3,r7
.L482:
	l.sfeqi	r3,0
.L485:
	l.bf	.L479
	l.nop			# nop delay slot
	l.sw    	8(r5),r3	 # SI store
	l.lwz   	r11,8(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi	r1,r1,36
.L475:
	l.sw    	8(r5),r4	 # SI store
	l.ori   	r5,r4,0	 # move reg to reg
	l.lwz   	r4,8(r4)	 # SI load
	l.j     	.L483	# delay slot filled
	l.sub   	r8,r0,r4
.L479:
	l.sw    	8(r5),r4	 # SI store
	l.lwz   	r11,8(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi	r1,r1,36
.LFE230:
	.size	pcacheMergeDirtyList, .-pcacheMergeDirtyList
	.align	4
.proc	pcache1Alloc
	.type	pcache1Alloc, @function
pcache1Alloc:
.LFB238:
	l.movhi  	r5,hi(pcache1_g)
	l.sw    	-8(r1),r2	 # SI store
.LCFI152:
	l.ori   	r5,r5,lo(pcache1_g)
	l.sw    	-4(r1),r9	 # SI store
.LCFI153:
	l.lwz   	r2,24(r5)	 # SI load
	l.sflts 	r2,r3
.LCFI154:
	l.bf	.L487	# delay slot filled
	l.addi  	r1,r1,-8
	l.lwz   	r2,36(r5)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L487	# delay slot filled
	l.movhi  	r4,hi(sqlite3Stat)
	l.lwz   	r7,0(r2)	 # SI load
	l.ori   	r4,r4,lo(sqlite3Stat)
	l.sw    	36(r5),r7	 # SI store
	l.lwz   	r6,64(r4)	 # SI load
	l.sfles 	r3,r6
	l.bf	.L488	# delay slot filled
	l.sw    	28(r4),r3	 # SI store
	l.sw    	64(r4),r3	 # SI store
.L488:
	l.lwz   	r3,4(r4)	 # SI load
	l.lwz   	r5,40(r4)	 # SI load
	l.addi  	r3,r3,1
	l.sfles 	r3,r5
	l.bf	.L489	# delay slot filled
	l.sw    	4(r4),r3	 # SI store
	l.movhi  	r4,hi(sqlite3Stat)
	l.ori   	r4,r4,lo(sqlite3Stat)
	l.sw    	40(r4),r3	 # SI store
.L489:
	l.addi	r1,r1,8
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L487:
	l.jal   	sqlite3Malloc
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bf	.L489	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r11,36(r4)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.movhi  	r3,hi(sqlite3Stat)
	l.ori   	r3,r3,lo(sqlite3Stat)
	l.lwz   	r5,8(r3)	 # SI load
	l.lwz   	r4,44(r3)	 # SI load
	l.add   	r11,r11,r5
	l.sfles 	r11,r4
	l.bf	.L489	# delay slot filled
	l.sw    	8(r3),r11	 # SI store
	l.sw    	44(r3),r11	 # SI store
	l.addi	r1,r1,8
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE238:
	.size	pcache1Alloc, .-pcache1Alloc
	.align	4
.proc	pcache1Free
	.type	pcache1Free, @function
pcache1Free:
.LFB239:
	l.sw    	-8(r1),r2	 # SI store
.LCFI155:
	l.sw    	-4(r1),r9	 # SI store
.LCFI156:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI157:
	l.bf	.L491	# delay slot filled
	l.addi  	r1,r1,-8
	l.movhi  	r3,hi(pcache1_g)
	l.ori   	r3,r3,lo(pcache1_g)
	l.lwz   	r4,28(r3)	 # SI load
	l.sfltu 	r2,r4
	l.bf	.L496	# delay slot filled
	l.movhi  	r4,hi(sqlite3Config)
	l.lwz   	r4,32(r3)	 # SI load
	l.sfgeu 	r2,r4
	l.bf	.L493	# delay slot filled
	l.movhi  	r4,hi(sqlite3Config)
	l.movhi  	r4,hi(sqlite3Stat)
	l.ori   	r4,r4,lo(sqlite3Stat)
	l.lwz   	r5,4(r4)	 # SI load
	l.lwz   	r6,40(r4)	 # SI load
	l.addi  	r5,r5,-1
	l.sfles 	r5,r6
	l.bf	.L494	# delay slot filled
	l.sw    	4(r4),r5	 # SI store
	l.sw    	40(r4),r5	 # SI store
.L494:
	l.lwz   	r4,36(r3)	 # SI load
	l.sw    	0(r2),r4	 # SI store
	l.sw    	36(r3),r2	 # SI store
.L491:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L493:
.L496:
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r11,36(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.movhi  	r3,hi(sqlite3Stat)
	l.ori   	r3,r3,lo(sqlite3Stat)
	l.lwz   	r5,8(r3)	 # SI load
	l.lwz   	r4,44(r3)	 # SI load
	l.sub   	r11,r5,r11
	l.sfles 	r11,r4
	l.bf	.L495	# delay slot filled
	l.sw    	8(r3),r11	 # SI store
	l.sw    	44(r3),r11	 # SI store
.L495:
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_free	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE239:
	.size	pcache1Free, .-pcache1Free
	.align	4
.proc	pcache1FreePage
	.type	pcache1FreePage, @function
pcache1FreePage:
.LFB241:
	l.sw    	-4(r1),r9	 # SI store
.LCFI158:
	l.sfeqi	r3,0
.LCFI159:
	l.bf	.L497	# delay slot filled
	l.addi  	r1,r1,-4
	l.lwz   	r4,8(r3)	 # SI load
	l.lwz   	r4,4(r4)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L499	# delay slot filled
	l.movhi  	r4,hi(pcache1_g)
	l.ori   	r4,r4,lo(pcache1_g)
	l.lwz   	r5,12(r4)	 # SI load
	l.addi  	r5,r5,-1
	l.sw    	12(r4),r5	 # SI store
.L499:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	pcache1Free
	l.nop			# nop delay slot	# sibcall s
.L497:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE241:
	.size	pcache1FreePage, .-pcache1FreePage
	.align	4
.proc	pcache1PinPage
	.type	pcache1PinPage, @function
pcache1PinPage:
.LFB245:
	l.sw    	-4(r1),r2	 # SI store
.LCFI160:
	l.sfeqi	r3,0
.LCFI161:
	l.bf	.L500	# delay slot filled
	l.addi  	r1,r1,-4
	l.lwz   	r4,12(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L502	# delay slot filled
	l.movhi  	r5,hi(pcache1_g)
	l.ori   	r5,r5,lo(pcache1_g)
	l.lwz   	r7,20(r5)	 # SI load
.L503:
	l.lwz   	r6,16(r3)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L511	# delay slot filled
	l.sfeqi	r4,0
	l.sw    	12(r6),r4	 # SI store
	l.lwz   	r4,12(r3)	 # SI load
	l.sfeqi	r4,0
.L511:
	l.bf	.L505
	l.nop			# nop delay slot
	l.sw    	16(r4),r6	 # SI store
.L505:
	l.lwz   	r6,16(r5)	 # SI load
	l.sfne 	r6,r3
	l.bnf	.L509	# delay slot filled
	l.sfne 	r3,r7
	l.bnf	.L510
	l.nop			# nop delay slot
.L507:
	l.lwz   	r4,8(r3)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r5,16(r4)	 # SI load
	l.sw    	12(r3),r2	 # SI store
	l.sw    	16(r3),r2	 # SI store
	l.addi  	r3,r5,-1
	l.sw    	16(r4),r3	 # SI store
.L500:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L502:
	l.ori   	r5,r5,lo(pcache1_g)
	l.lwz   	r7,20(r5)	 # SI load
	l.sfne 	r7,r3
	l.bnf	.L503
	l.nop			# nop delay slot
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L509:
	l.movhi  	r6,hi(pcache1_g)
	l.ori   	r6,r6,lo(pcache1_g)
	l.bf	.L507	# delay slot filled
	l.sw    	16(r6),r4	 # SI store
.L510:
	l.lwz   	r4,16(r3)	 # SI load
	l.j     	.L507	# delay slot filled
	l.sw    	20(r5),r4	 # SI store
.LFE245:
	.size	pcache1PinPage, .-pcache1PinPage
	.align	4
.proc	pcache1RemoveFromHash
	.type	pcache1RemoveFromHash, @function
pcache1RemoveFromHash:
.LFB246:
	l.sw    	-8(r1),r14	 # SI store
.LCFI162:
	l.lwz   	r14,8(r3)	 # SI load
	l.sw    	-12(r1),r2	 # SI store
.LCFI163:
	l.sw    	-4(r1),r9	 # SI store
.LCFI164:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r4,24(r14)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
.LCFI165:
	l.jal   	__umodsi3	# delay slot filled
	l.addi  	r1,r1,-12
	l.slli  	r11,r11,2
	l.lwz   	r3,28(r14)	 # SI load
	l.add   	r3,r3,r11
	l.lwz   	r4,0(r3)	 # SI load
	l.sfeq 	r4,r2
	l.bf	.L513
	l.nop			# nop delay slot
.L515:
	l.addi  	r3,r4,4
	l.lwz   	r4,4(r4)	 # SI load
	l.sfne 	r4,r2
	l.bf	.L515
	l.nop			# nop delay slot
.L513:
	l.lwz   	r2,20(r14)	 # SI load
	l.lwz   	r4,4(r4)	 # SI load
	l.addi  	r2,r2,-1
	l.sw    	0(r3),r4	 # SI store
	l.sw    	20(r14),r2	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE246:
	.size	pcache1RemoveFromHash, .-pcache1RemoveFromHash
	.align	4
.proc	pcache1EnforceMaxPage
	.type	pcache1EnforceMaxPage, @function
pcache1EnforceMaxPage:
.LFB247:
	l.sw    	-12(r1),r14	 # SI store
.LCFI166:
	l.movhi  	r14,hi(pcache1_g)
	l.sw    	-16(r1),r2	 # SI store
.LCFI167:
	l.ori   	r14,r14,lo(pcache1_g)
	l.sw    	-4(r1),r9	 # SI store
.LCFI168:
	l.sw    	-8(r1),r16	 # SI store
.LCFI169:
	l.lwz   	r3,12(r14)	 # SI load
	l.lwz   	r2,4(r14)	 # SI load
	l.sfles 	r3,r2
.LCFI170:
	l.bf	.L517	# delay slot filled
	l.addi  	r1,r1,-16
	l.lwz   	r2,20(r14)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L517
	l.nop			# nop delay slot
	l.j     	.L520	# delay slot filled
	l.ori   	r16,r14,0	 # move reg to reg
.L522:
	l.lwz   	r2,20(r16)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L517
	l.nop			# nop delay slot
.L520:
	l.jal   	pcache1PinPage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pcache1RemoveFromHash	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pcache1FreePage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,12(r14)	 # SI load
	l.lwz   	r2,4(r14)	 # SI load
	l.sfles 	r3,r2
	l.bnf	.L522
	l.nop			# nop delay slot
.L517:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE247:
	.size	pcache1EnforceMaxPage, .-pcache1EnforceMaxPage
	.align	4
.proc	pcache1Shutdown
	.type	pcache1Shutdown, @function
pcache1Shutdown:
.LFB250:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE250:
	.size	pcache1Shutdown, .-pcache1Shutdown
	.align	4
.proc	pcache1Cachesize
	.type	pcache1Cachesize, @function
pcache1Cachesize:
.LFB252:
	l.sw    	-4(r1),r9	 # SI store
.LCFI171:
	l.lwz   	r5,4(r3)	 # SI load
	l.sfeqi	r5,0
.LCFI172:
	l.bnf	.L526	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L526:
	l.movhi  	r5,hi(pcache1_g)
	l.lwz   	r6,12(r3)	 # SI load
	l.ori   	r5,r5,lo(pcache1_g)
	l.sw    	12(r3),r4	 # SI store
	l.lwz   	r7,4(r5)	 # SI load
	l.sub   	r3,r7,r6
	l.add   	r4,r3,r4
	l.sw    	4(r5),r4	 # SI store
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	pcache1EnforceMaxPage
	l.nop			# nop delay slot	# sibcall s
.LFE252:
	.size	pcache1Cachesize, .-pcache1Cachesize
	.align	4
.proc	pcache1Pagecount
	.type	pcache1Pagecount, @function
pcache1Pagecount:
.LFB253:
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,20(r3)	 # SI load
.LFE253:
	.size	pcache1Pagecount, .-pcache1Pagecount
	.align	4
.proc	pcache1Unpin
	.type	pcache1Unpin, @function
pcache1Unpin:
.LFB255:
	l.sw    	-8(r1),r2	 # SI store
.LCFI173:
	l.sw    	-4(r1),r9	 # SI store
.LCFI174:
	l.addi  	r2,r4,-20
	l.sfnei	r5,0
.LCFI175:
	l.bf	.L529	# delay slot filled
	l.addi  	r1,r1,-8
	l.movhi  	r4,hi(pcache1_g)
	l.ori   	r4,r4,lo(pcache1_g)
	l.lwz   	r6,12(r4)	 # SI load
	l.lwz   	r5,4(r4)	 # SI load
	l.sfles 	r6,r5
	l.bnf	.L529
	l.nop			# nop delay slot
	l.lwz   	r5,16(r4)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L531
	l.nop			# nop delay slot
	l.sw    	16(r5),r2	 # SI store
	l.sw    	12(r2),r5	 # SI store
	l.sw    	16(r4),r2	 # SI store
.L532:
	l.lwz   	r2,16(r3)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	16(r3),r2	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L529:
	l.jal   	pcache1RemoveFromHash	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	pcache1FreePage	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L531:
	l.sw    	20(r4),r2	 # SI store
	l.j     	.L532	# delay slot filled
	l.sw    	16(r4),r2	 # SI store
.LFE255:
	.size	pcache1Unpin, .-pcache1Unpin
	.align	4
.proc	pcache1Rekey
	.type	pcache1Rekey, @function
pcache1Rekey:
.LFB256:
	l.sw    	-12(r1),r18	 # SI store
.LCFI176:
	l.lwz   	r18,24(r3)	 # SI load
	l.sw    	-24(r1),r2	 # SI store
.LCFI177:
	l.sw    	-20(r1),r14	 # SI store
.LCFI178:
	l.sw    	-16(r1),r16	 # SI store
.LCFI179:
	l.sw    	-8(r1),r20	 # SI store
.LCFI180:
	l.sw    	-4(r1),r9	 # SI store
.LCFI181:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r2,r4,-20
	l.ori   	r3,r5,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI182:
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	__umodsi3	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
	l.slli  	r7,r11,2
	l.lwz   	r20,28(r14)	 # SI load
	l.add   	r7,r20,r7
	l.lwz   	r5,0(r7)	 # SI load
	l.sfeq 	r5,r2
	l.bf	.L534
	l.nop			# nop delay slot
.L537:
	l.addi  	r7,r5,4
	l.lwz   	r5,4(r5)	 # SI load
	l.sfne 	r5,r2
	l.bf	.L537
	l.nop			# nop delay slot
.L534:
	l.lwz   	r4,4(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	0(r7),r4	 # SI store
	l.sw    	0(r2),r16	 # SI store
	l.jal   	__umodsi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.slli  	r3,r11,2
	l.lwz   	r4,32(r14)	 # SI load
	l.add   	r3,r20,r3
	l.sfleu 	r16,r4
	l.lwz   	r4,0(r3)	 # SI load
	l.sw    	4(r2),r4	 # SI store
	l.bf	.L533	# delay slot filled
	l.sw    	0(r3),r2	 # SI store
	l.sw    	32(r14),r16	 # SI store
.L533:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE256:
	.size	pcache1Rekey, .-pcache1Rekey
	.align	4
.proc	sqlite3RowSetClear
	.type	sqlite3RowSetClear, @function
sqlite3RowSetClear:
.LFB261:
	l.sw    	-12(r1),r2	 # SI store
.LCFI183:
	l.sw    	-4(r1),r9	 # SI store
.LCFI184:
	l.sw    	-8(r1),r14	 # SI store
.LCFI185:
	l.lwz   	r5,0(r3)	 # SI load
	l.addi  	r1,r1,-12
.LCFI186:
	l.sfeqi	r5,0
	l.bf	.L540	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L543:
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r3,4(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r14,0(r5)	 # SI load
	l.sfnei	r14,0
	l.bf	.L543	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
.L540:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r2),r3	 # SI store
	l.sh    	24(r2),r3	 # movhi
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	8(r2),r3	 # SI store
	l.sw    	12(r2),r3	 # SI store
	l.sw    	20(r2),r3	 # SI store
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	26(r2),r3	    # movqi
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE261:
	.size	sqlite3RowSetClear, .-sqlite3RowSetClear
	.align	4
.proc	sqlite3RowSetInsert
	.type	sqlite3RowSetInsert, @function
sqlite3RowSetInsert:
.LFB262:
	l.sw    	-16(r1),r2	 # SI store
.LCFI187:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lhz   	r3,24(r3)	 # zero_extendqisi2
	l.sw    	-12(r1),r14	 # SI store
.LCFI188:
	l.sw    	-8(r1),r16	 # SI store
.LCFI189:
	l.sw    	-4(r1),r9	 # SI store
.LCFI190:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI191:
	l.sfeqi	r3,0
	l.bf	.L545	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.addi  	r5,r3,-1
	l.lwz   	r3,16(r2)	 # SI load
	l.andi  	r5,r5,0xffff	 # zero_extendqisi2
.L546:
	l.addi  	r4,r3,16
	l.sh    	24(r2),r5	 # movhi
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	16(r2),r4	 # SI store
	l.lwz   	r4,12(r2)	 # SI load
	l.sw    	0(r3),r14	 # SI store
	l.sw    	4(r3),r16	 # SI store
	l.sfeq 	r4,r5
	l.bf	.L548	# delay slot filled
	l.sw    	8(r3),r5	 # SI store
	l.lbz   	r5,26(r2)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L549
	l.nop			# nop delay slot
	l.lwz   	r5,0(r4)	 # SI load
	l.sflts 	r5,r14
	l.bf	.L549	# delay slot filled
	l.sfne 	r5,r14
	l.bnf	.L554	# delay slot filled
	l.addi  	r5,r0,0	 # movqi: move immediate
.L555:
	l.sb    	26(r2),r5	    # movqi
.L549:
	l.sw    	8(r4),r3	 # SI store
.L551:
	l.sw    	12(r2),r3	 # SI store
.L544:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L545:
	l.lwz   	r3,4(r2)	 # SI load
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r0,1012	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L544	# delay slot filled
	l.addi  	r3,r11,4
	l.lwz   	r4,0(r2)	 # SI load
	l.sw    	0(r11),r4	 # SI store
	l.sw    	0(r2),r11	 # SI store
	l.j     	.L546	# delay slot filled
	l.addi  	r5,r0,62	 # move immediate I
.L554:
	l.lwz   	r5,4(r4)	 # SI load
	l.sfltu 	r5,r16
	l.bnf	.L555	# delay slot filled
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.j     	.L551	# delay slot filled
	l.sw    	8(r4),r3	 # SI store
.L548:
	l.j     	.L551	# delay slot filled
	l.sw    	8(r2),r3	 # SI store
.LFE262:
	.size	sqlite3RowSetInsert, .-sqlite3RowSetInsert
	.align	4
.proc	rowSetMerge
	.type	rowSetMerge, @function
rowSetMerge:
.LFB263:
	l.addi  	r1,r1,-16
.LCFI192:
	l.sub   	r8,r0,r4
	l.ori   	r7,r1,0	 # move reg to reg
.L570:
	l.or    	r5,r4,r8
	l.sfgesi	r5,0
	l.bf	.L572	# delay slot filled
	l.sfeqi	r3,0
.L571:
	l.sub   	r5,r0,r3
	l.or    	r5,r3,r5
	l.sfltsi	r5,0
	l.bnf	.L572	# delay slot filled
	l.sfeqi	r3,0
	l.lwz   	r6,0(r3)	 # SI load
	l.lwz   	r5,0(r4)	 # SI load
	l.lwz   	r12,4(r3)	 # SI load
	l.sfgts 	r5,r6
	l.bf	.L567	# delay slot filled
	l.lwz   	r11,4(r4)	 # SI load
	l.sfne 	r5,r6
	l.bf	.L573	# delay slot filled
	l.sfgts 	r6,r5
	l.sfgtu 	r11,r12
	l.bnf	.L558	# delay slot filled
	l.sfgts 	r6,r5
.L567:
	l.sw    	8(r7),r3	 # SI store
	l.or    	r5,r4,r8
	l.ori   	r7,r3,0	 # move reg to reg
	l.sfgesi	r5,0
	l.bnf	.L571	# delay slot filled
	l.lwz   	r3,8(r3)	 # SI load
	l.sfeqi	r3,0
.L572:
	l.bf	.L565
	l.nop			# nop delay slot
	l.sw    	8(r7),r3	 # SI store
	l.lwz   	r11,8(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi	r1,r1,16
.L558:
.L573:
	l.bf	.L568	# delay slot filled
	l.sfne 	r6,r5
	l.bf	.L561	# delay slot filled
	l.sfgtu 	r12,r11
	l.bnf	.L561
	l.nop			# nop delay slot
.L568:
	l.sw    	8(r7),r4	 # SI store
	l.ori   	r7,r4,0	 # move reg to reg
	l.lwz   	r4,8(r4)	 # SI load
	l.j     	.L570	# delay slot filled
	l.sub   	r8,r0,r4
.L561:
	l.j     	.L570	# delay slot filled
	l.lwz   	r3,8(r3)	 # SI load
.L565:
	l.sw    	8(r7),r4	 # SI store
	l.lwz   	r11,8(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi	r1,r1,16
.LFE263:
	.size	rowSetMerge, .-rowSetMerge
	.align	4
.proc	rowSetTreeToList
	.type	rowSetTreeToList, @function
rowSetTreeToList:
.LFB265:
	l.sw    	-12(r1),r2	 # SI store
.LCFI193:
	l.sw    	-8(r1),r14	 # SI store
.LCFI194:
	l.sw    	-4(r1),r9	 # SI store
.LCFI195:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,12(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI196:
	l.sfeqi	r3,0
	l.bf	.L575	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.jal   	rowSetTreeToList	# delay slot filled
	l.ori   	r5,r1,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sw    	8(r3),r2	 # SI store
.L576:
	l.lwz   	r3,8(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L577	# delay slot filled
	l.addi  	r4,r2,8
	l.jal   	rowSetTreeToList	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L577:
	l.sw    	0(r14),r2	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L575:
	l.j     	.L576	# delay slot filled
	l.sw    	0(r4),r2	 # SI store
.LFE265:
	.size	rowSetTreeToList, .-rowSetTreeToList
	.align	4
.proc	rowSetNDeepTree
	.type	rowSetNDeepTree, @function
rowSetNDeepTree:
.LFB266:
	l.sw    	-16(r1),r2	 # SI store
.LCFI197:
	l.sw    	-12(r1),r14	 # SI store
.LCFI198:
	l.sw    	-4(r1),r9	 # SI store
.LCFI199:
	l.sw    	-8(r1),r16	 # SI store
.LCFI200:
	l.lwz   	r2,0(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI201:
	l.sfeqi	r2,0
	l.bf	.L580	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfnei	r4,1
	l.bnf	.L583	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
	l.addi  	r16,r4,-1
	l.jal   	rowSetNDeepTree	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r2,0(r14)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L582	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,8(r2)	 # SI load
	l.sw    	12(r2),r11	 # SI store
	l.sw    	0(r14),r3	 # SI store
	l.jal   	rowSetNDeepTree	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	8(r2),r11	 # SI store
.L580:
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L583:
	l.lwz   	r3,8(r2)	 # SI load
	l.sw    	0(r14),r3	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	8(r2),r3	 # SI store
	l.sw    	12(r2),r3	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L582:
	l.addi	r1,r1,16
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r14,-12(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE266:
	.size	rowSetNDeepTree, .-rowSetNDeepTree
	.align	4
.proc	read32bits
	.type	read32bits, @function
read32bits:
.LFB273:
	l.sw    	-16(r1),r2	 # SI store
.LCFI202:
	l.sw    	-8(r1),r16	 # SI store
.LCFI203:
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI204:
	l.sw    	-12(r1),r14	 # SI store
.LCFI205:
	l.addi  	r1,r1,-20
.LCFI206:
		l.or    	r7, r4, r0
		l.or    	r8, r5, r0
	l.lwz   	r11,8(r2)	 # SI load
	l.ori   	r4,r1,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
		l.or    	r6, r7, r0
		l.or    	r7, r8, r0
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,4	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L585	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.sw    	0(r16),r11	 # SI store
.L585:
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE273:
	.size	read32bits, .-read32bits
	.align	4
.proc	write32bits
	.type	write32bits, @function
write32bits:
.LFB274:
	l.srli  	r12,r6,24
	l.srli  	r11,r6,16
	l.srli  	r8,r6,8
	l.sw    	-4(r1),r9	 # SI store
.LCFI207:
	l.addi  	r1,r1,-8
.LCFI208:
	l.sb    	0(r1),r12	    # movqi
	l.sb    	3(r1),r6	    # movqi
	l.sb    	1(r1),r11	    # movqi
	l.sb    	2(r1),r8	    # movqi
	l.lwz   	r6,0(r3)	 # SI load
		l.or    	r12, r4, r0
		l.or    	r13, r5, r0
	l.lwz   	r11,12(r6)	 # SI load
	l.ori   	r4,r1,0	 # move reg to reg
		l.or    	r6, r12, r0
		l.or    	r7, r13, r0
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,4	 # move immediate I
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE274:
	.size	write32bits, .-write32bits
	.align	4
.proc	releaseAllSavepoints
	.type	releaseAllSavepoints, @function
releaseAllSavepoints:
.LFB284:
	l.sw    	-16(r1),r2	 # SI store
.LCFI209:
	l.sw    	-4(r1),r9	 # SI store
.LCFI210:
	l.sw    	-12(r1),r14	 # SI store
.LCFI211:
	l.sw    	-8(r1),r16	 # SI store
.LCFI212:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,88(r3)	 # SI load
	l.sflesi	r3,0
.LCFI213:
	l.bf	.L588	# delay slot filled
	l.addi  	r1,r1,-16
	l.addi  	r14,r0,0	 # move immediate I
	l.ori   	r16,r14,0	 # move reg to reg
.L589:
	l.lwz   	r3,84(r2)	 # SI load
	l.addi  	r16,r16,1
	l.add   	r3,r3,r14
	l.addi  	r14,r14,28
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.lwz   	r3,16(r3)	 # SI load
	l.lwz   	r3,88(r2)	 # SI load
	l.sfgts 	r3,r16
	l.bf	.L589
	l.nop			# nop delay slot
.L588:
	l.lbz   	r3,4(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L590	# delay slot filled
	l.movhi  	r4,hi(MemJournalMethods)
	l.lwz   	r14,64(r2)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r4,r4,lo(MemJournalMethods)
	l.sfeq 	r3,r4
	l.bf	.L591
	l.nop			# nop delay slot
.L592:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,84(r2)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	84(r2),r4	 # SI store
	l.sw    	88(r2),r4	 # SI store
	l.sw    	48(r2),r4	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L590:
	l.lwz   	r14,64(r2)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L592
	l.nop			# nop delay slot
.L591:
	l.lwz   	r11,4(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.j     	.L592	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.LFE284:
	.size	releaseAllSavepoints, .-releaseAllSavepoints
	.global __muldi3
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC15:
	.string	""
	.section .text
	.align	4
.proc	pager_truncate
	.type	pager_truncate, @function
pager_truncate:
.LFB293:
	l.sw    	-16(r1),r2	 # SI store
.LCFI214:
	l.sw    	-12(r1),r14	 # SI store
.LCFI215:
	l.sw    	-8(r1),r16	 # SI store
.LCFI216:
	l.sw    	-4(r1),r9	 # SI store
.LCFI217:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lbz   	r3,14(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-24
.LCFI218:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfleui	r3,3
	l.bf	.L596	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r3,56(r14)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L596
	l.nop			# nop delay slot
	l.lwz   	r11,24(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r6,120(r14)	 # SI load
	l.sfnei	r11,0
	l.bf	.L596	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.srai  	r5,r6,31
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	__muldi3	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sfne 	r3,r11
	l.bnf	.L606	# delay slot filled
	l.lwz   	r4,4(r1)	 # SI load
	l.sfgts 	r3,r11
.L609:
	l.bnf	.L607	# delay slot filled
	l.sfne 	r3,r11
.L605:
	l.lwz   	r3,56(r14)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r11,16(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r5,r12,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
.L600:
	l.sfnei	r2,0
	l.bf	.L596
	l.nop			# nop delay slot
	l.sw    	32(r14),r16	 # SI store
.L596:
	l.addi	r1,r1,24
.L608:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L607:
	l.bf	.L598	# delay slot filled
	l.sfgtu 	r4,r12
	l.bf	.L605
	l.nop			# nop delay slot
.L598:
	l.lwz   	r3,56(r14)	 # SI load
	l.addi  	r7,r12,-1
	l.lwz   	r4,0(r3)	 # SI load
	l.sfltu 	r7,r12
	l.bf	.L601	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r2,r0,0	 # move immediate I
.L601:
	l.addi  	r6,r11,-1
	l.lwz   	r8,12(r4)	 # SI load
	l.movhi  	r4,hi(.LC15)
	l.add   	r6,r2,r6
	l.ori   	r4,r4,lo(.LC15)
	l.jalr  	r8	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L600	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L606:
	l.sfne 	r4,r12
	l.bf	.L609	# delay slot filled
	l.sfgts 	r3,r11
	l.j     	.L608	# delay slot filled
	l.addi	r1,r1,24
.LFE293:
	.size	pager_truncate, .-pager_truncate
	.align	4
.proc	setSectorSize
	.type	setSectorSize, @function
setSectorSize:
.LFB294:
	l.sw    	-8(r1),r2	 # SI store
.LCFI219:
	l.sw    	-4(r1),r9	 # SI store
.LCFI220:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,11(r3)	 # zero_extendqisi2
	l.sfeqi	r3,0
.LCFI221:
	l.bf	.L611	# delay slot filled
	l.addi  	r1,r1,-8
	l.lwz   	r11,108(r2)	 # SI load
	l.sfgtui	r11,511
	l.bf	.L618	# delay slot filled
	l.movhi 	r3,hi(1048576)	 # move immediate M
.L617:
	l.addi  	r3,r0,512	 # move immediate I
	l.sw    	108(r2),r3	 # SI store
.L610:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L611:
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r4,44(r4)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L613	# delay slot filled
	l.addi  	r11,r0,512	 # move immediate I
	l.jalr  	r4
	l.nop			# nop delay slot
.L613:
	l.sfgtui	r11,511
	l.bnf	.L617	# delay slot filled
	l.sw    	108(r2),r11	 # SI store
	l.movhi 	r3,hi(1048576)	 # move immediate M
.L618:
	l.sfleu 	r11,r3
	l.bf	.L610
	l.nop			# nop delay slot
	l.sw    	108(r2),r3	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE294:
	.size	setSectorSize, .-setSectorSize
	.align	4
.proc	pager_wait_on_lock
	.type	pager_wait_on_lock, @function
pager_wait_on_lock:
.LFB307:
	l.sw    	-16(r1),r2	 # SI store
.LCFI222:
	l.sw    	-12(r1),r14	 # SI store
.LCFI223:
	l.sw    	-8(r1),r16	 # SI store
.LCFI224:
	l.sw    	-4(r1),r9	 # SI store
.LCFI225:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,14(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-16
.LCFI226:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfges 	r3,r4
	l.bf	.L620	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L624:
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r11,28(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r11,5
	l.bf	.L621	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r11,136(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.lwz   	r3,140(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L624
	l.nop			# nop delay slot
.L620:
	l.addi	r1,r1,16
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L621:
	l.sfnei	r11,0
	l.bf	.L620	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
	l.sb    	14(r2),r16	    # movqi
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE307:
	.size	pager_wait_on_lock, .-pager_wait_on_lock
	.align	4
.proc	sqlite3PagerJournalMode
	.type	sqlite3PagerJournalMode, @function
sqlite3PagerJournalMode:
.LFB350:
	l.sw    	-20(r1),r2	 # SI store
.LCFI227:
	l.sw    	-16(r1),r14	 # SI store
.LCFI228:
	l.sw    	-4(r1),r9	 # SI store
.LCFI229:
	l.sw    	-12(r1),r16	 # SI store
.LCFI230:
	l.sw    	-8(r1),r18	 # SI store
.LCFI231:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI232:
	l.sfgesi	r4,0
	l.bnf	.L635	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.xori  	r3,r4,4
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L629
	l.nop			# nop delay slot
	l.lbz   	r3,13(r2)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bf	.L629	# delay slot filled
	l.sfeqi	r14,2
	l.bf	.L629
	l.nop			# nop delay slot
.L635:
	l.lbz   	r11,5(r2)	 # zero_extendqisi2
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L629:
	l.lbz   	r3,15(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L635
	l.nop			# nop delay slot
	l.lwz   	r18,60(r2)	 # SI load
	l.lwz   	r3,0(r18)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L636	# delay slot filled
	l.andi  	r11,r14,0xff	 # zero_extendqisi2
	l.lwz   	r16,68(r2)	 # SI load
	l.lwz   	r4,72(r2)	 # SI load
	l.or    	r16,r16,r4
	l.sfeqi	r16,0
	l.bnf	.L635
	l.nop			# nop delay slot
	l.lwz   	r11,4(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sw    	0(r18),r16	 # SI store
	l.andi  	r11,r14,0xff	 # zero_extendqisi2
.L636:
	l.sb    	5(r2),r11	    # movqi
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE350:
	.size	sqlite3PagerJournalMode, .-sqlite3PagerJournalMode
	.align	4
.proc	sqlite3BtreeEnterAll
	.type	sqlite3BtreeEnterAll, @function
sqlite3BtreeEnterAll:
.LFB354:
	l.lwz   	r7,4(r3)	 # SI load
	l.sflesi	r7,0
	l.bf	.L637
	l.nop			# nop delay slot
	l.lwz   	r4,8(r3)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r4,4
.L640:
	l.lwz   	r3,0(r4)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L639	# delay slot filled
	l.addi  	r5,r5,1
	l.lwz   	r6,4(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	4(r6),r3	 # SI store
.L639:
	l.sfne 	r5,r7
	l.bf	.L640	# delay slot filled
	l.addi  	r4,r4,24
.L637:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE354:
	.size	sqlite3BtreeEnterAll, .-sqlite3BtreeEnterAll
	.align	4
.proc	querySharedCacheTableLock
	.type	querySharedCacheTableLock, @function
querySharedCacheTableLock:
.LFB356:
	l.lbz   	r11,9(r3)	 # zero_extendqisi2
	l.sw    	-4(r1),r2	 # SI store
.LCFI233:
	l.lwz   	r8,4(r3)	 # SI load
	l.sfeqi	r11,0
.LCFI234:
	l.bf	.L643	# delay slot filled
	l.addi  	r1,r1,-4
	l.lwz   	r6,68(r8)	 # SI load
	l.sfeq 	r6,r3
	l.bf	.L660	# delay slot filled
	l.xori  	r12,r5,2
	l.lbz   	r6,72(r8)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L643	# delay slot filled
	l.addi  	r11,r0,262	 # move immediate I
	l.xori  	r12,r5,2
.L660:
	l.addi  	r12,r12,-1
	l.srli  	r12,r12,31
	l.sfnei	r12,0
	l.bnf	.L656
	l.nop			# nop delay slot
.L645:
	l.lwz   	r6,64(r8)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L653	# delay slot filled
	l.ori   	r11,r6,0	 # move reg to reg
	l.j     	.L659	# delay slot filled
	l.addi	r1,r1,4
.L646:
	l.lwz   	r6,12(r6)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L657	# delay slot filled
	l.ori   	r11,r6,0	 # move reg to reg
.L653:
	l.lwz   	r7,0(r6)	 # SI load
	l.sfeq 	r7,r3
	l.bf	.L646
	l.nop			# nop delay slot
	l.lwz   	r7,4(r6)	 # SI load
	l.sfne 	r7,r4
	l.bf	.L646
	l.nop			# nop delay slot
	l.lbz   	r7,8(r6)	 # zero_extendqisi2
	l.sfeq 	r7,r5
	l.bf	.L646	# delay slot filled
	l.sfeqi	r12,0
	l.bnf	.L658	# delay slot filled
	l.addi  	r11,r0,262	 # move immediate I
.L643:
	l.addi	r1,r1,4
.L659:
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L657:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L656:
	l.lwz   	r6,0(r3)	 # SI load
	l.lwz   	r6,12(r6)	 # SI load
	l.andi  	r6,r6,16384
	l.sfeqi	r6,0
	l.bf	.L645	# delay slot filled
	l.sfnei	r4,1
	l.bnf	.L645	# delay slot filled
	l.ori   	r11,r12,0	 # move reg to reg
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L658:
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.j     	.L643	# delay slot filled
	l.sb    	73(r8),r2	    # movqi
.LFE356:
	.size	querySharedCacheTableLock, .-querySharedCacheTableLock
	.align	4
.proc	clearAllSharedCacheTableLocks
	.type	clearAllSharedCacheTableLocks, @function
clearAllSharedCacheTableLocks:
.LFB358:
	l.sw    	-8(r1),r16	 # SI store
.LCFI235:
	l.lwz   	r16,4(r3)	 # SI load
	l.sw    	-16(r1),r2	 # SI store
.LCFI236:
	l.sw    	-12(r1),r14	 # SI store
.LCFI237:
	l.sw    	-4(r1),r9	 # SI store
.LCFI238:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI239:
	l.j     	.L668	# delay slot filled
	l.addi  	r2,r16,64
.L665:
	l.lwz   	r3,0(r4)	 # SI load
	l.sfne 	r3,r14
	l.bnf	.L669	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.addi  	r2,r4,12
.L668:
	l.lwz   	r4,0(r2)	 # SI load
.L671:
	l.sfnei	r4,0
	l.bf	.L665
	l.nop			# nop delay slot
	l.lwz   	r2,68(r16)	 # SI load
	l.sfne 	r2,r14
	l.bnf	.L670
	l.nop			# nop delay slot
	l.lwz   	r2,36(r16)	 # SI load
	l.sfnei	r2,2
	l.bf	.L661
	l.nop			# nop delay slot
	l.sb    	73(r16),r4	    # movqi
.L661:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L669:
	l.lwz   	r5,12(r4)	 # SI load
	l.jal   	sqlite3_free	# delay slot filled
	l.sw    	0(r2),r5	 # SI store
	l.j     	.L671	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
.L670:
	l.sb    	72(r16),r4	    # movqi
	l.sb    	73(r16),r4	    # movqi
	l.sw    	68(r16),r4	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE358:
	.size	clearAllSharedCacheTableLocks, .-clearAllSharedCacheTableLocks
	.align	4
.proc	findOverflowCell
	.type	findOverflowCell, @function
findOverflowCell:
.LFB372:
	l.lbz   	r6,1(r3)	 # zero_extendqisi2
	l.addi  	r5,r6,-1
	l.sfeqi	r5,-1
	l.bf	.L673	# delay slot filled
	l.addi  	r6,r6,2
	l.slli  	r6,r6,3
	l.add   	r6,r3,r6
.L677:
	l.lhz   	r7,0(r6)	 # zero_extendqisi2
	l.sfgts 	r7,r4
	l.bf	.L674	# delay slot filled
	l.sfne 	r7,r4
	l.bnf	.L679	# delay slot filled
	l.addi  	r4,r4,-1
.L674:
	l.addi  	r5,r5,-1
	l.sfnei	r5,-1
	l.bf	.L677	# delay slot filled
	l.addi  	r6,r6,-8
.L673:
	l.lhz   	r6,12(r3)	 # zero_extendqisi2
	l.add   	r4,r4,r4
	l.lwz   	r5,64(r3)	 # SI load
	l.add   	r4,r4,r6
	l.lhz   	r6,18(r3)	 # zero_extendqisi2
	l.add   	r3,r5,r4
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.lbz   	r11,1(r3)	 # zero_extendqisi2
	l.slli  	r3,r4,8
	l.or    	r11,r11,r3
	l.and   	r11,r11,r6
	l.jr    	r9	# delay slot filled
	l.add   	r11,r5,r11
.L679:
	l.slli  	r5,r5,3
	l.add   	r3,r3,r5
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,20(r3)	 # SI load
.LFE372:
	.size	findOverflowCell, .-findOverflowCell
	.align	4
.proc	sqlite3BtreeParseCellPtr
	.type	sqlite3BtreeParseCellPtr, @function
sqlite3BtreeParseCellPtr:
.LFB373:
	l.sw    	-20(r1),r2	 # SI store
.LCFI240:
	l.ori   	r2,r5,0	 # move reg to reg
	l.sw    	-16(r1),r14	 # SI store
.LCFI241:
	l.sw    	-12(r1),r16	 # SI store
.LCFI242:
	l.sw    	-4(r1),r9	 # SI store
.LCFI243:
	l.sw    	-8(r1),r18	 # SI store
.LCFI244:
	l.sw    	0(r2),r4	 # SI store
	l.ori   	r14,r3,0	 # move reg to reg
	l.lbz   	r3,2(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-24
.LCFI245:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bf	.L681	# delay slot filled
	l.lbz   	r18,6(r14)	 # zero_extendqisi2
	l.lbz   	r3,4(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L682
	l.nop			# nop delay slot
	l.add   	r3,r4,r18
	l.lbs   	r4,0(r3)	 # extendqisi2_no_sext_mem
	l.sfltsi	r4,0
	l.bf	.L683	# delay slot filled
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r11,r0,1	 # move immediate I
	l.add   	r18,r11,r18
.L697:
	l.j     	.L685	# delay slot filled
	l.andi  	r18,r18,0xffff	 # zero_extendqisi2
.L681:
	l.sw    	12(r5),r3	 # SI store
	l.add   	r3,r4,r18
	l.lbs   	r4,0(r3)	 # extendqisi2_no_sext_mem
	l.sfltsi	r4,0
	l.bf	.L687	# delay slot filled
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.addi  	r11,r0,1	 # move immediate I
	l.sw    	0(r1),r5	 # SI store
.L688:
	l.add   	r18,r11,r18
	l.addi  	r3,r0,0	 # move immediate I
	l.andi  	r18,r18,0xffff	 # zero_extendqisi2
	l.lhz   	r16,8(r14)	 # zero_extendqisi2
	l.sw    	8(r2),r5	 # SI store
	l.sw    	4(r2),r3	 # SI store
	l.sw    	16(r2),r5	 # SI store
	l.sfltu 	r16,r5
	l.bf	.L689	# delay slot filled
	l.sh    	20(r2),r18	 # movhi
.L696:
	l.addi  	r3,r0,-4	 # move immediate I
	l.add   	r18,r18,r5
	l.sh    	22(r2),r5	 # movhi
	l.and   	r4,r18,r3
	l.addi  	r3,r0,0	 # movhi: move immediate
	l.sfeqi	r4,0
	l.sh    	24(r2),r3	 # movhi
	l.bf	.L695	# delay slot filled
	l.addi  	r3,r0,4	 # move immediate I
	l.andi  	r3,r18,0xffff	 # zero_extendqisi2
.L695:
	l.sh    	26(r2),r3	 # movhi
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L682:
	l.sw    	0(r1),r3	 # SI store
.L685:
	l.add   	r3,r16,r18
	l.jal   	sqlite3GetVarint	# delay slot filled
	l.addi  	r4,r2,4
	l.add   	r18,r11,r18
	l.lwz   	r5,0(r1)	 # SI load
	l.andi  	r18,r18,0xffff	 # zero_extendqisi2
	l.lhz   	r16,8(r14)	 # zero_extendqisi2
	l.sw    	12(r2),r5	 # SI store
	l.sw    	16(r2),r5	 # SI store
	l.sfltu 	r16,r5
	l.bnf	.L696	# delay slot filled
	l.sh    	20(r2),r18	 # movhi
.L689:
	l.lwz   	r3,60(r14)	 # SI load
	l.lhz   	r14,10(r14)	 # zero_extendqisi2
	l.lhz   	r4,22(r3)	 # zero_extendqisi2
	l.sub   	r3,r5,r14
	l.jal   	__umodsi3	# delay slot filled
	l.addi  	r4,r4,-4
	l.add   	r11,r11,r14
	l.sflts 	r16,r11
	l.bf	.L692
	l.nop			# nop delay slot
	l.andi  	r14,r11,0xffff	 # zero_extendqisi2
	l.sh    	22(r2),r14	 # movhi
.L693:
	l.add   	r18,r14,r18
	l.andi  	r18,r18,0xffff	 # zero_extendqisi2
	l.addi  	r3,r18,4
	l.sh    	24(r2),r18	 # movhi
	l.sh    	26(r2),r3	 # movhi
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L692:
	l.j     	.L693	# delay slot filled
	l.sh    	22(r2),r14	 # movhi
.L687:
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.j     	.L688	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
.L683:
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.j     	.L697	# delay slot filled
	l.add   	r18,r11,r18
.LFE373:
	.size	sqlite3BtreeParseCellPtr, .-sqlite3BtreeParseCellPtr
	.align	4
.proc	sqlite3BtreeParseCell
	.type	sqlite3BtreeParseCell, @function
sqlite3BtreeParseCell:
.LFB374:
	l.lhz   	r8,12(r3)	 # zero_extendqisi2
	l.add   	r4,r4,r4
	l.lwz   	r7,64(r3)	 # SI load
	l.add   	r4,r4,r8
	l.sw    	-4(r1),r9	 # SI store
.LCFI246:
	l.add   	r6,r7,r4
	l.lhz   	r8,18(r3)	 # zero_extendqisi2
	l.lbz   	r4,0(r6)	 # zero_extendqisi2
	l.lbz   	r6,1(r6)	 # zero_extendqisi2
	l.slli  	r4,r4,8
	l.addi  	r1,r1,-4
.LCFI247:
	l.or    	r4,r6,r4
	l.addi	r1,r1,4
	l.and   	r4,r4,r8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3BtreeParseCellPtr	# delay slot filled	# sibcall s
	l.add   	r4,r7,r4
.LFE374:
	.size	sqlite3BtreeParseCell, .-sqlite3BtreeParseCell
	.align	4
.proc	cellSizePtr
	.type	cellSizePtr, @function
cellSizePtr:
.LFB375:
	l.sw    	-16(r1),r14	 # SI store
.LCFI248:
	l.sw    	-12(r1),r16	 # SI store
.LCFI249:
	l.sw    	-4(r1),r9	 # SI store
.LCFI250:
	l.sw    	-20(r1),r2	 # SI store
.LCFI251:
	l.sw    	-8(r1),r18	 # SI store
.LCFI252:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lbz   	r2,6(r3)	 # zero_extendqisi2
	l.lbz   	r3,2(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-24
.LCFI253:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bf	.L700	# delay slot filled
	l.add   	r2,r4,r2
	l.lbz   	r3,4(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L701
	l.nop			# nop delay slot
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfltsi	r3,0
	l.bf	.L702	# delay slot filled
	l.lbz   	r4,0(r2)	 # zero_extendqisi2
	l.sw    	0(r1),r4	 # SI store
	l.addi  	r11,r0,1	 # move immediate I
	l.add   	r2,r2,r11
.L717:
	l.lwz   	r3,0(r1)	 # SI load
.L704:
	l.addi  	r5,r0,9	 # move immediate I
.L706:
	l.lbs   	r6,0(r2)	 # extendqisi2_no_sext_mem
	l.addi  	r5,r5,-1
	l.sfgesi	r6,0
	l.bf	.L705	# delay slot filled
	l.addi  	r2,r2,1
	l.sfnei	r5,0
	l.bf	.L706
	l.nop			# nop delay slot
	l.j     	.L716	# delay slot filled
	l.lhz   	r18,8(r14)	 # zero_extendqisi2
.L700:
	l.lbs   	r4,0(r2)	 # extendqisi2_no_sext_mem
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.sfltsi	r4,0
	l.bf	.L714	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L708:
	l.add   	r2,r2,r11
.L705:
	l.lhz   	r18,8(r14)	 # zero_extendqisi2
.L716:
	l.sfgeu 	r18,r3
	l.bf	.L709
	l.nop			# nop delay slot
	l.lwz   	r4,60(r14)	 # SI load
	l.lhz   	r14,10(r14)	 # zero_extendqisi2
	l.lhz   	r4,22(r4)	 # zero_extendqisi2
	l.sub   	r3,r3,r14
	l.jal   	__umodsi3	# delay slot filled
	l.addi  	r4,r4,-4
	l.add   	r11,r11,r14
	l.sfltu 	r18,r11
	l.bnf	.L715
	l.nop			# nop delay slot
.L710:
	l.addi  	r3,r14,4
.L709:
	l.sub   	r2,r2,r16
	l.add   	r3,r3,r2
	l.sfleui	r3,3
	l.bf	.L711	# delay slot filled
	l.addi  	r11,r0,4	 # move immediate I
	l.andi  	r11,r3,0xffff	 # zero_extendqisi2
.L711:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L715:
	l.j     	.L710	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L701:
	l.j     	.L704	# delay slot filled
	l.sw    	0(r1),r3	 # SI store
.L714:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.j     	.L708	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
.L702:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.j     	.L717	# delay slot filled
	l.add   	r2,r2,r11
.LFE375:
	.size	cellSizePtr, .-cellSizePtr
	.align	4
.proc	sqlite3BtreeInitPage
	.type	sqlite3BtreeInitPage, @function
sqlite3BtreeInitPage:
.LFB382:
	l.sw    	-12(r1),r2	 # SI store
.LCFI254:
	l.sw    	-4(r1),r9	 # SI store
.LCFI255:
	l.sw    	-8(r1),r14	 # SI store
.LCFI256:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.lbz   	r4,0(r2)	 # zero_extendqisi2
	l.sfne 	r4,r3
.LCFI257:
	l.bf	.L719	# delay slot filled
	l.addi  	r1,r1,-12
	l.lbz   	r11,5(r2)	 # zero_extendqisi2
	l.lwz   	r5,64(r2)	 # SI load
	l.addi  	r8,r0,-9	 # move immediate I
	l.add   	r5,r5,r11
	l.lwz   	r6,60(r2)	 # SI load
	l.lbz   	r7,0(r5)	 # zero_extendqisi2
	l.srli  	r3,r7,3
	l.and   	r7,r7,r8
	l.slli  	r8,r3,2
	l.sb    	3(r2),r3	    # movqi
	l.sfnei	r7,5
	l.sub   	r12,r0,r8
	l.addi  	r12,r12,4
	l.bnf	.L725	# delay slot filled
	l.sb    	6(r2),r12	    # movqi
	l.sfnei	r7,2
	l.bnf	.L726	# delay slot filled
	l.addi  	r3,r0,11	 # move immediate I
.L719:
	l.addi	r1,r1,12
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L725:
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sb    	4(r2),r3	    # movqi
	l.sb    	2(r2),r4	    # movqi
	l.lhz   	r3,28(r6)	 # zero_extendqisi2
	l.lhz   	r4,30(r6)	 # zero_extendqisi2
	l.sh    	8(r2),r3	 # movhi
	l.sh    	10(r2),r4	 # movhi
.L721:
	l.lhz   	r3,20(r6)	 # zero_extendqisi2
	l.addi  	r11,r11,12
	l.addi  	r3,r3,-1
	l.sub   	r8,r11,r8
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sh    	18(r2),r3	 # movhi
	l.sb    	1(r2),r4	    # movqi
	l.sh    	12(r2),r8	 # movhi
	l.lhz   	r3,20(r6)	 # zero_extendqisi2
	l.lbz   	r14,3(r5)	 # zero_extendqisi2
	l.lbz   	r5,4(r5)	 # zero_extendqisi2
	l.slli  	r14,r14,8
	l.addi  	r3,r3,-8
	l.addi  	r4,r0,6	 # move immediate I
	l.or    	r14,r14,r5
	l.jal   	__divsi3	# delay slot filled
	l.sh    	16(r2),r14	 # movhi
	l.sfgts 	r14,r11
	l.bf	.L719	# delay slot filled
	l.addi  	r3,r0,11	 # move immediate I
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # move immediate I
	l.sb    	0(r2),r8	    # movqi
	l.addi	r1,r1,12
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L726:
	l.sb    	2(r2),r4	    # movqi
	l.sb    	4(r2),r4	    # movqi
	l.lhz   	r3,24(r6)	 # zero_extendqisi2
	l.lhz   	r4,26(r6)	 # zero_extendqisi2
	l.sh    	8(r2),r3	 # movhi
	l.j     	.L721	# delay slot filled
	l.sh    	10(r2),r4	 # movhi
.LFE382:
	.size	sqlite3BtreeInitPage, .-sqlite3BtreeInitPage
	.align	4
.proc	pageReinit
	.type	pageReinit, @function
pageReinit:
.LFB390:
	l.sw    	-4(r1),r9	 # SI store
.LCFI258:
	l.sw    	-8(r1),r2	 # SI store
.LCFI259:
	l.lwz   	r4,16(r3)	 # SI load
	l.addi  	r1,r1,-8
.LCFI260:
	l.sfeqi	r4,0
	l.bf	.L728	# delay slot filled
	l.lwz   	r5,4(r3)	 # SI load
	l.ori   	r4,r5,0	 # move reg to reg
.L728:
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L727
	l.nop			# nop delay slot
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	0(r4),r2	    # movqi
	l.lhs   	r3,22(r3)	 # extendhisi2_no_sext_mem
	l.sflesi	r3,1
	l.bf	.L727	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3BtreeInitPage	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L727:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE390:
	.size	pageReinit, .-pageReinit
	.align	4
.proc	btreeInvokeBusyHandler
	.type	btreeInvokeBusyHandler, @function
btreeInvokeBusyHandler:
.LFB391:
	l.sw    	-8(r1),r2	 # SI store
.LCFI261:
	l.lwz   	r2,4(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI262:
	l.addi  	r11,r2,404
	l.sfeqi	r11,0
.LCFI263:
	l.bf	.L732	# delay slot filled
	l.addi  	r1,r1,-8
	l.lwz   	r11,404(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L732	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r4,412(r2)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sflts 	r4,r11
	l.bf	.L732
	l.nop			# nop delay slot
	l.jalr  	r5	# delay slot filled
	l.lwz   	r3,408(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L737	# delay slot filled
	l.addi  	r3,r0,-1	 # move immediate I
	l.lwz   	r3,412(r2)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	412(r2),r3	 # SI store
.L732:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L737:
	l.sw    	412(r2),r3	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE391:
	.size	btreeInvokeBusyHandler, .-btreeInvokeBusyHandler
	.align	4
.proc	sqlite3VdbeMemSetNull
	.type	sqlite3VdbeMemSetNull, @function
sqlite3VdbeMemSetNull:
.LFB526:
	l.sw    	-8(r1),r2	 # SI store
.LCFI264:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lhz   	r3,28(r3)	 # zero_extendqisi2
	l.sw    	-4(r1),r9	 # SI store
.LCFI265:
	l.andi  	r4,r3,32
	l.sfeqi	r4,0
.LCFI266:
	l.bf	.L739	# delay slot filled
	l.addi  	r1,r1,-8
	l.jal   	sqlite3RowSetClear	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
.L739:
	l.addi  	r4,r0,-16640	 # move immediate I
	l.and   	r3,r3,r4
	l.addi  	r4,r0,5	 # movqi: move immediate
	l.ori   	r3,r3,1
	l.sb    	30(r2),r4	    # movqi
	l.sh    	28(r2),r3	 # movhi
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE526:
	.size	sqlite3VdbeMemSetNull, .-sqlite3VdbeMemSetNull
	.align	4
.proc	sqlite3VdbeJumpHere
	.type	sqlite3VdbeJumpHere, @function
sqlite3VdbeJumpHere:
.LFB563:
	l.sfltsi	r4,0
	l.bf	.L740	# delay slot filled
	l.lwz   	r5,12(r3)	 # SI load
	l.sfles 	r5,r4
	l.bf	.L740
	l.nop			# nop delay slot
	l.lwz   	r3,20(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L740	# delay slot filled
	l.slli  	r6,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r6,r4
	l.add   	r3,r3,r4
	l.sw    	8(r3),r5	 # SI store
.L740:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE563:
	.size	sqlite3VdbeJumpHere, .-sqlite3VdbeJumpHere
	.align	4
.proc	freeEphemeralFunction
	.type	freeEphemeralFunction, @function
freeEphemeralFunction:
.LFB564:
	l.sw    	-4(r1),r9	 # SI store
.LCFI267:
	l.sfeqi	r4,0
.LCFI268:
	l.bf	.L742	# delay slot filled
	l.addi  	r1,r1,-4
	l.lbz   	r5,3(r4)	 # zero_extendqisi2
	l.andi  	r5,r5,4
	l.sfeqi	r5,0
	l.bnf	.L744
	l.nop			# nop delay slot
.L742:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L744:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3DbFree
	l.nop			# nop delay slot	# sibcall s
.LFE564:
	.size	freeEphemeralFunction, .-freeEphemeralFunction
	.align	4
.proc	sqlite3VdbeSerialType
	.type	sqlite3VdbeSerialType, @function
sqlite3VdbeSerialType:
.LFB591:
	l.lhz   	r5,28(r3)	 # zero_extendqisi2
	l.sw    	-4(r1),r2	 # SI store
.LCFI269:
	l.andi  	r6,r5,1
	l.addi  	r11,r0,0	 # move immediate I
	l.sfne 	r6,r11
.LCFI270:
	l.bf	.L746	# delay slot filled
	l.addi  	r1,r1,-4
	l.andi  	r6,r5,4
	l.sfeq 	r6,r11
	l.bnf	.L770	# delay slot filled
	l.sflesi	r4,3
	l.andi  	r4,r5,8
	l.sfnei	r4,0
	l.bf	.L746	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.andi  	r6,r5,16384
	l.sfeqi	r6,0
	l.bf	.L755	# delay slot filled
	l.lwz   	r4,24(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.add   	r4,r4,r3
.L755:
	l.srli  	r5,r5,1
	l.addi  	r4,r4,6
	l.andi  	r5,r5,1
	l.add   	r4,r4,r4
	l.add   	r11,r4,r5
.L746:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L770:
	l.lwz   	r5,0(r3)	 # SI load
	l.bnf	.L771	# delay slot filled
	l.lwz   	r6,4(r3)	 # SI load
.L748:
	l.srai  	r3,r5,31
	l.addi  	r7,r0,1	 # move immediate I
	l.xor   	r6,r3,r6
	l.sub   	r4,r6,r3
	l.sfgtu 	r4,r6
	l.bf	.L749	# delay slot filled
	l.xor   	r5,r3,r5
	l.addi  	r7,r0,0	 # move immediate I
.L749:
	l.sub   	r3,r5,r3
	l.sub   	r7,r3,r7
	l.sfnei	r7,0
	l.bnf	.L772	# delay slot filled
	l.sfgtui	r7,32767
	l.bf	.L746	# delay slot filled
	l.addi  	r11,r0,6	 # move immediate I
	l.j     	.L746	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
.L771:
	l.sfne 	r11,r5
	l.bf	.L748	# delay slot filled
	l.andi  	r3,r6,1
	l.sfne 	r3,r6
	l.bf	.L748
	l.nop			# nop delay slot
	l.j     	.L746	# delay slot filled
	l.addi  	r11,r3,8
.L772:
	l.sfgtui	r4,127
	l.bnf	.L746	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.sfgtui	r4,32767
	l.bnf	.L746	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.movhi 	r2,hi(8323072)	 # move immediate M
	l.ori   	r2,r2,65535
	l.sfgtu 	r4,r2
	l.bnf	.L746	# delay slot filled
	l.addi  	r11,r0,3	 # move immediate I
	l.movhi 	r2,hi(2147418112)	 # move immediate M
	l.ori   	r2,r2,65535
	l.sfgtu 	r4,r2
	l.bnf	.L746	# delay slot filled
	l.addi  	r11,r0,4	 # move immediate I
	l.j     	.L746	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
.LFE591:
	.size	sqlite3VdbeSerialType, .-sqlite3VdbeSerialType
	.global __nedf2
	.align	4
.proc	SerialGetScopy
	.type	SerialGetScopy, @function
SerialGetScopy:
.LFB594:
	l.sw    	-8(r1),r2	 # SI store
.LCFI271:
	l.sw    	-4(r1),r9	 # SI store
.LCFI272:
	l.ori   	r2,r5,0	 # move reg to reg
	l.sfgtui	r4,11
.LCFI273:
	l.bnf	.L796	# delay slot filled
	l.addi  	r1,r1,-24
	l.addi  	r6,r4,-12
	l.srli  	r6,r6,1
	l.sfeqi	r6,0
	l.bf	.L797	# delay slot filled
	l.ori   	r11,r6,0	 # move reg to reg
	l.addi  	r12,r5,40
	l.addi  	r5,r0,0	 # move immediate I
.L789:
	l.add   	r8,r3,r5
	l.add   	r7,r12,r5
	l.slbz   	r8,0(r8)	 # zero_extendqisi2
	l.addi  	r5,r5,1
	l.sfne 	r6,r5
	l.bf	.L789	# delay slot filled
	l.sb    	0(r7),r8	    # movqi
.L788:
	l.addi  	r7,r0,0	 # move immediate I
	l.andi  	r4,r4,1
	l.sw    	20(r2),r12	 # SI store
	l.sw    	24(r2),r6	 # SI store
	l.sfeq 	r4,r7
	l.bnf	.L798	# delay slot filled
	l.sw    	32(r2),r7	 # SI store
	l.addi  	r4,r0,4112	 # movhi: move immediate
	l.sh    	28(r2),r4	 # movhi
.L784:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L796:
	l.movhi  	r6,hi(.L783)
	l.slli  	r5,r4,2
	l.ori   	r6,r6,lo(.L783)
	l.add   	r5,r5,r6
	l.lwz   	r5,0(r5)	 # SI load
	l.jr    	r5
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L783:
	.word	.L775
	.word	.L776
	.word	.L777
	.word	.L778
	.word	.L779
	.word	.L780
	.word	.L781
	.word	.L781
	.word	.L782
	.word	.L782
	.word	.L779
	.word	.L781
	.section .text
.L782:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r4,-8
	l.addi  	r6,r0,4	 # movhi: move immediate
	l.sw    	0(r2),r5	 # SI store
	l.sw    	4(r2),r4	 # SI store
	l.sh    	28(r2),r6	 # movhi
	l.addi	r1,r1,24
	l.ori   	r11,r5,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L775:
	l.addi  	r7,r0,1	 # movhi: move immediate
	l.addi  	r11,r0,0	 # move immediate I
	l.sh    	28(r2),r7	 # movhi
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L776:
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.slli  	r3,r3,24
	l.addi  	r4,r0,4	 # movhi: move immediate
	l.addi  	r11,r0,1	 # move immediate I
	l.sh    	28(r2),r4	 # movhi
	l.srai  	r4,r3,24
	l.srai  	r3,r3,31
	l.sw    	4(r2),r4	 # SI store
	l.sw    	0(r2),r3	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L777:
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.lbz   	r4,1(r3)	 # zero_extendqisi2
	l.slli  	r3,r5,8
	l.addi  	r5,r0,4	 # movhi: move immediate
	l.addi  	r11,r0,2	 # move immediate I
	l.or    	r3,r3,r4
	l.sh    	28(r2),r5	 # movhi
	l.srai  	r4,r3,31
	l.sw    	4(r2),r3	 # SI store
	l.sw    	0(r2),r4	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L778:
	l.lbs   	r6,0(r3)	 # extendqisi2_no_sext_mem
	l.lbz   	r5,1(r3)	 # zero_extendqisi2
	l.slli  	r6,r6,16
	l.slli  	r5,r5,8
	l.lbz   	r4,2(r3)	 # zero_extendqisi2
	l.or    	r3,r6,r5
	l.addi  	r6,r0,4	 # movhi: move immediate
	l.or    	r3,r3,r4
	l.sh    	28(r2),r6	 # movhi
	l.srai  	r4,r3,31
	l.sw    	4(r2),r3	 # SI store
	l.addi  	r11,r0,3	 # move immediate I
	l.sw    	0(r2),r4	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L779:
	l.slbz   	r6,0(r3)	 # zero_extendqisi2
	l.slbz   	r5,1(r3)	 # zero_extendqisi2
	l.slbz   	r4,2(r3)	 # zero_extendqisi2
	l.slbz   	r7,3(r3)	 # zero_extendqisi2
	l.slli  	r6,r6,24
	l.slli  	r5,r5,16
	l.or    	r3,r7,r6
	l.slli  	r4,r4,8
	l.or    	r3,r3,r5
	l.addi  	r7,r0,4	 # movhi: move immediate
	l.or    	r3,r3,r4
	l.sh    	28(r2),r7	 # movhi
	l.srai  	r4,r3,31
	l.sw    	4(r2),r3	 # SI store
	l.addi  	r11,r0,4	 # move immediate I
	l.sw    	0(r2),r4	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L780:
	l.lbz   	r5,2(r3)	 # zero_extendqisi2
	l.lbz   	r4,3(r3)	 # zero_extendqisi2
	l.slli  	r5,r5,24
	l.slli  	r4,r4,16
	l.lbz   	r6,4(r3)	 # zero_extendqisi2
	l.lbs   	r8,0(r3)	 # extendqisi2_no_sext_mem
	l.lbz   	r7,5(r3)	 # zero_extendqisi2
	l.or    	r4,r5,r4
	l.slli  	r6,r6,8
	l.lbz   	r5,1(r3)	 # zero_extendqisi2
	l.slli  	r3,r8,8
	l.or    	r4,r4,r7
	l.addi  	r7,r0,4	 # movhi: move immediate
	l.or    	r4,r4,r6
	l.or    	r3,r3,r5
	l.sw    	4(r2),r4	 # SI store
	l.sw    	0(r2),r3	 # SI store
	l.sh    	28(r2),r7	 # movhi
	l.addi	r1,r1,24
	l.addi  	r11,r0,6	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L781:
	l.slbz   	r13,0(r3)	 # zero_extendqisi2
	l.slbz   	r8,1(r3)	 # zero_extendqisi2
	l.slbz   	r12,2(r3)	 # zero_extendqisi2
	l.slbz   	r5,3(r3)	 # zero_extendqisi2
	l.slbz   	r15,4(r3)	 # zero_extendqisi2
	l.slbz   	r7,5(r3)	 # zero_extendqisi2
	l.slbz   	r6,6(r3)	 # zero_extendqisi2
	l.slbz   	r11,7(r3)	 # zero_extendqisi2
	l.slli  	r15,r15,24
	l.slli  	r7,r7,16
	l.slli  	r13,r13,24
	l.slli  	r8,r8,16
	l.or    	r7,r15,r7
	l.or    	r5,r5,r13
	l.slli  	r6,r6,8
	l.slli  	r3,r12,8
	l.or    	r7,r7,r11
	l.or    	r5,r5,r8
	l.or    	r6,r7,r6
	l.sfnei	r4,6
	l.bnf	.L799	# delay slot filled
	l.or    	r3,r5,r3
	l.sw    	8(r2),r3	 # SI store
	l.sw    	12(r2),r6	 # SI store
		l.lwz   	r3, 8(r2)
		l.lwz   	r4, 8+4(r2)
		l.sw    	8(r1), r3
		l.sw    	8+4(r1), r4
		l.lwz   	r3, 8(r1)
		l.lwz   	r4, 8+4(r1)
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
		l.lwz   	r3, 8(r1)
		l.lwz   	r4, 8+4(r1)
		l.lwz   	r5, 0(r1)
		l.lwz   	r6, 4(r1)
	l.jal   	__nedf2
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L786	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,8	 # move immediate I
.L786:
	l.sh    	28(r2),r3	 # movhi
	l.j     	.L784	# delay slot filled
	l.addi  	r11,r0,8	 # move immediate I
.L797:
	l.j     	.L788	# delay slot filled
	l.addi  	r12,r5,40
.L798:
	l.addi  	r3,r0,4098	 # movhi: move immediate
	l.j     	.L784	# delay slot filled
	l.sh    	28(r2),r3	 # movhi
.L799:
	l.sw    	0(r2),r3	 # SI store
	l.addi  	r3,r0,4	 # movhi: move immediate
	l.sw    	4(r2),r6	 # SI store
	l.sh    	28(r2),r3	 # movhi
	l.j     	.L784	# delay slot filled
	l.addi  	r11,r0,8	 # move immediate I
.LFE594:
	.size	SerialGetScopy, .-SerialGetScopy
	.align	4
.proc	sqlite3VdbeSerialGet
	.type	sqlite3VdbeSerialGet, @function
sqlite3VdbeSerialGet:
.LFB595:
	l.sw    	-8(r1),r2	 # SI store
.LCFI274:
	l.sw    	-4(r1),r9	 # SI store
.LCFI275:
	l.ori   	r2,r5,0	 # move reg to reg
	l.sfgtui	r4,11
.LCFI276:
	l.bnf	.L818	# delay slot filled
	l.addi  	r1,r1,-24
	l.addi  	r11,r4,-12
	l.addi  	r7,r0,0	 # move immediate I
	l.srli  	r11,r11,1
	l.andi  	r4,r4,1
	l.sw    	20(r5),r3	 # SI store
	l.sw    	32(r5),r7	 # SI store
	l.sfeq 	r4,r7
	l.bnf	.L819	# delay slot filled
	l.sw    	24(r5),r11	 # SI store
	l.addi  	r4,r0,4112	 # movhi: move immediate
	l.sh    	28(r5),r4	 # movhi
.L811:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L818:
	l.movhi  	r6,hi(.L810)
	l.slli  	r5,r4,2
	l.ori   	r6,r6,lo(.L810)
	l.add   	r5,r5,r6
	l.lwz   	r5,0(r5)	 # SI load
	l.jr    	r5
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L810:
	.word	.L802
	.word	.L803
	.word	.L804
	.word	.L805
	.word	.L806
	.word	.L807
	.word	.L808
	.word	.L808
	.word	.L809
	.word	.L809
	.word	.L802
	.word	.L802
	.section .text
.L809:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r4,-8
	l.addi  	r6,r0,4	 # movhi: move immediate
	l.sw    	0(r2),r5	 # SI store
	l.sw    	4(r2),r4	 # SI store
	l.sh    	28(r2),r6	 # movhi
	l.addi	r1,r1,24
	l.ori   	r11,r5,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L802:
	l.addi  	r7,r0,1	 # movhi: move immediate
	l.addi  	r11,r0,0	 # move immediate I
	l.sh    	28(r2),r7	 # movhi
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L803:
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.slli  	r3,r3,24
	l.addi  	r4,r0,4	 # movhi: move immediate
	l.addi  	r11,r0,1	 # move immediate I
	l.sh    	28(r2),r4	 # movhi
	l.srai  	r4,r3,24
	l.srai  	r3,r3,31
	l.sw    	4(r2),r4	 # SI store
	l.sw    	0(r2),r3	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L804:
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.lbz   	r4,1(r3)	 # zero_extendqisi2
	l.slli  	r3,r5,8
	l.addi  	r5,r0,4	 # movhi: move immediate
	l.addi  	r11,r0,2	 # move immediate I
	l.or    	r3,r3,r4
	l.sh    	28(r2),r5	 # movhi
	l.srai  	r4,r3,31
	l.sw    	4(r2),r3	 # SI store
	l.sw    	0(r2),r4	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L805:
	l.lbs   	r6,0(r3)	 # extendqisi2_no_sext_mem
	l.lbz   	r5,1(r3)	 # zero_extendqisi2
	l.slli  	r6,r6,16
	l.slli  	r5,r5,8
	l.lbz   	r4,2(r3)	 # zero_extendqisi2
	l.or    	r3,r6,r5
	l.addi  	r6,r0,4	 # movhi: move immediate
	l.or    	r3,r3,r4
	l.sh    	28(r2),r6	 # movhi
	l.srai  	r4,r3,31
	l.sw    	4(r2),r3	 # SI store
	l.addi  	r11,r0,3	 # move immediate I
	l.sw    	0(r2),r4	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L806:
	l.lbz   	r6,0(r3)	 # zero_extendqisi2
	l.lbz   	r5,1(r3)	 # zero_extendqisi2
	l.lbz   	r7,3(r3)	 # zero_extendqisi2
	l.slli  	r6,r6,24
	l.lbz   	r4,2(r3)	 # zero_extendqisi2
	l.slli  	r5,r5,16
	l.or    	r3,r7,r6
	l.slli  	r4,r4,8
	l.or    	r3,r3,r5
	l.addi  	r7,r0,4	 # movhi: move immediate
	l.or    	r3,r3,r4
	l.sh    	28(r2),r7	 # movhi
	l.srai  	r4,r3,31
	l.sw    	4(r2),r3	 # SI store
	l.addi  	r11,r0,4	 # move immediate I
	l.sw    	0(r2),r4	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L807:
	l.lbz   	r5,2(r3)	 # zero_extendqisi2
	l.lbz   	r4,3(r3)	 # zero_extendqisi2
	l.slli  	r5,r5,24
	l.slli  	r4,r4,16
	l.lbz   	r6,4(r3)	 # zero_extendqisi2
	l.lbs   	r8,0(r3)	 # extendqisi2_no_sext_mem
	l.lbz   	r7,5(r3)	 # zero_extendqisi2
	l.or    	r4,r5,r4
	l.slli  	r6,r6,8
	l.lbz   	r5,1(r3)	 # zero_extendqisi2
	l.slli  	r3,r8,8
	l.or    	r4,r4,r7
	l.addi  	r7,r0,4	 # movhi: move immediate
	l.or    	r4,r4,r6
	l.or    	r3,r3,r5
	l.sw    	4(r2),r4	 # SI store
	l.sw    	0(r2),r3	 # SI store
	l.sh    	28(r2),r7	 # movhi
	l.addi	r1,r1,24
	l.addi  	r11,r0,6	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L808:
	l.lbz   	r15,4(r3)	 # zero_extendqisi2
	l.lbz   	r13,5(r3)	 # zero_extendqisi2
	l.lbz   	r12,0(r3)	 # zero_extendqisi2
	l.lbz   	r8,1(r3)	 # zero_extendqisi2
	l.lbz   	r5,3(r3)	 # zero_extendqisi2
	l.slli  	r15,r15,24
	l.slli  	r13,r13,16
	l.slli  	r12,r12,24
	l.lbz   	r7,6(r3)	 # zero_extendqisi2
	l.lbz   	r6,2(r3)	 # zero_extendqisi2
	l.lbz   	r11,7(r3)	 # zero_extendqisi2
	l.slli  	r8,r8,16
	l.or    	r3,r15,r13
	l.or    	r5,r5,r12
	l.slli  	r7,r7,8
	l.slli  	r6,r6,8
	l.or    	r3,r3,r11
	l.or    	r5,r5,r8
	l.or    	r3,r3,r7
	l.sfnei	r4,6
	l.bnf	.L820	# delay slot filled
	l.or    	r5,r5,r6
	l.sw    	8(r2),r5	 # SI store
	l.sw    	12(r2),r3	 # SI store
		l.lwz   	r3, 8(r2)
		l.lwz   	r4, 8+4(r2)
		l.sw    	8(r1), r3
		l.sw    	8+4(r1), r4
		l.lwz   	r3, 8(r1)
		l.lwz   	r4, 8+4(r1)
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
		l.lwz   	r3, 8(r1)
		l.lwz   	r4, 8+4(r1)
		l.lwz   	r5, 0(r1)
		l.lwz   	r6, 4(r1)
	l.jal   	__nedf2
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L813	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,8	 # move immediate I
.L813:
	l.sh    	28(r2),r3	 # movhi
	l.j     	.L811	# delay slot filled
	l.addi  	r11,r0,8	 # move immediate I
.L819:
	l.addi  	r3,r0,4098	 # movhi: move immediate
	l.j     	.L811	# delay slot filled
	l.sh    	28(r5),r3	 # movhi
.L820:
	l.sw    	4(r2),r3	 # SI store
	l.addi  	r3,r0,4	 # movhi: move immediate
	l.sw    	0(r2),r5	 # SI store
	l.sh    	28(r2),r3	 # movhi
	l.j     	.L811	# delay slot filled
	l.addi  	r11,r0,8	 # move immediate I
.LFE595:
	.size	sqlite3VdbeSerialGet, .-sqlite3VdbeSerialGet
	.align	4
.proc	sqlite3VdbeRecordUnpack
	.type	sqlite3VdbeRecordUnpack, @function
sqlite3VdbeRecordUnpack:
.LFB596:
	l.sw    	-44(r1),r2	 # SI store
.LCFI277:
	l.lhz   	r2,6(r3)	 # zero_extendqisi2
	l.sw    	-28(r1),r20	 # SI store
.LCFI278:
	l.ori   	r20,r3,0	 # move reg to reg
	l.addi  	r3,r2,1
	l.sw    	-20(r1),r24	 # SI store
.LCFI279:
	l.slli  	r8,r3,4
	l.slli  	r3,r3,8
	l.sub   	r24,r0,r6
	l.sw    	-12(r1),r28	 # SI store
.LCFI280:
	l.andi  	r24,r24,7
	l.ori   	r28,r4,0	 # move reg to reg
	l.sub   	r4,r3,r8
	l.sw    	-16(r1),r26	 # SI store
.LCFI281:
	l.sw    	-4(r1),r9	 # SI store
.LCFI282:
	l.sw    	-40(r1),r14	 # SI store
.LCFI283:
	l.sw    	-36(r1),r16	 # SI store
.LCFI284:
	l.sw    	-32(r1),r18	 # SI store
.LCFI285:
	l.sw    	-24(r1),r22	 # SI store
.LCFI286:
	l.sw    	-8(r1),r30	 # SI store
.LCFI287:
	l.sub   	r7,r7,r24
	l.addi  	r4,r4,24
	l.addi  	r1,r1,-52
.LCFI288:
	l.sfges 	r7,r4
	l.bnf	.L836	# delay slot filled
	l.ori   	r26,r5,0	 # move reg to reg
	l.add   	r24,r6,r24
	l.addi  	r3,r0,2	 # movhi: move immediate
	l.sh    	6(r24),r3	 # movhi
.L824:
	l.addi  	r3,r2,1
	l.addi  	r2,r24,24
	l.sw    	0(r24),r20	 # SI store
	l.sh    	4(r24),r3	 # movhi
	l.sw    	16(r24),r2	 # SI store
	l.lbs   	r3,0(r26)	 # extendqisi2_no_sext_mem
	l.sfltsi	r3,0
	l.bf	.L825	# delay slot filled
	l.lbz   	r18,0(r26)	 # zero_extendqisi2
	l.addi  	r16,r0,1	 # move immediate I
	l.sw    	4(r1),r18	 # SI store
.L826:
	l.sfgeu 	r16,r18
	l.bf	.L827	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.lhz   	r14,4(r24)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L827	# delay slot filled
	l.addi  	r2,r2,31
	l.j     	.L833	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L837:
	l.srli  	r3,r3,1
	l.sfnei	r3,0
	l.bf	.L827
	l.nop			# nop delay slot
.L830:
	l.lbz   	r3,4(r20)	 # zero_extendqisi2
	l.sb    	0(r2),r3	    # movqi
	l.add   	r3,r26,r18
	l.lwz   	r5,0(r20)	 # SI load
	l.add   	r16,r16,r11
	l.sw    	-15(r2),r5	 # SI store
	l.addi  	r5,r0,0	 # movhi: move immediate
	l.addi  	r14,r14,1
	l.sh    	-3(r2),r5	 # movhi
	l.addi  	r5,r0,0	 # move immediate I
	l.andi  	r14,r14,0xffff	 # zero_extendqisi2
	l.sw    	5(r2),r5	 # SI store
	l.jal   	sqlite3VdbeSerialGet	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.lwz   	r3,4(r1)	 # SI load
	l.sfleu 	r3,r16
	l.bf	.L827
	l.nop			# nop delay slot
	l.lhz   	r3,4(r24)	 # zero_extendqisi2
	l.sfleu 	r3,r14
	l.bf	.L827	# delay slot filled
	l.addi  	r2,r2,240
	l.add   	r18,r18,r11
.L833:
	l.add   	r3,r26,r16
	l.addi  	r22,r2,-31
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.sfltsi	r5,0
	l.bf	.L828	# delay slot filled
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.addi  	r11,r0,1	 # move immediate I
	l.sw    	0(r1),r4	 # SI store
.L829:
	l.sfgts 	r28,r18
	l.bf	.L830	# delay slot filled
	l.sfleui	r4,11
	l.bnf	.L837	# delay slot filled
	l.addi  	r3,r4,-12
	l.movhi  	r5,hi(aSize.12542)
	l.ori   	r5,r5,lo(aSize.12542)
	l.add   	r3,r4,r5
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L830
	l.nop			# nop delay slot
.L827:
	l.sh    	4(r24),r14	 # movhi
.L823:
	l.addi	r1,r1,52
	l.ori   	r11,r24,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L828:
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.j     	.L829	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
.L825:
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.addi  	r4,r1,4
	l.lwz   	r18,4(r1)	 # SI load
	l.j     	.L826	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L836:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.lwz   	r3,0(r20)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L823	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.addi  	r2,r0,3	 # movhi: move immediate
	l.sh    	6(r11),r2	 # movhi
	l.j     	.L824	# delay slot filled
	l.lhz   	r2,6(r20)	 # zero_extendqisi2
.LFE596:
	.size	sqlite3VdbeRecordUnpack, .-sqlite3VdbeRecordUnpack
	.align	4
.proc	columnName
	.type	columnName, @function
columnName:
.LFB659:
	l.sw    	-8(r1),r2	 # SI store
.LCFI289:
	l.sw    	-4(r1),r9	 # SI store
.LCFI290:
	l.lwz   	r2,0(r3)	 # SI load
	l.addi  	r1,r1,-8
.LCFI291:
	l.sfltsi	r4,0
	l.bnf	.L842	# delay slot filled
	l.lwz   	r7,108(r3)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
.L839:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L842:
	l.sflts 	r4,r7
	l.bnf	.L843	# delay slot filled
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.andi  	r8,r8,0xff	 # zero_extendqisi2
	l.sfeqi	r8,0
	l.bf	.L839	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.mul   	r6,r6,r7
.L845:
	l.add   	r4,r6,r4
	l.lwz   	r3,40(r3)	 # SI load
	l.slli  	r8,r4,4
	l.slli  	r4,r4,8
	l.sub   	r4,r4,r8
	l.jalr  	r5	# delay slot filled
	l.add   	r3,r3,r4
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L839
	l.nop			# nop delay slot
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L839	# delay slot filled
	l.sb    	30(r2),r3	    # movqi
.L843:
	l.addi  	r8,r0,0	 # movqi: move immediate
	l.andi  	r8,r8,0xff	 # zero_extendqisi2
	l.sfeqi	r8,0
	l.bf	.L839	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L845	# delay slot filled
	l.mul   	r6,r6,r7
.LFE659:
	.size	columnName, .-columnName
	.align	4
.proc	memjrnlSync
	.type	memjrnlSync, @function
memjrnlSync:
.LFB702:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE702:
	.size	memjrnlSync, .-memjrnlSync
	.align	4
.proc	memjrnlFileSize
	.type	memjrnlFileSize, @function
memjrnlFileSize:
.LFB703:
		l.lwz   	r5, 8(r3)
		l.lwz   	r6, 8+4(r3)
		l.sw    	0(r4), r5
		l.sw    	4(r4), r6
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE703:
	.size	memjrnlFileSize, .-memjrnlFileSize
	.align	4
.proc	heightOfExprList
	.type	heightOfExprList, @function
heightOfExprList:
.LFB736:
	l.sfeqi	r3,0
	l.bf	.L848
	l.nop			# nop delay slot
	l.lwz   	r8,0(r3)	 # SI load
	l.sflesi	r8,0
	l.bf	.L848
	l.nop			# nop delay slot
	l.lwz   	r6,12(r3)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
.L851:
	l.lwz   	r7,0(r6)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L850	# delay slot filled
	l.addi  	r5,r5,1
	l.lwz   	r7,60(r7)	 # SI load
	l.lwz   	r11,0(r4)	 # SI load
	l.sfles 	r7,r11
	l.bf	.L853	# delay slot filled
	l.sfgts 	r8,r5
	l.sw    	0(r4),r7	 # SI store
	l.lwz   	r8,0(r3)	 # SI load
.L850:
	l.sfgts 	r8,r5
.L853:
	l.bf	.L851	# delay slot filled
	l.addi  	r6,r6,16
.L848:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE736:
	.size	heightOfExprList, .-heightOfExprList
	.align	4
.proc	heightOfSelect
	.type	heightOfSelect, @function
heightOfSelect:
.LFB737:
	l.sw    	-12(r1),r2	 # SI store
.LCFI292:
	l.sw    	-8(r1),r14	 # SI store
.LCFI293:
	l.sw    	-4(r1),r9	 # SI store
.LCFI294:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI295:
	l.sfeqi	r3,0
	l.bf	.L854	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
.L861:
	l.lwz   	r3,12(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L856
	l.nop			# nop delay slot
	l.lwz   	r3,60(r3)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.sfles 	r3,r4
	l.bf	.L856
	l.nop			# nop delay slot
	l.sw    	0(r2),r3	 # SI store
.L856:
	l.lwz   	r3,20(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L857
	l.nop			# nop delay slot
	l.lwz   	r3,60(r3)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.sfles 	r3,r4
	l.bf	.L857
	l.nop			# nop delay slot
	l.sw    	0(r2),r3	 # SI store
.L857:
	l.lwz   	r3,40(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L858
	l.nop			# nop delay slot
	l.lwz   	r3,60(r3)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.sfles 	r3,r4
	l.bf	.L858
	l.nop			# nop delay slot
	l.sw    	0(r2),r3	 # SI store
.L858:
	l.lwz   	r3,44(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L859
	l.nop			# nop delay slot
	l.lwz   	r3,60(r3)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.sfles 	r3,r4
	l.bf	.L859
	l.nop			# nop delay slot
	l.sw    	0(r2),r3	 # SI store
.L859:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	heightOfExprList	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r3,16(r14)	 # SI load
	l.jal   	heightOfExprList	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r3,24(r14)	 # SI load
	l.jal   	heightOfExprList	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r14,28(r14)	 # SI load
	l.sfnei	r14,0
	l.bf	.L861
	l.nop			# nop delay slot
.L854:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE737:
	.size	heightOfSelect, .-heightOfSelect
	.align	4
.proc	exprSetHeight
	.type	exprSetHeight, @function
exprSetHeight:
.LFB738:
	l.sw    	-8(r1),r2	 # SI store
.LCFI296:
	l.sw    	-4(r1),r9	 # SI store
.LCFI297:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI298:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r1),r3	 # SI store
	l.lwz   	r3,20(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L864
	l.nop			# nop delay slot
	l.lwz   	r3,60(r3)	 # SI load
	l.sflesi	r3,0
	l.bnf	.L868
	l.nop			# nop delay slot
.L864:
	l.lwz   	r3,24(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L865	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
	l.lwz   	r3,60(r3)	 # SI load
	l.sfles 	r3,r4
	l.bnf	.L869
	l.nop			# nop delay slot
.L865:
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,4096
	l.sfeqi	r3,0
	l.bnf	.L870
	l.nop			# nop delay slot
.L866:
	l.lwz   	r3,28(r2)	 # SI load
	l.jal   	heightOfExprList	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	60(r2),r3	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L869:
	l.sw    	0(r1),r3	 # SI store
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,4096
	l.sfeqi	r3,0
	l.bf	.L866
	l.nop			# nop delay slot
.L870:
	l.lwz   	r3,28(r2)	 # SI load
	l.jal   	heightOfSelect	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	60(r2),r3	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L868:
	l.j     	.L864	# delay slot filled
	l.sw    	0(r1),r3	 # SI store
.LFE738:
	.size	exprSetHeight, .-exprSetHeight
	.align	4
.proc	dupedExprNodeSize
	.type	dupedExprNodeSize, @function
dupedExprNodeSize:
.LFB752:
	l.sw    	-4(r1),r2	 # SI store
.LCFI299:
	l.andi  	r5,r4,1
	l.sfeqi	r5,0
.LCFI300:
	l.bf	.L877	# delay slot filled
	l.addi  	r1,r1,-4
	l.lwz   	r5,20(r3)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L884	# delay slot filled
	l.addi  	r6,r0,36	 # move immediate I
.L886:
	l.j     	.L872	# delay slot filled
	l.andi  	r4,r4,2
.L877:
	l.addi  	r6,r0,64	 # move immediate I
	l.andi  	r4,r4,2
.L872:
	l.lwz   	r5,4(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L873	# delay slot filled
	l.ori   	r11,r5,0	 # move reg to reg
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.lwz   	r11,8(r3)	 # SI load
	l.ori   	r2,r2,65535
	l.and   	r11,r11,r2
	l.addi  	r11,r11,1
.L873:
	l.sfeqi	r4,0
	l.bf	.L874	# delay slot filled
	l.add   	r11,r11,r6
	l.lwz   	r4,12(r3)	 # SI load
	l.sfeq 	r5,r4
	l.bf	.L875	# delay slot filled
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.lwz   	r3,16(r3)	 # SI load
	l.ori   	r2,r2,65535
	l.and   	r3,r3,r2
.L876:
	l.add   	r11,r11,r3
.L874:
	l.addi  	r2,r0,-8	 # move immediate I
.L885:
	l.addi  	r11,r11,7
	l.addi	r1,r1,4
	l.and   	r11,r11,r2
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L884:
	l.lwz   	r5,24(r3)	 # SI load
	l.sfnei	r5,0
	l.bf	.L886
	l.nop			# nop delay slot
	l.lwz   	r5,32(r3)	 # SI load
	l.sfnei	r5,0
	l.bf	.L886
	l.nop			# nop delay slot
	l.lwz   	r5,28(r3)	 # SI load
	l.sfnei	r5,0
	l.bf	.L886
	l.nop			# nop delay slot
	l.andi  	r4,r4,2
	l.sfeqi	r4,0
	l.bf	.L872	# delay slot filled
	l.addi  	r6,r0,12	 # move immediate I
	l.j     	.L872	# delay slot filled
	l.addi  	r6,r0,20	 # move immediate I
.L875:
	l.lwz   	r5,16(r3)	 # SI load
	l.ori   	r2,r2,65535
	l.lwz   	r4,8(r3)	 # SI load
	l.and   	r3,r5,r2
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.ori   	r2,r2,65535
	l.and   	r4,r4,r2
	l.sfeq 	r4,r3
	l.bnf	.L876
	l.nop			# nop delay slot
	l.j     	.L885	# delay slot filled
	l.addi  	r2,r0,-8	 # move immediate I
.LFE752:
	.size	dupedExprNodeSize, .-dupedExprNodeSize
	.align	4
.proc	dupedExprSize
	.type	dupedExprSize, @function
dupedExprSize:
.LFB753:
	l.sw    	-24(r1),r2	 # SI store
.LCFI301:
	l.sw    	-20(r1),r14	 # SI store
.LCFI302:
	l.sw    	-16(r1),r16	 # SI store
.LCFI303:
	l.sw    	-4(r1),r9	 # SI store
.LCFI304:
	l.sw    	-12(r1),r18	 # SI store
.LCFI305:
	l.sw    	-8(r1),r20	 # SI store
.LCFI306:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI307:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bf	.L888	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.j     	.L890	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L889:
	l.jal   	dupedExprSize	# delay slot filled
	l.lwz   	r3,20(r2)	 # SI load
	l.lwz   	r2,24(r2)	 # SI load
	l.add   	r11,r11,r20
	l.sfnei	r2,0
	l.bnf	.L888	# delay slot filled
	l.add   	r16,r16,r11
.L890:
	l.addi  	r3,r0,-3	 # move immediate I
	l.ori   	r4,r14,0	 # move reg to reg
	l.and   	r18,r14,r3
	l.jal   	dupedExprNodeSize	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.andi  	r3,r14,1
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfnei	r3,0
	l.bf	.L889	# delay slot filled
	l.ori   	r14,r18,0	 # move reg to reg
	l.add   	r16,r16,r11
.L888:
	l.addi	r1,r1,24
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE753:
	.size	dupedExprSize, .-dupedExprSize
	.align	4
.proc	exprNodeIsConstant
	.type	exprNodeIsConstant, @function
exprNodeIsConstant:
.LFB764:
	l.sw    	-4(r1),r2	 # SI store
.LCFI308:
	l.lwz   	r5,12(r3)	 # SI load
	l.sfnei	r5,3
.LCFI309:
	l.bnf	.L903	# delay slot filled
	l.addi  	r1,r1,-4
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
.L907:
	l.sfeqi	r4,116
	l.bf	.L896	# delay slot filled
	l.sfgtui	r4,116
	l.bnf	.L904	# delay slot filled
	l.sfeqi	r4,20
	l.sfeqi	r4,150
	l.bf	.L897	# delay slot filled
	l.sfltui	r4,150
	l.bnf	.L905	# delay slot filled
	l.sfgtui	r4,153
	l.addi  	r11,r0,0	 # move immediate I
	l.addi	r1,r1,4
.L909:
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L897:
	l.sfeqi	r5,2
	l.bf	.L895	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L896:
	l.addi  	r2,r0,0	 # move immediate I
.L908:
	l.addi  	r11,r0,2	 # move immediate I
	l.sw    	12(r3),r2	 # SI store
.L895:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L904:
	l.bf	.L896	# delay slot filled
	l.sfeqi	r4,26
	l.bf	.L896	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L909	# delay slot filled
	l.addi	r1,r1,4
.L903:
	l.lhz   	r6,2(r4)	 # zero_extendqisi2
	l.andi  	r6,r6,1
	l.sfeqi	r6,0
	l.bnf	.L908	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L907	# delay slot filled
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
.L905:
	l.bnf	.L896	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L909	# delay slot filled
	l.addi	r1,r1,4
.LFE764:
	.size	exprNodeIsConstant, .-exprNodeIsConstant
	.align	4
.proc	selectNodeIsConstant
	.type	selectNodeIsConstant, @function
selectNodeIsConstant:
.LFB765:
	l.sw    	-4(r1),r2	 # SI store
.LCFI310:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r1,r1,-4
.LCFI311:
	l.sw    	12(r3),r2	 # SI store
	l.addi	r1,r1,4
	l.addi  	r11,r0,2	 # move immediate I
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE765:
	.size	selectNodeIsConstant, .-selectNodeIsConstant
	.align	4
.proc	sqlite3ExprIsInteger
	.type	sqlite3ExprIsInteger, @function
sqlite3ExprIsInteger:
.LFB770:
	l.lhz   	r11,2(r3)	 # zero_extendqisi2
	l.sw    	-12(r1),r2	 # SI store
.LCFI312:
	l.sw    	-8(r1),r14	 # SI store
.LCFI313:
	l.sw    	-4(r1),r9	 # SI store
.LCFI314:
	l.andi  	r11,r11,2048
	l.addi  	r1,r1,-16
.LCFI315:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L922	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.sfeqi	r3,92
	l.bf	.L915	# delay slot filled
	l.sfeqi	r3,129
	l.bf	.L916
	l.nop			# nop delay slot
	l.sfeqi	r3,91
	l.bf	.L923
	l.nop			# nop delay slot
.L913:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L922:
	l.lwz   	r2,36(r3)	 # SI load
	l.addi  	r11,r0,1	 # move immediate I
	l.sw    	0(r4),r2	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L915:
	l.jal   	sqlite3ExprIsInteger	# delay slot filled
	l.lwz   	r3,20(r2)	 # SI load
	l.sfeqi	r11,0
.L924:
	l.bf	.L913
	l.nop			# nop delay slot
.L918:
	l.addi  	r4,r0,-127	 # movqi: move immediate
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.sb    	0(r2),r4	    # movqi
	l.ori   	r3,r3,2048
	l.lwz   	r4,0(r14)	 # SI load
	l.sh    	2(r2),r3	 # movhi
	l.sw    	36(r2),r4	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L923:
	l.lwz   	r3,20(r2)	 # SI load
	l.jal   	sqlite3ExprIsInteger	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L913	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.addi  	r11,r0,1	 # move immediate I
	l.sub   	r3,r0,r3
	l.j     	.L918	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L916:
	l.jal   	sqlite3GetInt32	# delay slot filled
	l.lwz   	r3,4(r2)	 # SI load
	l.j     	.L924	# delay slot filled
	l.sfeqi	r11,0
.LFE770:
	.size	sqlite3ExprIsInteger, .-sqlite3ExprIsInteger
	.section	.rodata.str1.1
.LC16:
	.string	"_ROWID_"
.LC17:
	.string	"ROWID"
.LC18:
	.string	"OID"
	.section .text
	.align	4
.proc	sqlite3IsRowid
	.type	sqlite3IsRowid, @function
sqlite3IsRowid:
.LFB771:
	l.movhi  	r4,hi(.LC16)
	l.sw    	-12(r1),r2	 # SI store
.LCFI316:
	l.sw    	-8(r1),r14	 # SI store
.LCFI317:
	l.sw    	-4(r1),r9	 # SI store
.LCFI318:
	l.ori   	r4,r4,lo(.LC16)
	l.addi  	r1,r1,-12
.LCFI319:
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L929	# delay slot filled
	l.movhi  	r4,hi(.LC17)
.L926:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L929:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC17)
	l.sfeqi	r11,0
	l.bf	.L926	# delay slot filled
	l.movhi  	r4,hi(.LC18)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC18)
	l.sub   	r2,r0,r11
	l.addi	r1,r1,12
	l.or    	r11,r2,r11
	l.lwz   	r9,-4(r1)	 # SI load
	l.xori  	r2,r11,0xffff
	l.lwz   	r14,-8(r1)	 # SI load
	l.srli  	r2,r2,31
	l.ori   	r11,r2,0	 # move reg to reg
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-12(r1)	 # SI load
.LFE771:
	.size	sqlite3IsRowid, .-sqlite3IsRowid
	.align	4
.proc	sqlite3ExprCacheStore
	.type	sqlite3ExprCacheStore, @function
sqlite3ExprCacheStore:
.LFB779:
	l.addi  	r8,r3,96
	l.sw    	-4(r1),r2	 # SI store
.LCFI320:
	l.ori   	r7,r8,0	 # move reg to reg
	l.addi  	r1,r1,-4
.LCFI321:
	l.j     	.L936	# delay slot filled
	l.addi  	r11,r0,10	 # move immediate I
.L931:
	l.sfeqi	r11,0
.L945:
	l.bf	.L935	# delay slot filled
	l.addi  	r7,r7,24
.L936:
	l.lwz   	r12,16(r7)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L931	# delay slot filled
	l.addi  	r11,r11,-1
	l.lwz   	r13,0(r7)	 # SI load
	l.sfne 	r13,r4
	l.bf	.L945	# delay slot filled
	l.sfeqi	r11,0
	l.lwz   	r13,4(r7)	 # SI load
	l.sfne 	r13,r5
	l.bf	.L945	# delay slot filled
	l.sfeqi	r11,0
	l.lbz   	r4,9(r7)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L946	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.lbz   	r4,21(r3)	 # zero_extendqisi2
	l.sfgtui	r4,7
	l.bf	.L947	# delay slot filled
	l.addi  	r8,r4,6
	l.addi  	r5,r4,1
	l.slli  	r4,r8,2
	l.sb    	21(r3),r5	    # movqi
	l.add   	r4,r3,r4
	l.sw    	0(r4),r12	 # SI store
	l.addi  	r2,r0,0	 # movqi: move immediate
.L947:
	l.sb    	9(r7),r2	    # movqi
	l.addi  	r2,r0,0	 # movqi: move immediate
.L946:
	l.lwz   	r4,84(r3)	 # SI load
	l.sb    	8(r7),r2	    # movqi
	l.sw    	12(r7),r4	 # SI store
	l.lwz   	r5,88(r3)	 # SI load
	l.sw    	16(r7),r6	 # SI store
	l.addi  	r4,r5,1
	l.sw    	20(r7),r5	 # SI store
	l.sw    	88(r3),r4	 # SI store
.L930:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L935:
	l.sflesi	r6,0
	l.bf	.L930
	l.nop			# nop delay slot
	l.j     	.L939	# delay slot filled
	l.addi  	r11,r8,216
.L944:
	l.addi  	r8,r8,24
.L939:
	l.lwz   	r7,16(r8)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L943	# delay slot filled
	l.sfeq 	r8,r11
	l.bnf	.L944	# delay slot filled
	l.movhi 	r12,hi(2147418112)	 # move immediate M
	l.addi  	r8,r3,116
	l.addi  	r13,r0,-1	 # move immediate I
	l.ori   	r12,r12,65535
	l.addi  	r7,r0,0	 # move immediate I
.L941:
	l.lwz   	r11,0(r8)	 # SI load
	l.sfges 	r11,r12
	l.bf	.L940	# delay slot filled
	l.addi  	r8,r8,24
	l.ori   	r13,r7,0	 # move reg to reg
	l.ori   	r12,r11,0	 # move reg to reg
.L940:
	l.addi  	r7,r7,1
	l.sfnei	r7,10
	l.bf	.L941	# delay slot filled
	l.sfeqi	r13,-1
	l.bf	.L930	# delay slot filled
	l.add   	r7,r13,r13
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.add   	r7,r7,r13
	l.lwz   	r11,84(r3)	 # SI load
	l.slli  	r7,r7,3
	l.add   	r7,r3,r7
	l.addi  	r8,r7,104
	l.sw    	96(r7),r4	 # SI store
	l.sb    	0(r8),r2	    # movqi
	l.sb    	1(r8),r2	    # movqi
	l.sw    	108(r7),r11	 # SI store
	l.lwz   	r8,88(r3)	 # SI load
	l.sw    	100(r7),r5	 # SI store
	l.sw    	112(r7),r6	 # SI store
	l.sw    	116(r7),r8	 # SI store
	l.addi  	r4,r8,1
	l.addi	r1,r1,4
	l.sw    	88(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L943:
	l.lwz   	r11,84(r3)	 # SI load
	l.sb    	8(r8),r7	    # movqi
	l.sb    	9(r8),r7	    # movqi
	l.sw    	12(r8),r11	 # SI store
	l.lwz   	r7,88(r3)	 # SI load
	l.sw    	0(r8),r4	 # SI store
	l.sw    	4(r8),r5	 # SI store
	l.sw    	16(r8),r6	 # SI store
	l.sw    	20(r8),r7	 # SI store
	l.addi  	r4,r7,1
	l.addi	r1,r1,4
	l.sw    	88(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE779:
	.size	sqlite3ExprCacheStore, .-sqlite3ExprCacheStore
	.align	4
.proc	sqlite3ExprCacheClear
	.type	sqlite3ExprCacheClear, @function
sqlite3ExprCacheClear:
.LFB784:
	l.sw    	-4(r1),r2	 # SI store
.LCFI322:
	l.addi  	r5,r0,10	 # move immediate I
	l.addi  	r1,r1,-4
.LCFI323:
	l.addi  	r4,r3,112
	l.addi  	r6,r3,105
.L952:
	l.lwz   	r7,0(r4)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L949	# delay slot filled
	l.addi  	r5,r5,-1
	l.lbz   	r8,0(r6)	 # zero_extendqisi2
	l.sfeqi	r8,0
	l.bf	.L954	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lbz   	r8,21(r3)	 # zero_extendqisi2
	l.addi  	r11,r8,6
	l.addi  	r12,r8,1
	l.sfgtui	r8,7
	l.bf	.L951	# delay slot filled
	l.slli  	r11,r11,2
	l.add   	r11,r3,r11
	l.sb    	21(r3),r12	    # movqi
	l.sw    	0(r11),r7	 # SI store
.L951:
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	0(r6),r2	    # movqi
	l.addi  	r2,r0,0	 # move immediate I
.L954:
	l.sw    	0(r4),r2	 # SI store
.L949:
	l.addi  	r4,r4,24
	l.sfnei	r5,0
	l.bf	.L952	# delay slot filled
	l.addi  	r6,r6,24
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE784:
	.size	sqlite3ExprCacheClear, .-sqlite3ExprCacheClear
	.align	4
.proc	sqlite3ExprCacheAffinityChange
	.type	sqlite3ExprCacheAffinityChange, @function
sqlite3ExprCacheAffinityChange:
.LFB785:
	l.addi  	r7,r4,-1
	l.sw    	-4(r1),r2	 # SI store
.LCFI324:
	l.addi  	r3,r3,112
	l.addi  	r1,r1,-4
.LCFI325:
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r5,r7,r5
.L959:
	l.lwz   	r7,0(r3)	 # SI load
	l.addi  	r6,r6,1
	l.sfles 	r7,r5
	l.bf	.L957	# delay slot filled
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.addi  	r8,r0,0	 # movqi: move immediate
.L957:
	l.andi  	r8,r8,0xff	 # zero_extendqisi2
	l.sfeqi	r8,0
	l.bf	.L956	# delay slot filled
	l.addi  	r11,r0,1	 # movqi: move immediate
	l.sfges 	r7,r4
	l.bf	.L961	# delay slot filled
	l.andi  	r11,r11,0xff	 # zero_extendqisi2
	l.addi  	r11,r0,0	 # movqi: move immediate
	l.andi  	r11,r11,0xff	 # zero_extendqisi2
.L961:
	l.sfeqi	r11,0
	l.bf	.L962	# delay slot filled
	l.sfnei	r6,10
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	-8(r3),r2	    # movqi
.L956:
	l.sfnei	r6,10
.L962:
	l.bf	.L959	# delay slot filled
	l.addi  	r3,r3,24
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE785:
	.size	sqlite3ExprCacheAffinityChange, .-sqlite3ExprCacheAffinityChange
	.align	4
.proc	sqlite3ExprCompare
	.type	sqlite3ExprCompare, @function
sqlite3ExprCompare:
.LFB801:
	l.sw    	-32(r1),r14	 # SI store
.LCFI326:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sub   	r3,r0,r4
	l.sw    	-36(r1),r2	 # SI store
.LCFI327:
	l.sw    	-4(r1),r9	 # SI store
.LCFI328:
	l.sw    	-28(r1),r16	 # SI store
.LCFI329:
	l.sw    	-24(r1),r18	 # SI store
.LCFI330:
	l.sw    	-20(r1),r20	 # SI store
.LCFI331:
	l.sw    	-16(r1),r22	 # SI store
.LCFI332:
	l.sw    	-12(r1),r24	 # SI store
.LCFI333:
	l.sw    	-8(r1),r26	 # SI store
.LCFI334:
	l.or    	r3,r4,r3
	l.addi  	r1,r1,-36
.LCFI335:
	l.sfgesi	r3,0
	l.bf	.L986	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.sub   	r11,r0,r14
	l.or    	r11,r14,r11
	l.xori  	r11,r11,0xffff
	l.srli  	r11,r11,31
	l.sfeqi	r11,0
	l.bnf	.L986
	l.nop			# nop delay slot
	l.lhz   	r3,2(r14)	 # zero_extendqisi2
	l.andi  	r4,r3,4096
	l.sfnei	r4,0
	l.bf	.L966
	l.nop			# nop delay slot
	l.lhz   	r4,2(r2)	 # zero_extendqisi2
	l.andi  	r5,r4,4096
	l.sfnei	r5,0
	l.bf	.L966	# delay slot filled
	l.xor   	r3,r4,r3
	l.andi  	r16,r3,16
	l.sfnei	r16,0
	l.bf	.L966
	l.nop			# nop delay slot
	l.lbz   	r18,0(r14)	 # zero_extendqisi2
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.sfne 	r3,r18
	l.bnf	.L988
	l.nop			# nop delay slot
.L966:
	l.addi	r1,r1,36
.L990:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L986:
	l.xor   	r2,r2,r14
	l.sub   	r11,r0,r2
	l.or    	r2,r11,r2
	l.xori  	r11,r2,0xffff
	l.j     	.L966	# delay slot filled
	l.srli  	r11,r11,31
.L988:
	l.lwz   	r3,20(r14)	 # SI load
	l.jal   	sqlite3ExprCompare	# delay slot filled
	l.lwz   	r4,20(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L966
	l.nop			# nop delay slot
	l.lwz   	r3,24(r14)	 # SI load
	l.jal   	sqlite3ExprCompare	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L966
	l.nop			# nop delay slot
	l.lwz   	r4,28(r14)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L967
	l.nop			# nop delay slot
	l.lwz   	r3,28(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L966	# delay slot filled
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r22,0(r4)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.sfne 	r22,r5
	l.bf	.L966	# delay slot filled
	l.sfles 	r22,r16
	l.bf	.L968	# delay slot filled
	l.ori   	r20,r16,0	 # move reg to reg
	l.lwz   	r26,12(r4)	 # SI load
	l.j     	.L969	# delay slot filled
	l.lwz   	r24,12(r3)	 # SI load
.L989:
	l.sfgts 	r22,r20
	l.bnf	.L968
	l.nop			# nop delay slot
.L969:
	l.add   	r3,r26,r16
	l.add   	r4,r24,r16
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r4,0(r4)	 # SI load
	l.jal   	sqlite3ExprCompare	# delay slot filled
	l.addi  	r20,r20,1
	l.sfeqi	r11,0
	l.bnf	.L989	# delay slot filled
	l.addi  	r16,r16,16
	l.j     	.L990	# delay slot filled
	l.addi	r1,r1,36
.L967:
	l.lwz   	r3,28(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L966	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
.L968:
	l.lwz   	r4,36(r14)	 # SI load
	l.lwz   	r3,36(r2)	 # SI load
	l.sfne 	r4,r3
	l.bf	.L966	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r4,40(r14)	 # SI load
	l.lwz   	r3,40(r2)	 # SI load
	l.sfne 	r4,r3
	l.bf	.L966	# delay slot filled
	l.sfeqi	r18,151
	l.bf	.L966	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lwz   	r3,4(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L966
	l.nop			# nop delay slot
	l.lwz   	r11,4(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L966	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r6,8(r14)	 # SI load
	l.lwz   	r5,8(r2)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.xor   	r2,r6,r5
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.ori   	r6,r6,65535
	l.and   	r2,r2,r6
	l.sfne 	r2,r11
	l.bf	.L966
	l.nop			# nop delay slot
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.and   	r5,r5,r6
	l.sub   	r2,r0,r11
	l.or    	r11,r2,r11
	l.xori  	r11,r11,0xffff
	l.j     	.L966	# delay slot filled
	l.srli  	r11,r11,31
.LFE801:
	.size	sqlite3ExprCompare, .-sqlite3ExprCompare
	.align	4
.proc	sqlite3ReleaseTempReg
	.type	sqlite3ReleaseTempReg, @function
sqlite3ReleaseTempReg:
.LFB809:
	l.sw    	-4(r1),r2	 # SI store
.LCFI336:
	l.sfeqi	r4,0
.LCFI337:
	l.bf	.L991	# delay slot filled
	l.addi  	r1,r1,-4
	l.lbz   	r7,21(r3)	 # zero_extendqisi2
	l.sfgtui	r7,7
	l.bf	.L991	# delay slot filled
	l.addi  	r5,r3,96
	l.addi  	r6,r3,312
.L997:
	l.lwz   	r8,16(r5)	 # SI load
	l.sfne 	r8,r4
	l.bnf	.L996	# delay slot filled
	l.sfeq 	r5,r6
	l.bnf	.L997	# delay slot filled
	l.addi  	r5,r5,24
	l.addi  	r5,r7,6
	l.addi  	r7,r7,1
	l.slli  	r5,r5,2
	l.sb    	21(r3),r7	    # movqi
	l.add   	r3,r3,r5
	l.sw    	0(r3),r4	 # SI store
.L991:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L996:
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	9(r5),r2	    # movqi
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE809:
	.size	sqlite3ReleaseTempReg, .-sqlite3ReleaseTempReg
	.align	4
.proc	sqlite3GetTempRange
	.type	sqlite3GetTempRange, @function
sqlite3GetTempRange:
.LFB810:
	l.lwz   	r12,56(r3)	 # SI load
	l.sflts 	r12,r4
	l.bf	.L999	# delay slot filled
	l.lwz   	r11,60(r3)	 # SI load
	l.add   	r13,r11,r12
	l.addi  	r5,r3,112
	l.addi  	r13,r13,-1
	l.addi  	r6,r0,10	 # move immediate I
.L1003:
	l.lwz   	r8,0(r5)	 # SI load
	l.addi  	r6,r6,-1
	l.sfges 	r13,r8
	l.bf	.L1001	# delay slot filled
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.addi  	r7,r0,0	 # movqi: move immediate
.L1001:
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.sfeqi	r7,0
	l.bnf	.L1009	# delay slot filled
	l.addi  	r5,r5,24
	l.sfnei	r6,0
.L1010:
	l.bf	.L1003
	l.nop			# nop delay slot
	l.add   	r5,r4,r11
	l.sub   	r4,r12,r4
	l.sw    	60(r3),r5	 # SI store
	l.jr    	r9	# delay slot filled
	l.sw    	56(r3),r4	 # SI store
.L1009:
	l.sfles 	r11,r8
	l.bf	.L1002	# delay slot filled
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.addi  	r7,r0,0	 # movqi: move immediate
.L1002:
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bnf	.L1010	# delay slot filled
	l.sfnei	r6,0
.L999:
	l.lwz   	r11,72(r3)	 # SI load
	l.add   	r4,r4,r11
	l.addi  	r11,r11,1
	l.jr    	r9	# delay slot filled
	l.sw    	72(r3),r4	 # SI store
.LFE810:
	.size	sqlite3GetTempRange, .-sqlite3GetTempRange
	.align	4
.proc	sqlite3FindTable
	.type	sqlite3FindTable, @function
sqlite3FindTable:
.LFB851:
	l.sw    	-24(r1),r16	 # SI store
.LCFI338:
	l.sw    	-16(r1),r20	 # SI store
.LCFI339:
	l.sw    	-4(r1),r9	 # SI store
.LCFI340:
	l.sw    	-32(r1),r2	 # SI store
.LCFI341:
	l.sw    	-28(r1),r14	 # SI store
.LCFI342:
	l.sw    	-20(r1),r18	 # SI store
.LCFI343:
	l.sw    	-12(r1),r22	 # SI store
.LCFI344:
	l.sw    	-8(r1),r24	 # SI store
.LCFI345:
	l.ori   	r20,r4,0	 # move reg to reg
	l.lbs   	r18,0(r4)	 # extendqisi2_no_sext_mem
	l.addi  	r1,r1,-32
.LCFI346:
	l.sfeqi	r18,0
	l.bf	.L1012	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r2,r2,1
.L1027:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L1027	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r20
	l.ori   	r4,r4,65535
	l.and   	r18,r2,r4
.L1012:
	l.lwz   	r22,4(r3)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sfles 	r22,r11
	l.bf	.L1014	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L1019	# delay slot filled
	l.lwz   	r24,8(r3)	 # SI load
.L1016:
	l.add   	r14,r14,r6
	l.slli  	r14,r14,3
	l.add   	r14,r24,r14
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.lwz   	r4,0(r14)	 # SI load
	l.sfnei	r11,0
	l.bf	.L1018	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r3,20(r14)	 # SI load
	l.addi  	r3,r3,4
	l.jal   	sqlite3HashFind	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L1014
	l.nop			# nop delay slot
.L1018:
	l.addi  	r2,r2,1
.L1028:
	l.sfgts 	r22,r2
	l.bnf	.L1025
	l.nop			# nop delay slot
.L1019:
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfgtsi	r2,1
	l.bnf	.L1026	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L1015:
	l.sfnei	r16,0
	l.bf	.L1016	# delay slot filled
	l.add   	r14,r6,r6
	l.add   	r14,r14,r6
	l.ori   	r4,r20,0	 # move reg to reg
	l.slli  	r14,r14,3
	l.ori   	r5,r18,0	 # move reg to reg
	l.add   	r14,r24,r14
	l.lwz   	r3,20(r14)	 # SI load
	l.jal   	sqlite3HashFind	# delay slot filled
	l.addi  	r3,r3,4
	l.sfnei	r11,0
	l.bnf	.L1028	# delay slot filled
	l.addi  	r2,r2,1
.L1014:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L1026:
	l.j     	.L1015	# delay slot filled
	l.xori  	r6,r2,1
.L1025:
	l.j     	.L1014	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE851:
	.size	sqlite3FindTable, .-sqlite3FindTable
	.align	4
.proc	sqlite3FindIndex
	.type	sqlite3FindIndex, @function
sqlite3FindIndex:
.LFB853:
	l.sw    	-24(r1),r16	 # SI store
.LCFI347:
	l.sw    	-16(r1),r20	 # SI store
.LCFI348:
	l.sw    	-4(r1),r9	 # SI store
.LCFI349:
	l.sw    	-32(r1),r2	 # SI store
.LCFI350:
	l.sw    	-28(r1),r14	 # SI store
.LCFI351:
	l.sw    	-20(r1),r18	 # SI store
.LCFI352:
	l.sw    	-12(r1),r22	 # SI store
.LCFI353:
	l.sw    	-8(r1),r24	 # SI store
.LCFI354:
	l.ori   	r20,r4,0	 # move reg to reg
	l.lbs   	r18,0(r4)	 # extendqisi2_no_sext_mem
	l.addi  	r1,r1,-32
.LCFI355:
	l.sfeqi	r18,0
	l.bf	.L1030	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r2,r2,1
.L1043:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L1043	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r20
	l.ori   	r4,r4,65535
	l.and   	r18,r2,r4
.L1030:
	l.lwz   	r22,4(r3)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sfles 	r22,r11
	l.bf	.L1032	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L1036	# delay slot filled
	l.lwz   	r24,8(r3)	 # SI load
.L1033:
	l.add   	r7,r6,r6
	l.addi  	r2,r2,1
	l.add   	r6,r7,r6
	l.sfeqi	r16,0
	l.slli  	r6,r6,3
	l.add   	r6,r24,r6
	l.bf	.L1034	# delay slot filled
	l.lwz   	r14,20(r6)	 # SI load
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.lwz   	r4,0(r6)	 # SI load
	l.sfnei	r11,0
	l.bf	.L1044	# delay slot filled
	l.sfgts 	r22,r2
.L1034:
	l.addi  	r3,r14,20
	l.ori   	r4,r20,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L1035	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3HashFind
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L1032
	l.nop			# nop delay slot
.L1035:
	l.sfgts 	r22,r2
.L1044:
	l.bnf	.L1042
	l.nop			# nop delay slot
.L1036:
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfgtsi	r2,1
	l.bf	.L1033	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.j     	.L1033	# delay slot filled
	l.xori  	r6,r2,1
.L1042:
	l.addi  	r11,r0,0	 # move immediate I
.L1032:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.LFE853:
	.size	sqlite3FindIndex, .-sqlite3FindIndex
	.align	4
.proc	analysisLoader
	.type	analysisLoader, @function
analysisLoader:
.LFB826:
	l.sw    	-4(r1),r9	 # SI store
.LCFI356:
	l.sw    	-8(r1),r2	 # SI store
.LCFI357:
	l.ori   	r6,r3,0	 # move reg to reg
	l.sfeqi	r5,0
.LCFI358:
	l.bf	.L1046	# delay slot filled
	l.addi  	r1,r1,-8
	l.lwz   	r4,0(r5)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L1046
	l.nop			# nop delay slot
	l.lwz   	r2,4(r5)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L1046
	l.nop			# nop delay slot
	l.lwz   	r3,0(r3)	 # SI load
	l.jal   	sqlite3FindIndex	# delay slot filled
	l.lwz   	r5,4(r6)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L1046
	l.nop			# nop delay slot
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L1046
	l.nop			# nop delay slot
	l.lwz   	r3,4(r11)	 # SI load
	l.sfltsi	r3,0
	l.bf	.L1046
	l.nop			# nop delay slot
	l.lwz   	r6,12(r11)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
.L1047:
	l.ori   	r4,r5,0	 # move reg to reg
	l.sflesi	r5,47
	l.bf	.L1048	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.sflesi	r5,57
	l.bf	.L1058	# delay slot filled
	l.slli  	r5,r3,3
	l.j     	.L1057	# delay slot filled
	l.sw    	0(r6),r3	 # SI store
.L1055:
	l.sflesi	r4,57
	l.bnf	.L1048	# delay slot filled
	l.slli  	r5,r3,3
.L1058:
	l.add   	r3,r3,r3
	l.addi  	r2,r2,1
	l.add   	r3,r3,r5
	l.add   	r3,r3,r4
	l.lbs   	r4,0(r2)	 # extendqisi2_no_sext_mem
	l.sflesi	r4,47
	l.bnf	.L1055	# delay slot filled
	l.addi  	r3,r3,-48
.L1048:
	l.sw    	0(r6),r3	 # SI store
.L1057:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,32
	l.bnf	.L1056
	l.nop			# nop delay slot
.L1050:
	l.sfeqi	r5,0
	l.bf	.L1046
	l.nop			# nop delay slot
	l.addi  	r7,r7,1
	l.lwz   	r3,4(r11)	 # SI load
	l.sflts 	r3,r7
	l.bnf	.L1047	# delay slot filled
	l.addi  	r6,r6,4
.L1046:
	l.addi	r1,r1,8
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L1056:
	l.addi  	r2,r2,1
	l.j     	.L1050	# delay slot filled
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
.LFE826:
	.size	analysisLoader, .-analysisLoader
	.align	4
.proc	freeIndex
	.type	freeIndex, @function
freeIndex:
.LFB854:
	l.sw    	-12(r1),r2	 # SI store
.LCFI359:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,16(r3)	 # SI load
	l.sw    	-8(r1),r14	 # SI store
.LCFI360:
	l.lwz   	r14,0(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI361:
	l.lwz   	r4,28(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
.LCFI362:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r1,r1,-12
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE854:
	.size	freeIndex, .-freeIndex
	.align	4
.proc	sqlite3FindDbName
	.type	sqlite3FindDbName, @function
sqlite3FindDbName:
.LFB864:
	l.sw    	-20(r1),r2	 # SI store
.LCFI363:
	l.sw    	-8(r1),r18	 # SI store
.LCFI364:
	l.sw    	-4(r1),r9	 # SI store
.LCFI365:
	l.sw    	-16(r1),r14	 # SI store
.LCFI366:
	l.sw    	-12(r1),r16	 # SI store
.LCFI367:
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI368:
	l.sfeqi	r4,0
	l.bf	.L1061	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
	l.lbs   	r2,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L1062	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.addi  	r5,r5,1
.L1074:
	l.lbs   	r2,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L1074	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
.L1062:
	l.lwz   	r2,4(r3)	 # SI load
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r18
	l.addi  	r2,r2,-1
	l.ori   	r4,r4,65535
	l.lwz   	r14,8(r3)	 # SI load
	l.sfltsi	r2,0
	l.bf	.L1061	# delay slot filled
	l.and   	r16,r5,r4
	l.add   	r3,r2,r2
	l.add   	r3,r3,r2
	l.slli  	r3,r3,3
	l.add   	r14,r14,r3
	l.lwz   	r3,0(r14)	 # SI load
.L1078:
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L1075	# delay slot filled
	l.sfne 	r16,r5
	l.ori   	r5,r3,0	 # move reg to reg
	l.addi  	r5,r5,1
.L1076:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L1076	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r3
	l.ori   	r4,r4,65535
	l.and   	r5,r5,r4
	l.sfne 	r16,r5
.L1075:
	l.bnf	.L1073
	l.nop			# nop delay slot
	l.addi  	r2,r2,-1
.L1077:
	l.sfltsi	r2,0
	l.bf	.L1061	# delay slot filled
	l.addi  	r14,r14,-24
	l.j     	.L1078	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
.L1073:
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L1077	# delay slot filled
	l.addi  	r2,r2,-1
	l.addi  	r2,r2,1
.L1061:
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE864:
	.size	sqlite3FindDbName, .-sqlite3FindDbName
	.align	4
.proc	sqlite3AffinityType
	.type	sqlite3AffinityType, @function
sqlite3AffinityType:
.LFB871:
	l.sw    	-4(r1),r2	 # SI store
.LCFI369:
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.lwz   	r6,4(r3)	 # SI load
	l.ori   	r2,r2,65535
	l.lwz   	r4,0(r3)	 # SI load
	l.and   	r6,r6,r2
	l.addi  	r1,r1,-4
.LCFI370:
	l.add   	r6,r4,r6
	l.sfeq 	r4,r6
	l.bf	.L1080	# delay slot filled
	l.addi  	r11,r0,99	 # move immediate I
	l.movhi 	r13,hi(1718353920)	 # move immediate M
	l.movhi 	r5,hi(1684996096)	 # move immediate M
	l.movhi 	r12,hi(1919221760)	 # move immediate M
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r13,r13,28513
	l.ori   	r15,r5,30050
	l.j     	.L1087	# delay slot filled
	l.ori   	r12,r12,24940
.L1101:
	l.ori   	r2,r2,28514
	l.sfeq 	r3,r2
	l.bf	.L1091	# delay slot filled
	l.movhi 	r2,hi(1952776192)	 # move immediate M
	l.ori   	r2,r2,30836
	l.sfeq 	r3,r2
	l.bf	.L1091	# delay slot filled
	l.movhi 	r2,hi(1651245056)	 # move immediate M
	l.ori   	r2,r2,28514
	l.sfne 	r3,r2
	l.bnf	.L1100	# delay slot filled
	l.movhi 	r2,hi(1919221760)	 # move immediate M
	l.xori  	r7,r11,99
	l.ori   	r2,r2,24940
	l.addi  	r7,r7,-1
	l.xor   	r5,r3,r2
	l.sub   	r8,r0,r5
	l.or    	r5,r8,r5
	l.sfltsi	r5,0
	l.bf	.L1097	# delay slot filled
	l.srli  	r7,r7,31
	l.sfnei	r7,0
	l.bnf	.L1103	# delay slot filled
	l.sfeqi	r7,0
	l.addi  	r11,r0,101	 # move immediate I
	l.ori   	r3,r12,0	 # move reg to reg
.L1081:
	l.addi  	r4,r4,1
.L1105:
	l.sfne 	r6,r4
	l.bnf	.L1080
	l.nop			# nop delay slot
.L1087:
	l.movhi  	r2,hi(sqlite3UpperToLower)
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3UpperToLower)
	l.slli  	r3,r3,8
	l.add   	r5,r5,r2
	l.movhi 	r2,hi(1667760128)	 # move immediate M
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.ori   	r2,r2,24946
	l.add   	r3,r3,r5
	l.sfeq 	r3,r2
	l.bnf	.L1101	# delay slot filled
	l.movhi 	r2,hi(1668022272)	 # move immediate M
.L1091:
	l.addi  	r4,r4,1
	l.sfne 	r6,r4
	l.bf	.L1087	# delay slot filled
	l.addi  	r11,r0,97	 # move immediate I
.L1080:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L1097:
	l.sfeqi	r7,0
.L1103:
	l.bf	.L1083	# delay slot filled
	l.movhi 	r2,hi(1718353920)	 # move immediate M
	l.ori   	r2,r2,28513
	l.xor   	r5,r3,r2
	l.sub   	r7,r0,r5
	l.or    	r5,r7,r5
	l.sfgesi	r5,0
	l.bnf	.L1102	# delay slot filled
	l.movhi 	r2,hi(1684996096)	 # move immediate M
	l.addi  	r11,r0,101	 # move immediate I
	l.j     	.L1081	# delay slot filled
	l.ori   	r3,r13,0	 # move reg to reg
.L1100:
	l.xori  	r5,r11,101
	l.addi  	r5,r5,-1
	l.sfltsi	r5,0
	l.bf	.L1092	# delay slot filled
	l.xori  	r5,r11,99
	l.addi  	r5,r5,-1
	l.sfltsi	r5,0
	l.bnf	.L1104	# delay slot filled
	l.movhi 	r2,hi(16711680)	 # move immediate M
.L1092:
	l.j     	.L1081	# delay slot filled
	l.addi  	r11,r0,98	 # move immediate I
.L1083:
	l.movhi 	r2,hi(16711680)	 # move immediate M
.L1104:
	l.ori   	r2,r2,65535
	l.and   	r5,r3,r2
	l.movhi 	r2,hi(6881280)	 # move immediate M
	l.ori   	r2,r2,28276
	l.sfeq 	r5,r2
	l.bnf	.L1105	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
	l.j     	.L1080	# delay slot filled
	l.addi  	r11,r0,100	 # move immediate I
.L1102:
	l.ori   	r2,r2,30050
	l.xor   	r5,r3,r2
	l.sub   	r7,r0,r5
	l.or    	r5,r7,r5
	l.sfgesi	r5,0
	l.bnf	.L1104	# delay slot filled
	l.movhi 	r2,hi(16711680)	 # move immediate M
	l.addi  	r11,r0,101	 # move immediate I
	l.j     	.L1081	# delay slot filled
	l.ori   	r3,r15,0	 # move reg to reg
.LFE871:
	.size	sqlite3AffinityType, .-sqlite3AffinityType
	.align	4
.proc	sqlite3ExprAffinity
	.type	sqlite3ExprAffinity, @function
sqlite3ExprAffinity:
.LFB724:
	l.sw    	-4(r1),r9	 # SI store
.LCFI371:
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sfnei	r4,116
.LCFI372:
	l.bf	.L1107	# delay slot filled
	l.addi  	r1,r1,-4
.L1114:
	l.lwz   	r3,28(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sfeqi	r4,116
	l.bf	.L1114
	l.nop			# nop delay slot
.L1107:
	l.sfnei	r4,36
	l.bnf	.L1116	# delay slot filled
	l.sfeqi	r4,151
	l.bf	.L1110	# delay slot filled
	l.sfeqi	r4,153
	l.bf	.L1110	# delay slot filled
	l.sfnei	r4,132
	l.bnf	.L1110
	l.nop			# nop delay slot
.L1111:
	l.lbs   	r11,1(r3)	 # extendqisi2_no_sext_mem
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L1110:
	l.lwz   	r4,56(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L1111
	l.nop			# nop delay slot
	l.lwz   	r3,40(r3)	 # SI load
	l.sfltsi	r3,0
	l.bf	.L1112	# delay slot filled
	l.addi  	r11,r0,100	 # move immediate I
	l.slli  	r5,r3,2
	l.slli  	r3,r3,4
	l.lwz   	r4,16(r4)	 # SI load
	l.add   	r3,r5,r3
	l.add   	r3,r4,r3
	l.lbs   	r11,18(r3)	 # extendqisi2_no_sext_mem
.L1112:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L1116:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3AffinityType	# delay slot filled	# sibcall s
	l.addi  	r3,r3,4
.LFE724:
	.size	sqlite3ExprAffinity, .-sqlite3ExprAffinity
	.align	4
.proc	sqlite3CompareAffinity
	.type	sqlite3CompareAffinity, @function
sqlite3CompareAffinity:
.LFB727:
	l.sw    	-8(r1),r2	 # SI store
.LCFI373:
	l.sw    	-4(r1),r9	 # SI store
.LCFI374:
	l.addi  	r1,r1,-8
.LCFI375:
	l.jal   	sqlite3ExprAffinity	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.andi  	r4,r11,0xff	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L1118	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.andi  	r4,r2,0xff	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L1130	# delay slot filled
	l.or    	r4,r3,r2
	l.sfgtsi	r11,98
	l.bnf	.L1126	# delay slot filled
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L1125	# delay slot filled
	l.sfgtsi	r2,98
.L1131:
	l.bnf	.L1127	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L1125	# delay slot filled
	l.addi  	r11,r0,98	 # move immediate I
.L1119:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L1118:
	l.or    	r4,r3,r2
.L1130:
	l.slli  	r4,r4,24
	l.sfeqi	r4,0
	l.bf	.L1119	# delay slot filled
	l.addi  	r11,r0,98	 # move immediate I
	l.add   	r11,r3,r2
	l.addi	r1,r1,8
	l.slli  	r11,r11,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-8(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.srai  	r11,r11,24
.L1126:
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L1131	# delay slot filled
	l.sfgtsi	r2,98
	l.j     	.L1129	# delay slot filled
	l.addi	r1,r1,8
.L1127:
	l.ori   	r3,r4,0	  # movqi: move reg to reg
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L1119	# delay slot filled
	l.addi  	r11,r0,98	 # move immediate I
.L1125:
	l.addi	r1,r1,8
.L1129:
	l.addi  	r11,r0,99	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE727:
	.size	sqlite3CompareAffinity, .-sqlite3CompareAffinity
	.align	4
.proc	comparisonAffinity
	.type	comparisonAffinity, @function
comparisonAffinity:
.LFB728:
	l.sw    	-8(r1),r2	 # SI store
.LCFI376:
	l.sw    	-4(r1),r9	 # SI store
.LCFI377:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-8
.LCFI378:
	l.jal   	sqlite3ExprAffinity	# delay slot filled
	l.lwz   	r3,20(r3)	 # SI load
	l.lwz   	r3,24(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L1133	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
.L1137:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3CompareAffinity	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L1133:
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,4096
	l.sfeqi	r3,0
	l.bnf	.L1138	# delay slot filled
	l.sfeqi	r11,0
	l.bnf	.L1135
	l.nop			# nop delay slot
	l.addi  	r4,r0,98	 # move immediate I
.L1135:
	l.addi	r1,r1,8
	l.ori   	r11,r4,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L1138:
	l.lwz   	r2,28(r2)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.lwz   	r2,12(r2)	 # SI load
	l.j     	.L1137	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
.LFE728:
	.size	comparisonAffinity, .-comparisonAffinity
	.align	4
.proc	sqlite3DefaultRowEst
	.type	sqlite3DefaultRowEst, @function
sqlite3DefaultRowEst:
.LFB897:
	l.movhi 	r4,hi(983040)	 # move immediate M
	l.lwz   	r8,12(r3)	 # SI load
	l.ori   	r4,r4,16960
	l.sw    	0(r8),r4	 # SI store
	l.lwz   	r4,4(r3)	 # SI load
	l.sflesi	r4,4
	l.bf	.L1140	# delay slot filled
	l.slli  	r5,r4,2
	l.ori   	r6,r4,0	 # move reg to reg
	l.addi  	r7,r0,5	 # move immediate I
	l.add   	r5,r8,r5
.L1141:
	l.sw    	0(r5),r7	 # SI store
	l.addi  	r6,r6,-1
	l.sfnei	r6,4
	l.bf	.L1141	# delay slot filled
	l.addi  	r5,r5,-4
	l.addi  	r5,r4,-1
	l.sub   	r4,r7,r4
	l.add   	r4,r5,r4
.L1140:
	l.sflesi	r4,0
	l.bf	.L1142	# delay slot filled
	l.addi  	r6,r0,11	 # move immediate I
	l.slli  	r5,r4,2
	l.add   	r5,r8,r5
	l.sub   	r4,r6,r4
.L1143:
	l.sw    	0(r5),r4	 # SI store
	l.addi  	r4,r4,1
	l.sfnei	r4,11
	l.bf	.L1143	# delay slot filled
	l.addi  	r5,r5,-4
.L1142:
	l.lbz   	r4,24(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L1139
	l.nop			# nop delay slot
	l.lwz   	r3,4(r3)	 # SI load
	l.slli  	r3,r3,2
	l.add   	r8,r8,r3
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	0(r8),r3	 # SI store
.L1139:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE897:
	.size	sqlite3DefaultRowEst, .-sqlite3DefaultRowEst
	.align	4
.proc	sqlite3IdListDelete
	.type	sqlite3IdListDelete, @function
sqlite3IdListDelete:
.LFB901:
	l.sw    	-20(r1),r2	 # SI store
.LCFI379:
	l.sw    	-8(r1),r18	 # SI store
.LCFI380:
	l.sw    	-4(r1),r9	 # SI store
.LCFI381:
	l.sw    	-16(r1),r14	 # SI store
.LCFI382:
	l.sw    	-12(r1),r16	 # SI store
.LCFI383:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI384:
	l.sfeqi	r4,0
	l.bf	.L1147	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
	l.lwz   	r3,4(r4)	 # SI load
	l.sflesi	r3,0
	l.bf	.L1149	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.ori   	r16,r14,0	 # move reg to reg
.L1150:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r4,r4,r14
	l.addi  	r16,r16,1
	l.lwz   	r4,0(r4)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r14,r14,8
	l.lwz   	r3,4(r2)	 # SI load
	l.sfgts 	r3,r16
	l.bf	.L1150
	l.nop			# nop delay slot
.L1149:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.addi	r1,r1,20
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L1147:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE901:
	.size	sqlite3IdListDelete, .-sqlite3IdListDelete
	.align	4
.proc	sqlite3IdListIndex
	.type	sqlite3IdListIndex, @function
sqlite3IdListIndex:
.LFB902:
	l.sw    	-20(r1),r2	 # SI store
.LCFI385:
	l.sw    	-12(r1),r16	 # SI store
.LCFI386:
	l.sw    	-4(r1),r9	 # SI store
.LCFI387:
	l.sw    	-16(r1),r14	 # SI store
.LCFI388:
	l.sw    	-8(r1),r18	 # SI store
.LCFI389:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI390:
	l.sfeqi	r3,0
	l.bnf	.L1158	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
.L1153:
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L1158:
	l.lwz   	r18,4(r3)	 # SI load
	l.sflesi	r18,0
	l.bf	.L1153
	l.nop			# nop delay slot
	l.lwz   	r14,0(r3)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
.L1154:
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r14,r14,8
	l.sfeqi	r11,0
	l.bf	.L1153
	l.nop			# nop delay slot
	l.addi  	r2,r2,1
	l.sflts 	r2,r18
	l.bf	.L1154
	l.nop			# nop delay slot
	l.j     	.L1153	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
.LFE902:
	.size	sqlite3IdListIndex, .-sqlite3IdListIndex
	.align	4
.proc	sqlite3SrcListAssignCursors
	.type	sqlite3SrcListAssignCursors, @function
sqlite3SrcListAssignCursors:
.LFB905:
	l.sw    	-20(r1),r14	 # SI store
.LCFI391:
	l.sw    	-8(r1),r20	 # SI store
.LCFI392:
	l.sw    	-4(r1),r9	 # SI store
.LCFI393:
	l.sw    	-24(r1),r2	 # SI store
.LCFI394:
	l.sw    	-16(r1),r16	 # SI store
.LCFI395:
	l.sw    	-12(r1),r18	 # SI store
.LCFI396:
	l.ori   	r20,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI397:
	l.sfeqi	r4,0
	l.bf	.L1159	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.lhs   	r5,0(r4)	 # extendhisi2_no_sext_mem
	l.sflesi	r5,0
	l.bf	.L1159
	l.nop			# nop delay slot
	l.lwz   	r2,28(r4)	 # SI load
	l.sfgesi	r2,0
	l.bf	.L1159	# delay slot filled
	l.addi  	r2,r4,28
	l.j     	.L1161	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L1163:
	l.lwz   	r3,52(r18)	 # SI load
	l.sfgesi	r3,0
	l.bf	.L1159
	l.nop			# nop delay slot
.L1161:
	l.lwz   	r7,68(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r6,r7,1
	l.sw    	0(r2),r7	 # SI store
	l.sw    	68(r14),r6	 # SI store
	l.lwz   	r6,-8(r2)	 # SI load
	l.addi  	r16,r16,1
	l.sfeqi	r6,0
	l.bf	.L1162	# delay slot filled
	l.ori   	r18,r2,0	 # move reg to reg
	l.jal   	sqlite3SrcListAssignCursors	# delay slot filled
	l.lwz   	r4,8(r6)	 # SI load
	l.lhs   	r5,0(r20)	 # extendhisi2_no_sext_mem
.L1162:
	l.sfgts 	r5,r16
	l.bf	.L1163	# delay slot filled
	l.addi  	r2,r2,52
.L1159:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE905:
	.size	sqlite3SrcListAssignCursors, .-sqlite3SrcListAssignCursors
	.align	4
.proc	matchQuality
	.type	matchQuality, @function
matchQuality:
.LFB928:
	l.lhs   	r6,0(r3)	 # extendhisi2_no_sext_mem
	l.sfeqi	r6,-1
	l.bf	.L1165	# delay slot filled
	l.sfeq 	r6,r4
	l.bf	.L1165	# delay slot filled
	l.sfnei	r4,-1
	l.bnf	.L1177	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L1166:
	l.jr    	r9
	l.nop			# nop delay slot
.L1177:
	l.lwz   	r7,12(r3)	 # SI load
	l.sfne 	r7,r11
	l.bf	.L1165
	l.nop			# nop delay slot
	l.lwz   	r11,16(r3)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L1166
	l.nop			# nop delay slot
.L1165:
	l.xor   	r6,r4,r6
	l.sub   	r7,r0,r6
	l.or    	r6,r7,r6
	l.sfgesi	r6,0
	l.bnf	.L1178
	l.nop			# nop delay slot
.L1174:
	l.lbz   	r3,2(r3)	 # zero_extendqisi2
	l.sfne 	r3,r5
	l.bnf	.L1179	# delay slot filled
	l.addi  	r11,r0,4	 # move immediate I
	l.sfnei	r5,2
.L1181:
	l.bnf	.L1180	# delay slot filled
	l.sfnei	r5,3
	l.bf	.L1166	# delay slot filled
	l.sfnei	r3,2
	l.bf	.L1166
	l.nop			# nop delay slot
.L1170:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r11,1
.L1178:
	l.xori  	r4,r4,0xffff
	l.sub   	r6,r0,r4
	l.or    	r4,r6,r4
	l.sfgesi	r4,0
	l.bf	.L1174	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lbz   	r3,2(r3)	 # zero_extendqisi2
	l.sfne 	r3,r5
	l.bf	.L1181	# delay slot filled
	l.sfnei	r5,2
.L1179:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r11,2
.L1180:
	l.sfeqi	r3,3
	l.bf	.L1170
	l.nop			# nop delay slot
	l.jr    	r9
	l.nop			# nop delay slot
.LFE928:
	.size	matchQuality, .-matchQuality
	.align	4
.proc	functionSearch
	.type	functionSearch, @function
functionSearch:
.LFB929:
	l.slli  	r4,r4,2
	l.sw    	-20(r1),r2	 # SI store
.LCFI398:
	l.sw    	-16(r1),r14	 # SI store
.LCFI399:
	l.add   	r3,r3,r4
	l.sw    	-8(r1),r18	 # SI store
.LCFI400:
	l.sw    	-4(r1),r9	 # SI store
.LCFI401:
	l.sw    	-12(r1),r16	 # SI store
.LCFI402:
	l.lwz   	r2,0(r3)	 # SI load
	l.addi  	r1,r1,-20
.LCFI403:
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L1183	# delay slot filled
	l.ori   	r14,r6,0	 # move reg to reg
.L1186:
	l.lwz   	r16,24(r2)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.add   	r16,r16,r14
	l.sfnei	r11,0
	l.bf	.L1184
	l.nop			# nop delay slot
	l.lbs   	r3,0(r16)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L1183
	l.nop			# nop delay slot
.L1184:
	l.lwz   	r2,28(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L1186
	l.nop			# nop delay slot
.L1183:
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE929:
	.size	functionSearch, .-functionSearch
	.global __modsi3
	.align	4
.proc	sqlite3FuncDefInsert
	.type	sqlite3FuncDefInsert, @function
sqlite3FuncDefInsert:
.LFB930:
	l.sw    	-24(r1),r2	 # SI store
.LCFI404:
	l.sw    	-20(r1),r14	 # SI store
.LCFI405:
	l.sw    	-16(r1),r16	 # SI store
.LCFI406:
	l.sw    	-12(r1),r18	 # SI store
.LCFI407:
	l.sw    	-4(r1),r9	 # SI store
.LCFI408:
	l.sw    	-8(r1),r20	 # SI store
.LCFI409:
	l.lwz   	r2,24(r4)	 # SI load
	l.ori   	r14,r4,0	 # move reg to reg
	l.lbs   	r4,0(r2)	 # extendqisi2_no_sext_mem
	l.addi  	r1,r1,-24
.LCFI410:
	l.ori   	r18,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L1189	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r6,r6,1
.L1195:
	l.lbs   	r7,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r7,0
	l.bf	.L1195	# delay slot filled
	l.addi  	r6,r6,1
	l.addi  	r6,r6,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r6,r6,r2
	l.ori   	r3,r3,65535
	l.and   	r16,r6,r3
.L1189:
	l.movhi  	r5,hi(sqlite3UpperToLower)
	l.andi  	r3,r4,0xff	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3UpperToLower)
	l.addi  	r4,r0,23	 # move immediate I
	l.add   	r3,r3,r5
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.jal   	__modsi3	# delay slot filled
	l.add   	r3,r16,r3
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	functionSearch	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L1191
	l.nop			# nop delay slot
	l.lwz   	r2,8(r11)	 # SI load
	l.sw    	8(r14),r2	 # SI store
	l.sw    	8(r11),r14	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L1191:
	l.slli  	r20,r20,2
	l.sw    	8(r14),r11	 # SI store
	l.add   	r18,r18,r20
	l.lwz   	r2,0(r18)	 # SI load
	l.sw    	28(r14),r2	 # SI store
	l.sw    	0(r18),r14	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE930:
	.size	sqlite3FuncDefInsert, .-sqlite3FuncDefInsert
	.align	4
.proc	patternCompare
	.type	patternCompare, @function
patternCompare:
.LFB957:
	l.sw    	-40(r1),r14	 # SI store
.LCFI411:
	l.sw    	-36(r1),r16	 # SI store
.LCFI412:
	l.sw    	-12(r1),r28	 # SI store
.LCFI413:
	l.sw    	-8(r1),r30	 # SI store
.LCFI414:
	l.sw    	-4(r1),r9	 # SI store
.LCFI415:
	l.sw    	-44(r1),r2	 # SI store
.LCFI416:
	l.sw    	-32(r1),r18	 # SI store
.LCFI417:
	l.sw    	-28(r1),r20	 # SI store
.LCFI418:
	l.sw    	-24(r1),r22	 # SI store
.LCFI419:
	l.sw    	-20(r1),r24	 # SI store
.LCFI420:
	l.sw    	-16(r1),r26	 # SI store
.LCFI421:
	l.addi  	r1,r1,-64
.LCFI422:
	l.lbz   	r2,3(r5)	 # zero_extendqisi2
	l.lbz   	r22,1(r5)	 # zero_extendqisi2
	l.lbz   	r20,0(r5)	 # zero_extendqisi2
	l.lbz   	r26,2(r5)	 # zero_extendqisi2
	l.sw    	8(r1),r5	 # SI store
	l.sw    	16(r1),r3	 # SI store
	l.sw    	12(r1),r4	 # SI store
	l.ori   	r28,r6,0	 # move reg to reg
	l.sw    	0(r1),r2	 # SI store
	l.addi  	r16,r0,0	 # move immediate I
	l.addi  	r14,r1,16
	l.addi  	r30,r1,12
.L1280:
	l.lwz   	r3,16(r1)	 # SI load
.L1312:
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L1286	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L1245:
	l.sfnei	r16,0
	l.bf	.L1308	# delay slot filled
	l.sfne 	r26,r2
	l.sfeq 	r20,r2
	l.bf	.L1287	# delay slot filled
	l.sfne 	r22,r2
	l.bnf	.L1288	# delay slot filled
	l.sfne 	r26,r2
.L1308:
	l.bnf	.L1289	# delay slot filled
	l.sfnei	r16,0
	l.bf	.L1260	# delay slot filled
	l.xor   	r3,r28,r2
	l.sub   	r7,r0,r3
	l.or    	r3,r7,r3
	l.sfgesi	r3,0
	l.bf	.L1280	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
.L1260:
	l.lwz   	r3,12(r1)	 # SI load
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L1309	# delay slot filled
	l.sfne 	r2,r11
	l.sfgtsi	r2,127
	l.bf	.L1310	# delay slot filled
	l.sfgtsi	r11,127
	l.movhi  	r4,hi(sqlite3UpperToLower)
	l.ori   	r4,r4,lo(sqlite3UpperToLower)
	l.add   	r2,r2,r4
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
.L1310:
	l.bf	.L1309	# delay slot filled
	l.sfne 	r2,r11
	l.movhi  	r5,hi(sqlite3UpperToLower)
	l.ori   	r5,r5,lo(sqlite3UpperToLower)
	l.add   	r11,r11,r5
	l.lbz   	r11,0(r11)	 # zero_extendqisi2
	l.sfne 	r2,r11
.L1309:
	l.bf	.L1258	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L1245	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L1286:
	l.lwz   	r2,12(r1)	 # SI load
	l.lbz   	r11,0(r2)	 # zero_extendqisi2
	l.addi  	r11,r11,-1
	l.srli  	r11,r11,31
.L1202:
	l.addi	r1,r1,64
.L1307:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L1289:
	l.lwz   	r3,12(r1)	 # SI load
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L1252	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
	l.sfnei	r11,94
	l.bnf	.L1290	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.sfnei	r11,93
.L1304:
	l.bnf	.L1291	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
	l.xori  	r3,r11,93
.L1302:
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L1232	# delay slot filled
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfgesi	r3,0
	l.bf	.L1232
	l.nop			# nop delay slot
	l.j     	.L1240	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.L1233:
.L1234:
	l.sfeq 	r2,r11
.L1311:
	l.bf	.L1292	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L1239:
.L1317:
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.xori  	r3,r11,93
	l.sub   	r7,r0,r3
	l.or    	r3,r7,r3
	l.sfgesi	r3,0
	l.bf	.L1232
	l.nop			# nop delay slot
.L1294:
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfltsi	r3,0
	l.bnf	.L1232
	l.nop			# nop delay slot
.L1240:
	l.sfnei	r11,45
	l.bf	.L1233	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lbz   	r6,0(r3)	 # zero_extendqisi2
	l.sfeqi	r6,93
	l.bf	.L1234	# delay slot filled
	l.sflesi	r18,0
	l.bf	.L1311	# delay slot filled
	l.sfeq 	r2,r11
	l.sfeqi	r6,0
	l.bf	.L1311	# delay slot filled
	l.sfeq 	r2,r11
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfles 	r2,r11
	l.bf	.L1237	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L1237:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L1303	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.sfges 	r2,r18
	l.bnf	.L1293	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L1259	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
.L1235:
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.xori  	r3,r11,93
	l.sub   	r7,r0,r3
	l.or    	r3,r7,r3
	l.sfgesi	r3,0
	l.bnf	.L1294	# delay slot filled
	l.addi  	r24,r0,1	 # move immediate I
.L1232:
	l.lwz   	r2,4(r1)	 # SI load
	l.sfeq 	r24,r2
	l.bf	.L1258	# delay slot filled
	l.sub   	r2,r0,r11
	l.or    	r11,r2,r11
	l.sfgesi	r11,0
	l.bnf	.L1312	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
.L1258:
	l.j     	.L1202	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L1259:
.L1303:
	l.j     	.L1239	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.L1292:
	l.ori   	r18,r2,0	 # move reg to reg
	l.j     	.L1239	# delay slot filled
	l.addi  	r24,r0,1	 # move immediate I
.L1288:
	l.lwz   	r3,12(r1)	 # SI load
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L1312	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.j     	.L1202	# delay slot filled
	l.ori   	r11,r16,0	 # move reg to reg
.L1291:
	l.xori  	r5,r2,93
	l.lwz   	r3,16(r1)	 # SI load
	l.sub   	r24,r0,r5
	l.ori   	r4,r14,0	 # move reg to reg
	l.or    	r24,r24,r5
	l.xori  	r24,r24,0xffff
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.srli  	r24,r24,31
	l.j     	.L1302	# delay slot filled
	l.xori  	r3,r11,93
.L1293:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L1235	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.j     	.L1317	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.L1290:
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
	l.j     	.L1304	# delay slot filled
	l.sfnei	r11,93
.L1287:
	l.addi  	r24,r1,12
.L1278:
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfeq 	r11,r20
	l.bf	.L1204	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L1296:
	l.sfeq 	r11,r22
	l.bnf	.L1295	# delay slot filled
	l.sfeqi	r18,0
.L1205:
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L1202	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfeq 	r11,r20
	l.bnf	.L1296	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L1204:
	l.sfne 	r20,r22
	l.bf	.L1278
	l.nop			# nop delay slot
	l.j     	.L1205
	l.nop			# nop delay slot
.L1295:
	l.bf	.L1202	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.sfne 	r28,r18
	l.bnf	.L1297	# delay slot filled
	l.sfne 	r26,r18
	l.bnf	.L1283	# delay slot filled
	l.lwz   	r2,12(r1)	 # SI load
	l.addi  	r14,r1,12
.L1316:
	l.lwz   	r3,12(r1)	 # SI load
.L1313:
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L1252	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L1215	# delay slot filled
	l.sfgtsi	r2,127
	l.xor   	r2,r18,r2
	l.sub   	r3,r0,r2
	l.or    	r2,r3,r2
	l.sfltsi	r2,0
	l.bf	.L1268	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.j     	.L1318	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
.L1298:
	l.sfltsi	r5,0
	l.bnf	.L1306	# delay slot filled
	l.sfeqi	r2,0
.L1268:
	l.lwz   	r3,12(r1)	 # SI load
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.xor   	r3,r18,r11
	l.sub   	r5,r0,r11
	l.sub   	r4,r0,r3
	l.ori   	r2,r11,0	 # move reg to reg
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bnf	.L1298	# delay slot filled
	l.or    	r5,r5,r11
.L1224:
	l.sfeqi	r2,0
.L1306:
	l.bf	.L1252	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
.L1318:
	l.lwz   	r5,8(r1)	 # SI load
	l.jal   	patternCompare	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L1313	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.j     	.L1202	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L1215:
	l.bf	.L1314	# delay slot filled
	l.sfgtsi	r18,127
	l.movhi  	r4,hi(sqlite3UpperToLower)
	l.ori   	r4,r4,lo(sqlite3UpperToLower)
	l.add   	r2,r2,r4
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
.L1314:
	l.bf	.L1315	# delay slot filled
	l.xor   	r3,r2,r18
	l.movhi  	r5,hi(sqlite3UpperToLower)
	l.ori   	r5,r5,lo(sqlite3UpperToLower)
	l.add   	r18,r18,r5
	l.lbz   	r18,0(r18)	 # zero_extendqisi2
.L1277:
	l.xor   	r3,r2,r18
.L1315:
	l.sub   	r5,r0,r2
	l.sub   	r6,r0,r3
	l.ori   	r4,r14,0	 # move reg to reg
	l.or    	r3,r6,r3
	l.sfgesi	r3,0
	l.bf	.L1224	# delay slot filled
	l.or    	r5,r5,r2
.L1299:
	l.sfltsi	r5,0
	l.bnf	.L1306	# delay slot filled
	l.sfeqi	r2,0
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.movhi  	r4,hi(sqlite3UpperToLower)
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r4,r4,lo(sqlite3UpperToLower)
	l.sfgtsi	r11,127
	l.bf	.L1277	# delay slot filled
	l.add   	r3,r11,r4
	l.lbz   	r2,0(r3)	 # zero_extendqisi2
	l.xor   	r3,r2,r18
	l.sub   	r5,r0,r2
	l.sub   	r6,r0,r3
	l.ori   	r4,r14,0	 # move reg to reg
	l.or    	r3,r6,r3
	l.sfgesi	r3,0
	l.bnf	.L1299	# delay slot filled
	l.or    	r5,r5,r2
	l.j     	.L1306	# delay slot filled
	l.sfeqi	r2,0
.L1252:
	l.j     	.L1202	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
.L1283:
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
.L1279:
	l.j     	.L1210	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L1301:
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
.L1210:
	l.lwz   	r5,8(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L1213	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	patternCompare	# delay slot filled
	l.addi  	r3,r3,-1
	l.sfeqi	r11,0
	l.bnf	.L1300	# delay slot filled
	l.lwz   	r2,12(r1)	 # SI load
	l.addi  	r4,r2,1
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.sw    	12(r1),r4	 # SI store
	l.sfgtui	r3,191
	l.bnf	.L1301	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.andi  	r5,r3,192
	l.sfnei	r5,128
	l.bf	.L1279
	l.nop			# nop delay slot
.L1269:
	l.addi  	r4,r4,1
	l.sw    	12(r1),r4	 # SI store
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.andi  	r2,r3,192
	l.sfeqi	r2,128
	l.bf	.L1269	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.j     	.L1210	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L1300:
.L1213:
	l.lbz   	r11,0(r2)	 # zero_extendqisi2
	l.sub   	r11,r0,r11
	l.j     	.L1202	# delay slot filled
	l.srli  	r11,r11,31
.L1297:
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfeqi	r18,0
	l.bnf	.L1316	# delay slot filled
	l.addi  	r14,r1,12
	l.j     	.L1307	# delay slot filled
	l.addi	r1,r1,64
.LFE957:
	.size	patternCompare, .-patternCompare
	.align	4
.proc	xferCompatibleCollation
	.type	xferCompatibleCollation, @function
xferCompatibleCollation:
.LFB992:
	l.sw    	-4(r1),r9	 # SI store
.LCFI423:
	l.ori   	r11,r4,0	 # move reg to reg
	l.sfnei	r3,0
.LCFI424:
	l.bnf	.L1323	# delay slot filled
	l.addi  	r1,r1,-4
	l.sfeqi	r4,0
	l.bf	.L1321
	l.nop			# nop delay slot
	l.jal   	sqlite3StrICmp
	l.nop			# nop delay slot
.L1323:
	l.sub   	r3,r0,r11
	l.or    	r11,r3,r11
	l.xori  	r11,r11,0xffff
	l.srli  	r11,r11,31
.L1321:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE992:
	.size	xferCompatibleCollation, .-xferCompatibleCollation
	.align	4
.proc	xferCompatibleIndex
	.type	xferCompatibleIndex, @function
xferCompatibleIndex:
.LFB993:
	l.sw    	-40(r1),r2	 # SI store
.LCFI425:
	l.sw    	-32(r1),r16	 # SI store
.LCFI426:
	l.sw    	-4(r1),r9	 # SI store
.LCFI427:
	l.sw    	-36(r1),r14	 # SI store
.LCFI428:
	l.sw    	-28(r1),r18	 # SI store
.LCFI429:
	l.sw    	-24(r1),r20	 # SI store
.LCFI430:
	l.sw    	-20(r1),r22	 # SI store
.LCFI431:
	l.sw    	-16(r1),r24	 # SI store
.LCFI432:
	l.sw    	-12(r1),r26	 # SI store
.LCFI433:
	l.sw    	-8(r1),r28	 # SI store
.LCFI434:
	l.lwz   	r16,4(r3)	 # SI load
	l.lwz   	r2,4(r4)	 # SI load
	l.addi  	r1,r1,-40
.LCFI435:
	l.sfne 	r16,r2
	l.bnf	.L1336	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L1325:
	l.addi	r1,r1,40
.L1337:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L1336:
	l.lbz   	r5,24(r3)	 # zero_extendqisi2
	l.lbz   	r2,24(r4)	 # zero_extendqisi2
	l.sfne 	r5,r2
	l.bf	.L1325	# delay slot filled
	l.sflesi	r16,0
	l.bf	.L1325	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lwz   	r20,8(r4)	 # SI load
	l.lwz   	r18,8(r3)	 # SI load
	l.lwz   	r5,0(r20)	 # SI load
	l.lwz   	r2,0(r18)	 # SI load
	l.sfne 	r5,r2
	l.bf	.L1325	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r22,40(r4)	 # SI load
	l.lwz   	r24,40(r3)	 # SI load
	l.lbz   	r5,0(r22)	 # zero_extendqisi2
	l.lbz   	r2,0(r24)	 # zero_extendqisi2
	l.sfne 	r5,r2
	l.bf	.L1325	# delay slot filled
	l.addi  	r14,r0,4	 # move immediate I
	l.lwz   	r28,44(r4)	 # SI load
	l.lwz   	r26,44(r3)	 # SI load
	l.j     	.L1326	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L1327:
	l.lwz   	r7,0(r3)	 # SI load
	l.lwz   	r3,0(r4)	 # SI load
	l.sfne 	r7,r3
	l.bf	.L1334	# delay slot filled
	l.addi  	r4,r14,4
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.lbz   	r3,0(r6)	 # zero_extendqisi2
	l.ori   	r11,r14,0	 # move reg to reg
	l.sfne 	r5,r3
	l.bf	.L1334	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
.L1326:
	l.add   	r3,r28,r11
	l.add   	r11,r26,r11
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r4,0(r11)	 # SI load
	l.jal   	xferCompatibleCollation	# delay slot filled
	l.addi  	r2,r2,1
	l.add   	r5,r22,r2
	l.add   	r6,r24,r2
	l.add   	r3,r20,r14
	l.sfeqi	r11,0
	l.bf	.L1325	# delay slot filled
	l.add   	r4,r18,r14
	l.sfgts 	r16,r2
	l.bf	.L1327	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.j     	.L1337	# delay slot filled
	l.addi	r1,r1,40
.L1334:
	l.j     	.L1325	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE993:
	.size	xferCompatibleIndex, .-xferCompatibleIndex
	.align	4
.proc	setJoinExpr
	.type	setJoinExpr, @function
setJoinExpr:
.LFB1034:
	l.sw    	-12(r1),r2	 # SI store
.LCFI436:
	l.sw    	-8(r1),r14	 # SI store
.LCFI437:
	l.sw    	-4(r1),r9	 # SI store
.LCFI438:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI439:
	l.sfeqi	r3,0
	l.bf	.L1338	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
.L1341:
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.ori   	r3,r3,1
	l.sw    	52(r2),r14	 # SI store
	l.sh    	2(r2),r3	 # movhi
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	setJoinExpr	# delay slot filled
	l.lwz   	r3,20(r2)	 # SI load
	l.lwz   	r2,24(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L1341
	l.nop			# nop delay slot
.L1338:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1034:
	.size	setJoinExpr, .-setJoinExpr
	.section	.rodata.str1.1
.LC19:
	.string	"INTEGER"
.LC20:
	.string	"TEXT"
.LC21:
	.string	"rowid"
	.section .text
	.align	4
.proc	columnType
	.type	columnType, @function
columnType:
.LFB1043:
	l.sw    	-16(r1),r2	 # SI store
.LCFI440:
	l.sw    	-12(r1),r14	 # SI store
.LCFI441:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-8(r1),r16	 # SI store
.LCFI442:
	l.sw    	-4(r1),r9	 # SI store
.LCFI443:
	l.addi  	r1,r1,-64
.LCFI444:
	l.ori   	r11,r4,0	 # move reg to reg
	l.sw    	44(r1),r2	 # SI store
	l.sw    	40(r1),r2	 # SI store
	l.sw    	36(r1),r2	 # SI store
	l.ori   	r13,r3,0	 # move reg to reg
	l.ori   	r2,r5,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bnf	.L1375	# delay slot filled
	l.ori   	r14,r7,0	 # move reg to reg
.L1344:
	l.addi	r1,r1,64
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L1375:
	l.lwz   	r11,4(r3)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L1344
	l.nop			# nop delay slot
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.sfeqi	r3,151
	l.bf	.L1347	# delay slot filled
	l.sfeqi	r3,153
	l.bf	.L1347	# delay slot filled
	l.sfeqi	r3,116
	l.bnf	.L1345	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r3,28(r4)	 # SI load
	l.lwz   	r8,0(r13)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r11,8(r3)	 # SI load
	l.lwz   	r4,12(r4)	 # SI load
	l.ori   	r3,r1,0	 # move reg to reg
	l.lwz   	r4,0(r4)	 # SI load
	l.addi  	r5,r1,44
	l.addi  	r6,r1,40
	l.addi  	r7,r1,36
	l.sw    	4(r1),r11	 # SI store
	l.sw    	32(r1),r13	 # SI store
	l.jal   	columnType	# delay slot filled
	l.sw    	0(r1),r8	 # SI store
.L1345:
	l.sfeqi	r2,0
.L1379:
	l.bf	.L1344
	l.nop			# nop delay slot
	l.lwz   	r4,44(r1)	 # SI load
	l.lwz   	r3,40(r1)	 # SI load
	l.sw    	0(r2),r4	 # SI store
	l.lwz   	r2,36(r1)	 # SI load
	l.sw    	0(r16),r3	 # SI store
	l.sw    	0(r14),r2	 # SI store
	l.addi	r1,r1,64
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L1347:
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r7,40(r4)	 # SI load
	l.ori   	r3,r6,0	 # move reg to reg
.L1374:
	l.sub   	r5,r0,r3
	l.or    	r5,r3,r5
	l.sfltsi	r5,0
	l.bf	.L1380	# delay slot filled
	l.movhi  	r11,hi(.LC20)
.L1377:
	l.sub   	r5,r0,r13
	l.or    	r5,r13,r5
	l.sfltsi	r5,0
	l.bnf	.L1380	# delay slot filled
	l.movhi  	r11,hi(.LC20)
	l.lwz   	r17,4(r13)	 # SI load
	l.lhs   	r3,0(r17)	 # extendhisi2_no_sext_mem
	l.sflesi	r3,0
	l.bf	.L1349
	l.nop			# nop delay slot
	l.lwz   	r15,36(r4)	 # SI load
	l.lwz   	r5,28(r17)	 # SI load
	l.sfeq 	r5,r15
	l.bf	.L1364	# delay slot filled
	l.addi  	r11,r17,80
	l.j     	.L1351	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
.L1376:
	l.lwz   	r12,0(r11)	 # SI load
	l.sfne 	r12,r15
	l.bnf	.L1350	# delay slot filled
	l.addi  	r11,r11,52
.L1351:
	l.addi  	r8,r8,1
	l.sfges 	r8,r3
	l.bnf	.L1376
	l.nop			# nop delay slot
.L1349:
	l.addi  	r3,r0,0	 # move immediate I
	l.sub   	r5,r0,r3
	l.or    	r5,r3,r5
	l.sfltsi	r5,0
	l.bnf	.L1377	# delay slot filled
	l.lwz   	r13,32(r13)	 # SI load
	l.movhi  	r11,hi(.LC20)
.L1380:
	l.sfeqi	r3,0
	l.bf	.L1345	# delay slot filled
	l.ori   	r11,r11,lo(.LC20)
	l.sfeqi	r6,0
	l.bf	.L1354	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.sflts 	r7,r11
	l.bf	.L1379	# delay slot filled
	l.sfeqi	r2,0
	l.lwz   	r3,0(r6)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.sfges 	r7,r4
	l.bf	.L1345	# delay slot filled
	l.slli  	r7,r7,4
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r12,8(r6)	 # SI load
	l.add   	r3,r3,r7
	l.lwz   	r8,0(r13)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.addi  	r5,r1,44
	l.ori   	r3,r1,0	 # move reg to reg
	l.addi  	r6,r1,40
	l.addi  	r7,r1,36
	l.sw    	4(r1),r12	 # SI store
	l.sw    	32(r1),r11	 # SI store
	l.jal   	columnType	# delay slot filled
	l.sw    	0(r1),r8	 # SI store
	l.j     	.L1379	# delay slot filled
	l.sfeqi	r2,0
.L1364:
	l.addi  	r8,r0,0	 # move immediate I
.L1350:
	l.add   	r3,r8,r8
	l.add   	r3,r3,r8
	l.slli  	r5,r3,4
	l.add   	r3,r3,r5
	l.add   	r8,r3,r8
	l.add   	r17,r17,r8
	l.lwz   	r3,16(r17)	 # SI load
	l.j     	.L1374	# delay slot filled
	l.lwz   	r6,20(r17)	 # SI load
.L1354:
	l.lwz   	r5,72(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L1345	# delay slot filled
	l.ori   	r11,r6,0	 # move reg to reg
	l.sfgesi	r7,0
	l.bnf	.L1378
	l.nop			# nop delay slot
.L1355:
	l.slli  	r4,r7,2
	l.slli  	r7,r7,4
	l.lwz   	r6,16(r3)	 # SI load
	l.add   	r4,r4,r7
	l.add   	r4,r6,r4
	l.lwz   	r6,0(r4)	 # SI load
	l.lwz   	r11,8(r4)	 # SI load
	l.sw    	36(r1),r6	 # SI store
.L1356:
	l.lwz   	r4,4(r3)	 # SI load
	l.lwz   	r3,0(r13)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L1345	# delay slot filled
	l.sw    	40(r1),r4	 # SI store
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r8,4(r4)	 # SI load
	l.sflesi	r8,0
	l.bf	.L1369	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r7,8(r4)	 # SI load
	l.lwz   	r4,20(r7)	 # SI load
	l.sfeq 	r5,r4
	l.bf	.L1357	# delay slot filled
	l.addi  	r4,r7,44
	l.j     	.L1358
	l.nop			# nop delay slot
.L1359:
	l.lwz   	r6,0(r4)	 # SI load
	l.sfeq 	r5,r6
	l.bf	.L1357	# delay slot filled
	l.addi  	r4,r4,24
.L1358:
	l.addi  	r3,r3,1
	l.sfgts 	r8,r3
	l.bf	.L1359
	l.nop			# nop delay slot
.L1357:
	l.add   	r4,r3,r3
	l.add   	r3,r4,r3
	l.slli  	r3,r3,3
	l.add   	r7,r7,r3
	l.lwz   	r3,0(r7)	 # SI load
	l.j     	.L1345	# delay slot filled
	l.sw    	44(r1),r3	 # SI store
.L1378:
	l.lwz   	r7,8(r3)	 # SI load
	l.sfgesi	r7,0
	l.bf	.L1355	# delay slot filled
	l.movhi  	r4,hi(.LC21)
	l.movhi  	r11,hi(.LC19)
	l.ori   	r4,r4,lo(.LC21)
	l.ori   	r11,r11,lo(.LC19)
	l.j     	.L1356	# delay slot filled
	l.sw    	36(r1),r4	 # SI store
.L1369:
	l.j     	.L1357	# delay slot filled
	l.lwz   	r7,8(r4)	 # SI load
.LFE1043:
	.size	columnType, .-columnType
	.align	4
.proc	exprWalkNoop
	.type	exprWalkNoop, @function
exprWalkNoop:
.LFB1064:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE1064:
	.size	exprWalkNoop, .-exprWalkNoop
	.align	4
.proc	checkColumnOverLap
	.type	checkColumnOverLap, @function
checkColumnOverLap:
.LFB1090:
	l.sw    	-20(r1),r2	 # SI store
.LCFI445:
	l.sub   	r2,r0,r4
	l.sw    	-12(r1),r16	 # SI store
.LCFI446:
	l.sw    	-4(r1),r9	 # SI store
.LCFI447:
	l.sw    	-16(r1),r14	 # SI store
.LCFI448:
	l.sw    	-8(r1),r18	 # SI store
.LCFI449:
	l.or    	r2,r4,r2
	l.addi  	r1,r1,-20
.LCFI450:
	l.sfgesi	r2,0
	l.bf	.L1387	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.sub   	r2,r0,r3
	l.or    	r2,r3,r2
	l.xori  	r2,r2,0xffff
	l.srli  	r2,r2,31
	l.sfnei	r2,0
	l.bf	.L1383	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lwz   	r18,0(r4)	 # SI load
	l.sflesi	r18,0
	l.bf	.L1383	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r14,12(r4)	 # SI load
	l.j     	.L1384	# delay slot filled
	l.addi  	r14,r14,4
.L1390:
	l.bnf	.L1389	# delay slot filled
	l.addi  	r14,r14,16
.L1384:
	l.lwz   	r4,0(r14)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3IdListIndex	# delay slot filled
	l.addi  	r2,r2,1
	l.sfgesi	r11,0
	l.bnf	.L1390	# delay slot filled
	l.sflts 	r2,r18
.L1387:
	l.addi  	r11,r0,1	 # move immediate I
.L1383:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L1389:
	l.addi	r1,r1,20
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE1090:
	.size	checkColumnOverLap, .-checkColumnOverLap
	.align	4
.proc	sqlite3VtabUnlock
	.type	sqlite3VtabUnlock, @function
sqlite3VtabUnlock:
.LFB1106:
	l.lwz   	r5,4(r4)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI451:
	l.addi  	r5,r5,-1
	l.sw    	-8(r1),r2	 # SI store
.LCFI452:
	l.sw    	4(r4),r5	 # SI store
	l.sfnei	r5,0
.LCFI453:
	l.bf	.L1391	# delay slot filled
	l.addi  	r1,r1,-8
	l.lwz   	r5,0(r4)	 # SI load
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r4,16(r5)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr	r4	# delay slot filled	# sibcall Rsc
	l.lwz   	r2,-8(r1)	 # SI load
.L1391:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1106:
	.size	sqlite3VtabUnlock, .-sqlite3VtabUnlock
	.align	4
.proc	callFinaliser
	.type	callFinaliser, @function
callFinaliser:
.LFB1120:
	l.sw    	-20(r1),r14	 # SI store
.LCFI454:
	l.sw    	-8(r1),r20	 # SI store
.LCFI455:
	l.sw    	-4(r1),r9	 # SI store
.LCFI456:
	l.sw    	-24(r1),r2	 # SI store
.LCFI457:
	l.sw    	-16(r1),r16	 # SI store
.LCFI458:
	l.sw    	-12(r1),r18	 # SI store
.LCFI459:
	l.lwz   	r5,288(r3)	 # SI load
	l.addi  	r1,r1,-24
.LCFI460:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L1394	# delay slot filled
	l.ori   	r20,r4,0	 # move reg to reg
	l.lwz   	r2,292(r3)	 # SI load
	l.sflesi	r2,0
	l.bf	.L1401	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r2,0(r5)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L1396	# delay slot filled
	l.addi  	r18,r0,4	 # move immediate I
	l.j     	.L1399	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L1398:
	l.lwz   	r5,288(r14)	 # SI load
	l.add   	r2,r5,r18
	l.lwz   	r2,0(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L1396	# delay slot filled
	l.addi  	r18,r18,4
.L1399:
	l.lwz   	r5,0(r2)	 # SI load
	l.addi  	r16,r16,1
	l.add   	r5,r5,r20
	l.lwz   	r11,0(r5)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L1397	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jalr  	r11
	l.nop			# nop delay slot
.L1397:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3VtabUnlock	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r2,292(r14)	 # SI load
	l.sfgts 	r2,r16
	l.bf	.L1398
	l.nop			# nop delay slot
	l.lwz   	r5,288(r14)	 # SI load
.L1396:
	l.addi  	r2,r0,0	 # move immediate I
.L1401:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.sw    	292(r14),r2	 # SI store
	l.sw    	288(r14),r2	 # SI store
.L1394:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE1120:
	.size	callFinaliser, .-callFinaliser
	.align	4
.proc	exprSelectTableUsage
	.type	exprSelectTableUsage, @function
exprSelectTableUsage:
.LFB1137:
	l.sw    	-44(r1),r2	 # SI store
.LCFI461:
	l.sw    	-40(r1),r14	 # SI store
.LCFI462:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI463:
	l.sw    	-36(r1),r16	 # SI store
.LCFI464:
	l.sw    	-32(r1),r18	 # SI store
.LCFI465:
	l.sw    	-28(r1),r20	 # SI store
.LCFI466:
	l.sw    	-24(r1),r22	 # SI store
.LCFI467:
	l.sw    	-20(r1),r24	 # SI store
.LCFI468:
	l.sw    	-16(r1),r26	 # SI store
.LCFI469:
	l.sw    	-12(r1),r28	 # SI store
.LCFI470:
	l.sw    	-8(r1),r30	 # SI store
.LCFI471:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-52
.LCFI472:
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.sfeqi	r2,0
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.bf	.L1407	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
.L1404:
	l.lwz   	r4,0(r2)	 # SI load
	l.jal   	exprListTableUsage	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,16(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r28,r11,0	 # move reg to reg
	l.jal   	exprListTableUsage	# delay slot filled
	l.ori   	r24,r12,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r30,r11,0	 # move reg to reg
	l.jal   	exprListTableUsage	# delay slot filled
	l.ori   	r26,r12,0	 # move reg to reg
	l.lwz   	r4,12(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r22,r11,0	 # move reg to reg
	l.jal   	exprTableUsage	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
	l.jal   	exprTableUsage	# delay slot filled
	l.ori   	r16,r12,0	 # move reg to reg
	l.or    	r4,r30,r28
	l.or    	r3,r26,r24
	l.or    	r4,r4,r22
	l.or    	r3,r3,r20
	l.or    	r4,r4,r18
	l.lwz   	r5,0(r1)	 # SI load
	l.or    	r3,r3,r16
	l.or    	r11,r4,r11
	l.or    	r12,r3,r12
	l.or    	r4,r11,r5
	l.lwz   	r5,4(r1)	 # SI load
	l.ori   	r11,r4,0	 # move reg to reg
	l.or    	r3,r12,r5
	l.lwz   	r2,28(r2)	 # SI load
	l.ori   	r12,r3,0	 # move reg to reg
	l.sfnei	r2,0
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
	l.bf	.L1404	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
.L1407:
	l.lwz   	r12,4(r1)	 # SI load
	l.addi	r1,r1,52
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.LFE1137:
	.size	exprSelectTableUsage, .-exprSelectTableUsage
	.align	4
.proc	exprTableUsage
	.type	exprTableUsage, @function
exprTableUsage:
.LFB1135:
	l.sw    	-20(r1),r2	 # SI store
.LCFI473:
	l.sw    	-16(r1),r14	 # SI store
.LCFI474:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI475:
	l.sw    	-12(r1),r16	 # SI store
.LCFI476:
	l.sw    	-8(r1),r18	 # SI store
.LCFI477:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-28
.LCFI478:
	l.addi  	r5,r0,0	 # move immediate I
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.sfeqi	r2,0
	l.bf	.L1409	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.lbz   	r4,0(r2)	 # zero_extendqisi2
	l.sfnei	r4,151
	l.bnf	.L1423
	l.nop			# nop delay slot
	l.jal   	exprTableUsage	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
	l.jal   	exprTableUsage	# delay slot filled
	l.ori   	r16,r12,0	 # move reg to reg
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,4096
	l.or    	r18,r11,r18
	l.sfeqi	r3,0
	l.bf	.L1417	# delay slot filled
	l.or    	r16,r12,r16
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	exprSelectTableUsage	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.or    	r18,r11,r18
	l.or    	r16,r12,r16
	l.sw    	0(r1),r18	 # SI store
	l.sw    	4(r1),r16	 # SI store
.L1409:
	l.lwz   	r11,0(r1)	 # SI load
.L1426:
	l.lwz   	r12,4(r1)	 # SI load
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L1423:
	l.lwz   	r5,0(r3)	 # SI load
	l.sflesi	r5,0
	l.bf	.L1409	# delay slot filled
	l.lwz   	r6,36(r2)	 # SI load
	l.lwz   	r2,4(r3)	 # SI load
	l.sfeq 	r6,r2
	l.bf	.L1424	# delay slot filled
	l.addi  	r3,r3,8
	l.j     	.L1413	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L1416:
	l.lwz   	r2,0(r3)	 # SI load
	l.sfne 	r6,r2
	l.bnf	.L1425	# delay slot filled
	l.addi  	r3,r3,4
.L1413:
	l.addi  	r4,r4,1
	l.sfgts 	r5,r4
	l.bf	.L1416
	l.nop			# nop delay slot
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.j     	.L1426	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
.L1417:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	exprListTableUsage	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.or    	r18,r11,r18
	l.or    	r16,r12,r16
	l.sw    	0(r1),r18	 # SI store
	l.j     	.L1409	# delay slot filled
	l.sw    	4(r1),r16	 # SI store
.L1425:
	l.addi  	r2,r4,-32
	l.sfltsi	r2,0
	l.bf	.L1414	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.sll   	r3,r3,r2
	l.sw    	4(r1),r5	 # SI store
	l.j     	.L1409	# delay slot filled
	l.sw    	0(r1),r3	 # SI store
.L1414:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	0(r1),r2	 # SI store
	l.addi  	r2,r0,1	 # move immediate I
	l.sll   	r2,r2,r4
	l.j     	.L1409	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
.L1424:
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,1	 # move immediate I
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.j     	.L1426	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
.LFE1135:
	.size	exprTableUsage, .-exprTableUsage
	.align	4
.proc	exprListTableUsage
	.type	exprListTableUsage, @function
exprListTableUsage:
.LFB1136:
	l.sw    	-24(r1),r2	 # SI store
.LCFI479:
	l.sw    	-8(r1),r20	 # SI store
.LCFI480:
	l.sw    	-4(r1),r9	 # SI store
.LCFI481:
	l.sw    	-20(r1),r14	 # SI store
.LCFI482:
	l.sw    	-16(r1),r16	 # SI store
.LCFI483:
	l.sw    	-12(r1),r18	 # SI store
.LCFI484:
	l.ori   	r20,r3,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI485:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
	l.sfeqi	r4,0
		l.sw    	0(r1), r2
		l.sw    	4(r1), r3
	l.bf	.L1433	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
	l.lwz   	r18,0(r4)	 # SI load
	l.sflesi	r18,0
	l.bf	.L1433	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r16,12(r4)	 # SI load
.L1429:
	l.lwz   	r4,0(r16)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	exprTableUsage	# delay slot filled
	l.addi  	r14,r14,1
	l.lwz   	r3,0(r1)	 # SI load
	l.lwz   	r2,4(r1)	 # SI load
	l.or    	r11,r11,r3
	l.or    	r12,r12,r2
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r12,0	 # move reg to reg
		l.sw    	0(r1), r2
		l.sw    	4(r1), r3
	l.sflts 	r14,r18
	l.bf	.L1429	# delay slot filled
	l.addi  	r16,r16,16
	l.lwz   	r11,0(r1)	 # SI load
.L1433:
	l.lwz   	r12,4(r1)	 # SI load
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE1136:
	.size	exprListTableUsage, .-exprListTableUsage
	.align	4
.proc	disableTerm
	.type	disableTerm, @function
disableTerm:
.LFB1158:
	l.sfeqi	r4,0
	l.bf	.L1434
	l.nop			# nop delay slot
	l.lbz   	r5,18(r4)	 # zero_extendqisi2
	l.andi  	r6,r5,4
	l.sfeqi	r6,0
	l.bf	.L1441
	l.nop			# nop delay slot
	l.j     	.L1434
	l.nop			# nop delay slot
.L1439:
	l.lbz   	r5,18(r5)	 # zero_extendqisi2
	l.andi  	r6,r5,4
	l.sfeqi	r6,0
	l.bnf	.L1434
	l.nop			# nop delay slot
.L1441:
	l.lwz   	r6,12(r3)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L1438	# delay slot filled
	l.ori   	r5,r5,4
	l.lwz   	r6,0(r4)	 # SI load
	l.lhz   	r6,2(r6)	 # zero_extendqisi2
	l.andi  	r6,r6,1
	l.sfeqi	r6,0
	l.bf	.L1434
	l.nop			# nop delay slot
.L1438:
	l.lwz   	r6,4(r4)	 # SI load
	l.sb    	18(r4),r5	    # movqi
	l.slli  	r7,r6,3
	l.sfltsi	r6,0
	l.bf	.L1434	# delay slot filled
	l.slli  	r5,r6,5
	l.lwz   	r4,20(r4)	 # SI load
	l.add   	r5,r7,r5
	l.lwz   	r4,20(r4)	 # SI load
	l.add   	r5,r4,r5
	l.lbz   	r6,19(r5)	 # zero_extendqisi2
	l.addi  	r6,r6,-1
	l.ori   	r4,r5,0	 # move reg to reg
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bf	.L1439	# delay slot filled
	l.sb    	19(r5),r6	    # movqi
.L1434:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE1158:
	.size	disableTerm, .-disableTerm
	.align	4
.proc	yy_find_shift_action
	.type	yy_find_shift_action, @function
yy_find_shift_action:
.LFB1170:
	l.lwz   	r5,0(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI486:
	l.slli  	r5,r5,4
	l.sw    	-8(r1),r2	 # SI store
.LCFI487:
	l.add   	r5,r3,r5
	l.lhz   	r5,12(r5)	 # zero_extendqisi2
	l.sfgtsi	r5,406
.LCFI488:
	l.bf	.L1452	# delay slot filled
	l.addi  	r1,r1,-8
	l.movhi  	r2,hi(yy_shift_ofst)
	l.add   	r5,r5,r5
	l.ori   	r2,r2,lo(yy_shift_ofst)
	l.add   	r6,r5,r2
	l.lhs   	r6,0(r6)	 # extendhisi2_no_sext_mem
	l.sfnei	r6,-111
	l.bnf	.L1448	# delay slot filled
	l.add   	r6,r4,r6
	l.sfgtui	r6,1497
	l.bf	.L1455	# delay slot filled
	l.sfeqi	r4,0
	l.movhi  	r2,hi(yy_lookahead)
	l.add   	r7,r6,r6
	l.ori   	r2,r2,lo(yy_lookahead)
	l.add   	r8,r7,r2
	l.lhz   	r8,0(r8)	 # zero_extendqisi2
	l.sfeq 	r8,r4
	l.bf	.L1447	# delay slot filled
	l.sfeqi	r4,0
.L1455:
	l.bf	.L1448	# delay slot filled
	l.sfgtui	r4,140
	l.bf	.L1449	# delay slot filled
	l.movhi  	r2,hi(yyFallback)
	l.add   	r7,r4,r4
	l.ori   	r2,r2,lo(yyFallback)
	l.add   	r7,r7,r2
	l.lhz   	r7,0(r7)	 # zero_extendqisi2
	l.sfeqi	r7,0
	l.bnf	.L1453
	l.nop			# nop delay slot
.L1449:
	l.sub   	r4,r6,r4
	l.addi  	r4,r4,65
	l.sfgtui	r4,1497
	l.bf	.L1456	# delay slot filled
	l.movhi  	r2,hi(yy_default)
	l.movhi  	r2,hi(yy_lookahead)
	l.add   	r4,r4,r4
	l.ori   	r2,r2,lo(yy_lookahead)
	l.add   	r3,r4,r2
	l.lhz   	r3,0(r3)	 # zero_extendqisi2
	l.sfnei	r3,65
	l.bnf	.L1454
	l.nop			# nop delay slot
.L1448:
	l.movhi  	r2,hi(yy_default)
.L1456:
	l.ori   	r2,r2,lo(yy_default)
	l.add   	r5,r5,r2
	l.lhz   	r11,0(r5)	 # zero_extendqisi2
.L1445:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L1452:
	l.j     	.L1448	# delay slot filled
	l.add   	r5,r5,r5
.L1447:
	l.movhi  	r2,hi(yy_action)
	l.ori   	r2,r2,lo(yy_action)
	l.add   	r7,r7,r2
	l.j     	.L1445	# delay slot filled
	l.lhz   	r11,0(r7)	 # zero_extendqisi2
.L1454:
	l.movhi  	r2,hi(yy_action)
	l.ori   	r2,r2,lo(yy_action)
	l.add   	r4,r4,r2
	l.j     	.L1445	# delay slot filled
	l.lhz   	r11,0(r4)	 # zero_extendqisi2
.L1453:
	l.addi	r1,r1,8
	l.ori   	r4,r7,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	yy_find_shift_action	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1170:
	.size	yy_find_shift_action, .-yy_find_shift_action
	.align	4
.proc	keywordCode
	.type	keywordCode, @function
keywordCode:
.LFB1179:
	l.sw    	-16(r1),r14	 # SI store
.LCFI489:
	l.sw    	-12(r1),r16	 # SI store
.LCFI490:
	l.sw    	-8(r1),r18	 # SI store
.LCFI491:
	l.sw    	-4(r1),r9	 # SI store
.LCFI492:
	l.sw    	-20(r1),r2	 # SI store
.LCFI493:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI494:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sflesi	r4,1
	l.bf	.L1458	# delay slot filled
	l.addi  	r18,r0,26	 # move immediate I
	l.add   	r2,r3,r4
	l.movhi  	r4,hi(sqlite3UpperToLower)
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.ori   	r4,r4,lo(sqlite3UpperToLower)
	l.lbz   	r2,-1(r2)	 # zero_extendqisi2
	l.add   	r3,r3,r4
	l.add   	r2,r2,r4
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.slli  	r3,r3,2
	l.add   	r5,r2,r2
	l.addi  	r4,r0,127	 # move immediate I
	l.add   	r2,r5,r2
	l.xor   	r3,r3,r14
	l.jal   	__modsi3	# delay slot filled
	l.xor   	r3,r3,r2
	l.movhi  	r5,hi(aHash.21223)
	l.ori   	r5,r5,lo(aHash.21223)
	l.add   	r11,r11,r5
	l.lbz   	r2,0(r11)	 # zero_extendqisi2
	l.addi  	r2,r2,-1
	l.sfeqi	r2,-1
	l.bnf	.L1467	# delay slot filled
	l.movhi  	r6,hi(aLen.21225)
	l.j     	.L1466	# delay slot filled
	l.addi	r1,r1,20
.L1459:
.L1468:
	l.ori   	r4,r4,lo(aNext.21224)
	l.add   	r2,r2,r4
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.addi  	r2,r2,-1
	l.sfnei	r2,-1
	l.bnf	.L1465	# delay slot filled
	l.movhi  	r6,hi(aLen.21225)
.L1467:
	l.ori   	r6,r6,lo(aLen.21225)
	l.add   	r5,r2,r6
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.sfne 	r5,r14
	l.bf	.L1468	# delay slot filled
	l.movhi  	r4,hi(aNext.21224)
	l.movhi  	r5,hi(aOffset.21226)
	l.add   	r3,r2,r2
	l.ori   	r5,r5,lo(aOffset.21226)
	l.movhi  	r6,hi(zText.21222)
	l.add   	r3,r3,r5
	l.ori   	r6,r6,lo(zText.21222)
	l.lhz   	r3,0(r3)	 # zero_extendqisi2
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.add   	r3,r3,r6
	l.sfnei	r11,0
	l.bf	.L1459	# delay slot filled
	l.movhi  	r4,hi(aNext.21224)
	l.movhi  	r3,hi(aCode.21227)
	l.ori   	r3,r3,lo(aCode.21227)
	l.add   	r2,r2,r3
	l.lbz   	r18,0(r2)	 # zero_extendqisi2
.L1458:
	l.addi	r1,r1,20
.L1466:
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L1465:
	l.addi	r1,r1,20
	l.addi  	r18,r0,26	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE1179:
	.size	keywordCode, .-keywordCode
	.align	4
.proc	sqlite3GetToken
	.type	sqlite3GetToken, @function
sqlite3GetToken:
.LFB1181:
	l.sw    	-12(r1),r2	 # SI store
.LCFI495:
	l.sw    	-8(r1),r14	 # SI store
.LCFI496:
	l.sw    	-4(r1),r9	 # SI store
.LCFI497:
	l.ori   	r14,r4,0	 # move reg to reg
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.addi  	r2,r4,-9
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfgtui	r2,117
.LCFI498:
	l.bnf	.L1605	# delay slot filled
	l.addi  	r1,r1,-12
.L1470:
	l.andi  	r5,r4,128
.L1629:
	l.sfnei	r5,0
	l.bf	.L1598	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sflesi	r4,31
	l.bf	.L1600	# delay slot filled
	l.movhi  	r8,hi(sqlite3IsAsciiIdChar)
	l.ori   	r8,r8,lo(sqlite3IsAsciiIdChar)
	l.add   	r4,r4,r8
	l.lbs   	r4,-32(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,0
	l.bnf	.L1623	# delay slot filled
	l.add   	r4,r3,r2
.L1562:
	l.addi  	r2,r0,1	 # move immediate I
.L1600:
	l.addi  	r3,r0,147	 # move immediate I
.L1601:
	l.sw    	0(r14),r3	 # SI store
.L1608:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L1606:
	l.bf	.L1564	# delay slot filled
	l.movhi  	r5,hi(sqlite3IsAsciiIdChar)
	l.ori   	r5,r5,lo(sqlite3IsAsciiIdChar)
	l.add   	r4,r4,r5
	l.lbs   	r4,-32(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bnf	.L1564
	l.nop			# nop delay slot
	l.addi  	r2,r2,1
.L1598:
	l.add   	r4,r3,r2
.L1623:
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r5,r4,128
	l.sfnei	r5,0
	l.bnf	.L1606	# delay slot filled
	l.sflesi	r4,31
	l.j     	.L1598	# delay slot filled
	l.addi  	r2,r2,1
.L1605:
	l.movhi  	r5,hi(.L1496)
	l.slli  	r2,r2,2
	l.ori   	r5,r5,lo(.L1496)
	l.add   	r2,r2,r5
	l.lwz   	r2,0(r2)	 # SI load
	l.jr    	r2
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L1496:
	.word	.L1471
	.word	.L1471
	.word	.L1470
	.word	.L1471
	.word	.L1471
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1471
	.word	.L1472
	.word	.L1473
	.word	.L1474
	.word	.L1475
	.word	.L1476
	.word	.L1477
	.word	.L1473
	.word	.L1478
	.word	.L1479
	.word	.L1480
	.word	.L1481
	.word	.L1482
	.word	.L1483
	.word	.L1484
	.word	.L1485
	.word	.L1486
	.word	.L1486
	.word	.L1486
	.word	.L1486
	.word	.L1486
	.word	.L1486
	.word	.L1486
	.word	.L1486
	.word	.L1486
	.word	.L1486
	.word	.L1475
	.word	.L1487
	.word	.L1488
	.word	.L1489
	.word	.L1490
	.word	.L1491
	.word	.L1475
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1492
	.word	.L1470
	.word	.L1470
	.word	.L1493
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1473
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1492
	.word	.L1470
	.word	.L1470
	.word	.L1470
	.word	.L1494
	.word	.L1470
	.word	.L1495
	.section .text
.L1486:
	l.addi  	r2,r0,129	 # move immediate I
	l.movhi  	r5,hi(sqlite3CtypeMap)
	l.sw    	0(r14),r2	 # SI store
	l.ori   	r5,r5,lo(sqlite3CtypeMap)
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.add   	r2,r4,r5
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,4
	l.sfeqi	r2,0
	l.bf	.L1624	# delay slot filled
	l.sfeqi	r4,46
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r2,r2,1
.L1625:
	l.movhi  	r6,hi(sqlite3CtypeMap)
	l.add   	r4,r3,r2
	l.ori   	r6,r6,lo(sqlite3CtypeMap)
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.add   	r5,r4,r6
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.andi  	r5,r5,4
	l.sfnei	r5,0
	l.bf	.L1625	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.sfeqi	r4,46
.L1624:
	l.bf	.L1527	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.add   	r5,r3,r2
.L1528:
	l.lbz   	r4,0(r5)	 # zero_extendqisi2
	l.xori  	r5,r4,69
	l.addi  	r5,r5,-1
	l.sfltsi	r5,0
	l.bf	.L1579	# delay slot filled
	l.xori  	r5,r4,101
	l.addi  	r5,r5,-1
	l.sfgesi	r5,0
	l.bf	.L1537
	l.nop			# nop delay slot
.L1579:
	l.add   	r6,r3,r6
	l.movhi  	r8,hi(sqlite3CtypeMap)
	l.lbz   	r5,1(r6)	 # zero_extendqisi2
	l.ori   	r8,r8,lo(sqlite3CtypeMap)
	l.add   	r7,r5,r8
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.andi  	r7,r7,4
	l.sfnei	r7,0
	l.bf	.L1533	# delay slot filled
	l.xori  	r7,r5,45
	l.addi  	r7,r7,-1
	l.sfltsi	r7,0
	l.bf	.L1580	# delay slot filled
	l.xori  	r5,r5,43
	l.addi  	r5,r5,-1
	l.sfgesi	r5,0
	l.bf	.L1537
	l.nop			# nop delay slot
.L1580:
	l.lbz   	r5,2(r6)	 # zero_extendqisi2
	l.movhi  	r6,hi(sqlite3CtypeMap)
	l.ori   	r6,r6,lo(sqlite3CtypeMap)
	l.add   	r5,r5,r6
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.andi  	r5,r5,4
	l.sfeqi	r5,0
	l.bf	.L1599	# delay slot filled
	l.addi  	r6,r0,147	 # move immediate I
.L1533:
	l.addi  	r2,r2,2
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.add   	r4,r3,r2
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.add   	r5,r5,r7
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.andi  	r5,r5,4
	l.sfeqi	r5,0
	l.bf	.L1626	# delay slot filled
	l.addi  	r5,r0,130	 # move immediate I
	l.addi  	r2,r2,1
.L1627:
	l.movhi  	r8,hi(sqlite3CtypeMap)
	l.add   	r4,r3,r2
	l.ori   	r8,r8,lo(sqlite3CtypeMap)
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.add   	r5,r5,r8
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.andi  	r5,r5,4
	l.sfnei	r5,0
	l.bf	.L1627	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.addi  	r5,r0,130	 # move immediate I
.L1626:
	l.sw    	0(r14),r5	 # SI store
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
.L1537:
	l.j     	.L1599	# delay slot filled
	l.addi  	r6,r0,147	 # move immediate I
.L1607:
	l.ori   	r5,r5,lo(sqlite3IsAsciiIdChar)
	l.add   	r4,r4,r5
	l.lbs   	r4,-32(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bnf	.L1501
	l.nop			# nop delay slot
.L1538:
	l.addi  	r2,r2,1
	l.sw    	0(r14),r6	 # SI store
	l.add   	r4,r3,r2
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
.L1599:
	l.andi  	r5,r4,128
	l.sfnei	r5,0
	l.bf	.L1538	# delay slot filled
	l.sflesi	r4,31
	l.bnf	.L1607	# delay slot filled
	l.movhi  	r5,hi(sqlite3IsAsciiIdChar)
	l.j     	.L1621	# delay slot filled
	l.addi	r1,r1,12
.L1564:
	l.jal   	keywordCode	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.sw    	0(r14),r11	 # SI store
.L1501:
	l.addi	r1,r1,12
.L1621:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L1493:
	l.addi  	r2,r0,1	 # move immediate I
.L1539:
	l.add   	r4,r3,r2
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L1600	# delay slot filled
	l.sfnei	r4,93
	l.bf	.L1539	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r3,r0,26	 # move immediate I
	l.j     	.L1608	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1471:
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.lbz   	r4,1(r3)	 # zero_extendqisi2
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.addi  	r2,r0,1	 # move immediate I
	l.add   	r4,r4,r7
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.and   	r4,r4,r2
	l.sfeqi	r4,0
	l.bf	.L1512
	l.nop			# nop delay slot
	l.addi  	r2,r2,1
.L1628:
	l.movhi  	r8,hi(sqlite3CtypeMap)
	l.add   	r4,r3,r2
	l.ori   	r8,r8,lo(sqlite3CtypeMap)
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.add   	r4,r4,r8
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,1
	l.sfnei	r4,0
	l.bf	.L1628	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
.L1512:
	l.addi  	r3,r0,148	 # move immediate I
.L1622:
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1494:
	l.lbz   	r2,1(r3)	 # zero_extendqisi2
	l.sfeqi	r2,124
	l.bf	.L1519	# delay slot filled
	l.addi  	r3,r0,81	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1492:
	l.lbz   	r2,1(r3)	 # zero_extendqisi2
	l.sfnei	r2,39
	l.bf	.L1629	# delay slot filled
	l.andi  	r5,r4,128
	l.addi  	r2,r0,131	 # move immediate I
	l.sw    	0(r14),r2	 # SI store
	l.lbz   	r4,2(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L1555	# delay slot filled
	l.sfeqi	r4,39
	l.bf	.L1574
	l.nop			# nop delay slot
	l.j     	.L1559	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
.L1610:
	l.bnf	.L1558	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L1559:
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.add   	r4,r4,r7
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,8
	l.sfeqi	r4,0
	l.bf	.L1557	# delay slot filled
	l.addi  	r5,r0,147	 # move immediate I
	l.lwz   	r5,0(r14)	 # SI load
.L1557:
	l.addi  	r2,r2,1
	l.sw    	0(r14),r5	 # SI store
	l.add   	r4,r3,r2
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bnf	.L1610	# delay slot filled
	l.sfnei	r4,39
	l.addi  	r5,r0,1	 # move immediate I
.L1558:
	l.andi  	r3,r2,1
	l.sfnei	r3,0
	l.bf	.L1630	# delay slot filled
	l.addi  	r3,r0,147	 # move immediate I
	l.sfeqi	r5,0
	l.bf	.L1556
	l.nop			# nop delay slot
.L1630:
	l.sfeqi	r4,0
	l.bf	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1556:
	l.j     	.L1501	# delay slot filled
	l.addi  	r2,r2,1
.L1487:
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r2	 # SI store
.L1495:
	l.addi  	r3,r0,93	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1483:
	l.lbz   	r2,1(r3)	 # zero_extendqisi2
	l.sfnei	r2,45
	l.bnf	.L1611	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r3,r0,85	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1482:
	l.addi  	r3,r0,25	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1481:
	l.addi  	r3,r0,84	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1480:
	l.addi  	r3,r0,86	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1485:
	l.lbz   	r2,1(r3)	 # zero_extendqisi2
	l.sfnei	r2,42
	l.bnf	.L1612
	l.nop			# nop delay slot
.L1505:
	l.addi  	r3,r0,87	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1484:
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.lbz   	r2,1(r3)	 # zero_extendqisi2
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.add   	r2,r2,r4
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,4
	l.sfnei	r2,0
	l.bf	.L1486	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r3,r0,118	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1491:
	l.addi  	r4,r0,133	 # move immediate I
	l.movhi  	r6,hi(sqlite3CtypeMap)
	l.sw    	0(r14),r4	 # SI store
	l.ori   	r6,r6,lo(sqlite3CtypeMap)
	l.lbz   	r4,1(r3)	 # zero_extendqisi2
	l.add   	r4,r4,r6
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,4
	l.sfeqi	r4,0
	l.bf	.L1501	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r2,r2,1
.L1631:
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.add   	r4,r3,r2
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.add   	r4,r4,r7
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,4
	l.sfnei	r4,0
	l.bf	.L1631	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.j     	.L1621	# delay slot filled
	l.addi	r1,r1,12
.L1490:
	l.lbz   	r2,1(r3)	 # zero_extendqisi2
	l.sfnei	r2,61
	l.bnf	.L1613	# delay slot filled
	l.sfnei	r2,62
	l.bnf	.L1614	# delay slot filled
	l.addi  	r3,r0,75	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1489:
	l.addi  	r4,r0,74	 # move immediate I
	l.sw    	0(r14),r4	 # SI store
	l.lbz   	r3,1(r3)	 # zero_extendqisi2
	l.sfnei	r3,61
	l.bf	.L1501	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
.L1488:
	l.lbz   	r2,1(r3)	 # zero_extendqisi2
	l.sfnei	r2,61
	l.bnf	.L1615	# delay slot filled
	l.sfnei	r2,62
	l.bnf	.L1518	# delay slot filled
	l.sfnei	r2,60
	l.bnf	.L1616	# delay slot filled
	l.addi  	r3,r0,77	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1479:
	l.addi  	r3,r0,23	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1477:
	l.addi  	r3,r0,80	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1476:
	l.addi  	r3,r0,88	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1475:
	l.addi  	r4,r3,1
.L1498:
	l.addi  	r2,r0,133	 # move immediate I
	l.sw    	0(r14),r2	 # SI store
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L1562	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L1554	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L1618:
	l.bf	.L1632	# delay slot filled
	l.sflesi	r5,0
	l.movhi  	r8,hi(sqlite3IsAsciiIdChar)
	l.ori   	r8,r8,lo(sqlite3IsAsciiIdChar)
	l.add   	r7,r4,r8
	l.lbs   	r7,-32(r7)	 # extendqisi2_no_sext_mem
	l.sfeqi	r7,0
	l.bnf	.L1545	# delay slot filled
	l.sflesi	r5,0
.L1632:
	l.bnf	.L1617	# delay slot filled
	l.sfnei	r4,40
	l.sfnei	r4,58
.L1638:
	l.bf	.L1553	# delay slot filled
	l.add   	r6,r3,r6
	l.lbz   	r4,1(r6)	 # zero_extendqisi2
	l.sfnei	r4,58
	l.bf	.L1633	# delay slot filled
	l.sfnei	r5,0
	l.addi  	r2,r2,1
.L1547:
	l.addi  	r2,r2,1
	l.add   	r4,r3,r2
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L1553	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L1554:
	l.andi  	r7,r4,128
	l.sfnei	r7,0
	l.bnf	.L1618	# delay slot filled
	l.sflesi	r4,31
.L1545:
	l.j     	.L1547	# delay slot filled
	l.addi  	r5,r5,1
.L1474:
	l.addi  	r4,r3,1
	l.movhi  	r6,hi(sqlite3CtypeMap)
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.ori   	r6,r6,lo(sqlite3CtypeMap)
	l.add   	r5,r5,r6
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.andi  	r5,r5,4
	l.sfnei	r5,0
	l.bnf	.L1498	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r2,r2,1
.L1634:
	l.movhi  	r8,hi(sqlite3CtypeMap)
	l.add   	r4,r3,r2
	l.ori   	r8,r8,lo(sqlite3CtypeMap)
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.add   	r4,r4,r8
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,4
	l.sfnei	r4,0
	l.bf	.L1634	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.addi  	r3,r0,132	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1473:
	l.lbz   	r5,1(r3)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L1562	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.j     	.L1523	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L1521:
	l.addi  	r2,r2,1
	l.add   	r5,r3,r2
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bnf	.L1600	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L1523:
	l.sfne 	r5,r4
	l.bf	.L1521	# delay slot filled
	l.add   	r6,r3,r6
	l.lbz   	r6,1(r6)	 # zero_extendqisi2
	l.sfne 	r6,r4
	l.bf	.L1522	# delay slot filled
	l.sfnei	r5,39
	l.j     	.L1521	# delay slot filled
	l.addi  	r2,r2,1
.L1472:
	l.lbz   	r2,1(r3)	 # zero_extendqisi2
	l.sfeqi	r2,61
	l.bf	.L1635	# delay slot filled
	l.addi  	r3,r0,73	 # move immediate I
.L1555:
	l.addi  	r3,r0,147	 # move immediate I
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1478:
	l.addi  	r3,r0,22	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1527:
	l.addi  	r6,r2,1
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.add   	r5,r3,r6
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.lbz   	r4,0(r5)	 # zero_extendqisi2
	l.add   	r4,r4,r7
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,4
	l.sfeqi	r4,0
	l.bf	.L1571	# delay slot filled
	l.addi  	r4,r2,2
	l.ori   	r2,r6,0	 # move reg to reg
	l.add   	r4,r3,r4
.L1530:
	l.movhi  	r8,hi(sqlite3CtypeMap)
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.ori   	r8,r8,lo(sqlite3CtypeMap)
	l.addi  	r2,r2,1
	l.add   	r5,r5,r8
	l.ori   	r6,r2,0	 # move reg to reg
	l.lbz   	r7,0(r5)	 # zero_extendqisi2
	l.andi  	r7,r7,4
	l.ori   	r5,r4,0	 # move reg to reg
	l.sfnei	r7,0
	l.bf	.L1530	# delay slot filled
	l.addi  	r4,r4,1
.L1529:
	l.addi  	r4,r0,130	 # move immediate I
	l.j     	.L1528	# delay slot filled
	l.sw    	0(r14),r4	 # SI store
.L1553:
	l.sfnei	r5,0
.L1633:
	l.bf	.L1501	# delay slot filled
	l.addi  	r3,r0,147	 # move immediate I
	l.j     	.L1608	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1518:
	l.addi  	r3,r0,73	 # move immediate I
.L1635:
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1519:
	l.addi  	r3,r0,89	 # move immediate I
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1615:
	l.addi  	r3,r0,76	 # move immediate I
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1613:
	l.addi  	r3,r0,78	 # move immediate I
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1611:
	l.lbz   	r4,2(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L1512	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
	l.sfeqi	r4,10
	l.bnf	.L1636	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.j     	.L1622	# delay slot filled
	l.addi  	r3,r0,148	 # move immediate I
.L1619:
	l.bnf	.L1512
	l.nop			# nop delay slot
	l.addi  	r2,r2,1
.L1636:
	l.add   	r4,r3,r2
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bnf	.L1619	# delay slot filled
	l.sfnei	r4,10
	l.j     	.L1622	# delay slot filled
	l.addi  	r3,r0,148	 # move immediate I
.L1612:
	l.lbz   	r4,2(r3)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L1505	# delay slot filled
	l.addi  	r3,r3,3
	l.j     	.L1507	# delay slot filled
	l.addi  	r2,r0,3	 # move immediate I
.L1620:
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sfnei	r4,0
.L1637:
	l.bnf	.L1512	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r2,r2,1
.L1507:
	l.sfeqi	r4,42
	l.bnf	.L1620
	l.nop			# nop delay slot
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sfeqi	r4,47
	l.bnf	.L1637	# delay slot filled
	l.sfnei	r4,0
	l.j     	.L1512	# delay slot filled
	l.addi  	r2,r2,1
.L1614:
	l.addi  	r3,r0,83	 # move immediate I
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1617:
	l.bf	.L1638	# delay slot filled
	l.sfnei	r4,58
.L1584:
	l.addi  	r2,r2,1
	l.add   	r4,r3,r2
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L1600	# delay slot filled
	l.movhi  	r6,hi(sqlite3CtypeMap)
	l.ori   	r6,r6,lo(sqlite3CtypeMap)
	l.add   	r5,r4,r6
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.andi  	r5,r5,1
	l.sfnei	r5,0
	l.bf	.L1581	# delay slot filled
	l.sfnei	r4,41
	l.bf	.L1584
	l.nop			# nop delay slot
.L1581:
	l.sfnei	r4,41
	l.bnf	.L1556
	l.nop			# nop delay slot
	l.j     	.L1601	# delay slot filled
	l.addi  	r3,r0,147	 # move immediate I
.L1522:
	l.bf	.L1524	# delay slot filled
	l.addi  	r3,r0,94	 # move immediate I
	l.addi  	r2,r2,1
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1524:
	l.addi  	r3,r0,26	 # move immediate I
	l.addi  	r2,r2,1
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1616:
	l.addi  	r3,r0,82	 # move immediate I
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.L1571:
	l.j     	.L1529	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L1574:
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L1501	# delay slot filled
	l.addi  	r2,r2,1
.LFE1181:
	.size	sqlite3GetToken, .-sqlite3GetToken
	.align	4
.proc	getTokenNoSpace
	.type	getTokenNoSpace, @function
getTokenNoSpace:
.LFB880:
	l.sw    	-8(r1),r2	 # SI store
.LCFI499:
	l.sw    	-4(r1),r9	 # SI store
.LCFI500:
	l.movhi  	r5,hi(sqlite3CtypeMap)
	l.lbz   	r11,0(r3)	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3CtypeMap)
	l.add   	r2,r11,r5
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
.LCFI501:
	l.bf	.L1640	# delay slot filled
	l.addi  	r1,r1,-8
	l.addi  	r5,r3,1
	l.addi  	r2,r0,0	 # move immediate I
.L1641:
	l.movhi  	r3,hi(sqlite3CtypeMap)
	l.lbz   	r11,0(r5)	 # zero_extendqisi2
	l.ori   	r3,r3,lo(sqlite3CtypeMap)
	l.addi  	r2,r2,1
	l.add   	r6,r11,r3
	l.ori   	r3,r5,0	 # move reg to reg
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.andi  	r6,r6,1
	l.sfnei	r6,0
	l.bf	.L1641	# delay slot filled
	l.addi  	r5,r5,1
.L1640:
	l.sfnei	r11,0
	l.bf	.L1642
	l.nop			# nop delay slot
	l.addi	r1,r1,8
	l.sw    	0(r4),r11	 # SI store
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L1642:
	l.jal   	sqlite3GetToken
	l.nop			# nop delay slot
	l.addi	r1,r1,8
	l.add   	r11,r11,r2
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE880:
	.size	getTokenNoSpace, .-getTokenNoSpace
	.align	4
.proc	identPut
	.type	identPut, @function
identPut:
.LFB882:
	l.sw    	-44(r1),r2	 # SI store
.LCFI502:
	l.sw    	-32(r1),r18	 # SI store
.LCFI503:
	l.sw    	-28(r1),r20	 # SI store
.LCFI504:
	l.sw    	-24(r1),r22	 # SI store
.LCFI505:
	l.sw    	-12(r1),r28	 # SI store
.LCFI506:
	l.sw    	-8(r1),r30	 # SI store
.LCFI507:
	l.sw    	-4(r1),r9	 # SI store
.LCFI508:
	l.sw    	-40(r1),r14	 # SI store
.LCFI509:
	l.sw    	-36(r1),r16	 # SI store
.LCFI510:
	l.sw    	-20(r1),r24	 # SI store
.LCFI511:
	l.sw    	-16(r1),r26	 # SI store
.LCFI512:
	l.ori   	r22,r5,0	 # move reg to reg
	l.lbz   	r24,0(r5)	 # zero_extendqisi2
	l.addi  	r1,r1,-48
.LCFI513:
	l.ori   	r28,r4,0	 # move reg to reg
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r30,r6,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfeqi	r24,0
	l.bf	.L1665	# delay slot filled
	l.lwz   	r2,0(r4)	 # SI load
	l.addi  	r7,r5,1
	l.ori   	r14,r24,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
.L1649:
	l.movhi  	r3,hi(sqlite3CtypeMap)
	l.ori   	r3,r3,lo(sqlite3CtypeMap)
	l.add   	r11,r14,r3
	l.lbz   	r11,0(r11)	 # zero_extendqisi2
	l.andi  	r11,r11,6
	l.sfnei	r11,0
	l.bf	.L1648	# delay slot filled
	l.sfnei	r14,95
	l.bf	.L1647
	l.nop			# nop delay slot
.L1648:
	l.lbz   	r14,0(r7)	 # zero_extendqisi2
	l.ori   	r16,r7,0	 # move reg to reg
	l.addi  	r8,r8,1
	l.sfnei	r14,0
	l.bf	.L1649	# delay slot filled
	l.addi  	r7,r7,1
.L1647:
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.add   	r3,r24,r4
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,4
	l.sfnei	r3,0
	l.bnf	.L1677	# delay slot filled
	l.addi  	r26,r0,1	 # move immediate I
.L1650:
	l.add   	r3,r18,r2
.L1682:
	l.addi  	r4,r0,34	 # movqi: move immediate
.L1684:
	l.addi  	r2,r2,1
	l.sb    	0(r3),r4	    # movqi
	l.lbz   	r24,0(r22)	 # zero_extendqisi2
.L1658:
	l.sfeqi	r24,0
	l.bf	.L1659	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.j     	.L1661	# delay slot filled
	l.addi  	r5,r22,1
.L1660:
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfnei	r6,0
	l.bnf	.L1659	# delay slot filled
	l.addi  	r5,r5,1
.L1661:
	l.add   	r3,r18,r2
	l.sb    	0(r3),r6	    # movqi
	l.lbz   	r3,0(r20)	 # zero_extendqisi2
	l.sfnei	r3,34
	l.bf	.L1660	# delay slot filled
	l.addi  	r2,r2,1
	l.add   	r6,r18,r2
	l.ori   	r20,r5,0	 # move reg to reg
	l.sb    	0(r6),r3	    # movqi
	l.addi  	r2,r2,1
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L1661	# delay slot filled
	l.addi  	r5,r5,1
.L1659:
	l.sfeqi	r26,0
	l.bf	.L1662	# delay slot filled
	l.add   	r3,r18,r2
	l.addi  	r4,r0,34	 # movqi: move immediate
	l.addi  	r2,r2,1
	l.sb    	0(r3),r4	    # movqi
.L1662:
	l.add   	r18,r18,r2
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	0(r18),r3	    # movqi
	l.sw    	0(r28),r2	 # SI store
	l.addi	r1,r1,48
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L1677:
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	keywordCode	# delay slot filled
	l.ori   	r4,r8,0	 # move reg to reg
	l.sfnei	r11,26
	l.bf	.L1682	# delay slot filled
	l.add   	r3,r18,r2
	l.sfnei	r30,0
	l.bf	.L1678	# delay slot filled
	l.sfeqi	r14,0
	l.bf	.L1658	# delay slot filled
	l.ori   	r26,r14,0	 # move reg to reg
	l.j     	.L1684	# delay slot filled
	l.addi  	r4,r0,34	 # movqi: move immediate
.L1678:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	getTokenNoSpace	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L1679	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.addi  	r26,r0,0	 # move immediate I
.L1683:
	l.j     	.L1658	# delay slot filled
	l.lbz   	r24,0(r22)	 # zero_extendqisi2
.L1679:
	l.sfnei	r3,22
	l.bf	.L1682	# delay slot filled
	l.add   	r3,r18,r2
	l.add   	r3,r16,r11
	l.jal   	getTokenNoSpace	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.addi  	r3,r4,-84
	l.sfgtui	r3,1
	l.bnf	.L1680	# delay slot filled
	l.add   	r24,r11,r24
.L1654:
	l.addi  	r4,r4,-129
	l.addi  	r26,r0,1	 # move immediate I
	l.sfgtu 	r4,r26
	l.bf	.L1682	# delay slot filled
	l.add   	r3,r18,r2
	l.add   	r3,r16,r24
	l.jal   	getTokenNoSpace	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.sfnei	r4,25
	l.bnf	.L1681	# delay slot filled
	l.add   	r24,r11,r24
.L1655:
	l.sfnei	r4,23
	l.bf	.L1650	# delay slot filled
	l.addi  	r26,r0,1	 # move immediate I
	l.add   	r3,r16,r24
	l.jal   	getTokenNoSpace	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L1650
	l.nop			# nop delay slot
	l.j     	.L1683	# delay slot filled
	l.addi  	r26,r0,0	 # move immediate I
.L1665:
	l.ori   	r14,r24,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.j     	.L1647	# delay slot filled
	l.ori   	r8,r24,0	 # move reg to reg
.L1680:
	l.add   	r3,r16,r24
	l.jal   	getTokenNoSpace	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.j     	.L1654	# delay slot filled
	l.add   	r24,r24,r11
.L1681:
	l.add   	r3,r16,r24
	l.jal   	getTokenNoSpace	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.addi  	r3,r4,-84
	l.sfgtu 	r3,r26
	l.bf	.L1656	# delay slot filled
	l.add   	r24,r11,r24
	l.add   	r3,r16,r24
	l.jal   	getTokenNoSpace	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.add   	r24,r24,r11
.L1656:
	l.addi  	r4,r4,-129
	l.addi  	r26,r0,1	 # move immediate I
	l.sfgtu 	r4,r26
	l.bf	.L1682	# delay slot filled
	l.add   	r3,r18,r2
	l.add   	r3,r16,r24
	l.jal   	getTokenNoSpace	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.j     	.L1655	# delay slot filled
	l.add   	r24,r11,r24
.LFE882:
	.size	identPut, .-identPut
	.align	4
.proc	setupLookaside
	.type	setupLookaside, @function
setupLookaside:
.LFB1191:
	l.sw    	-28(r1),r2	 # SI store
.LCFI514:
	l.sw    	-24(r1),r14	 # SI store
.LCFI515:
	l.sw    	-16(r1),r18	 # SI store
.LCFI516:
	l.sw    	-12(r1),r20	 # SI store
.LCFI517:
	l.sw    	-4(r1),r9	 # SI store
.LCFI518:
	l.sw    	-20(r1),r16	 # SI store
.LCFI519:
	l.sw    	-8(r1),r22	 # SI store
.LCFI520:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,228(r3)	 # SI load
	l.addi  	r1,r1,-28
.LCFI521:
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r20,r6,0	 # move reg to reg
	l.sfnei	r3,0
	l.bf	.L1686	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
	l.lbz   	r3,227(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L1700	# delay slot filled
	l.sflesi	r14,4
	l.bf	.L1701	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L1688:
	l.xori  	r16,r20,0xffff
	l.sfnei	r3,0
	l.srai  	r16,r16,31
	l.bnf	.L1702	# delay slot filled
	l.and   	r16,r20,r16
.L1690:
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # movhi: move immediate
	l.sw    	240(r2),r3	 # SI store
	l.sw    	236(r2),r3	 # SI store
	l.sh    	224(r2),r4	 # movhi
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # movqi: move immediate
.L1706:
	l.sw    	244(r2),r3	 # SI store
	l.sb    	226(r2),r4	    # movqi
	l.sb    	227(r2),r4	    # movqi
	l.ori   	r11,r3,0	 # move reg to reg
.L1686:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L1702:
	l.sub   	r4,r0,r16
.L1704:
	l.or    	r4,r4,r16
	l.sfgesi	r4,0
	l.bf	.L1690	# delay slot filled
	l.sfnei	r18,0
	l.bnf	.L1703	# delay slot filled
	l.addi  	r4,r0,-8	 # move immediate I
	l.sw    	240(r2),r18	 # SI store
	l.and   	r14,r14,r4
	l.sw    	236(r2),r3	 # SI store
	l.sh    	224(r2),r14	 # movhi
	l.ori   	r20,r18,0	 # move reg to reg
.L1694:
	l.lwz   	r3,236(r2)	 # SI load
	l.ori   	r7,r20,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
.L1696:
	l.sw    	0(r7),r3	 # SI store
	l.addi  	r8,r8,1
	l.ori   	r3,r7,0	 # move reg to reg
	l.sfne 	r8,r16
	l.bf	.L1696	# delay slot filled
	l.add   	r7,r7,r14
	l.addi  	r3,r8,-1
	l.mul   	r8,r14,r8
	l.mul   	r14,r14,r3
	l.sub   	r3,r0,r18
	l.add   	r14,r20,r14
	l.or    	r18,r18,r3
	l.add   	r20,r20,r8
	l.xori  	r18,r18,0xffff
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.srli  	r18,r18,31
	l.sw    	236(r2),r14	 # SI store
	l.sw    	244(r2),r20	 # SI store
	l.sb    	226(r2),r4	    # movqi
	l.sb    	227(r2),r18	    # movqi
	l.j     	.L1686	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L1701:
	l.xori  	r16,r20,0xffff
.L1705:
	l.addi  	r3,r0,1	 # move immediate I
	l.srai  	r16,r16,31
	l.addi  	r14,r0,0	 # move immediate I
	l.sfnei	r3,0
	l.bf	.L1690	# delay slot filled
	l.and   	r16,r20,r16
	l.j     	.L1704	# delay slot filled
	l.sub   	r4,r0,r16
.L1700:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,240(r2)	 # SI load
	l.sflesi	r14,4
	l.bnf	.L1688	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.j     	.L1705	# delay slot filled
	l.xori  	r16,r20,0xffff
.L1703:
	l.movhi  	r22,hi(sqlite3Hooks)
	l.addi  	r14,r14,7
	l.ori   	r22,r22,lo(sqlite3Hooks)
	l.lwz   	r3,0(r22)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L1692	# delay slot filled
	l.and   	r14,r14,r4
	l.jalr  	r3
	l.nop			# nop delay slot
.L1692:
	l.jal   	sqlite3Malloc	# delay slot filled
	l.mul   	r3,r14,r16
	l.lwz   	r3,4(r22)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L1693	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.jalr  	r3
	l.nop			# nop delay slot
.L1693:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	240(r2),r20	 # SI store
	l.sw    	236(r2),r3	 # SI store
	l.sfeq 	r20,r3
	l.bnf	.L1694	# delay slot filled
	l.sh    	224(r2),r14	 # movhi
	l.j     	.L1706	# delay slot filled
	l.addi  	r4,r0,0	 # movqi: move immediate
.LFE1191:
	.size	setupLookaside, .-setupLookaside
	.align	4
.proc	nocaseCollatingFunc
	.type	nocaseCollatingFunc, @function
nocaseCollatingFunc:
.LFB1196:
	l.sw    	-12(r1),r2	 # SI store
.LCFI522:
	l.sw    	-8(r1),r14	 # SI store
.LCFI523:
	l.sw    	-4(r1),r9	 # SI store
.LCFI524:
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r3,r5,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI525:
	l.ori   	r2,r6,0	 # move reg to reg
	l.ori   	r4,r7,0	 # move reg to reg
	l.sfles 	r6,r14
	l.bf	.L1708	# delay slot filled
	l.ori   	r5,r6,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
.L1708:
	l.jal   	sqlite3StrNICmp
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L1709
	l.nop			# nop delay slot
	l.sub   	r11,r14,r2
.L1709:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1196:
	.size	nocaseCollatingFunc, .-nocaseCollatingFunc
	.align	4
.proc	sqlite3CloseSavepoints
	.type	sqlite3CloseSavepoints, @function
sqlite3CloseSavepoints:
.LFB1200:
	l.sw    	-8(r1),r2	 # SI store
.LCFI526:
	l.sw    	-4(r1),r9	 # SI store
.LCFI527:
	l.lwz   	r4,468(r3)	 # SI load
	l.addi  	r1,r1,-8
.LCFI528:
	l.sfeqi	r4,0
	l.bf	.L1711	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L1713:
	l.lwz   	r3,4(r4)	 # SI load
	l.sw    	468(r2),r3	 # SI store
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,468(r2)	 # SI load
	l.sfnei	r4,0
	l.bf	.L1713
	l.nop			# nop delay slot
.L1711:
	l.addi  	r3,r0,0	 # move immediate I
	l.sb    	480(r2),r3	    # movqi
	l.sw    	472(r2),r3	 # SI store
	l.sw    	476(r2),r3	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1200:
	.size	sqlite3CloseSavepoints, .-sqlite3CloseSavepoints
	.align	4
.proc	sqliteDefaultBusyCallback
	.type	sqliteDefaultBusyCallback, @function
sqliteDefaultBusyCallback:
.LFB1204:
	l.addi  	r5,r0,1000	 # move immediate I
	l.addi  	r4,r4,1
	l.sw    	-4(r1),r9	 # SI store
.LCFI529:
	l.mul   	r4,r4,r5
	l.lwz   	r5,416(r3)	 # SI load
	l.addi  	r1,r1,-4
.LCFI530:
	l.sflts 	r5,r4
	l.bf	.L1716	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r3,0(r3)	 # SI load
	l.movhi 	r4,hi(983040)	 # move immediate M
	l.lwz   	r11,60(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r4,16960
	l.addi  	r11,r0,1	 # move immediate I
.L1716:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE1204:
	.size	sqliteDefaultBusyCallback, .-sqliteDefaultBusyCallback
	.align	4
.proc	sqlite3MemMalloc
	.type	sqlite3MemMalloc, @function
sqlite3MemMalloc:
.LFB59:
	l.sw    	-8(r1),r2	 # SI store
.LCFI531:
	l.addi  	r2,r3,7
	l.addi  	r3,r0,-8	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI532:
	l.and   	r2,r2,r3
	l.addi  	r1,r1,-8
.LCFI533:
	l.jal   	malloc	# delay slot filled
	l.addi  	r3,r2,8
	l.sfeqi	r11,0
	l.bf	.L1719	# delay slot filled
	l.srai  	r3,r2,31
	l.sw    	4(r11),r2	 # SI store
	l.sw    	0(r11),r3	 # SI store
	l.addi  	r11,r11,8
.L1719:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE59:
	.size	sqlite3MemMalloc, .-sqlite3MemMalloc
	.align	4
.proc	sqlite3MemFree
	.type	sqlite3MemFree, @function
sqlite3MemFree:
.LFB60:
	l.sw    	-4(r1),r9	 # SI store
.LCFI534:
	l.addi  	r1,r1,-4
.LCFI535:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	free	# delay slot filled	# sibcall s
	l.addi  	r3,r3,-8
.LFE60:
	.size	sqlite3MemFree, .-sqlite3MemFree
	.align	4
.proc	sqlite3StrAccumAppend
	.type	sqlite3StrAccumAppend, @function
sqlite3StrAccumAppend:
.LFB101:
	l.sw    	-20(r1),r2	 # SI store
.LCFI536:
	l.sw    	-16(r1),r14	 # SI store
.LCFI537:
	l.sw    	-12(r1),r16	 # SI store
.LCFI538:
	l.sw    	-4(r1),r9	 # SI store
.LCFI539:
	l.sw    	-8(r1),r18	 # SI store
.LCFI540:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r16,r4,0	 # move reg to reg
	l.lbz   	r4,24(r3)	 # zero_extendqisi2
	l.lbz   	r3,26(r3)	 # zero_extendqisi2
	l.or    	r3,r4,r3
	l.addi  	r1,r1,-20
.LCFI541:
	l.sfnei	r3,0
	l.bf	.L1721	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfltsi	r5,0
	l.bf	.L1723	# delay slot filled
	l.sub   	r3,r0,r14
	l.or    	r3,r3,r14
	l.xori  	r3,r3,0xffff
	l.srli  	r3,r3,31
	l.sfnei	r3,0
	l.bf	.L1721
	l.nop			# nop delay slot
.L1740:
	l.sub   	r4,r0,r16
	l.or    	r4,r16,r4
	l.sfgesi	r4,0
	l.bf	.L1721
	l.nop			# nop delay slot
	l.lwz   	r4,12(r2)	 # SI load
	l.lwz   	r5,16(r2)	 # SI load
	l.add   	r6,r14,r4
	l.sflts 	r6,r5
	l.bf	.L1727
	l.nop			# nop delay slot
	l.lbz   	r6,25(r2)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bnf	.L1738	# delay slot filled
	l.srai  	r8,r4,31
	l.addi  	r5,r14,1
	l.add   	r4,r5,r4
	l.srai  	r11,r5,31
	l.sfltu 	r4,r5
	l.bf	.L1730	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r6,r3,0	 # move reg to reg
.L1730:
	l.lwz   	r7,20(r2)	 # SI load
	l.add   	r5,r11,r8
	l.srai  	r3,r7,31
	l.add   	r5,r6,r5
	l.sfgts 	r5,r3
	l.bf	.L1735	# delay slot filled
	l.sfne 	r5,r3
	l.bnf	.L1739	# delay slot filled
	l.sfgtu 	r4,r7
.L1731:
	l.sw    	16(r2),r4	 # SI store
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L1733	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r4,8(r2)	 # SI load
	l.lwz   	r5,12(r2)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	sqlite3StrAccumReset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,12(r2)	 # SI load
	l.j     	.L1729	# delay slot filled
	l.sw    	8(r2),r18	 # SI store
.L1738:
	l.addi  	r14,r5,-1
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sub   	r14,r14,r4
	l.sflesi	r14,0
	l.bf	.L1721	# delay slot filled
	l.sb    	26(r2),r3	    # movqi
.L1727:
	l.lwz   	r18,8(r2)	 # SI load
.L1729:
	l.add   	r3,r18,r4
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,12(r2)	 # SI load
	l.add   	r14,r3,r14
	l.sw    	12(r2),r14	 # SI store
.L1721:
	l.addi	r1,r1,20
.L1741:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L1723:
	l.lbs   	r3,0(r16)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L1721	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
	l.addi  	r14,r14,1
.L1742:
	l.lbs   	r3,0(r14)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L1742	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r14,r14,r16
	l.ori   	r3,r3,65535
	l.and   	r14,r14,r3
	l.sub   	r3,r0,r14
	l.or    	r3,r3,r14
	l.xori  	r3,r3,0xffff
	l.srli  	r3,r3,31
	l.sfnei	r3,0
	l.bnf	.L1740
	l.nop			# nop delay slot
	l.j     	.L1741	# delay slot filled
	l.addi	r1,r1,20
.L1739:
	l.bnf	.L1731
	l.nop			# nop delay slot
.L1735:
	l.jal   	sqlite3StrAccumReset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.j     	.L1721	# delay slot filled
	l.sb    	26(r2),r3	    # movqi
.L1733:
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	24(r2),r3	    # movqi
	l.addi	r1,r1,20
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3StrAccumReset	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.LFE101:
	.size	sqlite3StrAccumAppend, .-sqlite3StrAccumAppend
	.align	4
.proc	appendSpace
	.type	appendSpace, @function
appendSpace:
.LFB99:
	l.sw    	-12(r1),r2	 # SI store
.LCFI542:
	l.sw    	-8(r1),r14	 # SI store
.LCFI543:
	l.sw    	-4(r1),r9	 # SI store
.LCFI544:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI545:
	l.sflesi	r4,28
	l.bf	.L1744	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.movhi  	r4,hi(zSpaces.6817)
.L1749:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(zSpaces.6817)
	l.addi  	r5,r0,29	 # move immediate I
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.addi  	r2,r2,-29
	l.sfgtsi	r2,28
	l.bf	.L1749	# delay slot filled
	l.movhi  	r4,hi(zSpaces.6817)
.L1744:
	l.sflesi	r2,0
	l.bf	.L1743	# delay slot filled
	l.movhi  	r4,hi(zSpaces.6817)
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(zSpaces.6817)
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3StrAccumAppend	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L1743:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE99:
	.size	appendSpace, .-appendSpace
	.section	.rodata.str1.1
.LC23:
	.string	"-Inf"
.LC24:
	.string	"+Inf"
.LC25:
	.string	"Inf"
.LC26:
	.string	"(NULL)"
.LC27:
	.string	"NULL"
.LC28:
	.string	"NaN"
.LC29:
	.string	"%"
	.global __umoddi3
	.global __udivdi3
	.global __ltdf2
	.global __gtdf2
	.global __gedf2
.LC40:
	.string	"."
	.section	.rodata
.LC31:
	.string	"-x0"
	.string	"X0"
	.section	.rodata.str1.1
.LC30:
	.string	"thstndrd"
	.section	.rodata
	.align	4
.LC32:
	.long	0
	.long	0
	.align	4
.LC33:
	.long	1069128089
	.long	2576980378
	.align	4
.LC34:
	.long	1184086197
	.long	3037031959
	.align	4
.LC35:
	.long	961148451
	.long	3584599859
	.align	4
.LC36:
	.long	1100470148
	.long	0
	.align	4
.LC37:
	.long	1044740494
	.long	3794832442
	.align	4
.LC38:
	.long	1076101120
	.long	0
	.align	4
.LC39:
	.long	1072693248
	.long	0
	.section .text
	.align	4
.proc	sqlite3VXPrintf
	.type	sqlite3VXPrintf, @function
sqlite3VXPrintf:
.LFB100:
	l.sw    	-44(r1),r2	 # SI store
.LCFI546:
	l.sw    	-16(r1),r26	 # SI store
.LCFI547:
	l.sw    	-4(r1),r9	 # SI store
.LCFI548:
	l.sw    	-40(r1),r14	 # SI store
.LCFI549:
	l.sw    	-36(r1),r16	 # SI store
.LCFI550:
	l.sw    	-32(r1),r18	 # SI store
.LCFI551:
	l.sw    	-28(r1),r20	 # SI store
.LCFI552:
	l.sw    	-24(r1),r22	 # SI store
.LCFI553:
	l.sw    	-20(r1),r24	 # SI store
.LCFI554:
	l.sw    	-12(r1),r28	 # SI store
.LCFI555:
	l.sw    	-8(r1),r30	 # SI store
.LCFI556:
	l.addi  	r1,r1,-472
.LCFI557:
	l.ori   	r2,r5,0	 # move reg to reg
	l.sw    	44(r1),r3	 # SI store
	l.ori   	r26,r6,0	 # move reg to reg
	l.lbs   	r5,0(r5)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L1750	# delay slot filled
	l.sw    	48(r1),r4	 # SI store
	l.addi  	r3,r1,60
	l.addi  	r4,r1,59
	l.addi  	r6,r1,409
	l.addi  	r14,r0,0	 # move immediate I
	l.sw    	4(r1),r3	 # SI store
	l.sw    	0(r1),r4	 # SI store
	l.sw    	8(r1),r6	 # SI store
	l.sfeqi	r5,37
.L2061:
	l.bf	.L1752	# delay slot filled
	l.addi  	r6,r2,1
	l.lbs   	r4,0(r6)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,37
	l.bf	.L1914	# delay slot filled
	l.sfeqi	r4,0
	l.bf	.L1915	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L2097	# delay slot filled
	l.addi  	r6,r6,1
.L2015:
	l.sfnei	r3,0
	l.bnf	.L2053	# delay slot filled
	l.lwz   	r3,44(r1)	 # SI load
	l.addi  	r6,r6,1
.L2097:
	l.lbs   	r3,0(r6)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,37
	l.bnf	.L2015	# delay slot filled
	l.addi  	r5,r5,1
.L1753:
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r3,44(r1)	 # SI load
	l.ori   	r14,r2,0	 # move reg to reg
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L1752:
	l.addi  	r2,r2,1
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bnf	.L2016	# delay slot filled
	l.addi  	r28,r0,0	 # move immediate I
	l.ori   	r30,r28,0	 # move reg to reg
	l.sw    	36(r1),r28	 # SI store
	l.ori   	r24,r28,0	 # move reg to reg
	l.ori   	r22,r28,0	 # move reg to reg
	l.sw    	28(r1),r28	 # SI store
	l.addi  	r3,r5,-32
.L2058:
	l.sfgtui	r3,16
	l.bnf	.L2017	# delay slot filled
	l.movhi  	r7,hi(.L1764)
.L1757:
	l.sfeqi	r5,42
	l.bnf	.L2018	# delay slot filled
	l.addi  	r6,r5,-48
	l.lwz   	r4,0(r26)	 # SI load
	l.sfgesi	r4,0
	l.bnf	.L2019	# delay slot filled
	l.addi  	r26,r26,4
.L1770:
	l.addi  	r2,r2,1
	l.sw    	16(r1),r4	 # SI store
	l.sflesi	r4,340
	l.bf	.L1769	# delay slot filled
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.addi  	r6,r0,340	 # move immediate I
	l.sw    	16(r1),r6	 # SI store
.L1769:
	l.addi  	r3,r0,-1	 # move immediate I
	l.sfnei	r5,46
	l.bf	.L1774	# delay slot filled
	l.sw    	12(r1),r3	 # SI store
	l.addi  	r2,r2,1
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,42
	l.bf	.L1775	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r6,r5,-48
	l.sfleui	r6,9
	l.bnf	.L1774	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
	l.lwz   	r3,12(r1)	 # SI load
	l.slli  	r4,r3,3
.L2054:
	l.addi  	r2,r2,1
	l.add   	r3,r3,r3
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.add   	r3,r3,r4
	l.add   	r3,r6,r3
	l.addi  	r6,r5,-48
	l.sfleui	r6,9
	l.bf	.L2054	# delay slot filled
	l.slli  	r4,r3,3
	l.sw    	12(r1),r3	 # SI store
.L1774:
	l.sfnei	r5,108
	l.bf	.L2055	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L2035:
	l.addi  	r2,r2,1
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,108
	l.bnf	.L2020
	l.nop			# nop delay slot
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r18,r0,1	 # move immediate I
.L1778:
	l.movhi  	r6,hi(fmtinfo)
	l.addi  	r7,r0,0	 # move immediate I
	l.j     	.L1782	# delay slot filled
	l.ori   	r6,r6,lo(fmtinfo)
.L1779:
	l.sfnei	r7,23
	l.bnf	.L2021	# delay slot filled
	l.addi  	r6,r6,8
.L1782:
	l.lbs   	r3,0(r6)	 # extendqisi2_no_sext_mem
	l.sfne 	r3,r5
	l.bf	.L1779	# delay slot filled
	l.addi  	r7,r7,1
	l.addi  	r7,r7,-1
	l.lwz   	r5,48(r1)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L2002	# delay slot filled
	l.movhi  	r6,hi(fmtinfo)
	l.slli  	r5,r7,3
	l.movhi  	r7,hi(fmtinfo)
.L2073:
	l.ori   	r7,r7,lo(fmtinfo)
	l.add   	r7,r5,r7
	l.lbz   	r3,3(r7)	 # zero_extendqisi2
	l.sw    	40(r1),r7	 # SI store
	l.sw    	32(r1),r3	 # SI store
.L1781:
	l.lwz   	r6,12(r1)	 # SI load
	l.sflesi	r6,310
	l.bf	.L2056	# delay slot filled
	l.lwz   	r4,32(r1)	 # SI load
	l.lwz   	r7,40(r1)	 # SI load
	l.lbz   	r8,2(r7)	 # zero_extendqisi2
	l.andi  	r8,r8,4
	l.sfeqi	r8,0
	l.bnf	.L2057	# delay slot filled
	l.sfgtui	r4,16
	l.addi  	r3,r0,310	 # move immediate I
	l.sw    	12(r1),r3	 # SI store
	l.lwz   	r4,32(r1)	 # SI load
.L2056:
	l.sfgtui	r4,16
.L2057:
	l.bnf	.L2022	# delay slot filled
	l.movhi  	r5,hi(.L1794)
.L1750:
	l.addi	r1,r1,472
.L2049:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L2017:
	l.slli  	r3,r3,2
	l.ori   	r7,r7,lo(.L1764)
	l.add   	r3,r3,r7
	l.lwz   	r3,0(r3)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L1764:
	.word	.L1758
	.word	.L1759
	.word	.L1757
	.word	.L1760
	.word	.L1757
	.word	.L1757
	.word	.L1757
	.word	.L1757
	.word	.L1757
	.word	.L1757
	.word	.L1757
	.word	.L1761
	.word	.L1757
	.word	.L1916
	.word	.L1757
	.word	.L1757
	.word	.L1763
	.section .text
.L1763:
	l.addi  	r28,r0,1	 # move immediate I
.L1762:
	l.addi  	r2,r2,1
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L2058	# delay slot filled
	l.addi  	r3,r5,-32
	l.addi  	r6,r0,-1	 # move immediate I
	l.sw    	16(r1),r5	 # SI store
	l.sw    	12(r1),r6	 # SI store
	l.ori   	r11,r5,0	 # move reg to reg
	l.j     	.L1778	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
.L1916:
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L1762	# delay slot filled
	l.sw    	28(r1),r4	 # SI store
.L1761:
	l.j     	.L1762	# delay slot filled
	l.addi  	r22,r0,1	 # move immediate I
.L1760:
	l.addi  	r3,r0,1	 # move immediate I
	l.j     	.L1762	# delay slot filled
	l.sw    	36(r1),r3	 # SI store
.L1759:
	l.j     	.L1762	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
.L1758:
	l.j     	.L1762	# delay slot filled
	l.addi  	r24,r0,1	 # move immediate I
.L2022:
	l.slli  	r8,r4,2
	l.ori   	r5,r5,lo(.L1794)
	l.add   	r8,r8,r5
	l.lwz   	r8,0(r8)	 # SI load
	l.jr    	r8
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L1794:
	.word	.L1750
	.word	.L1793
	.word	.L1785
	.word	.L1785
	.word	.L1785
	.word	.L1786
	.word	.L1787
	.word	.L1787
	.word	.L1788
	.word	.L1789
	.word	.L1790
	.word	.L1790
	.word	.L1791
	.word	.L1792
	.word	.L1921
	.word	.L1790
	.word	.L1793
	.section .text
.L1921:
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r18,r0,1	 # move immediate I
.L1793:
	l.lwz   	r6,40(r1)	 # SI load
	l.lbz   	r30,2(r6)	 # zero_extendqisi2
	l.andi  	r30,r30,1
	l.sfeqi	r30,0
	l.bf	.L1795	# delay slot filled
	l.sfeqi	r11,0
	l.bnf	.L2023
	l.nop			# nop delay slot
	l.lwz   	r20,0(r26)	 # SI load
	l.srai  	r18,r20,31
	l.sfltsi	r18,0
	l.bf	.L1960	# delay slot filled
	l.addi  	r26,r26,4
.L2036:
	l.sfnei	r22,0
	l.bf	.L1802	# delay slot filled
	l.addi  	r30,r0,43	 # move immediate I
	l.sfeqi	r24,0
	l.bf	.L1802	# delay slot filled
	l.ori   	r30,r24,0	 # move reg to reg
	l.j     	.L1802	# delay slot filled
	l.addi  	r30,r0,32	 # move immediate I
.L1792:
	l.addi  	r4,r26,4
	l.lwz   	r22,0(r26)	 # SI load
	l.lwz   	r20,0(r4)	 # SI load
	l.add   	r16,r20,r20
	l.add   	r4,r16,r20
	l.slli  	r5,r4,4
	l.add   	r4,r4,r5
	l.add   	r4,r4,r20
	l.add   	r4,r22,r4
	l.lwz   	r4,4(r4)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L1907	# delay slot filled
	l.addi  	r26,r26,8
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.lwz   	r3,44(r1)	 # SI load
	l.movhi  	r4,hi(.LC40)
	l.lwz   	r3,44(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC40)
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L1907:
	l.add   	r4,r16,r20
	l.addi  	r18,r0,0	 # move immediate I
	l.slli  	r6,r4,4
	l.lwz   	r3,44(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.add   	r6,r4,r6
	l.sw    	16(r1),r18	 # SI store
	l.add   	r20,r6,r20
	l.ori   	r16,r18,0	 # move reg to reg
	l.add   	r22,r22,r20
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.lwz   	r4,8(r22)	 # SI load
	l.j     	.L2048	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
.L1791:
	l.lwz   	r4,0(r26)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L1959	# delay slot filled
	l.addi  	r26,r26,4
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,4(r4)	 # SI load
	l.ori   	r6,r6,65535
	l.addi  	r18,r0,0	 # move immediate I
	l.lwz   	r3,44(r1)	 # SI load
	l.lwz   	r4,0(r4)	 # SI load
	l.and   	r5,r5,r6
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.ori   	r16,r18,0	 # move reg to reg
	l.j     	.L1818	# delay slot filled
	l.sw    	16(r1),r18	 # SI store
.L1788:
	l.addi  	r3,r0,37	 # movqi: move immediate
	l.addi  	r18,r0,0	 # move immediate I
	l.sb    	60(r1),r3	    # movqi
	l.addi  	r16,r0,1	 # move immediate I
	l.addi  	r14,r1,60
.L1818:
	l.lwz   	r7,28(r1)	 # SI load
.L2048:
	l.sfnei	r7,0
	l.bf	.L2059	# delay slot filled
	l.sflesi	r16,0
.L1913:
	l.lwz   	r3,16(r1)	 # SI load
	l.sub   	r5,r3,r16
	l.sflesi	r5,0
	l.bf	.L1908	# delay slot filled
	l.lwz   	r3,44(r1)	 # SI load
	l.jal   	appendSpace	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
.L1908:
	l.sflesi	r16,0
.L2059:
	l.bf	.L1909	# delay slot filled
	l.lwz   	r3,44(r1)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
.L1909:
	l.lwz   	r4,28(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2060	# delay slot filled
	l.sfeqi	r18,0
	l.lwz   	r5,16(r1)	 # SI load
	l.sub   	r4,r5,r16
	l.sflesi	r4,0
	l.bf	.L2060	# delay slot filled
	l.sfeqi	r18,0
	l.jal   	appendSpace	# delay slot filled
	l.lwz   	r3,44(r1)	 # SI load
	l.sfeqi	r18,0
.L2060:
	l.bf	.L1911
	l.nop			# nop delay slot
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L1911:
	l.addi  	r2,r2,1
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L2061	# delay slot filled
	l.sfeqi	r5,37
	l.j     	.L2049	# delay slot filled
	l.addi	r1,r1,472
.L1787:
	l.lwz   	r14,0(r26)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L1949	# delay slot filled
	l.addi  	r26,r26,4
	l.lwz   	r4,32(r1)	 # SI load
	l.sfeqi	r4,7
	l.bf	.L1889	# delay slot filled
	l.ori   	r18,r14,0	 # move reg to reg
	l.addi  	r18,r0,0	 # move immediate I
.L1889:
	l.lwz   	r5,12(r1)	 # SI load
	l.sfeqi	r5,-1
	l.bf	.L1890
	l.nop			# nop delay slot
.L2045:
	l.sflesi	r5,0
	l.bf	.L1818	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.lbs   	r5,0(r14)	 # extendqisi2_no_sext_mem
	l.addi  	r16,r0,0	 # move immediate I
	l.sfne 	r5,r16
	l.bnf	.L1818	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.j     	.L2098	# delay slot filled
	l.addi  	r16,r16,1
.L2024:
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bnf	.L2048	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
	l.addi  	r16,r16,1
.L2098:
	l.sfles 	r4,r16
	l.bnf	.L2024	# delay slot filled
	l.add   	r3,r14,r16
	l.j     	.L2048	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
.L1786:
	l.lwz   	r7,44(r1)	 # SI load
	l.lwz   	r4,0(r26)	 # SI load
	l.lwz   	r5,12(r7)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
	l.sw    	0(r4),r5	 # SI store
	l.addi  	r26,r26,4
	l.sw    	16(r1),r18	 # SI store
	l.j     	.L1818	# delay slot filled
	l.ori   	r16,r18,0	 # move reg to reg
.L1790:
	l.lwz   	r7,32(r1)	 # SI load
	l.sfnei	r7,15
	l.bnf	.L2025	# delay slot filled
	l.addi  	r20,r0,39	 # move immediate I
	l.lwz   	r22,0(r26)	 # SI load
	l.sub   	r8,r0,r22
	l.or    	r8,r22,r8
	l.xori  	r8,r8,0xffff
	l.srli  	r8,r8,31
	l.sfeqi	r8,0
	l.bnf	.L2026
	l.nop			# nop delay slot
.L1897:
	l.lbs   	r6,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r6,0
	l.bf	.L1955
	l.nop			# nop delay slot
	l.addi  	r7,r0,0	 # move immediate I
	l.j     	.L1900	# delay slot filled
	l.ori   	r5,r7,0	 # move reg to reg
.L1899:
	l.addi  	r5,r5,1
	l.add   	r3,r22,r5
	l.lbs   	r6,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bnf	.L2062	# delay slot filled
	l.lwz   	r4,32(r1)	 # SI load
.L1900:
	l.sfne 	r20,r6
	l.bf	.L1899
	l.nop			# nop delay slot
	l.addi  	r5,r5,1
	l.add   	r3,r22,r5
	l.lbs   	r6,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L1900	# delay slot filled
	l.addi  	r7,r7,1
.L1898:
	l.lwz   	r4,32(r1)	 # SI load
.L2062:
	l.xori  	r8,r8,1
	l.xori  	r24,r4,11
	l.addi  	r24,r24,-1
	l.srli  	r24,r24,31
	l.and   	r24,r24,r8
	l.add   	r6,r24,r24
	l.addi  	r6,r6,1
	l.add   	r5,r6,r5
	l.add   	r7,r5,r7
	l.sflesi	r7,350
	l.bnf	.L2027	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.addi  	r14,r1,60
.L1901:
	l.sfeqi	r24,0
	l.bf	.L1902	# delay slot filled
	l.ori   	r16,r24,0	 # move reg to reg
	l.sb    	0(r14),r20	    # movqi
	l.addi  	r16,r0,1	 # move immediate I
.L1902:
	l.lbs   	r5,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L2063	# delay slot filled
	l.sfeqi	r24,0
	l.j     	.L1905	# delay slot filled
	l.addi  	r6,r22,1
.L1904:
	l.lbs   	r5,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bnf	.L1903	# delay slot filled
	l.addi  	r6,r6,1
.L1905:
	l.add   	r3,r14,r16
	l.sfne 	r20,r5
	l.sb    	0(r3),r5	    # movqi
	l.bf	.L1904	# delay slot filled
	l.addi  	r16,r16,1
	l.add   	r3,r14,r16
	l.addi  	r16,r16,1
	l.sb    	0(r3),r20	    # movqi
	l.lbs   	r5,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L1905	# delay slot filled
	l.addi  	r6,r6,1
.L1903:
	l.sfeqi	r24,0
.L2063:
	l.bf	.L2064	# delay slot filled
	l.add   	r5,r14,r16
	l.addi  	r16,r16,1
	l.sb    	0(r5),r20	    # movqi
	l.add   	r5,r14,r16
.L2064:
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.addi  	r26,r26,4
	l.j     	.L1818	# delay slot filled
	l.sb    	0(r5),r7	    # movqi
.L1789:
	l.lbs   	r6,3(r26)	 # extendqisi2_no_sext_mem
	l.lwz   	r4,12(r1)	 # SI load
	l.sb    	60(r1),r6	    # movqi
	l.sfeqi	r4,-1
	l.bf	.L1947	# delay slot filled
	l.addi  	r26,r26,4
	l.sflesi	r4,1
	l.bf	.L1948	# delay slot filled
	l.addi  	r3,r1,60
	l.addi  	r5,r1,61
	l.add   	r7,r3,r4
.L1888:
	l.sb    	0(r5),r6	    # movqi
	l.addi  	r5,r5,1
	l.sfne 	r5,r7
	l.bf	.L1888
	l.nop			# nop delay slot
.L1948:
	l.lwz   	r16,12(r1)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
	l.j     	.L1818	# delay slot filled
	l.addi  	r14,r1,60
.L1785:
	l.addi  	r5,r26,8
		l.lwz   	r6, 0(r26)
		l.lwz   	r7, 4(r26)
	l.sw    	56(r1),r5	 # SI store
		l.sw    	20(r1), r6
		l.sw    	20+4(r1), r7
	l.lwz   	r7,12(r1)	 # SI load
	l.sfeqi	r7,-1
	l.bf	.L1928	# delay slot filled
	l.sfgtsi	r7,165
	l.bnf	.L1819	# delay slot filled
	l.addi  	r5,r0,165	 # move immediate I
	l.addi  	r18,r0,1	 # move immediate I
	l.sw    	12(r1),r5	 # SI store
.L1820:
	l.movhi  	r7,hi(.LC32)
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r7,r7,lo(.LC32)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bnf	.L2005	# delay slot filled
	l.addi  	r6,r0,43	 # move immediate I
	l.lwz   	r3,20(r1)	 # SI load
	l.movhi 	r4,hi(-2147483648)	 # move immediate M
	l.lwz   	r6,24(r1)	 # SI load
	l.add   	r8,r3,r4
	l.addi  	r5,r0,45	 # move immediate I
	l.ori   	r13,r8,0	 # move reg to reg
	l.ori   	r14,r6,0	 # move reg to reg
	l.sw    	52(r1),r5	 # SI store
		l.sw    	20(r1), r13
		l.sw    	20+4(r1), r14
.L1823:
	l.lwz   	r3,32(r1)	 # SI load
	l.sfeqi	r18,0
	l.xori  	r8,r3,4
	l.addi  	r8,r8,-1
	l.bf	.L1824	# delay slot filled
	l.srli  	r26,r8,31
	l.sfeqi	r26,0
	l.bnf	.L2028	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
.L1824:
	l.lwz   	r5,12(r1)	 # SI load
	l.sflesi	r5,0
	l.bf	.L1932	# delay slot filled
	l.movhi 	r20,hi(1071644672)	 # move immediate M
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r11,r20,0	 # move reg to reg
	l.ori   	r12,r16,0	 # move reg to reg
	l.movhi  	r7,hi(.LC33)
.L2065:
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC33)
	l.ori   	r4,r12,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r18,r18,-1
	l.sfnei	r18,0
	l.bf	.L2065	# delay slot filled
	l.movhi  	r7,hi(.LC33)
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r16,r12,0	 # move reg to reg
.L1825:
	l.lwz   	r3,32(r1)	 # SI load
	l.sfnei	r3,2
	l.bnf	.L2029	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
.L1827:
		l.lwz   	r4, 20(r1)
		l.lwz   	r5, 20+4(r1)
		l.sw    	420(r1), r4
		l.sw    	420+4(r1), r5
		l.lwz   	r14, 420(r1)
		l.lwz   	r15, 420+4(r1)
		l.sw    	412(r1), r14
		l.sw    	412+4(r1), r15
		l.lwz   	r14, 420(r1)
		l.lwz   	r15, 420+4(r1)
		l.lwz   	r5, 412(r1)
		l.lwz   	r6, 412+4(r1)
		l.or    	r3, r14, r0
		l.or    	r4, r15, r0
	l.jal   	__nedf2
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L1933	# delay slot filled
	l.movhi  	r7,hi(.LC32)
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r7,r7,lo(.LC32)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__gtdf2	# delay slot filled
	l.addi  	r22,r0,0	 # move immediate I
	l.sfgtsi	r11,0
	l.bnf	.L2066	# delay slot filled
	l.lwz   	r5,32(r1)	 # SI load
	l.movhi  	r18,hi(.LC34)
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r18,r18,lo(.LC34)
		l.lwz   	r5, 0(r18)
		l.lwz   	r6, 4(r18)
	l.jal   	__gedf2
	l.nop			# nop delay slot
	l.xori  	r6,r11,0xffff
	l.srli  	r6,r6,31
	l.sfeqi	r6,0
	l.bf	.L1935	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L1833	# delay slot filled
	l.addi  	r22,r0,0	 # move immediate I
.L2030:
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
		l.lwz   	r5, 0(r18)
		l.lwz   	r6, 4(r18)
	l.jal   	__gedf2
	l.nop			# nop delay slot
	l.sfgesi	r11,0
	l.bnf	.L1830
	l.nop			# nop delay slot
.L1833:
	l.movhi  	r7,hi(.LC35)
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r7,r7,lo(.LC35)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r22,r22,32
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
		l.sw    	20(r1), r3
		l.sw    	20+4(r1), r4
	l.sflesi	r22,350
	l.bf	.L1832	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.addi  	r5,r0,0	 # movqi: move immediate
.L1832:
	l.andi  	r14,r5,0xff	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bnf	.L2030
	l.nop			# nop delay slot
.L1830:
	l.movhi  	r18,hi(.LC36)
	l.movhi  	r24,hi(.LC37)
	l.ori   	r18,r18,lo(.LC36)
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
		l.lwz   	r5, 0(r18)
		l.lwz   	r6, 4(r18)
	l.jal   	__gedf2	# delay slot filled
	l.ori   	r24,r24,lo(.LC37)
	l.sfltsi	r11,0
	l.bf	.L1836	# delay slot filled
	l.sfeqi	r14,0
	l.bnf	.L1839	# delay slot filled
	l.movhi  	r7,hi(.LC38)
	l.j     	.L2050
	l.nop			# nop delay slot
.L2031:
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
		l.lwz   	r5, 0(r18)
		l.lwz   	r6, 4(r18)
	l.jal   	__gedf2
	l.nop			# nop delay slot
	l.sfgesi	r11,0
	l.bnf	.L2050	# delay slot filled
	l.movhi  	r7,hi(.LC38)
.L1839:
	l.movhi  	r7,hi(.LC37)
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r7,r7,lo(.LC37)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r22,r22,8
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
		l.sw    	20(r1), r3
		l.sw    	20+4(r1), r4
	l.sflesi	r22,350
	l.bf	.L1838	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.addi  	r5,r0,0	 # movqi: move immediate
.L1838:
	l.andi  	r14,r5,0xff	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bnf	.L2031
	l.nop			# nop delay slot
.L1836:
	l.movhi  	r7,hi(.LC38)
.L2050:
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r7,r7,lo(.LC38)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__gedf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bf	.L1842	# delay slot filled
	l.sfeqi	r14,0
	l.bnf	.L2067	# delay slot filled
	l.movhi  	r7,hi(.LC33)
	l.j     	.L1842
	l.nop			# nop delay slot
.L2032:
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r7,r7,lo(.LC38)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__gedf2
	l.nop			# nop delay slot
	l.sfgesi	r11,0
	l.bnf	.L1842	# delay slot filled
	l.movhi  	r7,hi(.LC33)
.L2067:
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r7,r7,lo(.LC33)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r22,r22,1
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
		l.sw    	20(r1), r3
		l.sw    	20+4(r1), r4
	l.sflesi	r22,350
	l.bf	.L1846	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.addi  	r5,r0,0	 # movqi: move immediate
.L1846:
	l.andi  	r4,r5,0xff	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bnf	.L2032	# delay slot filled
	l.movhi  	r7,hi(.LC38)
.L1842:
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
		l.lwz   	r5, 0(r24)
		l.lwz   	r6, 4(r24)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bnf	.L2068	# delay slot filled
	l.movhi  	r14,hi(.LC39)
	l.movhi  	r7,hi(.LC36)
.L2069:
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r7,r7,lo(.LC36)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r22,r22,-8
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r7,r12,0	 # move reg to reg
	l.ori   	r5,r12,0	 # move reg to reg
		l.sw    	20(r1), r6
		l.sw    	20+4(r1), r7
	l.movhi  	r7,hi(.LC37)
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC37)
		l.or    	r3, r4, r0
		l.or    	r4, r5, r0
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bf	.L2069	# delay slot filled
	l.movhi  	r7,hi(.LC36)
	l.movhi  	r14,hi(.LC39)
.L2068:
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r14,r14,lo(.LC39)
		l.lwz   	r5, 0(r14)
		l.lwz   	r6, 4(r14)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bnf	.L2070	# delay slot filled
	l.sflesi	r22,350
	l.movhi  	r7,hi(.LC38)
.L2071:
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.ori   	r7,r7,lo(.LC38)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r22,r22,-1
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r7,r12,0	 # move reg to reg
	l.ori   	r5,r12,0	 # move reg to reg
		l.sw    	20(r1), r6
		l.sw    	20+4(r1), r7
	l.movhi  	r7,hi(.LC39)
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC39)
		l.or    	r3, r4, r0
		l.or    	r4, r5, r0
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bf	.L2071	# delay slot filled
	l.movhi  	r7,hi(.LC38)
	l.sflesi	r22,350
.L2070:
	l.bf	.L1828	# delay slot filled
	l.lwz   	r5,32(r1)	 # SI load
	l.movhi  	r14,hi(.LC23)
	l.lwz   	r3,52(r1)	 # SI load
	l.sfeqi	r3,45
	l.bf	.L1854	# delay slot filled
	l.ori   	r14,r14,lo(.LC23)
	l.movhi  	r14,hi(.LC25)
	l.sfnei	r3,43
	l.bnf	.L2033	# delay slot filled
	l.ori   	r14,r14,lo(.LC25)
.L1854:
	l.lbs   	r6,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeqi	r6,0
	l.bf	.L1855	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r5,r5,1
.L2072:
	l.lbs   	r3,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L2072	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
.L1855:
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r14
	l.ori   	r4,r4,65535
	l.lwz   	r26,56(r1)	 # SI load
	l.and   	r16,r5,r4
	l.j     	.L1818	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.L2021:
	l.movhi  	r5,hi(fmtinfo)
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r5,lo(fmtinfo)
	l.sw    	32(r1),r4	 # SI store
	l.j     	.L1781	# delay slot filled
	l.sw    	40(r1),r5	 # SI store
.L1915:
	l.lwz   	r3,44(r1)	 # SI load
.L2053:
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L2049	# delay slot filled
	l.addi	r1,r1,472
.L2002:
	l.slli  	r5,r7,3
	l.ori   	r6,r6,lo(fmtinfo)
	l.add   	r8,r5,r6
	l.lbz   	r8,2(r8)	 # zero_extendqisi2
	l.andi  	r8,r8,2
	l.sfnei	r8,0
	l.bnf	.L2073	# delay slot filled
	l.movhi  	r7,hi(fmtinfo)
	l.j     	.L2049	# delay slot filled
	l.addi	r1,r1,472
.L1795:
	l.bf	.L1803	# delay slot filled
	l.sfeqi	r18,0
	l.lwz   	r18,0(r26)	 # SI load
	l.lwz   	r20,4(r26)	 # SI load
	l.addi  	r26,r26,8
.L1802:
	l.or    	r8,r18,r20
	l.sfeqi	r8,0
	l.bnf	.L2074	# delay slot filled
	l.sfeqi	r28,0
	l.sw    	36(r1),r8	 # SI store
.L2074:
	l.bf	.L2075	# delay slot filled
	l.lwz   	r4,32(r1)	 # SI load
	l.andi  	r8,r30,0xff	 # zero_extendqisi2
	l.lwz   	r7,16(r1)	 # SI load
	l.sub   	r8,r0,r8
	l.lwz   	r3,12(r1)	 # SI load
	l.srli  	r8,r8,31
	l.sub   	r8,r7,r8
	l.sfges 	r3,r8
	l.bf	.L2076	# delay slot filled
	l.sfnei	r4,16
	l.sw    	12(r1),r8	 # SI store
	l.lwz   	r4,32(r1)	 # SI load
.L2075:
	l.sfnei	r4,16
.L2076:
	l.bnf	.L2034	# delay slot filled
	l.addi  	r14,r1,409
.L1809:
	l.lwz   	r6,40(r1)	 # SI load
	l.movhi  	r7,hi(aDigits)
	l.lbz   	r22,1(r6)	 # zero_extendqisi2
	l.lbz   	r28,4(r6)	 # zero_extendqisi2
	l.ori   	r7,r7,lo(aDigits)
	l.srai  	r24,r22,31
	l.add   	r28,r28,r7
.L1812:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	__umoddi3	# delay slot filled
	l.addi  	r14,r14,-1
	l.add   	r12,r28,r12
	l.ori   	r3,r18,0	 # move reg to reg
	l.lbz   	r12,0(r12)	 # zero_extendqisi2
	l.ori   	r4,r20,0	 # move reg to reg
	l.sb    	0(r14),r12	    # movqi
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	__udivdi3	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
	l.or    	r3,r18,r12
	l.sfnei	r3,0
	l.bf	.L1812	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
	l.lwz   	r3,8(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.sub   	r6,r3,r14
	l.sub   	r6,r4,r6
	l.sflesi	r6,0
	l.bf	.L1813	# delay slot filled
	l.ori   	r8,r14,0	 # move reg to reg
	l.ori   	r5,r6,0	 # move reg to reg
.L1814:
	l.addi  	r14,r14,-1
	l.addi  	r7,r0,48	 # movqi: move immediate
	l.addi  	r5,r5,-1
	l.sfnei	r5,0
	l.bf	.L1814	# delay slot filled
	l.sb    	0(r14),r7	    # movqi
	l.sub   	r14,r8,r6
.L1813:
	l.sfeqi	r30,0
	l.bf	.L2077	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.addi  	r14,r14,-1
	l.sb    	0(r14),r30	    # movqi
	l.lwz   	r3,36(r1)	 # SI load
.L2077:
	l.sfeqi	r3,0
	l.bf	.L2078	# delay slot filled
	l.lwz   	r4,8(r1)	 # SI load
	l.lwz   	r4,40(r1)	 # SI load
	l.lbz   	r6,5(r4)	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bf	.L1816	# delay slot filled
	l.movhi  	r7,hi(.LC31)
	l.ori   	r7,r7,lo(.LC31)
	l.add   	r5,r6,r7
	l.lbs   	r5,0(r5)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L1816	# delay slot filled
	l.movhi  	r3,hi(aPrefix)
	l.ori   	r3,r3,lo(aPrefix)
	l.add   	r6,r6,r3
	l.addi  	r14,r14,-1
.L2079:
	l.addi  	r6,r6,1
	l.sb    	0(r14),r5	    # movqi
	l.lbs   	r5,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L2079	# delay slot filled
	l.addi  	r14,r14,-1
	l.addi  	r14,r14,1
.L1816:
	l.lwz   	r4,8(r1)	 # SI load
.L2078:
	l.addi  	r18,r0,0	 # move immediate I
	l.j     	.L1818	# delay slot filled
	l.sub   	r16,r4,r14
.L2020:
	l.addi  	r2,r2,1
	l.addi  	r11,r0,1	 # move immediate I
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.j     	.L1778	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L1775:
	l.lwz   	r6,0(r26)	 # SI load
	l.addi  	r2,r2,1
	l.srai  	r8,r6,31
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.xor   	r6,r8,r6
	l.addi  	r26,r26,4
	l.sub   	r6,r6,r8
	l.sfnei	r5,108
	l.bnf	.L2035	# delay slot filled
	l.sw    	12(r1),r6	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
.L2055:
	l.j     	.L1778	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L2019:
	l.addi  	r5,r0,1	 # move immediate I
	l.sub   	r4,r0,r4
	l.j     	.L1770	# delay slot filled
	l.sw    	28(r1),r5	 # SI store
.L2026:
	l.movhi  	r22,hi(.LC26)
.L2051:
	l.lwz   	r3,32(r1)	 # SI load
	l.sfnei	r3,11
	l.bf	.L1897	# delay slot filled
	l.ori   	r22,r22,lo(.LC26)
	l.movhi  	r22,hi(.LC27)
	l.j     	.L1897	# delay slot filled
	l.ori   	r22,r22,lo(.LC27)
.L2023:
	l.lwz   	r18,0(r26)	 # SI load
	l.lwz   	r20,4(r26)	 # SI load
	l.sfltsi	r18,0
	l.bnf	.L2036	# delay slot filled
	l.addi  	r26,r26,8
.L1960:
	l.sub   	r20,r0,r20
	l.sfgtui	r20,0
	l.bf	.L1801	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
.L1801:
	l.sub   	r18,r0,r18
	l.addi  	r30,r0,45	 # move immediate I
	l.j     	.L1802	# delay slot filled
	l.sub   	r18,r18,r6
.L1803:
	l.bf	.L1804
	l.nop			# nop delay slot
	l.lwz   	r20,0(r26)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L1802	# delay slot filled
	l.addi  	r26,r26,4
.L2028:
	l.addi  	r4,r4,-1
	l.j     	.L1824	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
.L1828:
.L2066:
	l.sfeqi	r5,2
	l.bf	.L1939	# delay slot filled
	l.ori   	r15,r16,0	 # move reg to reg
	l.ori   	r14,r20,0	 # move reg to reg
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.movhi  	r7,hi(.LC38)
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r18,r12,0	 # move reg to reg
	l.ori   	r17,r24,0	 # move reg to reg
	l.ori   	r15,r12,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC38)
	l.ori   	r14,r24,0	 # move reg to reg
		l.sw    	20(r1), r17
		l.sw    	20+4(r1), r18
		l.or    	r3, r14, r0
		l.or    	r4, r15, r0
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__gedf2	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
	l.sfgesi	r11,0
	l.bnf	.L2080	# delay slot filled
	l.sfeqi	r26,0
	l.movhi  	r14,hi(.LC33)
	l.ori   	r15,r24,0	 # move reg to reg
	l.ori   	r14,r14,lo(.LC33)
	l.ori   	r16,r20,0	 # move reg to reg
		l.lwz   	r5, 0(r14)
		l.lwz   	r6, 4(r14)
		l.or    	r3, r15, r0
		l.or    	r4, r16, r0
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r22,r22,1
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r14,r12,0	 # move reg to reg
	l.ori   	r13,r6,0	 # move reg to reg
		l.sw    	20(r1), r13
		l.sw    	20+4(r1), r14
	l.sfeqi	r26,0
.L2080:
	l.bnf	.L2037	# delay slot filled
	l.lwz   	r6,32(r1)	 # SI load
	l.sfnei	r6,3
	l.bnf	.L2038	# delay slot filled
	l.ori   	r18,r26,0	 # move reg to reg
	l.ori   	r7,r22,0	 # move reg to reg
	l.addi  	r26,r0,4	 # move immediate I
.L1857:
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r4,36(r1)	 # SI load
	l.srai  	r8,r3,31
	l.or    	r12,r30,r4
	l.lwz   	r5,52(r1)	 # SI load
	l.sub   	r8,r8,r3
	l.sfeqi	r5,0
	l.srli  	r8,r8,31
	l.or    	r8,r12,r8
	l.andi  	r8,r8,0xff	 # zero_extendqisi2
	l.bf	.L1941	# delay slot filled
	l.sw    	36(r1),r8	 # SI store
	l.sb    	60(r1),r5	    # movqi
	l.addi  	r16,r1,62
	l.addi  	r24,r1,61
.L1864:
	l.sfgesi	r7,0
	l.bnf	.L2039	# delay slot filled
	l.addi  	r6,r0,48	 # movqi: move immediate
	l.addi  	r16,r7,1
	l.addi  	r20,r0,0	 # move immediate I
.L1868:
	l.sfgtsi	r20,15
	l.bf	.L1867	# delay slot filled
	l.addi  	r5,r0,48	 # move immediate I
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__subdf3
	l.nop			# nop delay slot
	l.movhi  	r7,hi(.LC38)
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC38)
	l.ori   	r3,r5,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r4,r12,0	 # move reg to reg
	l.addi  	r5,r14,48
	l.ori   	r6,r11,0	 # move reg to reg
	l.slli  	r5,r5,24
	l.ori   	r3,r6,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.srai  	r5,r5,24
		l.sw    	20(r1), r3
		l.sw    	20+4(r1), r4
.L1867:
	l.add   	r4,r24,r20
	l.addi  	r20,r20,1
	l.sfne 	r20,r16
	l.bf	.L1868	# delay slot filled
	l.sb    	0(r4),r5	    # movqi
	l.add   	r16,r24,r20
	l.addi  	r7,r0,-1	 # move immediate I
.L1866:
	l.lwz   	r3,36(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2081	# delay slot filled
	l.sfeqi	r7,-1
	l.addi  	r4,r0,46	 # movqi: move immediate
	l.sb    	0(r16),r4	    # movqi
	l.addi  	r16,r16,1
.L2081:
	l.bf	.L1870	# delay slot filled
	l.xori  	r3,r7,0xffff
	l.ori   	r8,r16,0	 # move reg to reg
	l.add   	r12,r16,r3
	l.addi  	r5,r0,48	 # movqi: move immediate
.L2082:
	l.sb    	0(r8),r5	    # movqi
	l.addi  	r8,r8,1
	l.sfne 	r8,r12
	l.bf	.L2082	# delay slot filled
	l.lwz   	r6,12(r1)	 # SI load
	l.add   	r16,r16,r3
	l.addi  	r4,r6,1
	l.add   	r4,r4,r7
	l.sw    	12(r1),r4	 # SI store
.L1870:
	l.lwz   	r7,12(r1)	 # SI load
	l.sflesi	r7,0
	l.bf	.L2083	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.add   	r24,r16,r7
.L1874:
	l.sfgtsi	r20,15
	l.bf	.L1873	# delay slot filled
	l.addi  	r5,r0,48	 # move immediate I
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__subdf3
	l.nop			# nop delay slot
	l.movhi  	r7,hi(.LC38)
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC38)
	l.ori   	r3,r5,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r4,r12,0	 # move reg to reg
	l.addi  	r5,r14,48
	l.ori   	r6,r11,0	 # move reg to reg
	l.slli  	r5,r5,24
	l.ori   	r3,r6,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.srai  	r5,r5,24
		l.sw    	20(r1), r3
		l.sw    	20+4(r1), r4
.L1873:
	l.sb    	0(r16),r5	    # movqi
	l.addi  	r16,r16,1
	l.sfne 	r16,r24
	l.bf	.L1874	# delay slot filled
	l.addi  	r20,r20,1
	l.lwz   	r3,36(r1)	 # SI load
.L2083:
	l.sfeqi	r3,0
	l.bf	.L2084	# delay slot filled
	l.xori  	r6,r26,3
	l.sfeqi	r18,0
	l.bf	.L2085	# delay slot filled
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.addi  	r6,r16,-1
	l.lbs   	r8,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r8,48
	l.bf	.L2086	# delay slot filled
	l.sfnei	r8,46
	l.addi  	r4,r0,0	 # movqi: move immediate
.L2087:
	l.ori   	r16,r6,0	 # move reg to reg
	l.sb    	0(r6),r4	    # movqi
	l.addi  	r6,r6,-1
	l.lbs   	r8,0(r6)	 # extendqisi2_no_sext_mem
	l.sfeqi	r8,48
	l.bf	.L2087	# delay slot filled
	l.sfnei	r8,46
.L2086:
	l.bnf	.L2040	# delay slot filled
	l.sfeqi	r30,0
.L1875:
	l.xori  	r6,r26,3
.L2084:
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
.L2085:
	l.addi  	r6,r6,-1
	l.sfltsi	r6,0
	l.bf	.L2088	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r6,32(r1)	 # SI load
	l.xori  	r8,r6,3
	l.addi  	r8,r8,-1
	l.sfgesi	r8,0
	l.bf	.L2089	# delay slot filled
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.lwz   	r3,40(r1)	 # SI load
.L2088:
	l.movhi  	r4,hi(aDigits)
	l.lbz   	r7,4(r3)	 # zero_extendqisi2
	l.ori   	r4,r4,lo(aDigits)
	l.addi  	r5,r16,1
	l.add   	r7,r7,r4
	l.sfgesi	r22,0
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.bnf	.L2041	# delay slot filled
	l.sb    	0(r16),r7	    # movqi
	l.addi  	r7,r0,43	 # movqi: move immediate
	l.addi  	r14,r16,2
	l.sb    	0(r5),r7	    # movqi
.L1882:
	l.sflesi	r22,99
	l.bf	.L2090	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r4,r0,100	 # move immediate I
	l.addi  	r5,r11,48
	l.ori   	r3,r22,0	 # move reg to reg
	l.sb    	0(r14),r5	    # movqi
	l.addi  	r4,r0,100	 # move immediate I
	l.jal   	__modsi3	# delay slot filled
	l.addi  	r14,r14,1
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
.L2090:
	l.addi  	r4,r0,10	 # move immediate I
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r18,r14,1
	l.addi  	r5,r11,48
	l.ori   	r3,r22,0	 # move reg to reg
	l.sb    	0(r14),r5	    # movqi
	l.addi  	r4,r0,10	 # move immediate I
	l.jal   	__modsi3	# delay slot filled
	l.addi  	r16,r14,2
	l.addi  	r11,r11,48
	l.sb    	0(r18),r11	    # movqi
	l.addi  	r3,r0,0	 # movqi: move immediate
.L2089:
	l.sb    	0(r16),r3	    # movqi
	l.lwz   	r4,4(r1)	 # SI load
	l.lwz   	r5,28(r1)	 # SI load
	l.sfnei	r5,0
	l.bf	.L1945	# delay slot filled
	l.sub   	r16,r16,r4
	l.sfeqi	r28,0
	l.bf	.L2091	# delay slot filled
	l.lwz   	r26,56(r1)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.sfges 	r16,r6
	l.bf	.L2092	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.sub   	r7,r6,r16
	l.sfgts 	r7,r6
	l.bf	.L1885	# delay slot filled
	l.sub   	r5,r6,r7
	l.addi  	r3,r1,60
	l.add   	r5,r3,r5
.L1886:
	l.lbz   	r4,0(r5)	 # zero_extendqisi2
	l.add   	r3,r5,r7
	l.lwz   	r6,0(r1)	 # SI load
	l.addi  	r5,r5,-1
	l.sfne 	r5,r6
	l.bf	.L1886	# delay slot filled
	l.sb    	0(r3),r4	    # movqi
.L1885:
	l.sfeqi	r7,0
	l.bf	.L1884	# delay slot filled
	l.lwz   	r16,16(r1)	 # SI load
	l.lwz   	r3,52(r1)	 # SI load
	l.addi  	r4,r1,60
	l.andi  	r5,r3,0xff	 # zero_extendqisi2
	l.sub   	r5,r0,r5
	l.srli  	r5,r5,31
	l.add   	r5,r4,r5
	l.add   	r7,r5,r7
	l.addi  	r6,r0,48	 # movqi: move immediate
.L2093:
	l.sb    	0(r5),r6	    # movqi
	l.addi  	r5,r5,1
	l.sfne 	r5,r7
	l.bf	.L2093
	l.nop			# nop delay slot
	l.lwz   	r16,16(r1)	 # SI load
.L1884:
	l.lwz   	r26,56(r1)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
.L2092:
	l.j     	.L1913	# delay slot filled
	l.addi  	r14,r1,60
.L2034:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	__umoddi3	# delay slot filled
	l.addi  	r6,r0,10	 # move immediate I
	l.sfgtsi	r12,3
	l.bnf	.L2042	# delay slot filled
	l.ori   	r14,r12,0	 # move reg to reg
	l.addi  	r8,r0,1	 # move immediate I
	l.addi  	r14,r0,0	 # move immediate I
.L1810:
	l.movhi  	r5,hi(.LC30)
	l.ori   	r5,r5,lo(.LC30)
	l.add   	r14,r14,r5
	l.add   	r8,r8,r5
	l.lbz   	r14,0(r14)	 # zero_extendqisi2
	l.sb    	407(r1),r14	    # movqi
	l.addi  	r14,r1,407
	l.lbz   	r8,0(r8)	 # zero_extendqisi2
	l.j     	.L1809	# delay slot filled
	l.sb    	408(r1),r8	    # movqi
.L1933:
	l.movhi  	r14,hi(.LC28)
	l.lwz   	r26,56(r1)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
	l.addi  	r16,r0,3	 # move immediate I
	l.j     	.L1818	# delay slot filled
	l.ori   	r14,r14,lo(.LC28)
.L1928:
	l.addi  	r3,r0,6	 # move immediate I
	l.sw    	12(r1),r3	 # SI store
.L1819:
	l.lwz   	r4,12(r1)	 # SI load
	l.srai  	r18,r4,31
	l.sub   	r18,r18,r4
	l.j     	.L1820	# delay slot filled
	l.srli  	r18,r18,31
.L2005:
	l.sfnei	r22,0
	l.bf	.L1823	# delay slot filled
	l.sw    	52(r1),r6	 # SI store
	l.sfeqi	r24,0
	l.bf	.L1823	# delay slot filled
	l.sw    	52(r1),r24	 # SI store
	l.addi  	r7,r0,32	 # move immediate I
	l.j     	.L1823	# delay slot filled
	l.sw    	52(r1),r7	 # SI store
.L1914:
	l.j     	.L1753	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L1959:
	l.ori   	r18,r4,0	 # move reg to reg
	l.sw    	16(r1),r4	 # SI store
	l.j     	.L1818	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
.L2025:
	l.lwz   	r22,0(r26)	 # SI load
	l.sub   	r8,r0,r22
	l.or    	r8,r22,r8
	l.xori  	r8,r8,0xffff
	l.srli  	r8,r8,31
	l.sfeqi	r8,0
	l.bf	.L1897	# delay slot filled
	l.addi  	r20,r0,34	 # move immediate I
	l.j     	.L2051	# delay slot filled
	l.movhi  	r22,hi(.LC26)
.L2027:
	l.jal   	sqlite3Malloc	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L2043	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L1901	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L2042:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	__udivdi3	# delay slot filled
	l.addi  	r6,r0,10	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__umoddi3	# delay slot filled
	l.addi  	r6,r0,10	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L2044	# delay slot filled
	l.sfnei	r12,1
.L1961:
	l.add   	r14,r14,r14
	l.j     	.L1810	# delay slot filled
	l.addi  	r8,r14,1
.L1890:
	l.lbs   	r6,0(r14)	 # extendqisi2_no_sext_mem
.L2052:
	l.sfnei	r6,0
	l.bnf	.L1893	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r5,r5,1
.L2094:
	l.lbs   	r3,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L2094	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
.L1893:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r14
	l.ori   	r6,r6,65535
	l.j     	.L1818	# delay slot filled
	l.and   	r16,r5,r6
.L1947:
	l.addi  	r18,r0,0	 # move immediate I
	l.addi  	r16,r0,1	 # move immediate I
	l.j     	.L1818	# delay slot filled
	l.addi  	r14,r1,60
.L1804:
	l.lwz   	r20,0(r26)	 # SI load
	l.ori   	r30,r18,0	 # move reg to reg
	l.j     	.L1802	# delay slot filled
	l.addi  	r26,r26,4
.L1939:
	l.lwz   	r26,32(r1)	 # SI load
	l.ori   	r7,r22,0	 # move reg to reg
	l.j     	.L1857	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.L2029:
	l.ori   	r6,r20,0	 # move reg to reg
		l.lwz   	r3, 20(r1)
		l.lwz   	r4, 20+4(r1)
		l.or    	r5, r6, r0
		l.or    	r6, r7, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.ori   	r17,r11,0	 # move reg to reg
	l.ori   	r14,r12,0	 # move reg to reg
	l.ori   	r13,r17,0	 # move reg to reg
		l.sw    	20(r1), r13
		l.sw    	20+4(r1), r14
	l.j     	.L1827
	l.nop			# nop delay slot
.L2016:
	l.movhi  	r4,hi(.LC29)
	l.lwz   	r3,44(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC29)
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L2049	# delay slot filled
	l.addi	r1,r1,472
.L1945:
	l.lwz   	r26,56(r1)	 # SI load
.L2091:
	l.addi  	r18,r0,0	 # move immediate I
	l.j     	.L1818	# delay slot filled
	l.addi  	r14,r1,60
.L1941:
	l.addi  	r16,r1,61
	l.j     	.L1864	# delay slot filled
	l.addi  	r24,r1,60
.L1949:
	l.ori   	r18,r14,0	 # move reg to reg
	l.lwz   	r5,12(r1)	 # SI load
	l.movhi  	r14,hi(.LC15)
	l.sfeqi	r5,-1
	l.bnf	.L2045	# delay slot filled
	l.ori   	r14,r14,lo(.LC15)
	l.j     	.L2052	# delay slot filled
	l.lbs   	r6,0(r14)	 # extendqisi2_no_sext_mem
.L2039:
	l.addi  	r20,r0,0	 # move immediate I
	l.j     	.L1866	# delay slot filled
	l.sb    	0(r24),r6	    # movqi
.L2037:
	l.lwz   	r3,36(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.xori  	r13,r3,1
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.sfgts 	r22,r4
	l.bnf	.L2046	# delay slot filled
	l.andi  	r18,r13,0xff	 # zero_extendqisi2
.L1862:
	l.andi  	r8,r8,0xff	 # zero_extendqisi2
	l.sfnei	r8,0
	l.bf	.L2095	# delay slot filled
	l.addi  	r26,r0,3	 # move immediate I
	l.sfltsi	r22,-4
	l.bf	.L1863	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.ori   	r6,r8,0	  # movqi: move reg to reg
.L1863:
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L1861	# delay slot filled
	l.lwz   	r5,12(r1)	 # SI load
	l.ori   	r7,r22,0	 # move reg to reg
	l.sub   	r5,r5,r22
	l.addi  	r26,r0,2	 # move immediate I
	l.j     	.L1857	# delay slot filled
	l.sw    	12(r1),r5	 # SI store
.L2038:
.L1861:
	l.addi  	r26,r0,3	 # move immediate I
.L2095:
	l.j     	.L1857	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L1932:
	l.j     	.L1825	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L1955:
	l.ori   	r7,r6,0	 # move reg to reg
	l.j     	.L1898	# delay slot filled
	l.ori   	r5,r6,0	 # move reg to reg
.L2044:
	l.bf	.L1961
	l.nop			# nop delay slot
	l.ori   	r8,r12,0	 # move reg to reg
	l.j     	.L1810	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L2046:
	l.j     	.L1862	# delay slot filled
	l.addi  	r8,r0,0	 # movqi: move immediate
.L2033:
	l.movhi  	r14,hi(.LC24)
	l.j     	.L1854	# delay slot filled
	l.ori   	r14,r14,lo(.LC24)
.L2041:
	l.addi  	r6,r0,45	 # movqi: move immediate
	l.addi  	r14,r16,2
	l.sb    	0(r5),r6	    # movqi
	l.j     	.L1882	# delay slot filled
	l.sub   	r22,r0,r22
.L2040:
	l.bf	.L1878	# delay slot filled
	l.addi  	r5,r0,48	 # movqi: move immediate
	l.sb    	0(r16),r5	    # movqi
	l.j     	.L1875	# delay slot filled
	l.addi  	r16,r16,1
.L1935:
	l.j     	.L1830	# delay slot filled
	l.ori   	r22,r6,0	 # move reg to reg
.L1878:
	l.sb    	0(r6),r30	    # movqi
	l.j     	.L1875	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
.L2043:
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.lwz   	r5,44(r1)	 # SI load
	l.j     	.L1750	# delay slot filled
	l.sb    	24(r5),r6	    # movqi
.L2018:
	l.sfleui	r6,9
	l.bnf	.L2047	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.slli  	r3,r4,3
.L2096:
	l.addi  	r2,r2,1
	l.add   	r4,r4,r4
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.add   	r4,r4,r3
	l.add   	r4,r6,r4
	l.addi  	r6,r5,-48
	l.sfleui	r6,9
	l.bf	.L2096	# delay slot filled
	l.slli  	r3,r4,3
	l.sflesi	r4,340
	l.bf	.L1769	# delay slot filled
	l.sw    	16(r1),r4	 # SI store
	l.addi  	r7,r0,340	 # move immediate I
	l.j     	.L1769	# delay slot filled
	l.sw    	16(r1),r7	 # SI store
.L2047:
	l.j     	.L1769	# delay slot filled
	l.sw    	16(r1),r4	 # SI store
.LFE100:
	.size	sqlite3VXPrintf, .-sqlite3VXPrintf
	.align	4
.proc	sqlite3StrAccumFinish
	.type	sqlite3StrAccumFinish, @function
sqlite3StrAccumFinish:
.LFB102:
	l.sw    	-8(r1),r2	 # SI store
.LCFI558:
	l.sw    	-4(r1),r9	 # SI store
.LCFI559:
	l.lwz   	r11,8(r3)	 # SI load
	l.addi  	r1,r1,-8
.LCFI560:
	l.sfeqi	r11,0
	l.bf	.L2100	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,12(r3)	 # SI load
	l.add   	r11,r11,r3
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	0(r11),r3	    # movqi
	l.lbz   	r3,25(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L2104
	l.nop			# nop delay slot
	l.lwz   	r11,8(r2)	 # SI load
	l.lwz   	r3,4(r2)	 # SI load
	l.sfne 	r11,r3
	l.bnf	.L2105
	l.nop			# nop delay slot
.L2100:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L2105:
	l.lwz   	r4,12(r2)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r4,1
	l.sfeqi	r11,0
	l.bf	.L2102	# delay slot filled
	l.sw    	8(r2),r11	 # SI store
	l.lwz   	r5,12(r2)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r4,4(r2)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r5,1
.L2104:
	l.lwz   	r11,8(r2)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L2102:
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.j     	.L2100	# delay slot filled
	l.sb    	24(r2),r3	    # movqi
.LFE102:
	.size	sqlite3StrAccumFinish, .-sqlite3StrAccumFinish
	.align	4
.proc	sqlite3VMPrintf
	.type	sqlite3VMPrintf, @function
sqlite3VMPrintf:
.LFB105:
	l.sw    	-4(r1),r9	 # SI store
.LCFI561:
	l.sw    	-12(r1),r2	 # SI store
.LCFI562:
	l.sw    	-8(r1),r14	 # SI store
.LCFI563:
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r1,r1,-392
.LCFI564:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	364(r1),r7	 # SI store
	l.addi  	r7,r0,350	 # move immediate I
	l.ori   	r3,r4,0	 # move reg to reg
	l.addi  	r14,r1,352
	l.sw    	368(r1),r7	 # SI store
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.ori   	r6,r5,0	 # move reg to reg
	l.lwz   	r8,80(r2)	 # SI load
	l.ori   	r5,r3,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.sb    	377(r1),r7	    # movqi
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.sw    	372(r1),r8	 # SI store
	l.sb    	378(r1),r7	    # movqi
	l.sb    	376(r1),r7	    # movqi
	l.sw    	356(r1),r1	 # SI store
	l.sw    	360(r1),r1	 # SI store
	l.jal   	sqlite3VXPrintf	# delay slot filled
	l.sw    	352(r1),r2	 # SI store
	l.jal   	sqlite3StrAccumFinish	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lbz   	r3,376(r1)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L2107	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	30(r2),r3	    # movqi
.L2107:
	l.addi	r1,r1,392
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE105:
	.size	sqlite3VMPrintf, .-sqlite3VMPrintf
	.align	4
.proc	memjrnlRead
	.type	memjrnlRead, @function
memjrnlRead:
.LFB698:
	l.sw    	-36(r1),r2	 # SI store
.LCFI565:
	l.or    	r2,r6,r7
	l.sw    	-20(r1),r20	 # SI store
.LCFI566:
	l.ori   	r20,r3,0	 # move reg to reg
	l.sub   	r3,r0,r2
	l.sw    	-28(r1),r16	 # SI store
.LCFI567:
	l.sw    	-24(r1),r18	 # SI store
.LCFI568:
	l.sw    	-16(r1),r22	 # SI store
.LCFI569:
	l.sw    	-12(r1),r24	 # SI store
.LCFI570:
	l.sw    	-4(r1),r9	 # SI store
.LCFI571:
	l.sw    	-32(r1),r14	 # SI store
.LCFI572:
	l.sw    	-8(r1),r26	 # SI store
.LCFI573:
	l.or    	r2,r3,r2
	l.addi  	r1,r1,-36
.LCFI574:
	l.ori   	r16,r6,0	 # move reg to reg
	l.ori   	r24,r7,0	 # move reg to reg
	l.ori   	r22,r5,0	 # move reg to reg
	l.sfgesi	r2,0
	l.bf	.L2122	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
	l.lwz   	r3,20(r20)	 # SI load
	l.lwz   	r2,24(r20)	 # SI load
	l.xor   	r3,r3,r6
	l.xor   	r2,r2,r7
	l.or    	r2,r3,r2
	l.sub   	r3,r0,r2
	l.or    	r2,r3,r2
	l.sfgesi	r2,0
	l.bnf	.L2122
	l.nop			# nop delay slot
	l.lwz   	r14,28(r20)	 # SI load
.L2112:
	l.ori   	r3,r16,0	 # move reg to reg
.L2128:
	l.ori   	r4,r24,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r0,1020	 # move immediate I
	l.ori   	r2,r22,0	 # move reg to reg
	l.jal   	__moddi3	# delay slot filled
	l.addi  	r26,r0,1020	 # move immediate I
	l.addi  	r6,r14,4
.L2129:
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r4,r6,r12
	l.sub   	r12,r26,r12
	l.sfles 	r12,r2
	l.bf	.L2117	# delay slot filled
	l.ori   	r8,r12,0	 # move reg to reg
	l.ori   	r8,r2,0	 # move reg to reg
.L2117:
	l.ori   	r5,r8,0	 # move reg to reg
	l.sub   	r2,r2,r12
	l.jal   	memcpy	# delay slot filled
	l.add   	r18,r18,r8
	l.addi  	r12,r0,0	 # move immediate I
	l.sflts 	r2,r12
	l.bf	.L2118
	l.nop			# nop delay slot
	l.lwz   	r14,0(r14)	 # SI load
	l.sfeq 	r14,r12
	l.bf	.L2118	# delay slot filled
	l.sfne 	r2,r12
	l.bf	.L2129	# delay slot filled
	l.addi  	r6,r14,4
.L2118:
	l.add   	r24,r22,r24
	l.srai  	r3,r22,31
	l.sfltu 	r24,r22
	l.bf	.L2120	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r2,r0,0	 # move immediate I
.L2120:
	l.add   	r16,r3,r16
	l.sw    	24(r20),r24	 # SI store
	l.add   	r2,r2,r16
	l.sw    	28(r20),r14	 # SI store
	l.sw    	20(r20),r2	 # SI store
	l.addi	r1,r1,36
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L2122:
	l.lwz   	r14,4(r20)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L2112	# delay slot filled
	l.sfgtsi	r16,0
	l.bnf	.L2127	# delay slot filled
	l.sfnei	r16,0
	l.addi  	r2,r0,0	 # move immediate I
.L2130:
	l.addi  	r3,r0,1020	 # move immediate I
.L2126:
	l.lwz   	r14,0(r14)	 # SI load
	l.addi  	r6,r3,1020
	l.sfeqi	r14,0
	l.bf	.L2112	# delay slot filled
	l.ori   	r13,r6,0	 # move reg to reg
	l.sfltu 	r6,r3
	l.bf	.L2114	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
.L2114:
	l.add   	r2,r8,r2
	l.ori   	r12,r13,0	 # move reg to reg
	l.ori   	r11,r2,0	 # move reg to reg
		l.or    	r2, r11, r0
		l.or    	r3, r12, r0
	l.ori   	r4,r2,0	 # move reg to reg
	l.sfgts 	r4,r16
	l.bf	.L2112	# delay slot filled
	l.sfne 	r4,r16
	l.bf	.L2126	# delay slot filled
	l.sfgtu 	r3,r24
	l.bnf	.L2126
	l.nop			# nop delay slot
	l.j     	.L2128	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L2127:
	l.bf	.L2112	# delay slot filled
	l.sfgtui	r24,1019
	l.bf	.L2130	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L2128	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.LFE698:
	.size	memjrnlRead, .-memjrnlRead
	.align	4
.proc	sqlite3DbStrDup
	.type	sqlite3DbStrDup, @function
sqlite3DbStrDup:
.LFB94:
	l.sw    	-16(r1),r2	 # SI store
.LCFI575:
	l.sw    	-12(r1),r14	 # SI store
.LCFI576:
	l.sw    	-4(r1),r9	 # SI store
.LCFI577:
	l.sw    	-8(r1),r16	 # SI store
.LCFI578:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI579:
	l.sfeqi	r4,0
	l.bf	.L2132	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.lbs   	r4,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,0
	l.bf	.L2136	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r5,r5,1
.L2138:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L2138	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.sub   	r4,r5,r2
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.ori   	r5,r5,65535
	l.and   	r4,r4,r5
	l.addi  	r4,r4,1
	l.ori   	r16,r4,0	 # move reg to reg
.L2133:
	l.jal   	sqlite3DbMallocRaw
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bf	.L2132	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
.L2132:
	l.addi	r1,r1,16
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L2136:
	l.addi  	r16,r0,1	 # move immediate I
	l.j     	.L2133	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.LFE94:
	.size	sqlite3DbStrDup, .-sqlite3DbStrDup
	.align	4
.proc	sqlite3IdListDup
	.type	sqlite3IdListDup, @function
sqlite3IdListDup:
.LFB759:
	l.sw    	-32(r1),r2	 # SI store
.LCFI580:
	l.sw    	-28(r1),r14	 # SI store
.LCFI581:
	l.sw    	-8(r1),r24	 # SI store
.LCFI582:
	l.sw    	-4(r1),r9	 # SI store
.LCFI583:
	l.sw    	-24(r1),r16	 # SI store
.LCFI584:
	l.sw    	-20(r1),r18	 # SI store
.LCFI585:
	l.sw    	-16(r1),r20	 # SI store
.LCFI586:
	l.sw    	-12(r1),r22	 # SI store
.LCFI587:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI588:
	l.ori   	r24,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bnf	.L2144	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
.L2140:
	l.addi	r1,r1,32
.L2146:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L2144:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r0,12	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L2140	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,4(r14)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.sw    	4(r11),r4	 # SI store
	l.sw    	8(r11),r4	 # SI store
	l.lwz   	r4,4(r14)	 # SI load
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.slli  	r4,r4,3
	l.sfeqi	r11,0
	l.bf	.L2141	# delay slot filled
	l.sw    	0(r2),r11	 # SI store
	l.lwz   	r3,4(r14)	 # SI load
	l.sflesi	r3,0
	l.bf	.L2140	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L2142	# delay slot filled
	l.ori   	r18,r16,0	 # move reg to reg
.L2145:
	l.lwz   	r11,0(r2)	 # SI load
.L2142:
	l.lwz   	r20,0(r14)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.add   	r20,r20,r16
	l.add   	r22,r11,r16
	l.lwz   	r4,0(r20)	 # SI load
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.addi  	r18,r18,1
	l.lwz   	r4,4(r20)	 # SI load
	l.lwz   	r3,4(r14)	 # SI load
	l.sw    	0(r22),r11	 # SI store
	l.sw    	4(r22),r4	 # SI store
	l.sfles 	r3,r18
	l.bnf	.L2145	# delay slot filled
	l.addi  	r16,r16,8
	l.j     	.L2146	# delay slot filled
	l.addi	r1,r1,32
.L2141:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L2146	# delay slot filled
	l.addi	r1,r1,32
.LFE759:
	.size	sqlite3IdListDup, .-sqlite3IdListDup
	.align	4
.proc	sqlite3DbStrNDup
	.type	sqlite3DbStrNDup, @function
sqlite3DbStrNDup:
.LFB95:
	l.sw    	-16(r1),r2	 # SI store
.LCFI589:
	l.sw    	-12(r1),r14	 # SI store
.LCFI590:
	l.sw    	-8(r1),r16	 # SI store
.LCFI591:
	l.sw    	-4(r1),r9	 # SI store
.LCFI592:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI593:
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L2148	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r5,1
	l.sfeqi	r11,0
	l.bf	.L2148	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.add   	r14,r2,r14
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	0(r14),r3	    # movqi
.L2148:
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE95:
	.size	sqlite3DbStrNDup, .-sqlite3DbStrNDup
	.align	4
.proc	sqlite3NameFromToken
	.type	sqlite3NameFromToken, @function
sqlite3NameFromToken:
.LFB862:
	l.sw    	-12(r1),r2	 # SI store
.LCFI594:
	l.sw    	-8(r1),r14	 # SI store
.LCFI595:
	l.sw    	-4(r1),r9	 # SI store
.LCFI596:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI597:
	l.sfeqi	r4,0
	l.bf	.L2151	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.lwz   	r5,4(r4)	 # SI load
	l.ori   	r2,r2,65535
	l.lwz   	r4,0(r4)	 # SI load
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.and   	r5,r5,r2
	l.lwz   	r3,4(r14)	 # SI load
	l.movhi 	r4,hi(1073741824)	 # move immediate M
	l.and   	r3,r3,r4
	l.sfeqi	r3,0
	l.bnf	.L2153	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L2151:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L2153:
	l.jal   	sqlite3Dequote	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE862:
	.size	sqlite3NameFromToken, .-sqlite3NameFromToken
	.align	4
.proc	sqlite3FindDb
	.type	sqlite3FindDb, @function
sqlite3FindDb:
.LFB865:
	l.sw    	-4(r1),r9	 # SI store
.LCFI598:
	l.sw    	-16(r1),r2	 # SI store
.LCFI599:
	l.sw    	-12(r1),r14	 # SI store
.LCFI600:
	l.sw    	-8(r1),r16	 # SI store
.LCFI601:
	l.addi  	r1,r1,-16
.LCFI602:
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3FindDbName	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE865:
	.size	sqlite3FindDb, .-sqlite3FindDb
	.align	4
.proc	sqlite3TokenCopy
	.type	sqlite3TokenCopy, @function
sqlite3TokenCopy:
.LFB756:
	l.sw    	-16(r1),r2	 # SI store
.LCFI603:
	l.sw    	-12(r1),r14	 # SI store
.LCFI604:
	l.sw    	-8(r1),r16	 # SI store
.LCFI605:
	l.sw    	-4(r1),r9	 # SI store
.LCFI606:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r4,4(r4)	 # SI load
	l.addi  	r1,r1,-16
.LCFI607:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfgesi	r4,0
	l.bnf	.L2159	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.lwz   	r4,0(r14)	 # SI load
.L2160:
	l.sfeqi	r4,0
	l.bf	.L2157	# delay slot filled
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.lwz   	r6,4(r14)	 # SI load
	l.ori   	r3,r3,65535
	l.lwz   	r5,4(r2)	 # SI load
	l.and   	r6,r6,r3
	l.movhi 	r3,hi(-1073741824)	 # move immediate M
	l.and   	r5,r5,r3
	l.ori   	r3,r16,0	 # move reg to reg
	l.or    	r5,r5,r6
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.sw    	4(r2),r5	 # SI store
	l.ori   	r6,r6,65535
	l.lwz   	r5,4(r14)	 # SI load
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.and   	r5,r5,r6
	l.lwz   	r3,4(r2)	 # SI load
	l.movhi 	r4,hi(-2147483648)	 # move immediate M
	l.sw    	0(r2),r11	 # SI store
	l.or    	r3,r3,r4
	l.sw    	4(r2),r3	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L2157:
	l.sw    	0(r2),r4	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L2159:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.j     	.L2160	# delay slot filled
	l.lwz   	r4,0(r14)	 # SI load
.LFE756:
	.size	sqlite3TokenCopy, .-sqlite3TokenCopy
	.align	4
.proc	dropCell
	.type	dropCell, @function
dropCell:
.LFB460:
	l.lhz   	r6,12(r3)	 # zero_extendqisi2
	l.add   	r8,r4,r4
	l.lwz   	r7,64(r3)	 # SI load
	l.add   	r6,r8,r6
	l.sw    	-4(r1),r2	 # SI store
.LCFI608:
	l.add   	r6,r7,r6
	l.lbz   	r13,5(r3)	 # zero_extendqisi2
	l.lbz   	r12,0(r6)	 # zero_extendqisi2
	l.lbz   	r8,1(r6)	 # zero_extendqisi2
	l.lbz   	r11,3(r3)	 # zero_extendqisi2
	l.slli  	r12,r12,8
	l.addi  	r1,r1,-4
.LCFI609:
	l.addi  	r21,r13,6
	l.or    	r12,r8,r12
	l.sfeqi	r11,0
	l.bf	.L2162	# delay slot filled
	l.addi  	r8,r0,4	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
.L2162:
	l.add   	r8,r21,r8
	l.sflts 	r12,r8
	l.bf	.L2163	# delay slot filled
	l.addi  	r11,r0,11	 # move immediate I
	l.lwz   	r15,60(r3)	 # SI load
	l.add   	r8,r12,r5
	l.lhz   	r23,22(r15)	 # zero_extendqisi2
	l.sfgts 	r8,r23
	l.bnf	.L2185
	l.nop			# nop delay slot
.L2163:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L2185:
	l.addi  	r2,r13,1
	l.ori   	r11,r2,0	 # move reg to reg
.L2164:
	l.add   	r17,r7,r11
	l.addi  	r15,r11,1
	l.lbz   	r8,0(r17)	 # zero_extendqisi2
	l.add   	r15,r7,r15
	l.slli  	r8,r8,8
	l.lbz   	r19,0(r15)	 # zero_extendqisi2
	l.or    	r8,r19,r8
	l.sfles 	r12,r8
	l.bf	.L2165	# delay slot filled
	l.sfgtsi	r8,0
	l.bnf	.L2165	# delay slot filled
	l.sfles 	r8,r11
	l.bnf	.L2164	# delay slot filled
	l.ori   	r11,r8,0	 # move reg to reg
.L2182:
	l.addi	r1,r1,4
	l.addi  	r11,r0,11	 # move immediate I
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L2165:
	l.addi  	r23,r23,-3
	l.sfles 	r23,r8
	l.bf	.L2163	# delay slot filled
	l.addi  	r11,r0,11	 # move immediate I
	l.srai  	r11,r12,8
	l.srai  	r23,r8,8
	l.srai  	r19,r5,8
	l.sb    	0(r17),r11	    # movqi
	l.add   	r11,r7,r12
	l.sb    	0(r15),r12	    # movqi
	l.sb    	3(r11),r5	    # movqi
	l.sb    	0(r11),r23	    # movqi
	l.sb    	1(r11),r8	    # movqi
	l.sb    	2(r11),r19	    # movqi
	l.lhz   	r8,14(r3)	 # zero_extendqisi2
	l.lbz   	r31,5(r3)	 # zero_extendqisi2
	l.add   	r5,r5,r8
	l.addi  	r31,r31,1
	l.j     	.L2167	# delay slot filled
	l.sh    	14(r3),r5	 # movhi
.L2187:
	l.bf	.L2180
	l.nop			# nop delay slot
	l.sub   	r11,r8,r15
	l.sfltsi	r11,0
	l.bf	.L2182
	l.nop			# nop delay slot
	l.lbz   	r12,5(r3)	 # zero_extendqisi2
	l.addi  	r12,r12,7
	l.add   	r12,r7,r12
	l.lbz   	r15,0(r12)	 # zero_extendqisi2
	l.sfgts 	r11,r15
	l.bf	.L2182
	l.nop			# nop delay slot
	l.sub   	r15,r15,r11
	l.add   	r11,r7,r8
	l.sb    	0(r12),r15	    # movqi
	l.sub   	r5,r8,r5
	l.lbz   	r12,0(r11)	 # zero_extendqisi2
	l.lbz   	r8,1(r11)	 # zero_extendqisi2
	l.slli  	r12,r12,8
	l.or    	r12,r8,r12
	l.srai  	r8,r12,8
	l.sb    	0(r25),r8	    # movqi
	l.sb    	0(r23),r12	    # movqi
	l.lbz   	r12,2(r11)	 # zero_extendqisi2
	l.lbz   	r8,3(r11)	 # zero_extendqisi2
	l.slli  	r11,r12,8
	l.or    	r11,r11,r8
	l.add   	r5,r5,r11
	l.srai  	r8,r5,8
	l.sb    	0(r19),r8	    # movqi
	l.sb    	0(r17),r5	    # movqi
.L2167:
	l.add   	r5,r7,r31
	l.lbz   	r11,0(r5)	 # zero_extendqisi2
	l.lbz   	r12,1(r5)	 # zero_extendqisi2
	l.slli  	r11,r11,8
.L2168:
	l.or    	r5,r11,r12
	l.addi  	r27,r0,1	 # movqi: move immediate
	l.addi  	r19,r5,2
	l.addi  	r17,r5,3
	l.addi  	r23,r5,1
	l.add   	r19,r7,r19
	l.add   	r17,r7,r17
	l.add   	r25,r7,r5
	l.sfgtsi	r5,0
	l.bnf	.L2186	# delay slot filled
	l.add   	r23,r7,r23
	l.lbz   	r15,0(r19)	 # zero_extendqisi2
	l.lbz   	r8,0(r17)	 # zero_extendqisi2
	l.slli  	r15,r15,8
	l.lbz   	r11,0(r25)	 # zero_extendqisi2
	l.or    	r15,r15,r8
	l.lbz   	r12,0(r23)	 # zero_extendqisi2
	l.slli  	r11,r11,8
	l.add   	r15,r15,r5
	l.or    	r8,r12,r11
	l.addi  	r29,r15,3
	l.sfles 	r8,r29
	l.bf	.L2189	# delay slot filled
	l.andi  	r27,r27,0xff	 # zero_extendqisi2
	l.addi  	r27,r0,0	 # movqi: move immediate
	l.andi  	r27,r27,0xff	 # zero_extendqisi2
.L2189:
	l.sfeqi	r27,0
	l.bnf	.L2187	# delay slot filled
	l.sfeqi	r8,0
.L2180:
	l.j     	.L2168	# delay slot filled
	l.ori   	r31,r5,0	 # move reg to reg
.L2186:
	l.addi  	r5,r13,5
	l.add   	r2,r7,r2
	l.add   	r5,r7,r5
	l.lbz   	r11,0(r2)	 # zero_extendqisi2
	l.lbz   	r8,0(r5)	 # zero_extendqisi2
	l.sfne 	r8,r11
	l.bnf	.L2188
	l.nop			# nop delay slot
.L2171:
	l.lhz   	r5,16(r3)	 # zero_extendqisi2
	l.addi  	r4,r4,1
	l.sflts 	r4,r5
	l.bnf	.L2190	# delay slot filled
	l.addi  	r5,r5,-1
	l.addi  	r6,r6,2
.L2191:
	l.addi  	r4,r4,1
	l.lbz   	r2,0(r6)	 # zero_extendqisi2
	l.lbz   	r11,1(r6)	 # zero_extendqisi2
	l.sb    	-2(r6),r2	    # movqi
	l.sb    	-1(r6),r11	    # movqi
	l.lhz   	r5,16(r3)	 # zero_extendqisi2
	l.sfgts 	r5,r4
	l.bf	.L2191	# delay slot filled
	l.addi  	r6,r6,2
	l.addi  	r6,r6,-2
	l.addi  	r5,r5,-1
.L2190:
	l.lbz   	r2,5(r3)	 # zero_extendqisi2
	l.andi  	r5,r5,0xffff	 # zero_extendqisi2
	l.add   	r2,r7,r2
	l.srli  	r4,r5,8
	l.sh    	16(r3),r5	 # movhi
	l.addi  	r11,r0,0	 # move immediate I
	l.sb    	3(r2),r4	    # movqi
	l.lbz   	r2,5(r3)	 # zero_extendqisi2
	l.add   	r7,r7,r2
	l.lbz   	r2,17(r3)	 # zero_extendqisi2
	l.sb    	4(r7),r2	    # movqi
	l.addi	r1,r1,4
	l.lhz   	r2,14(r3)	 # zero_extendqisi2
	l.addi  	r2,r2,2
	l.sh    	14(r3),r2	 # movhi
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L2188:
	l.add   	r13,r7,r13
	l.add   	r21,r7,r21
	l.lbz   	r12,2(r13)	 # zero_extendqisi2
	l.lbz   	r11,0(r21)	 # zero_extendqisi2
	l.sfne 	r11,r12
	l.bf	.L2171
	l.nop			# nop delay slot
	l.slli  	r8,r8,8
	l.or    	r8,r8,r11
	l.add   	r8,r7,r8
	l.lbz   	r11,0(r8)	 # zero_extendqisi2
	l.sb    	0(r2),r11	    # movqi
	l.lbz   	r11,1(r8)	 # zero_extendqisi2
	l.sb    	1(r2),r11	    # movqi
	l.lbz   	r12,2(r8)	 # zero_extendqisi2
	l.lbz   	r11,0(r5)	 # zero_extendqisi2
	l.lbz   	r8,3(r8)	 # zero_extendqisi2
	l.lbz   	r2,0(r21)	 # zero_extendqisi2
	l.slli  	r12,r12,8
	l.slli  	r11,r11,8
	l.or    	r8,r12,r8
	l.or    	r2,r11,r2
	l.add   	r2,r8,r2
	l.srai  	r8,r2,8
	l.sb    	0(r5),r8	    # movqi
	l.j     	.L2171	# delay slot filled
	l.sb    	0(r21),r2	    # movqi
.LFE460:
	.size	dropCell, .-dropCell
	.align	4
.proc	assemblePage
	.type	assemblePage, @function
assemblePage:
.LFB462:
	l.sw    	-44(r1),r2	 # SI store
.LCFI610:
	l.sw    	-40(r1),r14	 # SI store
.LCFI611:
	l.sw    	-32(r1),r18	 # SI store
.LCFI612:
	l.sw    	-16(r1),r26	 # SI store
.LCFI613:
	l.sw    	-12(r1),r28	 # SI store
.LCFI614:
	l.sw    	-8(r1),r30	 # SI store
.LCFI615:
	l.sw    	-4(r1),r9	 # SI store
.LCFI616:
	l.sw    	-36(r1),r16	 # SI store
.LCFI617:
	l.sw    	-28(r1),r20	 # SI store
.LCFI618:
	l.sw    	-24(r1),r22	 # SI store
.LCFI619:
	l.sw    	-20(r1),r24	 # SI store
.LCFI620:
	l.lwz   	r2,60(r3)	 # SI load
	l.ori   	r28,r3,0	 # move reg to reg
	l.lwz   	r26,64(r3)	 # SI load
	l.lhz   	r2,22(r2)	 # zero_extendqisi2
	l.lbz   	r3,5(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-56
.LCFI621:
	l.addi  	r14,r4,-1
	l.sw    	8(r1),r3	 # SI store
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r30,r4,0	 # move reg to reg
	l.sfgesi	r14,0
	l.bnf	.L2197	# delay slot filled
	l.lhz   	r18,12(r28)	 # zero_extendqisi2
	l.add   	r2,r4,r4
	l.slli  	r20,r14,2
	l.add   	r18,r2,r18
	l.add   	r16,r14,r14
	l.sw    	4(r1),r2	 # SI store
	l.add   	r18,r26,r18
	l.add   	r16,r6,r16
	l.add   	r20,r5,r20
	l.lwz   	r2,0(r1)	 # SI load
.L2195:
	l.lhz   	r5,0(r16)	 # zero_extendqisi2
	l.sub   	r2,r2,r5
	l.addi  	r18,r18,-2
	l.srai  	r24,r2,8
	l.andi  	r22,r2,0xff	 # zero_extendqisi2
	l.add   	r3,r26,r2
	l.andi  	r24,r24,0xff	 # zero_extendqisi2
	l.sb    	1(r18),r22	    # movqi
	l.sb    	0(r18),r24	    # movqi
	l.addi  	r14,r14,-1
	l.lhz   	r5,0(r16)	 # zero_extendqisi2
	l.lwz   	r4,0(r20)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.addi  	r16,r16,-2
	l.sfgesi	r14,0
	l.bf	.L2195	# delay slot filled
	l.addi  	r20,r20,-4
.L2194:
	l.lwz   	r4,8(r1)	 # SI load
	l.srai  	r3,r30,8
	l.add   	r26,r26,r4
	l.sb    	3(r26),r3	    # movqi
	l.sb    	4(r26),r30	    # movqi
	l.sb    	5(r26),r24	    # movqi
	l.sb    	6(r26),r22	    # movqi
	l.sh    	16(r28),r30	 # movhi
	l.lhz   	r3,14(r28)	 # zero_extendqisi2
	l.lwz   	r4,0(r1)	 # SI load
	l.sub   	r3,r3,r4
	l.lwz   	r4,4(r1)	 # SI load
	l.sub   	r3,r3,r4
	l.add   	r2,r3,r2
	l.sh    	14(r28),r2	 # movhi
	l.addi	r1,r1,56
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L2197:
	l.add   	r4,r4,r4
	l.srli  	r24,r2,8
	l.andi  	r22,r2,0xff	 # zero_extendqisi2
	l.j     	.L2194	# delay slot filled
	l.sw    	4(r1),r4	 # SI store
.LFE462:
	.size	assemblePage, .-assemblePage
	.align	4
.proc	sqlite3DbMallocZero
	.type	sqlite3DbMallocZero, @function
sqlite3DbMallocZero:
.LFB90:
	l.sw    	-12(r1),r2	 # SI store
.LCFI622:
	l.sw    	-8(r1),r14	 # SI store
.LCFI623:
	l.sw    	-4(r1),r9	 # SI store
.LCFI624:
	l.addi  	r1,r1,-12
.LCFI625:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L2199	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
.L2199:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE90:
	.size	sqlite3DbMallocZero, .-sqlite3DbMallocZero
	.align	4
.proc	sqlite3ValueNew
	.type	sqlite3ValueNew, @function
sqlite3ValueNew:
.LFB539:
	l.sw    	-8(r1),r2	 # SI store
.LCFI626:
	l.sw    	-4(r1),r9	 # SI store
.LCFI627:
	l.addi  	r4,r0,240	 # move immediate I
	l.addi  	r1,r1,-8
.LCFI628:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L2201	# delay slot filled
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.sw    	16(r11),r2	 # SI store
	l.sh    	28(r11),r3	 # movhi
	l.addi  	r3,r0,5	 # movqi: move immediate
	l.sb    	30(r11),r3	    # movqi
.L2201:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE539:
	.size	sqlite3ValueNew, .-sqlite3ValueNew
	.align	4
.proc	sqlite3FindFunction
	.type	sqlite3FindFunction, @function
sqlite3FindFunction:
.LFB931:
	l.sw    	-32(r1),r18	 # SI store
.LCFI629:
	l.sw    	-28(r1),r20	 # SI store
.LCFI630:
	l.sw    	-24(r1),r22	 # SI store
.LCFI631:
	l.sw    	-20(r1),r24	 # SI store
.LCFI632:
	l.sw    	-16(r1),r26	 # SI store
.LCFI633:
	l.sw    	-12(r1),r28	 # SI store
.LCFI634:
	l.sw    	-4(r1),r9	 # SI store
.LCFI635:
	l.sw    	-44(r1),r2	 # SI store
.LCFI636:
	l.sw    	-40(r1),r14	 # SI store
.LCFI637:
	l.sw    	-36(r1),r16	 # SI store
.LCFI638:
	l.sw    	-8(r1),r30	 # SI store
.LCFI639:
	l.ori   	r18,r6,0	 # move reg to reg
	l.addi  	r1,r1,-48
.LCFI640:
	l.ori   	r28,r3,0	 # move reg to reg
	l.ori   	r24,r4,0	 # move reg to reg
	l.ori   	r22,r5,0	 # move reg to reg
	l.ori   	r26,r8,0	 # move reg to reg
	l.sfgesi	r6,0
	l.bnf	.L2222	# delay slot filled
	l.ori   	r20,r7,0	 # move reg to reg
.L2203:
	l.movhi  	r3,hi(sqlite3UpperToLower)
	l.lbz   	r2,0(r24)	 # zero_extendqisi2
	l.ori   	r3,r3,lo(sqlite3UpperToLower)
	l.addi  	r4,r0,23	 # move immediate I
	l.add   	r2,r2,r3
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.addi  	r2,r28,296
	l.add   	r3,r3,r22
	l.jal   	__modsi3	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r3,0(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	functionSearch	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L2215	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
	l.ori   	r16,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
.L2225:
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	matchQuality	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfgts 	r11,r14
	l.bnf	.L2205
	l.nop			# nop delay slot
	l.ori   	r16,r2,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
.L2205:
	l.lwz   	r2,8(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L2225	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sub   	r2,r0,r16
	l.or    	r2,r16,r2
	l.sfltsi	r2,0
	l.bnf	.L2226	# delay slot filled
	l.sub   	r2,r0,r26
	l.sfeqi	r26,0
.L2229:
	l.bf	.L2211	# delay slot filled
	l.sflesi	r14,5
	l.bf	.L2227	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lhs   	r2,0(r16)	 # extendhisi2_no_sext_mem
	l.sfeq 	r2,r18
	l.bf	.L2228	# delay slot filled
	l.sfeqi	r16,0
.L2227:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r22,33
	l.sfeqi	r11,0
	l.bf	.L2213	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi  	r2,r11,32
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.sw    	24(r11),r2	 # SI store
	l.sh    	0(r11),r18	 # movhi
	l.jal   	memcpy	# delay slot filled
	l.sb    	2(r11),r20	    # movqi
	l.lwz   	r2,24(r16)	 # SI load
	l.lwz   	r3,0(r1)	 # SI load
	l.add   	r22,r2,r22
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3FuncDefInsert	# delay slot filled
	l.sb    	0(r22),r2	    # movqi
	l.j     	.L2224	# delay slot filled
	l.lwz   	r2,16(r16)	 # SI load
.L2215:
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.sub   	r2,r0,r26
.L2226:
	l.or    	r2,r2,r26
	l.sfltsi	r2,0
	l.bf	.L2229	# delay slot filled
	l.sfeqi	r26,0
	l.movhi  	r3,hi(sqlite3GlobalFunctions)
	l.ori   	r4,r30,0	 # move reg to reg
	l.ori   	r3,r3,lo(sqlite3GlobalFunctions)
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	functionSearch	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L2213	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
.L2230:
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	matchQuality	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfgts 	r11,r14
	l.bnf	.L2209
	l.nop			# nop delay slot
	l.ori   	r16,r2,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
.L2209:
	l.lwz   	r2,8(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L2230	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L2211:
	l.sfeqi	r16,0
.L2228:
	l.bf	.L2213
	l.nop			# nop delay slot
	l.lwz   	r2,16(r16)	 # SI load
.L2224:
	l.sfnei	r2,0
	l.bnf	.L2223	# delay slot filled
	l.sub   	r2,r0,r26
.L2213:
	l.addi	r1,r1,48
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L2222:
	l.j     	.L2203	# delay slot filled
	l.addi  	r18,r0,-1	 # move immediate I
.L2223:
	l.or    	r26,r2,r26
	l.sfltsi	r26,0
	l.bf	.L2213
	l.nop			# nop delay slot
	l.lwz   	r3,12(r16)	 # SI load
	l.sub   	r2,r0,r3
	l.or    	r2,r3,r2
	l.srli  	r2,r2,31
	l.sfnei	r2,0
	l.bf	.L2213
	l.nop			# nop delay slot
	l.j     	.L2213	# delay slot filled
	l.ori   	r16,r2,0	 # move reg to reg
.LFE931:
	.size	sqlite3FindFunction, .-sqlite3FindFunction
	.align	4
.proc	setLikeOptFlag
	.type	setLikeOptFlag, @function
setLikeOptFlag:
.LFB977:
	l.lbs   	r6,0(r4)	 # extendqisi2_no_sext_mem
	l.sw    	-8(r1),r2	 # SI store
.LCFI641:
	l.sw    	-4(r1),r9	 # SI store
.LCFI642:
	l.ori   	r2,r5,0	 # move reg to reg
	l.sfeqi	r6,0
.LCFI643:
	l.bf	.L2232	# delay slot filled
	l.addi  	r1,r1,-8
	l.ori   	r6,r4,0	 # move reg to reg
	l.addi  	r6,r6,1
.L2237:
	l.lbs   	r7,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r7,0
	l.bf	.L2237	# delay slot filled
	l.addi  	r6,r6,1
	l.addi  	r6,r6,-1
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.sub   	r6,r6,r4
	l.ori   	r5,r5,65535
	l.and   	r6,r6,r5
.L2232:
	l.ori   	r5,r6,0	 # move reg to reg
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r6,r0,2	 # move immediate I
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L2231
	l.nop			# nop delay slot
	l.sb    	3(r11),r2	    # movqi
.L2231:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE977:
	.size	setLikeOptFlag, .-setLikeOptFlag
	.align	4
.proc	sqlite3VdbeCreate
	.type	sqlite3VdbeCreate, @function
sqlite3VdbeCreate:
.LFB544:
	l.sw    	-8(r1),r2	 # SI store
.LCFI644:
	l.sw    	-4(r1),r9	 # SI store
.LCFI645:
	l.addi  	r4,r0,216	 # move immediate I
	l.addi  	r1,r1,-8
.LCFI646:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L2239
	l.nop			# nop delay slot
	l.lwz   	r3,140(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2240	# delay slot filled
	l.sw    	0(r11),r2	 # SI store
	l.sw    	4(r3),r11	 # SI store
.L2240:
	l.sw    	8(r11),r3	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	4(r11),r3	 # SI store
	l.sw    	140(r2),r11	 # SI store
	l.movhi 	r2,hi(649854976)	 # move immediate M
	l.ori   	r2,r2,60069
	l.sw    	68(r11),r2	 # SI store
.L2239:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE544:
	.size	sqlite3VdbeCreate, .-sqlite3VdbeCreate
	.align	4
.proc	sqlite3VdbeMemFinalize
	.type	sqlite3VdbeMemFinalize, @function
sqlite3VdbeMemFinalize:
.LFB516:
	l.sw    	-20(r1),r2	 # SI store
.LCFI647:
	l.sw    	-16(r1),r14	 # SI store
.LCFI648:
	l.sw    	-8(r1),r18	 # SI store
.LCFI649:
	l.sw    	-4(r1),r9	 # SI store
.LCFI650:
	l.sw    	-12(r1),r16	 # SI store
.LCFI651:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-280
.LCFI652:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L2242	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
	l.lwz   	r2,20(r4)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2242	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,260	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.addi  	r5,r0,1	 # movhi: move immediate
	l.lwz   	r4,16(r14)	 # SI load
	l.sh    	36(r1),r5	 # movhi
	l.ori   	r3,r1,0	 # move reg to reg
	l.sw    	24(r1),r4	 # SI store
	l.sw    	248(r1),r14	 # SI store
	l.jalr  	r2	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.lwz   	r4,36(r14)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r3,16(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r1,8
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,240	 # move immediate I
	l.lwz   	r2,252(r1)	 # SI load
	l.sub   	r3,r0,r2
	l.or    	r2,r3,r2
	l.srli  	r2,r2,31
.L2242:
	l.addi	r1,r1,280
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE516:
	.size	sqlite3VdbeMemFinalize, .-sqlite3VdbeMemFinalize
	.align	4
.proc	sqlite3VdbeMemReleaseExternal
	.type	sqlite3VdbeMemReleaseExternal, @function
sqlite3VdbeMemReleaseExternal:
.LFB517:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.sw    	-12(r1),r2	 # SI store
.LCFI653:
	l.sw    	-4(r1),r9	 # SI store
.LCFI654:
	l.sw    	-8(r1),r14	 # SI store
.LCFI655:
	l.andi  	r5,r4,9248
	l.addi  	r1,r1,-12
.LCFI656:
	l.sfeqi	r5,0
	l.bf	.L2245	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.andi  	r14,r4,8192
	l.sfeqi	r14,0
	l.bnf	.L2249
	l.nop			# nop delay slot
	l.andi  	r3,r4,1024
	l.sfeqi	r3,0
	l.bf	.L2248
	l.nop			# nop delay slot
	l.lwz   	r5,32(r2)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L2250	# delay slot filled
	l.andi  	r4,r4,32
	l.jalr  	r5	# delay slot filled
	l.lwz   	r3,20(r2)	 # SI load
	l.sw    	32(r2),r14	 # SI store
.L2245:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L2248:
	l.andi  	r4,r4,32
.L2250:
	l.sfeqi	r4,0
	l.bf	.L2245
	l.nop			# nop delay slot
	l.lwz   	r3,0(r2)	 # SI load
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3RowSetClear	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L2249:
	l.jal   	sqlite3VdbeMemFinalize	# delay slot filled
	l.lwz   	r4,0(r3)	 # SI load
	l.addi	r1,r1,12
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3VdbeMemRelease	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE517:
	.size	sqlite3VdbeMemReleaseExternal, .-sqlite3VdbeMemReleaseExternal
	.align	4
.proc	sqlite3VdbeMemRelease
	.type	sqlite3VdbeMemRelease, @function
sqlite3VdbeMemRelease:
.LFB518:
	l.sw    	-4(r1),r9	 # SI store
.LCFI657:
	l.sw    	-8(r1),r2	 # SI store
.LCFI658:
	l.addi  	r1,r1,-8
.LCFI659:
	l.jal   	sqlite3VdbeMemReleaseExternal	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,16(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,36(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	20(r2),r3	 # SI store
	l.sw    	36(r2),r3	 # SI store
	l.sw    	32(r2),r3	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE518:
	.size	sqlite3VdbeMemRelease, .-sqlite3VdbeMemRelease
	.align	4
.proc	sqlite3VdbeDeleteUnpackedRecord
	.type	sqlite3VdbeDeleteUnpackedRecord, @function
sqlite3VdbeDeleteUnpackedRecord:
.LFB597:
	l.sw    	-8(r1),r16	 # SI store
.LCFI660:
	l.sw    	-4(r1),r9	 # SI store
.LCFI661:
	l.sw    	-16(r1),r2	 # SI store
.LCFI662:
	l.sw    	-12(r1),r14	 # SI store
.LCFI663:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI664:
	l.bf	.L2252	# delay slot filled
	l.addi  	r1,r1,-16
	l.lhz   	r3,6(r3)	 # zero_extendqisi2
	l.andi  	r2,r3,2
	l.sfeqi	r2,0
	l.bf	.L2254
	l.nop			# nop delay slot
	l.lhz   	r4,4(r16)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L2254	# delay slot filled
	l.lwz   	r2,16(r16)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
.L2257:
	l.lwz   	r5,36(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L2255	# delay slot filled
	l.addi  	r14,r14,1
	l.jal   	sqlite3VdbeMemRelease
	l.nop			# nop delay slot
	l.lhz   	r4,4(r16)	 # zero_extendqisi2
.L2255:
	l.sfles 	r4,r14
	l.bnf	.L2257	# delay slot filled
	l.addi  	r2,r2,240
	l.lhz   	r3,6(r16)	 # zero_extendqisi2
.L2254:
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bnf	.L2258
	l.nop			# nop delay slot
.L2252:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L2258:
	l.lwz   	r2,0(r16)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.LFE597:
	.size	sqlite3VdbeDeleteUnpackedRecord, .-sqlite3VdbeDeleteUnpackedRecord
	.align	4
.proc	releaseMemArray
	.type	releaseMemArray, @function
releaseMemArray:
.LFB571:
	l.sw    	-32(r1),r2	 # SI store
.LCFI665:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sub   	r3,r0,r4
	l.sw    	-4(r1),r9	 # SI store
.LCFI666:
	l.sw    	-28(r1),r14	 # SI store
.LCFI667:
	l.sw    	-24(r1),r16	 # SI store
.LCFI668:
	l.sw    	-20(r1),r18	 # SI store
.LCFI669:
	l.sw    	-16(r1),r20	 # SI store
.LCFI670:
	l.sw    	-12(r1),r22	 # SI store
.LCFI671:
	l.sw    	-8(r1),r24	 # SI store
.LCFI672:
	l.or    	r3,r3,r4
	l.sfgesi	r3,0
.LCFI673:
	l.bf	.L2259	# delay slot filled
	l.addi  	r1,r1,-32
	l.sub   	r3,r0,r2
	l.or    	r3,r2,r3
	l.sfgesi	r3,0
	l.bf	.L2259	# delay slot filled
	l.slli  	r3,r4,4
	l.slli  	r22,r4,8
	l.lwz   	r20,16(r2)	 # SI load
	l.sub   	r22,r22,r3
	l.add   	r22,r2,r22
	l.sfgeu 	r2,r22
	l.bf	.L2261	# delay slot filled
	l.lbz   	r24,30(r20)	 # zero_extendqisi2
	l.addi  	r14,r2,28
	l.j     	.L2264	# delay slot filled
	l.addi  	r16,r2,36
.L2262:
	l.lwz   	r5,0(r16)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L2263	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.jal   	sqlite3DbFree
	l.nop			# nop delay slot
	l.sw    	0(r16),r18	 # SI store
.L2263:
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.addi  	r2,r2,240
	l.sh    	0(r14),r3	 # movhi
	l.addi  	r16,r16,240
	l.sfgtu 	r22,r2
	l.bnf	.L2261	# delay slot filled
	l.addi  	r14,r14,240
.L2264:
	l.lhz   	r18,0(r14)	 # zero_extendqisi2
	l.andi  	r18,r18,9216
	l.sfeqi	r18,0
	l.bf	.L2262	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r2,r2,240
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.addi  	r16,r16,240
	l.sh    	0(r14),r3	 # movhi
	l.sfgtu 	r22,r2
	l.bf	.L2264	# delay slot filled
	l.addi  	r14,r14,240
.L2261:
	l.sb    	30(r20),r24	    # movqi
.L2259:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.LFE571:
	.size	releaseMemArray, .-releaseMemArray
	.align	4
.proc	sqlite3VdbeSetNumCols
	.type	sqlite3VdbeSetNumCols, @function
sqlite3VdbeSetNumCols:
.LFB578:
	l.sw    	-12(r1),r16	 # SI store
.LCFI674:
	l.ori   	r16,r4,0	 # move reg to reg
	l.lwz   	r4,108(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI675:
	l.sw    	-20(r1),r2	 # SI store
.LCFI676:
	l.sw    	-16(r1),r14	 # SI store
.LCFI677:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-8(r1),r18	 # SI store
.LCFI678:
	l.add   	r4,r4,r4
	l.lwz   	r18,0(r3)	 # SI load
	l.addi  	r1,r1,-20
.LCFI679:
	l.lwz   	r3,40(r3)	 # SI load
	l.jal   	releaseMemArray	# delay slot filled
	l.add   	r14,r16,r16
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,40(r2)	 # SI load
	l.slli  	r5,r14,8
	l.slli  	r4,r14,4
	l.sw    	108(r2),r16	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.sub   	r4,r5,r4
	l.sfeqi	r11,0
	l.bf	.L2266	# delay slot filled
	l.sw    	40(r2),r11	 # SI store
	l.sflesi	r14,0
	l.bf	.L2266	# delay slot filled
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.addi  	r4,r14,-1
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r11,r11,28
.L2270:
	l.sw    	-12(r11),r2	 # SI store
	l.sh    	0(r11),r3	 # movhi
	l.addi  	r4,r4,-1
	l.sfnei	r4,-1
	l.bf	.L2270	# delay slot filled
	l.addi  	r11,r11,240
.L2266:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE578:
	.size	sqlite3VdbeSetNumCols, .-sqlite3VdbeSetNumCols
	.align	4
.proc	sqlite3ValueFree
	.type	sqlite3ValueFree, @function
sqlite3ValueFree:
.LFB542:
	l.sw    	-8(r1),r2	 # SI store
.LCFI680:
	l.sw    	-4(r1),r9	 # SI store
.LCFI681:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI682:
	l.bf	.L2271	# delay slot filled
	l.addi  	r1,r1,-8
	l.jal   	sqlite3VdbeMemRelease
	l.nop			# nop delay slot
	l.lwz   	r3,16(r2)	 # SI load
	l.addi	r1,r1,8
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L2271:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE542:
	.size	sqlite3ValueFree, .-sqlite3ValueFree
	.align	4
.proc	freeP4
	.type	freeP4, @function
freeP4:
.LFB565:
	l.sw    	-16(r1),r14	 # SI store
.LCFI683:
	l.sw    	-8(r1),r18	 # SI store
.LCFI684:
	l.sw    	-4(r1),r9	 # SI store
.LCFI685:
	l.sw    	-20(r1),r2	 # SI store
.LCFI686:
	l.sw    	-12(r1),r16	 # SI store
.LCFI687:
	l.ori   	r14,r5,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI688:
	l.sfeqi	r5,0
	l.bf	.L2273	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r4,r4,16
	l.sfgtui	r4,15
	l.bnf	.L2285	# delay slot filled
	l.movhi  	r2,hi(.L2279)
.L2273:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L2285:
	l.slli  	r4,r4,2
	l.ori   	r2,r2,lo(.L2279)
	l.add   	r4,r4,r2
	l.lwz   	r2,0(r4)	 # SI load
	l.jr    	r2
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L2279:
	.word	.L2280
	.word	.L2280
	.word	.L2273
	.word	.L2280
	.word	.L2280
	.word	.L2280
	.word	.L2273
	.word	.L2273
	.word	.L2276
	.word	.L2277
	.word	.L2280
	.word	.L2278
	.word	.L2273
	.word	.L2273
	.word	.L2273
	.word	.L2280
	.section .text
.L2277:
	l.jal   	freeEphemeralFunction	# delay slot filled
	l.lwz   	r4,0(r5)	 # SI load
	l.lwz   	r5,4(r14)	 # SI load
	l.sflesi	r5,0
	l.bf	.L2280	# delay slot filled
	l.addi  	r2,r14,8
	l.addi  	r16,r0,0	 # move immediate I
.L2283:
	l.lwz   	r4,0(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2281
	l.nop			# nop delay slot
	l.lwz   	r6,4(r2)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L2286	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.jalr  	r6	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r5,4(r14)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
.L2286:
	l.sw    	0(r2),r3	 # SI store
.L2281:
	l.addi  	r16,r16,1
	l.sflts 	r16,r5
	l.bf	.L2283	# delay slot filled
	l.addi  	r2,r2,8
.L2280:
	l.addi	r1,r1,20
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L2278:
	l.addi	r1,r1,20
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	freeEphemeralFunction	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L2276:
	l.addi	r1,r1,20
	l.ori   	r3,r5,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3ValueFree	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.LFE565:
	.size	freeP4, .-freeP4
	.align	4
.proc	sqlite3VdbeDelete
	.type	sqlite3VdbeDelete, @function
sqlite3VdbeDelete:
.LFB589:
	l.sw    	-20(r1),r2	 # SI store
.LCFI689:
	l.sw    	-4(r1),r9	 # SI store
.LCFI690:
	l.sw    	-16(r1),r14	 # SI store
.LCFI691:
	l.sw    	-12(r1),r16	 # SI store
.LCFI692:
	l.sw    	-8(r1),r18	 # SI store
.LCFI693:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI694:
	l.bf	.L2287	# delay slot filled
	l.addi  	r1,r1,-20
	l.lwz   	r3,4(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2289	# delay slot filled
	l.lwz   	r18,0(r2)	 # SI load
	l.lwz   	r4,8(r2)	 # SI load
	l.sw    	8(r3),r4	 # SI store
	l.lwz   	r4,8(r2)	 # SI load
.L2290:
	l.sfeqi	r4,0
	l.bf	.L2291
	l.nop			# nop delay slot
	l.sw    	4(r4),r3	 # SI store
.L2291:
	l.lwz   	r14,20(r2)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L2292
	l.nop			# nop delay slot
	l.lwz   	r3,12(r2)	 # SI load
	l.sflesi	r3,0
	l.bf	.L2292	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L2293:
	l.lbs   	r4,1(r14)	 # extendqisi2_no_sext_mem
	l.lwz   	r5,16(r14)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	freeP4	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r3,12(r2)	 # SI load
	l.sfgts 	r3,r16
	l.bf	.L2293	# delay slot filled
	l.addi  	r14,r14,20
.L2292:
	l.lwz   	r4,52(r2)	 # SI load
	l.jal   	releaseMemArray	# delay slot filled
	l.lwz   	r3,56(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,32(r2)	 # SI load
	l.lwz   	r4,108(r2)	 # SI load
	l.lwz   	r3,40(r2)	 # SI load
	l.jal   	releaseMemArray	# delay slot filled
	l.add   	r4,r4,r4
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,40(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,204(r2)	 # SI load
	l.movhi 	r5,hi(-1241120768)	 # move immediate M
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r5,r5,50120
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.sw    	68(r2),r5	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,208(r2)	 # SI load
	l.addi	r1,r1,20
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L2289:
	l.lwz   	r4,8(r2)	 # SI load
	l.j     	.L2290	# delay slot filled
	l.sw    	140(r18),r4	 # SI store
.L2287:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE589:
	.size	sqlite3VdbeDelete, .-sqlite3VdbeDelete
	.align	4
.proc	sqlite3VdbeChangeP4
	.type	sqlite3VdbeChangeP4, @function
sqlite3VdbeChangeP4:
.LFB567:
	l.sw    	-28(r1),r2	 # SI store
.LCFI695:
	l.sw    	-24(r1),r14	 # SI store
.LCFI696:
	l.sw    	-20(r1),r16	 # SI store
.LCFI697:
	l.lwz   	r7,20(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI698:
	l.sw    	-16(r1),r18	 # SI store
.LCFI699:
	l.sw    	-12(r1),r20	 # SI store
.LCFI700:
	l.sw    	-8(r1),r22	 # SI store
.LCFI701:
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI702:
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r2,r6,0	 # move reg to reg
	l.sfeqi	r7,0
	l.bf	.L2296	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.lbz   	r5,30(r3)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bnf	.L2317	# delay slot filled
	l.sfeqi	r2,-6
	l.sfgesi	r4,0
	l.bnf	.L2312	# delay slot filled
	l.slli  	r18,r4,2
.L2320:
	l.slli  	r4,r4,4
	l.add   	r18,r18,r4
	l.add   	r18,r7,r18
	l.lbs   	r4,1(r18)	 # extendqisi2_no_sext_mem
	l.jal   	freeP4	# delay slot filled
	l.lwz   	r5,16(r18)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sfnei	r2,-14
	l.bnf	.L2311	# delay slot filled
	l.sw    	16(r18),r3	 # SI store
	l.sfnei	r14,0
	l.bnf	.L2313	# delay slot filled
	l.sfnei	r2,-6
	l.bnf	.L2314	# delay slot filled
	l.sfnei	r2,-16
	l.bnf	.L2315	# delay slot filled
	l.sfgesi	r2,0
	l.bnf	.L2311	# delay slot filled
	l.sfnei	r2,0
	l.bf	.L2318	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lbs   	r3,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L2318
	l.nop			# nop delay slot
	l.ori   	r2,r14,0	 # move reg to reg
	l.addi  	r2,r2,1
.L2319:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L2319	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r14
	l.ori   	r3,r3,65535
	l.and   	r2,r2,r3
	l.ori   	r4,r14,0	 # move reg to reg
.L2318:
	l.lwz   	r3,0(r16)	 # SI load
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # movqi: move immediate
	l.sw    	16(r18),r11	 # SI store
	l.sb    	1(r18),r4	    # movqi
.L2295:
	l.addi	r1,r1,28
.L2316:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L2296:
	l.sfeqi	r2,-6
.L2317:
	l.bf	.L2295	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi	r1,r1,28
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.j	freeP4	# delay slot filled	# sibcall s
	l.lwz   	r22,-8(r1)	 # SI load
.L2312:
	l.lwz   	r4,12(r16)	 # SI load
	l.addi  	r4,r4,-1
	l.sfltsi	r4,0
	l.bnf	.L2320	# delay slot filled
	l.slli  	r18,r4,2
	l.j     	.L2316	# delay slot filled
	l.addi	r1,r1,28
.L2311:
	l.sw    	16(r18),r14	 # SI store
	l.j     	.L2295	# delay slot filled
	l.sb    	1(r18),r2	    # movqi
.L2315:
	l.addi  	r2,r0,-6	 # movqi: move immediate
	l.sw    	16(r18),r14	 # SI store
	l.j     	.L2295	# delay slot filled
	l.sb    	1(r18),r2	    # movqi
.L2314:
	l.lhz   	r20,6(r14)	 # zero_extendqisi2
	l.addi  	r22,r20,3
	l.slli  	r22,r22,2
	l.add   	r22,r22,r20
	l.jal   	sqlite3Malloc	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sw    	16(r18),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L2303	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.lwz   	r4,8(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2304	# delay slot filled
	l.slli  	r3,r20,2
	l.addi  	r5,r2,12
	l.add   	r3,r5,r3
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.sw    	8(r2),r3	 # SI store
.L2304:
	l.addi  	r4,r0,-6	 # movqi: move immediate
	l.j     	.L2295	# delay slot filled
	l.sb    	1(r18),r4	    # movqi
.L2313:
	l.j     	.L2295	# delay slot filled
	l.sb    	1(r18),r14	    # movqi
.L2303:
	l.lwz   	r3,0(r16)	 # SI load
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sb    	30(r3),r4	    # movqi
	l.j     	.L2295	# delay slot filled
	l.sb    	1(r18),r11	    # movqi
.LFE567:
	.size	sqlite3VdbeChangeP4, .-sqlite3VdbeChangeP4
	.align	4
.proc	sqlite3IndexAffinityStr
	.type	sqlite3IndexAffinityStr, @function
sqlite3IndexAffinityStr:
.LFB982:
	l.sw    	-24(r1),r2	 # SI store
.LCFI703:
	l.sw    	-20(r1),r14	 # SI store
.LCFI704:
	l.sw    	-16(r1),r16	 # SI store
.LCFI705:
	l.sw    	-4(r1),r9	 # SI store
.LCFI706:
	l.sw    	-12(r1),r18	 # SI store
.LCFI707:
	l.sw    	-8(r1),r20	 # SI store
.LCFI708:
	l.lwz   	r14,28(r4)	 # SI load
	l.addi  	r1,r1,-24
.LCFI709:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sfnei	r14,0
	l.bnf	.L2329	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi	r1,r1,24
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3VdbeChangeP4	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L2329:
	l.lwz   	r3,4(r4)	 # SI load
	l.lwz   	r18,16(r4)	 # SI load
	l.addi  	r3,r3,2
	l.jal   	sqlite3Malloc	# delay slot filled
	l.lwz   	r20,0(r16)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L2323	# delay slot filled
	l.sw    	28(r2),r11	 # SI store
	l.lwz   	r3,4(r2)	 # SI load
	l.sflesi	r3,0
	l.bnf	.L2325	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L2332	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L2331:
	l.lwz   	r11,28(r2)	 # SI load
.L2325:
	l.lwz   	r5,8(r2)	 # SI load
	l.lwz   	r7,16(r18)	 # SI load
	l.add   	r5,r5,r14
	l.add   	r11,r11,r4
	l.lwz   	r3,0(r5)	 # SI load
	l.addi  	r4,r4,1
	l.slli  	r6,r3,2
	l.slli  	r5,r3,4
	l.add   	r3,r6,r5
	l.add   	r3,r7,r3
	l.lbz   	r3,18(r3)	 # zero_extendqisi2
	l.sb    	0(r11),r3	    # movqi
	l.lwz   	r3,4(r2)	 # SI load
	l.sfles 	r3,r4
	l.bnf	.L2331	# delay slot filled
	l.addi  	r14,r14,4
	l.lwz   	r11,28(r2)	 # SI load
	l.addi  	r3,r4,1
.L2324:
	l.add   	r4,r11,r4
	l.addi  	r5,r0,98	 # movqi: move immediate
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	0(r4),r5	    # movqi
	l.lwz   	r4,28(r2)	 # SI load
	l.add   	r3,r4,r3
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sb    	0(r3),r4	    # movqi
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r14,28(r2)	 # SI load
	l.addi	r1,r1,24
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3VdbeChangeP4	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L2323:
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	30(r20),r2	    # movqi
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L2332:
	l.j     	.L2324	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
.LFE982:
	.size	sqlite3IndexAffinityStr, .-sqlite3IndexAffinityStr
	.align	4
.proc	sqlite3TableAffinityStr
	.type	sqlite3TableAffinityStr, @function
sqlite3TableAffinityStr:
.LFB983:
	l.sw    	-16(r1),r2	 # SI store
.LCFI710:
	l.sw    	-12(r1),r14	 # SI store
.LCFI711:
	l.sw    	-4(r1),r9	 # SI store
.LCFI712:
	l.sw    	-8(r1),r16	 # SI store
.LCFI713:
	l.lwz   	r5,40(r4)	 # SI load
	l.addi  	r1,r1,-16
.LCFI714:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sfnei	r5,0
	l.bnf	.L2341	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3VdbeChangeP4	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L2341:
	l.lwz   	r3,12(r4)	 # SI load
	l.lwz   	r16,0(r14)	 # SI load
	l.jal   	sqlite3Malloc	# delay slot filled
	l.addi  	r3,r3,1
	l.sfeqi	r11,0
	l.bf	.L2335	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r3,12(r2)	 # SI load
	l.sfgtsi	r3,0
	l.bnf	.L2337	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r4,r6,0	 # move reg to reg
.L2339:
	l.lwz   	r7,16(r2)	 # SI load
	l.add   	r3,r11,r4
	l.add   	r7,r7,r6
	l.addi  	r4,r4,1
	l.lbz   	r7,18(r7)	 # zero_extendqisi2
	l.sb    	0(r3),r7	    # movqi
	l.lwz   	r3,12(r2)	 # SI load
	l.sfgts 	r3,r4
	l.bf	.L2339	# delay slot filled
	l.addi  	r6,r6,20
.L2337:
	l.add   	r3,r11,r3
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	0(r3),r4	    # movqi
	l.sw    	40(r2),r11	 # SI store
	l.addi	r1,r1,16
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3VdbeChangeP4	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L2335:
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	30(r16),r2	    # movqi
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE983:
	.size	sqlite3TableAffinityStr, .-sqlite3TableAffinityStr
	.align	4
.proc	sqlite3VdbeMemMove
	.type	sqlite3VdbeMemMove, @function
sqlite3VdbeMemMove:
.LFB534:
	l.sw    	-4(r1),r9	 # SI store
.LCFI715:
	l.sw    	-12(r1),r2	 # SI store
.LCFI716:
	l.sw    	-8(r1),r14	 # SI store
.LCFI717:
	l.addi  	r1,r1,-12
.LCFI718:
	l.ori   	r2,r4,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,240	 # move immediate I
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.sh    	28(r2),r3	 # movhi
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	32(r2),r3	 # SI store
	l.sw    	36(r2),r3	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE534:
	.size	sqlite3VdbeMemMove, .-sqlite3VdbeMemMove
	.align	4
.proc	sqlite3TransferBindings
	.type	sqlite3TransferBindings, @function
sqlite3TransferBindings:
.LFB679:
	l.sw    	-20(r1),r2	 # SI store
.LCFI719:
	l.sw    	-8(r1),r18	 # SI store
.LCFI720:
	l.sw    	-4(r1),r9	 # SI store
.LCFI721:
	l.sw    	-16(r1),r14	 # SI store
.LCFI722:
	l.sw    	-12(r1),r16	 # SI store
.LCFI723:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,52(r3)	 # SI load
	l.addi  	r1,r1,-20
.LCFI724:
	l.sflesi	r3,0
	l.bf	.L2344	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
	l.ori   	r16,r14,0	 # move reg to reg
.L2345:
	l.lwz   	r3,56(r18)	 # SI load
	l.lwz   	r4,56(r2)	 # SI load
	l.add   	r3,r3,r14
	l.add   	r4,r4,r14
	l.jal   	sqlite3VdbeMemMove	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r3,52(r2)	 # SI load
	l.sfgts 	r3,r16
	l.bf	.L2345	# delay slot filled
	l.addi  	r14,r14,240
.L2344:
	l.addi	r1,r1,20
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE679:
	.size	sqlite3TransferBindings, .-sqlite3TransferBindings
	.align	4
.proc	sqlite3VdbeMemSetDouble
	.type	sqlite3VdbeMemSetDouble, @function
sqlite3VdbeMemSetDouble:
.LFB529:
	l.sw    	-8(r1),r2	 # SI store
.LCFI725:
	l.sw    	-4(r1),r9	 # SI store
.LCFI726:
	l.addi  	r1,r1,-32
.LCFI727:
	l.ori   	r2,r3,0	 # move reg to reg
		l.sw    	16(r1), r4
		l.sw    	16+4(r1), r5
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
		l.lwz   	r5, 16(r1)
		l.lwz   	r6, 16+4(r1)
		l.sw    	8(r1), r5
		l.sw    	8+4(r1), r6
		l.lwz   	r7, 16(r1)
		l.lwz   	r8, 16+4(r1)
		l.lwz   	r5, 8(r1)
		l.lwz   	r6, 8+4(r1)
		l.or    	r3, r7, r0
		l.or    	r4, r8, r0
	l.jal   	__nedf2
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L2352	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,2	 # movqi: move immediate
	l.addi  	r3,r0,8	 # movhi: move immediate
	l.sb    	30(r2),r4	    # movqi
	l.sh    	28(r2),r3	 # movhi
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
		l.sw    	8(r2), r3
		l.sw    	8+4(r2), r4
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L2352:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetNull	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE529:
	.size	sqlite3VdbeMemSetDouble, .-sqlite3VdbeMemSetDouble
	.align	4
.proc	sqlite3VdbeMemSetRowSet
	.type	sqlite3VdbeMemSetRowSet, @function
sqlite3VdbeMemSetRowSet:
.LFB530:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.sw    	-20(r1),r2	 # SI store
.LCFI728:
	l.sw    	-8(r1),r18	 # SI store
.LCFI729:
	l.sw    	-4(r1),r9	 # SI store
.LCFI730:
	l.sw    	-16(r1),r14	 # SI store
.LCFI731:
	l.sw    	-12(r1),r16	 # SI store
.LCFI732:
	l.andi  	r4,r4,32
	l.addi  	r1,r1,-20
.LCFI733:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L2354	# delay slot filled
	l.lwz   	r18,16(r3)	 # SI load
	l.jal   	sqlite3RowSetClear	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.lbz   	r16,30(r18)	 # zero_extendqisi2
	l.sfeqi	r16,0
	l.bf	.L2356	# delay slot filled
	l.addi  	r3,r0,1	 # movhi: move immediate
.L2359:
	l.sh    	28(r2),r3	 # movhi
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L2354:
	l.jal   	sqlite3VdbeMemRelease
	l.nop			# nop delay slot
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r0,64	 # move immediate I
	l.sw    	36(r2),r11	 # SI store
	l.lbz   	r16,30(r18)	 # zero_extendqisi2
	l.sfeqi	r16,0
	l.bnf	.L2359	# delay slot filled
	l.addi  	r3,r0,1	 # movhi: move immediate
.L2356:
	l.lwz   	r14,36(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbMallocSize	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r3,r14,28
	l.addi  	r11,r11,-28
	l.sw    	16(r14),r3	 # SI store
	l.srli  	r11,r11,4
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	27(r14),r16	    # movqi
	l.sb    	26(r14),r3	    # movqi
	l.addi  	r3,r0,32	 # movhi: move immediate
	l.sw    	0(r14),r16	 # SI store
	l.sw    	4(r14),r18	 # SI store
	l.sw    	8(r14),r16	 # SI store
	l.sw    	12(r14),r16	 # SI store
	l.sw    	20(r14),r16	 # SI store
	l.sh    	24(r14),r11	 # movhi
	l.sw    	0(r2),r14	 # SI store
	l.sh    	28(r2),r3	 # movhi
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE530:
	.size	sqlite3VdbeMemSetRowSet, .-sqlite3VdbeMemSetRowSet
	.align	4
.proc	last_insert_rowid
	.type	last_insert_rowid, @function
last_insert_rowid:
.LFB954:
	l.lwz   	r4,24(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI734:
	l.sw    	-8(r1),r2	 # SI store
.LCFI735:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI736:
		l.lwz   	r5, 48(r4)
		l.lwz   	r6, 48+4(r4)
		l.sw    	0(r1), r5
		l.sw    	4(r1), r6
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r3,8
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r6,r0,4	 # movhi: move immediate
	l.sb    	38(r2),r3	    # movqi
	l.sh    	36(r2),r6	 # movhi
		l.lwz   	r4, 0(r1)
		l.lwz   	r5, 4(r1)
		l.sw    	8(r2), r4
		l.sw    	8+4(r2), r5
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE954:
	.size	last_insert_rowid, .-last_insert_rowid
	.align	4
.proc	changes
	.type	changes, @function
changes:
.LFB955:
	l.lwz   	r4,24(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI737:
	l.sw    	-12(r1),r2	 # SI store
.LCFI738:
	l.sw    	-8(r1),r14	 # SI store
.LCFI739:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI740:
	l.addi  	r3,r3,8
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.lwz   	r14,68(r4)	 # SI load
	l.srai  	r3,r14,31
	l.addi  	r4,r0,4	 # movhi: move immediate
	l.sw    	12(r2),r14	 # SI store
	l.sw    	8(r2),r3	 # SI store
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sh    	36(r2),r4	 # movhi
	l.sb    	38(r2),r3	    # movqi
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE955:
	.size	changes, .-changes
	.align	4
.proc	total_changes
	.type	total_changes, @function
total_changes:
.LFB956:
	l.lwz   	r4,24(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI741:
	l.sw    	-12(r1),r2	 # SI store
.LCFI742:
	l.sw    	-8(r1),r14	 # SI store
.LCFI743:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI744:
	l.addi  	r3,r3,8
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.lwz   	r14,72(r4)	 # SI load
	l.srai  	r3,r14,31
	l.addi  	r4,r0,4	 # movhi: move immediate
	l.sw    	12(r2),r14	 # SI store
	l.sw    	8(r2),r3	 # SI store
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sh    	36(r2),r4	 # movhi
	l.sb    	38(r2),r3	    # movqi
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE956:
	.size	total_changes, .-total_changes
	.align	4
.proc	sqlite3VdbeMemShallowCopy
	.type	sqlite3VdbeMemShallowCopy, @function
sqlite3VdbeMemShallowCopy:
.LFB532:
	l.sw    	-16(r1),r2	 # SI store
.LCFI745:
	l.sw    	-12(r1),r14	 # SI store
.LCFI746:
	l.sw    	-8(r1),r16	 # SI store
.LCFI747:
	l.sw    	-4(r1),r9	 # SI store
.LCFI748:
	l.addi  	r1,r1,-16
.LCFI749:
	l.ori   	r2,r4,0	 # move reg to reg
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemReleaseExternal	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	0(r14),r3	 # SI store
	l.lwz   	r3,4(r2)	 # SI load
	l.sw    	4(r14),r3	 # SI store
	l.lwz   	r3,8(r2)	 # SI load
	l.sw    	8(r14),r3	 # SI store
	l.lwz   	r3,12(r2)	 # SI load
	l.sw    	12(r14),r3	 # SI store
	l.lwz   	r3,16(r2)	 # SI load
	l.sw    	16(r14),r3	 # SI store
	l.lwz   	r3,20(r2)	 # SI load
	l.sw    	20(r14),r3	 # SI store
	l.lwz   	r3,24(r2)	 # SI load
	l.sw    	24(r14),r3	 # SI store
	l.lwz   	r3,28(r2)	 # SI load
	l.sw    	32(r14),r4	 # SI store
	l.sw    	28(r14),r3	 # SI store
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,1024
	l.sfne 	r3,r4
	l.bf	.L2364
	l.nop			# nop delay slot
	l.lwz   	r3,20(r2)	 # SI load
	l.lwz   	r2,36(r2)	 # SI load
	l.sfne 	r3,r2
	l.bnf	.L2364
	l.nop			# nop delay slot
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L2364:
	l.lhz   	r2,28(r14)	 # zero_extendqisi2
	l.addi  	r3,r0,-7169	 # move immediate I
	l.and   	r2,r2,r3
	l.or    	r16,r16,r2
	l.sh    	28(r14),r16	 # movhi
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE532:
	.size	sqlite3VdbeMemShallowCopy, .-sqlite3VdbeMemShallowCopy
	.align	4
.proc	sqlite3PcacheFetch
	.type	sqlite3PcacheFetch, @function
sqlite3PcacheFetch:
.LFB218:
	l.sw    	-16(r1),r18	 # SI store
.LCFI750:
	l.sub   	r18,r0,r5
	l.sw    	-28(r1),r2	 # SI store
.LCFI751:
	l.or    	r18,r18,r5
	l.sw    	-24(r1),r14	 # SI store
.LCFI752:
	l.srli  	r18,r18,31
	l.sw    	-20(r1),r16	 # SI store
.LCFI753:
	l.sw    	-12(r1),r20	 # SI store
.LCFI754:
	l.sw    	-8(r1),r22	 # SI store
.LCFI755:
	l.sw    	-4(r1),r9	 # SI store
.LCFI756:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI757:
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r22,r6,0	 # move reg to reg
	l.lwz   	r14,40(r3)	 # SI load
	l.sfeqi	r18,0
	l.bnf	.L2396	# delay slot filled
	l.ori   	r20,r18,0	 # move reg to reg
.L2370:
	l.sfeqi	r14,0
.L2405:
	l.bf	.L2395	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r4,r4,lo(sqlite3Config)
	l.ori   	r5,r20,0	 # move reg to reg
	l.lwz   	r11,116(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sub   	r3,r0,r11
	l.or    	r3,r11,r3
	l.sfltsi	r3,0
	l.bf	.L2372	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L2395:
	l.sfeqi	r18,0
	l.bf	.L2403	# delay slot filled
	l.sfeqi	r14,0
	l.lwz   	r7,8(r2)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L2374
	l.nop			# nop delay slot
.L2392:
	l.lhs   	r3,22(r7)	 # extendhisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L2376
	l.nop			# nop delay slot
	l.lhz   	r3,20(r7)	 # zero_extendqisi2
	l.andi  	r3,r3,4
	l.sfnei	r3,0
	l.bnf	.L2377
	l.nop			# nop delay slot
.L2376:
	l.lwz   	r7,32(r7)	 # SI load
	l.sfnei	r7,0
	l.bf	.L2392
	l.nop			# nop delay slot
.L2374:
	l.lwz   	r7,4(r2)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L2378
	l.nop			# nop delay slot
	l.lhs   	r3,22(r7)	 # extendhisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bnf	.L2391
	l.nop			# nop delay slot
	l.j     	.L2401	# delay slot filled
	l.lwz   	r3,36(r2)	 # SI load
.L2397:
	l.lhs   	r3,22(r7)	 # extendhisi2_no_sext_mem
	l.sfnei	r3,0
	l.bnf	.L2377
	l.nop			# nop delay slot
.L2391:
	l.lwz   	r7,32(r7)	 # SI load
	l.sfeqi	r7,0
	l.bnf	.L2397
	l.nop			# nop delay slot
.L2378:
	l.movhi  	r4,hi(sqlite3Config)
.L2404:
	l.lwz   	r3,40(r2)	 # SI load
	l.ori   	r4,r4,lo(sqlite3Config)
	l.addi  	r5,r0,2	 # move immediate I
	l.lwz   	r11,116(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
.L2372:
	l.sfeqi	r14,0
.L2403:
	l.bf	.L2381	# delay slot filled
	l.sfnei	r20,0
	l.lwz   	r4,0(r14)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L2398	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L2382:
	l.lhs   	r3,22(r14)	 # extendhisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L2383
	l.nop			# nop delay slot
	l.lwz   	r4,12(r2)	 # SI load
	l.addi  	r4,r4,1
	l.sw    	12(r2),r4	 # SI store
.L2383:
	l.addi  	r3,r3,1
	l.sfnei	r16,1
	l.bnf	.L2399	# delay slot filled
	l.sh    	22(r14),r3	 # movhi
.L2384:
	l.sw    	0(r22),r14	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
.L2368:
	l.addi	r1,r1,28
.L2402:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L2396:
	l.sub   	r3,r0,r14
	l.or    	r3,r14,r3
	l.sfltsi	r3,0
	l.bnf	.L2400	# delay slot filled
	l.movhi  	r18,hi(sqlite3Config)
.L2369:
	l.lwz   	r18,28(r2)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L2370	# delay slot filled
	l.addi  	r20,r0,2	 # move immediate I
	l.lwz   	r18,0(r2)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L2405	# delay slot filled
	l.sfeqi	r14,0
	l.addi  	r18,r0,1	 # move immediate I
	l.j     	.L2405	# delay slot filled
	l.ori   	r20,r18,0	 # move reg to reg
.L2400:
	l.lwz   	r4,24(r2)	 # SI load
	l.lwz   	r3,20(r2)	 # SI load
	l.add   	r3,r4,r3
	l.ori   	r18,r18,lo(sqlite3Config)
	l.addi  	r3,r3,36
	l.lwz   	r11,104(r18)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L2368	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.lwz   	r5,108(r18)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jalr  	r5	# delay slot filled
	l.lwz   	r4,16(r2)	 # SI load
	l.j     	.L2369	# delay slot filled
	l.sw    	40(r2),r14	 # SI store
.L2399:
	l.j     	.L2384	# delay slot filled
	l.sw    	44(r2),r14	 # SI store
.L2377:
	l.lwz   	r3,36(r2)	 # SI load
.L2401:
	l.lwz   	r11,32(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r7,0	 # move reg to reg
	l.xori  	r3,r11,5
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L2378	# delay slot filled
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfltsi	r3,0
	l.bnf	.L2404	# delay slot filled
	l.movhi  	r4,hi(sqlite3Config)
	l.j     	.L2402	# delay slot filled
	l.addi	r1,r1,28
.L2381:
	l.sw    	0(r22),r14	 # SI store
	l.bf	.L2368	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.j     	.L2368	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
.L2398:
	l.lwz   	r5,24(r2)	 # SI load
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r5,36
	l.lwz   	r3,24(r2)	 # SI load
	l.addi  	r4,r14,36
	l.addi  	r3,r3,36
	l.sw    	4(r14),r4	 # SI store
	l.add   	r3,r14,r3
	l.sw    	24(r14),r2	 # SI store
	l.sw    	0(r14),r3	 # SI store
	l.j     	.L2382	# delay slot filled
	l.sw    	12(r14),r16	 # SI store
.LFE218:
	.size	sqlite3PcacheFetch, .-sqlite3PcacheFetch
	.align	4
.proc	btreePageLookup
	.type	btreePageLookup, @function
btreePageLookup:
.LFB386:
	l.sw    	-12(r1),r2	 # SI store
.LCFI758:
	l.sw    	-8(r1),r14	 # SI store
.LCFI759:
	l.sw    	-4(r1),r9	 # SI store
.LCFI760:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r1,r1,-16
.LCFI761:
	l.lbz   	r11,14(r3)	 # zero_extendqisi2
	l.sw    	0(r1),r2	 # SI store
	l.sfeqi	r11,0
	l.bf	.L2407	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r4,36(r3)	 # SI load
	l.xori  	r5,r4,13
	l.sub   	r6,r0,r5
	l.or    	r5,r6,r5
	l.sfgesi	r5,0
	l.bf	.L2416	# delay slot filled
	l.sub   	r11,r0,r4
	l.or    	r11,r11,r4
	l.xori  	r11,r11,0xffff
	l.srli  	r11,r11,31
	l.sfeqi	r11,0
	l.bnf	.L2419	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L2407:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L2416:
	l.addi  	r5,r0,0	 # move immediate I
.L2419:
	l.lwz   	r3,160(r3)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3PcacheFetch	# delay slot filled
	l.ori   	r6,r1,0	 # move reg to reg
	l.lwz   	r5,0(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L2407	# delay slot filled
	l.ori   	r11,r5,0	 # move reg to reg
	l.lwz   	r11,16(r5)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L2409	# delay slot filled
	l.lwz   	r3,4(r5)	 # SI load
	l.ori   	r11,r3,0	 # move reg to reg
.L2409:
	l.lwz   	r3,0(r5)	 # SI load
	l.sw    	68(r11),r5	 # SI store
	l.sw    	64(r11),r3	 # SI store
	l.sw    	60(r11),r14	 # SI store
	l.sw    	72(r11),r2	 # SI store
	l.sfnei	r2,1
	l.bnf	.L2417	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.sb    	5(r11),r3	    # movqi
.L2418:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L2417:
	l.addi  	r3,r0,100	 # move immediate I
	l.j     	.L2418	# delay slot filled
	l.sb    	5(r11),r3	    # movqi
.LFE386:
	.size	btreePageLookup, .-btreePageLookup
	.align	4
.proc	sqlite3MemJournalOpen
	.type	sqlite3MemJournalOpen, @function
sqlite3MemJournalOpen:
.LFB704:
	l.sw    	-4(r1),r2	 # SI store
.LCFI762:
	l.movhi  	r4,hi(MemJournalMethods)
	l.addi  	r1,r1,-4
.LCFI763:
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r4,r4,lo(MemJournalMethods)
	l.addi	r1,r1,4
	l.sw    	4(r3),r2	 # SI store
	l.sw    	8(r3),r2	 # SI store
	l.sw    	12(r3),r2	 # SI store
	l.sw    	16(r3),r2	 # SI store
	l.sw    	20(r3),r2	 # SI store
	l.sw    	24(r3),r2	 # SI store
	l.sw    	28(r3),r2	 # SI store
	l.sw    	0(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE704:
	.size	sqlite3MemJournalOpen, .-sqlite3MemJournalOpen
	.align	4
.proc	memjrnlTruncate
	.type	memjrnlTruncate, @function
memjrnlTruncate:
.LFB700:
	l.sw    	-8(r1),r14	 # SI store
.LCFI764:
	l.sw    	-4(r1),r9	 # SI store
.LCFI765:
	l.sw    	-12(r1),r2	 # SI store
.LCFI766:
	l.lwz   	r4,4(r3)	 # SI load
	l.addi  	r1,r1,-12
.LCFI767:
	l.sfeqi	r4,0
	l.bf	.L2422	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
.L2425:
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r2,0(r4)	 # SI load
	l.sfnei	r2,0
	l.bf	.L2425	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L2422:
	l.jal   	sqlite3MemJournalOpen	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi	r1,r1,12
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE700:
	.size	memjrnlTruncate, .-memjrnlTruncate
	.align	4
.proc	memjrnlClose
	.type	memjrnlClose, @function
memjrnlClose:
.LFB701:
	l.sw    	-4(r1),r9	 # SI store
.LCFI768:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-4
.LCFI769:
	l.jal   	memjrnlTruncate	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE701:
	.size	memjrnlClose, .-memjrnlClose
	.align	4
.proc	openSubJournal
	.type	openSubJournal, @function
openSubJournal:
.LFB324:
	l.lwz   	r4,60(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI770:
	l.lwz   	r11,0(r4)	 # SI load
	l.sfeqi	r11,0
.LCFI771:
	l.bf	.L2428	# delay slot filled
	l.addi  	r1,r1,-4
	l.lwz   	r5,64(r3)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r4,0(r5)	 # SI load
	l.sfne 	r4,r11
	l.bnf	.L2433
	l.nop			# nop delay slot
.L2428:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L2433:
	l.lbz   	r4,5(r3)	 # zero_extendqisi2
	l.sfeqi	r4,4
	l.bf	.L2429
	l.nop			# nop delay slot
	l.lbz   	r4,22(r3)	 # zero_extendqisi2
	l.sfeq 	r4,r11
	l.bf	.L2430	# delay slot filled
	l.addi  	r6,r0,8222	 # move immediate I
.L2429:
	l.jal   	sqlite3MemJournalOpen	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L2430:
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r8,24(r3)	 # SI load
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr	r8	# delay slot filled	# sibcall Rsc
	l.ori   	r7,r4,0	 # move reg to reg
.LFE324:
	.size	openSubJournal, .-openSubJournal
	.align	4
.proc	sqlite3PcacheTruncate
	.type	sqlite3PcacheTruncate, @function
sqlite3PcacheTruncate:
.LFB227:
	l.sw    	-16(r1),r2	 # SI store
.LCFI772:
	l.sw    	-12(r1),r14	 # SI store
.LCFI773:
	l.sw    	-8(r1),r16	 # SI store
.LCFI774:
	l.sw    	-4(r1),r9	 # SI store
.LCFI775:
	l.lwz   	r2,40(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI776:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L2434	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L2443	# delay slot filled
	l.sfeqi	r14,0
	l.j     	.L2445
	l.nop			# nop delay slot
.L2437:
	l.sfnei	r2,0
	l.bnf	.L2436	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L2443:
	l.lwz   	r4,12(r3)	 # SI load
	l.sfleu 	r4,r14
	l.bf	.L2437	# delay slot filled
	l.lwz   	r2,28(r3)	 # SI load
	l.jal   	sqlite3PcacheMakeClean
	l.nop			# nop delay slot
	l.sfnei	r2,0
	l.bf	.L2443	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L2436:
	l.sfeqi	r14,0
.L2445:
	l.bnf	.L2444	# delay slot filled
	l.addi  	r4,r14,1
	l.lwz   	r2,44(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2440	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r3,0(r2)	 # SI load
	l.movhi  	r2,hi(sqlite3Config)
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r5,20(r16)	 # SI load
	l.jal   	memset	# delay slot filled
	l.ori   	r2,r2,lo(sqlite3Config)
	l.lwz   	r3,40(r16)	 # SI load
	l.lwz   	r2,128(r2)	 # SI load
	l.addi	r1,r1,16
	l.addi  	r4,r0,2	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.lwz   	r16,-8(r1)	 # SI load
	l.jr	r2		# sibcall r
	l.lwz	r2,-16(r1)

.L2444:
.L2440:
	l.movhi  	r2,hi(sqlite3Config)
	l.lwz   	r3,40(r16)	 # SI load
	l.ori   	r2,r2,lo(sqlite3Config)
	l.lwz   	r2,128(r2)	 # SI load
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.lwz   	r16,-8(r1)	 # SI load
	l.jr	r2		# sibcall r
	l.lwz	r2,-16(r1)

.L2434:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE227:
	.size	sqlite3PcacheTruncate, .-sqlite3PcacheTruncate
	.align	4
.proc	pager_reset
	.type	pager_reset, @function
pager_reset:
.LFB283:
	l.sw    	-8(r1),r2	 # SI store
.LCFI777:
	l.sw    	-4(r1),r9	 # SI store
.LCFI778:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,36(r3)	 # SI load
	l.sfnei	r3,0
.LCFI779:
	l.bf	.L2446	# delay slot filled
	l.addi  	r1,r1,-8
	l.lwz   	r4,164(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2448	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L2450:
	l.sw    	16(r4),r3	 # SI store
	l.lwz   	r4,40(r4)	 # SI load
	l.sfnei	r4,0
	l.bf	.L2450
	l.nop			# nop delay slot
.L2448:
	l.lwz   	r3,160(r2)	 # SI load
	l.jal   	sqlite3PcacheTruncate	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	21(r2),r3	    # movqi
.L2446:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE283:
	.size	pager_reset, .-pager_reset
	.align	4
.proc	pager_unlock
	.type	pager_unlock, @function
pager_unlock:
.LFB286:
	l.sw    	-16(r1),r2	 # SI store
.LCFI780:
	l.sw    	-4(r1),r9	 # SI store
.LCFI781:
	l.sw    	-12(r1),r14	 # SI store
.LCFI782:
	l.sw    	-8(r1),r16	 # SI store
.LCFI783:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r16,4(r3)	 # zero_extendqisi2
	l.sfnei	r16,0
.LCFI784:
	l.bf	.L2452	# delay slot filled
	l.addi  	r1,r1,-16
	l.lwz   	r14,60(r3)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2454
	l.nop			# nop delay slot
	l.lwz   	r11,4(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	0(r14),r16	 # SI store
.L2454:
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.lwz   	r3,52(r2)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	releaseAllSavepoints	# delay slot filled
	l.sw    	52(r2),r4	 # SI store
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	21(r2),r3	    # movqi
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2455
	l.nop			# nop delay slot
	l.lwz   	r11,32(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L2455
	l.nop			# nop delay slot
	l.sw    	36(r2),r11	 # SI store
.L2456:
	l.jal   	pager_reset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r3,r0,0	 # movqi: move immediate
.L2458:
	l.sb    	18(r2),r3	    # movqi
	l.sb    	14(r2),r3	    # movqi
.L2452:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L2455:
	l.lwz   	r3,36(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2458	# delay slot filled
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L2456	# delay slot filled
	l.sw    	36(r2),r4	 # SI store
.LFE286:
	.size	pager_unlock, .-pager_unlock
	.align	4
.proc	pager_error
	.type	pager_error, @function
pager_error:
.LFB287:
	l.sw    	-8(r1),r2	 # SI store
.LCFI785:
	l.sw    	-4(r1),r9	 # SI store
.LCFI786:
	l.ori   	r2,r4,0	 # move reg to reg
	l.andi  	r4,r4,255
	l.sfeqi	r4,10
.LCFI787:
	l.bf	.L2460	# delay slot filled
	l.addi  	r1,r1,-8
	l.sfeqi	r4,13
	l.bnf	.L2463	# delay slot filled
	l.sfnei	r4,11
.L2460:
	l.lbz   	r4,14(r3)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L2461	# delay slot filled
	l.sw    	36(r3),r2	 # SI store
	l.lwz   	r4,160(r3)	 # SI load
	l.lwz   	r4,12(r4)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L2464
	l.nop			# nop delay slot
.L2461:
	l.addi	r1,r1,8
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L2463:
	l.bnf	.L2460	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L2464:
	l.jal   	pager_unlock
	l.nop			# nop delay slot
	l.addi	r1,r1,8
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE287:
	.size	pager_error, .-pager_error
	.align	4
.proc	sqlite3PagerPagecount
	.type	sqlite3PagerPagecount, @function
sqlite3PagerPagecount:
.LFB306:
	l.sw    	-16(r1),r2	 # SI store
.LCFI788:
	l.sw    	-12(r1),r14	 # SI store
.LCFI789:
	l.sw    	-8(r1),r16	 # SI store
.LCFI790:
	l.sw    	-4(r1),r9	 # SI store
.LCFI791:
	l.lwz   	r14,36(r3)	 # SI load
	l.addi  	r1,r1,-24
.LCFI792:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r14,0
	l.bf	.L2466	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
	l.lbz   	r3,21(r3)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L2467	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r12,24(r2)	 # SI load
.L2468:
	l.lwz   	r3,124(r2)	 # SI load
	l.sfleu 	r12,r3
	l.bf	.L2483	# delay slot filled
	l.sfeqi	r16,0
	l.sw    	124(r2),r12	 # SI store
.L2483:
	l.bf	.L2466
	l.nop			# nop delay slot
	l.sw    	0(r16),r12	 # SI store
.L2466:
	l.addi	r1,r1,24
.L2482:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L2467:
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,56(r2)	 # SI load
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.lwz   	r4,0(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2469
	l.nop			# nop delay slot
	l.lwz   	r11,24(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L2479	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
	l.sfgtsi	r3,0
	l.bnf	.L2480	# delay slot filled
	l.sfnei	r3,0
.L2471:
	l.lwz   	r6,120(r2)	 # SI load
	l.srai  	r5,r6,31
	l.sfgts 	r5,r3
	l.bf	.L2474	# delay slot filled
	l.addi  	r12,r0,1	 # move immediate I
	l.sfne 	r5,r3
	l.bnf	.L2481	# delay slot filled
	l.sfgtu 	r6,r4
.L2473:
	l.jal   	__divdi3
	l.nop			# nop delay slot
.L2474:
	l.lbz   	r3,14(r2)	 # zero_extendqisi2
.L2484:
	l.sfeqi	r3,0
	l.bf	.L2468	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sw    	24(r2),r12	 # SI store
	l.sw    	32(r2),r12	 # SI store
	l.j     	.L2468	# delay slot filled
	l.sb    	21(r2),r5	    # movqi
.L2481:
	l.bnf	.L2473	# delay slot filled
	l.addi  	r12,r0,1	 # move immediate I
	l.j     	.L2484	# delay slot filled
	l.lbz   	r3,14(r2)	 # zero_extendqisi2
.L2469:
	l.lwz   	r6,120(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L2473	# delay slot filled
	l.srai  	r5,r6,31
.L2479:
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	pager_error	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L2482	# delay slot filled
	l.addi	r1,r1,24
.L2480:
	l.bf	.L2478	# delay slot filled
	l.sfnei	r4,0
	l.bf	.L2471
	l.nop			# nop delay slot
.L2478:
	l.lwz   	r6,120(r2)	 # SI load
	l.j     	.L2473	# delay slot filled
	l.srai  	r5,r6,31
.LFE306:
	.size	sqlite3PagerPagecount, .-sqlite3PagerPagecount
	.align	4
.proc	sqlite3PagerSetPagesize
	.type	sqlite3PagerSetPagesize, @function
sqlite3PagerSetPagesize:
.LFB302:
	l.sw    	-32(r1),r2	 # SI store
.LCFI793:
	l.sw    	-28(r1),r14	 # SI store
.LCFI794:
	l.sw    	-24(r1),r16	 # SI store
.LCFI795:
	l.sw    	-4(r1),r9	 # SI store
.LCFI796:
	l.sw    	-20(r1),r18	 # SI store
.LCFI797:
	l.sw    	-16(r1),r20	 # SI store
.LCFI798:
	l.sw    	-12(r1),r22	 # SI store
.LCFI799:
	l.sw    	-8(r1),r24	 # SI store
.LCFI800:
	l.lwz   	r14,36(r3)	 # SI load
	l.addi  	r1,r1,-32
.LCFI801:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r14,0
	l.bf	.L2486	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
	l.lhz   	r18,0(r4)	 # zero_extendqisi2
	l.sfnei	r18,0
	l.bnf	.L2492
	l.nop			# nop delay slot
	l.lwz   	r3,120(r3)	 # SI load
	l.sfeq 	r18,r3
	l.bf	.L2488
	l.nop			# nop delay slot
	l.lbz   	r4,13(r2)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bnf	.L2493
	l.nop			# nop delay slot
	l.lwz   	r4,160(r2)	 # SI load
.L2496:
	l.lwz   	r20,12(r4)	 # SI load
	l.sfnei	r20,0
	l.bnf	.L2494
	l.nop			# nop delay slot
.L2488:
	l.sh    	0(r16),r3	 # movhi
.L2486:
	l.addi	r1,r1,32
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L2494:
	l.jal   	pcache1Alloc	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L2495	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.jal   	pager_reset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,148(r2)	 # SI load
	l.jal   	pcache1Free	# delay slot filled
	l.sw    	120(r2),r18	 # SI store
	l.lwz   	r22,160(r2)	 # SI load
	l.sw    	148(r2),r24	 # SI store
	l.lwz   	r3,40(r22)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2491	# delay slot filled
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r4,132(r4)	 # SI load
	l.jalr  	r4
	l.nop			# nop delay slot
	l.sw    	40(r22),r20	 # SI store
.L2491:
	l.sw    	20(r22),r18	 # SI store
.L2492:
	l.lwz   	r3,120(r2)	 # SI load
	l.j     	.L2486	# delay slot filled
	l.sh    	0(r16),r3	 # movhi
.L2493:
	l.lwz   	r4,24(r2)	 # SI load
	l.sfnei	r4,0
	l.bf	.L2488
	l.nop			# nop delay slot
	l.j     	.L2496	# delay slot filled
	l.lwz   	r4,160(r2)	 # SI load
.L2495:
	l.lwz   	r3,120(r2)	 # SI load
	l.addi  	r14,r0,7	 # move immediate I
	l.j     	.L2486	# delay slot filled
	l.sh    	0(r16),r3	 # movhi
.LFE302:
	.size	sqlite3PagerSetPagesize, .-sqlite3PagerSetPagesize
	.align	4
.proc	pager_end_transaction
	.type	pager_end_transaction, @function
pager_end_transaction:
.LFB289:
	l.sw    	-28(r1),r2	 # SI store
.LCFI802:
	l.sw    	-20(r1),r16	 # SI store
.LCFI803:
	l.sw    	-12(r1),r20	 # SI store
.LCFI804:
	l.sw    	-4(r1),r9	 # SI store
.LCFI805:
	l.sw    	-24(r1),r14	 # SI store
.LCFI806:
	l.sw    	-16(r1),r18	 # SI store
.LCFI807:
	l.sw    	-8(r1),r22	 # SI store
.LCFI808:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r5,14(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-36
.LCFI809:
	l.ori   	r20,r4,0	 # move reg to reg
	l.sfleui	r5,1
	l.bf	.L2498	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.jal   	releaseAllSavepoints
	l.nop			# nop delay slot
	l.lwz   	r18,60(r2)	 # SI load
	l.lwz   	r14,0(r18)	 # SI load
	l.sfeq 	r14,r16
	l.bf	.L2499	# delay slot filled
	l.ori   	r22,r14,0	 # move reg to reg
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.sfnei	r3,4
	l.bnf	.L2538	# delay slot filled
	l.sfnei	r3,3
	l.bnf	.L2539
	l.nop			# nop delay slot
	l.lbz   	r16,4(r2)	 # zero_extendqisi2
	l.sfnei	r16,0
	l.bf	.L2505	# delay slot filled
	l.sfnei	r3,1
	l.bnf	.L2505	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r11,4(r14)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
	l.sw    	0(r18),r16	 # SI store
	l.lbz   	r3,11(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L2536
	l.nop			# nop delay slot
.L2501:
	l.lwz   	r16,160(r2)	 # SI load
	l.lwz   	r3,0(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2515
	l.nop			# nop delay slot
.L2534:
	l.jal   	sqlite3PcacheMakeClean
	l.nop			# nop delay slot
	l.lwz   	r3,0(r16)	 # SI load
	l.sfnei	r3,0
	l.bf	.L2534
	l.nop			# nop delay slot
.L2515:
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.lwz   	r3,52(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	52(r2),r3	 # SI store
	l.sw    	40(r2),r3	 # SI store
.L2499:
	l.lbz   	r3,4(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L2540
	l.nop			# nop delay slot
	l.lbz   	r3,14(r2)	 # zero_extendqisi2
	l.sfnei	r3,5
	l.bnf	.L2541	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L2519:
	l.addi  	r3,r0,0	 # movqi: move immediate
.L2546:
	l.addi  	r4,r0,0	 # move immediate I
	l.sb    	19(r2),r3	    # movqi
	l.sb    	16(r2),r3	    # movqi
	l.sb    	15(r2),r3	    # movqi
	l.sw    	28(r2),r4	 # SI store
	l.lwz   	r3,160(r2)	 # SI load
	l.jal   	sqlite3PcacheTruncate	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
	l.lbz   	r3,13(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L2544	# delay slot filled
	l.sfnei	r14,0
	l.sb    	21(r2),r3	    # movqi
.L2544:
	l.bnf	.L2498
	l.nop			# nop delay slot
	l.ori   	r16,r14,0	 # move reg to reg
.L2498:
	l.addi	r1,r1,36
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L2540:
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r16,0(r3)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L2518
	l.nop			# nop delay slot
	l.lwz   	r11,32(r16)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r16,r11,0	 # move reg to reg
.L2518:
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	14(r2),r4	    # movqi
	l.j     	.L2546	# delay slot filled
	l.sb    	18(r2),r3	    # movqi
.L2538:
	l.lwz   	r11,4(r14)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
	l.movhi  	r3,hi(MemJournalMethods)
	l.ori   	r3,r3,lo(MemJournalMethods)
	l.sfeq 	r22,r3
	l.bf	.L2501	# delay slot filled
	l.sw    	0(r18),r16	 # SI store
.L2536:
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r11,28(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.lwz   	r4,132(r2)	 # SI load
	l.j     	.L2501	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L2505:
	l.lwz   	r14,68(r2)	 # SI load
	l.lwz   	r3,72(r2)	 # SI load
	l.or    	r14,r14,r3
	l.sfeqi	r14,0
	l.bf	.L2507	# delay slot filled
	l.sub   	r3,r0,r20
	l.lwz   	r16,152(r2)	 # SI load
	l.or    	r3,r3,r20
	l.sfltsi	r3,0
	l.bf	.L2531	# delay slot filled
	l.lwz   	r20,156(r2)	 # SI load
	l.or    	r3,r16,r20
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfltsi	r3,0
	l.bf	.L2509	# delay slot filled
	l.movhi  	r4,hi(zeroHdr.9671)
.L2531:
	l.lwz   	r11,16(r22)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r14,r11,0	 # move reg to reg
.L2511:
	l.sfnei	r14,0
	l.bf	.L2543	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,8(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L2542
	l.nop			# nop delay slot
.L2533:
	l.srai  	r3,r16,31
	l.sub   	r5,r3,r20
	l.sfgtu 	r5,r3
	l.bf	.L2513	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
.L2513:
	l.sub   	r3,r3,r16
	l.sub   	r4,r3,r4
	l.sfgesi	r4,0
	l.bf	.L2543	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,60(r2)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r11,24(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L2507	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sfgts 	r3,r16
	l.bf	.L2532	# delay slot filled
	l.sfne 	r3,r16
	l.bf	.L2543	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,4(r1)	 # SI load
	l.sfgtu 	r3,r20
	l.bnf	.L2543	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L2532:
	l.lwz   	r3,60(r2)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r11,16(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
.L2507:
	l.ori   	r3,r2,0	 # move reg to reg
.L2543:
	l.jal   	pager_error	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
.L2537:
	l.addi  	r4,r0,0	 # move immediate I
.L2545:
	l.addi  	r3,r0,0	 # move immediate I
		l.sw    	68(r2), r3
		l.sw    	68+4(r2), r4
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.j     	.L2501	# delay slot filled
	l.sb    	17(r2),r4	    # movqi
.L2539:
	l.lwz   	r14,68(r2)	 # SI load
	l.lwz   	r3,72(r2)	 # SI load
	l.or    	r14,r14,r3
	l.sfeqi	r14,0
	l.bf	.L2545	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r11,16(r22)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L2537	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L2541:
	l.addi  	r4,r0,4	 # movqi: move immediate
	l.j     	.L2519	# delay slot filled
	l.sb    	14(r2),r4	    # movqi
.L2509:
	l.lwz   	r11,12(r22)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(zeroHdr.9671)
	l.addi  	r5,r0,28	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.jalr  	r11	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.j     	.L2511	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L2542:
	l.lwz   	r3,60(r2)	 # SI load
	l.lbz   	r4,10(r2)	 # zero_extendqisi2
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r11,20(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r4,16
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfltsi	r3,0
	l.bnf	.L2533	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L2543	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.LFE289:
	.size	pager_end_transaction, .-pager_end_transaction
	.align	4
.proc	sqlite3MallocZero
	.type	sqlite3MallocZero, @function
sqlite3MallocZero:
.LFB89:
	l.sw    	-12(r1),r2	 # SI store
.LCFI810:
	l.sw    	-8(r1),r14	 # SI store
.LCFI811:
	l.sw    	-4(r1),r9	 # SI store
.LCFI812:
	l.addi  	r1,r1,-12
.LCFI813:
	l.jal   	sqlite3Malloc	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L2548	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
.L2548:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE89:
	.size	sqlite3MallocZero, .-sqlite3MallocZero
	.align	4
.proc	sqlite3BitvecCreate
	.type	sqlite3BitvecCreate, @function
sqlite3BitvecCreate:
.LFB203:
	l.sw    	-8(r1),r2	 # SI store
.LCFI814:
	l.sw    	-4(r1),r9	 # SI store
.LCFI815:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-8
.LCFI816:
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.addi  	r3,r0,512	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L2550
	l.nop			# nop delay slot
	l.sw    	0(r11),r2	 # SI store
.L2550:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE203:
	.size	sqlite3BitvecCreate, .-sqlite3BitvecCreate
	.align	4
.proc	setSharedCacheTableLock
	.type	setSharedCacheTableLock, @function
setSharedCacheTableLock:
.LFB357:
	l.sw    	-20(r1),r2	 # SI store
.LCFI817:
	l.sw    	-16(r1),r14	 # SI store
.LCFI818:
	l.sw    	-12(r1),r16	 # SI store
.LCFI819:
	l.sw    	-8(r1),r18	 # SI store
.LCFI820:
	l.sw    	-4(r1),r9	 # SI store
.LCFI821:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lbz   	r11,9(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-20
.LCFI822:
	l.ori   	r2,r4,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L2552	# delay slot filled
	l.lwz   	r18,4(r3)	 # SI load
	l.xori  	r3,r5,1
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bnf	.L2566
	l.nop			# nop delay slot
.L2553:
	l.lwz   	r6,64(r18)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L2563
	l.nop			# nop delay slot
	l.j     	.L2554
	l.nop			# nop delay slot
.L2555:
	l.lwz   	r6,12(r6)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L2554
	l.nop			# nop delay slot
.L2563:
	l.lwz   	r3,4(r6)	 # SI load
	l.sfne 	r3,r2
	l.bf	.L2555
	l.nop			# nop delay slot
	l.lwz   	r3,0(r6)	 # SI load
	l.sfeq 	r3,r14
	l.bnf	.L2555
	l.nop			# nop delay slot
.L2556:
	l.lbz   	r2,8(r6)	 # zero_extendqisi2
	l.sfgeu 	r2,r16
	l.bf	.L2552	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.sb    	8(r6),r16	    # movqi
.L2552:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L2566:
	l.lwz   	r3,0(r14)	 # SI load
	l.lwz   	r3,12(r3)	 # SI load
	l.srli  	r3,r3,14
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L2553	# delay slot filled
	l.sfnei	r4,1
	l.bnf	.L2553	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L2554:
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.addi  	r3,r0,16	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfeqi	r6,0
	l.bf	.L2552	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.lwz   	r3,64(r18)	 # SI load
	l.sw    	4(r6),r2	 # SI store
	l.sw    	0(r6),r14	 # SI store
	l.sw    	12(r6),r3	 # SI store
	l.j     	.L2556	# delay slot filled
	l.sw    	64(r18),r6	 # SI store
.LFE357:
	.size	setSharedCacheTableLock, .-setSharedCacheTableLock
	.align	4
.proc	sqlite3BitvecSet
	.type	sqlite3BitvecSet, @function
sqlite3BitvecSet:
.LFB205:
	l.sw    	-24(r1),r2	 # SI store
.LCFI823:
	l.sw    	-20(r1),r14	 # SI store
.LCFI824:
	l.sw    	-4(r1),r9	 # SI store
.LCFI825:
	l.sw    	-16(r1),r16	 # SI store
.LCFI826:
	l.sw    	-12(r1),r18	 # SI store
.LCFI827:
	l.sw    	-8(r1),r20	 # SI store
.LCFI828:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r1,r1,-524
.LCFI829:
	l.sfleui	r3,4000
	l.bf	.L2568	# delay slot filled
	l.addi  	r14,r4,-1
	l.lwz   	r16,8(r2)	 # SI load
	l.sfeqi	r16,0
	l.bnf	.L2587	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L2596	# delay slot filled
	l.addi  	r4,r0,125	 # move immediate I
.L2570:
	l.ori   	r3,r14,0	 # move reg to reg
.L2592:
	l.jal   	__umodsi3	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.sfleui	r3,4000
	l.bf	.L2568	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r16,8(r2)	 # SI load
	l.sfnei	r16,0
	l.bnf	.L2569	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L2587:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r11,r11,3
	l.slli  	r18,r11,2
	l.add   	r18,r2,r18
	l.lwz   	r2,0(r18)	 # SI load
	l.sfnei	r2,0
	l.bf	.L2592	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3BitvecCreate	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	0(r18),r11	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L2570	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L2571	# delay slot filled
	l.addi  	r18,r0,7	 # move immediate I
.L2568:
	l.srli  	r3,r14,3
	l.andi  	r14,r14,7
	l.addi  	r18,r0,0	 # move immediate I
	l.add   	r2,r2,r3
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r2,r2,12
	l.sll   	r14,r3,r14
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.or    	r3,r14,r3
	l.sb    	0(r2),r3	    # movqi
.L2571:
	l.addi	r1,r1,524
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L2569:
	l.addi  	r4,r0,125	 # move immediate I
.L2596:
	l.jal   	__umodsi3	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r5,r11,3
	l.slli  	r3,r5,2
	l.add   	r3,r2,r3
	l.lwz   	r3,0(r3)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L2593	# delay slot filled
	l.sfeq 	r14,r3
	l.lwz   	r3,4(r2)	 # SI load
	l.sfleui	r3,123
	l.bf	.L2594	# delay slot filled
	l.slli  	r5,r5,2
.L2574:
	l.addi  	r18,r2,12
	l.addi  	r5,r0,500	 # move immediate I
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r16,r1,0	 # move reg to reg
	l.addi  	r5,r0,500	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.add   	r20,r1,r5
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r4,r0,125	 # move immediate I
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r3,r3,124
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	8(r2),r11	 # SI store
	l.jal   	sqlite3BitvecSet	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L2579	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L2578:
	l.sfne 	r16,r20
	l.bnf	.L2571
	l.nop			# nop delay slot
.L2579:
	l.lwz   	r4,0(r16)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2578	# delay slot filled
	l.addi  	r16,r16,4
	l.jal   	sqlite3BitvecSet	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L2578	# delay slot filled
	l.or    	r18,r18,r11
.L2586:
.L2593:
	l.bf	.L2584	# delay slot filled
	l.addi  	r11,r11,1
	l.sfeqi	r11,125
	l.bnf	.L2595	# delay slot filled
	l.addi  	r5,r11,3
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r5,r11,3
.L2595:
	l.slli  	r3,r5,2
	l.add   	r3,r2,r3
	l.lwz   	r3,0(r3)	 # SI load
	l.sfnei	r3,0
	l.bf	.L2586	# delay slot filled
	l.sfeq 	r14,r3
.L2577:
	l.lwz   	r3,4(r2)	 # SI load
	l.sfleui	r3,61
	l.bnf	.L2574	# delay slot filled
	l.slli  	r5,r5,2
.L2573:
.L2594:
	l.addi  	r3,r3,1
	l.addi  	r18,r0,0	 # move immediate I
	l.add   	r5,r2,r5
	l.sw    	4(r2),r3	 # SI store
	l.j     	.L2571	# delay slot filled
	l.sw    	0(r5),r14	 # SI store
.L2584:
	l.j     	.L2571	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.LFE205:
	.size	sqlite3BitvecSet, .-sqlite3BitvecSet
	.align	4
.proc	sqlite3BitvecClear
	.type	sqlite3BitvecClear, @function
sqlite3BitvecClear:
.LFB206:
	l.sw    	-24(r1),r2	 # SI store
.LCFI830:
	l.sw    	-12(r1),r18	 # SI store
.LCFI831:
	l.sw    	-4(r1),r9	 # SI store
.LCFI832:
	l.sw    	-20(r1),r14	 # SI store
.LCFI833:
	l.sw    	-16(r1),r16	 # SI store
.LCFI834:
	l.sw    	-8(r1),r20	 # SI store
.LCFI835:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-524
.LCFI836:
	l.j     	.L2598	# delay slot filled
	l.addi  	r18,r4,-1
.L2600:
	l.jal   	__udivsi3
	l.nop			# nop delay slot
	l.addi  	r11,r11,3
	l.ori   	r3,r18,0	 # move reg to reg
	l.slli  	r11,r11,2
	l.add   	r2,r2,r11
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2597	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	__umodsi3
	l.nop			# nop delay slot
	l.ori   	r18,r11,0	 # move reg to reg
.L2598:
	l.lwz   	r16,8(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfnei	r16,0
	l.bf	.L2600	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.sfgtui	r3,4000
	l.bf	.L2601	# delay slot filled
	l.srli  	r3,r18,3
	l.addi  	r4,r0,1	 # move immediate I
	l.andi  	r18,r18,7
	l.add   	r2,r2,r3
	l.sll   	r4,r4,r18
	l.addi  	r2,r2,12
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.xori  	r4,r4,0x00ff
	l.and   	r3,r4,r3
	l.sb    	0(r2),r3	    # movqi
.L2597:
	l.addi	r1,r1,524
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L2601:
	l.addi  	r20,r2,12
	l.addi  	r5,r0,500	 # move immediate I
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r14,r1,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r5,r0,500	 # move immediate I
	l.ori   	r4,r16,0	 # move reg to reg
	l.add   	r20,r1,r5
	l.jal   	memset	# delay slot filled
	l.addi  	r18,r18,1
	l.sw    	4(r2),r16	 # SI store
.L2606:
	l.lwz   	r16,0(r14)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L2602	# delay slot filled
	l.sfeq 	r16,r18
	l.bf	.L2602	# delay slot filled
	l.addi  	r3,r16,-1
	l.jal   	__umodsi3	# delay slot filled
	l.addi  	r4,r0,125	 # move immediate I
	l.lwz   	r3,4(r2)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	4(r2),r3	 # SI store
.L2603:
	l.addi  	r4,r11,3
	l.slli  	r4,r4,2
	l.j     	.L2604	# delay slot filled
	l.add   	r4,r2,r4
.L2605:
	l.addi  	r11,r11,1
	l.sfleui	r11,124
	l.bnf	.L2609
	l.nop			# nop delay slot
.L2604:
	l.lwz   	r5,0(r4)	 # SI load
	l.sfnei	r5,0
	l.bf	.L2605	# delay slot filled
	l.addi  	r4,r4,4
	l.addi  	r3,r11,3
	l.slli  	r3,r3,2
	l.add   	r3,r2,r3
	l.sw    	0(r3),r16	 # SI store
.L2602:
	l.addi  	r14,r14,4
	l.sfne 	r14,r20
	l.bf	.L2606
	l.nop			# nop delay slot
	l.addi	r1,r1,524
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L2609:
	l.j     	.L2603	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE206:
	.size	sqlite3BitvecClear, .-sqlite3BitvecClear
	.align	4
.proc	zeroPage
	.type	zeroPage, @function
zeroPage:
.LFB383:
	l.lbz   	r6,5(r3)	 # zero_extendqisi2
	l.lwz   	r12,64(r3)	 # SI load
	l.sw    	-4(r1),r2	 # SI store
.LCFI837:
	l.add   	r7,r12,r6
	l.lwz   	r5,60(r3)	 # SI load
	l.andi  	r8,r4,8
	l.sb    	0(r7),r4	    # movqi
	l.addi  	r1,r1,-4
.LCFI838:
	l.sfeqi	r8,0
	l.bf	.L2611	# delay slot filled
	l.addi  	r11,r0,4	 # move immediate I
	l.addi  	r11,r0,0	 # move immediate I
.L2611:
	l.addi  	r8,r6,1
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.add   	r8,r12,r8
	l.srai  	r13,r4,3
	l.sb    	0(r8),r2	    # movqi
	l.sb    	1(r8),r2	    # movqi
	l.sb    	2(r8),r2	    # movqi
	l.sb    	3(r8),r2	    # movqi
	l.sb    	7(r7),r2	    # movqi
	l.andi  	r8,r13,0xff	 # zero_extendqisi2
	l.lhz   	r13,22(r5)	 # zero_extendqisi2
	l.srli  	r13,r13,8
	l.slli  	r12,r8,2
	l.addi  	r15,r6,8
	l.sb    	5(r7),r13	    # movqi
	l.sub   	r12,r0,r12
	l.lbz   	r2,23(r5)	 # zero_extendqisi2
	l.sb    	6(r7),r2	    # movqi
	l.addi  	r7,r12,4
	l.lhz   	r12,22(r5)	 # zero_extendqisi2
	l.add   	r11,r11,r15
	l.addi  	r2,r0,-9	 # move immediate I
	l.sub   	r12,r12,r11
	l.and   	r4,r4,r2
	l.sb    	6(r3),r7	    # movqi
	l.sh    	14(r3),r12	 # movhi
	l.sb    	3(r3),r8	    # movqi
	l.sfnei	r4,5
	l.bnf	.L2615	# delay slot filled
	l.lwz   	r7,60(r3)	 # SI load
	l.sfnei	r4,2
	l.bnf	.L2616
	l.nop			# nop delay slot
.L2613:
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	5(r3),r6	    # movqi
	l.sb    	1(r3),r2	    # movqi
	l.addi  	r2,r0,0	 # movhi: move immediate
	l.lhz   	r4,20(r5)	 # zero_extendqisi2
	l.sh    	16(r3),r2	 # movhi
	l.addi  	r4,r4,-1
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.addi	r1,r1,4
	l.sb    	0(r3),r2	    # movqi
	l.sh    	12(r3),r11	 # movhi
	l.sh    	18(r3),r4	 # movhi
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L2616:
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	2(r3),r2	    # movqi
	l.sb    	4(r3),r2	    # movqi
	l.lhz   	r2,24(r7)	 # zero_extendqisi2
	l.lhz   	r7,26(r7)	 # zero_extendqisi2
	l.sh    	8(r3),r2	 # movhi
	l.j     	.L2613	# delay slot filled
	l.sh    	10(r3),r7	 # movhi
.L2615:
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	4(r3),r8	    # movqi
	l.sb    	2(r3),r2	    # movqi
	l.lhz   	r2,28(r7)	 # zero_extendqisi2
	l.lhz   	r7,30(r7)	 # zero_extendqisi2
	l.sh    	8(r3),r2	 # movhi
	l.j     	.L2613	# delay slot filled
	l.sh    	10(r3),r7	 # movhi
.LFE383:
	.size	zeroPage, .-zeroPage
	.align	4
.proc	sqlite3HashInsert
	.type	sqlite3HashInsert, @function
sqlite3HashInsert:
.LFB155:
	l.sw    	-44(r1),r2	 # SI store
.LCFI839:
	l.sw    	-40(r1),r14	 # SI store
.LCFI840:
	l.sw    	-36(r1),r16	 # SI store
.LCFI841:
	l.sw    	-32(r1),r18	 # SI store
.LCFI842:
	l.sw    	-24(r1),r22	 # SI store
.LCFI843:
	l.sw    	-4(r1),r9	 # SI store
.LCFI844:
	l.sw    	-28(r1),r20	 # SI store
.LCFI845:
	l.sw    	-20(r1),r24	 # SI store
.LCFI846:
	l.sw    	-16(r1),r26	 # SI store
.LCFI847:
	l.sw    	-12(r1),r28	 # SI store
.LCFI848:
	l.sw    	-8(r1),r30	 # SI store
.LCFI849:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r4,0(r3)	 # SI load
	l.addi  	r1,r1,-44
.LCFI850:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r22,r6,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L2618	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r18,r0,0	 # move immediate I
	l.sfles 	r5,r18
	l.bf	.L2618	# delay slot filled
	l.ori   	r11,r18,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
.L2620:
	l.add   	r3,r2,r11
	l.movhi  	r6,hi(sqlite3UpperToLower)
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.ori   	r6,r6,lo(sqlite3UpperToLower)
	l.slli  	r5,r7,3
	l.add   	r3,r3,r6
	l.addi  	r11,r11,1
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.xor   	r3,r5,r3
	l.sfne 	r11,r14
	l.bf	.L2620	# delay slot filled
	l.xor   	r7,r7,r3
	l.jal   	__umodsi3	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
.L2618:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	findElementGivenHash	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L2621	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
	l.sfnei	r22,0
	l.bnf	.L2666	# delay slot filled
	l.lwz   	r20,8(r11)	 # SI load
	l.sw    	8(r11),r22	 # SI store
	l.sw    	12(r11),r2	 # SI store
.L2628:
	l.addi	r1,r1,44
.L2669:
	l.ori   	r11,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L2666:
	l.lwz   	r2,4(r11)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2623
	l.nop			# nop delay slot
	l.lwz   	r3,0(r11)	 # SI load
	l.sw    	0(r2),r3	 # SI store
	l.lwz   	r3,0(r11)	 # SI load
.L2624:
	l.sfeqi	r3,0
	l.bf	.L2625
	l.nop			# nop delay slot
	l.sw    	4(r3),r2	 # SI store
.L2625:
	l.lwz   	r2,12(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2626	# delay slot filled
	l.slli  	r18,r18,3
	l.add   	r18,r2,r18
	l.lwz   	r2,4(r18)	 # SI load
	l.sfne 	r7,r2
	l.bnf	.L2667
	l.nop			# nop delay slot
.L2627:
	l.lwz   	r2,0(r18)	 # SI load
	l.addi  	r2,r2,-1
	l.sw    	0(r18),r2	 # SI store
.L2626:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.lwz   	r2,4(r16)	 # SI load
	l.addi  	r2,r2,-1
	l.sfnei	r2,0
	l.bf	.L2628	# delay slot filled
	l.sw    	4(r16),r2	 # SI store
	l.jal   	sqlite3HashClear	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.j     	.L2669	# delay slot filled
	l.addi	r1,r1,44
.L2623:
	l.lwz   	r3,0(r11)	 # SI load
	l.j     	.L2624	# delay slot filled
	l.sw    	8(r16),r3	 # SI store
.L2667:
	l.j     	.L2627	# delay slot filled
	l.sw    	4(r18),r3	 # SI store
.L2621:
	l.sfeqi	r22,0
	l.bf	.L2628	# delay slot filled
	l.ori   	r20,r22,0	 # move reg to reg
	l.jal   	sqlite3Malloc	# delay slot filled
	l.addi  	r3,r0,20	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L2628	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r3,4(r16)	 # SI load
	l.sw    	12(r11),r2	 # SI store
	l.addi  	r3,r3,1
	l.sw    	16(r11),r14	 # SI store
	l.sw    	8(r11),r22	 # SI store
	l.sfleui	r3,9
	l.bf	.L2629	# delay slot filled
	l.sw    	4(r16),r3	 # SI store
	l.lwz   	r4,0(r16)	 # SI load
	l.add   	r5,r4,r4
	l.sfleu 	r3,r5
	l.bnf	.L2668
	l.nop			# nop delay slot
.L2629:
	l.lwz   	r2,12(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2646	# delay slot filled
	l.slli  	r18,r18,3
	l.add   	r2,r2,r18
	l.sfeqi	r2,0
	l.bf	.L2647
	l.nop			# nop delay slot
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2648	# delay slot filled
	l.addi  	r4,r3,1
	l.lwz   	r3,4(r2)	 # SI load
	l.sw    	0(r2),r4	 # SI store
	l.sfeqi	r3,0
	l.bf	.L2647	# delay slot filled
	l.sw    	4(r2),r24	 # SI store
	l.lwz   	r2,4(r3)	 # SI load
	l.sw    	0(r24),r3	 # SI store
	l.sw    	4(r24),r2	 # SI store
	l.lwz   	r2,4(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2649
	l.nop			# nop delay slot
	l.sw    	0(r2),r24	 # SI store
.L2650:
	l.sw    	4(r3),r24	 # SI store
	l.j     	.L2628	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
.L2648:
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	4(r2),r24	 # SI store
	l.sw    	0(r2),r3	 # SI store
.L2647:
	l.lwz   	r2,8(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2651	# delay slot filled
	l.sw    	0(r24),r2	 # SI store
	l.sw    	4(r2),r24	 # SI store
.L2651:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	4(r24),r2	 # SI store
	l.sw    	8(r16),r24	 # SI store
	l.j     	.L2628	# delay slot filled
	l.ori   	r20,r2,0	 # move reg to reg
.L2668:
	l.add   	r20,r3,r3
	l.slli  	r3,r20,3
	l.sfgtui	r3,1024
	l.bnf	.L2670	# delay slot filled
	l.sfeq 	r4,r20
	l.addi  	r20,r0,128	 # move immediate I
	l.sfeq 	r4,r20
.L2670:
	l.bf	.L2629	# delay slot filled
	l.movhi  	r26,hi(sqlite3Hooks)
	l.ori   	r26,r26,lo(sqlite3Hooks)
	l.lwz   	r3,0(r26)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2632
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
.L2632:
	l.jal   	sqlite3Malloc	# delay slot filled
	l.slli  	r3,r20,3
	l.lwz   	r3,4(r26)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2633	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.jalr  	r3
	l.nop			# nop delay slot
.L2633:
	l.sfeqi	r22,0
	l.bf	.L2629
	l.nop			# nop delay slot
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,12(r16)	 # SI load
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r4,r4,lo(sqlite3Config)
	l.sw    	12(r16),r22	 # SI store
	l.lwz   	r11,36(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.srli  	r28,r11,3
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.slli  	r5,r28,3
	l.jal   	memset	# delay slot filled
	l.sw    	0(r16),r28	 # SI store
	l.addi  	r8,r0,0	 # move immediate I
	l.lwz   	r20,8(r16)	 # SI load
	l.sfeq 	r20,r8
	l.bf	.L2634	# delay slot filled
	l.sw    	8(r16),r8	 # SI store
	l.addi  	r30,r0,1	 # move immediate I
.L2661:
	l.lwz   	r8,16(r20)	 # SI load
	l.sflesi	r8,0
	l.bf	.L2635	# delay slot filled
	l.lwz   	r12,12(r20)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r5,0	 # move reg to reg
.L2636:
	l.add   	r6,r12,r5
	l.movhi  	r4,hi(sqlite3UpperToLower)
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.ori   	r4,r4,lo(sqlite3UpperToLower)
	l.slli  	r7,r3,3
	l.add   	r6,r6,r4
	l.addi  	r5,r5,1
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.xor   	r6,r7,r6
	l.sfne 	r5,r8
	l.bf	.L2636	# delay slot filled
	l.xor   	r3,r3,r6
	l.ori   	r4,r28,0	 # move reg to reg
	l.jal   	__umodsi3	# delay slot filled
	l.lwz   	r26,0(r20)	 # SI load
	l.slli  	r5,r11,3
	l.add   	r5,r22,r5
	l.sfeqi	r5,0
	l.bf	.L2637
	l.nop			# nop delay slot
.L2654:
	l.lwz   	r3,0(r5)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2638	# delay slot filled
	l.addi  	r4,r3,1
	l.lwz   	r3,4(r5)	 # SI load
	l.sw    	0(r5),r4	 # SI store
	l.sfeqi	r3,0
	l.bf	.L2637	# delay slot filled
	l.sw    	4(r5),r20	 # SI store
	l.lwz   	r4,4(r3)	 # SI load
	l.sw    	0(r20),r3	 # SI store
	l.sw    	4(r20),r4	 # SI store
	l.lwz   	r4,4(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2639
	l.nop			# nop delay slot
	l.sw    	0(r4),r20	 # SI store
.L2640:
	l.sw    	4(r3),r20	 # SI store
	l.ori   	r20,r26,0	 # move reg to reg
.L2641:
	l.sfnei	r26,0
	l.bf	.L2661
	l.nop			# nop delay slot
.L2634:
	l.lwz   	r4,0(r16)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L2629
	l.nop			# nop delay slot
	l.addi  	r3,r0,0	 # move immediate I
	l.sfles 	r14,r3
	l.bf	.L2644	# delay slot filled
	l.ori   	r5,r3,0	 # move reg to reg
.L2645:
	l.add   	r6,r2,r5
	l.movhi  	r8,hi(sqlite3UpperToLower)
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.ori   	r8,r8,lo(sqlite3UpperToLower)
	l.slli  	r7,r3,3
	l.add   	r6,r6,r8
	l.addi  	r5,r5,1
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.xor   	r6,r7,r6
	l.sfne 	r5,r14
	l.bf	.L2645	# delay slot filled
	l.xor   	r3,r3,r6
.L2644:
	l.jal   	__umodsi3
	l.nop			# nop delay slot
	l.j     	.L2629	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L2638:
	l.sw    	0(r5),r30	 # SI store
	l.sw    	4(r5),r20	 # SI store
.L2637:
	l.lwz   	r3,8(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2642	# delay slot filled
	l.sw    	0(r20),r3	 # SI store
	l.sw    	4(r3),r20	 # SI store
.L2642:
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	4(r20),r6	 # SI store
	l.sw    	8(r16),r20	 # SI store
	l.j     	.L2641	# delay slot filled
	l.ori   	r20,r26,0	 # move reg to reg
.L2639:
	l.j     	.L2640	# delay slot filled
	l.sw    	8(r16),r20	 # SI store
.L2649:
	l.j     	.L2650	# delay slot filled
	l.sw    	8(r16),r24	 # SI store
.L2635:
	l.lwz   	r26,0(r20)	 # SI load
	l.j     	.L2654	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
.L2646:
	l.lwz   	r2,8(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2652	# delay slot filled
	l.sw    	0(r24),r2	 # SI store
	l.sw    	4(r2),r24	 # SI store
.L2652:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	4(r24),r3	 # SI store
	l.sw    	8(r16),r24	 # SI store
	l.j     	.L2628	# delay slot filled
	l.ori   	r20,r3,0	 # move reg to reg
.LFE155:
	.size	sqlite3HashInsert, .-sqlite3HashInsert
	.align	4
.proc	sqlite3DeleteTable
	.type	sqlite3DeleteTable, @function
sqlite3DeleteTable:
.LFB860:
	l.sw    	-24(r1),r2	 # SI store
.LCFI851:
	l.sw    	-4(r1),r9	 # SI store
.LCFI852:
	l.sw    	-20(r1),r14	 # SI store
.LCFI853:
	l.sw    	-16(r1),r16	 # SI store
.LCFI854:
	l.sw    	-12(r1),r18	 # SI store
.LCFI855:
	l.sw    	-8(r1),r20	 # SI store
.LCFI856:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI857:
	l.bf	.L2671	# delay slot filled
	l.addi  	r1,r1,-24
	l.lhz   	r3,32(r3)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.lwz   	r18,0(r2)	 # SI load
	l.andi  	r3,r3,0xffff	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L2671	# delay slot filled
	l.sh    	32(r2),r3	 # movhi
	l.lwz   	r14,20(r2)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L2673
	l.nop			# nop delay slot
.L2690:
	l.lwz   	r4,0(r14)	 # SI load
	l.lwz   	r3,36(r14)	 # SI load
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.lwz   	r16,32(r14)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L2674	# delay slot filled
	l.addi  	r3,r3,20
	l.ori   	r5,r4,0	 # move reg to reg
	l.addi  	r5,r5,1
.L2693:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L2693	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r4
	l.ori   	r6,r6,65535
	l.and   	r5,r5,r6
.L2674:
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	freeIndex	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r16,0
	l.bf	.L2690	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
.L2673:
	l.lwz   	r5,36(r2)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L2677
	l.nop			# nop delay slot
.L2691:
	l.ori   	r4,r5,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r14,4(r5)	 # SI load
	l.sfnei	r14,0
	l.bf	.L2691	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
.L2677:
	l.jal   	sqliteResetColumnNames	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,4(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,40(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.lwz   	r4,44(r2)	 # SI load
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r20,72(r2)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L2679	# delay slot filled
	l.lwz   	r4,56(r2)	 # SI load
	l.lwz   	r20,64(r20)	 # SI load
.L2679:
	l.sfeqi	r4,0
	l.bf	.L2680
	l.nop			# nop delay slot
	l.jal   	sqlite3VtabUnlock	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	56(r2),r3	 # SI store
.L2680:
	l.lwz   	r5,64(r2)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L2681	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r3,60(r2)	 # SI load
	l.sflesi	r3,0
	l.bf	.L2682	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L2683	# delay slot filled
	l.ori   	r16,r14,0	 # move reg to reg
.L2692:
	l.lwz   	r5,64(r2)	 # SI load
.L2683:
	l.add   	r5,r5,r14
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,0(r5)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r3,60(r2)	 # SI load
	l.sfges 	r16,r3
	l.bnf	.L2692	# delay slot filled
	l.addi  	r14,r14,4
	l.lwz   	r4,64(r2)	 # SI load
.L2682:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L2681:
	l.addi	r1,r1,24
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L2671:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE860:
	.size	sqlite3DeleteTable, .-sqlite3DeleteTable
	.align	4
.proc	sqlite3SrcListDelete
	.type	sqlite3SrcListDelete, @function
sqlite3SrcListDelete:
.LFB906:
	l.sw    	-16(r1),r14	 # SI store
.LCFI858:
	l.sw    	-8(r1),r18	 # SI store
.LCFI859:
	l.sw    	-4(r1),r9	 # SI store
.LCFI860:
	l.sw    	-20(r1),r2	 # SI store
.LCFI861:
	l.sw    	-12(r1),r16	 # SI store
.LCFI862:
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI863:
	l.sfeqi	r4,0
	l.bf	.L2694	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.lhs   	r2,0(r4)	 # extendhisi2_no_sext_mem
	l.sflesi	r2,0
	l.bf	.L2696	# delay slot filled
	l.addi  	r2,r4,4
	l.addi  	r16,r0,0	 # move immediate I
.L2697:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r4,4(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,8(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,44(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.lwz   	r3,12(r2)	 # SI load
	l.lwz   	r4,16(r2)	 # SI load
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,28(r2)	 # SI load
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,32(r2)	 # SI load
	l.jal   	sqlite3IdListDelete	# delay slot filled
	l.addi  	r2,r2,52
	l.lhs   	r3,0(r18)	 # extendhisi2_no_sext_mem
	l.sfgts 	r3,r16
	l.bf	.L2697
	l.nop			# nop delay slot
.L2696:
	l.addi	r1,r1,20
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L2694:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE906:
	.size	sqlite3SrcListDelete, .-sqlite3SrcListDelete
	.align	4
.proc	clearSelect
	.type	clearSelect, @function
clearSelect:
.LFB1025:
	l.sw    	-4(r1),r9	 # SI store
.LCFI864:
	l.sw    	-12(r1),r2	 # SI store
.LCFI865:
	l.sw    	-8(r1),r14	 # SI store
.LCFI866:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI867:
	l.lwz   	r4,0(r4)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.lwz   	r4,8(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.lwz   	r4,16(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,40(r2)	 # SI load
	l.lwz   	r4,44(r2)	 # SI load
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3ExprDelete	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1025:
	.size	clearSelect, .-clearSelect
	.align	4
.proc	sqlite3SelectDelete
	.type	sqlite3SelectDelete, @function
sqlite3SelectDelete:
.LFB1028:
	l.sw    	-12(r1),r2	 # SI store
.LCFI868:
	l.sw    	-8(r1),r14	 # SI store
.LCFI869:
	l.sw    	-4(r1),r9	 # SI store
.LCFI870:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI871:
	l.sfeqi	r4,0
	l.bf	.L2700	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	clearSelect
	l.nop			# nop delay slot
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L2700:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1028:
	.size	sqlite3SelectDelete, .-sqlite3SelectDelete
	.align	4
.proc	sqlite3ExprClear
	.type	sqlite3ExprClear, @function
sqlite3ExprClear:
.LFB748:
	l.sw    	-12(r1),r2	 # SI store
.LCFI872:
	l.sw    	-8(r1),r14	 # SI store
.LCFI873:
	l.sw    	-4(r1),r9	 # SI store
.LCFI874:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r4,8(r4)	 # SI load
	l.addi  	r1,r1,-12
.LCFI875:
	l.sfgesi	r4,0
	l.bnf	.L2710	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
.L2714:
	l.andi  	r4,r3,49152
	l.sfnei	r4,0
	l.bf	.L2702
	l.nop			# nop delay slot
	l.lwz   	r4,16(r2)	 # SI load
	l.sfgesi	r4,0
	l.bnf	.L2711	# delay slot filled
	l.andi  	r3,r3,8192
	l.sfeqi	r3,0
	l.bf	.L2706
	l.nop			# nop delay slot
.L2713:
	l.lwz   	r4,20(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2707
	l.nop			# nop delay slot
	l.jal   	sqlite3ExprClear	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L2707:
	l.lwz   	r4,24(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2708
	l.nop			# nop delay slot
	l.jal   	sqlite3ExprClear	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L2708:
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
.L2715:
	l.andi  	r3,r3,4096
	l.sfeqi	r3,0
	l.bnf	.L2712	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,28(r2)	 # SI load
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3ExprListDelete	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L2702:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L2710:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,4(r2)	 # SI load
	l.j     	.L2714	# delay slot filled
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
.L2712:
	l.lwz   	r4,28(r2)	 # SI load
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3SelectDelete	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L2711:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,8192
	l.sfeqi	r3,0
	l.bnf	.L2713
	l.nop			# nop delay slot
.L2706:
	l.lwz   	r4,20(r2)	 # SI load
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
	l.j     	.L2715	# delay slot filled
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
.LFE748:
	.size	sqlite3ExprClear, .-sqlite3ExprClear
	.align	4
.proc	sqlite3ExprDelete
	.type	sqlite3ExprDelete, @function
sqlite3ExprDelete:
.LFB749:
	l.sw    	-12(r1),r2	 # SI store
.LCFI876:
	l.sw    	-8(r1),r14	 # SI store
.LCFI877:
	l.sw    	-4(r1),r9	 # SI store
.LCFI878:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI879:
	l.sfeqi	r4,0
	l.bf	.L2716	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3ExprClear
	l.nop			# nop delay slot
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L2716:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE749:
	.size	sqlite3ExprDelete, .-sqlite3ExprDelete
	.align	4
.proc	sqlite3ExprListDelete
	.type	sqlite3ExprListDelete, @function
sqlite3ExprListDelete:
.LFB763:
	l.sw    	-12(r1),r16	 # SI store
.LCFI880:
	l.sw    	-8(r1),r18	 # SI store
.LCFI881:
	l.sw    	-4(r1),r9	 # SI store
.LCFI882:
	l.sw    	-20(r1),r2	 # SI store
.LCFI883:
	l.sw    	-16(r1),r14	 # SI store
.LCFI884:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI885:
	l.sfeqi	r4,0
	l.bf	.L2718	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
	l.lwz   	r3,0(r4)	 # SI load
	l.sflesi	r3,0
	l.bf	.L2720	# delay slot filled
	l.lwz   	r2,12(r4)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
.L2721:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.addi  	r14,r14,1
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,4(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r2,16
	l.lwz   	r3,0(r16)	 # SI load
	l.sfgts 	r3,r14
	l.bf	.L2721
	l.nop			# nop delay slot
	l.lwz   	r2,12(r16)	 # SI load
.L2720:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi	r1,r1,20
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L2718:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE763:
	.size	sqlite3ExprListDelete, .-sqlite3ExprListDelete
	.align	4
.proc	sqliteResetColumnNames
	.type	sqliteResetColumnNames, @function
sqliteResetColumnNames:
.LFB859:
	l.sw    	-20(r1),r2	 # SI store
.LCFI886:
	l.sw    	-16(r1),r14	 # SI store
.LCFI887:
	l.sw    	-12(r1),r16	 # SI store
.LCFI888:
	l.sw    	-4(r1),r9	 # SI store
.LCFI889:
	l.sw    	-8(r1),r18	 # SI store
.LCFI890:
	l.lwz   	r2,16(r3)	 # SI load
	l.addi  	r1,r1,-20
.LCFI891:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L2724	# delay slot filled
	l.lwz   	r14,0(r3)	 # SI load
	l.lwz   	r3,12(r3)	 # SI load
	l.sflesi	r3,0
	l.bf	.L2725
	l.nop			# nop delay slot
	l.addi  	r18,r0,0	 # move immediate I
.L2726:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r18,r18,1
	l.lwz   	r4,4(r2)	 # SI load
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,8(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,12(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r2,20
	l.lwz   	r3,12(r16)	 # SI load
	l.sfgts 	r3,r18
	l.bf	.L2726
	l.nop			# nop delay slot
	l.lwz   	r2,16(r16)	 # SI load
.L2725:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L2724:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	16(r16),r2	 # SI store
	l.sw    	12(r16),r2	 # SI store
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE859:
	.size	sqliteResetColumnNames, .-sqliteResetColumnNames
	.align	4
.proc	sqlite3Expr
	.type	sqlite3Expr, @function
sqlite3Expr:
.LFB741:
	l.sw    	-28(r1),r2	 # SI store
.LCFI892:
	l.sw    	-24(r1),r14	 # SI store
.LCFI893:
	l.sw    	-20(r1),r16	 # SI store
.LCFI894:
	l.sw    	-16(r1),r18	 # SI store
.LCFI895:
	l.sw    	-12(r1),r20	 # SI store
.LCFI896:
	l.sw    	-8(r1),r22	 # SI store
.LCFI897:
	l.sw    	-4(r1),r9	 # SI store
.LCFI898:
	l.ori   	r22,r4,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI899:
	l.addi  	r4,r0,64	 # move immediate I
	l.ori   	r20,r3,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.ori   	r14,r7,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L2741	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r0,-1	 # move immediate I
	l.sb    	0(r11),r22	    # movqi
	l.sw    	48(r11),r3	 # SI store
	l.movhi  	r3,hi(.LC15)
	l.sw    	20(r11),r18	 # SI store
	l.ori   	r3,r3,lo(.LC15)
	l.sw    	24(r11),r16	 # SI store
	l.sfeqi	r14,0
	l.bf	.L2731	# delay slot filled
	l.sw    	12(r11),r3	 # SI store
		l.lwz   	r3, 0(r14)
		l.lwz   	r4, 4(r14)
		l.sw    	12(r11), r3
		l.sw    	12+4(r11), r4
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r3,4(r14)	 # SI load
	l.ori   	r4,r4,65535
	l.and   	r3,r3,r4
	l.sflesi	r3,1
	l.bf	.L2732
	l.nop			# nop delay slot
	l.lwz   	r3,0(r14)	 # SI load
	l.lbz   	r16,0(r3)	 # zero_extendqisi2
	l.sfeqi	r16,39
	l.bf	.L2733	# delay slot filled
	l.sfeqi	r16,91
	l.bnf	.L2742	# delay slot filled
	l.sfeqi	r16,34
.L2733:
	l.ori   	r3,r20,0	 # move reg to reg
.L2747:
	l.addi  	r4,r2,4
.L2748:
	l.jal   	sqlite3TokenCopy	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r3,4(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2743	# delay slot filled
	l.sfnei	r16,34
	l.jal   	sqlite3Dequote
	l.nop			# nop delay slot
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.lwz   	r3,8(r2)	 # SI load
	l.ori   	r5,r5,65535
	l.movhi 	r4,hi(-1073741824)	 # move immediate M
	l.and   	r11,r11,r5
	l.and   	r3,r3,r4
	l.sfnei	r16,34
	l.or    	r3,r3,r11
	l.bnf	.L2744	# delay slot filled
	l.sw    	8(r2),r3	 # SI store
.L2735:
	l.movhi 	r4,hi(-1073807360)	 # move immediate M
	l.ori   	r4,r4,65535
	l.and   	r3,r3,r4
	l.sw    	8(r2),r3	 # SI store
.L2736:
	l.jal   	exprSetHeight	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi	r1,r1,28
.L2746:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L2742:
	l.bf	.L2747	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r16,96
	l.bnf	.L2748	# delay slot filled
	l.addi  	r4,r2,4
.L2732:
		l.lwz   	r3, 0(r14)
		l.lwz   	r4, 4(r14)
		l.sw    	4(r2), r3
		l.sw    	4+4(r2), r4
	l.j     	.L2735	# delay slot filled
	l.lwz   	r3,8(r2)	 # SI load
.L2731:
	l.sfeqi	r18,0
	l.bf	.L2736	# delay slot filled
	l.sfeqi	r16,0
	l.bf	.L2737
	l.nop			# nop delay slot
	l.lwz   	r3,16(r16)	 # SI load
	l.sfltsi	r3,0
	l.bf	.L2738
	l.nop			# nop delay slot
	l.lwz   	r3,16(r18)	 # SI load
	l.sfltsi	r3,0
	l.bnf	.L2745	# delay slot filled
	l.movhi 	r5,hi(-1073741824)	 # move immediate M
.L2738:
	l.lhz   	r3,2(r16)	 # zero_extendqisi2
	l.andi  	r3,r3,256
	l.sfeqi	r3,0
	l.bf	.L2737
	l.nop			# nop delay slot
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.lwz   	r4,32(r16)	 # SI load
	l.ori   	r3,r3,256
	l.sw    	32(r2),r4	 # SI store
	l.sh    	2(r2),r3	 # movhi
.L2737:
	l.lhz   	r3,2(r18)	 # zero_extendqisi2
	l.andi  	r3,r3,256
	l.sfeqi	r3,0
	l.bf	.L2736
	l.nop			# nop delay slot
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.lwz   	r4,32(r18)	 # SI load
	l.ori   	r3,r3,256
	l.sw    	32(r2),r4	 # SI store
	l.j     	.L2736	# delay slot filled
	l.sh    	2(r2),r3	 # movhi
.L2743:
	l.bf	.L2735	# delay slot filled
	l.lwz   	r3,8(r2)	 # SI load
.L2744:
	l.lhz   	r4,2(r2)	 # zero_extendqisi2
	l.ori   	r4,r4,64
	l.j     	.L2735	# delay slot filled
	l.sh    	2(r2),r4	 # movhi
.L2745:
	l.lwz   	r3,12(r18)	 # SI load
	l.lwz   	r4,16(r11)	 # SI load
	l.sw    	12(r11),r3	 # SI store
	l.lwz   	r6,12(r16)	 # SI load
	l.lwz   	r3,12(r18)	 # SI load
	l.and   	r4,r4,r5
	l.sub   	r3,r6,r3
	l.lwz   	r5,16(r16)	 # SI load
	l.add   	r3,r5,r3
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.ori   	r5,r5,65535
	l.and   	r3,r3,r5
	l.or    	r3,r4,r3
	l.j     	.L2738	# delay slot filled
	l.sw    	16(r11),r3	 # SI store
.L2741:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L2746	# delay slot filled
	l.addi	r1,r1,28
.LFE741:
	.size	sqlite3Expr, .-sqlite3Expr
	.align	4
.proc	sqlite3ExprAnd
	.type	sqlite3ExprAnd, @function
sqlite3ExprAnd:
.LFB744:
	l.sw    	-4(r1),r9	 # SI store
.LCFI900:
	l.ori   	r7,r4,0	 # move reg to reg
	l.addi  	r1,r1,-4
.LCFI901:
	l.sfeqi	r4,0
	l.bf	.L2750	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L2751	# delay slot filled
	l.ori   	r5,r7,0	 # move reg to reg
	l.addi	r1,r1,4
	l.addi  	r4,r0,67	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3Expr	# delay slot filled	# sibcall s
	l.addi  	r7,r0,0	 # move immediate I
.L2751:
	l.ori   	r6,r4,0	 # move reg to reg
.L2750:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r6,0	 # move reg to reg
.LFE744:
	.size	sqlite3ExprAnd, .-sqlite3ExprAnd
	.align	4
.proc	whereClauseInsert
	.type	whereClauseInsert, @function
whereClauseInsert:
.LFB1131:
	l.sw    	-24(r1),r2	 # SI store
.LCFI902:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-20(r1),r14	 # SI store
.LCFI903:
	l.sw    	-16(r1),r16	 # SI store
.LCFI904:
	l.sw    	-4(r1),r9	 # SI store
.LCFI905:
	l.sw    	-12(r1),r18	 # SI store
.LCFI906:
	l.sw    	-8(r1),r20	 # SI store
.LCFI907:
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r6,16(r2)	 # SI load
	l.addi  	r1,r1,-24
.LCFI908:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sflts 	r3,r6
	l.bnf	.L2758	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
.L2753:
	l.slli  	r6,r3,3
	l.slli  	r5,r3,5
	l.lwz   	r7,20(r2)	 # SI load
	l.addi  	r4,r3,1
	l.add   	r6,r6,r5
	l.sw    	12(r2),r4	 # SI store
	l.add   	r6,r7,r6
	l.sw    	20(r6),r2	 # SI store
	l.addi  	r2,r0,-1	 # move immediate I
	l.sw    	0(r6),r14	 # SI store
	l.sb    	18(r6),r16	    # movqi
	l.sw    	4(r6),r2	 # SI store
.L2756:
	l.addi	r1,r1,24
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L2758:
	l.lwz   	r3,0(r2)	 # SI load
	l.slli  	r4,r6,4
	l.slli  	r6,r6,6
	l.lwz   	r18,0(r3)	 # SI load
	l.lwz   	r20,20(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.add   	r4,r4,r6
	l.sfnei	r11,0
	l.bnf	.L2759	# delay slot filled
	l.sw    	20(r2),r11	 # SI store
	l.lwz   	r5,12(r2)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
	l.slli  	r6,r5,3
	l.slli  	r5,r5,5
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.add   	r5,r6,r5
	l.addi  	r3,r2,24
	l.sfeq 	r20,r3
	l.bf	.L2757
	l.nop			# nop delay slot
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
.L2757:
	l.lwz   	r4,20(r2)	 # SI load
	l.jal   	sqlite3DbMallocSize	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,40	 # move immediate I
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r3,12(r2)	 # SI load
	l.j     	.L2753	# delay slot filled
	l.sw    	16(r2),r11	 # SI store
.L2759:
	l.andi  	r16,r16,1
	l.sfeqi	r16,0
	l.bf	.L2755
	l.nop			# nop delay slot
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
.L2755:
	l.sw    	20(r2),r20	 # SI store
	l.j     	.L2756	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.LFE1131:
	.size	whereClauseInsert, .-whereClauseInsert
	.align	4
.proc	whereSplit
	.type	whereSplit, @function
whereSplit:
.LFB1132:
	l.sw    	-16(r1),r2	 # SI store
.LCFI909:
	l.sw    	-8(r1),r16	 # SI store
.LCFI910:
	l.sw    	-4(r1),r9	 # SI store
.LCFI911:
	l.sw    	-12(r1),r14	 # SI store
.LCFI912:
	l.sb    	8(r3),r5	    # movqi
	l.addi  	r1,r1,-16
.LCFI913:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L2760	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbz   	r14,0(r4)	 # zero_extendqisi2
	l.sfne 	r14,r5
	l.bnf	.L2766
	l.nop			# nop delay slot
	l.j     	.L2768	# delay slot filled
	l.addi	r1,r1,16
.L2765:
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.sfeq 	r14,r3
	l.bnf	.L2762
	l.nop			# nop delay slot
.L2766:
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	whereSplit	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r2,24(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L2765	# delay slot filled
	l.sb    	8(r16),r14	    # movqi
.L2760:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L2762:
	l.addi	r1,r1,16
.L2768:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	whereClauseInsert	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.LFE1132:
	.size	whereSplit, .-whereSplit
	.align	4
.proc	whereClauseClear
	.type	whereClauseClear, @function
whereClauseClear:
.LFB1130:
	l.sw    	-24(r1),r14	 # SI store
.LCFI914:
	l.lwz   	r14,12(r3)	 # SI load
	l.sw    	-28(r1),r2	 # SI store
.LCFI915:
	l.sw    	-16(r1),r18	 # SI store
.LCFI916:
	l.sw    	-12(r1),r20	 # SI store
.LCFI917:
	l.sw    	-4(r1),r9	 # SI store
.LCFI918:
	l.sw    	-20(r1),r16	 # SI store
.LCFI919:
	l.sw    	-8(r1),r22	 # SI store
.LCFI920:
	l.lwz   	r2,0(r3)	 # SI load
	l.addi  	r14,r14,-1
	l.addi  	r1,r1,-28
.LCFI921:
	l.ori   	r20,r3,0	 # move reg to reg
	l.lwz   	r18,0(r2)	 # SI load
	l.sfltsi	r14,0
	l.bf	.L2770	# delay slot filled
	l.lwz   	r4,20(r3)	 # SI load
	l.addi  	r2,r4,18
	l.j     	.L2774	# delay slot filled
	l.addi  	r16,r4,12
.L2771:
	l.sfeqi	r4,0
	l.bnf	.L2777	# delay slot filled
	l.andi  	r5,r5,32
.L2772:
	l.sfeqi	r5,0
	l.bnf	.L2777
	l.nop			# nop delay slot
	l.addi  	r14,r14,-1
	l.addi  	r2,r2,40
	l.sfgesi	r14,0
	l.bnf	.L2778	# delay slot filled
	l.addi  	r16,r16,40
.L2774:
	l.lbz   	r5,0(r2)	 # zero_extendqisi2
	l.andi  	r4,r5,1
	l.sfeqi	r4,0
	l.bf	.L2771	# delay slot filled
	l.andi  	r4,r5,16
	l.lwz   	r4,-18(r2)	 # SI load
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lbz   	r5,0(r2)	 # zero_extendqisi2
	l.andi  	r4,r5,16
	l.sfeqi	r4,0
	l.bf	.L2772	# delay slot filled
	l.andi  	r5,r5,32
.L2777:
	l.lwz   	r22,0(r16)	 # SI load
	l.addi  	r14,r14,-1
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	whereClauseClear	# delay slot filled
	l.addi  	r2,r2,40
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r16,r16,40
	l.sfgesi	r14,0
	l.bf	.L2774
	l.nop			# nop delay slot
.L2778:
	l.lwz   	r4,20(r20)	 # SI load
.L2770:
	l.addi  	r20,r20,24
	l.sfeq 	r4,r20
	l.bf	.L2769	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r22,-8(r1)	 # SI load
.L2769:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.LFE1130:
	.size	whereClauseClear, .-whereClauseClear
	.align	4
.proc	whereInfoFree
	.type	whereInfoFree, @function
whereInfoFree:
.LFB1163:
	l.sw    	-12(r1),r18	 # SI store
.LCFI922:
	l.sw    	-8(r1),r20	 # SI store
.LCFI923:
	l.sw    	-4(r1),r9	 # SI store
.LCFI924:
	l.sw    	-24(r1),r2	 # SI store
.LCFI925:
	l.sw    	-20(r1),r14	 # SI store
.LCFI926:
	l.sw    	-16(r1),r16	 # SI store
.LCFI927:
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI928:
	l.sfeqi	r4,0
	l.bf	.L2779	# delay slot filled
	l.ori   	r20,r3,0	 # move reg to reg
	l.lwz   	r5,24(r4)	 # SI load
	l.sflesi	r5,0
	l.bf	.L2781	# delay slot filled
	l.addi  	r16,r4,92
	l.j     	.L2784	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L2783:
	l.ori   	r3,r20,0	 # move reg to reg
.L2786:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r5,24(r18)	 # SI load
.L2782:
	l.sfgts 	r5,r14
	l.bnf	.L2781	# delay slot filled
	l.addi  	r16,r16,64
.L2784:
	l.lwz   	r2,0(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L2782	# delay slot filled
	l.addi  	r14,r14,1
	l.lwz   	r3,28(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2783
	l.nop			# nop delay slot
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,24(r2)	 # SI load
	l.j     	.L2786	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L2781:
	l.jal   	whereClauseClear	# delay slot filled
	l.lwz   	r3,28(r18)	 # SI load
	l.addi	r1,r1,24
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L2779:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE1163:
	.size	whereInfoFree, .-whereInfoFree
	.align	4
.proc	sqlite3DeleteTriggerStep
	.type	sqlite3DeleteTriggerStep, @function
sqlite3DeleteTriggerStep:
.LFB1076:
	l.sw    	-16(r1),r2	 # SI store
.LCFI929:
	l.sw    	-12(r1),r14	 # SI store
.LCFI930:
	l.sw    	-4(r1),r9	 # SI store
.LCFI931:
	l.sw    	-8(r1),r16	 # SI store
.LCFI932:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI933:
	l.sfeqi	r4,0
	l.bnf	.L2792	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.j     	.L2793	# delay slot filled
	l.addi	r1,r1,16
.L2789:
	l.lwz   	r4,24(r2)	 # SI load
.L2794:
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,28(r2)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,12(r2)	 # SI load
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,32(r2)	 # SI load
	l.jal   	sqlite3IdListDelete	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
	l.sfnei	r16,0
	l.bnf	.L2787
	l.nop			# nop delay slot
.L2792:
	l.lwz   	r3,20(r2)	 # SI load
	l.sfgesi	r3,0
	l.bf	.L2789	# delay slot filled
	l.lwz   	r16,36(r2)	 # SI load
	l.lwz   	r4,16(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L2794	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
.L2787:
	l.addi	r1,r1,16
.L2793:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE1076:
	.size	sqlite3DeleteTriggerStep, .-sqlite3DeleteTriggerStep
	.align	4
.proc	sqlite3DeleteTrigger
	.type	sqlite3DeleteTrigger, @function
sqlite3DeleteTrigger:
.LFB1085:
	l.sw    	-12(r1),r2	 # SI store
.LCFI934:
	l.sw    	-8(r1),r14	 # SI store
.LCFI935:
	l.sw    	-4(r1),r9	 # SI store
.LCFI936:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI937:
	l.sfeqi	r4,0
	l.bf	.L2795	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3DeleteTriggerStep	# delay slot filled
	l.lwz   	r4,36(r4)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,4(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3IdListDelete	# delay slot filled
	l.lwz   	r4,16(r2)	 # SI load
	l.lwz   	r3,24(r2)	 # SI load
	l.sfgesi	r3,0
	l.bnf	.L2798	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L2798:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,20(r2)	 # SI load
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L2795:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1085:
	.size	sqlite3DeleteTrigger, .-sqlite3DeleteTrigger
	.align	4
.proc	sqlite3SchemaFree
	.type	sqlite3SchemaFree, @function
sqlite3SchemaFree:
.LFB932:
	l.sw    	-12(r1),r2	 # SI store
.LCFI938:
	l.lwz   	r7,36(r3)	 # SI load
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r6,40(r3)	 # SI load
	l.lwz   	r5,44(r3)	 # SI load
	l.lwz   	r4,48(r3)	 # SI load
	l.lwz   	r13,4(r3)	 # SI load
	l.lwz   	r12,8(r3)	 # SI load
	l.lwz   	r11,12(r3)	 # SI load
	l.lwz   	r8,16(r3)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	-8(r1),r14	 # SI store
.LCFI939:
	l.sw    	-4(r1),r9	 # SI store
.LCFI940:
	l.sw    	44(r2),r3	 # SI store
	l.addi  	r1,r1,-44
.LCFI941:
	l.sw    	40(r2),r3	 # SI store
	l.sw    	36(r2),r3	 # SI store
	l.sw    	48(r2),r3	 # SI store
	l.addi  	r3,r2,20
	l.sw    	16(r1),r13	 # SI store
	l.sw    	20(r1),r12	 # SI store
	l.sw    	24(r1),r11	 # SI store
	l.sw    	28(r1),r8	 # SI store
	l.sw    	0(r1),r7	 # SI store
	l.sw    	4(r1),r6	 # SI store
	l.sw    	8(r1),r5	 # SI store
	l.jal   	sqlite3HashClear	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
	l.lwz   	r14,8(r1)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L2800
	l.nop			# nop delay slot
.L2805:
	l.lwz   	r4,8(r14)	 # SI load
	l.jal   	sqlite3DeleteTrigger	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r14,0(r14)	 # SI load
	l.sfnei	r14,0
	l.bf	.L2805
	l.nop			# nop delay slot
.L2800:
	l.jal   	sqlite3HashClear	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r14,24(r1)	 # SI load
	l.sw    	12(r2),r4	 # SI store
	l.sw    	8(r2),r4	 # SI store
	l.sw    	4(r2),r4	 # SI store
	l.sfeq 	r14,r4
	l.bf	.L2802	# delay slot filled
	l.sw    	16(r2),r4	 # SI store
.L2804:
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.lwz   	r3,8(r14)	 # SI load
	l.lwz   	r14,0(r14)	 # SI load
	l.sfnei	r14,0
	l.bf	.L2804
	l.nop			# nop delay slot
.L2802:
	l.jal   	sqlite3HashClear	# delay slot filled
	l.addi  	r3,r1,16
	l.lhz   	r3,58(r2)	 # zero_extendqisi2
	l.addi  	r4,r0,-2	 # move immediate I
	l.and   	r3,r3,r4
	l.addi  	r4,r0,0	 # move immediate I
	l.sh    	58(r2),r3	 # movhi
	l.sw    	52(r2),r4	 # SI store
	l.addi	r1,r1,44
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE932:
	.size	sqlite3SchemaFree, .-sqlite3SchemaFree
	.align	4
.proc	sqlite3FindCollSeq
	.type	sqlite3FindCollSeq, @function
sqlite3FindCollSeq:
.LFB927:
	l.sw    	-28(r1),r14	 # SI store
.LCFI942:
	l.sw    	-24(r1),r16	 # SI store
.LCFI943:
	l.sw    	-20(r1),r18	 # SI store
.LCFI944:
	l.sw    	-16(r1),r20	 # SI store
.LCFI945:
	l.sw    	-12(r1),r22	 # SI store
.LCFI946:
	l.sw    	-4(r1),r9	 # SI store
.LCFI947:
	l.sw    	-32(r1),r2	 # SI store
.LCFI948:
	l.sw    	-8(r1),r24	 # SI store
.LCFI949:
	l.ori   	r16,r5,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI950:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r14,r6,0	 # move reg to reg
	l.ori   	r20,r7,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L2809	# delay slot filled
	l.ori   	r22,r4,0	 # move reg to reg
	l.sfgesi	r6,0
	l.bnf	.L2818
	l.nop			# nop delay slot
.L2810:
	l.addi  	r24,r18,388
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3HashFind	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sub   	r3,r0,r11
	l.or    	r3,r11,r3
	l.sfltsi	r3,0
	l.bnf	.L2819	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L2814:
	l.sfeqi	r2,0
.L2821:
	l.bf	.L2815	# delay slot filled
	l.addi  	r4,r22,-1
	l.slli  	r3,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r3,r4
	l.add   	r2,r2,r4
.L2815:
	l.addi	r1,r1,32
.L2820:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L2819:
	l.sub   	r3,r0,r20
	l.or    	r20,r3,r20
	l.sfgesi	r20,0
	l.bf	.L2821	# delay slot filled
	l.sfeqi	r2,0
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r14,61
	l.sfeqi	r11,0
	l.bf	.L2815	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r6,r11,60
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.addi  	r3,r11,20
	l.sw    	0(r11),r6	 # SI store
	l.sb    	4(r11),r4	    # movqi
	l.addi  	r7,r11,40
	l.addi  	r4,r0,2	 # movqi: move immediate
	l.sw    	0(r3),r6	 # SI store
	l.sb    	4(r3),r4	    # movqi
	l.sw    	0(r7),r6	 # SI store
	l.ori   	r3,r6,0	 # move reg to reg
	l.addi  	r6,r0,3	 # movqi: move immediate
	l.ori   	r4,r16,0	 # move reg to reg
	l.sb    	4(r7),r6	    # movqi
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.add   	r4,r4,r14
	l.ori   	r3,r24,0	 # move reg to reg
	l.sb    	0(r4),r6	    # movqi
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L2821	# delay slot filled
	l.sfeqi	r2,0
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.ori   	r3,r18,0	 # move reg to reg
	l.sb    	30(r18),r2	    # movqi
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L2820	# delay slot filled
	l.addi	r1,r1,32
.L2809:
	l.j     	.L2814	# delay slot filled
	l.lwz   	r2,44(r3)	 # SI load
.L2818:
	l.lbs   	r14,0(r5)	 # extendqisi2_no_sext_mem
	l.sfeqi	r14,0
	l.bf	.L2810	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.addi  	r2,r2,1
.L2822:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L2822	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r16
	l.ori   	r3,r3,65535
	l.j     	.L2810	# delay slot filled
	l.and   	r14,r2,r3
.LFE927:
	.size	sqlite3FindCollSeq, .-sqlite3FindCollSeq
	.align	4
.proc	sqlite3ResetInternalSchema
	.type	sqlite3ResetInternalSchema, @function
sqlite3ResetInternalSchema:
.LFB857:
	l.sw    	-28(r1),r2	 # SI store
.LCFI951:
	l.sw    	-20(r1),r16	 # SI store
.LCFI952:
	l.sw    	-16(r1),r18	 # SI store
.LCFI953:
	l.sw    	-4(r1),r9	 # SI store
.LCFI954:
	l.sw    	-24(r1),r14	 # SI store
.LCFI955:
	l.sw    	-12(r1),r20	 # SI store
.LCFI956:
	l.sw    	-8(r1),r22	 # SI store
.LCFI957:
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI958:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r4,0
	l.bnf	.L2843	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
	l.lwz   	r5,4(r2)	 # SI load
.L2848:
	l.sfges 	r18,r5
	l.bf	.L2825	# delay slot filled
	l.add   	r14,r18,r18
	l.add   	r14,r14,r18
	l.j     	.L2828	# delay slot filled
	l.slli  	r14,r14,3
.L2844:
	l.lwz   	r5,4(r2)	 # SI load
	l.sfgts 	r5,r16
	l.bnf	.L2825
	l.nop			# nop delay slot
.L2828:
	l.lwz   	r3,8(r2)	 # SI load
	l.addi  	r16,r16,1
	l.add   	r3,r3,r14
	l.addi  	r14,r14,24
	l.lwz   	r5,20(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L2826	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	sqlite3SchemaFree
	l.nop			# nop delay slot
.L2826:
	l.sfgtsi	r18,0
	l.bnf	.L2844
	l.nop			# nop delay slot
.L2823:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L2825:
	l.lwz   	r3,12(r2)	 # SI load
	l.addi  	r4,r0,-17	 # move immediate I
	l.sfgtsi	r5,0
	l.and   	r3,r3,r4
	l.bnf	.L2845	# delay slot filled
	l.sw    	12(r2),r3	 # SI store
	l.lwz   	r6,8(r2)	 # SI load
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r3,r6,0	 # move reg to reg
	l.j     	.L2833	# delay slot filled
	l.ori   	r18,r16,0	 # move reg to reg
.L2831:
	l.sfgts 	r5,r18
	l.bnf	.L2849	# delay slot filled
	l.sflesi	r5,2
.L2833:
	l.add   	r14,r6,r16
	l.addi  	r18,r18,1
	l.lwz   	r4,4(r14)	 # SI load
	l.sfnei	r4,0
	l.bf	.L2831	# delay slot filled
	l.addi  	r16,r16,24
	l.lwz   	r4,12(r14)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2832	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r4,16(r14)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2832
	l.nop			# nop delay slot
	l.jalr  	r4
	l.nop			# nop delay slot
	l.lwz   	r5,4(r2)	 # SI load
	l.lwz   	r6,8(r2)	 # SI load
.L2832:
	l.addi  	r3,r0,0	 # move immediate I
	l.sfgts 	r5,r18
	l.sw    	12(r14),r3	 # SI store
	l.bf	.L2833	# delay slot filled
	l.ori   	r3,r6,0	 # move reg to reg
	l.sflesi	r5,2
.L2849:
	l.bf	.L2830	# delay slot filled
	l.addi  	r16,r0,2	 # move immediate I
	l.addi  	r20,r0,48	 # move immediate I
	l.ori   	r18,r16,0	 # move reg to reg
.L2838:
	l.add   	r3,r16,r16
	l.add   	r14,r6,r20
	l.add   	r3,r3,r16
	l.lwz   	r22,4(r14)	 # SI load
	l.sfnei	r22,0
	l.bnf	.L2847	# delay slot filled
	l.slli  	r3,r3,3
	l.sfles 	r18,r16
	l.add   	r3,r6,r3
	l.bf	.L2835	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r4,0(r14)	 # SI load
	l.sw    	0(r3),r4	 # SI store
	l.lwz   	r4,4(r14)	 # SI load
	l.sw    	4(r3),r4	 # SI store
	l.lwz   	r4,8(r14)	 # SI load
	l.sw    	8(r3),r4	 # SI store
	l.lwz   	r4,12(r14)	 # SI load
	l.sw    	12(r3),r4	 # SI store
	l.lwz   	r4,16(r14)	 # SI load
	l.sw    	16(r3),r4	 # SI store
	l.lwz   	r4,20(r14)	 # SI load
	l.sw    	20(r3),r4	 # SI store
	l.lwz   	r5,4(r2)	 # SI load
	l.lwz   	r6,8(r2)	 # SI load
.L2835:
	l.addi  	r18,r18,1
	l.sfles 	r5,r18
	l.bnf	.L2838	# delay slot filled
	l.addi  	r20,r20,24
	l.sub   	r5,r5,r16
	l.add   	r3,r16,r16
	l.add   	r4,r5,r5
	l.add   	r3,r3,r16
	l.add   	r5,r4,r5
	l.slli  	r3,r3,3
	l.slli  	r5,r5,3
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.add   	r3,r6,r3
	l.sfnei	r16,2
	l.bf	.L2823	# delay slot filled
	l.sw    	4(r2),r16	 # SI store
.L2839:
	l.lwz   	r5,8(r2)	 # SI load
	l.addi  	r14,r2,420
	l.sfeq 	r5,r14
	l.bf	.L2823	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,0(r5)	 # SI load
	l.sw    	0(r14),r4	 # SI store
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r6,4(r5)	 # SI load
	l.sw    	4(r14),r6	 # SI store
	l.lwz   	r6,8(r5)	 # SI load
	l.sw    	8(r14),r6	 # SI store
	l.lwz   	r6,12(r5)	 # SI load
	l.sw    	12(r14),r6	 # SI store
	l.lwz   	r6,16(r5)	 # SI load
	l.sw    	16(r14),r6	 # SI store
	l.lwz   	r6,20(r5)	 # SI load
	l.sw    	20(r14),r6	 # SI store
	l.lwz   	r6,24(r5)	 # SI load
	l.sw    	24(r14),r6	 # SI store
	l.lwz   	r6,28(r5)	 # SI load
	l.sw    	28(r14),r6	 # SI store
	l.lwz   	r6,32(r5)	 # SI load
	l.sw    	32(r14),r6	 # SI store
	l.lwz   	r6,36(r5)	 # SI load
	l.sw    	36(r14),r6	 # SI store
	l.lwz   	r6,40(r5)	 # SI load
	l.sw    	40(r14),r6	 # SI store
	l.lwz   	r5,44(r5)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.sw    	44(r14),r5	 # SI store
	l.j     	.L2823	# delay slot filled
	l.sw    	8(r2),r14	 # SI store
.L2847:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,0(r14)	 # SI load
	l.lwz   	r6,8(r2)	 # SI load
	l.sw    	0(r14),r22	 # SI store
	l.j     	.L2835	# delay slot filled
	l.lwz   	r5,4(r2)	 # SI load
.L2843:
	l.jal   	sqlite3BtreeEnterAll
	l.nop			# nop delay slot
	l.j     	.L2848	# delay slot filled
	l.lwz   	r5,4(r2)	 # SI load
.L2845:
	l.lwz   	r3,8(r2)	 # SI load
.L2830:
	l.addi  	r5,r5,-2
	l.addi  	r3,r3,48
	l.add   	r6,r5,r5
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r5,r6,r5
	l.jal   	memset	# delay slot filled
	l.slli  	r5,r5,3
	l.addi  	r3,r0,2	 # move immediate I
	l.j     	.L2839	# delay slot filled
	l.sw    	4(r2),r3	 # SI store
.LFE857:
	.size	sqlite3ResetInternalSchema, .-sqlite3ResetInternalSchema
	.align	4
.proc	pcache1Init
	.type	pcache1Init, @function
pcache1Init:
.LFB249:
	l.movhi  	r3,hi(pcache1_g)
	l.movhi  	r4,hi(sqlite3Config)
	l.sw    	-4(r1),r2	 # SI store
.LCFI959:
	l.ori   	r3,r3,lo(pcache1_g)
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r4,r4,lo(sqlite3Config)
	l.sw    	0(r3),r2	 # SI store
	l.lwz   	r4,4(r4)	 # SI load
	l.sw    	4(r3),r2	 # SI store
	l.sw    	8(r3),r2	 # SI store
	l.sw    	12(r3),r2	 # SI store
	l.sw    	16(r3),r2	 # SI store
	l.sw    	20(r3),r2	 # SI store
	l.sw    	24(r3),r2	 # SI store
	l.sw    	28(r3),r2	 # SI store
	l.sw    	32(r3),r2	 # SI store
	l.sw    	36(r3),r2	 # SI store
	l.sfeq 	r4,r2
.LCFI960:
	l.bf	.L2851	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi  	r4,r0,8	 # move immediate I
	l.sw    	0(r3),r4	 # SI store
.L2851:
	l.addi	r1,r1,4
	l.addi  	r11,r0,0	 # move immediate I
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE249:
	.size	pcache1Init, .-pcache1Init
	.align	4
.proc	sqlite3VdbeMakeReady
	.type	sqlite3VdbeMakeReady, @function
sqlite3VdbeMakeReady:
.LFB574:
	l.sw    	-44(r1),r2	 # SI store
.LCFI961:
	l.ori   	r2,r3,0	 # move reg to reg
	l.movhi 	r3,hi(-1108213760)	 # move immediate M
	l.sw    	-36(r1),r16	 # SI store
.LCFI962:
	l.sw    	-32(r1),r18	 # SI store
.LCFI963:
	l.sw    	-24(r1),r22	 # SI store
.LCFI964:
	l.sw    	-4(r1),r9	 # SI store
.LCFI965:
	l.sw    	-40(r1),r14	 # SI store
.LCFI966:
	l.sw    	-28(r1),r20	 # SI store
.LCFI967:
	l.sw    	-20(r1),r24	 # SI store
.LCFI968:
	l.sw    	-16(r1),r26	 # SI store
.LCFI969:
	l.sw    	-12(r1),r28	 # SI store
.LCFI970:
	l.sw    	-8(r1),r30	 # SI store
.LCFI971:
	l.ori   	r3,r3,3491
	l.addi  	r1,r1,-84
.LCFI972:
	l.sw    	68(r2),r3	 # SI store
	l.sw    	16(r1),r6	 # SI store
	l.sw    	4(r1),r7	 # SI store
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r22,r5,0	 # move reg to reg
	l.sfltsi	r4,0
	l.bf	.L2853	# delay slot filled
	l.lwz   	r16,0(r2)	 # SI load
	l.lbz   	r20,30(r16)	 # zero_extendqisi2
	l.sfnei	r20,0
	l.bnf	.L2906
	l.nop			# nop delay slot
.L2853:
	l.lbz   	r4,124(r2)	 # zero_extendqisi2
.L2921:
	l.lwz   	r5,4(r1)	 # SI load
	l.addi  	r8,r0,0	 # move immediate I
	l.or    	r4,r5,r4
	l.addi  	r3,r0,-1	 # move immediate I
	l.sb    	124(r2),r4	    # movqi
	l.movhi 	r4,hi(-1108213760)	 # move immediate M
	l.addi  	r5,r0,2	 # move immediate I
	l.ori   	r4,r4,3491
	l.sb    	127(r2),r3	    # movqi
	l.sw    	68(r2),r4	 # SI store
	l.addi  	r4,r0,1	 # move immediate I
	l.sw    	96(r2),r3	 # SI store
	l.sw    	100(r2),r8	 # SI store
	l.sw    	104(r2),r5	 # SI store
	l.sw    	132(r2),r8	 # SI store
	l.sw    	80(r2),r4	 # SI store
	l.sw    	212(r2),r8	 # SI store
	l.addi	r1,r1,84
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L2906:
	l.lwz   	r24,16(r2)	 # SI load
	l.lwz   	r11,12(r2)	 # SI load
	l.slli  	r3,r24,2
	l.slli  	r24,r24,4
	l.slli  	r4,r11,4
	l.slli  	r14,r11,2
	l.add   	r24,r3,r24
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.lwz   	r12,20(r2)	 # SI load
	l.add   	r14,r14,r4
	l.addi  	r11,r11,-1
	l.sb    	130(r2),r3	    # movqi
	l.sb    	129(r2),r20	    # movqi
	l.add   	r14,r12,r14
	l.add   	r24,r12,r24
	l.sfltsi	r11,0
	l.bf	.L2854	# delay slot filled
	l.lwz   	r4,32(r2)	 # SI load
	l.ori   	r26,r20,0	 # move reg to reg
	l.addi  	r13,r12,8
	l.j     	.L2866	# delay slot filled
	l.ori   	r28,r20,0	 # move reg to reg
.L2861:
	l.bnf	.L2907	# delay slot filled
	l.sfeqi	r8,111
	l.bf	.L2894	# delay slot filled
	l.sfnei	r8,102
	l.bnf	.L2908
	l.nop			# nop delay slot
.L2863:
	l.xori  	r3,r8,30
.L2929:
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bf	.L2894	# delay slot filled
	l.xori  	r3,r8,125
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bf	.L2894	# delay slot filled
	l.sfnei	r8,103
	l.bnf	.L2909
	l.nop			# nop delay slot
.L2862:
	l.movhi  	r5,hi(opcodeProperty)
.L2924:
	l.ori   	r5,r5,lo(opcodeProperty)
.L2925:
	l.add   	r8,r8,r5
	l.lbz   	r3,0(r8)	 # zero_extendqisi2
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L2864
	l.nop			# nop delay slot
	l.lwz   	r3,0(r13)	 # SI load
	l.sfgesi	r3,0
	l.bnf	.L2910	# delay slot filled
	l.xori  	r3,r3,0xffff
.L2864:
	l.addi  	r11,r11,-1
	l.sfeqi	r11,-1
	l.bf	.L2865	# delay slot filled
	l.addi  	r13,r13,20
.L2911:
	l.addi  	r12,r12,20
.L2866:
	l.lbz   	r8,0(r12)	 # zero_extendqisi2
	l.xori  	r3,r8,100
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bf	.L2898	# delay slot filled
	l.xori  	r3,r8,22
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bf	.L2855	# delay slot filled
	l.sfnei	r8,125
.L2898:
	l.lbz   	r3,3(r12)	 # zero_extendqisi2
	l.sfges 	r20,r3
	l.bf	.L2923	# delay slot filled
	l.sfnei	r8,39
	l.ori   	r20,r3,0	 # move reg to reg
.L2923:
	l.bf	.L2861	# delay slot filled
	l.sfnei	r8,43
	l.lwz   	r3,4(r12)	 # SI load
	l.sfnei	r3,19
	l.bf	.L2924	# delay slot filled
	l.movhi  	r5,hi(opcodeProperty)
	l.lwz   	r3,0(r13)	 # SI load
	l.sfeqi	r3,2
	l.bnf	.L2925	# delay slot filled
	l.ori   	r5,r5,lo(opcodeProperty)
.L2894:
	l.j     	.L2862	# delay slot filled
	l.addi  	r26,r0,1	 # move immediate I
.L2855:
	l.bf	.L2923	# delay slot filled
	l.sfnei	r8,39
	l.lwz   	r3,0(r13)	 # SI load
	l.sfges 	r20,r3
	l.bf	.L2863
	l.nop			# nop delay slot
	l.j     	.L2863	# delay slot filled
	l.ori   	r20,r3,0	 # move reg to reg
.L2907:
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.addi  	r28,r0,1	 # move immediate I
	l.j     	.L2862	# delay slot filled
	l.sb    	129(r2),r5	    # movqi
.L2910:
	l.addi  	r11,r11,-1
	l.slli  	r3,r3,2
	l.sfeqi	r11,-1
	l.add   	r3,r4,r3
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	0(r13),r3	 # SI store
	l.bnf	.L2911	# delay slot filled
	l.addi  	r13,r13,20
.L2865:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r8,r0,0	 # move immediate I
	l.sfne 	r26,r8
	l.bf	.L2873	# delay slot filled
	l.sw    	32(r2),r8	 # SI store
	l.sfne 	r28,r8
	l.bnf	.L2873	# delay slot filled
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.lwz   	r4,12(r2)	 # SI load
	l.sb    	129(r2),r3	    # movqi
	l.addi  	r4,r4,-1
	l.sfltsi	r4,0
	l.bnf	.L2905	# delay slot filled
	l.lwz   	r3,20(r2)	 # SI load
	l.j     	.L2869	# delay slot filled
	l.slli  	r20,r20,2
.L2872:
	l.sfeqi	r4,-1
	l.bf	.L2873
	l.nop			# nop delay slot
.L2912:
	l.addi  	r3,r3,20
.L2905:
	l.lbz   	r8,0(r3)	 # zero_extendqisi2
	l.sfnei	r8,43
	l.bf	.L2872	# delay slot filled
	l.addi  	r4,r4,-1
	l.addi  	r5,r0,24	 # movqi: move immediate
	l.sfeqi	r4,-1
	l.bnf	.L2912	# delay slot filled
	l.sb    	0(r3),r5	    # movqi
.L2873:
	l.slli  	r20,r20,2
.L2869:
	l.lwz   	r8,16(r1)	 # SI load
	l.add   	r22,r8,r22
	l.sflesi	r22,9
	l.bnf	.L2913	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L2926	# delay slot filled
	l.slli  	r3,r22,4
	l.lwz   	r4,4(r1)	 # SI load
.L2922:
	l.sub   	r3,r0,r4
	l.or    	r3,r3,r4
	l.sfltsi	r3,0
	l.bf	.L2896	# delay slot filled
	l.addi  	r7,r0,2400	 # move immediate I
	l.slli  	r3,r22,4
.L2926:
	l.slli  	r7,r22,8
	l.sub   	r7,r7,r3
.L2874:
	l.andi  	r3,r14,7
	l.add   	r14,r14,r3
	l.sfgeu 	r24,r14
	l.bf	.L2927	# delay slot filled
	l.addi  	r8,r2,76
	l.ori   	r24,r14,0	 # move reg to reg
.L2927:
	l.lwz   	r5,16(r1)	 # SI load
	l.slli  	r4,r18,2
	l.sw    	12(r1),r8	 # SI store
	l.addi  	r8,r2,56
	l.slli  	r3,r5,2
	l.slli  	r6,r18,8
	l.slli  	r5,r18,4
	l.addi  	r4,r4,7
	l.sw    	8(r1),r8	 # SI store
	l.addi  	r8,r0,-8	 # move immediate I
	l.sub   	r6,r6,r5
	l.and   	r8,r4,r8
	l.addi  	r20,r20,7
	l.addi  	r3,r3,7
	l.addi  	r5,r0,-8	 # move immediate I
	l.addi  	r4,r0,-8	 # move immediate I
	l.and   	r5,r20,r5
	l.and   	r4,r3,r4
	l.addi  	r30,r2,36
	l.addi  	r28,r2,60
	l.addi  	r26,r2,48
	l.sw    	20(r1),r7	 # SI store
	l.sw    	24(r1),r6	 # SI store
	l.sw    	28(r1),r5	 # SI store
	l.sw    	32(r1),r8	 # SI store
	l.sw    	36(r1),r4	 # SI store
.L2888:
	l.sub   	r5,r24,r14
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	0(r1),r5	 # SI store
	l.jal   	memset	# delay slot filled
	l.ori   	r20,r4,0	 # move reg to reg
	l.lwz   	r8,12(r1)	 # SI load
	l.lwz   	r3,0(r8)	 # SI load
	l.sfne 	r3,r20
	l.bnf	.L2914	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
.L2878:
	l.lwz   	r8,8(r1)	 # SI load
	l.lwz   	r3,0(r8)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L2915	# delay slot filled
	l.sub   	r3,r24,r14
.L2879:
	l.lwz   	r3,0(r30)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L2928	# delay slot filled
	l.sub   	r3,r24,r14
.L2881:
	l.lwz   	r3,0(r28)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L2917	# delay slot filled
	l.sub   	r3,r24,r14
.L2883:
	l.lwz   	r3,0(r26)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L2918
	l.nop			# nop delay slot
.L2885:
	l.sfeqi	r20,0
	l.bnf	.L2919	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,16(r1)	 # SI load
.L2930:
	l.lwz   	r6,56(r2)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L2889	# delay slot filled
	l.sw    	44(r2),r4	 # SI store
	l.sfeqi	r18,0
	l.bf	.L2889	# delay slot filled
	l.sw    	52(r2),r18	 # SI store
	l.addi  	r6,r6,28
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r5,r0,1	 # movhi: move immediate
.L2931:
	l.sw    	-12(r6),r16	 # SI store
	l.sh    	0(r6),r5	 # movhi
	l.addi  	r3,r3,1
	l.sfne 	r3,r18
	l.bf	.L2931	# delay slot filled
	l.addi  	r6,r6,240
.L2889:
	l.lwz   	r4,76(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2853	# delay slot filled
	l.addi  	r3,r4,-240
	l.sw    	72(r2),r22	 # SI store
	l.sflesi	r22,0
	l.bf	.L2853	# delay slot filled
	l.sw    	76(r2),r3	 # SI store
	l.addi  	r4,r4,28
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r8,r0,1	 # movhi: move immediate
.L2932:
	l.sw    	-12(r4),r16	 # SI store
	l.sh    	0(r4),r8	 # movhi
	l.addi  	r6,r6,1
	l.sfges 	r22,r6
	l.bf	.L2932	# delay slot filled
	l.addi  	r4,r4,240
	l.j     	.L2921	# delay slot filled
	l.lbz   	r4,124(r2)	 # zero_extendqisi2
.L2908:
	l.lwz   	r3,0(r13)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L2929	# delay slot filled
	l.xori  	r3,r8,30
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.j     	.L2862	# delay slot filled
	l.sb    	130(r2),r3	    # movqi
.L2913:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L2926	# delay slot filled
	l.slli  	r3,r22,4
	l.j     	.L2922	# delay slot filled
	l.lwz   	r4,4(r1)	 # SI load
.L2919:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.sw    	208(r2),r11	 # SI store
	l.lbz   	r3,30(r16)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L2930	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L2888	# delay slot filled
	l.add   	r24,r11,r20
.L2918:
	l.sub   	r24,r24,r14
	l.lwz   	r8,36(r1)	 # SI load
	l.sfgts 	r8,r24
	l.bf	.L2886	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.j     	.L2885	# delay slot filled
	l.sw    	0(r26),r14	 # SI store
.L2917:
	l.lwz   	r4,32(r1)	 # SI load
	l.sfgts 	r4,r3
	l.bf	.L2884	# delay slot filled
	l.lwz   	r5,32(r1)	 # SI load
	l.sw    	0(r28),r14	 # SI store
	l.j     	.L2883	# delay slot filled
	l.add   	r14,r14,r4
.L2915:
	l.lwz   	r4,24(r1)	 # SI load
	l.sfgts 	r4,r3
	l.bf	.L2880	# delay slot filled
	l.lwz   	r5,24(r1)	 # SI load
	l.sw    	0(r8),r14	 # SI store
	l.lwz   	r3,0(r30)	 # SI load
	l.sfnei	r3,0
	l.bf	.L2881	# delay slot filled
	l.add   	r14,r14,r4
	l.sub   	r3,r24,r14
.L2928:
	l.lwz   	r8,28(r1)	 # SI load
	l.sfgts 	r8,r3
	l.bf	.L2882	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
	l.sw    	0(r30),r14	 # SI store
	l.j     	.L2881	# delay slot filled
	l.add   	r14,r14,r8
.L2914:
	l.lwz   	r20,20(r1)	 # SI load
	l.sflts 	r4,r20
	l.bf	.L2878	# delay slot filled
	l.lwz   	r5,20(r1)	 # SI load
	l.sw    	0(r8),r14	 # SI store
	l.ori   	r20,r3,0	 # move reg to reg
	l.j     	.L2878	# delay slot filled
	l.add   	r14,r14,r5
.L2896:
	l.j     	.L2874	# delay slot filled
	l.addi  	r22,r0,10	 # move immediate I
.L2909:
	l.lwz   	r3,-16(r12)	 # SI load
	l.sfgts 	r3,r20
	l.bnf	.L2924	# delay slot filled
	l.movhi  	r5,hi(opcodeProperty)
	l.j     	.L2924	# delay slot filled
	l.ori   	r20,r3,0	 # move reg to reg
.L2886:
	l.j     	.L2885	# delay slot filled
	l.add   	r20,r20,r3
.L2880:
	l.j     	.L2879	# delay slot filled
	l.add   	r20,r20,r5
.L2884:
	l.j     	.L2883	# delay slot filled
	l.add   	r20,r20,r5
.L2882:
	l.j     	.L2881	# delay slot filled
	l.add   	r20,r20,r3
.L2854:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.j     	.L2869	# delay slot filled
	l.sw    	32(r2),r20	 # SI store
.LFE574:
	.size	sqlite3VdbeMakeReady, .-sqlite3VdbeMakeReady
	.align	4
.proc	sqlite3PagerOpenSavepoint
	.type	sqlite3PagerOpenSavepoint, @function
sqlite3PagerOpenSavepoint:
.LFB339:
	l.sw    	-24(r1),r2	 # SI store
.LCFI973:
	l.sw    	-16(r1),r16	 # SI store
.LCFI974:
	l.sw    	-12(r1),r18	 # SI store
.LCFI975:
	l.sw    	-4(r1),r9	 # SI store
.LCFI976:
	l.sw    	-20(r1),r14	 # SI store
.LCFI977:
	l.sw    	-8(r1),r20	 # SI store
.LCFI978:
	l.lwz   	r16,88(r3)	 # SI load
	l.addi  	r1,r1,-24
.LCFI979:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.sfges 	r16,r4
	l.bf	.L2934	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lbz   	r11,6(r3)	 # zero_extendqisi2
	l.sfeqi	r11,0
	l.bnf	.L2946	# delay slot filled
	l.slli  	r5,r18,5
.L2934:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L2946:
	l.slli  	r4,r4,2
	l.lwz   	r3,84(r3)	 # SI load
	l.jal   	sqlite3Realloc	# delay slot filled
	l.sub   	r4,r5,r4
	l.sfeqi	r11,0
	l.bf	.L2942	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.slli  	r5,r16,2
	l.slli  	r14,r16,5
	l.sub   	r3,r18,r16
	l.addi  	r4,r0,0	 # move immediate I
	l.sub   	r14,r14,r5
	l.slli  	r6,r3,5
	l.slli  	r5,r3,2
	l.add   	r14,r11,r14
	l.sub   	r5,r6,r5
	l.jal   	memset	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	84(r2),r20	 # SI store
	l.j     	.L2938	# delay slot filled
	l.sw    	88(r2),r18	 # SI store
.L2945:
	l.sw    	4(r14),r4	 # SI store
	l.lwz   	r4,48(r2)	 # SI load
	l.sw    	0(r14),r5	 # SI store
	l.sw    	24(r14),r4	 # SI store
	l.jal   	sqlite3BitvecCreate	# delay slot filled
	l.addi  	r16,r16,1
	l.sfeqi	r11,0
	l.bf	.L2942	# delay slot filled
	l.sw    	16(r14),r11	 # SI store
	l.sfgts 	r18,r16
	l.bnf	.L2947	# delay slot filled
	l.addi  	r14,r14,28
.L2938:
	l.lwz   	r4,60(r2)	 # SI load
	l.lwz   	r3,24(r2)	 # SI load
	l.lwz   	r4,0(r4)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2935	# delay slot filled
	l.sw    	20(r14),r3	 # SI store
	l.lwz   	r5,68(r2)	 # SI load
	l.sfgtsi	r5,0
	l.bf	.L2945	# delay slot filled
	l.lwz   	r4,72(r2)	 # SI load
	l.sfnei	r5,0
	l.bf	.L2935	# delay slot filled
	l.sfnei	r4,0
	l.bf	.L2945
	l.nop			# nop delay slot
.L2935:
	l.lwz   	r4,108(r2)	 # SI load
	l.j     	.L2945	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L2942:
	l.addi	r1,r1,24
	l.addi  	r11,r0,7	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L2947:
	l.addi	r1,r1,24
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	openSubJournal	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.LFE339:
	.size	sqlite3PagerOpenSavepoint, .-sqlite3PagerOpenSavepoint
	.align	4
.proc	exprDup
	.type	exprDup, @function
exprDup:
.LFB754:
	l.sw    	-40(r1),r14	 # SI store
.LCFI980:
	l.sw    	-24(r1),r22	 # SI store
.LCFI981:
	l.sw    	-20(r1),r24	 # SI store
.LCFI982:
	l.sw    	-12(r1),r28	 # SI store
.LCFI983:
	l.sw    	-8(r1),r30	 # SI store
.LCFI984:
	l.sw    	-4(r1),r9	 # SI store
.LCFI985:
	l.sw    	-44(r1),r2	 # SI store
.LCFI986:
	l.sw    	-36(r1),r16	 # SI store
.LCFI987:
	l.sw    	-32(r1),r18	 # SI store
.LCFI988:
	l.sw    	-28(r1),r20	 # SI store
.LCFI989:
	l.sw    	-16(r1),r26	 # SI store
.LCFI990:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-56
.LCFI991:
	l.ori   	r28,r3,0	 # move reg to reg
	l.ori   	r24,r5,0	 # move reg to reg
	l.ori   	r22,r6,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L2949	# delay slot filled
	l.ori   	r30,r4,0	 # move reg to reg
	l.sfeqi	r6,0
	l.bf	.L2950	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r2,0(r6)	 # SI load
	l.sw    	8(r1),r2	 # SI store
.L2951:
	l.sfeqi	r2,0
	l.bf	.L2949	# delay slot filled
	l.ori   	r30,r2,0	 # move reg to reg
	l.andi  	r3,r24,2
	l.andi  	r26,r24,1
	l.sw    	0(r1),r3	 # SI store
	l.sfeqi	r26,0
	l.bnf	.L2982	# delay slot filled
	l.addi  	r16,r0,64	 # move immediate I
.L2952:
	l.lwz   	r20,4(r14)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L2953	# delay slot filled
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.lwz   	r20,8(r14)	 # SI load
	l.ori   	r5,r5,65535
	l.and   	r20,r20,r5
	l.addi  	r20,r20,1
.L2953:
	l.sfeqi	r26,0
	l.bnf	.L2983	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lhz   	r3,2(r14)	 # zero_extendqisi2
	l.andi  	r4,r3,16384
	l.sfnei	r4,0
	l.bnf	.L2984	# delay slot filled
	l.slli  	r4,r3,16
	l.addi  	r7,r0,52	 # move immediate I
	l.addi  	r18,r0,12	 # move immediate I
	l.sw    	4(r1),r7	 # SI store
.L2956:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r3,8(r1)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r3,r3,r18
	l.jal   	memset	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,8191
	l.sfeqi	r16,20
	l.bf	.L2959	# delay slot filled
	l.sh    	2(r2),r3	 # movhi
.L2987:
	l.sfeqi	r16,36
	l.bf	.L2960	# delay slot filled
	l.sfeqi	r16,12
	l.bnf	.L2988	# delay slot filled
	l.sfeqi	r20,0
	l.ori   	r3,r3,16384
	l.sh    	2(r2),r3	 # movhi
.L2957:
	l.sfeqi	r20,0
.L2988:
	l.bnf	.L2985	# delay slot filled
	l.lwz   	r18,8(r1)	 # SI load
.L2961:
	l.lhz   	r4,2(r14)	 # zero_extendqisi2
	l.lhz   	r18,2(r2)	 # zero_extendqisi2
	l.or    	r3,r18,r4
	l.andi  	r5,r3,16384
	l.sfnei	r5,0
	l.bf	.L2962	# delay slot filled
	l.lwz   	r7,0(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L2963	# delay slot filled
	l.movhi 	r7,hi(-1073741824)	 # move immediate M
	l.lwz   	r6,4(r14)	 # SI load
	l.lwz   	r5,12(r14)	 # SI load
	l.sfeq 	r6,r5
	l.bf	.L2964	# delay slot filled
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r14)	 # SI load
	l.ori   	r3,r3,65535
	l.and   	r5,r5,r3
.L2965:
	l.lwz   	r3,8(r1)	 # SI load
	l.add   	r16,r20,r16
	l.add   	r3,r3,r16
	l.sw    	12(r2),r3	 # SI store
	l.jal   	memcpy	# delay slot filled
	l.lwz   	r4,12(r14)	 # SI load
	l.movhi 	r4,hi(2147418112)	 # move immediate M
	l.lwz   	r3,16(r2)	 # SI load
	l.ori   	r4,r4,65535
	l.lhz   	r18,2(r2)	 # zero_extendqisi2
	l.and   	r3,r3,r4
	l.sw    	16(r2),r3	 # SI store
	l.lhz   	r4,2(r14)	 # zero_extendqisi2
	l.or    	r3,r18,r4
.L2962:
	l.andi  	r3,r3,49152
	l.sfnei	r3,0
	l.bf	.L2989	# delay slot filled
	l.andi  	r3,r18,57344
	l.andi  	r4,r4,4096
	l.sfeqi	r4,0
	l.bf	.L2968	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,28(r14)	 # SI load
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.lhz   	r18,2(r2)	 # zero_extendqisi2
	l.sw    	28(r2),r11	 # SI store
.L2967:
	l.andi  	r3,r18,57344
.L2989:
	l.sfeqi	r3,0
	l.bf	.L2969	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	dupedExprNodeSize	# delay slot filled
	l.andi  	r18,r18,8192
	l.lwz   	r3,8(r1)	 # SI load
	l.sfeqi	r18,0
	l.add   	r11,r3,r11
	l.bnf	.L2986	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
.L2970:
	l.sfeqi	r22,0
	l.bf	.L2949	# delay slot filled
	l.lwz   	r2,8(r1)	 # SI load
	l.sw    	0(r22),r2	 # SI store
.L2949:
	l.addi	r1,r1,56
	l.ori   	r11,r30,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L2982:
	l.lwz   	r3,20(r14)	 # SI load
	l.sfnei	r3,0
	l.bf	.L2952	# delay slot filled
	l.addi  	r16,r0,36	 # move immediate I
	l.lwz   	r3,24(r14)	 # SI load
	l.sfnei	r3,0
	l.bf	.L2952
	l.nop			# nop delay slot
	l.lwz   	r3,32(r14)	 # SI load
	l.sfnei	r3,0
	l.bf	.L2952
	l.nop			# nop delay slot
	l.lwz   	r3,28(r14)	 # SI load
	l.sfnei	r3,0
	l.bf	.L2952
	l.nop			# nop delay slot
	l.lwz   	r4,0(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L2952	# delay slot filled
	l.addi  	r16,r0,12	 # move immediate I
	l.j     	.L2952	# delay slot filled
	l.addi  	r16,r0,20	 # move immediate I
.L2984:
	l.sfltsi	r4,0
	l.bf	.L2980	# delay slot filled
	l.andi  	r3,r3,8192
	l.sfeqi	r3,0
	l.bf	.L2981	# delay slot filled
	l.addi  	r6,r0,28	 # move immediate I
	l.addi  	r18,r0,36	 # move immediate I
	l.j     	.L2956	# delay slot filled
	l.sw    	4(r1),r6	 # SI store
.L2969:
	l.lhz   	r16,2(r14)	 # zero_extendqisi2
	l.andi  	r16,r16,49152
	l.sfnei	r16,0
	l.bf	.L2949	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,20(r14)	 # SI load
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	20(r2),r11	 # SI store
	l.lwz   	r4,24(r14)	 # SI load
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.j     	.L2949	# delay slot filled
	l.sw    	24(r2),r11	 # SI store
.L2985:
	l.addi  	r5,r20,-1
	l.add   	r18,r18,r16
	l.lwz   	r4,4(r14)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r3,r18,r20
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.movhi 	r6,hi(2147418112)	 # move immediate M
	l.sb    	-1(r3),r5	    # movqi
	l.ori   	r6,r6,65535
	l.lwz   	r3,8(r2)	 # SI load
	l.sw    	4(r2),r18	 # SI store
	l.and   	r3,r3,r6
	l.j     	.L2961	# delay slot filled
	l.sw    	8(r2),r3	 # SI store
.L2983:
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,8191
	l.sfeqi	r16,20
	l.bnf	.L2987	# delay slot filled
	l.sh    	2(r2),r3	 # movhi
.L2959:
	l.addi  	r4,r0,-32768	 # move immediate I
	l.or    	r3,r3,r4
	l.j     	.L2957	# delay slot filled
	l.sh    	2(r2),r3	 # movhi
.L2968:
	l.lwz   	r4,28(r14)	 # SI load
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.lhz   	r18,2(r2)	 # zero_extendqisi2
	l.j     	.L2967	# delay slot filled
	l.sw    	28(r2),r11	 # SI store
.L2963:
	l.lwz   	r5,16(r2)	 # SI load
	l.lwz   	r6,0(r1)	 # SI load
	l.and   	r5,r5,r7
	l.sw    	12(r2),r6	 # SI store
	l.j     	.L2962	# delay slot filled
	l.sw    	16(r2),r5	 # SI store
.L2960:
	l.ori   	r3,r3,8192
	l.j     	.L2957	# delay slot filled
	l.sh    	2(r2),r3	 # movhi
.L2981:
	l.sw    	4(r1),r26	 # SI store
	l.j     	.L2956	# delay slot filled
	l.addi  	r18,r0,64	 # move immediate I
.L2964:
	l.lwz   	r5,16(r14)	 # SI load
	l.ori   	r7,r7,65535
	l.lwz   	r6,8(r14)	 # SI load
	l.and   	r5,r5,r7
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.ori   	r7,r7,65535
	l.and   	r6,r6,r7
	l.sfeq 	r6,r5
	l.bnf	.L2965	# delay slot filled
	l.movhi 	r7,hi(-1073741824)	 # move immediate M
	l.lwz   	r6,16(r2)	 # SI load
	l.lwz   	r5,8(r2)	 # SI load
	l.and   	r6,r6,r7
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.ori   	r7,r7,65535
	l.and   	r5,r5,r7
	l.lwz   	r7,4(r2)	 # SI load
	l.or    	r5,r6,r5
	l.sw    	12(r2),r7	 # SI store
	l.j     	.L2962	# delay slot filled
	l.sw    	16(r2),r5	 # SI store
.L2986:
	l.addi  	r16,r1,8
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,20(r14)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	exprDup	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	20(r2),r11	 # SI store
	l.lwz   	r4,24(r14)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	exprDup	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.j     	.L2970	# delay slot filled
	l.sw    	24(r2),r11	 # SI store
.L2980:
	l.addi  	r3,r0,44	 # move immediate I
	l.addi  	r18,r0,20	 # move immediate I
	l.j     	.L2956	# delay slot filled
	l.sw    	4(r1),r3	 # SI store
.L2950:
	l.jal   	dupedExprSize	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L2951	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
.LFE754:
	.size	exprDup, .-exprDup
	.align	4
.proc	sqlite3ExprDup
	.type	sqlite3ExprDup, @function
sqlite3ExprDup:
.LFB755:
	l.sw    	-4(r1),r9	 # SI store
.LCFI992:
	l.addi  	r1,r1,-4
.LCFI993:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	exprDup	# delay slot filled	# sibcall s
	l.addi  	r6,r0,0	 # move immediate I
.LFE755:
	.size	sqlite3ExprDup, .-sqlite3ExprDup
	.align	4
.proc	sqlite3ExprListDup
	.type	sqlite3ExprListDup, @function
sqlite3ExprListDup:
.LFB757:
	l.sw    	-24(r1),r16	 # SI store
.LCFI994:
	l.sw    	-20(r1),r18	 # SI store
.LCFI995:
	l.sw    	-12(r1),r22	 # SI store
.LCFI996:
	l.sw    	-8(r1),r24	 # SI store
.LCFI997:
	l.sw    	-4(r1),r9	 # SI store
.LCFI998:
	l.sw    	-32(r1),r2	 # SI store
.LCFI999:
	l.sw    	-28(r1),r14	 # SI store
.LCFI1000:
	l.sw    	-16(r1),r20	 # SI store
.LCFI1001:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI1002:
	l.ori   	r22,r3,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bnf	.L2997	# delay slot filled
	l.ori   	r24,r5,0	 # move reg to reg
.L2992:
	l.addi	r1,r1,32
.L2999:
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L2997:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r0,16	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L2992	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r2,0(r16)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r11),r2	 # SI store
	l.sw    	8(r11),r3	 # SI store
	l.lwz   	r4,0(r16)	 # SI load
	l.sw    	4(r11),r2	 # SI store
	l.slli  	r4,r4,4
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L2998	# delay slot filled
	l.sw    	12(r18),r11	 # SI store
	l.lwz   	r2,0(r16)	 # SI load
	l.sflesi	r2,0
	l.bf	.L2992	# delay slot filled
	l.lwz   	r14,12(r16)	 # SI load
	l.addi  	r14,r14,8
	l.addi  	r2,r11,8
	l.addi  	r20,r0,0	 # move immediate I
.L2994:
	l.lwz   	r4,-8(r14)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r20,r20,1
	l.lwz   	r4,-4(r14)	 # SI load
	l.sw    	-8(r2),r11	 # SI store
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lbz   	r3,0(r14)	 # zero_extendqisi2
	l.sb    	0(r2),r3	    # movqi
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sw    	-4(r2),r11	 # SI store
	l.sb    	1(r2),r3	    # movqi
	l.lhz   	r3,2(r14)	 # zero_extendqisi2
	l.sh    	2(r2),r3	 # movhi
	l.lhz   	r3,4(r14)	 # zero_extendqisi2
	l.sh    	4(r2),r3	 # movhi
	l.lwz   	r3,0(r16)	 # SI load
	l.addi  	r14,r14,16
	l.sfgts 	r3,r20
	l.bf	.L2994	# delay slot filled
	l.addi  	r2,r2,16
	l.j     	.L2999	# delay slot filled
	l.addi	r1,r1,32
.L2998:
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L2999	# delay slot filled
	l.addi	r1,r1,32
.LFE757:
	.size	sqlite3ExprListDup, .-sqlite3ExprListDup
	.align	4
.proc	sqlite3SelectDup
	.type	sqlite3SelectDup, @function
sqlite3SelectDup:
.LFB760:
	l.sw    	-32(r1),r16	 # SI store
.LCFI1003:
	l.sw    	-28(r1),r18	 # SI store
.LCFI1004:
	l.sw    	-24(r1),r20	 # SI store
.LCFI1005:
	l.sw    	-20(r1),r22	 # SI store
.LCFI1006:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1007:
	l.sw    	-40(r1),r2	 # SI store
.LCFI1008:
	l.sw    	-36(r1),r14	 # SI store
.LCFI1009:
	l.sw    	-16(r1),r24	 # SI store
.LCFI1010:
	l.sw    	-12(r1),r26	 # SI store
.LCFI1011:
	l.sw    	-8(r1),r28	 # SI store
.LCFI1012:
	l.ori   	r20,r4,0	 # move reg to reg
	l.addi  	r1,r1,-40
.LCFI1013:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r22,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bnf	.L3010	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
.L3001:
	l.addi	r1,r1,40
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L3010:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r0,68	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L3001	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,0(r20)	 # SI load
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.ori   	r5,r22,2
	l.lwz   	r26,8(r20)	 # SI load
	l.sw    	0(r18),r11	 # SI store
	l.sfeqi	r26,0
	l.bnf	.L3011	# delay slot filled
	l.ori   	r28,r26,0	 # move reg to reg
.L3002:
	l.ori   	r3,r16,0	 # move reg to reg
.L3012:
	l.lwz   	r4,12(r20)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.sw    	8(r18),r28	 # SI store
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,16(r20)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.sw    	12(r18),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,20(r20)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.sw    	16(r18),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,24(r20)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.sw    	20(r18),r11	 # SI store
	l.lbz   	r7,4(r20)	 # zero_extendqisi2
	l.ori   	r3,r16,0	 # move reg to reg
	l.sb    	4(r18),r7	    # movqi
	l.lwz   	r4,28(r20)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.sw    	24(r18),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,40(r20)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.sw    	28(r18),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,44(r20)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.sw    	40(r18),r11	 # SI store
	l.lhz   	r3,6(r20)	 # zero_extendqisi2
	l.addi  	r4,r0,-9	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.and   	r3,r3,r4
	l.sw    	44(r18),r11	 # SI store
	l.sw    	48(r18),r5	 # SI store
	l.sw    	52(r18),r5	 # SI store
	l.sh    	6(r18),r3	 # movhi
	l.sw    	36(r18),r5	 # SI store
	l.sw    	56(r18),r2	 # SI store
	l.sw    	60(r18),r2	 # SI store
	l.j     	.L3001	# delay slot filled
	l.sw    	64(r18),r2	 # SI store
.L3011:
	l.lhs   	r2,0(r26)	 # extendhisi2_no_sext_mem
	l.sflesi	r2,0
	l.bf	.L3003	# delay slot filled
	l.addi  	r4,r0,56	 # move immediate I
	l.addi  	r2,r2,-1
	l.add   	r3,r2,r2
	l.add   	r3,r3,r2
	l.slli  	r4,r3,4
	l.add   	r3,r3,r4
	l.add   	r2,r3,r2
	l.addi  	r4,r2,56
.L3003:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L3002	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.lhs   	r2,0(r26)	 # extendhisi2_no_sext_mem
	l.sh    	0(r28),r2	 # movhi
	l.sh    	2(r11),r2	 # movhi
	l.lhs   	r2,0(r26)	 # extendhisi2_no_sext_mem
	l.sflesi	r2,0
	l.bf	.L3002	# delay slot filled
	l.ori   	r2,r26,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r24,r0,0	 # move immediate I
.L3005:
	l.lwz   	r4,4(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.addi  	r24,r24,1
	l.lwz   	r4,8(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.sw    	4(r14),r11	 # SI store
	l.lwz   	r4,12(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.sw    	8(r14),r11	 # SI store
	l.lbz   	r4,25(r2)	 # zero_extendqisi2
	l.lbz   	r5,24(r2)	 # zero_extendqisi2
	l.lwz   	r3,28(r2)	 # SI load
	l.sb    	25(r14),r4	    # movqi
	l.sb    	24(r14),r5	    # movqi
	l.lwz   	r4,48(r2)	 # SI load
	l.sw    	28(r14),r3	 # SI store
	l.sw    	12(r14),r11	 # SI store
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lbz   	r7,26(r2)	 # zero_extendqisi2
	l.lwz   	r4,16(r2)	 # SI load
	l.lwz   	r6,52(r2)	 # SI load
	l.sb    	26(r14),r7	    # movqi
	l.sw    	48(r14),r11	 # SI store
	l.sw    	52(r14),r6	 # SI store
	l.sw    	16(r14),r4	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3004	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.lhz   	r6,32(r4)	 # zero_extendqisi2
	l.addi  	r6,r6,1
	l.sh    	32(r4),r6	 # movhi
.L3004:
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.lwz   	r4,20(r2)	 # SI load
	l.lwz   	r4,32(r2)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.sw    	20(r14),r11	 # SI store
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,36(r2)	 # SI load
	l.sw    	32(r14),r11	 # SI store
	l.jal   	sqlite3IdListDup	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lhs   	r3,0(r26)	 # extendhisi2_no_sext_mem
	l.sw    	36(r14),r11	 # SI store
		l.lwz   	r4, 40(r2)
		l.lwz   	r5, 40+4(r2)
		l.sw    	40(r14), r4
		l.sw    	40+4(r14), r5
	l.sflts 	r24,r3
	l.addi  	r2,r2,52
	l.bf	.L3005	# delay slot filled
	l.addi  	r14,r14,52
	l.j     	.L3012	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.LFE760:
	.size	sqlite3SelectDup, .-sqlite3SelectDup
	.align	4
.proc	sqlite3AddCheckConstraint
	.type	sqlite3AddCheckConstraint, @function
sqlite3AddCheckConstraint:
.LFB875:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1014:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1015:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1016:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1017:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1018:
	l.lwz   	r16,476(r3)	 # SI load
	l.addi  	r1,r1,-20
.LCFI1019:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfeqi	r16,0
	l.bf	.L3014	# delay slot filled
	l.lwz   	r2,0(r3)	 # SI load
	l.lbz   	r5,500(r3)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L3014	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.lwz   	r18,44(r16)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprAnd	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.sw    	44(r16),r11	 # SI store
.L3014:
	l.addi	r1,r1,20
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3ExprDelete	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.LFE875:
	.size	sqlite3AddCheckConstraint, .-sqlite3AddCheckConstraint
	.align	4
.proc	substExpr
	.type	substExpr, @function
substExpr:
.LFB1056:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1020:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1021:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1022:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1023:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1024:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI1025:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3015	# delay slot filled
	l.ori   	r18,r6,0	 # move reg to reg
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sfnei	r4,151
	l.bnf	.L3022
	l.nop			# nop delay slot
.L3017:
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	substExpr	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	substExpr	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,4096
	l.sfeqi	r3,0
	l.bnf	.L3023	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,28(r2)	 # SI load
	l.addi	r1,r1,20
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	substExprList	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L3022:
	l.lwz   	r4,36(r2)	 # SI load
	l.sfne 	r4,r5
	l.bf	.L3017
	l.nop			# nop delay slot
	l.lwz   	r4,40(r2)	 # SI load
	l.sfgesi	r4,0
	l.bnf	.L3024	# delay slot filled
	l.slli  	r4,r4,4
	l.lwz   	r6,12(r6)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.add   	r4,r6,r4
	l.lwz   	r16,0(r4)	 # SI load
	l.lbz   	r6,0(r16)	 # zero_extendqisi2
	l.lwz   	r4,20(r16)	 # SI load
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.sb    	0(r2),r6	    # movqi
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,24(r16)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.sw    	20(r2),r11	 # SI store
	l.lwz   	r8,36(r16)	 # SI load
	l.lwz   	r7,56(r16)	 # SI load
	l.lwz   	r6,40(r16)	 # SI load
	l.lwz   	r3,48(r16)	 # SI load
	l.sw    	24(r2),r11	 # SI store
	l.addi  	r4,r2,4
	l.addi  	r5,r16,4
	l.sw    	36(r2),r8	 # SI store
	l.sw    	56(r2),r7	 # SI store
	l.sw    	40(r2),r6	 # SI store
	l.sw    	48(r2),r3	 # SI store
	l.jal   	sqlite3TokenCopy	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r16,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3TokenCopy	# delay slot filled
	l.addi  	r4,r2,12
	l.lhz   	r5,2(r16)	 # zero_extendqisi2
	l.andi  	r5,r5,4096
	l.sfeqi	r5,0
	l.bnf	.L3025	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.lwz   	r4,28(r16)	 # SI load
	l.sw    	28(r2),r11	 # SI store
.L3020:
	l.lwz   	r3,44(r16)	 # SI load
	l.lhz   	r4,2(r16)	 # zero_extendqisi2
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	44(r2),r3	 # SI store
	l.sh    	2(r2),r4	 # movhi
	l.sw    	44(r16),r6	 # SI store
.L3015:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3023:
	l.lwz   	r4,28(r2)	 # SI load
	l.addi	r1,r1,20
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	substSelect	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L3025:
	l.lwz   	r4,28(r16)	 # SI load
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L3020	# delay slot filled
	l.sw    	28(r2),r11	 # SI store
.L3024:
	l.addi  	r3,r0,98	 # movqi: move immediate
	l.j     	.L3015	# delay slot filled
	l.sb    	0(r2),r3	    # movqi
.LFE1056:
	.size	substExpr, .-substExpr
	.align	4
.proc	substExprList
	.type	substExprList, @function
substExprList:
.LFB1057:
	l.sw    	-28(r1),r2	 # SI store
.LCFI1026:
	l.sw    	-16(r1),r18	 # SI store
.LCFI1027:
	l.sw    	-12(r1),r20	 # SI store
.LCFI1028:
	l.sw    	-8(r1),r22	 # SI store
.LCFI1029:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1030:
	l.sw    	-24(r1),r14	 # SI store
.LCFI1031:
	l.sw    	-20(r1),r16	 # SI store
.LCFI1032:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI1033:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3026	# delay slot filled
	l.ori   	r22,r6,0	 # move reg to reg
	l.lwz   	r3,0(r4)	 # SI load
	l.sflesi	r3,0
	l.bf	.L3026	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.ori   	r16,r14,0	 # move reg to reg
.L3028:
	l.lwz   	r4,12(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r4,r4,r14
	l.ori   	r5,r20,0	 # move reg to reg
	l.lwz   	r4,0(r4)	 # SI load
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	substExpr	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r3,0(r2)	 # SI load
	l.sfgts 	r3,r16
	l.bf	.L3028	# delay slot filled
	l.addi  	r14,r14,16
.L3026:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.LFE1057:
	.size	substExprList, .-substExprList
	.align	4
.proc	substSelect
	.type	substSelect, @function
substSelect:
.LFB1058:
	l.sw    	-24(r1),r2	 # SI store
.LCFI1034:
	l.sw    	-16(r1),r16	 # SI store
.LCFI1035:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1036:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1037:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1038:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1039:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI1040:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3030	# delay slot filled
	l.ori   	r20,r6,0	 # move reg to reg
	l.jal   	substExprList	# delay slot filled
	l.lwz   	r4,0(r4)	 # SI load
	l.lwz   	r4,16(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	substExprList	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	substExprList	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	substExpr	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r4,12(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	substExpr	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r4,28(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	substSelect	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r2,8(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L3030
	l.nop			# nop delay slot
	l.lhs   	r14,0(r2)	 # extendhisi2_no_sext_mem
	l.sflesi	r14,0
	l.bf	.L3030	# delay slot filled
	l.addi  	r14,r14,-1
	l.addi  	r2,r2,20
.L3032:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	substSelect	# delay slot filled
	l.addi  	r14,r14,-1
	l.addi  	r3,r14,1
	l.sfgtsi	r3,0
	l.bf	.L3032	# delay slot filled
	l.addi  	r2,r2,52
.L3030:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE1058:
	.size	substSelect, .-substSelect
	.align	4
.proc	sqlitePersistTriggerStep
	.type	sqlitePersistTriggerStep, @function
sqlitePersistTriggerStep:
.LFB1080:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1041:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1042:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1043:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1044:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r4,16(r4)	 # SI load
	l.addi  	r1,r1,-16
.LCFI1045:
	l.sfeqi	r4,0
	l.bf	.L3035	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,20(r2)	 # SI load
	l.ori   	r6,r6,65535
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.and   	r5,r5,r6
	l.lwz   	r3,20(r2)	 # SI load
	l.movhi 	r4,hi(-2147483648)	 # move immediate M
	l.sw    	16(r2),r11	 # SI store
	l.or    	r3,r3,r4
	l.sw    	20(r2),r3	 # SI store
.L3035:
	l.lwz   	r4,12(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L3036	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
	l.sw    	12(r2),r16	 # SI store
.L3036:
	l.lwz   	r4,24(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L3037	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
	l.sw    	24(r2),r16	 # SI store
.L3037:
	l.lwz   	r4,28(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L3038	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.sw    	28(r2),r16	 # SI store
.L3038:
	l.lwz   	r4,32(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L3034
	l.nop			# nop delay slot
	l.jal   	sqlite3IdListDup	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	sqlite3IdListDelete	# delay slot filled
	l.lwz   	r4,32(r2)	 # SI load
	l.sw    	32(r2),r16	 # SI store
.L3034:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE1080:
	.size	sqlitePersistTriggerStep, .-sqlitePersistTriggerStep
	.align	4
.proc	sqlite3TriggerInsertStep
	.type	sqlite3TriggerInsertStep, @function
sqlite3TriggerInsertStep:
.LFB1082:
	l.sw    	-32(r1),r2	 # SI store
.LCFI1046:
	l.sw    	-28(r1),r14	 # SI store
.LCFI1047:
	l.sw    	-24(r1),r16	 # SI store
.LCFI1048:
	l.sw    	-20(r1),r18	 # SI store
.LCFI1049:
	l.sw    	-16(r1),r20	 # SI store
.LCFI1050:
	l.sw    	-12(r1),r22	 # SI store
.LCFI1051:
	l.sw    	-8(r1),r24	 # SI store
.LCFI1052:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1053:
	l.ori   	r24,r4,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI1054:
	l.addi  	r4,r0,44	 # move immediate I
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r18,r6,0	 # move reg to reg
	l.ori   	r16,r7,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.ori   	r22,r8,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L3041	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
		l.lwz   	r3, 0(r24)
		l.lwz   	r4, 4(r24)
		l.sw    	16(r11), r3
		l.sw    	16+4(r11), r4
	l.addi  	r3,r0,107	 # move immediate I
	l.sw    	12(r11),r16	 # SI store
	l.sw    	0(r11),r3	 # SI store
	l.sw    	32(r11),r20	 # SI store
	l.sw    	28(r11),r18	 # SI store
	l.sw    	4(r11),r22	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlitePersistTriggerStep	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi	r1,r1,32
.L3043:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L3041:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3IdListDelete	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L3043	# delay slot filled
	l.addi	r1,r1,32
.LFE1082:
	.size	sqlite3TriggerInsertStep, .-sqlite3TriggerInsertStep
	.align	4
.proc	sqlite3VdbeChangeToNoop
	.type	sqlite3VdbeChangeToNoop, @function
sqlite3VdbeChangeToNoop:
.LFB566:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1055:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1056:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1057:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1058:
	l.sfeqi	r3,0
.LCFI1059:
	l.bf	.L3044	# delay slot filled
	l.addi  	r1,r1,-16
	l.lwz   	r6,20(r3)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L3044	# delay slot filled
	l.sfeqi	r5,0
	l.bf	.L3044	# delay slot filled
	l.lwz   	r16,0(r3)	 # SI load
	l.slli  	r2,r4,2
	l.slli  	r4,r4,4
	l.ori   	r14,r5,0	 # move reg to reg
	l.add   	r2,r2,r4
	l.add   	r2,r6,r2
.L3046:
	l.lbs   	r4,1(r2)	 # extendqisi2_no_sext_mem
	l.lwz   	r5,16(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	freeP4	# delay slot filled
	l.addi  	r14,r14,-1
	l.addi  	r3,r0,0	 # move immediate I
	l.sfnei	r14,0
	l.sw    	0(r2),r3	 # SI store
	l.sw    	4(r2),r3	 # SI store
	l.sw    	8(r2),r3	 # SI store
	l.sw    	12(r2),r3	 # SI store
	l.sw    	16(r2),r3	 # SI store
	l.addi  	r3,r0,24	 # movqi: move immediate
	l.sb    	0(r2),r3	    # movqi
	l.bf	.L3046	# delay slot filled
	l.addi  	r2,r2,20
.L3044:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE566:
	.size	sqlite3VdbeChangeToNoop, .-sqlite3VdbeChangeToNoop
	.align	4
.proc	defragmentPage
	.type	defragmentPage, @function
defragmentPage:
.LFB378:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1060:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1061:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1062:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1063:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1064:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1065:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1066:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1067:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1068:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1069:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1070:
	l.addi  	r1,r1,-72
.LCFI1071:
	l.lbz   	r2,5(r3)	 # zero_extendqisi2
	l.lwz   	r26,64(r3)	 # SI load
	l.ori   	r28,r3,0	 # move reg to reg
	l.sw    	16(r1),r2	 # SI store
	l.addi  	r3,r2,5
	l.addi  	r2,r2,6
	l.add   	r3,r26,r3
	l.add   	r2,r26,r2
	l.sw    	20(r1),r3	 # SI store
	l.sw    	24(r1),r2	 # SI store
	l.lwz   	r4,60(r28)	 # SI load
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.slli  	r5,r5,8
	l.lwz   	r2,0(r4)	 # SI load
	l.lhz   	r22,22(r4)	 # zero_extendqisi2
	l.or    	r5,r5,r3
	l.lhz   	r3,16(r28)	 # zero_extendqisi2
	l.lwz   	r2,148(r2)	 # SI load
	l.add   	r4,r26,r5
	l.sw    	4(r1),r3	 # SI store
	l.add   	r3,r2,r5
	l.sub   	r5,r22,r5
	l.sw    	8(r1),r2	 # SI store
	l.jal   	memcpy	# delay slot filled
	l.lhz   	r2,12(r28)	 # zero_extendqisi2
	l.lwz   	r4,4(r1)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L3059	# delay slot filled
	l.add   	r30,r26,r2
	l.addi  	r5,r30,1
	l.lbz   	r14,0(r30)	 # zero_extendqisi2
	l.sw    	0(r1),r5	 # SI store
	l.slli  	r14,r14,8
	l.lbz   	r3,0(r5)	 # zero_extendqisi2
	l.or    	r14,r14,r3
	l.sfles 	r22,r14
	l.bf	.L3051	# delay slot filled
	l.addi  	r11,r0,11	 # move immediate I
	l.lwz   	r6,4(r1)	 # SI load
	l.addi  	r16,r2,2
	l.add   	r3,r6,r6
	l.addi  	r18,r2,3
	l.add   	r3,r3,r2
	l.add   	r16,r26,r16
	l.sw    	12(r1),r3	 # SI store
	l.add   	r18,r26,r18
	l.ori   	r2,r22,0	 # move reg to reg
	l.j     	.L3052	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
.L3060:
	l.sflts 	r22,r11
	l.bf	.L3051	# delay slot filled
	l.addi  	r11,r0,11	 # move immediate I
	l.jal   	memcpy
	l.nop			# nop delay slot
	l.srai  	r5,r2,8
	l.lwz   	r6,4(r1)	 # SI load
	l.andi  	r4,r2,0xff	 # zero_extendqisi2
	l.andi  	r5,r5,0xff	 # zero_extendqisi2
	l.sfgts 	r6,r20
	l.sb    	0(r30),r5	    # movqi
	l.ori   	r30,r16,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.bnf	.L3050	# delay slot filled
	l.sb    	0(r3),r4	    # movqi
	l.lbz   	r14,0(r16)	 # zero_extendqisi2
	l.lbz   	r4,0(r18)	 # zero_extendqisi2
	l.slli  	r14,r14,8
	l.sw    	0(r1),r18	 # SI store
	l.addi  	r16,r16,2
	l.or    	r14,r14,r4
	l.sfles 	r22,r14
	l.bf	.L3057	# delay slot filled
	l.addi  	r18,r18,2
.L3052:
	l.lwz   	r3,8(r1)	 # SI load
	l.addi  	r20,r20,1
	l.add   	r24,r3,r14
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	cellSizePtr	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.lwz   	r6,12(r1)	 # SI load
	l.sub   	r2,r2,r11
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.add   	r11,r11,r14
	l.sflts 	r2,r6
	l.bnf	.L3060	# delay slot filled
	l.add   	r3,r26,r2
.L3057:
	l.addi  	r11,r0,11	 # move immediate I
.L3051:
	l.addi	r1,r1,72
.L3061:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L3059:
	l.srli  	r5,r22,8
	l.sw    	12(r1),r2	 # SI store
	l.andi  	r4,r22,0xff	 # zero_extendqisi2
	l.ori   	r2,r22,0	 # move reg to reg
.L3050:
	l.lwz   	r6,20(r1)	 # SI load
	l.sb    	0(r6),r5	    # movqi
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r6,12(r1)	 # SI load
	l.add   	r3,r26,r5
	l.lwz   	r5,24(r1)	 # SI load
	l.sub   	r2,r2,r6
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.sb    	0(r5),r4	    # movqi
	l.sb    	1(r3),r6	    # movqi
	l.sb    	2(r3),r6	    # movqi
	l.sb    	7(r3),r6	    # movqi
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r4,12(r1)	 # SI load
	l.add   	r3,r26,r4
	l.jal   	memset	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lhz   	r3,14(r28)	 # zero_extendqisi2
	l.sfeq 	r2,r3
	l.bnf	.L3057	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L3061	# delay slot filled
	l.addi	r1,r1,72
.LFE378:
	.size	defragmentPage, .-defragmentPage
	.align	4
.proc	rowSetToList
	.type	rowSetToList, @function
rowSetToList:
.LFB268:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1072:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1073:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1074:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1075:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1076:
	l.ori   	r16,r3,0	 # move reg to reg
	l.lbz   	r2,26(r3)	 # zero_extendqisi2
	l.sfnei	r2,0
.LCFI1077:
	l.bnf	.L3073	# delay slot filled
	l.addi  	r1,r1,-188
.L3063:
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L3062
	l.nop			# nop delay slot
	l.addi  	r4,r1,164
	l.jal   	rowSetTreeToList	# delay slot filled
	l.addi  	r5,r1,160
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,8(r16)	 # SI load
	l.sw    	20(r16),r4	 # SI store
	l.jal   	rowSetMerge	# delay slot filled
	l.lwz   	r4,164(r1)	 # SI load
	l.sw    	8(r16),r11	 # SI store
.L3062:
	l.addi	r1,r1,188
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3073:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,160	 # move immediate I
	l.lwz   	r11,8(r16)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L3064	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L3067:
	l.lwz   	r2,8(r11)	 # SI load
	l.ori   	r14,r3,0	 # move reg to reg
	l.sw    	8(r16),r2	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
	l.sfeq 	r3,r2
	l.bf	.L3065	# delay slot filled
	l.sw    	8(r11),r2	 # SI store
	l.ori   	r2,r1,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
.L3066:
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	rowSetMerge	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,4(r2)	 # SI load
	l.sw    	0(r2),r4	 # SI store
	l.sfne 	r3,r4
	l.bf	.L3066	# delay slot filled
	l.addi  	r2,r2,4
.L3065:
	l.slli  	r14,r14,2
	l.addi  	r2,r1,168
	l.add   	r14,r2,r14
	l.sw    	-168(r14),r11	 # SI store
	l.lwz   	r11,8(r16)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L3067	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
.L3064:
	l.ori   	r2,r1,0	 # move reg to reg
	l.addi  	r14,r1,160
	l.addi  	r11,r0,0	 # move immediate I
.L3068:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	rowSetMerge	# delay slot filled
	l.addi  	r2,r2,4
	l.sfne 	r2,r14
	l.bf	.L3068	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sw    	8(r16),r11	 # SI store
	l.sw    	12(r16),r4	 # SI store
	l.j     	.L3063	# delay slot filled
	l.sb    	26(r16),r2	    # movqi
.LFE268:
	.size	rowSetToList, .-rowSetToList
	.align	4
.proc	sqlite3MPrintf
	.type	sqlite3MPrintf, @function
sqlite3MPrintf:
.LFB106:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1078:
	l.addi  	r1,r1,-4
.LCFI1079:
	l.jal   	sqlite3VMPrintf	# delay slot filled
	l.addi  	r5,r1,4
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE106:
	.size	sqlite3MPrintf, .-sqlite3MPrintf
	.align	4
.proc	getDigits
	.type	getDigits, @function
getDigits:
.LFB8:
	l.sw    	-4(r1),r2	 # SI store
.LCFI1080:
	l.addi  	r1,r1,-4
.LCFI1081:
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r8,r1,4
.L3087:
	l.lwz   	r6,0(r8)	 # SI load
	l.lwz   	r15,4(r8)	 # SI load
	l.lwz   	r13,8(r8)	 # SI load
	l.lwz   	r12,12(r8)	 # SI load
	l.addi  	r8,r8,20
	l.sfeqi	r6,0
	l.bf	.L3088	# delay slot filled
	l.lwz   	r17,-4(r8)	 # SI load
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.movhi  	r2,hi(sqlite3CtypeMap)
	l.andi  	r4,r5,0xff	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3CtypeMap)
	l.add   	r4,r4,r2
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,4
	l.sfeqi	r4,0
	l.bf	.L3079	# delay slot filled
	l.addi  	r6,r6,-1
	l.j     	.L3078	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L3080:
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.movhi  	r2,hi(sqlite3CtypeMap)
	l.andi  	r7,r5,0xff	 # zero_extendqisi2
	l.ori   	r2,r2,lo(sqlite3CtypeMap)
	l.add   	r7,r7,r2
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.andi  	r7,r7,4
	l.sfnei	r7,0
	l.bnf	.L3079
	l.nop			# nop delay slot
.L3078:
	l.slli  	r7,r4,3
	l.add   	r4,r4,r4
	l.sfnei	r6,0
	l.add   	r4,r4,r7
	l.addi  	r3,r3,1
	l.add   	r4,r4,r5
	l.addi  	r6,r6,-1
	l.bf	.L3080	# delay slot filled
	l.addi  	r4,r4,-48
.L3076:
	l.sfgts 	r4,r13
	l.bnf	.L3090	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
.L3083:
	l.andi  	r5,r5,0xff	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L3079	# delay slot filled
	l.sflts 	r4,r15
	l.bnf	.L3091	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
.L3084:
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bnf	.L3079	# delay slot filled
	l.sfeqi	r12,0
	l.bf	.L3085
	l.nop			# nop delay slot
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeq 	r5,r12
	l.bnf	.L3079	# delay slot filled
	l.addi  	r3,r3,1
	l.sw    	0(r17),r4	 # SI store
	l.j     	.L3087	# delay slot filled
	l.addi  	r11,r11,1
.L3085:
	l.sw    	0(r17),r4	 # SI store
	l.addi  	r11,r11,1
.L3079:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L3090:
	l.j     	.L3083	# delay slot filled
	l.addi  	r5,r0,0	 # movqi: move immediate
.L3091:
	l.j     	.L3084	# delay slot filled
	l.ori   	r6,r5,0	  # movqi: move reg to reg
.L3088:
	l.j     	.L3076	# delay slot filled
	l.ori   	r4,r6,0	 # move reg to reg
.LFE8:
	.size	getDigits, .-getDigits
	.section	.rodata
	.align	4
.LC42:
	.long	0
	.long	0
	.align	4
.LC43:
	.long	1076101120
	.long	0
	.align	4
.LC44:
	.long	1078460416
	.long	0
	.section .text
	.align	4
.proc	parseHhMmSs
	.type	parseHhMmSs, @function
parseHhMmSs:
.LFB10:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1082:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1083:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1084:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1085:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1086:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1087:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1088:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1089:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1090:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1091:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1092:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-116
.LCFI1093:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r2,r0,2	 # move immediate I
	l.sw    	4(r1),r4	 # SI store
	l.addi  	r4,r0,24	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	8(r1),r4	 # SI store
	l.addi  	r4,r0,58	 # move immediate I
	l.sw    	0(r1),r2	 # SI store
	l.sw    	12(r1),r4	 # SI store
	l.sw    	20(r1),r2	 # SI store
	l.addi  	r4,r1,68
	l.addi  	r20,r0,59	 # move immediate I
	l.addi  	r2,r1,64
	l.ori   	r18,r3,0	 # move reg to reg
	l.sw    	16(r1),r4	 # SI store
	l.sw    	24(r1),r5	 # SI store
	l.sw    	28(r1),r20	 # SI store
	l.sw    	32(r1),r5	 # SI store
	l.sw    	36(r1),r2	 # SI store
	l.jal   	getDigits	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
	l.sfnei	r11,2
	l.bnf	.L3122	# delay slot filled
	l.addi  	r2,r18,5
.L3093:
	l.addi	r1,r1,116
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L3122:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,58
	l.bnf	.L3123	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	60(r1),r11	 # SI store
	l.ori   	r12,r11,0	 # move reg to reg
	l.lwz   	r6,68(r1)	 # SI load
.L3125:
	l.lwz   	r5,64(r1)	 # SI load
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.sb    	42(r14),r7	    # movqi
	l.sb    	41(r14),r8	    # movqi
	l.sw    	20(r14),r6	 # SI store
	l.sw    	24(r14),r5	 # SI store
		l.sw    	32(r14), r3
		l.sw    	32+4(r14), r4
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.add   	r3,r3,r4
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L3126	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r2,r2,1
.L3127:
	l.movhi  	r5,hi(sqlite3CtypeMap)
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3CtypeMap)
	l.add   	r3,r3,r5
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,1
	l.sfnei	r3,0
	l.bf	.L3127	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.addi  	r6,r0,0	 # move immediate I
.L3126:
	l.sw    	28(r14),r6	 # SI store
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,45
	l.bf	.L3111	# delay slot filled
	l.sfeqi	r3,43
	l.bf	.L3112	# delay slot filled
	l.xori  	r4,r3,122
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfges 	r4,r6
	l.bnf	.L3124	# delay slot filled
	l.xori  	r4,r3,90
	l.addi  	r2,r2,1
.L3104:
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.add   	r4,r3,r7
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,1
	l.sfnei	r4,0
	l.bnf	.L3128	# delay slot filled
	l.sub   	r3,r0,r3
	l.addi  	r2,r2,1
.L3129:
	l.movhi  	r5,hi(sqlite3CtypeMap)
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3CtypeMap)
	l.add   	r4,r3,r5
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,1
	l.sfnei	r4,0
	l.bf	.L3129	# delay slot filled
	l.addi  	r2,r2,1
	l.sub   	r3,r0,r3
.L3128:
	l.srli  	r3,r3,31
.L3107:
	l.sfnei	r3,0
	l.bf	.L3093	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
	l.lwz   	r2,28(r14)	 # SI load
	l.ori   	r16,r3,0	 # move reg to reg
	l.sub   	r3,r0,r2
	l.or    	r2,r3,r2
	l.srli  	r2,r2,31
	l.j     	.L3093	# delay slot filled
	l.sb    	43(r14),r2	    # movqi
.L3124:
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sflts 	r4,r6
	l.bnf	.L3104	# delay slot filled
	l.addi  	r2,r2,1
	l.sub   	r2,r0,r3
	l.or    	r3,r2,r3
	l.j     	.L3107	# delay slot filled
	l.srli  	r3,r3,31
.L3112:
	l.addi  	r18,r0,1	 # move immediate I
.L3101:
	l.addi  	r4,r0,2	 # move immediate I
	l.addi  	r5,r0,14	 # move immediate I
	l.sw    	0(r1),r4	 # SI store
	l.sw    	8(r1),r5	 # SI store
	l.sw    	20(r1),r4	 # SI store
	l.addi  	r5,r0,58	 # move immediate I
	l.addi  	r4,r0,59	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
	l.sw    	12(r1),r5	 # SI store
	l.sw    	28(r1),r4	 # SI store
	l.addi  	r5,r1,56
	l.addi  	r4,r1,52
	l.addi  	r3,r2,1
	l.sw    	4(r1),r8	 # SI store
	l.sw    	16(r1),r5	 # SI store
	l.sw    	24(r1),r8	 # SI store
	l.sw    	32(r1),r8	 # SI store
	l.sw    	36(r1),r4	 # SI store
	l.jal   	getDigits	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
	l.sfnei	r11,2
	l.bf	.L3093	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.addi  	r2,r2,6
	l.slli  	r3,r4,2
	l.slli  	r4,r4,6
	l.sub   	r3,r4,r3
	l.lwz   	r4,52(r1)	 # SI load
	l.add   	r3,r3,r4
	l.mul   	r18,r18,r3
	l.j     	.L3104	# delay slot filled
	l.sw    	28(r14),r18	 # SI store
.L3123:
	l.addi  	r3,r18,6
	l.addi  	r2,r1,60
	l.sw    	0(r1),r11	 # SI store
	l.sw    	4(r1),r6	 # SI store
	l.sw    	8(r1),r20	 # SI store
	l.sw    	12(r1),r6	 # SI store
	l.jal   	getDigits	# delay slot filled
	l.sw    	16(r1),r2	 # SI store
	l.sfne 	r11,r16
	l.bf	.L3093	# delay slot filled
	l.addi  	r2,r18,8
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,46
	l.bf	.L3095	# delay slot filled
	l.addi  	r3,r18,9
.L3121:
	l.jal   	__floatsidf	# delay slot filled
	l.lwz   	r3,60(r1)	 # SI load
	l.movhi  	r5,hi(.LC42)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC42)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.j     	.L3125	# delay slot filled
	l.lwz   	r6,68(r1)	 # SI load
.L3111:
	l.j     	.L3101	# delay slot filled
	l.addi  	r18,r0,-1	 # move immediate I
.L3095:
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.lbs   	r16,0(r3)	 # extendqisi2_no_sext_mem
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.andi  	r4,r16,0xff	 # zero_extendqisi2
	l.add   	r4,r4,r7
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,4
	l.sfnei	r4,0
	l.bnf	.L3121	# delay slot filled
	l.movhi 	r22,hi(1072693248)	 # move immediate M
	l.movhi  	r2,hi(.LC43)
	l.addi  	r20,r0,0	 # move immediate I
	l.ori   	r2,r2,lo(.LC43)
	l.lwz   	r28,0(r2)	 # SI load
	l.lwz   	r26,4(r2)	 # SI load
	l.ori   	r24,r20,0	 # move reg to reg
	l.ori   	r18,r20,0	 # move reg to reg
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	48(r1),r28	 # SI store
	l.ori   	r30,r26,0	 # move reg to reg
.L3098:
	l.ori   	r7,r24,0	 # move reg to reg
	l.ori   	r8,r18,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
		l.or    	r3, r7, r0
		l.or    	r4, r8, r0
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r6,r26,0	 # move reg to reg
		l.sw    	40(r1), r11
		l.sw    	40+4(r1), r12
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
		l.lwz   	r3, 40(r1)
		l.lwz   	r4, 40+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3	# delay slot filled
	l.addi  	r2,r2,1
	l.movhi  	r8,hi(.LC44)
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r8,r8,lo(.LC44)
	l.ori   	r3,r6,0	 # move reg to reg
		l.lwz   	r5, 0(r8)
		l.lwz   	r6, 4(r8)
	l.jal   	__subdf3	# delay slot filled
	l.ori   	r4,r12,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r5,48(r1)	 # SI load
	l.ori   	r6,r30,0	 # move reg to reg
	l.ori   	r24,r11,0	 # move reg to reg
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r18,r12,0	 # move reg to reg
	l.lbs   	r16,0(r2)	 # extendqisi2_no_sext_mem
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.andi  	r3,r16,0xff	 # zero_extendqisi2
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.ori   	r22,r11,0	 # move reg to reg
	l.add   	r3,r3,r4
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,4
	l.sfnei	r3,0
	l.bf	.L3098	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	__divdf3	# delay slot filled
	l.ori   	r6,r12,0	 # move reg to reg
	l.lwz   	r3,60(r1)	 # SI load
		l.sw    	40(r1), r11
		l.sw    	40+4(r1), r12
	l.jal   	__floatsidf
	l.nop			# nop delay slot
		l.lwz   	r3, 40(r1)
		l.lwz   	r4, 40+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.j     	.L3125	# delay slot filled
	l.lwz   	r6,68(r1)	 # SI load
.LFE10:
	.size	parseHhMmSs, .-parseHhMmSs
	.align	4
.proc	sqlite3ErrorMsg
	.type	sqlite3ErrorMsg, @function
sqlite3ErrorMsg:
.LFB125:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1094:
	l.ori   	r14,r4,0	 # move reg to reg
	l.lwz   	r4,64(r3)	 # SI load
	l.sw    	-16(r1),r2	 # SI store
.LCFI1095:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1096:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r16,0(r3)	 # SI load
	l.addi  	r4,r4,1
	l.sw    	-4(r1),r9	 # SI store
.LCFI1097:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI1098:
	l.sw    	64(r2),r4	 # SI store
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,8(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3VMPrintf	# delay slot filled
	l.addi  	r5,r1,16
	l.lwz   	r3,4(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L3130	# delay slot filled
	l.sw    	8(r2),r11	 # SI store
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	4(r2),r3	 # SI store
.L3130:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE125:
	.size	sqlite3ErrorMsg, .-sqlite3ErrorMsg
	.section	.rodata.str1.1
.LC45:
	.string	"not authorized"
.LC46:
	.string	"authorizer malfunction"
	.section .text
	.align	4
.proc	sqlite3AuthCheck
	.type	sqlite3AuthCheck, @function
sqlite3AuthCheck:
.LFB843:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1099:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1100:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1101:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.lbz   	r8,128(r3)	 # zero_extendqisi2
	l.sfne 	r8,r2
.LCFI1102:
	l.bf	.L3133	# delay slot filled
	l.addi  	r1,r1,-12
	l.lbz   	r8,500(r14)	 # zero_extendqisi2
	l.sfne 	r8,r2
	l.bf	.L3133
	l.nop			# nop delay slot
	l.lwz   	r2,248(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L3133
	l.nop			# nop delay slot
	l.lwz   	r3,252(r3)	 # SI load
	l.jalr  	r2	# delay slot filled
	l.lwz   	r8,488(r14)	 # SI load
	l.sfnei	r11,1
	l.bnf	.L3138	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.xori  	r3,r11,2
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bnf	.L3139	# delay slot filled
	l.sub   	r3,r0,r11
.L3133:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3139:
	l.or    	r3,r3,r11
	l.sfgesi	r3,0
	l.bf	.L3133	# delay slot filled
	l.movhi  	r4,hi(.LC46)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC46)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L3133	# delay slot filled
	l.sw    	4(r14),r2	 # SI store
.L3138:
	l.movhi  	r4,hi(.LC45)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC45)
	l.addi  	r3,r0,23	 # move immediate I
	l.j     	.L3133	# delay slot filled
	l.sw    	4(r14),r3	 # SI store
.LFE843:
	.size	sqlite3AuthCheck, .-sqlite3AuthCheck
	.section	.rodata.str1.1
.LC47:
	.string	"corrupt database"
.LC48:
	.string	"unknown database %T"
	.section .text
	.align	4
.proc	sqlite3TwoPartName
	.type	sqlite3TwoPartName, @function
sqlite3TwoPartName:
.LFB866:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1103:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1104:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1105:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI1106:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L3141	# delay slot filled
	l.lwz   	r7,0(r3)	 # SI load
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r8,4(r5)	 # SI load
	l.ori   	r11,r11,65535
	l.and   	r8,r8,r11
	l.sfeqi	r8,0
	l.bf	.L3141
	l.nop			# nop delay slot
	l.lbz   	r8,128(r7)	 # zero_extendqisi2
	l.sfeqi	r8,0
	l.bnf	.L3144
	l.nop			# nop delay slot
	l.sw    	0(r6),r5	 # SI store
	l.jal   	sqlite3FindDb	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.sfgesi	r11,0
	l.bnf	.L3145	# delay slot filled
	l.movhi  	r4,hi(.LC48)
.L3143:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3141:
	l.lwz   	r11,120(r7)	 # SI load
	l.addi	r1,r1,16
	l.sw    	0(r6),r14	 # SI store
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3144:
	l.movhi  	r4,hi(.LC47)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC47)
	l.lwz   	r3,64(r2)	 # SI load
	l.addi  	r11,r0,-1	 # move immediate I
	l.addi  	r3,r3,1
	l.j     	.L3143	# delay slot filled
	l.sw    	64(r2),r3	 # SI store
.L3145:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC48)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
	l.lwz   	r3,64(r2)	 # SI load
	l.addi  	r11,r0,-1	 # move immediate I
	l.addi  	r3,r3,1
	l.j     	.L3143	# delay slot filled
	l.sw    	64(r2),r3	 # SI store
.LFE866:
	.size	sqlite3TwoPartName, .-sqlite3TwoPartName
	.section	.rodata.str1.1
.LC49:
	.string	"sqlite_"
.LC50:
	.string	"object name reserved for internal use: %s"
	.section .text
	.align	4
.proc	sqlite3CheckObjectName
	.type	sqlite3CheckObjectName, @function
sqlite3CheckObjectName:
.LFB867:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1107:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1108:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1109:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1110:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.ori   	r16,r4,0	 # move reg to reg
	l.lbz   	r4,128(r3)	 # zero_extendqisi2
	l.addi  	r14,r0,0	 # move immediate I
	l.sfne 	r4,r14
.LCFI1111:
	l.bf	.L3147	# delay slot filled
	l.addi  	r1,r1,-20
	l.lbz   	r4,19(r2)	 # zero_extendqisi2
	l.sfne 	r4,r14
	l.bf	.L3147
	l.nop			# nop delay slot
	l.lwz   	r3,12(r3)	 # SI load
	l.andi  	r3,r3,2048
	l.sfne 	r3,r14
	l.bf	.L3147	# delay slot filled
	l.movhi  	r4,hi(.LC49)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC49)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.addi  	r5,r0,7	 # move immediate I
	l.sfne 	r11,r14
	l.bnf	.L3152	# delay slot filled
	l.movhi  	r4,hi(.LC50)
.L3147:
	l.addi	r1,r1,20
.L3153:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3152:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC50)
	l.addi  	r14,r0,1	 # move immediate I
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.j     	.L3153	# delay slot filled
	l.addi	r1,r1,20
.LFE867:
	.size	sqlite3CheckObjectName, .-sqlite3CheckObjectName
	.section	.rodata.str1.1
.LC51:
	.string	"Expression tree is too large (maximum depth %d)"
	.section .text
	.align	4
.proc	sqlite3ExprSetHeight
	.type	sqlite3ExprSetHeight, @function
sqlite3ExprSetHeight:
.LFB739:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1112:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1113:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1114:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI1115:
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	exprSetHeight	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r3,60(r14)	 # SI load
	l.lwz   	r5,92(r4)	 # SI load
	l.sfles 	r3,r5
	l.bf	.L3154	# delay slot filled
	l.movhi  	r4,hi(.LC51)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC51)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
.L3154:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE739:
	.size	sqlite3ExprSetHeight, .-sqlite3ExprSetHeight
	.align	4
.proc	sqlite3ExprFunction
	.type	sqlite3ExprFunction, @function
sqlite3ExprFunction:
.LFB746:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1116:
	l.lwz   	r14,0(r3)	 # SI load
	l.sw    	-24(r1),r2	 # SI store
.LCFI1117:
	l.sw    	-16(r1),r16	 # SI store
.LCFI1118:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1119:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1120:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1121:
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI1122:
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,64	 # move immediate I
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L3159	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r0,-106	 # movqi: move immediate
	l.sw    	28(r11),r20	 # SI store
	l.sb    	0(r11),r3	    # movqi
	l.addi  	r4,r11,4
	l.ori   	r3,r14,0	 # move reg to reg
		l.lwz   	r6, 0(r16)
		l.lwz   	r7, 4(r16)
		l.sw    	12(r11), r6
		l.sw    	12+4(r11), r7
	l.jal   	sqlite3TokenCopy	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprSetHeight	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi	r1,r1,24
.L3160:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3159:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L3160	# delay slot filled
	l.addi	r1,r1,24
.LFE746:
	.size	sqlite3ExprFunction, .-sqlite3ExprFunction
	.align	4
.proc	sqlite3PExpr
	.type	sqlite3PExpr, @function
sqlite3PExpr:
.LFB742:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1123:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1124:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1125:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI1126:
	l.jal   	sqlite3Expr	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L3162	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,0(r14)	 # SI load
	l.lwz   	r3,60(r11)	 # SI load
	l.lwz   	r5,92(r4)	 # SI load
	l.sfles 	r3,r5
	l.bf	.L3162	# delay slot filled
	l.movhi  	r4,hi(.LC51)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC51)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
.L3162:
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE742:
	.size	sqlite3PExpr, .-sqlite3PExpr
	.align	4
.proc	sqlite3CreateIdExpr
	.type	sqlite3CreateIdExpr, @function
sqlite3CreateIdExpr:
.LFB1032:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1127:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1128:
	l.addi  	r1,r1,-16
.LCFI1129:
	l.ori   	r6,r4,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3164	# delay slot filled
	l.sw    	0(r1),r4	 # SI store
	l.lbs   	r6,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r6,0
	l.bf	.L3164	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.addi  	r5,r5,1
.L3170:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L3170	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r4
	l.ori   	r2,r2,65535
	l.and   	r6,r5,r2
.L3164:
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r2,r2,65535
	l.ori   	r7,r1,0	 # move reg to reg
	l.and   	r8,r6,r2
	l.addi  	r4,r0,26	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.sw    	4(r1),r8	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1032:
	.size	sqlite3CreateIdExpr, .-sqlite3CreateIdExpr
	.section	.rodata.str1.1
.LC52:
	.string	"no such index: %s"
	.section .text
	.align	4
.proc	sqlite3IndexedByLookup
	.type	sqlite3IndexedByLookup, @function
sqlite3IndexedByLookup:
.LFB1062:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1130:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1131:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1132:
	l.lwz   	r2,12(r4)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI1133:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1134:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI1135:
	l.ori   	r18,r3,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L3172	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r14,44(r4)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L3172	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r2,20(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L3179	# delay slot filled
	l.movhi  	r4,hi(.LC52)
	l.j     	.L3182	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L3176:
	l.lwz   	r2,32(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L3174	# delay slot filled
	l.movhi  	r4,hi(.LC52)
.L3179:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3176
	l.nop			# nop delay slot
	l.sw    	48(r16),r2	 # SI store
.L3172:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3174:
	l.ori   	r3,r18,0	 # move reg to reg
.L3182:
	l.ori   	r4,r4,lo(.LC52)
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	0(r1),r14	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
	l.j     	.L3172	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.LFE1062:
	.size	sqlite3IndexedByLookup, .-sqlite3IndexedByLookup
	.section	.rodata.str1.1
.LC53:
	.string	"foreign key on %s should reference only one column of table %T"
.LC54:
	.string	"number of columns in foreign key does not match the number of columns in the referenced table"
.LC55:
	.string	"unknown column \"%s\" in foreign key definition"
	.section .text
	.align	4
.proc	sqlite3CreateForeignKey
	.type	sqlite3CreateForeignKey, @function
sqlite3CreateForeignKey:
.LFB892:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1136:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1137:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1138:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1139:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1140:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1141:
	l.lwz   	r20,476(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI1142:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1143:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1144:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1145:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1146:
	l.lwz   	r2,0(r3)	 # SI load
	l.addi  	r1,r1,-88
.LCFI1147:
	l.ori   	r24,r3,0	 # move reg to reg
	l.sw    	32(r1),r7	 # SI store
	l.sw    	8(r1),r2	 # SI store
	l.sw    	16(r1),r20	 # SI store
	l.ori   	r28,r4,0	 # move reg to reg
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfeqi	r20,0
	l.bf	.L3184	# delay slot filled
	l.ori   	r22,r6,0	 # move reg to reg
	l.lwz   	r2,64(r3)	 # SI load
	l.addi  	r20,r0,0	 # move immediate I
	l.sfne 	r2,r20
	l.bf	.L3184
	l.nop			# nop delay slot
	l.lbz   	r2,500(r3)	 # zero_extendqisi2
	l.sfne 	r2,r20
	l.bf	.L3184	# delay slot filled
	l.sfne 	r4,r20
	l.bnf	.L3218	# delay slot filled
	l.sfeqi	r6,0
	l.bf	.L3188
	l.nop			# nop delay slot
	l.lwz   	r26,0(r4)	 # SI load
	l.lwz   	r2,0(r6)	 # SI load
	l.sfeq 	r2,r26
	l.bnf	.L3219	# delay slot filled
	l.addi  	r2,r26,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.lwz   	r4,4(r5)	 # SI load
	l.ori   	r3,r3,65535
	l.and   	r4,r4,r3
	l.slli  	r2,r2,3
	l.addi  	r4,r4,29
	l.ori   	r3,r26,0	 # move reg to reg
	l.sfgtsi	r26,0
	l.bnf	.L3190	# delay slot filled
	l.add   	r4,r4,r2
.L3205:
	l.lwz   	r6,12(r22)	 # SI load
	l.addi  	r12,r0,0	 # move immediate I
	l.addi  	r6,r6,4
.L3193:
	l.lwz   	r11,0(r6)	 # SI load
	l.lbs   	r2,0(r11)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L3191	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
	l.ori   	r8,r11,0	 # move reg to reg
	l.addi  	r8,r8,1
.L3222:
	l.lbs   	r2,0(r8)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L3222	# delay slot filled
	l.addi  	r8,r8,1
	l.addi  	r8,r8,-1
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.sub   	r8,r8,r11
	l.ori   	r2,r2,65535
	l.and   	r8,r8,r2
	l.addi  	r8,r8,1
.L3191:
	l.addi  	r12,r12,1
	l.add   	r4,r4,r8
	l.sfne 	r12,r3
	l.bf	.L3193	# delay slot filled
	l.addi  	r6,r6,16
.L3190:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L3184	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.slli  	r3,r26,3
	l.lwz   	r5,16(r1)	 # SI load
	l.addi  	r2,r11,20
	l.lwz   	r4,36(r5)	 # SI load
	l.add   	r3,r2,r3
	l.sw    	4(r11),r4	 # SI store
	l.sw    	36(r1),r3	 # SI store
	l.sw    	8(r11),r3	 # SI store
	l.sw    	0(r11),r5	 # SI store
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,4(r14)	 # SI load
	l.ori   	r6,r6,65535
	l.lwz   	r4,0(r14)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.and   	r5,r5,r6
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.lwz   	r4,4(r14)	 # SI load
	l.ori   	r5,r5,65535
	l.lwz   	r3,36(r1)	 # SI load
	l.and   	r4,r4,r5
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.add   	r4,r3,r4
	l.jal   	sqlite3Dequote	# delay slot filled
	l.sb    	0(r4),r6	    # movqi
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r3,4(r14)	 # SI load
	l.ori   	r4,r4,65535
	l.sw    	12(r20),r26	 # SI store
	l.and   	r4,r3,r4
	l.sfeqi	r28,0
	l.bf	.L3194	# delay slot filled
	l.sw    	40(r1),r4	 # SI store
	l.sfgtsi	r26,0
	l.bnf	.L3196	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.sw    	12(r1),r2	 # SI store
	l.lwz   	r18,12(r5)	 # SI load
	l.sflesi	r18,0
	l.bf	.L3211
	l.nop			# nop delay slot
	l.addi  	r30,r0,0	 # move immediate I
	l.lwz   	r6,16(r5)	 # SI load
	l.lwz   	r2,12(r28)	 # SI load
	l.sw    	28(r1),r6	 # SI store
	l.sw    	20(r1),r30	 # SI store
	l.sw    	24(r1),r2	 # SI store
.L3198:
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r2,28(r1)	 # SI load
	l.add   	r4,r3,r30
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L3199	# delay slot filled
	l.lwz   	r16,4(r4)	 # SI load
.L3197:
	l.sflts 	r14,r18
	l.bnf	.L3223	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
.L3199:
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r2,r2,20
	l.sfnei	r11,0
	l.bf	.L3197	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
	l.lwz   	r6,12(r1)	 # SI load
	l.lwz   	r2,20(r1)	 # SI load
	l.sw    	0(r6),r14	 # SI store
	l.addi  	r2,r2,1
	l.addi  	r6,r6,8
	l.sw    	20(r1),r2	 # SI store
	l.sw    	12(r1),r6	 # SI store
	l.sflts 	r2,r26
	l.bf	.L3198	# delay slot filled
	l.addi  	r30,r30,16
.L3196:
	l.sfeqi	r22,0
	l.bf	.L3201	# delay slot filled
	l.sflesi	r26,0
	l.bf	.L3201	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.lwz   	r4,40(r1)	 # SI load
	l.addi  	r14,r4,1
	l.lwz   	r5,36(r1)	 # SI load
	l.addi  	r24,r20,24
	l.add   	r14,r5,r14
	l.ori   	r18,r16,0	 # move reg to reg
.L3204:
	l.lwz   	r2,12(r22)	 # SI load
	l.add   	r2,r2,r16
	l.lwz   	r6,4(r2)	 # SI load
	l.lbs   	r2,0(r6)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L3202	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
	l.ori   	r2,r6,0	 # move reg to reg
	l.addi  	r2,r2,1
.L3224:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L3224	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r6
	l.ori   	r3,r3,65535
	l.and   	r2,r2,r3
	l.addi  	r30,r2,1
.L3202:
	l.sw    	0(r24),r14	 # SI store
	l.ori   	r4,r6,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.add   	r2,r14,r2
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.addi  	r18,r18,1
	l.sb    	0(r2),r4	    # movqi
	l.addi  	r16,r16,16
	l.sfges 	r18,r26
	l.bf	.L3201	# delay slot filled
	l.addi  	r24,r24,8
	l.j     	.L3204	# delay slot filled
	l.add   	r14,r14,r30
.L3211:
	l.lwz   	r3,12(r28)	 # SI load
	l.addi  	r30,r0,0	 # move immediate I
	l.sw    	24(r1),r3	 # SI store
	l.lwz   	r4,24(r1)	 # SI load
.L3223:
	l.ori   	r3,r24,0	 # move reg to reg
	l.add   	r30,r4,r30
	l.movhi  	r4,hi(.LC55)
	l.lwz   	r2,4(r30)	 # SI load
	l.ori   	r4,r4,lo(.LC55)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.L3184:
	l.lwz   	r3,8(r1)	 # SI load
.L3221:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r3,8(r1)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.lwz   	r3,8(r1)	 # SI load
	l.addi	r1,r1,88
	l.ori   	r4,r22,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3ExprListDelete	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L3219:
	l.movhi  	r4,hi(.LC54)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC54)
	l.j     	.L3221	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
.L3201:
	l.lwz   	r5,32(r1)	 # SI load
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.srai  	r2,r5,16
	l.srai  	r3,r5,8
	l.sb    	16(r20),r6	    # movqi
	l.sb    	18(r20),r5	    # movqi
	l.sb    	17(r20),r3	    # movqi
	l.sb    	19(r20),r2	    # movqi
	l.lwz   	r2,16(r1)	 # SI load
	l.sw    	36(r2),r20	 # SI store
	l.j     	.L3184	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
.L3218:
	l.lwz   	r4,16(r1)	 # SI load
	l.lwz   	r2,12(r4)	 # SI load
	l.addi  	r2,r2,-1
	l.sfltsi	r2,0
	l.bf	.L3184	# delay slot filled
	l.ori   	r20,r28,0	 # move reg to reg
	l.sfeqi	r6,0
	l.bf	.L3186	# delay slot filled
	l.addi  	r26,r0,1	 # move immediate I
	l.lwz   	r4,0(r6)	 # SI load
	l.sfeqi	r4,1
	l.bnf	.L3220	# delay slot filled
	l.slli  	r6,r2,2
	l.lwz   	r2,4(r5)	 # SI load
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.ori   	r3,r4,0	 # move reg to reg
	l.ori   	r5,r5,65535
	l.ori   	r26,r3,0	 # move reg to reg
	l.and   	r4,r2,r5
	l.j     	.L3205	# delay slot filled
	l.addi  	r4,r4,29
.L3188:
	l.lwz   	r26,0(r4)	 # SI load
	l.lwz   	r4,4(r5)	 # SI load
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.addi  	r2,r26,-1
	l.ori   	r5,r5,65535
	l.slli  	r2,r2,3
	l.and   	r4,r4,r5
	l.addi  	r4,r4,29
	l.j     	.L3190	# delay slot filled
	l.add   	r4,r4,r2
.L3194:
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r2,12(r5)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L3196	# delay slot filled
	l.sw    	20(r20),r2	 # SI store
.L3220:
	l.slli  	r2,r2,4
	l.lwz   	r4,16(r1)	 # SI load
	l.add   	r2,r6,r2
	l.lwz   	r5,16(r4)	 # SI load
	l.movhi  	r4,hi(.LC53)
	l.add   	r2,r5,r2
	l.ori   	r4,r4,lo(.LC53)
	l.lwz   	r2,0(r2)	 # SI load
	l.sw    	4(r1),r14	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.j     	.L3221	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
.L3186:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r4,4(r5)	 # SI load
	l.ori   	r6,r6,65535
	l.and   	r4,r4,r6
	l.j     	.L3190	# delay slot filled
	l.addi  	r4,r4,29
.LFE892:
	.size	sqlite3CreateForeignKey, .-sqlite3CreateForeignKey
	.section	.rodata.str1.1
.LC56:
	.string	"%s %T cannot reference objects in database %s"
	.section .text
	.align	4
.proc	sqlite3FixSrcList
	.type	sqlite3FixSrcList, @function
sqlite3FixSrcList:
.LFB835:
	l.sw    	-24(r1),r14	 # SI store
.LCFI1148:
	l.sw    	-12(r1),r20	 # SI store
.LCFI1149:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1150:
	l.sw    	-28(r1),r2	 # SI store
.LCFI1151:
	l.sw    	-20(r1),r16	 # SI store
.LCFI1152:
	l.sw    	-16(r1),r18	 # SI store
.LCFI1153:
	l.sw    	-8(r1),r22	 # SI store
.LCFI1154:
	l.ori   	r20,r4,0	 # move reg to reg
	l.addi  	r1,r1,-40
.LCFI1155:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3226	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
	l.lhs   	r2,0(r4)	 # extendhisi2_no_sext_mem
	l.addi  	r11,r0,0	 # move immediate I
	l.sfles 	r2,r11
	l.bf	.L3226	# delay slot filled
	l.lwz   	r22,4(r3)	 # SI load
	l.addi  	r2,r4,4
	l.j     	.L3229	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L3227:
	l.jal   	sqlite3StrICmp
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bnf	.L3235	# delay slot filled
	l.movhi  	r4,hi(.LC56)
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,16(r2)	 # SI load
	l.jal   	sqlite3FixSelect	# delay slot filled
	l.addi  	r18,r18,1
	l.sfnei	r11,0
	l.bf	.L3233	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L3236:
	l.lwz   	r4,28(r2)	 # SI load
	l.jal   	sqlite3FixExpr	# delay slot filled
	l.addi  	r2,r2,52
	l.sfnei	r11,0
	l.bf	.L3233
	l.nop			# nop delay slot
	l.lhs   	r3,0(r20)	 # extendhisi2_no_sext_mem
	l.sfles 	r3,r18
	l.bf	.L3226
	l.nop			# nop delay slot
.L3229:
	l.lwz   	r16,0(r2)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfnei	r16,0
	l.bf	.L3227	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r18,r18,1
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	0(r2),r11	 # SI store
	l.jal   	sqlite3FixSelect	# delay slot filled
	l.lwz   	r4,16(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L3236	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L3233:
	l.addi  	r11,r0,1	 # move immediate I
.L3226:
	l.addi	r1,r1,40
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L3235:
	l.lwz   	r5,8(r14)	 # SI load
	l.lwz   	r2,12(r14)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r4,r4,lo(.LC56)
	l.sw    	0(r1),r5	 # SI store
	l.sw    	4(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	8(r1),r16	 # SI store
	l.j     	.L3226	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.LFE835:
	.size	sqlite3FixSrcList, .-sqlite3FixSrcList
	.align	4
.proc	sqlite3FixSelect
	.type	sqlite3FixSelect, @function
sqlite3FixSelect:
.LFB836:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1156:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1157:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1158:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI1159:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bnf	.L3245	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
	l.j     	.L3249	# delay slot filled
	l.addi	r1,r1,12
.L3248:
	l.jal   	sqlite3FixSrcList	# delay slot filled
	l.lwz   	r4,8(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3244	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3FixExpr	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3244	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3FixExpr	# delay slot filled
	l.lwz   	r4,20(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3250	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lwz   	r2,28(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L3247	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
.L3245:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3FixExprList	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L3248	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L3244:
	l.addi  	r11,r0,1	 # move immediate I
.L3250:
	l.addi	r1,r1,12
.L3249:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3247:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE836:
	.size	sqlite3FixSelect, .-sqlite3FixSelect
	.align	4
.proc	sqlite3FixExpr
	.type	sqlite3FixExpr, @function
sqlite3FixExpr:
.LFB837:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1160:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1161:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1162:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI1163:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3252	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
	l.lhz   	r4,2(r4)	 # zero_extendqisi2
	l.addi  	r11,r0,0	 # move immediate I
	l.andi  	r3,r4,49152
	l.sfne 	r3,r11
	l.bnf	.L3264
	l.nop			# nop delay slot
	l.j     	.L3267	# delay slot filled
	l.addi	r1,r1,12
.L3266:
	l.jal   	sqlite3FixSelect	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3252	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L3256:
	l.lwz   	r4,24(r2)	 # SI load
	l.jal   	sqlite3FixExpr	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3263
	l.nop			# nop delay slot
	l.lwz   	r2,20(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L3265
	l.nop			# nop delay slot
	l.lhz   	r4,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r4,49152
	l.sfnei	r3,0
	l.bf	.L3252
	l.nop			# nop delay slot
.L3264:
	l.andi  	r4,r4,4096
	l.sfeqi	r4,0
	l.bnf	.L3266	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,28(r2)	 # SI load
	l.jal   	sqlite3FixExprList	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L3256
	l.nop			# nop delay slot
.L3263:
	l.addi  	r11,r0,1	 # move immediate I
.L3252:
	l.addi	r1,r1,12
.L3267:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3265:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE837:
	.size	sqlite3FixExpr, .-sqlite3FixExpr
	.align	4
.proc	sqlite3FixExprList
	.type	sqlite3FixExprList, @function
sqlite3FixExprList:
.LFB838:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1164:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1165:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1166:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1167:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1168:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI1169:
	l.ori   	r18,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3269	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
	l.lwz   	r3,0(r4)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sfles 	r3,r11
	l.bf	.L3269	# delay slot filled
	l.lwz   	r2,12(r4)	 # SI load
	l.j     	.L3270	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L3275:
	l.lwz   	r3,0(r16)	 # SI load
	l.sfles 	r3,r14
	l.bf	.L3269
	l.nop			# nop delay slot
.L3270:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3FixExpr	# delay slot filled
	l.addi  	r14,r14,1
	l.sfnei	r11,0
	l.bnf	.L3275	# delay slot filled
	l.addi  	r2,r2,16
	l.addi  	r11,r0,1	 # move immediate I
.L3269:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE838:
	.size	sqlite3FixExprList, .-sqlite3FixExprList
	.section	.rodata.str1.1
.LC57:
	.string	" "
.LC58:
	.string	"unknown or unsupported join type: %T %T%s%T"
.LC59:
	.string	"RIGHT and FULL OUTER JOINs are not currently supported"
	.section .text
	.align	4
.proc	sqlite3JoinType
	.type	sqlite3JoinType, @function
sqlite3JoinType:
.LFB1029:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1170:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1171:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1172:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1173:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1174:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1175:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1176:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1177:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1178:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1179:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1180:
	l.addi  	r1,r1,-80
.LCFI1181:
	l.ori   	r26,r4,0	 # move reg to reg
	l.sw    	16(r1),r5	 # SI store
	l.ori   	r28,r6,0	 # move reg to reg
	l.sw    	20(r1),r3	 # SI store
	l.sw    	24(r1),r4	 # SI store
	l.sw    	28(r1),r5	 # SI store
	l.sw    	32(r1),r6	 # SI store
	l.addi  	r20,r1,28
	l.addi  	r30,r1,36
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r22,r0,0	 # move immediate I
.L3277:
	l.sfeqi	r18,0
	l.bf	.L3282	# delay slot filled
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.lwz   	r16,4(r18)	 # SI load
	l.movhi  	r14,hi(keywords.18412+8)
	l.ori   	r5,r5,65535
	l.ori   	r14,r14,lo(keywords.18412+8)
	l.and   	r16,r16,r5
	l.j     	.L3281	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L3278:
	l.addi  	r2,r2,1
.L3291:
	l.sfnei	r2,7
	l.bnf	.L3279	# delay slot filled
	l.addi  	r14,r14,12
.L3281:
	l.lbz   	r7,0(r14)	 # zero_extendqisi2
	l.sfne 	r7,r16
	l.bf	.L3278	# delay slot filled
	l.add   	r24,r2,r2
	l.movhi  	r4,hi(keywords.18412)
	l.add   	r24,r24,r2
	l.ori   	r4,r4,lo(keywords.18412)
	l.slli  	r24,r24,2
	l.lwz   	r3,0(r18)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.add   	r24,r24,r4
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3291	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.lbz   	r3,9(r24)	 # zero_extendqisi2
	l.sfgtsi	r2,6
	l.bf	.L3279	# delay slot filled
	l.or    	r22,r22,r3
	l.sfeq 	r20,r30
	l.bf	.L3292	# delay slot filled
	l.andi  	r2,r22,33
	l.lwz   	r18,0(r20)	 # SI load
	l.j     	.L3277	# delay slot filled
	l.addi  	r20,r20,4
.L3279:
	l.ori   	r22,r22,64
.L3282:
	l.andi  	r2,r22,33
.L3292:
	l.sfeqi	r2,33
	l.bf	.L3283	# delay slot filled
	l.andi  	r2,r22,64
	l.sfeqi	r2,0
	l.bf	.L3284	# delay slot filled
	l.andi  	r2,r22,16
.L3283:
	l.sfeqi	r28,0
	l.bf	.L3287	# delay slot filled
	l.movhi  	r2,hi(.LC57+1)
	l.movhi  	r2,hi(.LC57)
	l.ori   	r2,r2,lo(.LC57)
.L3285:
	l.movhi  	r4,hi(.LC58)
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC58)
	l.sw    	0(r1),r26	 # SI store
	l.sw    	4(r1),r5	 # SI store
	l.sw    	8(r1),r2	 # SI store
	l.sw    	12(r1),r28	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r22,r0,1	 # move immediate I
.L3286:
	l.addi	r1,r1,80
.L3290:
	l.ori   	r11,r22,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L3284:
	l.sfeqi	r2,0
	l.bf	.L3286	# delay slot filled
	l.movhi  	r4,hi(.LC59)
	l.lwz   	r3,20(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC59)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r22,r0,1	 # move immediate I
	l.j     	.L3290	# delay slot filled
	l.addi	r1,r1,80
.L3287:
	l.j     	.L3285	# delay slot filled
	l.ori   	r2,r2,lo(.LC57+1)
.LFE1029:
	.size	sqlite3JoinType, .-sqlite3JoinType
	.section	.rodata.str1.1
.LC60:
	.string	"table %s may not be modified"
.LC61:
	.string	"cannot modify %s because it is a view"
	.section .text
	.align	4
.proc	sqlite3IsReadOnly
	.type	sqlite3IsReadOnly, @function
sqlite3IsReadOnly:
.LFB935:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1182:
	l.lbz   	r6,34(r4)	 # zero_extendqisi2
	l.andi  	r6,r6,1
	l.sfeqi	r6,0
.LCFI1183:
	l.bf	.L3294	# delay slot filled
	l.addi  	r1,r1,-8
	l.lwz   	r6,0(r3)	 # SI load
	l.lwz   	r6,12(r6)	 # SI load
	l.andi  	r6,r6,2048
	l.sfnei	r6,0
	l.bnf	.L3300
	l.nop			# nop delay slot
.L3294:
	l.lwz   	r6,52(r4)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L3301	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r6,0(r6)	 # SI load
	l.lwz   	r6,52(r6)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L3295
	l.nop			# nop delay slot
.L3301:
	l.sfne 	r5,r11
	l.bf	.L3297
	l.nop			# nop delay slot
	l.lwz   	r5,28(r4)	 # SI load
	l.sfeq 	r5,r11
	l.bf	.L3297
	l.nop			# nop delay slot
	l.lwz   	r5,4(r4)	 # SI load
	l.movhi  	r4,hi(.LC61)
	l.sw    	0(r1),r5	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC61)
	l.addi  	r11,r0,1	 # move immediate I
.L3297:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L3300:
	l.lbz   	r6,19(r3)	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bnf	.L3294
	l.nop			# nop delay slot
.L3295:
	l.lwz   	r5,4(r4)	 # SI load
	l.movhi  	r4,hi(.LC60)
	l.sw    	0(r1),r5	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC60)
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.LFE935:
	.size	sqlite3IsReadOnly, .-sqlite3IsReadOnly
	.section	.rodata.str1.1
.LC62:
	.string	"too many columns in %s"
	.section .text
	.align	4
.proc	sqlite3ExprListCheckLength
	.type	sqlite3ExprListCheckLength, @function
sqlite3ExprListCheckLength:
.LFB762:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1184:
	l.lwz   	r6,0(r3)	 # SI load
	l.addi  	r1,r1,-8
.LCFI1185:
	l.sfeqi	r4,0
	l.bf	.L3302	# delay slot filled
	l.lwz   	r6,88(r6)	 # SI load
	l.lwz   	r4,0(r4)	 # SI load
	l.sfges 	r6,r4
	l.bf	.L3302
	l.nop			# nop delay slot
	l.movhi  	r4,hi(.LC62)
	l.sw    	0(r1),r5	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC62)
.L3302:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE762:
	.size	sqlite3ExprListCheckLength, .-sqlite3ExprListCheckLength
	.align	4
.proc	sqlite3MAppendf
	.type	sqlite3MAppendf, @function
sqlite3MAppendf:
.LFB107:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1186:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1187:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1188:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1189:
	l.addi  	r1,r1,-16
.LCFI1190:
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r4,r5,0	 # move reg to reg
	l.addi  	r5,r1,16
	l.jal   	sqlite3VMPrintf	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE107:
	.size	sqlite3MAppendf, .-sqlite3MAppendf
	.align	4
.proc	sqlite3SetString
	.type	sqlite3SetString, @function
sqlite3SetString:
.LFB96:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1191:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1192:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1193:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sw    	-8(r1),r16	 # SI store
.LCFI1194:
	l.addi  	r1,r1,-16
.LCFI1195:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r4,r5,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VMPrintf	# delay slot filled
	l.addi  	r5,r1,16
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,0(r14)	 # SI load
	l.sw    	0(r14),r16	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE96:
	.size	sqlite3SetString, .-sqlite3SetString
	.section	.rodata.str1.1
.LC63:
	.string	"?"
.LC64:
	.string	"malformed database schema (%s)"
.LC65:
	.string	"%s - %s"
	.section .text
	.align	4
.proc	corruptSchema
	.type	corruptSchema, @function
corruptSchema:
.LFB1010:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1196:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1197:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1198:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1199:
	l.lwz   	r6,0(r3)	 # SI load
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,30(r6)	 # zero_extendqisi2
	l.addi  	r1,r1,-24
.LCFI1200:
	l.ori   	r7,r4,0	 # move reg to reg
	l.sfnei	r3,0
	l.bf	.L3307	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.lwz   	r3,12(r6)	 # SI load
	l.movhi 	r4,hi(262144)	 # move immediate M
	l.and   	r3,r3,r4
	l.sfnei	r3,0
	l.bf	.L3307	# delay slot filled
	l.sfeqi	r7,0
	l.bf	.L3310
	l.nop			# nop delay slot
.L3308:
	l.movhi  	r5,hi(.LC64)
	l.lwz   	r3,8(r2)	 # SI load
	l.ori   	r4,r6,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC64)
	l.jal   	sqlite3SetString	# delay slot filled
	l.sw    	0(r1),r7	 # SI store
	l.sfeqi	r14,0
	l.bf	.L3312	# delay slot filled
	l.addi  	r3,r0,11	 # move immediate I
	l.lbs   	r3,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bnf	.L3311	# delay slot filled
	l.movhi  	r5,hi(.LC65)
.L3307:
	l.addi  	r3,r0,11	 # move immediate I
.L3312:
	l.sw    	12(r2),r3	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3311:
	l.lwz   	r16,8(r2)	 # SI load
	l.lwz   	r6,0(r16)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r5,r5,lo(.LC65)
	l.ori   	r4,r6,0	 # move reg to reg
	l.sw    	4(r1),r14	 # SI store
	l.jal   	sqlite3MAppendf	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.addi  	r3,r0,11	 # move immediate I
	l.sw    	0(r16),r11	 # SI store
	l.sw    	12(r2),r3	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3310:
	l.movhi  	r7,hi(.LC63)
	l.j     	.L3308	# delay slot filled
	l.ori   	r7,r7,lo(.LC63)
.LFE1010:
	.size	corruptSchema, .-corruptSchema
	.section	.rodata.str1.1
.LC66:
	.string	"\n"
	.section .text
	.align	4
.proc	checkAppendMsg
	.type	checkAppendMsg, @function
checkAppendMsg:
.LFB482:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1201:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1202:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1203:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1204:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1205:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,16(r3)	 # SI load
	l.addi  	r1,r1,-20
.LCFI1206:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bnf	.L3319	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
.L3313:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3319:
	l.lwz   	r4,20(r2)	 # SI load
	l.addi  	r3,r3,-1
	l.addi  	r4,r4,1
	l.lwz   	r5,40(r2)	 # SI load
	l.sw    	16(r2),r3	 # SI store
	l.sfeqi	r5,0
	l.bnf	.L3318	# delay slot filled
	l.sw    	20(r2),r4	 # SI store
	l.addi  	r18,r2,28
	l.sfeqi	r14,0
.L3320:
	l.bf	.L3316	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
.L3316:
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3VXPrintf	# delay slot filled
	l.addi  	r6,r1,20
	l.lbz   	r3,52(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L3313
	l.nop			# nop delay slot
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	24(r2),r3	 # SI store
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3318:
	l.addi  	r18,r2,28
	l.movhi  	r4,hi(.LC66)
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC66)
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L3320	# delay slot filled
	l.sfeqi	r14,0
.LFE482:
	.size	checkAppendMsg, .-checkAppendMsg
	.section	.rodata.str1.1
.LC67:
	.string	"invalid page number %d"
.LC68:
	.string	"2nd reference to page %d"
	.section .text
	.align	4
.proc	checkRef
	.type	checkRef, @function
checkRef:
.LFB483:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1207:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1208:
	l.ori   	r6,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI1209:
	l.sfeqi	r4,0
	l.bf	.L3322	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.lwz   	r4,8(r3)	 # SI load
	l.sfleu 	r6,r4
	l.bnf	.L3327	# delay slot filled
	l.slli  	r4,r6,2
	l.lwz   	r7,12(r3)	 # SI load
	l.add   	r7,r7,r4
	l.lwz   	r4,0(r7)	 # SI load
	l.sfnei	r4,1
	l.bnf	.L3328	# delay slot filled
	l.sfgtsi	r4,1
	l.bnf	.L3329
	l.nop			# nop delay slot
.L3325:
	l.addi  	r4,r4,1
	l.sw    	0(r7),r4	 # SI store
.L3322:
	l.addi	r1,r1,12
.L3330:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L3327:
	l.ori   	r4,r5,0	 # move reg to reg
	l.movhi  	r5,hi(.LC67)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.ori   	r5,r5,lo(.LC67)
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L3329:
	l.j     	.L3325	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L3328:
	l.ori   	r4,r5,0	 # move reg to reg
	l.movhi  	r5,hi(.LC68)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.ori   	r5,r5,lo(.LC68)
	l.j     	.L3330	# delay slot filled
	l.addi	r1,r1,12
.LFE483:
	.size	checkRef, .-checkRef
	.align	4
.proc	readJournalHdr
	.type	readJournalHdr, @function
readJournalHdr:
.LFB280:
	l.lwz   	r12,68(r3)	 # SI load
	l.lwz   	r8,72(r3)	 # SI load
	l.sw    	-32(r1),r2	 # SI store
.LCFI1210:
	l.sw    	-24(r1),r16	 # SI store
.LCFI1211:
	l.sw    	-20(r1),r18	 # SI store
.LCFI1212:
	l.sw    	-16(r1),r20	 # SI store
.LCFI1213:
	l.sw    	-12(r1),r22	 # SI store
.LCFI1214:
	l.sw    	-8(r1),r24	 # SI store
.LCFI1215:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1216:
	l.sw    	-28(r1),r14	 # SI store
.LCFI1217:
	l.or    	r16,r12,r8
	l.addi  	r1,r1,-60
.LCFI1218:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r22,r6,0	 # move reg to reg
	l.sfnei	r16,0
	l.bf	.L3332	# delay slot filled
	l.ori   	r24,r7,0	 # move reg to reg
	l.lwz   	r14,108(r3)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.lwz   	r5,4(r1)	 # SI load
.L3359:
		l.lwz   	r6, 0(r1)
		l.lwz   	r7, 4(r1)
	l.add   	r4,r14,r5
		l.sw    	68(r2), r6
		l.sw    	68+4(r2), r7
	l.sfltu 	r4,r14
	l.bf	.L3337	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
.L3337:
	l.lwz   	r7,0(r1)	 # SI load
	l.add   	r16,r16,r7
	l.add   	r3,r3,r16
	l.sfgts 	r3,r18
	l.bnf	.L3355	# delay slot filled
	l.sfne 	r3,r18
	l.addi  	r11,r0,101	 # move immediate I
.L3336:
	l.addi	r1,r1,60
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L3332:
	l.addi  	r11,r8,-1
	l.lwz   	r14,108(r3)	 # SI load
	l.addi  	r16,r0,0	 # move immediate I
	l.sfltu 	r11,r8
	l.bnf	.L3356	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L3334:
	l.addi  	r12,r12,-1
	l.ori   	r4,r11,0	 # move reg to reg
	l.add   	r3,r3,r12
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	__divdi3	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.addi  	r3,r0,1	 # move immediate I
	l.sfgeui	r12,-1
	l.bnf	.L3357	# delay slot filled
	l.addi  	r4,r12,1
	l.add   	r3,r3,r11
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	__muldi3	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.j     	.L3359	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
.L3355:
	l.bf	.L3354	# delay slot filled
	l.sfgtu 	r4,r20
	l.bf	.L3336	# delay slot filled
	l.addi  	r11,r0,101	 # move immediate I
.L3354:
	l.lwz   	r3,60(r2)	 # SI load
	l.addi  	r14,r1,8
	l.lwz   	r4,0(r3)	 # SI load
	l.addi  	r5,r0,8	 # move immediate I
	l.lwz   	r11,8(r4)	 # SI load
		l.lwz   	r6, 0(r1)
		l.lwz   	r7, 4(r1)
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3336
	l.nop			# nop delay slot
	l.movhi  	r4,hi(aJournalMagic)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(aJournalMagic)
	l.jal   	memcmp	# delay slot filled
	l.addi  	r5,r0,8	 # move immediate I
	l.ori   	r8,r11,0	 # move reg to reg
	l.sfnei	r8,0
	l.bf	.L3336	# delay slot filled
	l.addi  	r11,r0,101	 # move immediate I
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r6,4(r1)	 # SI load
	l.addi  	r5,r3,8
	l.addi  	r4,r0,1	 # move immediate I
	l.sfltu 	r5,r6
	l.bf	.L3339	# delay slot filled
	l.lwz   	r3,60(r2)	 # SI load
	l.ori   	r4,r8,0	 # move reg to reg
.L3339:
	l.lwz   	r7,0(r1)	 # SI load
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	read32bits	# delay slot filled
	l.add   	r4,r4,r7
	l.sfnei	r11,0
	l.bf	.L3336
	l.nop			# nop delay slot
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r6,4(r1)	 # SI load
	l.addi  	r5,r3,12
	l.addi  	r4,r0,1	 # move immediate I
	l.sfltu 	r5,r6
	l.bf	.L3340	# delay slot filled
	l.lwz   	r3,60(r2)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
.L3340:
	l.lwz   	r7,0(r1)	 # SI load
	l.addi  	r6,r2,44
	l.jal   	read32bits	# delay slot filled
	l.add   	r4,r4,r7
	l.sfnei	r11,0
	l.bf	.L3336
	l.nop			# nop delay slot
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r6,4(r1)	 # SI load
	l.addi  	r5,r3,16
	l.addi  	r4,r0,1	 # move immediate I
	l.sfltu 	r5,r6
	l.bf	.L3341	# delay slot filled
	l.lwz   	r3,60(r2)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
.L3341:
	l.lwz   	r7,0(r1)	 # SI load
	l.ori   	r6,r24,0	 # move reg to reg
	l.jal   	read32bits	# delay slot filled
	l.add   	r4,r4,r7
	l.sfnei	r11,0
	l.bf	.L3336
	l.nop			# nop delay slot
	l.lwz   	r4,68(r2)	 # SI load
	l.lwz   	r3,72(r2)	 # SI load
	l.or    	r6,r4,r3
	l.sfnei	r6,0
	l.bnf	.L3358	# delay slot filled
	l.lwz   	r7,4(r1)	 # SI load
.L3342:
	l.lwz   	r5,108(r2)	 # SI load
	l.add   	r5,r3,r5
	l.sfltu 	r5,r3
	l.bf	.L3345	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
.L3345:
	l.add   	r4,r6,r4
	l.sw    	72(r2),r5	 # SI store
	l.j     	.L3336	# delay slot filled
	l.sw    	68(r2),r4	 # SI store
.L3357:
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.add   	r3,r3,r11
	l.jal   	__muldi3	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.j     	.L3359	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
.L3356:
	l.j     	.L3334	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L3358:
	l.lwz   	r3,4(r1)	 # SI load
	l.addi  	r5,r3,20
	l.addi  	r4,r0,1	 # move immediate I
	l.sfltu 	r5,r7
	l.bf	.L3343	# delay slot filled
	l.lwz   	r3,60(r2)	 # SI load
	l.ori   	r4,r6,0	 # move reg to reg
.L3343:
	l.lwz   	r6,0(r1)	 # SI load
	l.add   	r4,r4,r6
	l.jal   	read32bits	# delay slot filled
	l.addi  	r6,r1,16
	l.sfnei	r11,0
	l.bf	.L3336	# delay slot filled
	l.lwz   	r7,4(r1)	 # SI load
	l.lwz   	r3,60(r2)	 # SI load
	l.addi  	r5,r7,24
	l.sfltu 	r5,r7
	l.bf	.L3344	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r4,r11,0	 # move reg to reg
.L3344:
	l.lwz   	r7,0(r1)	 # SI load
	l.addi  	r6,r1,20
	l.jal   	read32bits	# delay slot filled
	l.add   	r4,r4,r7
	l.sfnei	r11,0
	l.bf	.L3336	# delay slot filled
	l.lwz   	r5,20(r1)	 # SI load
	l.sfleui	r5,511
	l.bf	.L3336	# delay slot filled
	l.addi  	r11,r0,101	 # move immediate I
	l.lwz   	r3,16(r1)	 # SI load
	l.sfleui	r3,511
	l.bf	.L3336
	l.nop			# nop delay slot
	l.ori   	r4,r0,32768	 # move immediate K
	l.sfgtu 	r5,r4
	l.bf	.L3336
	l.nop			# nop delay slot
	l.movhi 	r6,hi(1048576)	 # move immediate M
	l.sfgtu 	r3,r6
	l.bf	.L3336
	l.nop			# nop delay slot
	l.addi  	r4,r5,-1
	l.and   	r4,r4,r5
	l.sfnei	r4,0
	l.bf	.L3336
	l.nop			# nop delay slot
	l.addi  	r4,r3,-1
	l.and   	r3,r4,r3
	l.sfnei	r3,0
	l.bf	.L3336
	l.nop			# nop delay slot
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r1,26
	l.jal   	sqlite3PagerSetPagesize	# delay slot filled
	l.sh    	26(r1),r5	 # movhi
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r4,68(r2)	 # SI load
	l.sw    	108(r2),r3	 # SI store
	l.j     	.L3342	# delay slot filled
	l.lwz   	r3,72(r2)	 # SI load
.LFE280:
	.size	readJournalHdr, .-readJournalHdr
	.align	4
.proc	readMasterJournal
	.type	readMasterJournal, @function
readMasterJournal:
.LFB276:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1219:
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sw    	-16(r1),r14	 # SI store
.LCFI1220:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1221:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1222:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1223:
	l.sb    	0(r4),r2	    # movqi
	l.addi  	r1,r1,-44
.LCFI1224:
	l.lwz   	r2,0(r3)	 # SI load
	l.ori   	r16,r4,0	 # move reg to reg
	l.lwz   	r11,24(r2)	 # SI load
	l.addi  	r4,r1,8
	l.ori   	r14,r3,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3361	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,8(r1)	 # SI load
	l.sfgtsi	r3,0
	l.bf	.L3372	# delay slot filled
	l.lwz   	r6,12(r1)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L3374	# delay slot filled
	l.sfgtui	r6,15
.L3361:
	l.addi	r1,r1,44
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3374:
	l.bnf	.L3361
	l.nop			# nop delay slot
.L3372:
	l.addi  	r2,r6,-16
	l.sfltu 	r2,r6
	l.bnf	.L3375	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L3363:
	l.addi  	r5,r3,-1
	l.addi  	r6,r1,20
	l.add   	r4,r4,r5
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	read32bits	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3361	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,20(r1)	 # SI load
	l.sfgeu 	r3,r18
	l.bf	.L3361
	l.nop			# nop delay slot
	l.lwz   	r6,12(r1)	 # SI load
	l.lwz   	r3,8(r1)	 # SI load
	l.addi  	r5,r6,-12
	l.sfltu 	r5,r6
	l.bnf	.L3376	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L3364:
	l.addi  	r2,r3,-1
	l.addi  	r6,r1,16
	l.add   	r4,r4,r2
	l.jal   	read32bits	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3361	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r5,12(r1)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r7,r5,-8
	l.ori   	r18,r1,0	 # move reg to reg
	l.lwz   	r4,8(r1)	 # SI load
	l.sfltu 	r7,r5
	l.bf	.L3365	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
.L3365:
	l.addi  	r2,r4,-1
	l.lwz   	r11,8(r3)	 # SI load
	l.add   	r6,r6,r2
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,8	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L3361	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.movhi  	r4,hi(aJournalMagic)
	l.ori   	r3,r1,0	 # move reg to reg
	l.ori   	r4,r4,lo(aJournalMagic)
	l.jal   	memcmp	# delay slot filled
	l.addi  	r5,r0,8	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L3361	# delay slot filled
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r6,12(r1)	 # SI load
	l.addi  	r3,r6,-16
	l.lwz   	r8,0(r14)	 # SI load
	l.lwz   	r2,8(r1)	 # SI load
	l.sfltu 	r3,r6
	l.bf	.L3366	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r4,r11,0	 # move reg to reg
.L3366:
	l.addi  	r2,r2,-1
	l.sub   	r7,r3,r5
	l.add   	r2,r4,r2
	l.sfgtu 	r7,r3
	l.bf	.L3367	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
.L3367:
	l.sub   	r6,r2,r6
	l.lwz   	r11,8(r8)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3361	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r6,20(r1)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L3377	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r4,16(r1)	 # SI load
.L3370:
	l.add   	r5,r16,r3
	l.addi  	r3,r3,1
	l.lbs   	r5,0(r5)	 # extendqisi2_no_sext_mem
	l.sfltu 	r3,r6
	l.bf	.L3370	# delay slot filled
	l.sub   	r4,r4,r5
.L3369:
	l.sfeqi	r4,0
	l.bf	.L3371
	l.nop			# nop delay slot
	l.addi  	r6,r0,0	 # move immediate I
.L3371:
	l.add   	r6,r16,r6
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.j     	.L3361	# delay slot filled
	l.sb    	0(r6),r3	    # movqi
.L3375:
	l.j     	.L3363	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L3376:
	l.j     	.L3364	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
.L3377:
	l.j     	.L3369	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
.LFE276:
	.size	readMasterJournal, .-readMasterJournal
	.align	4
.proc	syncJournal
	.type	syncJournal, @function
syncJournal:
.LFB311:
	l.sw    	-24(r1),r2	 # SI store
.LCFI1225:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1226:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1227:
	l.sw    	-16(r1),r16	 # SI store
.LCFI1228:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1229:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1230:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r11,16(r3)	 # zero_extendqisi2
	l.sfeqi	r11,0
.LCFI1231:
	l.bf	.L3379	# delay slot filled
	l.addi  	r1,r1,-40
	l.lbz   	r3,5(r3)	 # zero_extendqisi2
	l.sfeqi	r3,4
	l.bf	.L3407	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r11,48(r4)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.andi  	r7,r11,512
	l.sfnei	r7,0
	l.bf	.L3381	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r8,68(r2)	 # SI load
	l.lwz   	r5,72(r2)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r12,r0,0	 # move immediate I
	l.or    	r3,r8,r5
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
	l.lwz   	r20,76(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L3382	# delay slot filled
	l.lwz   	r18,80(r2)	 # SI load
	l.addi  	r4,r5,-1
	l.lwz   	r16,108(r2)	 # SI load
	l.sfltu 	r4,r5
	l.bnf	.L3399	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L3384:
	l.addi  	r8,r8,-1
	l.addi  	r5,r0,0	 # move immediate I
	l.add   	r3,r3,r8
	l.jal   	__divdi3	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.addi  	r3,r0,1	 # move immediate I
	l.sfgeui	r12,-1
	l.bnf	.L3400	# delay slot filled
	l.addi  	r4,r12,1
.L3385:
	l.ori   	r6,r16,0	 # move reg to reg
	l.add   	r3,r3,r11
	l.jal   	__muldi3	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r7,r12,0	 # move reg to reg
		l.sw    	0(r1), r6
		l.sw    	4(r1), r7
.L3382:
	l.lwz   	r3,60(r2)	 # SI load
	l.addi  	r16,r1,8
	l.lwz   	r5,0(r3)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r11,8(r5)	 # SI load
		l.lwz   	r6, 0(r1)
		l.lwz   	r7, 4(r1)
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,8	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L3408	# delay slot filled
	l.xori  	r3,r11,522
	l.movhi  	r4,hi(aJournalMagic)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(aJournalMagic)
	l.jal   	memcmp	# delay slot filled
	l.addi  	r5,r0,8	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L3401	# delay slot filled
	l.movhi  	r4,hi(zerobyte.9933)
.L3387:
	l.lbz   	r3,9(r2)	 # zero_extendqisi2
.L3405:
	l.sfeqi	r3,0
	l.bf	.L3389	# delay slot filled
	l.andi  	r3,r14,1024
	l.sfnei	r3,0
	l.bnf	.L3402
	l.nop			# nop delay slot
.L3389:
	l.addi  	r5,r18,8
.L3409:
	l.lwz   	r3,60(r2)	 # SI load
	l.sfltu 	r5,r18
	l.bnf	.L3403	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L3390:
	l.add   	r4,r4,r20
	l.jal   	write32bits	# delay slot filled
	l.lwz   	r6,40(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3379
	l.nop			# nop delay slot
.L3381:
	l.andi  	r14,r14,1024
	l.sfnei	r14,0
	l.bf	.L3407	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.lbz   	r4,10(r2)	 # zero_extendqisi2
	l.sfnei	r4,3
	l.bnf	.L3404	# delay slot filled
	l.lwz   	r3,60(r2)	 # SI load
.L3391:
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r11,20(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.or    	r4,r14,r4
	l.sfnei	r11,0
	l.bf	.L3379
	l.nop			# nop delay slot
	l.addi  	r3,r0,1	 # movqi: move immediate
.L3407:
	l.addi  	r12,r0,0	 # movqi: move immediate
	l.sb    	17(r2),r3	    # movqi
	l.sb    	16(r2),r12	    # movqi
	l.lwz   	r4,160(r2)	 # SI load
	l.lwz   	r3,0(r4)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L3392
	l.nop			# nop delay slot
.L3397:
	l.lhz   	r2,20(r3)	 # zero_extendqisi2
	l.addi  	r5,r0,-5	 # move immediate I
	l.and   	r2,r2,r5
	l.sh    	20(r3),r2	 # movhi
	l.lwz   	r3,28(r3)	 # SI load
	l.sfnei	r3,0
	l.bf	.L3397
	l.nop			# nop delay slot
.L3392:
	l.lwz   	r2,4(r4)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	8(r4),r2	 # SI store
.L3379:
	l.addi	r1,r1,40
.L3406:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3401:
	l.lwz   	r3,60(r2)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.ori   	r4,r4,lo(zerobyte.9933)
	l.lwz   	r11,12(r5)	 # SI load
		l.lwz   	r6, 0(r1)
		l.lwz   	r7, 4(r1)
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.xori  	r3,r11,522
.L3408:
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L3387	# delay slot filled
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfltsi	r3,0
	l.bf	.L3379
	l.nop			# nop delay slot
	l.j     	.L3405	# delay slot filled
	l.lbz   	r3,9(r2)	 # zero_extendqisi2
.L3403:
	l.j     	.L3390	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L3400:
	l.j     	.L3385	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L3399:
	l.j     	.L3384	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
.L3402:
	l.lwz   	r3,60(r2)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r11,20(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.lbz   	r4,10(r2)	 # zero_extendqisi2
	l.sfnei	r11,0
	l.bnf	.L3409	# delay slot filled
	l.addi  	r5,r18,8
	l.j     	.L3406	# delay slot filled
	l.addi	r1,r1,40
.L3404:
	l.j     	.L3391	# delay slot filled
	l.addi  	r14,r0,16	 # move immediate I
.LFE311:
	.size	syncJournal, .-syncJournal
	.align	4
.proc	binCollFunc
	.type	binCollFunc, @function
binCollFunc:
.LFB1195:
	l.sw    	-28(r1),r2	 # SI store
.LCFI1232:
	l.sw    	-24(r1),r14	 # SI store
.LCFI1233:
	l.sw    	-20(r1),r16	 # SI store
.LCFI1234:
	l.sw    	-16(r1),r18	 # SI store
.LCFI1235:
	l.sw    	-12(r1),r20	 # SI store
.LCFI1236:
	l.sw    	-8(r1),r22	 # SI store
.LCFI1237:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1238:
	l.ori   	r14,r6,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI1239:
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r22,r3,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r20,r7,0	 # move reg to reg
	l.sfles 	r6,r4
	l.bf	.L3411	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
	l.ori   	r2,r4,0	 # move reg to reg
.L3411:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	memcmp	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3412	# delay slot filled
	l.sfeqi	r22,0
	l.bf	.L3413	# delay slot filled
	l.sub   	r8,r16,r2
	l.sflesi	r8,0
	l.bf	.L3414	# delay slot filled
	l.add   	r18,r18,r2
	l.add   	r3,r18,r8
	l.lbs   	r3,-1(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,32
	l.bf	.L3413	# delay slot filled
	l.addi  	r3,r8,-2
	l.j     	.L3415	# delay slot filled
	l.add   	r3,r18,r3
.L3420:
	l.lbs   	r12,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r12,32
	l.bnf	.L3413	# delay slot filled
	l.addi  	r3,r3,-1
.L3415:
	l.addi  	r8,r8,-1
	l.sflesi	r8,0
	l.bnf	.L3420
	l.nop			# nop delay slot
.L3414:
	l.sfnei	r8,0
	l.bf	.L3413	# delay slot filled
	l.sub   	r3,r14,r2
	l.sflesi	r3,0
	l.bf	.L3416	# delay slot filled
	l.add   	r2,r20,r2
	l.add   	r4,r2,r3
	l.lbs   	r4,-1(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,32
	l.bf	.L3413
	l.nop			# nop delay slot
	l.addi  	r5,r3,-2
	l.j     	.L3417	# delay slot filled
	l.add   	r5,r2,r5
.L3421:
	l.lbs   	r2,0(r5)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,32
	l.bnf	.L3413	# delay slot filled
	l.addi  	r5,r5,-1
.L3417:
	l.addi  	r3,r3,-1
	l.sflesi	r3,0
	l.bnf	.L3421
	l.nop			# nop delay slot
.L3416:
	l.sfeqi	r3,0
	l.bnf	.L3413
	l.nop			# nop delay slot
.L3412:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L3413:
	l.j     	.L3412	# delay slot filled
	l.sub   	r11,r16,r14
.LFE1195:
	.size	binCollFunc, .-binCollFunc
	.section	.rodata.str1.1
.LC69:
	.string	"922337203685477580"
	.section .text
	.align	4
.proc	compare2pow63
	.type	compare2pow63, @function
compare2pow63:
.LFB132:
	l.movhi  	r4,hi(.LC69)
	l.sw    	-8(r1),r2	 # SI store
.LCFI1240:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1241:
	l.ori   	r4,r4,lo(.LC69)
	l.addi  	r1,r1,-8
.LCFI1242:
	l.addi  	r5,r0,18	 # move immediate I
	l.jal   	memcmp	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3423
	l.nop			# nop delay slot
	l.lbs   	r11,18(r2)	 # extendqisi2_no_sext_mem
	l.addi  	r11,r11,-56
.L3423:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE132:
	.size	compare2pow63, .-compare2pow63
	.align	4
.proc	sqlite3Atoi64
	.type	sqlite3Atoi64, @function
sqlite3Atoi64:
.LFB133:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1243:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1244:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1245:
	l.ori   	r13,r3,0	 # move reg to reg
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.movhi  	r3,hi(sqlite3CtypeMap)
	l.andi  	r2,r5,0xff	 # zero_extendqisi2
	l.ori   	r3,r3,lo(sqlite3CtypeMap)
	l.add   	r2,r2,r3
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
.LCFI1246:
	l.bf	.L3425	# delay slot filled
	l.addi  	r1,r1,-12
	l.addi  	r13,r13,1
.L3461:
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.lbs   	r5,0(r13)	 # extendqisi2_no_sext_mem
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.andi  	r2,r5,0xff	 # zero_extendqisi2
	l.add   	r2,r2,r7
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfnei	r2,0
	l.bf	.L3461	# delay slot filled
	l.addi  	r13,r13,1
	l.addi  	r13,r13,-1
.L3425:
	l.sfnei	r5,45
	l.bnf	.L3455	# delay slot filled
	l.sfnei	r5,43
	l.bnf	.L3456	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L3428:
	l.sfnei	r5,48
	l.bf	.L3429	# delay slot filled
	l.ori   	r12,r13,0	 # move reg to reg
	l.addi  	r12,r12,1
.L3462:
	l.lbs   	r5,0(r12)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,48
	l.bf	.L3462	# delay slot filled
	l.addi  	r12,r12,1
	l.addi  	r12,r12,-1
.L3429:
	l.sflesi	r5,47
	l.bf	.L3445	# delay slot filled
	l.sfgtsi	r5,57
	l.bf	.L3445
	l.nop			# nop delay slot
	l.addi  	r15,r0,0	 # move immediate I
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L3436	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L3457:
	l.bnf	.L3463	# delay slot filled
	l.sfeqi	r14,0
.L3436:
	l.add   	r8,r3,r3
	l.ori   	r17,r3,0	 # move reg to reg
	l.slli  	r11,r8,2
	l.addi  	r15,r15,1
	l.add   	r2,r2,r2
	l.add   	r11,r8,r11
	l.add   	r25,r12,r15
	l.add   	r3,r11,r5
	l.srli  	r27,r8,30
	l.addi  	r21,r0,1	 # move immediate I
	l.sfltu 	r8,r17
	l.bf	.L3432	# delay slot filled
	l.addi  	r19,r3,-48
	l.addi  	r21,r0,0	 # move immediate I
.L3432:
	l.add   	r2,r21,r2
	l.ori   	r23,r19,0	 # move reg to reg
	l.slli  	r17,r2,2
	l.addi  	r21,r0,1	 # move immediate I
	l.sfltu 	r11,r8
	l.srai  	r5,r5,31
	l.bf	.L3433	# delay slot filled
	l.or    	r17,r27,r17
	l.addi  	r21,r0,0	 # move immediate I
.L3433:
	l.add   	r2,r2,r17
	l.sfltu 	r3,r11
	l.add   	r2,r21,r2
	l.addi  	r17,r0,1	 # move immediate I
	l.bf	.L3434	# delay slot filled
	l.add   	r2,r2,r5
	l.addi  	r17,r0,0	 # move immediate I
.L3434:
	l.add   	r17,r17,r2
	l.addi  	r8,r0,1	 # move immediate I
	l.sfltu 	r19,r3
	l.bf	.L3435	# delay slot filled
	l.addi  	r17,r17,-1
	l.addi  	r8,r0,0	 # move immediate I
.L3435:
	l.add   	r8,r8,r17
	l.lbs   	r5,0(r25)	 # extendqisi2_no_sext_mem
	l.ori   	r6,r8,0	 # move reg to reg
	l.ori   	r7,r23,0	 # move reg to reg
	l.sflesi	r5,47
		l.or    	r2, r6, r0
		l.or    	r3, r7, r0
	l.bnf	.L3457	# delay slot filled
	l.sflesi	r5,57
.L3431:
	l.sfeqi	r14,0
.L3463:
	l.bf	.L3437	# delay slot filled
	l.sub   	r6,r0,r3
	l.sfgtui	r6,0
	l.bnf	.L3458	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
.L3438:
	l.sub   	r2,r0,r2
	l.ori   	r3,r6,0	 # move reg to reg
	l.sub   	r7,r2,r7
	l.ori   	r2,r7,0	 # move reg to reg
.L3437:
		l.sw    	0(r4), r2
		l.sw    	4(r4), r3
	l.addi  	r2,r0,0	 # move immediate I
	l.sfne 	r5,r2
	l.bf	.L3439
	l.nop			# nop delay slot
	l.sub   	r3,r0,r15
	l.or    	r3,r3,r15
	l.sflts 	r3,r2
	l.bnf	.L3459	# delay slot filled
	l.sfgtsi	r15,19
.L3464:
	l.bf	.L3439	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sfnei	r15,19
	l.bf	.L3439	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.jal   	compare2pow63	# delay slot filled
	l.ori   	r3,r12,0	 # move reg to reg
	l.sflts 	r11,r14
	l.bf	.L3439
	l.nop			# nop delay slot
	l.addi  	r2,r0,0	 # move immediate I
.L3439:
	l.addi	r1,r1,12
.L3460:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3458:
	l.j     	.L3438	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L3459:
	l.xor   	r13,r13,r12
	l.sub   	r3,r0,r13
	l.or    	r13,r3,r13
	l.sfges 	r13,r2
	l.bnf	.L3464	# delay slot filled
	l.sfgtsi	r15,19
	l.j     	.L3460	# delay slot filled
	l.addi	r1,r1,12
.L3455:
	l.addi  	r13,r13,1
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L3428	# delay slot filled
	l.lbs   	r5,0(r13)	 # extendqisi2_no_sext_mem
.L3456:
	l.addi  	r13,r13,1
	l.j     	.L3428	# delay slot filled
	l.lbs   	r5,0(r13)	 # extendqisi2_no_sext_mem
.L3445:
	l.addi  	r15,r0,0	 # move immediate I
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L3431	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.LFE133:
	.size	sqlite3Atoi64, .-sqlite3Atoi64
	.align	4
.proc	sqlite3MemRealloc
	.type	sqlite3MemRealloc, @function
sqlite3MemRealloc:
.LFB61:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1247:
	l.addi  	r2,r4,7
	l.addi  	r4,r0,-8	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI1248:
	l.and   	r2,r2,r4
	l.addi  	r1,r1,-8
.LCFI1249:
	l.addi  	r3,r3,-8
	l.jal   	realloc	# delay slot filled
	l.addi  	r4,r2,8
	l.sfeqi	r11,0
	l.bf	.L3466	# delay slot filled
	l.srai  	r3,r2,31
	l.sw    	4(r11),r2	 # SI store
	l.sw    	0(r11),r3	 # SI store
	l.addi  	r11,r11,8
.L3466:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE61:
	.size	sqlite3MemRealloc, .-sqlite3MemRealloc
	.section	.rodata
	.align	4
.LC70:
	.long	0
	.long	0
	.align	4
.LC71:
	.long	1071644672
	.long	0
	.section .text
	.align	4
.proc	localtimeOffset
	.type	localtimeOffset, @function
localtimeOffset:
.LFB19:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1250:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1251:
	l.addi  	r1,r1,-100
.LCFI1252:
	l.lwz   	r19,0(r3)	 # SI load
	l.addi  	r2,r1,44
	l.lwz   	r17,4(r3)	 # SI load
	l.lwz   	r15,8(r3)	 # SI load
	l.lwz   	r13,12(r3)	 # SI load
	l.lwz   	r12,16(r3)	 # SI load
	l.lwz   	r11,20(r3)	 # SI load
	l.lwz   	r8,24(r3)	 # SI load
	l.lwz   	r7,28(r3)	 # SI load
	l.lwz   	r6,32(r3)	 # SI load
	l.lwz   	r5,36(r3)	 # SI load
	l.lwz   	r4,40(r3)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	44(r1),r19	 # SI store
	l.sw    	48(r1),r17	 # SI store
	l.sw    	52(r1),r15	 # SI store
	l.sw    	56(r1),r13	 # SI store
	l.sw    	60(r1),r12	 # SI store
	l.sw    	64(r1),r11	 # SI store
	l.sw    	68(r1),r8	 # SI store
	l.sw    	72(r1),r7	 # SI store
	l.sw    	76(r1),r6	 # SI store
	l.sw    	80(r1),r5	 # SI store
	l.jal   	computeYMD_HMS	# delay slot filled
	l.sw    	84(r1),r4	 # SI store
	l.lwz   	r3,52(r1)	 # SI load
	l.addi  	r3,r3,-1971
	l.sfleui	r3,66
	l.bnf	.L3471	# delay slot filled
	l.movhi  	r5,hi(.LC71)
		l.lwz   	r3, 76(r1)
		l.lwz   	r4, 76+4(r1)
	l.ori   	r5,r5,lo(.LC71)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__adddf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
		l.sw    	76(r1), r11
		l.sw    	76+4(r1), r12
	l.ori   	r3,r2,0	 # move reg to reg
.L3472:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sw    	72(r1),r5	 # SI store
	l.jal   	computeJD	# delay slot filled
	l.sb    	86(r1),r2	    # movqi
	l.addi  	r5,r0,0	 # move immediate I
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
	l.jal   	__divdi3	# delay slot filled
	l.addi  	r6,r0,1000	 # move immediate I
	l.movhi 	r4,hi(-413401088)	 # move immediate M
	l.addi  	r3,r1,88
	l.ori   	r4,r4,38592
	l.add   	r12,r12,r4
	l.jal   	localtime	# delay slot filled
	l.sw    	88(r1),r12	 # SI store
	l.lwz   	r2,16(r11)	 # SI load
	l.lwz   	r4,20(r11)	 # SI load
	l.lwz   	r5,4(r11)	 # SI load
	l.lwz   	r3,0(r11)	 # SI load
	l.lwz   	r6,8(r11)	 # SI load
	l.lwz   	r7,12(r11)	 # SI load
	l.addi  	r4,r4,1900
	l.addi  	r2,r2,1
	l.sw    	8(r1),r4	 # SI store
	l.sw    	12(r1),r2	 # SI store
	l.sw    	16(r1),r7	 # SI store
	l.sw    	20(r1),r6	 # SI store
	l.jal   	__floatsidf	# delay slot filled
	l.sw    	24(r1),r5	 # SI store
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.ori   	r3,r1,0	 # move reg to reg
		l.sw    	32(r1), r11
		l.sw    	32+4(r1), r12
	l.sb    	42(r1),r2	    # movqi
	l.sb    	43(r1),r2	    # movqi
	l.sb    	40(r1),r5	    # movqi
	l.jal   	computeJD	# delay slot filled
	l.sb    	41(r1),r5	    # movqi
	l.lwz   	r4,4(r1)	 # SI load
	l.lwz   	r12,48(r1)	 # SI load
	l.lwz   	r11,0(r1)	 # SI load
	l.sub   	r12,r4,r12
	l.lwz   	r3,44(r1)	 # SI load
	l.sfgtu 	r12,r4
	l.bf	.L3470	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r2,r0,0	 # move immediate I
.L3470:
	l.addi	r1,r1,100
	l.sub   	r11,r11,r3
	l.lwz   	r9,-4(r1)	 # SI load
	l.sub   	r11,r11,r2
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L3471:
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r4,r0,2000	 # move immediate I
	l.sw    	56(r1),r3	 # SI store
	l.sw    	60(r1),r3	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	52(r1),r4	 # SI store
	l.sw    	64(r1),r3	 # SI store
	l.sw    	68(r1),r3	 # SI store
	l.movhi  	r3,hi(.LC70)
	l.ori   	r3,r3,lo(.LC70)
		l.lwz   	r4, 0(r3)
		l.lwz   	r5, 4(r3)
		l.sw    	76(r1), r4
		l.sw    	76+4(r1), r5
	l.j     	.L3472	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.LFE19:
	.size	localtimeOffset, .-localtimeOffset
	.align	4
.proc	getSafetyLevel
	.type	getSafetyLevel, @function
getSafetyLevel:
.LFB999:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1253:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1254:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1255:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1256:
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.lbs   	r14,0(r3)	 # extendqisi2_no_sext_mem
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.andi  	r2,r14,0xff	 # zero_extendqisi2
	l.addi  	r1,r1,-16
.LCFI1257:
	l.add   	r2,r2,r4
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,4
	l.sfnei	r2,0
	l.bf	.L3474	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfnei	r14,0
	l.bnf	.L3476	# delay slot filled
	l.ori   	r5,r3,0	 # move reg to reg
	l.addi  	r5,r5,1
.L3485:
	l.lbs   	r2,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L3485	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r16
	l.ori   	r6,r6,65535
	l.and   	r14,r5,r6
.L3476:
	l.j     	.L3480	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L3479:
	l.addi  	r2,r2,1
.L3486:
	l.sfnei	r2,7
	l.bnf	.L3484	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L3480:
	l.movhi  	r3,hi(iLength.17985)
	l.ori   	r3,r3,lo(iLength.17985)
	l.add   	r5,r2,r3
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.sfne 	r5,r14
	l.bf	.L3479	# delay slot filled
	l.movhi  	r4,hi(iOffset.17984)
	l.movhi  	r6,hi(zText.17983)
	l.ori   	r4,r4,lo(iOffset.17984)
	l.ori   	r6,r6,lo(zText.17983)
	l.add   	r3,r2,r4
	l.ori   	r5,r14,0	 # move reg to reg
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.add   	r3,r3,r6
	l.sfnei	r11,0
	l.bf	.L3486	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi  	r3,hi(iValue.17986)
	l.ori   	r3,r3,lo(iValue.17986)
	l.add   	r2,r2,r3
	l.lbz   	r11,0(r2)	 # zero_extendqisi2
.L3484:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3474:
	l.jal   	atoi
	l.nop			# nop delay slot
	l.addi	r1,r1,16
	l.andi  	r11,r11,0xff	 # zero_extendqisi2
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE999:
	.size	getSafetyLevel, .-getSafetyLevel
	.align	4
.proc	dotlockCheckReservedLock
	.type	dotlockCheckReservedLock, @function
dotlockCheckReservedLock:
.LFB172:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1258:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1259:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbz   	r5,20(r3)	 # zero_extendqisi2
	l.addi  	r4,r0,1	 # move immediate I
	l.sfgtu 	r5,r4
.LCFI1260:
	l.bnf	.L3490	# delay slot filled
	l.addi  	r1,r1,-8
	l.sw    	0(r2),r4	 # SI store
	l.addi	r1,r1,8
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L3490:
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	access	# delay slot filled
	l.lwz   	r3,28(r3)	 # SI load
	l.sub   	r4,r0,r11
	l.or    	r11,r4,r11
	l.xori  	r4,r11,0xffff
	l.addi  	r11,r0,0	 # move immediate I
	l.srli  	r4,r4,31
	l.sw    	0(r2),r4	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE172:
	.size	dotlockCheckReservedLock, .-dotlockCheckReservedLock
	.align	4
.proc	unixAccess
	.type	unixAccess, @function
unixAccess:
.LFB195:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1261:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1262:
	l.ori   	r3,r4,0	 # move reg to reg
	l.addi  	r1,r1,-8
.LCFI1263:
	l.ori   	r2,r6,0	 # move reg to reg
	l.sfgtui	r5,2
	l.bf	.L3492	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.movhi  	r4,hi(CSWTCH.1864)
	l.slli  	r5,r5,2
	l.ori   	r4,r4,lo(CSWTCH.1864)
	l.add   	r5,r5,r4
	l.lwz   	r4,0(r5)	 # SI load
.L3492:
	l.jal   	access
	l.nop			# nop delay slot
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.addi  	r11,r0,0	 # move immediate I
	l.xori  	r3,r3,0xffff
	l.srli  	r3,r3,31
	l.sw    	0(r2),r3	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE195:
	.size	unixAccess, .-unixAccess
	.align	4
.proc	dotlockUnlock
	.type	dotlockUnlock, @function
dotlockUnlock:
.LFB174:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1264:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1265:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1266:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1267:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r5,20(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-16
.LCFI1268:
	l.lwz   	r3,28(r3)	 # SI load
	l.sfeq 	r5,r4
	l.bf	.L3495	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.sfnei	r4,1
	l.bnf	.L3500	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
	l.jal   	unlink
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bf	.L3497	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r16,0(r11)	 # SI load
	l.sfeqi	r16,2
	l.bf	.L3498	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqliteErrorFromPosixError	# delay slot filled
	l.addi  	r4,r0,2058	 # move immediate I
	l.ori   	r14,r11,0	 # move reg to reg
.L3498:
	l.xori  	r3,r14,5
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L3495	# delay slot filled
	l.sub   	r3,r0,r14
	l.or    	r3,r3,r14
	l.sfgesi	r3,0
	l.bf	.L3495
	l.nop			# nop delay slot
	l.sw    	24(r2),r16	 # SI store
.L3495:
	l.addi	r1,r1,16
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3500:
	l.sb    	20(r2),r4	    # movqi
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3497:
	l.sb    	20(r2),r14	    # movqi
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE174:
	.size	dotlockUnlock, .-dotlockUnlock
	.align	4
.proc	dotlockLock
	.type	dotlockLock, @function
dotlockLock:
.LFB173:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1269:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1270:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1271:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r5,20(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-16
.LCFI1272:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bnf	.L3508	# delay slot filled
	l.lwz   	r3,28(r3)	 # SI load
	l.addi  	r5,r0,384	 # move immediate I
	l.addi  	r4,r0,192	 # move immediate I
	l.jal   	open64	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.sfgesi	r11,0
	l.bnf	.L3509
	l.nop			# nop delay slot
	l.jal   	close	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L3510
	l.nop			# nop delay slot
.L3505:
	l.sb    	20(r2),r14	    # movqi
.L3503:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3509:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r14,0(r11)	 # SI load
	l.sfeqi	r14,17
	l.bf	.L3503	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqliteErrorFromPosixError	# delay slot filled
	l.addi  	r4,r0,3850	 # move immediate I
	l.xori  	r3,r11,5
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L3503
	l.nop			# nop delay slot
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfgesi	r3,0
	l.bf	.L3503
	l.nop			# nop delay slot
	l.sw    	24(r2),r14	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3508:
	l.sb    	20(r2),r4	    # movqi
	l.jal   	utimes	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi	r1,r1,16
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3510:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r3,0(r11)	 # SI load
	l.addi  	r11,r0,4106	 # move immediate I
	l.j     	.L3505	# delay slot filled
	l.sw    	24(r2),r3	 # SI store
.LFE173:
	.size	dotlockLock, .-dotlockLock
	.align	4
.proc	closeUnixFile
	.type	closeUnixFile, @function
closeUnixFile:
.LFB166:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1273:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1274:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1275:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI1276:
	l.sfeqi	r3,0
	l.bf	.L3512	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r3,16(r3)	 # SI load
	l.sfltsi	r3,0
	l.bf	.L3513
	l.nop			# nop delay slot
	l.jal   	close
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bf	.L3514
	l.nop			# nop delay slot
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r3,0(r11)	 # SI load
	l.sw    	24(r2),r3	 # SI store
	l.addi  	r2,r0,4362	 # move immediate I
.L3512:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3514:
	l.addi  	r2,r0,-1	 # move immediate I
	l.sw    	16(r14),r2	 # SI store
.L3513:
	l.lwz   	r3,12(r14)	 # SI load
	l.sfltsi	r3,0
	l.bf	.L3517	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.jal   	close
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bf	.L3515
	l.nop			# nop delay slot
	l.jal   	__errno_location	# delay slot filled
	l.addi  	r2,r0,4106	 # move immediate I
	l.lwz   	r3,0(r11)	 # SI load
	l.sw    	24(r14),r3	 # SI store
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3515:
.L3517:
	l.sw    	0(r14),r2	 # SI store
	l.sw    	4(r14),r2	 # SI store
	l.sw    	8(r14),r2	 # SI store
	l.sw    	12(r14),r2	 # SI store
	l.sw    	16(r14),r2	 # SI store
	l.sw    	20(r14),r2	 # SI store
	l.sw    	24(r14),r2	 # SI store
	l.sw    	28(r14),r2	 # SI store
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE166:
	.size	closeUnixFile, .-closeUnixFile
	.align	4
.proc	dotlockClose
	.type	dotlockClose, @function
dotlockClose:
.LFB175:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1277:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1278:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI1279:
	l.bf	.L3519	# delay slot filled
	l.addi  	r1,r1,-8
	l.jal   	dotlockUnlock	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,28(r2)	 # SI load
.L3519:
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	closeUnixFile	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE175:
	.size	dotlockClose, .-dotlockClose
	.align	4
.proc	nolockClose
	.type	nolockClose, @function
nolockClose:
.LFB171:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1280:
	l.addi  	r1,r1,-4
.LCFI1281:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	closeUnixFile
	l.nop			# nop delay slot	# sibcall s
.LFE171:
	.size	nolockClose, .-nolockClose
	.align	4
.proc	unixFileSize
	.type	unixFileSize, @function
unixFileSize:
.LFB183:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1282:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1283:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1284:
	l.addi  	r1,r1,-108
.LCFI1285:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r3,12(r3)	 # SI load
	l.jal   	fstat64	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L3522	# delay slot filled
	l.lwz   	r11,44(r1)	 # SI load
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r2,0(r11)	 # SI load
	l.addi  	r11,r0,1802	 # move immediate I
	l.sw    	24(r14),r2	 # SI store
	l.addi	r1,r1,108
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3522:
	l.lwz   	r3,48(r1)	 # SI load
	l.sw    	0(r2),r11	 # SI store
	l.sfnei	r11,0
	l.bnf	.L3525	# delay slot filled
	l.sw    	4(r2),r3	 # SI store
.L3524:
	l.addi	r1,r1,108
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3525:
	l.sfnei	r3,1
	l.bf	.L3524	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
		l.sw    	0(r2), r3
		l.sw    	4(r2), r4
	l.addi	r1,r1,108
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE183:
	.size	unixFileSize, .-unixFileSize
	.align	4
.proc	unixSync
	.type	unixSync, @function
unixSync:
.LFB181:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1286:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1287:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1288:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI1289:
	l.jal   	fdatasync	# delay slot filled
	l.lwz   	r3,12(r3)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L3527	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	__errno_location	# delay slot filled
	l.addi  	r2,r0,1034	 # move immediate I
	l.lwz   	r3,0(r11)	 # SI load
	l.sw    	24(r14),r3	 # SI store
.L3528:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3527:
	l.lwz   	r3,16(r14)	 # SI load
	l.sfltsi	r3,0
	l.bf	.L3528
	l.nop			# nop delay slot
	l.jal   	fdatasync
	l.nop			# nop delay slot
	l.jal   	close	# delay slot filled
	l.lwz   	r3,16(r14)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3529	# delay slot filled
	l.addi  	r3,r0,-1	 # move immediate I
	l.j     	.L3528	# delay slot filled
	l.sw    	16(r14),r3	 # SI store
.L3529:
	l.jal   	__errno_location	# delay slot filled
	l.addi  	r2,r0,4362	 # move immediate I
	l.lwz   	r3,0(r11)	 # SI load
	l.j     	.L3528	# delay slot filled
	l.sw    	24(r14),r3	 # SI store
.LFE181:
	.size	unixSync, .-unixSync
	.align	4
.proc	unixTruncate
	.type	unixTruncate, @function
unixTruncate:
.LFB182:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1290:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1291:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-8
.LCFI1292:
	l.jal   	ftruncate64	# delay slot filled
	l.lwz   	r3,12(r3)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L3531
	l.nop			# nop delay slot
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r3,0(r11)	 # SI load
	l.addi  	r11,r0,1546	 # move immediate I
	l.sw    	24(r2),r3	 # SI store
.L3531:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE182:
	.size	unixTruncate, .-unixTruncate
	.align	4
.proc	unixWrite
	.type	unixWrite, @function
unixWrite:
.LFB179:
	l.sw    	-24(r1),r2	 # SI store
.LCFI1293:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1294:
	l.sw    	-16(r1),r16	 # SI store
.LCFI1295:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1296:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1297:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1298:
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r1,r1,-24
.LCFI1299:
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r2,r6,0	 # move reg to reg
	l.sfles 	r5,r11
	l.bf	.L3534	# delay slot filled
	l.ori   	r14,r7,0	 # move reg to reg
.L3545:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r3,12(r16)	 # SI load
	l.jal   	lseek64	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfne 	r2,r11
	l.bnf	.L3548	# delay slot filled
	l.sfne 	r14,r12
	l.sfnei	r11,-1
.L3552:
	l.bnf	.L3549	# delay slot filled
	l.sfnei	r12,-1
	l.addi  	r2,r0,0	 # move immediate I
.L3551:
	l.addi  	r11,r0,778	 # move immediate I
	l.sw    	24(r16),r2	 # SI store
.L3534:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3549:
	l.bf	.L3551	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L3547:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r2,0(r11)	 # SI load
	l.addi  	r11,r0,778	 # move immediate I
	l.sw    	24(r16),r2	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3548:
	l.bf	.L3552	# delay slot filled
	l.sfnei	r11,-1
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	write	# delay slot filled
	l.lwz   	r3,12(r16)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.sub   	r18,r18,r11
	l.add   	r3,r14,r11
	l.sfgesi	r11,0
	l.bnf	.L3547	# delay slot filled
	l.add   	r20,r20,r11
	l.sfnei	r11,0
	l.bnf	.L3550	# delay slot filled
	l.sflesi	r18,0
	l.bf	.L3543	# delay slot filled
	l.sfltu 	r3,r14
	l.srai  	r11,r11,31
	l.ori   	r14,r3,0	 # move reg to reg
	l.bf	.L3536	# delay slot filled
	l.add   	r2,r2,r11
	l.addi  	r5,r0,0	 # move immediate I
.L3536:
	l.j     	.L3545	# delay slot filled
	l.add   	r2,r5,r2
.L3543:
	l.j     	.L3534	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L3550:
	l.sw    	24(r16),r11	 # SI store
	l.j     	.L3534	# delay slot filled
	l.addi  	r11,r0,13	 # move immediate I
.LFE179:
	.size	unixWrite, .-unixWrite
	.align	4
.proc	unixRead
	.type	unixRead, @function
unixRead:
.LFB177:
	l.sw    	-28(r1),r2	 # SI store
.LCFI1300:
	l.sw    	-24(r1),r14	 # SI store
.LCFI1301:
	l.sw    	-20(r1),r16	 # SI store
.LCFI1302:
	l.sw    	-16(r1),r18	 # SI store
.LCFI1303:
	l.sw    	-12(r1),r20	 # SI store
.LCFI1304:
	l.sw    	-8(r1),r22	 # SI store
.LCFI1305:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1306:
	l.ori   	r18,r6,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI1307:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.ori   	r4,r6,0	 # move reg to reg
	l.lwz   	r3,12(r3)	 # SI load
	l.ori   	r5,r7,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	lseek64	# delay slot filled
	l.ori   	r20,r7,0	 # move reg to reg
	l.sfne 	r18,r11
	l.bnf	.L3564	# delay slot filled
	l.ori   	r2,r12,0	 # move reg to reg
	l.sfnei	r11,-1
.L3566:
	l.bnf	.L3565	# delay slot filled
	l.sfnei	r2,-1
.L3556:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	24(r14),r2	 # SI store
	l.addi  	r2,r0,-1	 # move immediate I
.L3557:
	l.sfeq 	r16,r2
	l.bf	.L3558	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.sfltsi	r2,0
	l.bf	.L3558	# delay slot filled
	l.addi  	r11,r0,266	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	24(r14),r3	 # SI store
	l.sub   	r5,r16,r2
	l.jal   	memset	# delay slot filled
	l.add   	r3,r22,r2
	l.addi  	r11,r0,522	 # move immediate I
.L3558:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L3565:
	l.bf	.L3556
	l.nop			# nop delay slot
.L3563:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r3,0(r11)	 # SI load
	l.j     	.L3557	# delay slot filled
	l.sw    	24(r14),r3	 # SI store
.L3564:
	l.sfne 	r20,r12
	l.bf	.L3566	# delay slot filled
	l.sfnei	r11,-1
	l.lwz   	r3,12(r14)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	read	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.sfgesi	r11,0
	l.bf	.L3557	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L3563
	l.nop			# nop delay slot
.LFE177:
	.size	unixRead, .-unixRead
	.align	4
.proc	unixCheckReservedLock
	.type	unixCheckReservedLock, @function
unixCheckReservedLock:
.LFB163:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1308:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,8(r3)	 # SI load
	l.sw    	-12(r1),r14	 # SI store
.LCFI1309:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1310:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1311:
	l.lwz   	r3,20(r3)	 # SI load
	l.addi  	r1,r1,-44
.LCFI1312:
	l.sfgtsi	r3,1
	l.bnf	.L3572	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
.L3571:
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r11,r0,0	 # move immediate I
.L3568:
	l.sw    	0(r14),r2	 # SI store
	l.addi	r1,r1,44
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3572:
	l.movhi  	r4,hi(sqlite3PendingByte)
	l.lwz   	r3,12(r2)	 # SI load
	l.ori   	r4,r4,lo(sqlite3PendingByte)
	l.addi  	r7,r0,0	 # movhi: move immediate
	l.lwz   	r5,0(r4)	 # SI load
	l.addi  	r4,r0,12	 # move immediate I
	l.addi  	r5,r5,1
	l.sh    	6(r1),r7	 # movhi
	l.srai  	r6,r5,31
	l.sw    	12(r1),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	8(r1),r6	 # SI store
	l.addi  	r6,r0,1	 # move immediate I
		l.sw    	16(r1), r5
		l.sw    	16+4(r1), r6
	l.addi  	r6,r0,1	 # movhi: move immediate
	l.addi  	r5,r1,4
	l.sh    	4(r1),r6	 # movhi
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.sfnei	r11,-1
	l.bnf	.L3573
	l.nop			# nop delay slot
	l.lhs   	r2,4(r1)	 # extendhisi2_no_sext_mem
	l.sfnei	r2,2
	l.bf	.L3571	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L3568	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
.L3573:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r16,0(r11)	 # SI load
	l.addi  	r4,r0,3594	 # move immediate I
	l.jal   	sqliteErrorFromPosixError	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	24(r2),r16	 # SI store
	l.j     	.L3568	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.LFE163:
	.size	unixCheckReservedLock, .-unixCheckReservedLock
	.align	4
.proc	unixUnlock
	.type	unixUnlock, @function
unixUnlock:
.LFB165:
	l.sw    	-36(r1),r2	 # SI store
.LCFI1313:
	l.sw    	-32(r1),r14	 # SI store
.LCFI1314:
	l.sw    	-24(r1),r18	 # SI store
.LCFI1315:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1316:
	l.sw    	-28(r1),r16	 # SI store
.LCFI1317:
	l.sw    	-20(r1),r20	 # SI store
.LCFI1318:
	l.sw    	-16(r1),r22	 # SI store
.LCFI1319:
	l.sw    	-12(r1),r24	 # SI store
.LCFI1320:
	l.sw    	-8(r1),r26	 # SI store
.LCFI1321:
	l.ori   	r18,r4,0	 # move reg to reg
	l.lbz   	r4,20(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-64
.LCFI1322:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfles 	r4,r18
	l.bf	.L3575	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r22,12(r3)	 # SI load
	l.sfleui	r4,1
	l.bf	.L3576	# delay slot filled
	l.lwz   	r16,8(r3)	 # SI load
	l.sfnei	r18,1
	l.bnf	.L3595	# delay slot filled
	l.movhi  	r20,hi(sqlite3PendingByte)
	l.addi  	r24,r1,4
	l.ori   	r20,r20,lo(sqlite3PendingByte)
.L3577:
	l.lwz   	r5,0(r20)	 # SI load
	l.addi  	r6,r0,2	 # movhi: move immediate
	l.srai  	r2,r5,31
	l.sh    	4(r1),r6	 # movhi
	l.addi  	r7,r0,0	 # movhi: move immediate
	l.sw    	12(r1),r5	 # SI store
	l.addi  	r6,r0,2	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,13	 # move immediate I
	l.sh    	6(r1),r7	 # movhi
	l.sw    	8(r1),r2	 # SI store
		l.sw    	16(r1), r5
		l.sw    	16+4(r1), r6
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r24	 # SI store
	l.sfeqi	r11,-1
	l.bf	.L3580	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sw    	20(r16),r2	 # SI store
.L3576:
	l.sfnei	r18,0
	l.bf	.L3581	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
	l.lwz   	r3,16(r16)	 # SI load
	l.addi  	r3,r3,-1
	l.sfnei	r3,0
	l.bnf	.L3601	# delay slot filled
	l.sw    	16(r16),r3	 # SI store
.L3582:
	l.lwz   	r16,4(r14)	 # SI load
	l.addi  	r24,r0,0	 # move immediate I
	l.lwz   	r3,20(r16)	 # SI load
	l.addi  	r3,r3,-1
	l.sfne 	r3,r24
	l.bf	.L3585	# delay slot filled
	l.sw    	20(r16),r3	 # SI store
	l.lwz   	r5,24(r16)	 # SI load
	l.sfles 	r5,r24
	l.bf	.L3585	# delay slot filled
	l.ori   	r20,r24,0	 # move reg to reg
	l.ori   	r22,r24,0	 # move reg to reg
	l.j     	.L3588	# delay slot filled
	l.addi  	r26,r0,-1	 # move immediate I
.L3603:
	l.jal   	__errno_location	# delay slot filled
	l.addi  	r24,r0,4106	 # move immediate I
	l.lwz   	r3,0(r11)	 # SI load
	l.sw    	24(r14),r3	 # SI store
	l.lwz   	r5,24(r16)	 # SI load
.L3586:
	l.addi  	r22,r22,1
	l.sfgts 	r5,r22
	l.bnf	.L3602	# delay slot filled
	l.addi  	r20,r20,4
.L3588:
	l.lwz   	r3,28(r16)	 # SI load
	l.add   	r3,r3,r20
	l.lwz   	r4,0(r3)	 # SI load
	l.sfltsi	r4,0
	l.bf	.L3586	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	close
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bnf	.L3603
	l.nop			# nop delay slot
	l.lwz   	r3,28(r16)	 # SI load
	l.add   	r3,r3,r20
	l.sw    	0(r3),r26	 # SI store
	l.j     	.L3586	# delay slot filled
	l.lwz   	r5,24(r16)	 # SI load
.L3602:
	l.sfnei	r24,0
	l.bf	.L3604	# delay slot filled
	l.sfnei	r2,0
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,28(r16)	 # SI load
	l.sw    	24(r16),r24	 # SI store
	l.sw    	28(r16),r24	 # SI store
.L3585:
	l.sfnei	r2,0
.L3604:
	l.bf	.L3575
	l.nop			# nop delay slot
	l.ori   	r2,r24,0	 # move reg to reg
.L3578:
	l.sfnei	r2,0
.L3605:
	l.bf	.L3575
	l.nop			# nop delay slot
.L3581:
	l.sb    	20(r14),r18	    # movqi
	l.addi  	r2,r0,0	 # move immediate I
.L3575:
	l.addi	r1,r1,64
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L3601:
	l.addi  	r6,r0,2	 # movhi: move immediate
	l.addi  	r5,r0,0	 # move immediate I
	l.sh    	4(r1),r6	 # movhi
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r4,r0,13	 # move immediate I
	l.addi  	r2,r1,4
	l.sh    	6(r1),r18	 # movhi
		l.sw    	16(r1), r5
		l.sw    	16+4(r1), r6
		l.sw    	8(r1), r5
		l.sw    	8+4(r1), r6
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.sfeqi	r11,-1
	l.bf	.L3583	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
	l.j     	.L3582	# delay slot filled
	l.sw    	20(r16),r18	 # SI store
.L3595:
	l.addi  	r24,r1,4
	l.ori   	r20,r20,lo(sqlite3PendingByte)
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r5,0(r20)	 # SI load
	l.addi  	r4,r0,13	 # move immediate I
	l.addi  	r5,r5,2
	l.sh    	4(r1),r2	 # movhi
	l.srai  	r6,r5,31
	l.sw    	12(r1),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	8(r1),r6	 # SI store
	l.addi  	r6,r0,510	 # move immediate I
	l.sh    	6(r1),r2	 # movhi
		l.sw    	16(r1), r5
		l.sw    	16+4(r1), r6
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r24	 # SI store
	l.sfnei	r11,-1
	l.bf	.L3577
	l.nop			# nop delay slot
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.addi  	r4,r0,2314	 # move immediate I
	l.j     	.L3600	# delay slot filled
	l.lwz   	r16,0(r11)	 # SI load
.L3580:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.addi  	r4,r0,2058	 # move immediate I
	l.lwz   	r16,0(r11)	 # SI load
.L3600:
	l.jal   	sqliteErrorFromPosixError	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.xori  	r4,r11,5
	l.sub   	r3,r0,r4
	l.or    	r4,r3,r4
	l.sfgesi	r4,0
	l.bf	.L3578	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfgesi	r3,0
	l.bf	.L3605	# delay slot filled
	l.sfnei	r2,0
	l.j     	.L3575	# delay slot filled
	l.sw    	24(r14),r16	 # SI store
.L3583:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r20,0(r11)	 # SI load
	l.addi  	r4,r0,2058	 # move immediate I
	l.jal   	sqliteErrorFromPosixError	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.xori  	r4,r11,5
	l.sub   	r3,r0,r4
	l.or    	r4,r3,r4
	l.sfgesi	r4,0
	l.bf	.L3584	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfgesi	r3,0
	l.bf	.L3606	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	24(r14),r20	 # SI store
.L3584:
	l.addi  	r6,r0,0	 # move immediate I
.L3606:
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.sw    	20(r16),r6	 # SI store
	l.j     	.L3582	# delay slot filled
	l.sb    	20(r14),r7	    # movqi
.LFE165:
	.size	unixUnlock, .-unixUnlock
	.align	4
.proc	unixLock
	.type	unixLock, @function
unixLock:
.LFB164:
	l.sw    	-32(r1),r2	 # SI store
.LCFI1323:
	l.sw    	-28(r1),r14	 # SI store
.LCFI1324:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1325:
	l.sw    	-24(r1),r16	 # SI store
.LCFI1326:
	l.sw    	-20(r1),r18	 # SI store
.LCFI1327:
	l.sw    	-16(r1),r20	 # SI store
.LCFI1328:
	l.sw    	-12(r1),r22	 # SI store
.LCFI1329:
	l.sw    	-8(r1),r24	 # SI store
.LCFI1330:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,20(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-60
.LCFI1331:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfges 	r3,r4
	l.bf	.L3608	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r16,8(r2)	 # SI load
	l.lwz   	r4,20(r16)	 # SI load
	l.sfeq 	r3,r4
	l.bf	.L3609	# delay slot filled
	l.sfgtsi	r14,1
	l.bnf	.L3644	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
.L3610:
	l.andi  	r5,r5,0xff	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L3633	# delay slot filled
	l.sfgtsi	r4,2
	l.bnf	.L3645	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L3633
	l.nop			# nop delay slot
.L3609:
	l.sfnei	r14,1
.L3652:
	l.bnf	.L3646	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # movhi: move immediate
	l.addi  	r6,r0,1	 # move immediate I
	l.sh    	6(r1),r4	 # movhi
		l.sw    	16(r1), r5
		l.sw    	16+4(r1), r6
	l.sfnei	r14,4
	l.bnf	.L3637	# delay slot filled
	l.addi  	r18,r1,4
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.sfeqi	r14,2
.L3660:
	l.bf	.L3627	# delay slot filled
	l.sh    	4(r1),r3	 # movhi
	l.sfeqi	r14,4
	l.bf	.L3655	# delay slot filled
	l.movhi  	r3,hi(sqlite3PendingByte)
.L3626:
	l.lwz   	r3,12(r2)	 # SI load
	l.addi  	r4,r0,13	 # move immediate I
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.sfnei	r11,-1
	l.bnf	.L3647
	l.nop			# nop delay slot
.L3631:
	l.sb    	20(r2),r14	    # movqi
.L3653:
	l.sw    	20(r16),r14	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
.L3608:
	l.addi	r1,r1,60
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L3633:
	l.j     	.L3608	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
.L3645:
	l.ori   	r6,r5,0	  # movqi: move reg to reg
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L3633	# delay slot filled
	l.sfnei	r14,1
	l.j     	.L3652
	l.nop			# nop delay slot
.L3627:
	l.movhi  	r3,hi(sqlite3PendingByte)
	l.ori   	r3,r3,lo(sqlite3PendingByte)
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r3,r3,1
	l.srai  	r4,r3,31
	l.sw    	12(r1),r3	 # SI store
	l.j     	.L3626	# delay slot filled
	l.sw    	8(r1),r4	 # SI store
.L3646:
	l.addi  	r4,r4,-1
	l.sfgtui	r4,1
	l.bnf	.L3648	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
		l.sw    	16(r1), r5
		l.sw    	16+4(r1), r6
	l.addi  	r6,r0,0	 # movhi: move immediate
	l.sh    	6(r1),r6	 # movhi
	l.xori  	r3,r14,1
.L3657:
	l.movhi  	r20,hi(sqlite3PendingByte)
	l.sub   	r7,r0,r3
	l.ori   	r20,r20,lo(sqlite3PendingByte)
	l.or    	r7,r7,r3
	l.lwz   	r6,0(r20)	 # SI load
	l.srli  	r7,r7,31
	l.srai  	r5,r6,31
	l.lwz   	r3,12(r2)	 # SI load
	l.addi  	r18,r1,4
	l.addi  	r4,r0,13	 # move immediate I
	l.sh    	4(r1),r7	 # movhi
	l.sw    	12(r1),r6	 # SI store
	l.sw    	8(r1),r5	 # SI store
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.sfnei	r11,-1
	l.bnf	.L3649	# delay slot filled
	l.sfnei	r14,1
	l.bf	.L3617	# delay slot filled
	l.addi  	r4,r0,13	 # move immediate I
	l.lwz   	r5,0(r20)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.addi  	r5,r5,2
	l.srai  	r6,r5,31
	l.sw    	12(r1),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	8(r1),r6	 # SI store
	l.addi  	r6,r0,510	 # move immediate I
	l.sw    	0(r1),r18	 # SI store
		l.sw    	16(r1), r5
		l.sw    	16+4(r1), r6
	l.jal   	fcntl64	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
	l.sfnei	r11,-1
	l.bnf	.L3650	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
.L3618:
	l.lwz   	r6,0(r20)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.srai  	r5,r6,31
	l.sw    	12(r1),r6	 # SI store
	l.addi  	r6,r0,1	 # move immediate I
	l.sw    	8(r1),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,13	 # move immediate I
		l.sw    	16(r1), r5
		l.sw    	16+4(r1), r6
	l.addi  	r6,r0,2	 # movhi: move immediate
	l.sw    	0(r1),r18	 # SI store
	l.jal   	fcntl64	# delay slot filled
	l.sh    	4(r1),r6	 # movhi
	l.sfeqi	r11,0
	l.bf	.L3619	# delay slot filled
	l.sfnei	r22,-1
	l.sfeqi	r22,-1
	l.bf	.L3656	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.addi  	r4,r0,2058	 # move immediate I
	l.lwz   	r14,0(r11)	 # SI load
.L3643:
	l.jal   	sqliteErrorFromPosixError	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.xori  	r4,r11,5
	l.sub   	r3,r0,r4
	l.or    	r4,r3,r4
	l.sfgesi	r4,0
	l.bf	.L3608	# delay slot filled
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfgesi	r3,0
	l.bf	.L3608
	l.nop			# nop delay slot
	l.j     	.L3608	# delay slot filled
	l.sw    	24(r2),r14	 # SI store
.L3644:
	l.j     	.L3610	# delay slot filled
	l.ori   	r5,r11,0	  # movqi: move reg to reg
.L3637:
	l.sfgtui	r3,2
	l.bnf	.L3657	# delay slot filled
	l.xori  	r3,r14,1
.L3615:
	l.lwz   	r3,16(r16)	 # SI load
	l.sfgtsi	r3,1
	l.bnf	.L3651	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
.L3629:
	l.sfnei	r14,4
.L3659:
	l.bf	.L3608	# delay slot filled
	l.addi  	r3,r0,3	 # move immediate I
	l.sb    	20(r2),r3	    # movqi
	l.j     	.L3608	# delay slot filled
	l.sw    	20(r16),r3	 # SI store
.L3651:
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.addi  	r18,r1,4
	l.sh    	4(r1),r3	 # movhi
	l.movhi  	r3,hi(sqlite3PendingByte)
.L3655:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r3,lo(sqlite3PendingByte)
	l.addi  	r5,r0,510	 # move immediate I
	l.lwz   	r3,0(r3)	 # SI load
		l.sw    	16(r1), r4
		l.sw    	16+4(r1), r5
	l.addi  	r3,r3,2
	l.srai  	r4,r3,31
	l.sw    	12(r1),r3	 # SI store
	l.j     	.L3626	# delay slot filled
	l.sw    	8(r1),r4	 # SI store
.L3647:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r18,0(r11)	 # SI load
	l.addi  	r4,r0,3850	 # move immediate I
	l.jal   	sqliteErrorFromPosixError	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.xori  	r4,r11,5
	l.sub   	r3,r0,r4
	l.or    	r4,r3,r4
	l.sfgesi	r4,0
	l.bf	.L3658	# delay slot filled
	l.sfnei	r11,0
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfgesi	r3,0
	l.bf	.L3658	# delay slot filled
	l.sfnei	r11,0
	l.j     	.L3629	# delay slot filled
	l.sw    	24(r2),r18	 # SI store
.L3622:
.L3658:
	l.bf	.L3659	# delay slot filled
	l.sfnei	r14,4
	l.j     	.L3653	# delay slot filled
	l.sb    	20(r2),r14	    # movqi
.L3617:
	l.sfnei	r14,4
	l.bnf	.L3615	# delay slot filled
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.j     	.L3660	# delay slot filled
	l.sfeqi	r14,2
.L3648:
	l.sb    	20(r2),r14	    # movqi
	l.lwz   	r2,4(r2)	 # SI load
	l.lwz   	r4,16(r16)	 # SI load
	l.lwz   	r3,20(r2)	 # SI load
	l.addi  	r4,r4,1
	l.addi  	r3,r3,1
	l.sw    	16(r16),r4	 # SI store
	l.sw    	20(r2),r3	 # SI store
	l.j     	.L3608	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L3649:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.addi  	r4,r0,3850	 # move immediate I
	l.j     	.L3643	# delay slot filled
	l.lwz   	r14,0(r11)	 # SI load
.L3619:
	l.bnf	.L3620	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.lwz   	r4,4(r2)	 # SI load
	l.sb    	20(r2),r3	    # movqi
	l.lwz   	r5,20(r4)	 # SI load
	l.add   	r5,r5,r3
	l.sw    	20(r4),r5	 # SI store
	l.j     	.L3631	# delay slot filled
	l.sw    	16(r16),r3	 # SI store
.L3650:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.j     	.L3618	# delay slot filled
	l.lwz   	r24,0(r11)	 # SI load
.L3620:
	l.ori   	r3,r24,0	 # move reg to reg
.L3656:
	l.jal   	sqliteErrorFromPosixError	# delay slot filled
	l.addi  	r4,r0,3850	 # move immediate I
	l.xori  	r3,r11,5
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L3658	# delay slot filled
	l.sfnei	r11,0
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfgesi	r3,0
	l.bf	.L3622	# delay slot filled
	l.sfnei	r11,0
	l.j     	.L3608	# delay slot filled
	l.sw    	24(r2),r24	 # SI store
.LFE164:
	.size	unixLock, .-unixLock
	.section	.rodata
	.align	4
.LC72:
	.long	1089804288
	.long	0
	.align	4
.LC73:
	.long	1094885061
	.long	3221225472
	.align	4
.LC74:
	.long	1110711767
	.long	1610612736
	.section .text
	.align	4
.proc	unixCurrentTime
	.type	unixCurrentTime, @function
unixCurrentTime:
.LFB199:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1332:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1333:
	l.addi  	r1,r1,-24
.LCFI1334:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r3,r1,8
	l.jal   	gettimeofday	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	__floatsidf	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.movhi  	r5,hi(.LC72)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC72)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__divdf3
	l.nop			# nop delay slot
	l.movhi  	r5,hi(.LC73)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC73)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.lwz   	r3,12(r1)	 # SI load
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
	l.jal   	__floatsidf
	l.nop			# nop delay slot
	l.movhi  	r5,hi(.LC74)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC74)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__divdf3
	l.nop			# nop delay slot
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
		l.sw    	0(r2), r11
		l.sw    	4(r2), r12
	l.addi	r1,r1,24
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE199:
	.size	unixCurrentTime, .-unixCurrentTime
	.align	4
.proc	unixSleep
	.type	unixSleep, @function
unixSleep:
.LFB198:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1335:
	l.movhi 	r14,hi(983040)	 # move immediate M
	l.sw    	-12(r1),r2	 # SI store
.LCFI1336:
	l.ori   	r2,r14,16959
	l.sw    	-4(r1),r9	 # SI store
.LCFI1337:
	l.add   	r3,r4,r2
	l.addi  	r1,r1,-12
.LCFI1338:
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r4,r14,16960
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	sleep	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r14,16960
	l.lwz   	r9,-4(r1)	 # SI load
	l.mul   	r11,r2,r11
	l.lwz   	r14,-8(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-12(r1)	 # SI load
.LFE198:
	.size	unixSleep, .-unixSleep
	.section	.rodata.str1.1
.LC75:
	.string	"/dev/urandom"
	.section .text
	.align	4
.proc	unixRandomness
	.type	unixRandomness, @function
unixRandomness:
.LFB197:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1339:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI1340:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1341:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1342:
	l.ori   	r3,r5,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI1343:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r2,r5,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.movhi  	r3,hi(.LC75)
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	open64	# delay slot filled
	l.ori   	r3,r3,lo(.LC75)
	l.sfgesi	r11,0
	l.bnf	.L3666	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	read	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	close	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi	r1,r1,24
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3666:
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	time	# delay slot filled
	l.addi  	r16,r0,8	 # move immediate I
	l.lbz   	r3,0(r1)	 # zero_extendqisi2
	l.sb    	0(r2),r3	    # movqi
	l.lbz   	r4,1(r1)	 # zero_extendqisi2
	l.sb    	1(r2),r4	    # movqi
	l.lbz   	r3,2(r1)	 # zero_extendqisi2
	l.sb    	2(r2),r3	    # movqi
	l.lbz   	r14,3(r1)	 # zero_extendqisi2
	l.sb    	3(r2),r14	    # movqi
	l.jal   	getpid	# delay slot filled
	l.addi  	r2,r2,4
	l.addi  	r3,r1,4
	l.sw    	4(r1),r11	 # SI store
	l.ori   	r11,r16,0	 # move reg to reg
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sb    	0(r2),r4	    # movqi
	l.lbz   	r4,1(r3)	 # zero_extendqisi2
	l.sb    	1(r2),r4	    # movqi
	l.lbz   	r4,2(r3)	 # zero_extendqisi2
	l.sb    	2(r2),r4	    # movqi
	l.lbz   	r3,3(r3)	 # zero_extendqisi2
	l.sb    	3(r2),r3	    # movqi
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE197:
	.size	unixRandomness, .-unixRandomness
	.align	4
.proc	pcache1TruncateUnsafe.clone.11
	.type	pcache1TruncateUnsafe.clone.11, @function
pcache1TruncateUnsafe.clone.11:
.LFB1259:
	l.sw    	-32(r1),r2	 # SI store
.LCFI1344:
	l.sw    	-24(r1),r16	 # SI store
.LCFI1345:
	l.sw    	-12(r1),r22	 # SI store
.LCFI1346:
	l.sw    	-8(r1),r24	 # SI store
.LCFI1347:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1348:
	l.sw    	-28(r1),r14	 # SI store
.LCFI1349:
	l.sw    	-20(r1),r18	 # SI store
.LCFI1350:
	l.sw    	-16(r1),r20	 # SI store
.LCFI1351:
	l.lwz   	r2,0(r3)	 # SI load
	l.addi  	r1,r1,-32
.LCFI1352:
	l.ori   	r22,r3,0	 # move reg to reg
	l.ori   	r24,r4,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L3667	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.addi  	r18,r0,0	 # move immediate I
	l.ori   	r20,r18,0	 # move reg to reg
.L3673:
	l.lwz   	r14,0(r24)	 # SI load
	l.add   	r14,r14,r18
	l.lwz   	r2,0(r14)	 # SI load
.L3678:
	l.sfnei	r2,0
	l.bnf	.L3676
	l.nop			# nop delay slot
.L3672:
	l.lwz   	r5,0(r2)	 # SI load
	l.sfltu 	r5,r16
	l.bnf	.L3677
	l.nop			# nop delay slot
	l.addi  	r14,r2,4
	l.lwz   	r2,0(r14)	 # SI load
	l.sfnei	r2,0
	l.bf	.L3672
	l.nop			# nop delay slot
.L3676:
	l.addi  	r20,r20,1
	l.lwz   	r2,0(r22)	 # SI load
	l.sfltu 	r20,r2
	l.bf	.L3673	# delay slot filled
	l.addi  	r18,r18,4
.L3667:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L3677:
	l.jal   	pcache1PinPage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,4(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pcache1FreePage	# delay slot filled
	l.sw    	0(r14),r5	 # SI store
	l.j     	.L3678	# delay slot filled
	l.lwz   	r2,0(r14)	 # SI load
.LFE1259:
	.size	pcache1TruncateUnsafe.clone.11, .-pcache1TruncateUnsafe.clone.11
	.align	4
.proc	pcache1Truncate
	.type	pcache1Truncate, @function
pcache1Truncate:
.LFB257:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1353:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1354:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1355:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,32(r3)	 # SI load
	l.addi  	r1,r1,-12
.LCFI1356:
	l.sfltu 	r3,r4
	l.bf	.L3679	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r3,r2,24
	l.addi  	r4,r2,28
	l.jal   	pcache1TruncateUnsafe.clone.11	# delay slot filled
	l.addi  	r14,r14,-1
	l.sw    	32(r2),r14	 # SI store
.L3679:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE257:
	.size	pcache1Truncate, .-pcache1Truncate
	.align	4
.proc	pcache1Destroy
	.type	pcache1Destroy, @function
pcache1Destroy:
.LFB258:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1357:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI1358:
	l.addi  	r4,r2,28
	l.addi  	r1,r1,-8
.LCFI1359:
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	pcache1TruncateUnsafe.clone.11	# delay slot filled
	l.addi  	r3,r3,24
	l.movhi  	r3,hi(pcache1_g)
	l.lwz   	r5,8(r2)	 # SI load
	l.ori   	r3,r3,lo(pcache1_g)
	l.lwz   	r4,12(r2)	 # SI load
	l.lwz   	r6,4(r3)	 # SI load
	l.lwz   	r7,8(r3)	 # SI load
	l.sub   	r4,r6,r4
	l.sub   	r5,r7,r5
	l.sw    	4(r3),r4	 # SI store
	l.jal   	pcache1EnforceMaxPage	# delay slot filled
	l.sw    	8(r3),r5	 # SI store
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,28(r2)	 # SI load
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_free	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE258:
	.size	pcache1Destroy, .-pcache1Destroy
	.align	4
.proc	subjRequiresPage.clone.12
	.type	subjRequiresPage.clone.12, @function
subjRequiresPage.clone.12:
.LFB1260:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1360:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1361:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1362:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1363:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1364:
	l.lwz   	r18,88(r4)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r1,r1,-20
.LCFI1365:
	l.sfles 	r18,r11
	l.bf	.L3683	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.lwz   	r2,84(r4)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L3685	# delay slot filled
	l.addi  	r2,r2,20
.L3684:
	l.sfgts 	r18,r14
.L3690:
	l.bnf	.L3689	# delay slot filled
	l.addi  	r2,r2,28
.L3685:
	l.lwz   	r3,0(r2)	 # SI load
	l.sfltu 	r3,r16
	l.bf	.L3684	# delay slot filled
	l.addi  	r14,r14,1
	l.lwz   	r3,-4(r2)	 # SI load
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L3690	# delay slot filled
	l.sfgts 	r18,r14
	l.addi  	r11,r0,1	 # move immediate I
.L3683:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3689:
	l.addi	r1,r1,20
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE1260:
	.size	subjRequiresPage.clone.12, .-subjRequiresPage.clone.12
	.align	4
.proc	invalidateAllOverflowCache.clone.39
	.type	invalidateAllOverflowCache.clone.39, @function
invalidateAllOverflowCache.clone.39:
.LFB1287:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1366:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1367:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI1368:
	l.bf	.L3691	# delay slot filled
	l.addi  	r1,r1,-8
.L3694:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,84(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	84(r2),r3	 # SI store
	l.lwz   	r2,8(r2)	 # SI load
	l.sfne 	r2,r3
	l.bf	.L3694
	l.nop			# nop delay slot
.L3691:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1287:
	.size	invalidateAllOverflowCache.clone.39, .-invalidateAllOverflowCache.clone.39
	.align	4
.proc	checkForReadConflicts.clone.57
	.type	checkForReadConflicts.clone.57, @function
checkForReadConflicts.clone.57:
.LFB1305:
	l.lwz   	r4,8(r4)	 # SI load
	l.sw    	-4(r1),r2	 # SI store
.LCFI1369:
	l.ori   	r11,r4,0	 # move reg to reg
	l.sfeqi	r4,0
.LCFI1370:
	l.bf	.L3697	# delay slot filled
	l.addi  	r1,r1,-4
	l.or    	r11,r7,r8
	l.sub   	r15,r0,r6
	l.sub   	r13,r0,r11
	l.or    	r15,r6,r15
	l.or    	r11,r13,r11
	l.xori  	r15,r15,0xffff
	l.srli  	r13,r11,31
	l.j     	.L3707	# delay slot filled
	l.srli  	r15,r15,31
.L3698:
	l.lwz   	r4,8(r4)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L3709
	l.nop			# nop delay slot
.L3707:
	l.sfeq 	r4,r6
.L3713:
	l.bf	.L3698
	l.nop			# nop delay slot
	l.lwz   	r11,20(r4)	 # SI load
	l.sfne 	r11,r5
	l.bf	.L3698
	l.nop			# nop delay slot
	l.lbz   	r11,80(r4)	 # zero_extendqisi2
	l.sfeqi	r11,0
	l.bf	.L3699	# delay slot filled
	l.sfeqi	r13,0
	l.bf	.L3711	# delay slot filled
	l.sfeqi	r6,0
	l.sfnei	r15,0
	l.bf	.L3712	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sfeqi	r6,0
.L3711:
	l.bf	.L3699
	l.nop			# nop delay slot
	l.lbz   	r12,80(r6)	 # zero_extendqisi2
	l.sfnei	r12,0
	l.bf	.L3699
	l.nop			# nop delay slot
	l.lwz   	r12,36(r4)	 # SI load
	l.sfne 	r12,r7
	l.bnf	.L3710
	l.nop			# nop delay slot
.L3699:
	l.lbz   	r12,63(r4)	 # zero_extendqisi2
	l.sfnei	r12,1
	l.bf	.L3698
	l.nop			# nop delay slot
	l.lbz   	r12,60(r4)	 # zero_extendqisi2
	l.sfeqi	r12,0
	l.bf	.L3702	# delay slot filled
	l.sfeqi	r11,0
	l.bf	.L3698
	l.nop			# nop delay slot
.L3702:
	l.lwz   	r11,0(r4)	 # SI load
	l.lwz   	r11,0(r11)	 # SI load
	l.sfeq 	r11,r3
	l.bf	.L3698
	l.nop			# nop delay slot
	l.lwz   	r11,12(r11)	 # SI load
	l.andi  	r11,r11,16384
	l.sfeqi	r11,0
	l.bnf	.L3698	# delay slot filled
	l.addi  	r11,r0,262	 # move immediate I
.L3697:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L3710:
	l.lwz   	r12,40(r4)	 # SI load
	l.sfne 	r12,r8
	l.bf	.L3699	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
.L3712:
	l.sb    	63(r4),r2	    # movqi
	l.lwz   	r4,8(r4)	 # SI load
	l.sfnei	r4,0
	l.bf	.L3713	# delay slot filled
	l.sfeq 	r4,r6
.L3709:
	l.addi	r1,r1,4
	l.ori   	r11,r4,0	 # move reg to reg
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1305:
	.size	checkForReadConflicts.clone.57, .-checkForReadConflicts.clone.57
	.align	4
.proc	_storeTypeInfo.clone.72
	.type	_storeTypeInfo.clone.72, @function
_storeTypeInfo.clone.72:
.LFB1320:
	l.sw    	-4(r1),r2	 # SI store
.LCFI1371:
	l.andi  	r5,r3,1
	l.sfeqi	r5,0
.LCFI1372:
	l.bnf	.L3720	# delay slot filled
	l.addi  	r1,r1,-4
	l.andi  	r5,r3,4
	l.sfeqi	r5,0
	l.bnf	.L3721	# delay slot filled
	l.andi  	r5,r3,8
	l.sfeqi	r5,0
	l.bnf	.L3722	# delay slot filled
	l.andi  	r3,r3,2
	l.sfeqi	r3,0
	l.bnf	.L3723
	l.nop			# nop delay slot
	l.addi  	r2,r0,4	 # movqi: move immediate
	l.addi	r1,r1,4
	l.sb    	0(r4),r2	    # movqi
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L3721:
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	0(r4),r2	    # movqi
.L3714:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L3720:
	l.addi  	r2,r0,5	 # movqi: move immediate
	l.addi	r1,r1,4
	l.sb    	0(r4),r2	    # movqi
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L3723:
	l.addi  	r2,r0,3	 # movqi: move immediate
	l.j     	.L3714	# delay slot filled
	l.sb    	0(r4),r2	    # movqi
.L3722:
	l.addi  	r2,r0,2	 # movqi: move immediate
	l.addi	r1,r1,4
	l.sb    	0(r4),r2	    # movqi
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1320:
	.size	_storeTypeInfo.clone.72, .-_storeTypeInfo.clone.72
	.align	4
.proc	sqlite3WalkSelect
	.type	sqlite3WalkSelect, @function
sqlite3WalkSelect:
.LFB711:
	l.sw    	-16(r1),r16	 # SI store
.LCFI1373:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1374:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1375:
	l.sw    	-24(r1),r2	 # SI store
.LCFI1376:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1377:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1378:
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI1379:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3725	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
	l.lwz   	r2,4(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L3725	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
.L3743:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jalr  	r2	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3726	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3WalkExprList	# delay slot filled
	l.lwz   	r4,0(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L3744	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L3741:
	l.addi  	r11,r0,2	 # move immediate I
.L3725:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3744:
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.lwz   	r4,12(r18)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3725	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3WalkExprList	# delay slot filled
	l.lwz   	r4,16(r18)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3725	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.lwz   	r4,20(r18)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3725	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3WalkExprList	# delay slot filled
	l.lwz   	r4,24(r18)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3725	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.lwz   	r4,40(r18)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3725	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.lwz   	r4,44(r18)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3741
	l.nop			# nop delay slot
	l.lwz   	r2,8(r18)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L3728
	l.nop			# nop delay slot
	l.lhs   	r14,0(r2)	 # extendhisi2_no_sext_mem
	l.sflesi	r14,0
	l.bf	.L3728	# delay slot filled
	l.addi  	r14,r14,-1
	l.j     	.L3729	# delay slot filled
	l.addi  	r2,r2,20
.L3745:
	l.bf	.L3728	# delay slot filled
	l.addi  	r14,r14,-1
.L3729:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.addi  	r2,r2,52
	l.sfnei	r11,0
	l.bnf	.L3745	# delay slot filled
	l.sflesi	r14,0
	l.j     	.L3725	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
.L3726:
	l.addi	r1,r1,24
	l.andi  	r11,r20,2
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3728:
	l.lwz   	r18,28(r18)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L3726
	l.nop			# nop delay slot
	l.j     	.L3743	# delay slot filled
	l.lwz   	r2,4(r16)	 # SI load
.LFE711:
	.size	sqlite3WalkSelect, .-sqlite3WalkSelect
	.align	4
.proc	sqlite3WalkExpr
	.type	sqlite3WalkExpr, @function
sqlite3WalkExpr:
.LFB707:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1380:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1381:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1382:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1383:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1384:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI1385:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3747	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
	l.lwz   	r11,0(r3)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L3755	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L3748:
	l.andi  	r2,r16,2
.L3747:
	l.addi	r1,r1,20
.L3756:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3755:
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,49152
	l.sfnei	r3,0
	l.bf	.L3748	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,20(r2)	 # SI load
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L3747	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.lwz   	r4,24(r18)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3747
	l.nop			# nop delay slot
	l.lhz   	r3,2(r18)	 # zero_extendqisi2
	l.andi  	r3,r3,4096
	l.sfeqi	r3,0
	l.bf	.L3749	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.lwz   	r4,28(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L3748
	l.nop			# nop delay slot
	l.j     	.L3756	# delay slot filled
	l.addi	r1,r1,20
.L3749:
	l.jal   	sqlite3WalkExprList	# delay slot filled
	l.lwz   	r4,28(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L3748
	l.nop			# nop delay slot
	l.j     	.L3756	# delay slot filled
	l.addi	r1,r1,20
.LFE707:
	.size	sqlite3WalkExpr, .-sqlite3WalkExpr
	.align	4
.proc	sqlite3WalkExprList
	.type	sqlite3WalkExprList, @function
sqlite3WalkExprList:
.LFB708:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1386:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1387:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1388:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1389:
	l.ori   	r11,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI1390:
	l.sfeqi	r4,0
	l.bf	.L3758	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.lwz   	r2,0(r4)	 # SI load
	l.lwz   	r14,12(r4)	 # SI load
	l.sflesi	r2,0
	l.bnf	.L3764	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L3766	# delay slot filled
	l.addi	r1,r1,16
.L3765:
	l.sflesi	r2,0
	l.bf	.L3758
	l.nop			# nop delay slot
.L3764:
	l.lwz   	r4,0(r14)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.addi  	r2,r2,-1
	l.sfnei	r11,0
	l.bnf	.L3765	# delay slot filled
	l.addi  	r14,r14,16
	l.addi  	r11,r0,2	 # move immediate I
.L3758:
	l.addi	r1,r1,16
.L3766:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE708:
	.size	sqlite3WalkExprList, .-sqlite3WalkExprList
	.align	4
.proc	exprIsConst
	.type	exprIsConst, @function
exprIsConst:
.LFB766:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1391:
	l.ori   	r5,r3,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI1392:
	l.sw    	12(r1),r4	 # SI store
	l.ori   	r4,r5,0	 # move reg to reg
	l.movhi  	r5,hi(exprNodeIsConstant)
	l.ori   	r3,r1,0	 # move reg to reg
	l.ori   	r5,r5,lo(exprNodeIsConstant)
	l.sw    	0(r1),r5	 # SI store
	l.movhi  	r5,hi(selectNodeIsConstant)
	l.ori   	r5,r5,lo(selectNodeIsConstant)
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
	l.lwz   	r11,12(r1)	 # SI load
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE766:
	.size	exprIsConst, .-exprIsConst
	.section	.rodata.str1.1
.LC76:
	.string	"default value of column [%s] is not constant"
	.section .text
	.align	4
.proc	sqlite3AddDefaultValue
	.type	sqlite3AddDefaultValue, @function
sqlite3AddDefaultValue:
.LFB873:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1393:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1394:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1395:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1396:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1397:
	l.ori   	r14,r4,0	 # move reg to reg
	l.lwz   	r4,476(r3)	 # SI load
	l.addi  	r1,r1,-24
.LCFI1398:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3769	# delay slot filled
	l.lwz   	r16,0(r3)	 # SI load
	l.lwz   	r18,12(r4)	 # SI load
	l.lwz   	r5,16(r4)	 # SI load
	l.addi  	r4,r18,-1
	l.ori   	r3,r14,0	 # move reg to reg
	l.slli  	r6,r4,2
	l.slli  	r18,r4,4
	l.addi  	r4,r0,2	 # move immediate I
	l.add   	r18,r6,r18
	l.jal   	exprIsConst	# delay slot filled
	l.add   	r18,r5,r18
	l.sfnei	r11,0
	l.bnf	.L3771	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,4(r18)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r5,r0,3	 # move immediate I
	l.sw    	4(r18),r11	 # SI store
.L3769:
	l.addi	r1,r1,24
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3ExprDelete	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L3771:
	l.movhi  	r4,hi(.LC76)
	l.lwz   	r5,0(r18)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC76)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi	r1,r1,24
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3ExprDelete	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.LFE873:
	.size	sqlite3AddDefaultValue, .-sqlite3AddDefaultValue
	.align	4
.proc	sqlite3ExprAnalyzeAggregates
	.type	sqlite3ExprAnalyzeAggregates, @function
sqlite3ExprAnalyzeAggregates:
.LFB806:
	l.movhi  	r5,hi(analyzeAggregate)
	l.sw    	-4(r1),r9	 # SI store
.LCFI1399:
	l.ori   	r5,r5,lo(analyzeAggregate)
	l.addi  	r1,r1,-20
.LCFI1400:
	l.sw    	0(r1),r5	 # SI store
	l.movhi  	r5,hi(analyzeAggregatesInSelect)
	l.sw    	12(r1),r3	 # SI store
	l.ori   	r5,r5,lo(analyzeAggregatesInSelect)
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE806:
	.size	sqlite3ExprAnalyzeAggregates, .-sqlite3ExprAnalyzeAggregates
	.align	4
.proc	sqlite3ExprAnalyzeAggList
	.type	sqlite3ExprAnalyzeAggList, @function
sqlite3ExprAnalyzeAggList:
.LFB807:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1401:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1402:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1403:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1404:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1405:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI1406:
	l.sfeqi	r4,0
	l.bf	.L3773	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
	l.lwz   	r3,0(r4)	 # SI load
	l.sflesi	r3,0
	l.bf	.L3773	# delay slot filled
	l.lwz   	r2,12(r4)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
.L3775:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprAnalyzeAggregates	# delay slot filled
	l.addi  	r14,r14,1
	l.lwz   	r3,0(r16)	 # SI load
	l.sfgts 	r3,r14
	l.bf	.L3775	# delay slot filled
	l.addi  	r2,r2,16
.L3773:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE807:
	.size	sqlite3ExprAnalyzeAggList, .-sqlite3ExprAnalyzeAggList
	.align	4
.proc	sqlite3ResolveExprNames
	.type	sqlite3ResolveExprNames, @function
sqlite3ResolveExprNames:
.LFB722:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1407:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1408:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1409:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1410:
	l.ori   	r11,r4,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI1411:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3778	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r3,60(r4)	 # SI load
	l.lwz   	r7,512(r5)	 # SI load
	l.lwz   	r6,0(r5)	 # SI load
	l.add   	r3,r7,r3
	l.lwz   	r6,92(r6)	 # SI load
	l.sfles 	r3,r6
	l.bnf	.L3786
	l.nop			# nop delay slot
	l.movhi  	r6,hi(resolveExprStep)
	l.sw    	512(r5),r3	 # SI store
	l.ori   	r6,r6,lo(resolveExprStep)
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sw    	4(r1),r6	 # SI store
	l.movhi  	r6,hi(resolveSelectStep)
	l.lbz   	r16,21(r2)	 # zero_extendqisi2
	l.ori   	r6,r6,lo(resolveSelectStep)
	l.sb    	21(r2),r3	    # movqi
	l.addi  	r3,r1,4
	l.sw    	8(r1),r6	 # SI store
	l.sw    	12(r1),r5	 # SI store
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.sw    	16(r1),r2	 # SI store
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r4,60(r14)	 # SI load
	l.lwz   	r6,512(r3)	 # SI load
	l.lwz   	r5,16(r2)	 # SI load
	l.sub   	r4,r6,r4
	l.sflesi	r5,0
	l.bf	.L3780	# delay slot filled
	l.sw    	512(r3),r4	 # SI store
	l.lhz   	r3,2(r14)	 # zero_extendqisi2
	l.ori   	r3,r3,8
	l.sh    	2(r14),r3	 # movhi
.L3780:
	l.lbz   	r3,21(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L3781	# delay slot filled
	l.sfnei	r16,0
	l.lhz   	r11,2(r14)	 # zero_extendqisi2
	l.ori   	r11,r11,2
	l.sh    	2(r14),r11	 # movhi
.L3782:
	l.srli  	r11,r11,3
	l.andi  	r11,r11,1
.L3778:
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3786:
	l.movhi  	r4,hi(.LC51)
	l.ori   	r3,r5,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC51)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.addi	r1,r1,36
	l.addi  	r11,r0,1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3781:
	l.bnf	.L3785	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	21(r2),r3	    # movqi
.L3785:
	l.j     	.L3782	# delay slot filled
	l.lhz   	r11,2(r14)	 # zero_extendqisi2
.LFE722:
	.size	sqlite3ResolveExprNames, .-sqlite3ResolveExprNames
	.section	.rodata.str1.1
.LC77:
	.string	"invalid name: \"%T\""
	.section .text
	.align	4
.proc	resolveAttachExpr
	.type	resolveAttachExpr, @function
resolveAttachExpr:
.LFB828:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1412:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1413:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1414:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1415:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI1416:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3788	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.sfeqi	r5,26
	l.bf	.L3789	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.jal   	sqlite3ResolveExprNames
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L3791	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L3788:
	l.addi	r1,r1,20
.L3792:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3789:
	l.addi  	r3,r0,94	 # movqi: move immediate
	l.sb    	0(r4),r3	    # movqi
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3791:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	exprIsConst	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L3788	# delay slot filled
	l.movhi  	r4,hi(.LC77)
	l.addi  	r14,r14,12
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r4,r4,lo(.LC77)
	l.sw    	0(r1),r14	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L3792	# delay slot filled
	l.addi	r1,r1,20
.LFE828:
	.size	resolveAttachExpr, .-resolveAttachExpr
	.align	4
.proc	analyzeAggregatesInSelect
	.type	analyzeAggregatesInSelect, @function
analyzeAggregatesInSelect:
.LFB805:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1417:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1418:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1419:
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r2,12(r3)	 # SI load
	l.lwz   	r5,24(r2)	 # SI load
	l.sfne 	r5,r11
.LCFI1420:
	l.bf	.L3794	# delay slot filled
	l.addi  	r1,r1,-12
	l.addi  	r14,r0,1	 # move immediate I
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.sw    	24(r2),r14	 # SI store
	l.lwz   	r3,24(r2)	 # SI load
	l.ori   	r11,r14,0	 # move reg to reg
	l.addi  	r3,r3,-1
	l.sw    	24(r2),r3	 # SI store
.L3794:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE805:
	.size	analyzeAggregatesInSelect, .-analyzeAggregatesInSelect
	.align	4
.proc	sqlite3SelectPrep
	.type	sqlite3SelectPrep, @function
sqlite3SelectPrep:
.LFB1068:
	l.sw    	-24(r1),r2	 # SI store
.LCFI1421:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1422:
	l.sw    	-16(r1),r16	 # SI store
.LCFI1423:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1424:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1425:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1426:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-72
.LCFI1427:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L3796	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.lhz   	r3,6(r4)	 # zero_extendqisi2
	l.andi  	r3,r3,32
	l.sfnei	r3,0
	l.bf	.L3796	# delay slot filled
	l.lwz   	r18,0(r2)	 # SI load
	l.lwz   	r3,64(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L3796
	l.nop			# nop delay slot
	l.lbz   	r3,30(r18)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L3798	# delay slot filled
	l.addi  	r3,r1,32
.L3796:
	l.addi	r1,r1,72
.L3799:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3798:
	l.movhi  	r20,hi(exprWalkNoop)
	l.movhi  	r5,hi(selectExpander)
	l.ori   	r5,r5,lo(selectExpander)
	l.ori   	r20,r20,lo(exprWalkNoop)
	l.sw    	36(r1),r5	 # SI store
	l.sw    	32(r1),r20	 # SI store
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.sw    	40(r1),r2	 # SI store
	l.lwz   	r3,64(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L3796
	l.nop			# nop delay slot
	l.lbz   	r3,30(r18)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L3796	# delay slot filled
	l.addi  	r3,r1,16
	l.movhi  	r5,hi(resolveExprStep)
	l.ori   	r5,r5,lo(resolveExprStep)
	l.ori   	r4,r14,0	 # move reg to reg
	l.sw    	16(r1),r5	 # SI store
	l.movhi  	r5,hi(resolveSelectStep)
	l.sw    	24(r1),r2	 # SI store
	l.ori   	r5,r5,lo(resolveSelectStep)
	l.sw    	28(r1),r16	 # SI store
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.sw    	20(r1),r5	 # SI store
	l.lwz   	r3,64(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L3796
	l.nop			# nop delay slot
	l.lbz   	r3,30(r18)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L3796	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.movhi  	r5,hi(selectAddSubqueryTypeInfo)
	l.ori   	r5,r5,lo(selectAddSubqueryTypeInfo)
	l.ori   	r4,r14,0	 # move reg to reg
	l.sw    	4(r1),r5	 # SI store
	l.sw    	0(r1),r20	 # SI store
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
	l.j     	.L3799	# delay slot filled
	l.addi	r1,r1,72
.LFE1068:
	.size	sqlite3SelectPrep, .-sqlite3SelectPrep
	.align	4
.proc	columnIndex.clone.87
	.type	columnIndex.clone.87, @function
columnIndex.clone.87:
.LFB1335:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1428:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1429:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1430:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1431:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1432:
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI1433:
	l.ori   	r18,r5,0	 # move reg to reg
	l.sflesi	r3,0
	l.bf	.L3801	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
	l.lwz   	r14,0(r4)	 # SI load
	l.j     	.L3802	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L3806:
	l.sflts 	r2,r16
	l.bnf	.L3805
	l.nop			# nop delay slot
.L3802:
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r14,r14,20
	l.sfeqi	r11,0
	l.bnf	.L3806	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
.L3801:
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3805:
	l.addi	r1,r1,20
	l.addi  	r2,r0,-1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE1335:
	.size	columnIndex.clone.87, .-columnIndex.clone.87
	.align	4
.proc	sqlite3TriggerList.clone.90
	.type	sqlite3TriggerList.clone.90, @function
sqlite3TriggerList.clone.90:
.LFB1338:
	l.sw    	-24(r1),r2	 # SI store
.LCFI1434:
	l.lwz   	r2,8(r3)	 # SI load
	l.sw    	-16(r1),r16	 # SI store
.LCFI1435:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1436:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1437:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1438:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1439:
	l.lwz   	r16,72(r4)	 # SI load
	l.lwz   	r2,44(r2)	 # SI load
	l.addi  	r1,r1,-24
.LCFI1440:
	l.sfeq 	r2,r16
	l.bf	.L3808	# delay slot filled
	l.ori   	r20,r4,0	 # move reg to reg
	l.lwz   	r2,44(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L3808
	l.nop			# nop delay slot
	l.addi  	r18,r0,0	 # move immediate I
.L3812:
	l.lwz   	r14,8(r2)	 # SI load
	l.lwz   	r3,32(r14)	 # SI load
	l.sfne 	r3,r16
	l.bnf	.L3814
	l.nop			# nop delay slot
.L3809:
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L3812	# delay slot filled
	l.sfnei	r18,0
	l.bnf	.L3808
	l.nop			# nop delay slot
.L3813:
	l.addi	r1,r1,24
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3814:
	l.lwz   	r4,4(r20)	 # SI load
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.lwz   	r3,4(r14)	 # SI load
	l.sfnei	r11,0
	l.bf	.L3809	# delay slot filled
	l.sfnei	r18,0
	l.bnf	.L3815
	l.nop			# nop delay slot
.L3810:
	l.sw    	40(r14),r18	 # SI store
	l.j     	.L3809	# delay slot filled
	l.ori   	r18,r14,0	 # move reg to reg
.L3808:
	l.j     	.L3813	# delay slot filled
	l.lwz   	r18,68(r20)	 # SI load
.L3815:
	l.j     	.L3810	# delay slot filled
	l.lwz   	r18,68(r20)	 # SI load
.LFE1338:
	.size	sqlite3TriggerList.clone.90, .-sqlite3TriggerList.clone.90
	.align	4
.proc	tableOfTrigger.clone.91
	.type	tableOfTrigger.clone.91, @function
tableOfTrigger.clone.91:
.LFB1339:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1441:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1442:
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
.LCFI1443:
	l.bf	.L3817	# delay slot filled
	l.addi  	r1,r1,-8
	l.ori   	r5,r3,0	 # move reg to reg
	l.addi  	r5,r5,1
.L3821:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L3821	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r3
	l.ori   	r2,r2,65535
	l.and   	r5,r5,r2
.L3817:
	l.lwz   	r6,0(r4)	 # SI load
	l.addi	r1,r1,8
	l.ori   	r4,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.addi  	r3,r6,4
	l.j	sqlite3HashFind	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1339:
	.size	tableOfTrigger.clone.91, .-tableOfTrigger.clone.91
	.align	4
.proc	sqlite3TriggersExist.clone.92
	.type	sqlite3TriggersExist.clone.92, @function
sqlite3TriggersExist.clone.92:
.LFB1340:
	l.sw    	-24(r1),r14	 # SI store
.LCFI1444:
	l.sw    	-20(r1),r16	 # SI store
.LCFI1445:
	l.sw    	-16(r1),r18	 # SI store
.LCFI1446:
	l.sw    	-12(r1),r20	 # SI store
.LCFI1447:
	l.sw    	-8(r1),r22	 # SI store
.LCFI1448:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1449:
	l.sw    	-28(r1),r2	 # SI store
.LCFI1450:
	l.addi  	r1,r1,-28
.LCFI1451:
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r22,r6,0	 # move reg to reg
	l.jal   	sqlite3TriggerList.clone.90	# delay slot filled
	l.ori   	r20,r7,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L3823	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L3825	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.L3824:
	l.lwz   	r2,40(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L3830	# delay slot filled
	l.sfeqi	r20,0
.L3825:
	l.lbz   	r3,8(r2)	 # zero_extendqisi2
	l.sfne 	r3,r14
	l.bf	.L3824
	l.nop			# nop delay slot
	l.lwz   	r3,16(r2)	 # SI load
	l.jal   	checkColumnOverLap	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L3824
	l.nop			# nop delay slot
	l.lbz   	r3,9(r2)	 # zero_extendqisi2
	l.lwz   	r2,40(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L3825	# delay slot filled
	l.or    	r18,r18,r3
.L3823:
	l.sfeqi	r20,0
.L3830:
	l.bf	.L3831	# delay slot filled
	l.sfnei	r18,0
	l.sw    	0(r20),r18	 # SI store
.L3831:
	l.bf	.L3827
	l.nop			# nop delay slot
	l.ori   	r16,r18,0	 # move reg to reg
.L3827:
	l.addi	r1,r1,28
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.LFE1340:
	.size	sqlite3TriggersExist.clone.92, .-sqlite3TriggersExist.clone.92
	.align	4
.proc	referencesOtherTables.clone.95
	.type	referencesOtherTables.clone.95, @function
referencesOtherTables.clone.95:
.LFB1343:
	l.sw    	-24(r1),r2	 # SI store
.LCFI1452:
	l.sw    	-16(r1),r16	 # SI store
.LCFI1453:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1454:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1455:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1456:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1457:
	l.addi  	r11,r0,-1	 # move immediate I
	l.addi  	r1,r1,-32
.LCFI1458:
	l.addi  	r12,r0,-1	 # move immediate I
	l.ori   	r16,r5,0	 # move reg to reg
	l.lwz   	r5,0(r5)	 # SI load
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
	l.ori   	r18,r4,0	 # move reg to reg
	l.sflesi	r5,0
	l.bf	.L3833	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
	l.lwz   	r4,4(r16)	 # SI load
	l.sfeq 	r4,r7
	l.bf	.L3848	# delay slot filled
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r8,r16,8
	l.j     	.L3836	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L3839:
	l.lwz   	r4,0(r8)	 # SI load
	l.sfne 	r4,r7
	l.bnf	.L3849	# delay slot filled
	l.addi  	r8,r8,4
.L3836:
	l.addi  	r6,r6,1
	l.sflts 	r6,r5
	l.bf	.L3839	# delay slot filled
	l.addi  	r11,r0,-1	 # move immediate I
	l.addi  	r12,r0,-1	 # move immediate I
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
.L3833:
	l.lwz   	r20,0(r3)	 # SI load
.L3850:
	l.j     	.L3840	# delay slot filled
	l.slli  	r14,r2,4
.L3842:
	l.lwz   	r4,0(r18)	 # SI load
	l.add   	r4,r4,r14
	l.addi  	r14,r14,16
	l.jal   	exprTableUsage	# delay slot filled
	l.lwz   	r4,0(r4)	 # SI load
	l.lwz   	r3,0(r1)	 # SI load
	l.lwz   	r4,4(r1)	 # SI load
	l.and   	r11,r11,r3
	l.and   	r12,r12,r4
	l.or    	r12,r11,r12
	l.sfnei	r12,0
	l.bf	.L3845	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L3840:
	l.sflts 	r2,r20
	l.ori   	r3,r16,0	 # move reg to reg
	l.bf	.L3842	# delay slot filled
	l.addi  	r2,r2,1
	l.addi	r1,r1,32
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3845:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3849:
	l.addi  	r4,r6,-32
	l.sfltsi	r4,0
	l.bf	.L3837
	l.nop			# nop delay slot
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.sll   	r4,r5,r4
.L3838:
	l.xori  	r4,r4,0xffff
	l.xori  	r6,r6,0xffff
	l.sw    	0(r1),r4	 # SI store
	l.j     	.L3833	# delay slot filled
	l.sw    	4(r1),r6	 # SI store
.L3837:
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L3838	# delay slot filled
	l.sll   	r6,r5,r6
.L3848:
	l.addi  	r5,r0,-2	 # move immediate I
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.j     	.L3850	# delay slot filled
	l.lwz   	r20,0(r3)	 # SI load
.LFE1343:
	.size	referencesOtherTables.clone.95, .-referencesOtherTables.clone.95
	.align	4
.proc	sortableByRowid
	.type	sortableByRowid, @function
sortableByRowid:
.LFB1150:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1459:
	l.lwz   	r16,12(r4)	 # SI load
	l.sw    	-16(r1),r2	 # SI store
.LCFI1460:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1461:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1462:
	l.lwz   	r8,0(r16)	 # SI load
	l.ori   	r14,r6,0	 # move reg to reg
	l.lbz   	r6,0(r8)	 # zero_extendqisi2
	l.addi  	r1,r1,-16
.LCFI1463:
	l.sfnei	r6,151
	l.bnf	.L3857	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L3852:
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L3857:
	l.lwz   	r7,36(r8)	 # SI load
	l.sfne 	r7,r3
	l.bf	.L3852
	l.nop			# nop delay slot
	l.lwz   	r3,40(r8)	 # SI load
	l.sfnei	r3,-1
	l.bf	.L3852	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	referencesOtherTables.clone.95	# delay slot filled
	l.addi  	r4,r4,12
	l.sfne 	r11,r2
	l.bf	.L3852
	l.nop			# nop delay slot
	l.lbz   	r3,8(r16)	 # zero_extendqisi2
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L3852	# delay slot filled
	l.sw    	0(r14),r3	 # SI store
.LFE1150:
	.size	sortableByRowid, .-sortableByRowid
	.align	4
.proc	resolveAsName.clone.96
	.type	resolveAsName.clone.96, @function
resolveAsName.clone.96:
.LFB1344:
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.sw    	-24(r1),r2	 # SI store
.LCFI1464:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1465:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1466:
	l.sw    	-16(r1),r16	 # SI store
.LCFI1467:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1468:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1469:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI1470:
	l.sfeqi	r7,26
	l.bf	.L3859	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfnei	r7,94
	l.bnf	.L3868	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L3860:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L3868:
	l.lwz   	r4,4(r6)	 # SI load
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sfeqi	r4,39
	l.bf	.L3860
	l.nop			# nop delay slot
.L3859:
	l.lwz   	r20,0(r3)	 # SI load
	l.addi  	r4,r6,4
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfeqi	r16,0
	l.bf	.L3860	# delay slot filled
	l.addi  	r11,r0,-1	 # move immediate I
	l.lwz   	r18,0(r2)	 # SI load
	l.sflesi	r18,0
	l.bf	.L3870	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r2,0(r14)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.addi  	r2,r2,4
.L3863:
	l.lwz   	r5,0(r2)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L3862	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	sqlite3StrICmp
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L3869	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L3862:
	l.addi  	r14,r14,1
	l.sflts 	r14,r18
	l.bf	.L3863	# delay slot filled
	l.addi  	r2,r2,16
	l.ori   	r3,r20,0	 # move reg to reg
.L3870:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L3860	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L3869:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L3860	# delay slot filled
	l.addi  	r11,r14,1
.LFE1344:
	.size	resolveAsName.clone.96, .-resolveAsName.clone.96
	.align	4
.proc	sqlite3SrcListIndexedBy.clone.98
	.type	sqlite3SrcListIndexedBy.clone.98, @function
sqlite3SrcListIndexedBy.clone.98:
.LFB1346:
	l.sub   	r6,r0,r5
	l.sw    	-12(r1),r2	 # SI store
.LCFI1471:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1472:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1473:
	l.ori   	r2,r4,0	 # move reg to reg
	l.or    	r4,r5,r6
	l.sfgesi	r4,0
.LCFI1474:
	l.bf	.L3871	# delay slot filled
	l.addi  	r1,r1,-12
	l.sub   	r4,r0,r2
	l.or    	r4,r2,r4
	l.sfgesi	r4,0
	l.bf	.L3871
	l.nop			# nop delay slot
	l.lhs   	r14,0(r2)	 # extendhisi2_no_sext_mem
	l.sflesi	r14,0
	l.bf	.L3871	# delay slot filled
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r4,4(r5)	 # SI load
	l.ori   	r6,r6,65535
	l.and   	r4,r4,r6
	l.sfnei	r4,1
	l.bf	.L3873	# delay slot filled
	l.addi  	r14,r14,-1
	l.lwz   	r6,0(r5)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L3874
	l.nop			# nop delay slot
.L3873:
	l.lwz   	r3,0(r3)	 # SI load
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.add   	r3,r14,r14
	l.add   	r3,r3,r14
	l.slli  	r4,r3,4
	l.add   	r3,r3,r4
	l.add   	r14,r3,r14
	l.add   	r2,r2,r14
	l.sw    	48(r2),r11	 # SI store
.L3871:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3874:
	l.add   	r3,r14,r14
	l.add   	r3,r3,r14
	l.slli  	r5,r3,4
	l.add   	r3,r3,r5
	l.add   	r14,r3,r14
	l.add   	r2,r2,r14
	l.j     	.L3871	# delay slot filled
	l.sb    	26(r2),r4	    # movqi
.LFE1346:
	.size	sqlite3SrcListIndexedBy.clone.98, .-sqlite3SrcListIndexedBy.clone.98
	.align	4
.proc	dup8bytes.clone.99
	.type	dup8bytes.clone.99, @function
dup8bytes.clone.99:
.LFB1347:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1475:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1476:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-8
.LCFI1477:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r0,8	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L3876
	l.nop			# nop delay slot
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.sb    	0(r11),r3	    # movqi
	l.lbz   	r3,1(r2)	 # zero_extendqisi2
	l.sb    	1(r11),r3	    # movqi
	l.lbz   	r3,2(r2)	 # zero_extendqisi2
	l.sb    	2(r11),r3	    # movqi
	l.lbz   	r3,3(r2)	 # zero_extendqisi2
	l.sb    	3(r11),r3	    # movqi
	l.lbz   	r3,4(r2)	 # zero_extendqisi2
	l.sb    	4(r11),r3	    # movqi
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.sb    	5(r11),r3	    # movqi
	l.lbz   	r3,6(r2)	 # zero_extendqisi2
	l.sb    	6(r11),r3	    # movqi
	l.lbz   	r2,7(r2)	 # zero_extendqisi2
	l.sb    	7(r11),r2	    # movqi
.L3876:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1347:
	.size	dup8bytes.clone.99, .-dup8bytes.clone.99
	.align	4
.proc	pager_lookup.clone.100
	.type	pager_lookup.clone.100, @function
pager_lookup.clone.100:
.LFB1348:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1478:
	l.addi  	r1,r1,-8
.LCFI1479:
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3PcacheFetch	# delay slot filled
	l.ori   	r6,r1,0	 # move reg to reg
	l.lwz   	r11,0(r1)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE1348:
	.size	pager_lookup.clone.100, .-pager_lookup.clone.100
	.align	4
.proc	pagerPagecount.clone.101
	.type	pagerPagecount.clone.101, @function
pagerPagecount.clone.101:
.LFB1349:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1480:
	l.addi  	r1,r1,-8
.LCFI1481:
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r4,r1,0	 # move reg to reg
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r11,0(r1)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE1349:
	.size	pagerPagecount.clone.101, .-pagerPagecount.clone.101
	.align	4
.proc	sqlite3BtreeSetPageSize.clone.103
	.type	sqlite3BtreeSetPageSize.clone.103, @function
sqlite3BtreeSetPageSize.clone.103:
.LFB1351:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1482:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1483:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1484:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1485:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1486:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbz   	r4,17(r4)	 # zero_extendqisi2
	l.sw    	4(r2),r3	 # SI store
	l.addi  	r1,r1,-20
.LCFI1487:
	l.ori   	r16,r6,0	 # move reg to reg
	l.ori   	r18,r7,0	 # move reg to reg
	l.sfnei	r4,0
	l.bf	.L3880	# delay slot filled
	l.addi  	r14,r0,8	 # move immediate I
	l.sfgesi	r6,0
	l.bnf	.L3886	# delay slot filled
	l.addi  	r3,r5,-512
	l.sfgtui	r3,32256
	l.bf	.L3882	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.addi  	r3,r5,-1
.L3889:
	l.and   	r3,r3,r5
	l.sfne 	r3,r14
	l.bnf	.L3887
	l.nop			# nop delay slot
.L3882:
	l.lhz   	r3,20(r2)	 # zero_extendqisi2
	l.sub   	r16,r3,r16
	l.sfeqi	r18,0
	l.bf	.L3880	# delay slot filled
	l.sh    	22(r2),r16	 # movhi
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	17(r2),r3	    # movqi
.L3880:
	l.addi	r1,r1,20
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3886:
	l.lhz   	r3,22(r2)	 # zero_extendqisi2
	l.lhz   	r16,20(r2)	 # zero_extendqisi2
	l.sub   	r16,r16,r3
	l.addi  	r3,r5,-512
	l.sfgtui	r3,32256
	l.bf	.L3882	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L3889	# delay slot filled
	l.addi  	r3,r5,-1
.L3887:
	l.lwz   	r3,76(r2)	 # SI load
	l.jal   	pcache1Free	# delay slot filled
	l.sh    	20(r2),r5	 # movhi
	l.lwz   	r3,0(r2)	 # SI load
	l.sw    	76(r2),r14	 # SI store
	l.jal   	sqlite3PagerSetPagesize	# delay slot filled
	l.addi  	r4,r2,20
	l.j     	.L3882	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.LFE1351:
	.size	sqlite3BtreeSetPageSize.clone.103, .-sqlite3BtreeSetPageSize.clone.103
	.align	4
.proc	sqlite3BtreeSchema.clone.104
	.type	sqlite3BtreeSchema.clone.104, @function
sqlite3BtreeSchema.clone.104:
.LFB1352:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1488:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sub   	r4,r0,r5
	l.sw    	-8(r1),r14	 # SI store
.LCFI1489:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1490:
	l.sw    	4(r2),r3	 # SI store
	l.or    	r3,r4,r5
	l.addi  	r1,r1,-12
.LCFI1491:
	l.ori   	r14,r6,0	 # move reg to reg
	l.sfgesi	r3,0
	l.bnf	.L3892	# delay slot filled
	l.lwz   	r11,40(r2)	 # SI load
.L3891:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L3892:
	l.sub   	r3,r0,r11
	l.or    	r3,r11,r3
	l.sfltsi	r3,0
	l.bf	.L3891
	l.nop			# nop delay slot
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.sw    	44(r2),r14	 # SI store
	l.sw    	40(r2),r11	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1352:
	.size	sqlite3BtreeSchema.clone.104, .-sqlite3BtreeSchema.clone.104
	.align	4
.proc	sqlite3SchemaGet
	.type	sqlite3SchemaGet, @function
sqlite3SchemaGet:
.LFB933:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1492:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1493:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r4,0
.LCFI1494:
	l.bf	.L3894	# delay slot filled
	l.addi  	r1,r1,-8
	l.movhi  	r6,hi(sqlite3SchemaFree)
	l.lwz   	r3,0(r4)	 # SI load
	l.addi  	r5,r0,68	 # move immediate I
	l.lwz   	r4,4(r4)	 # SI load
	l.jal   	sqlite3BtreeSchema.clone.104	# delay slot filled
	l.ori   	r6,r6,lo(sqlite3SchemaFree)
	l.sfnei	r11,0
	l.bnf	.L3899	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
.L3896:
	l.lbz   	r3,56(r11)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L3897
	l.nop			# nop delay slot
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sw    	12(r11),r3	 # SI store
	l.sw    	8(r11),r3	 # SI store
	l.sw    	4(r11),r3	 # SI store
	l.sw    	16(r11),r3	 # SI store
	l.sw    	28(r11),r3	 # SI store
	l.sw    	24(r11),r3	 # SI store
	l.sw    	20(r11),r3	 # SI store
	l.sw    	32(r11),r3	 # SI store
	l.sw    	44(r11),r3	 # SI store
	l.sw    	40(r11),r3	 # SI store
	l.sw    	36(r11),r3	 # SI store
	l.sw    	48(r11),r3	 # SI store
	l.sb    	57(r11),r2	    # movqi
.L3897:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L3894:
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.addi  	r3,r0,68	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L3896	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
.L3899:
	l.sb    	30(r2),r3	    # movqi
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE933:
	.size	sqlite3SchemaGet, .-sqlite3SchemaGet
	.align	4
.proc	addToSavepointBitvecs.clone.105
	.type	addToSavepointBitvecs.clone.105, @function
addToSavepointBitvecs.clone.105:
.LFB1353:
	l.sw    	-20(r1),r16	 # SI store
.LCFI1495:
	l.sw    	-16(r1),r18	 # SI store
.LCFI1496:
	l.sw    	-12(r1),r20	 # SI store
.LCFI1497:
	l.sw    	-8(r1),r22	 # SI store
.LCFI1498:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1499:
	l.sw    	-28(r1),r2	 # SI store
.LCFI1500:
	l.sw    	-24(r1),r14	 # SI store
.LCFI1501:
	l.lwz   	r7,0(r4)	 # SI load
	l.addi  	r20,r0,0	 # move immediate I
	l.addi  	r1,r1,-28
.LCFI1502:
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfles 	r7,r20
	l.bf	.L3901	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r2,r20,0	 # move reg to reg
	l.j     	.L3903	# delay slot filled
	l.ori   	r14,r20,0	 # move reg to reg
.L3902:
	l.sflts 	r14,r7
	l.bnf	.L3901
	l.nop			# nop delay slot
.L3903:
	l.lwz   	r6,0(r16)	 # SI load
	l.addi  	r14,r14,1
	l.add   	r6,r6,r2
	l.lwz   	r3,20(r6)	 # SI load
	l.sfltu 	r3,r18
	l.bf	.L3902	# delay slot filled
	l.addi  	r2,r2,28
	l.lwz   	r3,16(r6)	 # SI load
	l.jal   	sqlite3BitvecSet	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r7,0(r22)	 # SI load
	l.sflts 	r14,r7
	l.bf	.L3903	# delay slot filled
	l.or    	r20,r20,r11
.L3901:
	l.addi	r1,r1,28
	l.ori   	r11,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.LFE1353:
	.size	addToSavepointBitvecs.clone.105, .-addToSavepointBitvecs.clone.105
	.align	4
.proc	subjournalPage
	.type	subjournalPage, @function
subjournalPage:
.LFB313:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1503:
	l.lwz   	r2,16(r3)	 # SI load
	l.sw    	-16(r1),r14	 # SI store
.LCFI1504:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r3,64(r2)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI1505:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1506:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1507:
	l.lwz   	r4,0(r3)	 # SI load
	l.sfeqi	r4,0
.LCFI1508:
	l.bf	.L3907	# delay slot filled
	l.addi  	r1,r1,-20
	l.lwz   	r16,120(r2)	 # SI load
	l.lwz   	r4,48(r2)	 # SI load
	l.addi  	r16,r16,4
	l.lwz   	r6,12(r14)	 # SI load
	l.mul   	r16,r16,r4
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	write32bits	# delay slot filled
	l.lwz   	r18,0(r14)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L3910	# delay slot filled
	l.addi  	r7,r16,4
.L3908:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L3910:
	l.lwz   	r3,64(r2)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r5,120(r2)	 # SI load
	l.sfltu 	r7,r16
	l.bnf	.L3911	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r11,12(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3908
	l.nop			# nop delay slot
.L3907:
	l.lwz   	r5,48(r2)	 # SI load
.L3912:
	l.addi  	r3,r2,84
	l.addi  	r5,r5,1
	l.addi  	r4,r2,88
	l.sw    	48(r2),r5	 # SI store
	l.lwz   	r5,12(r14)	 # SI load
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	addToSavepointBitvecs.clone.105	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L3911:
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r11,12(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L3908
	l.nop			# nop delay slot
	l.j     	.L3912	# delay slot filled
	l.lwz   	r5,48(r2)	 # SI load
.LFE313:
	.size	subjournalPage, .-subjournalPage
	.align	4
.proc	yy_destructor.clone.108
	.type	yy_destructor.clone.108, @function
yy_destructor.clone.108:
.LFB1356:
	l.addi  	r4,r4,-160
	l.sw    	-4(r1),r9	 # SI store
.LCFI1509:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1510:
	l.andi  	r4,r4,0xffff	 # zero_extendqisi2
	l.sfgtui	r4,82
.LCFI1511:
	l.bnf	.L3923	# delay slot filled
	l.addi  	r1,r1,-8
.L3913:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L3923:
	l.movhi  	r2,hi(.L3922)
	l.slli  	r4,r4,2
	l.ori   	r2,r2,lo(.L3922)
	l.add   	r4,r4,r2
	l.lwz   	r4,0(r4)	 # SI load
	l.jr    	r4
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L3922:
	.word	.L3915
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3916
	.word	.L3916
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3917
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3917
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3918
	.word	.L3915
	.word	.L3913
	.word	.L3913
	.word	.L3917
	.word	.L3918
	.word	.L3916
	.word	.L3917
	.word	.L3916
	.word	.L3917
	.word	.L3913
	.word	.L3917
	.word	.L3913
	.word	.L3918
	.word	.L3918
	.word	.L3913
	.word	.L3913
	.word	.L3916
	.word	.L3919
	.word	.L3913
	.word	.L3919
	.word	.L3917
	.word	.L3916
	.word	.L3917
	.word	.L3917
	.word	.L3913
	.word	.L3919
	.word	.L3917
	.word	.L3917
	.word	.L3913
	.word	.L3916
	.word	.L3913
	.word	.L3913
	.word	.L3916
	.word	.L3917
	.word	.L3916
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3913
	.word	.L3920
	.word	.L3913
	.word	.L3921
	.word	.L3913
	.word	.L3916
	.word	.L3920
	.word	.L3913
	.word	.L3916
	.section .text
.L3921:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r4,0(r6)	 # SI load
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3IdListDelete	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L3915:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r4,0(r5)	 # SI load
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3SelectDelete	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L3916:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r4,0(r5)	 # SI load
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ExprDelete	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L3917:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r4,0(r5)	 # SI load
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ExprListDelete	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L3918:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r4,0(r5)	 # SI load
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3SrcListDelete	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L3919:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r4,0(r5)	 # SI load
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3IdListDelete	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L3920:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi	r1,r1,8
	l.lwz   	r4,0(r5)	 # SI load
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3DeleteTriggerStep	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1356:
	.size	yy_destructor.clone.108, .-yy_destructor.clone.108
	.align	4
.proc	yy_pop_parser_stack
	.type	yy_pop_parser_stack, @function
yy_pop_parser_stack:
.LFB1168:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1512:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1513:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1514:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r3,0(r3)	 # SI load
	l.sflts 	r3,r14
.LCFI1515:
	l.bf	.L3925	# delay slot filled
	l.addi  	r1,r1,-12
	l.slli  	r6,r3,4
	l.addi  	r5,r3,1
	l.lwz   	r3,8(r2)	 # SI load
	l.add   	r4,r2,r6
	l.slli  	r5,r5,4
	l.lhz   	r14,14(r4)	 # zero_extendqisi2
	l.addi  	r6,r6,20
	l.ori   	r4,r14,0	 # move reg to reg
	l.add   	r5,r2,r5
	l.jal   	yy_destructor.clone.108	# delay slot filled
	l.add   	r6,r2,r6
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r3,r3,-1
	l.sw    	0(r2),r3	 # SI store
.L3925:
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1168:
	.size	yy_pop_parser_stack, .-yy_pop_parser_stack
	.section	.rodata.str1.1
.LC78:
	.string	"%s"
.LC79:
	.string	"%T"
.LC80:
	.string	"%s:%d"
	.section .text
	.align	4
.proc	selectColumnsFromExprList.clone.110
	.type	selectColumnsFromExprList.clone.110, @function
selectColumnsFromExprList.clone.110:
.LFB1358:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1516:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1517:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1518:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1519:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1520:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1521:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1522:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1523:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1524:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1525:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1526:
	l.addi  	r1,r1,-72
.LCFI1527:
	l.ori   	r22,r3,0	 # move reg to reg
	l.sw    	12(r1),r4	 # SI store
	l.sw    	20(r1),r6	 # SI store
	l.lwz   	r6,12(r1)	 # SI load
	l.slli  	r4,r4,2
	l.slli  	r2,r6,4
	l.lwz   	r8,20(r1)	 # SI load
	l.add   	r4,r4,r2
	l.sw    	0(r8),r6	 # SI store
	l.sw    	24(r1),r7	 # SI store
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.sw    	16(r1),r5	 # SI store
	l.lwz   	r2,24(r1)	 # SI load
	l.ori   	r20,r11,0	 # move reg to reg
	l.addi  	r11,r0,7	 # move immediate I
	l.sfeqi	r20,0
	l.bf	.L3928	# delay slot filled
	l.sw    	0(r2),r20	 # SI store
	l.addi  	r18,r0,0	 # move immediate I
	l.lwz   	r3,12(r1)	 # SI load
	l.sfles 	r3,r18
	l.bf	.L3929
	l.nop			# nop delay slot
	l.sw    	8(r1),r20	 # SI store
	l.ori   	r30,r18,0	 # move reg to reg
.L3948:
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r2,0(r6)	 # SI load
	l.add   	r2,r2,r30
	l.lwz   	r4,4(r2)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L3964	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
.L3933:
	l.lbz   	r2,30(r22)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L3940
	l.nop			# nop delay slot
.L3967:
	l.lbs   	r28,0(r16)	 # extendqisi2_no_sext_mem
	l.sfnei	r28,0
	l.bnf	.L3942	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
	l.addi  	r2,r2,1
.L3970:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L3970	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r8,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r16
	l.ori   	r8,r8,65535
	l.and   	r28,r2,r8
.L3942:
	l.sfeqi	r18,0
	l.bf	.L3971	# delay slot filled
	l.lwz   	r2,8(r1)	 # SI load
	l.addi  	r24,r0,0	 # move immediate I
	l.ori   	r2,r24,0	 # move reg to reg
.L3963:
	l.slli  	r12,r2,2
.L3972:
	l.slli  	r8,r2,4
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r2,r2,1
	l.add   	r8,r12,r8
	l.add   	r8,r20,r8
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.lwz   	r3,0(r8)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L3965	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sflts 	r2,r18
	l.bf	.L3972	# delay slot filled
	l.slli  	r12,r2,2
.L3944:
	l.lwz   	r2,8(r1)	 # SI load
.L3971:
	l.addi  	r18,r18,1
	l.lwz   	r3,12(r1)	 # SI load
	l.sw    	0(r2),r16	 # SI store
	l.sfges 	r18,r3
	l.bf	.L3929	# delay slot filled
	l.addi  	r30,r30,16
	l.addi  	r2,r2,20
	l.j     	.L3948	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
.L3958:
	l.lwz   	r2,24(r2)	 # SI load
.L3964:
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.sfeqi	r3,118
	l.bf	.L3958	# delay slot filled
	l.sfnei	r3,151
	l.bnf	.L3966
	l.nop			# nop delay slot
.L3935:
	l.lwz   	r3,12(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L3938
	l.nop			# nop delay slot
	l.addi  	r2,r2,12
.L3939:
	l.movhi  	r4,hi(.LC79)
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC79)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lbz   	r2,30(r22)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L3967	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L3940:
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.L3929:
	l.lbz   	r11,30(r22)	 # zero_extendqisi2
	l.sfeqi	r11,0
	l.bf	.L3928	# delay slot filled
	l.sfeqi	r18,0
	l.bf	.L3949	# delay slot filled
	l.ori   	r14,r20,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
.L3950:
	l.lwz   	r4,0(r14)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r2,1
	l.sfgts 	r18,r2
	l.bf	.L3950	# delay slot filled
	l.addi  	r14,r14,20
.L3949:
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.lwz   	r6,24(r1)	 # SI load
	l.lwz   	r2,20(r1)	 # SI load
	l.sw    	0(r6),r8	 # SI store
	l.sw    	0(r2),r8	 # SI store
	l.addi  	r11,r0,7	 # move immediate I
.L3928:
	l.addi	r1,r1,72
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L3965:
	l.add   	r3,r16,r28
	l.movhi  	r4,hi(.LC80)
	l.sb    	0(r3),r11	    # movqi
	l.ori   	r4,r4,lo(.LC80)
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r24,r24,1
	l.sw    	0(r1),r16	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	4(r1),r24	 # SI store
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.sfeqi	r26,0
	l.bf	.L3954	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
	l.j     	.L3963	# delay slot filled
	l.ori   	r16,r26,0	 # move reg to reg
.L3954:
	l.j     	.L3944	# delay slot filled
	l.ori   	r16,r26,0	 # move reg to reg
.L3966:
	l.lwz   	r3,56(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L3935
	l.nop			# nop delay slot
	l.lwz   	r2,40(r2)	 # SI load
	l.sfgesi	r2,0
	l.bnf	.L3968	# delay slot filled
	l.slli  	r4,r2,2
.L3969:
	l.slli  	r2,r2,4
	l.lwz   	r3,16(r3)	 # SI load
	l.add   	r2,r4,r2
	l.add   	r2,r3,r2
	l.lwz   	r5,0(r2)	 # SI load
.L3937:
	l.movhi  	r4,hi(.LC78)
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC78)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.j     	.L3933	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L3938:
	l.j     	.L3939	# delay slot filled
	l.addi  	r2,r2,4
.L3968:
	l.lwz   	r2,8(r3)	 # SI load
	l.movhi  	r5,hi(.LC21)
	l.sfltsi	r2,0
	l.bf	.L3937	# delay slot filled
	l.ori   	r5,r5,lo(.LC21)
	l.j     	.L3969	# delay slot filled
	l.slli  	r4,r2,2
.LFE1358:
	.size	selectColumnsFromExprList.clone.110, .-selectColumnsFromExprList.clone.110
	.section	.rodata.str1.1
.LC81:
	.string	"vtable constructor failed: %s"
.LC82:
	.string	"vtable constructor did not declare schema: %s"
.LC83:
	.string	"hidden"
.LC84:
	.string	" hidden"
	.section .text
	.align	4
.proc	vtabCallConstructor.clone.111
	.type	vtabCallConstructor.clone.111, @function
vtabCallConstructor.clone.111:
.LFB1359:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1528:
	l.ori   	r20,r4,0	 # move reg to reg
	l.movhi  	r4,hi(.LC78)
	l.sw    	-44(r1),r2	 # SI store
.LCFI1529:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1530:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1531:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1532:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1533:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1534:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1535:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1536:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1537:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1538:
	l.lwz   	r11,4(r20)	 # SI load
	l.addi  	r1,r1,-56
.LCFI1539:
	l.ori   	r4,r4,lo(.LC78)
	l.ori   	r30,r5,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r22,64(r20)	 # SI load
	l.lwz   	r24,60(r20)	 # SI load
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r26,r6,0	 # move reg to reg
	l.ori   	r18,r7,0	 # move reg to reg
	l.ori   	r16,r8,0	 # move reg to reg
	l.sw    	8(r1),r5	 # SI store
	l.sw    	4(r1),r5	 # SI store
	l.sw    	0(r1),r11	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.addi  	r28,r0,7	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L3974	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sw    	284(r2),r20	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,0(r26)	 # SI load
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.addi  	r7,r1,8
	l.jalr  	r18	# delay slot filled
	l.addi  	r8,r1,4
	l.sfnei	r11,0
	l.bf	.L3975	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.lwz   	r3,8(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L3976
	l.nop			# nop delay slot
	l.lwz   	r4,0(r30)	 # SI load
	l.sw    	0(r3),r4	 # SI store
	l.addi  	r4,r0,1	 # move immediate I
	l.sw    	4(r3),r4	 # SI store
	l.sw    	56(r20),r3	 # SI store
.L3976:
	l.lwz   	r22,284(r2)	 # SI load
	l.sfnei	r22,0
	l.bnf	.L4006	# delay slot filled
	l.movhi  	r4,hi(.LC82)
	l.lwz   	r5,4(r20)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC82)
	l.sw    	0(r1),r5	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.addi  	r28,r0,1	 # move immediate I
	l.j     	.L3978	# delay slot filled
	l.sw    	0(r16),r11	 # SI store
.L3975:
	l.lwz   	r5,4(r1)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L4007	# delay slot filled
	l.movhi  	r4,hi(.LC78)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC78)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.sw    	0(r16),r11	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,4(r1)	 # SI load
.L3978:
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r4,r14,0	 # move reg to reg
	l.sw    	284(r2),r3	 # SI store
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L3974:
	l.addi	r1,r1,56
.L4008:
	l.ori   	r11,r28,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L4006:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	284(r2),r5	 # SI store
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r24,r22,0	 # move reg to reg
	l.lwz   	r26,12(r20)	 # SI load
	l.sfgtsi	r26,0
	l.bnf	.L3974
	l.nop			# nop delay slot
.L3994:
	l.lwz   	r2,16(r20)	 # SI load
	l.add   	r2,r2,r22
	l.lwz   	r18,8(r2)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L3979
	l.nop			# nop delay slot
	l.lbs   	r16,0(r18)	 # extendqisi2_no_sext_mem
	l.sfeqi	r16,0
	l.bf	.L3980	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
	l.addi  	r2,r2,1
.L4009:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L4009	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r18
	l.ori   	r5,r5,65535
	l.and   	r16,r2,r5
.L3980:
	l.movhi  	r3,hi(.LC83)
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r3,lo(.LC83)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.addi  	r5,r0,6	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L4010	# delay slot filled
	l.sfnei	r16,0
	l.lbs   	r2,6(r18)	 # extendqisi2_no_sext_mem
	l.xori  	r3,r2,32
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L3986	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L3984	# delay slot filled
	l.sfnei	r16,0
	l.addi  	r14,r0,0	 # move immediate I
.L3986:
	l.sfges 	r14,r16
	l.bf	.L3979	# delay slot filled
	l.add   	r6,r18,r14
	l.lbs   	r2,6(r6)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L3990	# delay slot filled
	l.addi  	r5,r0,6	 # move immediate I
	l.addi  	r5,r0,7	 # move immediate I
.L3990:
	l.add   	r3,r5,r14
	l.sfgts 	r3,r16
	l.bf	.L3991	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
.L3992:
	l.add   	r3,r18,r3
	l.add   	r4,r18,r2
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.addi  	r2,r2,1
	l.sb    	0(r4),r3	    # movqi
	l.add   	r3,r2,r5
	l.sfles 	r3,r16
	l.bf	.L3992
	l.nop			# nop delay slot
.L3991:
	l.lbz   	r2,0(r6)	 # zero_extendqisi2
	l.addi  	r2,r2,-1
	l.sfgesi	r2,0
	l.bf	.L3993	# delay slot filled
	l.sflesi	r14,0
	l.bf	.L3993	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	-1(r6),r2	    # movqi
.L3993:
	l.lwz   	r2,16(r20)	 # SI load
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.add   	r2,r2,r22
	l.sb    	19(r2),r3	    # movqi
	l.lwz   	r26,12(r20)	 # SI load
.L3979:
	l.addi  	r24,r24,1
	l.sflts 	r24,r26
	l.bf	.L3994	# delay slot filled
	l.addi  	r22,r22,20
	l.j     	.L4008	# delay slot filled
	l.addi	r1,r1,56
.L3984:
.L4010:
	l.bnf	.L3979	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
.L3989:
	l.movhi  	r3,hi(.LC84)
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r3,lo(.LC84)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.addi  	r5,r0,7	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L3987
	l.nop			# nop delay slot
	l.lbs   	r3,7(r2)	 # extendqisi2_no_sext_mem
	l.xori  	r4,r3,32
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.sfltsi	r4,0
	l.bf	.L4001	# delay slot filled
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bnf	.L4001
	l.nop			# nop delay slot
.L3987:
	l.addi  	r14,r14,1
	l.sflts 	r14,r16
	l.bf	.L3989	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r24,r24,1
	l.sflts 	r24,r26
	l.bf	.L3994	# delay slot filled
	l.addi  	r22,r22,20
	l.j     	.L4008	# delay slot filled
	l.addi	r1,r1,56
.L4001:
	l.j     	.L3986	# delay slot filled
	l.addi  	r14,r14,1
.L4007:
	l.movhi  	r4,hi(.LC81)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC81)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
	l.j     	.L3978	# delay slot filled
	l.sw    	0(r16),r11	 # SI store
.LFE1359:
	.size	vtabCallConstructor.clone.111, .-vtabCallConstructor.clone.111
	.section	.rodata.str1.1
.LC85:
	.string	"name=%Q"
.LC86:
	.string	"%s OR name=%Q"
	.section .text
	.align	4
.proc	whereTempTriggers.clone.112
	.type	whereTempTriggers.clone.112, @function
whereTempTriggers.clone.112:
.LFB1360:
	l.lwz   	r5,8(r3)	 # SI load
	l.sw    	-20(r1),r2	 # SI store
.LCFI1540:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1541:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1542:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1543:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1544:
	l.lwz   	r2,72(r4)	 # SI load
	l.lwz   	r16,44(r5)	 # SI load
	l.addi  	r1,r1,-28
.LCFI1545:
	l.ori   	r18,r3,0	 # move reg to reg
	l.sfeq 	r16,r2
	l.bf	.L4012	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.jal   	sqlite3TriggerList.clone.90
	l.nop			# nop delay slot
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4012	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L4015	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L4013:
	l.lwz   	r2,40(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L4012
	l.nop			# nop delay slot
.L4015:
	l.lwz   	r3,28(r2)	 # SI load
	l.sfne 	r16,r3
	l.bf	.L4013	# delay slot filled
	l.movhi  	r4,hi(.LC86)
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfnei	r14,0
	l.bnf	.L4019	# delay slot filled
	l.ori   	r4,r4,lo(.LC86)
	l.sw    	0(r1),r14	 # SI store
	l.lwz   	r5,0(r2)	 # SI load
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r2,40(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L4015
	l.nop			# nop delay slot
.L4012:
	l.addi	r1,r1,28
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L4019:
	l.movhi  	r4,hi(.LC85)
	l.lwz   	r5,0(r2)	 # SI load
	l.ori   	r4,r4,lo(.LC85)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.j     	.L4013	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.LFE1360:
	.size	whereTempTriggers.clone.112, .-whereTempTriggers.clone.112
	.align	4
.proc	addWhereTerm.clone.116
	.type	addWhereTerm.clone.116, @function
addWhereTerm.clone.116:
.LFB1364:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1546:
	l.sw    	-40(r1),r2	 # SI store
.LCFI1547:
	l.sw    	-36(r1),r14	 # SI store
.LCFI1548:
	l.sw    	-32(r1),r16	 # SI store
.LCFI1549:
	l.sw    	-28(r1),r18	 # SI store
.LCFI1550:
	l.sw    	-24(r1),r20	 # SI store
.LCFI1551:
	l.sw    	-20(r1),r22	 # SI store
.LCFI1552:
	l.sw    	-16(r1),r24	 # SI store
.LCFI1553:
	l.sw    	-12(r1),r26	 # SI store
.LCFI1554:
	l.sw    	-8(r1),r28	 # SI store
.LCFI1555:
	l.addi  	r1,r1,-40
.LCFI1556:
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.ori   	r24,r5,0	 # move reg to reg
	l.ori   	r28,r7,0	 # move reg to reg
	l.ori   	r14,r8,0	 # move reg to reg
	l.lwz   	r20,44(r1)	 # SI load
	l.jal   	sqlite3CreateIdExpr	# delay slot filled
	l.lwz   	r26,48(r1)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3CreateIdExpr	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.sfnei	r16,0
	l.bnf	.L4024	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3CreateIdExpr	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r14,0
	l.bnf	.L4025	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
.L4022:
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3CreateIdExpr	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r4,r0,74	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sub   	r3,r0,r11
	l.or    	r3,r11,r3
	l.sfgesi	r3,0
	l.bf	.L4023	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.sub   	r3,r0,r26
	l.or    	r3,r3,r26
	l.sfgesi	r3,0
	l.bf	.L4023	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.lhz   	r3,2(r11)	 # zero_extendqisi2
	l.ori   	r3,r3,1
	l.sw    	52(r11),r4	 # SI store
	l.sh    	2(r11),r3	 # movhi
.L4023:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3ExprAnd	# delay slot filled
	l.lwz   	r4,0(r20)	 # SI load
	l.sw    	0(r20),r11	 # SI store
	l.addi	r1,r1,40
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L4024:
	l.lwz   	r16,0(r24)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3CreateIdExpr	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r14,0
	l.bf	.L4022	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
.L4025:
	l.j     	.L4022	# delay slot filled
	l.lwz   	r14,0(r28)	 # SI load
.LFE1364:
	.size	addWhereTerm.clone.116, .-addWhereTerm.clone.116
	.align	4
.proc	resolveAlias.clone.117
	.type	resolveAlias.clone.117, @function
resolveAlias.clone.117:
.LFB1365:
	l.sw    	-12(r1),r24	 # SI store
.LCFI1557:
	l.slli  	r24,r5,4
	l.sw    	-36(r1),r2	 # SI store
.LCFI1558:
	l.lwz   	r2,0(r4)	 # SI load
	l.sw    	-32(r1),r14	 # SI store
.LCFI1559:
	l.add   	r2,r2,r24
	l.sw    	-16(r1),r22	 # SI store
.LCFI1560:
	l.lwz   	r14,0(r3)	 # SI load
	l.lwz   	r22,0(r2)	 # SI load
	l.sw    	-28(r1),r16	 # SI store
.LCFI1561:
	l.sw    	-24(r1),r18	 # SI store
.LCFI1562:
	l.sw    	-20(r1),r20	 # SI store
.LCFI1563:
	l.sw    	-8(r1),r26	 # SI store
.LCFI1564:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1565:
	l.ori   	r20,r4,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI1566:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r16,r6,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r26,r7,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4026	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r11,4
	l.jal   	sqlite3TokenCopy	# delay slot filled
	l.addi  	r5,r22,4
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.sfeqi	r3,151
	l.bf	.L4028
	l.nop			# nop delay slot
	l.lbs   	r3,0(r26)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,71
	l.bf	.L4028	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,24	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4026	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r20)	 # SI load
	l.add   	r24,r3,r24
	l.lhz   	r3,12(r24)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L4029
	l.nop			# nop delay slot
	l.lwz   	r4,428(r18)	 # SI load
	l.addi  	r4,r4,1
	l.andi  	r3,r4,0xffff	 # zero_extendqisi2
	l.sw    	428(r18),r4	 # SI store
	l.sh    	12(r24),r3	 # movhi
.L4029:
	l.sw    	36(r2),r3	 # SI store
.L4028:
	l.lhz   	r3,2(r16)	 # zero_extendqisi2
	l.andi  	r3,r3,256
	l.sfeqi	r3,0
	l.bf	.L4031	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.lwz   	r4,32(r16)	 # SI load
	l.ori   	r3,r3,256
	l.sw    	32(r2),r4	 # SI store
	l.sh    	2(r2),r3	 # movhi
	l.ori   	r3,r14,0	 # move reg to reg
.L4031:
	l.jal   	sqlite3ExprClear	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,64	 # move immediate I
	l.addi	r1,r1,36
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r26,-8(r1)	 # SI load
.L4026:
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.LFE1365:
	.size	resolveAlias.clone.117, .-resolveAlias.clone.117
	.section	.rodata.str1.1
.LC87:
	.string	"no such column"
.LC88:
	.string	"ambiguous column name"
.LC89:
	.string	"new"
.LC90:
	.string	"old"
.LC91:
	.string	"misuse of aliased aggregate %s"
.LC92:
	.string	"%s: %s.%s.%s"
.LC93:
	.string	"%s: %s.%s"
.LC94:
	.string	"%s: %s"
	.global __ashldi3
.LC95:
	.string	"access to %s.%s.%s is prohibited"
.LC96:
	.string	"access to %s.%s is prohibited"
	.section	.rodata.cst4,"aM",@progbits,4
	.align	4
.LC97:
	.long	-1000000
	.section .text
	.align	4
.proc	lookupName
	.type	lookupName, @function
lookupName:
.LFB713:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1567:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1568:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1569:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1570:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1571:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1572:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1573:
	l.lwz   	r30,0(r3)	 # SI load
	l.sw    	-32(r1),r18	 # SI store
.LCFI1574:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1575:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1576:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1577:
	l.addi  	r1,r1,-108
.LCFI1578:
	l.ori   	r14,r5,0	 # move reg to reg
	l.sw    	48(r1),r3	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r2,r6,0	 # move reg to reg
	l.sw    	56(r1),r7	 # SI store
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.sw    	20(r1),r8	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.sw    	44(r1),r11	 # SI store
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.lbz   	r2,30(r30)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L4103	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r3,44(r1)	 # SI load
	l.sub   	r5,r0,r28
	l.sub   	r4,r0,r3
	l.or    	r5,r28,r5
	l.or    	r4,r3,r4
	l.srli  	r5,r5,31
	l.xori  	r4,r4,0xffff
	l.lwz   	r6,20(r1)	 # SI load
	l.srli  	r4,r4,31
	l.addi  	r3,r0,-1	 # move immediate I
	l.lwz   	r7,56(r1)	 # SI load
	l.sw    	32(r1),r2	 # SI store
	l.sw    	36(r6),r3	 # SI store
	l.sw    	56(r6),r2	 # SI store
	l.sw    	36(r1),r7	 # SI store
	l.sw    	40(r1),r2	 # SI store
	l.ori   	r14,r2,0	 # move reg to reg
	l.sw    	16(r1),r2	 # SI store
	l.sw    	52(r1),r5	 # SI store
	l.sw    	60(r1),r4	 # SI store
.L4135:
	l.lwz   	r6,16(r1)	 # SI load
.L4157:
	l.sub   	r2,r0,r6
	l.or    	r2,r2,r6
	l.xori  	r2,r2,0xffff
	l.srli  	r2,r2,31
	l.sfeqi	r2,0
	l.bf	.L4153
	l.nop			# nop delay slot
.L4143:
	l.lwz   	r7,36(r1)	 # SI load
	l.sub   	r3,r0,r7
	l.or    	r3,r7,r3
	l.sfltsi	r3,0
	l.bnf	.L4153	# delay slot filled
	l.sfeqi	r2,0
	l.lwz   	r2,36(r1)	 # SI load
	l.lwz   	r2,4(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L4035	# delay slot filled
	l.sw    	16(r1),r2	 # SI store
	l.lhs   	r3,0(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	24(r1),r3	 # SI store
	l.sfles 	r3,r4
	l.bf	.L4035	# delay slot filled
	l.sw    	16(r1),r4	 # SI store
	l.addi  	r18,r2,4
	l.ori   	r24,r4,0	 # move reg to reg
.L4054:
	l.lwz   	r22,12(r18)	 # SI load
	l.movhi  	r5,hi(.LC97)
	l.lwz   	r16,72(r22)	 # SI load
	l.ori   	r5,r5,lo(.LC97)
	l.sfeqi	r16,0
	l.bf	.L4036	# delay slot filled
	l.lwz   	r2,0(r5)	 # SI load
	l.lwz   	r13,4(r30)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.sfles 	r13,r2
	l.bf	.L4154	# delay slot filled
	l.sfeqi	r28,0
	l.lwz   	r5,8(r30)	 # SI load
	l.lwz   	r6,20(r5)	 # SI load
	l.sfeq 	r16,r6
	l.bf	.L4154	# delay slot filled
	l.sfeqi	r28,0
	l.j     	.L4037	# delay slot filled
	l.addi  	r5,r5,44
.L4038:
	l.lwz   	r12,0(r5)	 # SI load
	l.sfeq 	r16,r12
	l.bf	.L4036	# delay slot filled
	l.addi  	r5,r5,24
.L4037:
	l.addi  	r2,r2,1
	l.sflts 	r2,r13
	l.bf	.L4038
	l.nop			# nop delay slot
.L4036:
	l.sfeqi	r28,0
.L4154:
	l.bf	.L4155	# delay slot filled
	l.addi  	r7,r14,1
	l.lwz   	r3,8(r18)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L4040
	l.nop			# nop delay slot
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L4137
	l.nop			# nop delay slot
.L4039:
	l.addi  	r7,r14,1
.L4155:
	l.sfnei	r14,0
	l.bf	.L4044	# delay slot filled
	l.sw    	28(r1),r7	 # SI store
	l.lwz   	r2,24(r18)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.sw    	32(r1),r16	 # SI store
	l.sw    	36(r3),r2	 # SI store
	l.sw    	56(r3),r22	 # SI store
	l.sw    	40(r1),r18	 # SI store
.L4044:
	l.lwz   	r26,12(r22)	 # SI load
	l.sflesi	r26,0
	l.bf	.L4138	# delay slot filled
	l.lwz   	r2,16(r22)	 # SI load
	l.j     	.L4046	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L4047:
	l.sfges 	r14,r26
	l.bf	.L4138
	l.nop			# nop delay slot
.L4046:
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r2,r2,20
	l.sfnei	r11,0
	l.bf	.L4047	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r3,24(r18)	 # SI load
	l.lwz   	r4,20(r1)	 # SI load
	l.addi  	r5,r5,1
	l.lwz   	r2,8(r22)	 # SI load
	l.sw    	16(r1),r5	 # SI store
	l.sw    	36(r4),r3	 # SI store
	l.sfne 	r2,r14
	l.bnf	.L4140	# delay slot filled
	l.sw    	56(r4),r22	 # SI store
.L4048:
	l.lwz   	r6,24(r1)	 # SI load
	l.lwz   	r7,20(r1)	 # SI load
	l.addi  	r2,r6,-1
	l.sfgts 	r2,r24
	l.bf	.L4049	# delay slot filled
	l.sw    	40(r7),r14	 # SI store
	l.sw    	40(r1),r18	 # SI store
	l.addi  	r24,r24,1
	l.lwz   	r2,24(r1)	 # SI load
	l.sw    	32(r1),r16	 # SI store
	l.addi  	r18,r18,52
	l.sfgts 	r2,r24
	l.bf	.L4054	# delay slot filled
	l.lwz   	r14,28(r1)	 # SI load
.L4035:
	l.lwz   	r3,52(r1)	 # SI load
	l.sfeqi	r3,0
.L4168:
	l.bf	.L4156	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r4,60(r1)	 # SI load
	l.sfnei	r4,0
	l.bf	.L4055	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
.L4156:
	l.sub   	r2,r0,r5
	l.or    	r2,r2,r5
	l.xori  	r2,r2,0xffff
	l.srli  	r2,r2,31
.L4057:
	l.xori  	r3,r14,1
.L4162:
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfltsi	r3,0
	l.bnf	.L4141	# delay slot filled
	l.sfeqi	r2,0
	l.lwz   	r6,16(r1)	 # SI load
.L4160:
	l.sfnei	r6,0
	l.bf	.L4157	# delay slot filled
	l.lwz   	r7,36(r1)	 # SI load
.L4161:
	l.lwz   	r22,8(r7)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L4068	# delay slot filled
	l.sfnei	r28,0
	l.bnf	.L4142
	l.nop			# nop delay slot
.L4068:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r4,36(r1)	 # SI load
	l.sw    	16(r1),r5	 # SI store
	l.lwz   	r4,32(r4)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.sub   	r2,r0,r6
	l.or    	r2,r2,r6
	l.xori  	r2,r2,0xffff
	l.srli  	r2,r2,31
	l.sfeqi	r2,0
	l.bnf	.L4143	# delay slot filled
	l.sw    	36(r1),r4	 # SI store
	l.sfeqi	r2,0
.L4153:
	l.bnf	.L4144	# delay slot filled
	l.sub   	r2,r0,r28
	l.lwz   	r7,16(r1)	 # SI load
.L4165:
	l.sfeqi	r7,1
.L4166:
	l.bf	.L4077	# delay slot filled
	l.movhi  	r2,hi(.LC88)
	l.sfnei	r7,0
	l.bf	.L4078	# delay slot filled
	l.ori   	r2,r2,lo(.LC88)
	l.movhi  	r2,hi(.LC87)
	l.ori   	r2,r2,lo(.LC87)
.L4078:
	l.lwz   	r3,44(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L4079	# delay slot filled
	l.movhi  	r4,hi(.LC92)
	l.lwz   	r5,44(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC92)
	l.sw    	0(r1),r2	 # SI store
	l.sw    	4(r1),r5	 # SI store
	l.sw    	8(r1),r28	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	12(r1),r20	 # SI store
	l.lwz   	r6,56(r1)	 # SI load
.L4150:
	l.lwz   	r2,16(r6)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	16(r6),r2	 # SI store
.L4077:
	l.lwz   	r7,40(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.sub   	r2,r0,r7
	l.or    	r2,r7,r2
	l.sfgesi	r2,0
	l.bf	.L4033	# delay slot filled
	l.lwz   	r5,40(r3)	 # SI load
	l.sfltsi	r5,0
	l.bf	.L4158	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.sflesi	r5,63
	l.bf	.L4159	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r5,r0,63	 # move immediate I
.L4159:
	l.jal   	__ashldi3	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r4,40(r1)	 # SI load
	l.lwz   	r3,36(r4)	 # SI load
	l.lwz   	r2,40(r4)	 # SI load
	l.or    	r11,r3,r11
	l.or    	r12,r2,r12
	l.sw    	36(r4),r11	 # SI store
	l.sw    	40(r4),r12	 # SI store
.L4033:
.L4083:
	l.ori   	r3,r30,0	 # move reg to reg
.L4158:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,44(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,20(r7)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r2,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.sw    	20(r2),r5	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r7,r0,-105	 # movqi: move immediate
	l.sw    	24(r2),r6	 # SI store
	l.sb    	0(r2),r7	    # movqi
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r2,16(r1)	 # SI load
	l.sfnei	r2,1
	l.bnf	.L4072	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L4071:
	l.addi	r1,r1,108
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L4040:
	l.lwz   	r3,4(r22)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L4137
	l.nop			# nop delay slot
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L4137	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L4039	# delay slot filled
	l.add   	r3,r2,r2
	l.lwz   	r5,8(r30)	 # SI load
	l.add   	r2,r3,r2
	l.ori   	r4,r6,0	 # move reg to reg
	l.slli  	r2,r2,3
	l.add   	r2,r5,r2
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L4155	# delay slot filled
	l.addi  	r7,r14,1
.L4137:
	l.addi  	r18,r18,52
.L4041:
	l.addi  	r24,r24,1
	l.lwz   	r2,24(r1)	 # SI load
	l.sfgts 	r2,r24
	l.bf	.L4054	# delay slot filled
	l.lwz   	r3,52(r1)	 # SI load
	l.j     	.L4168	# delay slot filled
	l.sfeqi	r3,0
.L4138:
	l.addi  	r18,r18,52
	l.j     	.L4041	# delay slot filled
	l.lwz   	r14,28(r1)	 # SI load
.L4049:
	l.addi  	r26,r18,52
	l.lbz   	r2,21(r26)	 # zero_extendqisi2
	l.andi  	r2,r2,4
	l.sfeqi	r2,0
	l.bf	.L4050
	l.nop			# nop delay slot
	l.sw    	40(r1),r18	 # SI store
	l.addi  	r24,r24,1
	l.sw    	32(r1),r16	 # SI store
	l.addi  	r18,r18,104
	l.j     	.L4041	# delay slot filled
	l.lwz   	r14,28(r1)	 # SI load
.L4140:
	l.j     	.L4048	# delay slot filled
	l.addi  	r14,r0,-1	 # move immediate I
.L4050:
	l.lwz   	r3,32(r26)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L4110
	l.nop			# nop delay slot
	l.lwz   	r22,4(r3)	 # SI load
	l.sflesi	r22,0
	l.bf	.L4110
	l.nop			# nop delay slot
	l.j     	.L4052	# delay slot filled
	l.lwz   	r14,0(r3)	 # SI load
.L4051:
	l.bnf	.L4110	# delay slot filled
	l.addi  	r14,r14,8
.L4052:
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r2,r2,1
	l.sfnei	r11,0
	l.bf	.L4051	# delay slot filled
	l.sflts 	r2,r22
	l.sw    	40(r1),r18	 # SI store
	l.addi  	r24,r24,1
	l.sw    	32(r1),r16	 # SI store
	l.addi  	r18,r26,52
	l.j     	.L4041	# delay slot filled
	l.lwz   	r14,28(r1)	 # SI load
.L4055:
	l.sfnei	r6,0
	l.bf	.L4135	# delay slot filled
	l.lwz   	r7,48(r1)	 # SI load
	l.lwz   	r16,484(r7)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L4057	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.lwz   	r2,4(r16)	 # SI load
	l.sfeqi	r2,-1
	l.bf	.L4059	# delay slot filled
	l.movhi  	r3,hi(.LC89)
	l.ori   	r4,r28,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r3,r3,lo(.LC89)
	l.sfnei	r11,0
	l.bf	.L4059	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r22,0(r16)	 # SI load
	l.sw    	36(r3),r2	 # SI store
	l.addi  	r24,r16,12
.L4060:
	l.sfeqi	r22,0
	l.bf	.L4057	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.lwz   	r5,72(r22)	 # SI load
	l.lwz   	r18,12(r22)	 # SI load
	l.sw    	32(r1),r5	 # SI store
	l.lwz   	r16,16(r22)	 # SI load
	l.sflesi	r18,0
	l.bf	.L4116	# delay slot filled
	l.addi  	r14,r14,1
	l.j     	.L4065	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L4061:
	l.sfges 	r2,r18
	l.bf	.L4116
	l.nop			# nop delay slot
.L4065:
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r16,r16,20
	l.sfnei	r11,0
	l.bf	.L4061	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.lwz   	r4,8(r22)	 # SI load
	l.sfne 	r4,r2
	l.bnf	.L4145	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L4062:
	l.lwz   	r6,20(r1)	 # SI load
	l.sflesi	r3,31
	l.sw    	40(r6),r2	 # SI store
	l.bf	.L4063	# delay slot filled
	l.sw    	56(r6),r22	 # SI store
	l.addi  	r7,r0,-1	 # move immediate I
	l.sw    	0(r24),r7	 # SI store
.L4064:
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L4135	# delay slot filled
	l.sw    	16(r1),r5	 # SI store
.L4110:
	l.sw    	40(r1),r18	 # SI store
	l.sw    	32(r1),r16	 # SI store
	l.ori   	r18,r26,0	 # move reg to reg
	l.j     	.L4041	# delay slot filled
	l.lwz   	r14,28(r1)	 # SI load
.L4141:
	l.bf	.L4160	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3IsRowid	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L4161	# delay slot filled
	l.lwz   	r7,36(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r5,r0,100	 # movqi: move immediate
	l.sw    	40(r3),r4	 # SI store
	l.sb    	1(r3),r5	    # movqi
	l.j     	.L4135	# delay slot filled
	l.sw    	16(r1),r14	 # SI store
.L4116:
	l.j     	.L4057	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L4059:
	l.lwz   	r18,8(r16)	 # SI load
	l.sfeqi	r18,-1
	l.bf	.L4116	# delay slot filled
	l.movhi  	r3,hi(.LC90)
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r3,r3,lo(.LC90)
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L4162	# delay slot filled
	l.xori  	r3,r14,1
	l.lwz   	r4,20(r1)	 # SI load
	l.lwz   	r22,0(r16)	 # SI load
	l.sw    	36(r4),r18	 # SI store
	l.j     	.L4060	# delay slot filled
	l.addi  	r24,r16,16
.L4142:
	l.lwz   	r24,0(r22)	 # SI load
	l.sflesi	r24,0
	l.bf	.L4068	# delay slot filled
	l.ori   	r2,r28,0	 # move reg to reg
	l.j     	.L4073	# delay slot filled
	l.lwz   	r16,12(r22)	 # SI load
.L4069:
	l.addi  	r2,r2,1
.L4163:
	l.sflts 	r2,r24
	l.bnf	.L4068	# delay slot filled
	l.addi  	r16,r16,16
.L4073:
	l.lwz   	r18,4(r16)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.sfeqi	r18,0
	l.bf	.L4069	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3StrICmp
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L4163	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.lwz   	r3,36(r1)	 # SI load
	l.lbz   	r4,20(r3)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L4070	# delay slot filled
	l.lwz   	r3,0(r16)	 # SI load
	l.lhz   	r3,2(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,2
	l.sfeqi	r3,0
	l.bnf	.L4146
	l.nop			# nop delay slot
.L4070:
	l.movhi  	r7,hi(.LC15)
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r22,12
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r6,20(r1)	 # SI load
	l.jal   	resolveAlias.clone.117	# delay slot filled
	l.ori   	r7,r7,lo(.LC15)
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
.L4072:
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r4,36(r1)	 # SI load
	l.lwz   	r16,0(r3)	 # SI load
	l.lwz   	r11,248(r16)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L4084	# delay slot filled
	l.lwz   	r3,4(r4)	 # SI load
	l.lwz   	r5,32(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L4164	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.lwz   	r4,4(r16)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.sfles 	r4,r14
	l.bf	.L4085	# delay slot filled
	l.lwz   	r6,32(r1)	 # SI load
	l.lwz   	r2,8(r16)	 # SI load
	l.lwz   	r5,20(r2)	 # SI load
	l.sfeq 	r6,r5
	l.bf	.L4085	# delay slot filled
	l.addi  	r2,r2,44
	l.j     	.L4169	# delay slot filled
	l.addi  	r14,r14,1
.L4087:
	l.lwz   	r5,0(r2)	 # SI load
	l.sfeq 	r7,r5
	l.bf	.L4085	# delay slot filled
	l.addi  	r2,r2,24
	l.addi  	r14,r14,1
.L4169:
	l.sfgts 	r4,r14
	l.bf	.L4087	# delay slot filled
	l.lwz   	r7,32(r1)	 # SI load
.L4085:
	l.sfeqi	r3,0
	l.bf	.L4101	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lhs   	r5,0(r3)	 # extendhisi2_no_sext_mem
	l.sfles 	r5,r2
	l.bf	.L4088	# delay slot filled
	l.lwz   	r7,20(r1)	 # SI load
	l.lwz   	r4,28(r3)	 # SI load
	l.lwz   	r6,36(r7)	 # SI load
	l.sfeq 	r6,r4
	l.bf	.L4088	# delay slot filled
	l.addi  	r4,r3,80
	l.j     	.L4170	# delay slot filled
	l.addi  	r2,r2,1
.L4089:
	l.lwz   	r7,0(r4)	 # SI load
	l.sfeq 	r6,r7
	l.bf	.L4088	# delay slot filled
	l.addi  	r4,r4,52
	l.addi  	r2,r2,1
.L4170:
	l.sfgts 	r5,r2
	l.bf	.L4089
	l.nop			# nop delay slot
.L4088:
	l.add   	r4,r2,r2
	l.add   	r4,r4,r2
	l.slli  	r5,r4,4
	l.add   	r4,r4,r5
	l.add   	r2,r4,r2
	l.add   	r3,r3,r2
	l.lwz   	r2,16(r3)	 # SI load
.L4090:
	l.sfeqi	r2,0
	l.bf	.L4084	# delay slot filled
	l.lwz   	r4,20(r1)	 # SI load
	l.lwz   	r3,40(r4)	 # SI load
	l.sfltsi	r3,0
	l.bf	.L4091	# delay slot filled
	l.movhi  	r18,hi(.LC17)
.L4139:
	l.slli  	r4,r3,2
	l.slli  	r3,r3,4
	l.lwz   	r5,16(r2)	 # SI load
	l.add   	r3,r4,r3
	l.add   	r3,r5,r3
	l.lwz   	r18,0(r3)	 # SI load
	l.add   	r6,r14,r14
.L4152:
	l.lwz   	r7,8(r16)	 # SI load
	l.add   	r6,r6,r14
	l.lwz   	r3,252(r16)	 # SI load
	l.slli  	r6,r6,3
	l.addi  	r4,r0,20	 # move immediate I
	l.lwz   	r5,4(r2)	 # SI load
	l.add   	r7,r7,r6
	l.ori   	r6,r18,0	 # move reg to reg
	l.lwz   	r20,0(r7)	 # SI load
	l.lwz   	r7,48(r1)	 # SI load
	l.lwz   	r8,488(r7)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.sfnei	r11,2
	l.bnf	.L4147	# delay slot filled
	l.sfnei	r11,1
	l.bnf	.L4148	# delay slot filled
	l.sfeqi	r11,0
	l.bf	.L4164	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.movhi  	r4,hi(.LC46)
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC46)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.lwz   	r7,48(r1)	 # SI load
	l.sw    	4(r7),r2	 # SI store
.L4084:
	l.lwz   	r4,56(r1)	 # SI load
.L4164:
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r2,12(r4)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r2,r2,1
	l.sfeq 	r4,r5
	l.bf	.L4071	# delay slot filled
	l.sw    	12(r4),r2	 # SI store
	l.ori   	r2,r4,0	 # move reg to reg
.L4100:
	l.lwz   	r2,32(r2)	 # SI load
	l.lwz   	r4,36(r1)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.sfne 	r2,r4
	l.addi  	r3,r3,1
	l.bf	.L4100	# delay slot filled
	l.sw    	12(r2),r3	 # SI store
	l.j     	.L4071	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L4144:
	l.or    	r2,r28,r2
	l.sfltsi	r2,0
	l.bf	.L4165	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.lhz   	r2,2(r3)	 # zero_extendqisi2
	l.andi  	r2,r2,64
	l.sfeqi	r2,0
	l.bf	.L4166	# delay slot filled
	l.sfeqi	r7,1
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r5,r0,94	 # movqi: move immediate
	l.sw    	56(r4),r6	 # SI store
	l.sb    	0(r4),r5	    # movqi
	l.j     	.L4071	# delay slot filled
	l.ori   	r11,r6,0	 # move reg to reg
.L4063:
	l.addi  	r2,r0,1	 # move immediate I
	l.sll   	r3,r2,r3
	l.lwz   	r2,0(r24)	 # SI load
	l.or    	r2,r2,r3
	l.j     	.L4064	# delay slot filled
	l.sw    	0(r24),r2	 # SI store
.L4145:
	l.j     	.L4062	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
.L4103:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r6,56(r1)	 # SI load
	l.sw    	32(r1),r5	 # SI store
	l.sw    	36(r1),r6	 # SI store
	l.j     	.L4033	# delay slot filled
	l.sw    	16(r1),r5	 # SI store
.L4146:
	l.movhi  	r4,hi(.LC91)
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC91)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L4071	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
.L4079:
	l.sfeqi	r28,0
	l.bf	.L4081	# delay slot filled
	l.movhi  	r4,hi(.LC93)
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC93)
	l.sw    	0(r1),r2	 # SI store
	l.sw    	4(r1),r28	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	8(r1),r20	 # SI store
	l.j     	.L4150	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
.L4148:
	l.sub   	r3,r0,r14
	l.or    	r3,r3,r14
	l.srli  	r3,r3,31
	l.sfnei	r3,0
	l.bf	.L4128
	l.nop			# nop delay slot
	l.lwz   	r4,4(r16)	 # SI load
	l.sfgtsi	r4,2
	l.bf	.L4167	# delay slot filled
	l.andi  	r11,r11,0xff	 # zero_extendqisi2
	l.ori   	r11,r3,0	  # movqi: move reg to reg
	l.andi  	r11,r11,0xff	 # zero_extendqisi2
.L4167:
	l.sfeqi	r11,0
	l.bf	.L4096	# delay slot filled
	l.movhi  	r4,hi(.LC96)
.L4128:
	l.sw    	0(r1),r20	 # SI store
	l.movhi  	r4,hi(.LC95)
	l.lwz   	r2,4(r2)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC95)
	l.sw    	4(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	8(r1),r18	 # SI store
	l.addi  	r2,r0,23	 # move immediate I
.L4151:
	l.lwz   	r6,48(r1)	 # SI load
	l.j     	.L4084	# delay slot filled
	l.sw    	4(r6),r2	 # SI store
.L4096:
	l.lwz   	r2,4(r2)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC96)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r18	 # SI store
	l.j     	.L4151	# delay slot filled
	l.addi  	r2,r0,23	 # move immediate I
.L4147:
	l.addi  	r3,r0,98	 # movqi: move immediate
	l.lwz   	r2,20(r1)	 # SI load
	l.j     	.L4084	# delay slot filled
	l.sb    	0(r2),r3	    # movqi
.L4091:
	l.lwz   	r3,8(r2)	 # SI load
	l.sfltsi	r3,0
	l.bnf	.L4139	# delay slot filled
	l.ori   	r18,r18,lo(.LC17)
	l.j     	.L4152	# delay slot filled
	l.add   	r6,r14,r14
.L4101:
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r2,484(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L4164	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.j     	.L4090	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L4081:
	l.movhi  	r4,hi(.LC94)
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC94)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r20	 # SI store
	l.j     	.L4150	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
.LFE713:
	.size	lookupName, .-lookupName
	.section	.rodata.str1.1
.LC98:
	.string	"not authorized to use function: %s"
.LC99:
	.string	"misuse of aggregate function %.*s()"
.LC100:
	.string	"no such function: %.*s"
.LC101:
	.string	"wrong number of arguments to function %.*s()"
.LC102:
	.string	"subqueries prohibited in CHECK constraints"
.LC103:
	.string	"parameters prohibited in CHECK constraints"
	.section .text
	.align	4
.proc	resolveExprStep
	.type	resolveExprStep, @function
resolveExprStep:
.LFB714:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1579:
	l.ori   	r18,r3,0	 # move reg to reg
	l.lhz   	r3,2(r4)	 # zero_extendqisi2
	l.sw    	-44(r1),r2	 # SI store
.LCFI1580:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1581:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1582:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1583:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1584:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1585:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1586:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1587:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1588:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1589:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r16,12(r18)	 # SI load
	l.andi  	r4,r3,4
	l.addi  	r1,r1,-52
.LCFI1590:
	l.lwz   	r20,0(r16)	 # SI load
	l.sfnei	r4,0
	l.bf	.L4172	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.ori   	r3,r3,4
	l.lbz   	r5,0(r2)	 # zero_extendqisi2
	l.sfeqi	r5,116
	l.bf	.L4174	# delay slot filled
	l.sh    	2(r2),r3	 # movhi
	l.sfgtui	r5,116
	l.bf	.L4179	# delay slot filled
	l.sfeqi	r5,133
	l.sfeqi	r5,26
	l.bf	.L4175	# delay slot filled
	l.sfeqi	r5,70
	l.bf	.L4174	# delay slot filled
	l.sfeqi	r5,20
	l.bf	.L4174
	l.nop			# nop delay slot
.L4173:
	l.lwz   	r2,64(r20)	 # SI load
.L4205:
	l.sfnei	r2,0
	l.bf	.L4172	# delay slot filled
	l.addi  	r14,r0,2	 # move immediate I
	l.lwz   	r2,0(r20)	 # SI load
	l.lbz   	r14,30(r2)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L4172
	l.nop			# nop delay slot
	l.addi  	r14,r0,2	 # move immediate I
.L4172:
	l.addi	r1,r1,52
.L4204:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L4179:
	l.bf	.L4177	# delay slot filled
	l.sfgtui	r5,133
	l.bf	.L4180	# delay slot filled
	l.sfeqi	r5,150
	l.sfeqi	r5,118
	l.bnf	.L4173
	l.nop			# nop delay slot
	l.lwz   	r6,24(r2)	 # SI load
	l.lbz   	r3,0(r6)	 # zero_extendqisi2
	l.sfnei	r3,26
	l.bnf	.L4199
	l.nop			# nop delay slot
	l.lwz   	r5,20(r6)	 # SI load
	l.lwz   	r4,20(r2)	 # SI load
	l.lwz   	r6,24(r6)	 # SI load
	l.addi  	r4,r4,4
	l.addi  	r5,r5,4
	l.addi  	r6,r6,4
.L4182:
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r7,r16,0	 # move reg to reg
	l.ori   	r8,r2,0	 # move reg to reg
	l.jal   	lookupName	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L4204	# delay slot filled
	l.addi	r1,r1,52
.L4174:
	l.andi  	r3,r3,4096
	l.sfeqi	r3,0
	l.bf	.L4173
	l.nop			# nop delay slot
	l.lbz   	r3,22(r16)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L4200	# delay slot filled
	l.lwz   	r14,12(r16)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
.L4206:
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.lwz   	r3,12(r16)	 # SI load
	l.sfeq 	r3,r14
	l.bf	.L4173
	l.nop			# nop delay slot
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.ori   	r3,r3,32
	l.j     	.L4173	# delay slot filled
	l.sh    	2(r2),r3	 # movhi
.L4175:
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.addi  	r6,r2,4
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	lookupName	# delay slot filled
	l.ori   	r8,r2,0	 # move reg to reg
	l.j     	.L4204	# delay slot filled
	l.addi	r1,r1,52
.L4177:
	l.lbz   	r2,22(r16)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L4173
	l.nop			# nop delay slot
	l.movhi  	r4,hi(.LC103)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC103)
	l.j     	.L4205	# delay slot filled
	l.lwz   	r2,64(r20)	 # SI load
.L4180:
	l.bf	.L4178	# delay slot filled
	l.sfeqi	r5,154
	l.bnf	.L4173
	l.nop			# nop delay slot
.L4178:
	l.lwz   	r22,28(r2)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L4183	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r6,0(r22)	 # SI load
.L4183:
	l.lwz   	r3,0(r20)	 # SI load
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.lwz   	r4,8(r3)	 # SI load
	l.lwz   	r26,8(r2)	 # SI load
	l.lwz   	r4,20(r4)	 # SI load
	l.ori   	r5,r5,65535
	l.lbz   	r28,57(r4)	 # zero_extendqisi2
	l.lwz   	r24,4(r2)	 # SI load
	l.and   	r26,r26,r5
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r5,r26,0	 # move reg to reg
	l.ori   	r7,r28,0	 # move reg to reg
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L4201	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r28,12(r11)	 # SI load
	l.addi  	r30,r0,0	 # move immediate I
	l.sub   	r3,r0,r28
	l.or    	r28,r28,r3
	l.xori  	r28,r28,0xffff
	l.srli  	r28,r28,31
.L4186:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,31	 # move immediate I
	l.lwz   	r6,24(r14)	 # SI load
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4187	# delay slot filled
	l.sfeqi	r28,0
	l.sfnei	r11,1
	l.bnf	.L4202
	l.nop			# nop delay slot
.L4188:
	l.addi  	r3,r0,98	 # movqi: move immediate
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L4172	# delay slot filled
	l.sb    	0(r2),r3	    # movqi
.L4187:
	l.bf	.L4207	# delay slot filled
	l.sfnei	r30,0
	l.lbz   	r3,20(r16)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L4189	# delay slot filled
	l.sfnei	r30,0
	l.movhi  	r4,hi(.LC99)
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC99)
.L4198:
	l.sw    	0(r1),r26	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r24	 # SI store
	l.lwz   	r2,16(r16)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	16(r16),r2	 # SI store
.L4190:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3WalkExprList	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L4204	# delay slot filled
	l.addi	r1,r1,52
.L4189:
.L4207:
	l.bf	.L4203	# delay slot filled
	l.movhi  	r4,hi(.LC101)
.L4191:
	l.sfeqi	r28,0
	l.bf	.L4190
	l.nop			# nop delay slot
	l.addi  	r5,r0,-104	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	0(r2),r5	    # movqi
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	20(r16),r3	    # movqi
	l.sb    	21(r16),r2	    # movqi
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3WalkExprList	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L4172	# delay slot filled
	l.sb    	20(r16),r2	    # movqi
.L4203:
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC101)
	l.sw    	0(r1),r26	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r24	 # SI store
	l.lwz   	r3,16(r16)	 # SI load
	l.addi  	r3,r3,1
	l.j     	.L4191	# delay slot filled
	l.sw    	16(r16),r3	 # SI store
.L4200:
	l.movhi  	r4,hi(.LC102)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC102)
	l.j     	.L4206	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L4199:
	l.lwz   	r5,20(r2)	 # SI load
	l.addi  	r6,r6,4
	l.j     	.L4182	# delay slot filled
	l.addi  	r5,r5,4
.L4202:
	l.movhi  	r4,hi(.LC98)
	l.lwz   	r5,24(r14)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC98)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r3,16(r16)	 # SI load
	l.addi  	r3,r3,1
	l.j     	.L4188	# delay slot filled
	l.sw    	16(r16),r3	 # SI store
.L4201:
	l.lwz   	r3,0(r20)	 # SI load
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r5,r26,0	 # move reg to reg
	l.addi  	r6,r0,-1	 # move immediate I
	l.ori   	r7,r28,0	 # move reg to reg
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.ori   	r8,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4185	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r28,r0,0	 # move immediate I
	l.j     	.L4186	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
.L4185:
	l.movhi  	r4,hi(.LC100)
	l.ori   	r3,r20,0	 # move reg to reg
	l.j     	.L4198	# delay slot filled
	l.ori   	r4,r4,lo(.LC100)
.LFE714:
	.size	resolveExprStep, .-resolveExprStep
	.section	.rodata.str1.1
.LC104:
	.string	"too many terms in %s BY clause"
.LC105:
	.string	"%r %s BY term out of range - should be between 1 and %d"
	.section .text
	.align	4
.proc	sqlite3ResolveOrderGroupBy.clone.118
	.type	sqlite3ResolveOrderGroupBy.clone.118, @function
sqlite3ResolveOrderGroupBy.clone.118:
.LFB1366:
	l.sw    	-32(r1),r2	 # SI store
.LCFI1591:
	l.sw    	-24(r1),r16	 # SI store
.LCFI1592:
	l.sw    	-20(r1),r18	 # SI store
.LCFI1593:
	l.sw    	-16(r1),r20	 # SI store
.LCFI1594:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1595:
	l.sw    	-28(r1),r14	 # SI store
.LCFI1596:
	l.sw    	-12(r1),r22	 # SI store
.LCFI1597:
	l.sw    	-8(r1),r24	 # SI store
.LCFI1598:
	l.ori   	r20,r5,0	 # move reg to reg
	l.addi  	r1,r1,-44
.LCFI1599:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r11,r5,0	 # move reg to reg
	l.ori   	r18,r6,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L4209	# delay slot filled
	l.lwz   	r2,0(r3)	 # SI load
	l.lbz   	r14,30(r2)	 # zero_extendqisi2
	l.addi  	r11,r0,0	 # move immediate I
	l.sfne 	r14,r11
	l.bf	.L4209
	l.nop			# nop delay slot
	l.lwz   	r12,0(r5)	 # SI load
	l.lwz   	r2,88(r2)	 # SI load
	l.sfles 	r12,r2
	l.bnf	.L4218	# delay slot filled
	l.sflesi	r12,0
	l.lwz   	r24,0(r4)	 # SI load
	l.lwz   	r2,12(r5)	 # SI load
	l.bf	.L4209	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
	l.addi  	r22,r24,12
.L4213:
	l.lhz   	r8,10(r2)	 # zero_extendqisi2
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.sfeqi	r8,0
	l.bf	.L4211	# delay slot filled
	l.addi  	r5,r8,-1
	l.lwz   	r6,0(r24)	 # SI load
	l.sfles 	r8,r6
	l.bnf	.L4219
	l.nop			# nop delay slot
	l.jal   	resolveAlias.clone.117	# delay slot filled
	l.lwz   	r6,0(r2)	 # SI load
	l.lwz   	r12,0(r20)	 # SI load
.L4211:
	l.addi  	r14,r14,1
	l.sfges 	r14,r12
	l.bnf	.L4213	# delay slot filled
	l.addi  	r2,r2,16
	l.addi  	r11,r0,0	 # move immediate I
.L4209:
	l.addi	r1,r1,44
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L4218:
	l.movhi  	r4,hi(.LC104)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC104)
	l.j     	.L4209	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L4219:
	l.movhi  	r4,hi(.LC105)
	l.addi  	r14,r14,1
	l.ori   	r4,r4,lo(.LC105)
	l.sw    	0(r1),r14	 # SI store
	l.sw    	4(r1),r18	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	8(r1),r6	 # SI store
	l.j     	.L4209	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.LFE1366:
	.size	sqlite3ResolveOrderGroupBy.clone.118, .-sqlite3ResolveOrderGroupBy.clone.118
	.align	4
.proc	resolveOrderGroupBy
	.type	resolveOrderGroupBy, @function
resolveOrderGroupBy:
.LFB720:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1600:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1601:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1602:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1603:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1604:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1605:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1606:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1607:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1608:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1609:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1610:
	l.ori   	r16,r5,0	 # move reg to reg
	l.addi  	r1,r1,-60
.LCFI1611:
	l.ori   	r26,r3,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r28,r6,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L4221	# delay slot filled
	l.ori   	r11,r5,0	 # move reg to reg
	l.lwz   	r4,0(r4)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.lwz   	r30,0(r4)	 # SI load
	l.lwz   	r22,0(r26)	 # SI load
	l.sflesi	r3,0
	l.bf	.L4222	# delay slot filled
	l.lwz   	r2,12(r5)	 # SI load
	l.addi  	r2,r2,10
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L4227	# delay slot filled
	l.addi  	r24,r1,12
.L4231:
	l.sh    	0(r2),r11	 # movhi
	l.addi  	r14,r14,1
.L4234:
	l.lwz   	r5,0(r16)	 # SI load
	l.sfles 	r5,r14
	l.bf	.L4222	# delay slot filled
	l.addi  	r2,r2,16
.L4233:
	l.lwz   	r4,0(r20)	 # SI load
.L4227:
	l.lwz   	r18,-10(r2)	 # SI load
	l.addi  	r5,r4,12
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	resolveAsName.clone.96	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfltsi	r11,0
	l.bf	.L4230	# delay slot filled
	l.sw    	12(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L4231	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprIsInteger	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4225	# delay slot filled
	l.lwz   	r5,12(r1)	 # SI load
	l.sfgtsi	r5,0
	l.bnf	.L4232	# delay slot filled
	l.movhi  	r4,hi(.LC105)
	l.sh    	0(r2),r5	 # movhi
	l.addi  	r14,r14,1
	l.lwz   	r5,0(r16)	 # SI load
	l.sfles 	r5,r14
	l.bnf	.L4233	# delay slot filled
	l.addi  	r2,r2,16
.L4222:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3ResolveOrderGroupBy.clone.118	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
.L4221:
	l.addi	r1,r1,60
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L4225:
	l.sh    	0(r2),r11	 # movhi
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L4234	# delay slot filled
	l.addi  	r14,r14,1
.L4230:
	l.j     	.L4221	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L4232:
	l.addi  	r14,r14,1
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC105)
	l.sw    	0(r1),r14	 # SI store
	l.sw    	4(r1),r28	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	8(r1),r30	 # SI store
	l.j     	.L4221	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.LFE720:
	.size	resolveOrderGroupBy, .-resolveOrderGroupBy
	.section	.rodata.str1.1
.LC106:
	.string	"a GROUP BY clause is required before HAVING"
.LC107:
	.string	"ORDER"
.LC108:
	.string	"GROUP"
.LC109:
	.string	"aggregate functions are not allowed in the GROUP BY clause"
.LC110:
	.string	"too many terms in ORDER BY clause"
.LC111:
	.string	"%r ORDER BY term does not match any column in the result set"
	.section .text
	.align	4
.proc	resolveSelectStep
	.type	resolveSelectStep, @function
resolveSelectStep:
.LFB721:
	l.lhz   	r5,6(r4)	 # zero_extendqisi2
	l.sw    	-44(r1),r2	 # SI store
.LCFI1612:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1613:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1614:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1615:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1616:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1617:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1618:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1619:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1620:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1621:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1622:
	l.andi  	r2,r5,2
	l.addi  	r1,r1,-172
.LCFI1623:
	l.ori   	r24,r4,0	 # move reg to reg
	l.sfnei	r2,0
	l.bf	.L4236	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lwz   	r2,8(r3)	 # SI load
	l.andi  	r6,r5,16
	l.lwz   	r26,12(r3)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L4310	# delay slot filled
	l.lwz   	r28,0(r2)	 # SI load
	l.lwz   	r4,28(r4)	 # SI load
	l.ori   	r22,r24,0	 # move reg to reg
	l.sub   	r3,r0,r4
	l.addi  	r16,r1,72
	l.or    	r3,r4,r3
	l.addi  	r30,r1,108
	l.srli  	r3,r3,31
	l.sw    	12(r1),r3	 # SI store
.L4255:
	l.ori   	r5,r5,2
	l.addi  	r4,r0,0	 # move immediate I
	l.sh    	6(r22),r5	 # movhi
	l.sw    	8(r16),r4	 # SI store
	l.sw    	12(r16),r4	 # SI store
	l.sw    	16(r16),r4	 # SI store
	l.sw    	20(r16),r4	 # SI store
	l.sw    	24(r16),r4	 # SI store
	l.sw    	28(r16),r4	 # SI store
	l.sw    	32(r16),r4	 # SI store
	l.sw    	4(r16),r4	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,40(r22)	 # SI load
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.sw    	72(r1),r2	 # SI store
	l.sfnei	r11,0
	l.bf	.L4300	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.lwz   	r4,44(r22)	 # SI load
	l.sfnei	r11,0
	l.bf	.L4300	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sb    	92(r1),r5	    # movqi
	l.lwz   	r14,0(r22)	 # SI load
	l.lwz   	r6,8(r22)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.sw    	76(r1),r6	 # SI store
	l.sflesi	r3,0
	l.bf	.L4238	# delay slot filled
	l.sw    	104(r1),r26	 # SI store
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L4239	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
.L4312:
	l.lwz   	r4,0(r14)	 # SI load
	l.sfgts 	r4,r20
	l.bnf	.L4311
	l.nop			# nop delay slot
.L4239:
	l.lwz   	r6,12(r14)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.add   	r6,r6,r18
	l.addi  	r20,r20,1
	l.lwz   	r4,0(r6)	 # SI load
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.addi  	r18,r18,16
	l.sfnei	r11,0
	l.bnf	.L4312
	l.nop			# nop delay slot
.L4300:
	l.addi  	r11,r0,2	 # move immediate I
.L4236:
	l.addi	r1,r1,172
.L4324:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L4311:
	l.lwz   	r6,8(r22)	 # SI load
.L4238:
	l.lhs   	r3,0(r6)	 # extendhisi2_no_sext_mem
	l.sflesi	r3,0
	l.bf	.L4240	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.add   	r4,r14,r14
.L4321:
	l.ori   	r3,r30,0	 # move reg to reg
	l.add   	r4,r4,r14
	l.slli  	r7,r4,4
	l.add   	r7,r4,r7
	l.add   	r7,r7,r14
	l.addi  	r14,r14,1
	l.add   	r7,r6,r7
	l.lwz   	r8,20(r7)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L4241	# delay slot filled
	l.ori   	r4,r8,0	 # move reg to reg
	l.lwz   	r6,8(r7)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L4242	# delay slot filled
	l.lwz   	r18,488(r2)	 # SI load
	l.sw    	488(r2),r6	 # SI store
.L4242:
	l.movhi  	r6,hi(resolveExprStep)
	l.movhi  	r5,hi(resolveSelectStep)
	l.ori   	r6,r6,lo(resolveExprStep)
	l.ori   	r5,r5,lo(resolveSelectStep)
	l.sw    	108(r1),r6	 # SI store
	l.sw    	112(r1),r5	 # SI store
	l.sw    	116(r1),r2	 # SI store
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.sw    	120(r1),r26	 # SI store
	l.lwz   	r3,64(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L4300	# delay slot filled
	l.sw    	488(r2),r18	 # SI store
	l.lbz   	r4,30(r28)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L4236	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.lwz   	r6,8(r22)	 # SI load
.L4241:
	l.lhs   	r4,0(r6)	 # extendhisi2_no_sext_mem
	l.sfgts 	r4,r14
	l.bf	.L4321	# delay slot filled
	l.add   	r4,r14,r14
.L4240:
	l.lwz   	r14,16(r22)	 # SI load
	l.sfnei	r14,0
	l.bnf	.L4313	# delay slot filled
	l.lbz   	r3,93(r1)	 # zero_extendqisi2
.L4244:
	l.lhz   	r3,6(r22)	 # zero_extendqisi2
	l.ori   	r3,r3,4
	l.sh    	6(r22),r3	 # movhi
.L4246:
	l.sub   	r3,r0,r14
	l.or    	r3,r14,r3
	l.sfltsi	r3,0
	l.bnf	.L4314
	l.nop			# nop delay slot
.L4247:
	l.lwz   	r5,0(r22)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,12(r22)	 # SI load
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.sw    	80(r1),r5	 # SI store
	l.sfnei	r11,0
	l.bf	.L4300	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.lwz   	r4,20(r22)	 # SI load
	l.sfnei	r11,0
	l.bf	.L4300	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.lwz   	r3,12(r1)	 # SI load
	l.sw    	104(r1),r11	 # SI store
	l.sfnei	r3,0
	l.bnf	.L4315	# delay slot filled
	l.sb    	92(r1),r6	    # movqi
.L4248:
	l.lbz   	r3,30(r28)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L4300	# delay slot filled
	l.sfeqi	r14,0
	l.bf	.L4249	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.movhi  	r6,hi(.LC108)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	resolveOrderGroupBy	# delay slot filled
	l.ori   	r6,r6,lo(.LC108)
	l.sfnei	r11,0
	l.bf	.L4300
	l.nop			# nop delay slot
	l.lbz   	r3,30(r28)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L4300
	l.nop			# nop delay slot
	l.lwz   	r6,0(r14)	 # SI load
	l.sflesi	r6,0
	l.bf	.L4249	# delay slot filled
	l.lwz   	r4,12(r14)	 # SI load
	l.lwz   	r3,0(r4)	 # SI load
	l.lhz   	r3,2(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,2
	l.sfnei	r3,0
	l.bnf	.L4322	# delay slot filled
	l.addi  	r3,r3,1
	l.j     	.L4320	# delay slot filled
	l.movhi  	r4,hi(.LC109)
.L4253:
	l.lwz   	r5,0(r4)	 # SI load
	l.lhz   	r5,2(r5)	 # zero_extendqisi2
	l.andi  	r5,r5,2
	l.sfeqi	r5,0
	l.bnf	.L4250	# delay slot filled
	l.addi  	r3,r3,1
.L4322:
	l.sflts 	r3,r6
	l.bf	.L4253	# delay slot filled
	l.addi  	r4,r4,16
.L4249:
	l.lwz   	r22,28(r22)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L4254	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.j     	.L4255	# delay slot filled
	l.lhz   	r5,6(r22)	 # zero_extendqisi2
.L4310:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3SelectPrep	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.lwz   	r2,64(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L4236	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.lbz   	r2,30(r28)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L4236	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.j     	.L4236	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
.L4250:
	l.movhi  	r4,hi(.LC109)
.L4320:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC109)
	l.j     	.L4236	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
.L4315:
	l.movhi  	r6,hi(.LC107)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.lwz   	r5,24(r22)	 # SI load
	l.jal   	resolveOrderGroupBy	# delay slot filled
	l.ori   	r6,r6,lo(.LC107)
	l.sfnei	r11,0
	l.bnf	.L4248	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
	l.j     	.L4324	# delay slot filled
	l.addi	r1,r1,172
.L4313:
	l.sfeqi	r3,0
	l.bnf	.L4244
	l.nop			# nop delay slot
	l.j     	.L4246	# delay slot filled
	l.sb    	92(r1),r14	    # movqi
.L4254:
	l.sfeqi	r4,0
	l.bf	.L4236	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lwz   	r20,24(r24)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L4236
	l.nop			# nop delay slot
	l.lwz   	r30,0(r2)	 # SI load
	l.lwz   	r6,0(r20)	 # SI load
	l.lwz   	r3,88(r30)	 # SI load
	l.sfgts 	r6,r3
	l.bf	.L4256	# delay slot filled
	l.sfgtsi	r6,0
	l.bnf	.L4258	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
.L4259:
	l.lwz   	r3,12(r20)	 # SI load
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.add   	r3,r3,r22
	l.addi  	r4,r4,1
	l.sb    	9(r3),r5	    # movqi
	l.lwz   	r6,0(r20)	 # SI load
	l.sflts 	r4,r6
	l.bf	.L4259	# delay slot filled
	l.addi  	r22,r22,16
.L4258:
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,28(r24)	 # SI load
	l.sfeq 	r3,r4
	l.bf	.L4276	# delay slot filled
	l.sw    	32(r24),r4	 # SI store
	l.ori   	r4,r24,0	 # move reg to reg
	l.j     	.L4261	# delay slot filled
	l.ori   	r24,r3,0	 # move reg to reg
.L4297:
	l.ori   	r24,r3,0	 # move reg to reg
.L4261:
	l.sw    	32(r24),r4	 # SI store
	l.lwz   	r3,28(r24)	 # SI load
	l.sfnei	r3,0
	l.bf	.L4297	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
.L4276:
	l.addi  	r26,r0,-1	 # move immediate I
.L4301:
	l.lwz   	r28,0(r24)	 # SI load
	l.sflesi	r6,0
	l.bf	.L4262	# delay slot filled
	l.lwz   	r18,12(r20)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r3,r28,12
	l.sw    	20(r1),r5	 # SI store
	l.addi  	r14,r18,9
	l.ori   	r16,r5,0	 # move reg to reg
	l.j     	.L4275	# delay slot filled
	l.sw    	32(r1),r3	 # SI store
.L4263:
	l.addi  	r16,r16,1
	l.sfges 	r16,r6
	l.bf	.L4274	# delay slot filled
	l.addi  	r14,r14,16
	l.addi  	r18,r18,16
.L4275:
	l.sw    	124(r1),r26	 # SI store
	l.lbz   	r7,0(r14)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L4263	# delay slot filled
	l.addi  	r4,r1,124
	l.lwz   	r22,0(r18)	 # SI load
	l.jal   	sqlite3ExprIsInteger	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4264	# delay slot filled
	l.lwz   	r11,124(r1)	 # SI load
	l.sfltsi	r11,0
	l.bf	.L4265
	l.nop			# nop delay slot
	l.lwz   	r4,0(r28)	 # SI load
	l.sfles 	r11,r4
	l.bnf	.L4265	# delay slot filled
	l.sflesi	r11,0
.L4323:
	l.bf	.L4299	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.lwz   	r6,32(r22)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.sw    	12(r1),r6	 # SI store
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lhz   	r22,2(r22)	 # zero_extendqisi2
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,129	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3Expr	# delay slot filled
	l.ori   	r7,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4300	# delay slot filled
	l.sw    	0(r18),r11	 # SI store
	l.lhz   	r7,2(r11)	 # zero_extendqisi2
	l.andi  	r4,r22,256
	l.ori   	r7,r7,2048
	l.lwz   	r6,124(r1)	 # SI load
	l.or    	r4,r7,r4
	l.lwz   	r3,12(r1)	 # SI load
	l.sh    	2(r11),r4	 # movhi
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sw    	36(r11),r6	 # SI store
	l.sw    	32(r11),r3	 # SI store
	l.sb    	0(r14),r4	    # movqi
	l.sh    	1(r14),r6	 # movhi
	l.j     	.L4263	# delay slot filled
	l.lwz   	r6,0(r20)	 # SI load
.L4299:
	l.addi  	r5,r0,1	 # move immediate I
	l.lwz   	r6,0(r20)	 # SI load
	l.j     	.L4263	# delay slot filled
	l.sw    	20(r1),r5	 # SI store
.L4264:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.lwz   	r5,32(r1)	 # SI load
	l.jal   	resolveAsName.clone.96	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L4316	# delay slot filled
	l.sw    	124(r1),r11	 # SI store
.L4267:
	l.sfltsi	r11,0
	l.bnf	.L4323	# delay slot filled
	l.sflesi	r11,0
	l.j     	.L4236	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
.L4316:
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.lbz   	r4,30(r30)	 # zero_extendqisi2
	l.sw    	24(r1),r11	 # SI store
	l.sfnei	r4,0
	l.bnf	.L4317	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
.L4268:
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
	l.j     	.L4267	# delay slot filled
	l.lwz   	r11,124(r1)	 # SI load
.L4274:
	l.lwz   	r3,20(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L4262	# delay slot filled
	l.lwz   	r24,32(r24)	 # SI load
	l.sub   	r3,r0,r24
	l.or    	r3,r24,r3
	l.sfltsi	r3,0
	l.bf	.L4301
	l.nop			# nop delay slot
.L4262:
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L4278	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
.L4280:
	l.lwz   	r5,12(r20)	 # SI load
	l.add   	r5,r5,r4
	l.lbz   	r5,9(r5)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bnf	.L4318	# delay slot filled
	l.addi  	r4,r4,16
	l.addi  	r3,r3,1
.L4278:
	l.sflts 	r3,r6
	l.bf	.L4280	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.j     	.L4324	# delay slot filled
	l.addi	r1,r1,172
.L4265:
	l.movhi  	r3,hi(.LC107)
	l.addi  	r16,r16,1
	l.ori   	r3,r3,lo(.LC107)
	l.sw    	0(r1),r16	 # SI store
	l.sw    	4(r1),r3	 # SI store
	l.movhi  	r4,hi(.LC105)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC105)
	l.lwz   	r2,0(r28)	 # SI load
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
	l.j     	.L4236	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
.L4314:
	l.lwz   	r4,20(r22)	 # SI load
	l.sub   	r3,r0,r4
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L4247	# delay slot filled
	l.movhi  	r4,hi(.LC106)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC106)
	l.j     	.L4236	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
.L4317:
	l.lwz   	r6,0(r24)	 # SI load
	l.addi  	r3,r1,36
	l.addi  	r5,r0,36	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.sw    	16(r1),r6	 # SI store
	l.lwz   	r5,8(r24)	 # SI load
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.sw    	40(r1),r5	 # SI store
	l.addi  	r3,r1,36
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.sb    	56(r1),r6	    # movqi
	l.sw    	36(r1),r2	 # SI store
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.sw    	44(r1),r5	 # SI store
	l.sfnei	r11,0
	l.bf	.L4269	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.sfgtsi	r3,0
	l.bnf	.L4271	# delay slot filled
	l.sw    	28(r1),r3	 # SI store
	l.lwz   	r5,16(r1)	 # SI load
	l.sw    	12(r1),r11	 # SI store
	l.lwz   	r5,12(r5)	 # SI load
	l.j     	.L4273	# delay slot filled
	l.sw    	16(r1),r5	 # SI store
.L4272:
	l.lwz   	r5,28(r1)	 # SI load
	l.addi  	r4,r4,1
	l.sflts 	r4,r5
	l.bnf	.L4319	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
.L4273:
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.lwz   	r3,0(r6)	 # SI load
	l.addi  	r6,r6,16
	l.jal   	sqlite3ExprCompare	# delay slot filled
	l.sw    	16(r1),r6	 # SI store
	l.sfeqi	r11,0
	l.bf	.L4272	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
	l.addi  	r6,r3,1
.L4271:
	l.j     	.L4268	# delay slot filled
	l.sw    	124(r1),r6	 # SI store
.L4256:
	l.movhi  	r4,hi(.LC110)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC110)
	l.j     	.L4236	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
.L4269:
	l.lwz   	r4,8(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.ori   	r6,r4,0	 # move reg to reg
	l.sw    	8(r2),r4	 # SI store
	l.sw    	64(r2),r4	 # SI store
	l.j     	.L4268	# delay slot filled
	l.sw    	124(r1),r6	 # SI store
.L4319:
	l.ori   	r6,r11,0	 # move reg to reg
	l.j     	.L4268	# delay slot filled
	l.sw    	124(r1),r6	 # SI store
.L4318:
	l.movhi  	r4,hi(.LC111)
	l.addi  	r5,r3,1
	l.ori   	r4,r4,lo(.LC111)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.j     	.L4236	# delay slot filled
	l.addi  	r11,r0,2	 # move immediate I
.LFE721:
	.size	resolveSelectStep, .-resolveSelectStep
	.align	4
.proc	sqlite3ExprCachePop.clone.179
	.type	sqlite3ExprCachePop.clone.179, @function
sqlite3ExprCachePop.clone.179:
.LFB1428:
	l.lwz   	r7,84(r3)	 # SI load
	l.sw    	-4(r1),r2	 # SI store
.LCFI1624:
	l.addi  	r7,r7,-1
	l.addi  	r1,r1,-4
.LCFI1625:
	l.addi  	r5,r0,10	 # move immediate I
	l.addi  	r4,r3,112
	l.addi  	r6,r3,105
	l.sw    	84(r3),r7	 # SI store
.L4329:
	l.lwz   	r7,0(r4)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L4326	# delay slot filled
	l.addi  	r5,r5,-1
	l.lwz   	r11,-4(r4)	 # SI load
	l.lwz   	r8,84(r3)	 # SI load
	l.sfles 	r11,r8
	l.bf	.L4326
	l.nop			# nop delay slot
	l.lbz   	r8,0(r6)	 # zero_extendqisi2
	l.sfeqi	r8,0
	l.bf	.L4331	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lbz   	r8,21(r3)	 # zero_extendqisi2
	l.addi  	r11,r8,6
	l.addi  	r12,r8,1
	l.sfgtui	r8,7
	l.bf	.L4328	# delay slot filled
	l.slli  	r11,r11,2
	l.add   	r11,r3,r11
	l.sb    	21(r3),r12	    # movqi
	l.sw    	0(r11),r7	 # SI store
.L4328:
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	0(r6),r2	    # movqi
	l.addi  	r2,r0,0	 # move immediate I
.L4331:
	l.sw    	0(r4),r2	 # SI store
.L4326:
	l.addi  	r4,r4,24
	l.sfnei	r5,0
	l.bf	.L4329	# delay slot filled
	l.addi  	r6,r6,24
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1428:
	.size	sqlite3ExprCachePop.clone.179, .-sqlite3ExprCachePop.clone.179
	.align	4
.proc	sqlite3_status
	.global sqlite3_status
	.type	sqlite3_status, @function
sqlite3_status:
.LFB6:
	l.sw    	-4(r1),r2	 # SI store
.LCFI1626:
	l.addi  	r11,r0,21	 # move immediate I
	l.sfgtui	r3,8
.LCFI1627:
	l.bf	.L4333	# delay slot filled
	l.addi  	r1,r1,-4
	l.movhi  	r2,hi(sqlite3Stat)
	l.slli  	r7,r3,2
	l.ori   	r2,r2,lo(sqlite3Stat)
	l.addi  	r3,r3,9
	l.ori   	r11,r6,0	 # move reg to reg
	l.add   	r6,r7,r2
	l.slli  	r3,r3,2
	l.lwz   	r6,0(r6)	 # SI load
	l.sfeqi	r11,0
	l.sw    	0(r4),r6	 # SI store
	l.add   	r3,r3,r2
	l.lwz   	r4,0(r3)	 # SI load
	l.bf	.L4333	# delay slot filled
	l.sw    	0(r5),r4	 # SI store
	l.sw    	0(r3),r6	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
.L4333:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE6:
	.size	sqlite3_status, .-sqlite3_status
	.align	4
.proc	sqlite3_db_status
	.global sqlite3_db_status
	.type	sqlite3_db_status, @function
sqlite3_db_status:
.LFB7:
	l.sfeqi	r4,0
	l.bnf	.L4337	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lwz   	r8,228(r3)	 # SI load
	l.ori   	r11,r7,0	 # move reg to reg
	l.sw    	0(r5),r8	 # SI store
	l.sfeqi	r7,0
	l.lwz   	r5,232(r3)	 # SI load
	l.bf	.L4337	# delay slot filled
	l.sw    	0(r6),r5	 # SI store
	l.lwz   	r5,228(r3)	 # SI load
	l.ori   	r11,r4,0	 # move reg to reg
	l.sw    	232(r3),r5	 # SI store
.L4337:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE7:
	.size	sqlite3_db_status, .-sqlite3_db_status
	.align	4
.proc	sqlite3_vfs_unregister
	.global sqlite3_vfs_unregister
	.type	sqlite3_vfs_unregister, @function
sqlite3_vfs_unregister:
.LFB55:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1628:
.LCFI1629:
	l.jal   	vfsUnlink	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE55:
	.size	sqlite3_vfs_unregister, .-sqlite3_vfs_unregister
	.align	4
.proc	sqlite3_release_memory
	.global sqlite3_release_memory
	.type	sqlite3_release_memory, @function
sqlite3_release_memory:
.LFB69:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE69:
	.size	sqlite3_release_memory, .-sqlite3_release_memory
	.align	4
.proc	sqlite3_memory_used
	.global sqlite3_memory_used
	.type	sqlite3_memory_used, @function
sqlite3_memory_used:
.LFB72:
	l.movhi  	r3,hi(sqlite3Stat)
	l.ori   	r3,r3,lo(sqlite3Stat)
	l.lwz   	r12,0(r3)	 # SI load
	l.jr    	r9	# delay slot filled
	l.srai  	r11,r12,31
.LFE72:
	.size	sqlite3_memory_used, .-sqlite3_memory_used
	.align	4
.proc	sqlite3_memory_highwater
	.global sqlite3_memory_highwater
	.type	sqlite3_memory_highwater, @function
sqlite3_memory_highwater:
.LFB73:
	l.movhi  	r4,hi(sqlite3Stat)
	l.sfeqi	r3,0
	l.ori   	r4,r4,lo(sqlite3Stat)
	l.bf	.L4346	# delay slot filled
	l.lwz   	r12,36(r4)	 # SI load
	l.lwz   	r3,0(r4)	 # SI load
	l.sw    	36(r4),r3	 # SI store
.L4346:
	l.jr    	r9	# delay slot filled
	l.srai  	r11,r12,31
.LFE73:
	.size	sqlite3_memory_highwater, .-sqlite3_memory_highwater
	.align	4
.proc	sqlite3_memory_alarm
	.global sqlite3_memory_alarm
	.type	sqlite3_memory_alarm, @function
sqlite3_memory_alarm:
.LFB75:
	l.movhi  	r7,hi(mem0)
	l.ori   	r7,r7,lo(mem0)
	l.sw    	20(r7),r3	 # SI store
	l.sw    	24(r7),r4	 # SI store
		l.sw    	12(r7), r5
		l.sw    	12+4(r7), r6
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE75:
	.size	sqlite3_memory_alarm, .-sqlite3_memory_alarm
	.align	4
.proc	sqlite3_snprintf
	.global sqlite3_snprintf
	.type	sqlite3_snprintf, @function
sqlite3_snprintf:
.LFB110:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1630:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1631:
	l.ori   	r7,r3,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI1632:
	l.sflesi	r3,0
	l.bf	.L4349	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r1,0	 # move reg to reg
	l.sw    	16(r1),r7	 # SI store
	l.addi  	r6,r1,36
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.sw    	4(r1),r11	 # SI store
	l.sw    	8(r1),r11	 # SI store
	l.sw    	0(r1),r4	 # SI store
	l.sw    	12(r1),r4	 # SI store
	l.sw    	20(r1),r4	 # SI store
	l.sb    	26(r1),r7	    # movqi
	l.sb    	24(r1),r7	    # movqi
	l.jal   	sqlite3VXPrintf	# delay slot filled
	l.sb    	25(r1),r7	    # movqi
	l.jal   	sqlite3StrAccumFinish	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
.L4349:
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE110:
	.size	sqlite3_snprintf, .-sqlite3_snprintf
	.section	.rodata.str1.1
.LC112:
	.string	"/%s"
	.section .text
	.align	4
.proc	unixFullPathname
	.type	unixFullPathname, @function
unixFullPathname:
.LFB196:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1633:
	l.add   	r3,r6,r5
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sw    	-16(r1),r2	 # SI store
.LCFI1634:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1635:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1636:
	l.sb    	-1(r3),r4	    # movqi
	l.addi  	r1,r1,-20
.LCFI1637:
	l.lbs   	r3,0(r16)	 # extendqisi2_no_sext_mem
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfnei	r3,47
	l.bnf	.L4354	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
	l.ori   	r3,r6,0	 # move reg to reg
	l.jal   	getcwd	# delay slot filled
	l.addi  	r4,r5,-1
	l.sfeqi	r11,0
	l.bf	.L4352	# delay slot filled
	l.addi  	r7,r0,14	 # move immediate I
	l.jal   	strlen	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.movhi  	r5,hi(.LC112)
	l.sub   	r3,r14,r11
	l.ori   	r5,r5,lo(.LC112)
	l.add   	r4,r2,r11
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.addi  	r7,r0,0	 # move immediate I
.L4352:
	l.addi	r1,r1,20
	l.ori   	r11,r7,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4354:
	l.ori   	r3,r5,0	 # move reg to reg
	l.movhi  	r5,hi(.LC78)
	l.ori   	r4,r6,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.addi	r1,r1,20
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r11,r7,0	 # move reg to reg
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE196:
	.size	unixFullPathname, .-unixFullPathname
	.align	4
.proc	openDirectory
	.type	openDirectory, @function
openDirectory:
.LFB191:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1638:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1639:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1640:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1641:
	l.addi  	r1,r1,-536
.LCFI1642:
	l.movhi  	r5,hi(.LC78)
	l.addi  	r2,r1,4
	l.sw    	0(r1),r3	 # SI store
	l.ori   	r5,r5,lo(.LC78)
	l.addi  	r3,r0,512	 # move immediate I
	l.ori   	r16,r4,0	 # move reg to reg
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	strlen	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sflesi	r11,1
	l.bf	.L4367	# delay slot filled
	l.sfnei	r11,1
	l.add   	r3,r2,r11
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,47
	l.bnf	.L4368	# delay slot filled
	l.addi  	r11,r11,-1
	l.addi  	r11,r11,1
	l.j     	.L4366	# delay slot filled
	l.add   	r11,r2,r11
.L4365:
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,47
	l.bnf	.L4361
	l.nop			# nop delay slot
	l.addi  	r11,r11,-1
.L4368:
	l.sflesi	r11,1
	l.bnf	.L4365	# delay slot filled
	l.add   	r3,r2,r11
	l.sfnei	r11,1
.L4367:
	l.bnf	.L4361	# delay slot filled
	l.addi  	r14,r0,-1	 # move immediate I
.L4359:
	l.sw    	0(r16),r14	 # SI store
	l.addi	r1,r1,536
	l.addi  	r11,r0,14	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4361:
	l.add   	r11,r2,r11
.L4366:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	0(r11),r2	    # movqi
	l.ori   	r2,r4,0	 # move reg to reg
	l.jal   	open64	# delay slot filled
	l.sw    	0(r1),r4	 # SI store
	l.sflts 	r11,r2
	l.bf	.L4359	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r11,r11,1
	l.addi  	r4,r0,2	 # move immediate I
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.sw    	0(r16),r14	 # SI store
	l.addi	r1,r1,536
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE191:
	.size	openDirectory, .-openDirectory
	.align	4
.proc	unixDelete
	.type	unixDelete, @function
unixDelete:
.LFB194:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1643:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1644:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1645:
	l.ori   	r3,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI1646:
	l.ori   	r2,r5,0	 # move reg to reg
	l.jal   	unlink	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bnf	.L4375	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L4370:
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L4375:
	l.jal   	openDirectory	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L4370	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	fsync	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L4371
	l.nop			# nop delay slot
	l.addi  	r2,r0,1290	 # move immediate I
.L4371:
	l.jal   	close	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L4370	# delay slot filled
	l.sfeqi	r2,0
	l.bnf	.L4370
	l.nop			# nop delay slot
	l.j     	.L4370	# delay slot filled
	l.addi  	r2,r0,4362	 # move immediate I
.LFE194:
	.size	unixDelete, .-unixDelete
	.align	4
.proc	sqlite3_os_end
	.global sqlite3_os_end
	.type	sqlite3_os_end, @function
sqlite3_os_end:
.LFB202:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE202:
	.size	sqlite3_os_end, .-sqlite3_os_end
	.align	4
.proc	sqlite3_enable_shared_cache
	.global sqlite3_enable_shared_cache
	.type	sqlite3_enable_shared_cache, @function
sqlite3_enable_shared_cache:
.LFB355:
	l.movhi  	r4,hi(sqlite3Config)
	l.addi  	r11,r0,0	 # move immediate I
	l.ori   	r4,r4,lo(sqlite3Config)
	l.jr    	r9	# delay slot filled
	l.sw    	180(r4),r3	 # SI store
.LFE355:
	.size	sqlite3_enable_shared_cache, .-sqlite3_enable_shared_cache
	.align	4
.proc	sqlite3_backup_remaining
	.global sqlite3_backup_remaining
	.type	sqlite3_backup_remaining, @function
sqlite3_backup_remaining:
.LFB505:
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,32(r3)	 # SI load
.LFE505:
	.size	sqlite3_backup_remaining, .-sqlite3_backup_remaining
	.align	4
.proc	sqlite3_backup_pagecount
	.global sqlite3_backup_pagecount
	.type	sqlite3_backup_pagecount, @function
sqlite3_backup_pagecount:
.LFB506:
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,36(r3)	 # SI load
.LFE506:
	.size	sqlite3_backup_pagecount, .-sqlite3_backup_pagecount
	.align	4
.proc	sqlite3_sql
	.global sqlite3_sql
	.type	sqlite3_sql, @function
sqlite3_sql:
.LFB546:
	l.lbz   	r11,131(r3)	 # zero_extendqisi2
	l.sfeqi	r11,0
	l.bf	.L4381
	l.nop			# nop delay slot
	l.lwz   	r11,204(r3)	 # SI load
.L4381:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE546:
	.size	sqlite3_sql, .-sqlite3_sql
	.align	4
.proc	sqlite3_expired
	.global sqlite3_expired
	.type	sqlite3_expired, @function
sqlite3_expired:
.LFB605:
	l.sfeqi	r3,0
	l.bf	.L4384	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lbz   	r11,126(r3)	 # zero_extendqisi2
	l.sub   	r11,r0,r11
	l.srli  	r11,r11,31
.L4384:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE605:
	.size	sqlite3_expired, .-sqlite3_expired
	.align	4
.proc	sqlite3_clear_bindings
	.global sqlite3_clear_bindings
	.type	sqlite3_clear_bindings, @function
sqlite3_clear_bindings:
.LFB608:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1647:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1648:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1649:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1650:
	l.lwz   	r2,52(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI1651:
	l.sflesi	r2,0
	l.bf	.L4387	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r3,56(r3)	 # SI load
	l.ori   	r16,r2,0	 # move reg to reg
.L4388:
	l.add   	r3,r3,r2
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r5,52(r14)	 # SI load
	l.lwz   	r3,56(r14)	 # SI load
	l.sfgts 	r5,r16
	l.add   	r4,r3,r2
	l.addi  	r5,r0,1	 # movhi: move immediate
	l.addi  	r2,r2,240
	l.bf	.L4388	# delay slot filled
	l.sh    	28(r4),r5	 # movhi
.L4387:
	l.addi	r1,r1,16
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE608:
	.size	sqlite3_clear_bindings, .-sqlite3_clear_bindings
	.align	4
.proc	sqlite3_value_type
	.global sqlite3_value_type
	.type	sqlite3_value_type, @function
sqlite3_value_type:
.LFB619:
	l.jr    	r9	# delay slot filled
	l.lbz   	r11,30(r3)	 # zero_extendqisi2
.LFE619:
	.size	sqlite3_value_type, .-sqlite3_value_type
	.align	4
.proc	sqlite3_result_double
	.global sqlite3_result_double
	.type	sqlite3_result_double, @function
sqlite3_result_double:
.LFB621:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1652:
	l.addi  	r1,r1,-4
.LCFI1653:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetDouble	# delay slot filled	# sibcall s
	l.addi  	r3,r3,8
.LFE621:
	.size	sqlite3_result_double, .-sqlite3_result_double
	.align	4
.proc	sqlite3_result_int
	.global sqlite3_result_int
	.type	sqlite3_result_int, @function
sqlite3_result_int:
.LFB624:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1654:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1655:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1656:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI1657:
	l.addi  	r3,r3,8
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.srai  	r3,r14,31
	l.addi  	r4,r0,4	 # movhi: move immediate
	l.sw    	12(r2),r14	 # SI store
	l.sw    	8(r2),r3	 # SI store
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sh    	36(r2),r4	 # movhi
	l.sb    	38(r2),r3	    # movqi
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE624:
	.size	sqlite3_result_int, .-sqlite3_result_int
	.align	4
.proc	sqlite3_result_int64
	.global sqlite3_result_int64
	.type	sqlite3_result_int64, @function
sqlite3_result_int64:
.LFB625:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1658:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1659:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI1660:
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r3,8
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,4	 # movhi: move immediate
	l.sb    	38(r2),r4	    # movqi
	l.sh    	36(r2),r3	 # movhi
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
		l.sw    	8(r2), r3
		l.sw    	8+4(r2), r4
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE625:
	.size	sqlite3_result_int64, .-sqlite3_result_int64
	.align	4
.proc	sqlite3_result_null
	.global sqlite3_result_null
	.type	sqlite3_result_null, @function
sqlite3_result_null:
.LFB626:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1661:
	l.addi  	r1,r1,-4
.LCFI1662:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetNull	# delay slot filled	# sibcall s
	l.addi  	r3,r3,8
.LFE626:
	.size	sqlite3_result_null, .-sqlite3_result_null
	.align	4
.proc	sqlite3_result_zeroblob
	.global sqlite3_result_zeroblob
	.type	sqlite3_result_zeroblob, @function
sqlite3_result_zeroblob:
.LFB632:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1663:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1664:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1665:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI1666:
	l.addi  	r3,r3,8
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.xori  	r3,r14,0xffff
	l.addi  	r4,r0,16400	 # movhi: move immediate
	l.srai  	r3,r3,31
	l.sh    	36(r2),r4	 # movhi
	l.addi  	r4,r0,4	 # movqi: move immediate
	l.and   	r14,r14,r3
	l.sb    	38(r2),r4	    # movqi
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r4,r0,0	 # move immediate I
	l.sb    	39(r2),r3	    # movqi
	l.sw    	8(r2),r14	 # SI store
	l.sw    	32(r2),r4	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE632:
	.size	sqlite3_result_zeroblob, .-sqlite3_result_zeroblob
	.align	4
.proc	sqlite3_result_error_nomem
	.global sqlite3_result_error_nomem
	.type	sqlite3_result_error_nomem, @function
sqlite3_result_error_nomem:
.LFB635:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1667:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1668:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-8
.LCFI1669:
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.addi  	r3,r3,8
	l.addi  	r4,r0,7	 # move immediate I
	l.lwz   	r3,24(r2)	 # SI load
	l.sw    	252(r2),r4	 # SI store
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	30(r3),r2	    # movqi
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE635:
	.size	sqlite3_result_error_nomem, .-sqlite3_result_error_nomem
	.align	4
.proc	sqlite3_user_data
	.global sqlite3_user_data
	.type	sqlite3_user_data, @function
sqlite3_user_data:
.LFB638:
	l.lwz   	r3,0(r3)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,4(r3)	 # SI load
.LFE638:
	.size	sqlite3_user_data, .-sqlite3_user_data
	.align	4
.proc	sqlite3_context_db_handle
	.global sqlite3_context_db_handle
	.type	sqlite3_context_db_handle, @function
sqlite3_context_db_handle:
.LFB639:
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,24(r3)	 # SI load
.LFE639:
	.size	sqlite3_context_db_handle, .-sqlite3_context_db_handle
	.align	4
.proc	sqlite3_get_auxdata
	.global sqlite3_get_auxdata
	.type	sqlite3_get_auxdata, @function
sqlite3_get_auxdata:
.LFB642:
	l.lwz   	r3,4(r3)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L4405	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
	l.jr    	r9
	l.nop			# nop delay slot
.L4405:
	l.srli  	r5,r4,31
	l.sfnei	r5,0
	l.bf	.L4404
	l.nop			# nop delay slot
	l.lwz   	r7,4(r3)	 # SI load
	l.sfles 	r7,r4
	l.bnf	.L4406	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L4404
	l.nop			# nop delay slot
.L4407:
	l.addi  	r4,r4,1
	l.slli  	r4,r4,3
	l.add   	r3,r3,r4
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,0(r3)	 # SI load
.L4406:
	l.ori   	r6,r5,0	  # movqi: move reg to reg
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bnf	.L4407
	l.nop			# nop delay slot
.L4404:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE642:
	.size	sqlite3_get_auxdata, .-sqlite3_get_auxdata
	.align	4
.proc	sqlite3_aggregate_count
	.global sqlite3_aggregate_count
	.type	sqlite3_aggregate_count, @function
sqlite3_aggregate_count:
.LFB644:
	l.lwz   	r3,248(r3)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,24(r3)	 # SI load
.LFE644:
	.size	sqlite3_aggregate_count, .-sqlite3_aggregate_count
	.align	4
.proc	sqlite3_column_count
	.global sqlite3_column_count
	.type	sqlite3_column_count, @function
sqlite3_column_count:
.LFB645:
	l.sfeqi	r3,0
	l.bf	.L4410
	l.nop			# nop delay slot
	l.lwz   	r3,108(r3)	 # SI load
.L4410:
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
.LFE645:
	.size	sqlite3_column_count, .-sqlite3_column_count
	.align	4
.proc	sqlite3_data_count
	.global sqlite3_data_count
	.type	sqlite3_data_count, @function
sqlite3_data_count:
.LFB646:
	l.sfeqi	r3,0
	l.bf	.L4413	# delay slot filled
	l.ori   	r4,r3,0	 # move reg to reg
	l.lwz   	r3,120(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L4413
	l.nop			# nop delay slot
	l.lwz   	r3,108(r4)	 # SI load
.L4413:
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
.LFE646:
	.size	sqlite3_data_count, .-sqlite3_data_count
	.align	4
.proc	sqlite3_column_name
	.global sqlite3_column_name
	.type	sqlite3_column_name, @function
sqlite3_column_name:
.LFB660:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1670:
	l.addi  	r1,r1,-4
.LCFI1671:
	l.movhi  	r5,hi(sqlite3_value_text)
	l.addi	r1,r1,4
	l.ori   	r5,r5,lo(sqlite3_value_text)
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	columnName	# delay slot filled	# sibcall s
	l.addi  	r6,r0,0	 # move immediate I
.LFE660:
	.size	sqlite3_column_name, .-sqlite3_column_name
	.align	4
.proc	sqlite3_column_name16
	.global sqlite3_column_name16
	.type	sqlite3_column_name16, @function
sqlite3_column_name16:
.LFB661:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1672:
	l.addi  	r1,r1,-4
.LCFI1673:
	l.movhi  	r5,hi(sqlite3_value_text16)
	l.addi	r1,r1,4
	l.ori   	r5,r5,lo(sqlite3_value_text16)
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	columnName	# delay slot filled	# sibcall s
	l.addi  	r6,r0,0	 # move immediate I
.LFE661:
	.size	sqlite3_column_name16, .-sqlite3_column_name16
	.align	4
.proc	sqlite3_column_decltype
	.global sqlite3_column_decltype
	.type	sqlite3_column_decltype, @function
sqlite3_column_decltype:
.LFB662:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1674:
	l.addi  	r1,r1,-4
.LCFI1675:
	l.movhi  	r5,hi(sqlite3_value_text)
	l.addi	r1,r1,4
	l.ori   	r5,r5,lo(sqlite3_value_text)
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	columnName	# delay slot filled	# sibcall s
	l.addi  	r6,r0,1	 # move immediate I
.LFE662:
	.size	sqlite3_column_decltype, .-sqlite3_column_decltype
	.align	4
.proc	sqlite3_column_decltype16
	.global sqlite3_column_decltype16
	.type	sqlite3_column_decltype16, @function
sqlite3_column_decltype16:
.LFB663:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1676:
	l.addi  	r1,r1,-4
.LCFI1677:
	l.movhi  	r5,hi(sqlite3_value_text16)
	l.addi	r1,r1,4
	l.ori   	r5,r5,lo(sqlite3_value_text16)
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	columnName	# delay slot filled	# sibcall s
	l.addi  	r6,r0,1	 # move immediate I
.LFE663:
	.size	sqlite3_column_decltype16, .-sqlite3_column_decltype16
	.align	4
.proc	sqlite3_bind_parameter_count
	.global sqlite3_bind_parameter_count
	.type	sqlite3_bind_parameter_count, @function
sqlite3_bind_parameter_count:
.LFB675:
	l.sfeqi	r3,0
	l.bf	.L4421
	l.nop			# nop delay slot
	l.lwz   	r3,52(r3)	 # SI load
.L4421:
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
.LFE675:
	.size	sqlite3_bind_parameter_count, .-sqlite3_bind_parameter_count
	.align	4
.proc	sqlite3_bind_parameter_name
	.global sqlite3_bind_parameter_name
	.type	sqlite3_bind_parameter_name, @function
sqlite3_bind_parameter_name:
.LFB677:
	l.sflesi	r4,0
	l.bnf	.L4434	# delay slot filled
	l.addi  	r6,r4,-1
.L4432:
	l.addi  	r11,r0,0	 # move immediate I
.L4424:
	l.jr    	r9
	l.nop			# nop delay slot
.L4434:
	l.sub   	r11,r0,r3
	l.or    	r11,r3,r11
	l.xori  	r11,r11,0xffff
	l.srli  	r11,r11,31
	l.sfnei	r11,0
	l.bf	.L4432
	l.nop			# nop delay slot
	l.lwz   	r5,52(r3)	 # SI load
	l.sfgts 	r4,r5
	l.bf	.L4424
	l.nop			# nop delay slot
	l.lwz   	r5,64(r3)	 # SI load
	l.sfeqi	r5,0
	l.bnf	.L4435
	l.nop			# nop delay slot
	l.lwz   	r11,12(r3)	 # SI load
	l.sfgtsi	r11,0
	l.bnf	.L4436	# delay slot filled
	l.lwz   	r4,20(r3)	 # SI load
	l.j     	.L4431	# delay slot filled
	l.lwz   	r7,60(r3)	 # SI load
.L4437:
.L4430:
	l.addi  	r5,r5,1
	l.sfeq 	r5,r11
	l.bf	.L4428	# delay slot filled
	l.addi  	r4,r4,20
.L4431:
	l.lbz   	r8,0(r4)	 # zero_extendqisi2
	l.sfeqi	r8,27
	l.bnf	.L4437	# delay slot filled
	l.ori   	r8,r7,0	 # move reg to reg
	l.lwz   	r12,4(r4)	 # SI load
	l.lwz   	r13,16(r4)	 # SI load
	l.addi  	r12,r12,-1
	l.slli  	r12,r12,2
	l.add   	r12,r7,r12
	l.j     	.L4430	# delay slot filled
	l.sw    	0(r12),r13	 # SI store
.L4435:
	l.lwz   	r8,60(r3)	 # SI load
.L4426:
	l.slli  	r6,r6,2
	l.add   	r8,r8,r6
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,0(r8)	 # SI load
.L4436:
	l.lwz   	r8,60(r3)	 # SI load
.L4428:
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L4426	# delay slot filled
	l.sw    	64(r3),r4	 # SI store
.LFE677:
	.size	sqlite3_bind_parameter_name, .-sqlite3_bind_parameter_name
	.align	4
.proc	sqlite3_bind_parameter_index
	.global sqlite3_bind_parameter_index
	.type	sqlite3_bind_parameter_index, @function
sqlite3_bind_parameter_index:
.LFB678:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1678:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1679:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1680:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1681:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1682:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI1683:
	l.sfeqi	r3,0
	l.bf	.L4439	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r5,64(r3)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L4450
	l.nop			# nop delay slot
.L4440:
	l.sfeqi	r16,0
	l.bf	.L4439	# delay slot filled
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r18,52(r3)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sfles 	r18,r11
	l.bf	.L4439	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r2,60(r3)	 # SI load
.L4445:
	l.lwz   	r5,0(r2)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L4444	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	strcmp
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L4451	# delay slot filled
	l.addi  	r11,r14,1
.L4444:
	l.addi  	r14,r14,1
	l.sflts 	r14,r18
	l.bf	.L4445	# delay slot filled
	l.addi  	r2,r2,4
	l.addi  	r11,r0,0	 # move immediate I
.L4439:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L4450:
	l.lwz   	r6,12(r3)	 # SI load
	l.sflesi	r6,0
	l.bnf	.L4443	# delay slot filled
	l.lwz   	r2,20(r3)	 # SI load
	l.j     	.L4453	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L4442:
	l.sfeq 	r5,r6
	l.bf	.L4441
	l.nop			# nop delay slot
.L4452:
	l.addi  	r2,r2,20
.L4443:
	l.lbz   	r4,0(r2)	 # zero_extendqisi2
	l.sfnei	r4,27
	l.bf	.L4442	# delay slot filled
	l.addi  	r5,r5,1
	l.lwz   	r4,4(r2)	 # SI load
	l.lwz   	r8,60(r3)	 # SI load
	l.addi  	r4,r4,-1
	l.lwz   	r7,16(r2)	 # SI load
	l.slli  	r4,r4,2
	l.sfeq 	r5,r6
	l.add   	r4,r8,r4
	l.bnf	.L4452	# delay slot filled
	l.sw    	0(r4),r7	 # SI store
.L4441:
	l.addi  	r2,r0,1	 # move immediate I
.L4453:
	l.j     	.L4440	# delay slot filled
	l.sw    	64(r3),r2	 # SI store
.L4451:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE678:
	.size	sqlite3_bind_parameter_index, .-sqlite3_bind_parameter_index
	.align	4
.proc	sqlite3_transfer_bindings
	.global sqlite3_transfer_bindings
	.type	sqlite3_transfer_bindings, @function
sqlite3_transfer_bindings:
.LFB680:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1684:
	l.lwz   	r6,52(r3)	 # SI load
	l.lwz   	r5,52(r4)	 # SI load
	l.sfne 	r6,r5
.LCFI1685:
	l.bnf	.L4456	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L4456:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3TransferBindings
	l.nop			# nop delay slot	# sibcall s
.LFE680:
	.size	sqlite3_transfer_bindings, .-sqlite3_transfer_bindings
	.align	4
.proc	sqlite3_db_handle
	.global sqlite3_db_handle
	.type	sqlite3_db_handle, @function
sqlite3_db_handle:
.LFB681:
	l.sfeqi	r3,0
	l.bf	.L4458
	l.nop			# nop delay slot
	l.lwz   	r3,0(r3)	 # SI load
.L4458:
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
.LFE681:
	.size	sqlite3_db_handle, .-sqlite3_db_handle
	.align	4
.proc	sqlite3_next_stmt
	.global sqlite3_next_stmt
	.type	sqlite3_next_stmt, @function
sqlite3_next_stmt:
.LFB682:
	l.sfnei	r4,0
	l.bnf	.L4463
	l.nop			# nop delay slot
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,8(r4)	 # SI load
.L4463:
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,140(r3)	 # SI load
.LFE682:
	.size	sqlite3_next_stmt, .-sqlite3_next_stmt
	.align	4
.proc	sqlite3_stmt_status
	.global sqlite3_stmt_status
	.type	sqlite3_stmt_status, @function
sqlite3_stmt_status:
.LFB683:
	l.addi  	r4,r4,48
	l.sw    	-4(r1),r2	 # SI store
.LCFI1686:
	l.slli  	r4,r4,2
	l.addi  	r1,r1,-4
.LCFI1687:
	l.sfeqi	r5,0
	l.add   	r3,r3,r4
	l.bf	.L4465	# delay slot filled
	l.lwz   	r11,0(r3)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	0(r3),r2	 # SI store
.L4465:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE683:
	.size	sqlite3_stmt_status, .-sqlite3_stmt_status
	.align	4
.proc	sqlite3_blob_bytes
	.global sqlite3_blob_bytes
	.type	sqlite3_blob_bytes, @function
sqlite3_blob_bytes:
.LFB697:
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,4(r3)	 # SI load
.LFE697:
	.size	sqlite3_blob_bytes, .-sqlite3_blob_bytes
	.align	4
.proc	sqlite3_set_authorizer
	.global sqlite3_set_authorizer
	.type	sqlite3_set_authorizer, @function
sqlite3_set_authorizer:
.LFB840:
	l.sw    	-4(r1),r2	 # SI store
.LCFI1688:
	l.lwz   	r6,140(r3)	 # SI load
	l.sw    	248(r3),r4	 # SI store
	l.sw    	252(r3),r5	 # SI store
	l.sfeqi	r6,0
.LCFI1689:
	l.bf	.L4468	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi  	r2,r0,1	 # movqi: move immediate
.L4472:
	l.sb    	126(r6),r2	    # movqi
	l.lwz   	r6,8(r6)	 # SI load
	l.sfnei	r6,0
	l.bf	.L4472
	l.nop			# nop delay slot
.L4468:
	l.addi	r1,r1,4
	l.addi  	r11,r0,0	 # move immediate I
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE840:
	.size	sqlite3_set_authorizer, .-sqlite3_set_authorizer
	.align	4
.proc	sqlite3_free_table
	.global sqlite3_free_table
	.type	sqlite3_free_table, @function
sqlite3_free_table:
.LFB1075:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1690:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1691:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1692:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1693:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1694:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI1695:
	l.bf	.L4473	# delay slot filled
	l.addi  	r1,r1,-20
	l.addi  	r18,r3,-4
	l.lwz   	r16,0(r18)	 # SI load
	l.sflesi	r16,1
	l.bf	.L4475	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
.L4477:
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r14,r14,1
	l.sfeqi	r4,0
	l.bf	.L4476	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	sqlite3_free
	l.nop			# nop delay slot
.L4476:
	l.sfgts 	r16,r14
	l.bf	.L4477	# delay slot filled
	l.addi  	r2,r2,4
.L4475:
	l.addi	r1,r1,20
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3_free	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L4473:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE1075:
	.size	sqlite3_free_table, .-sqlite3_free_table
	.section	.rodata.str1.1
.LC113:
	.string	"create"
.LC114:
	.string	"trigger"
.LC115:
	.string	"temp"
.LC116:
	.string	"temporary"
.LC117:
	.string	"end"
.LC118:
	.string	"explain"
	.section .text
	.align	4
.proc	sqlite3_complete
	.global sqlite3_complete
	.type	sqlite3_complete, @function
sqlite3_complete:
.LFB1183:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1696:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1697:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1698:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1699:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
.LCFI1700:
	l.bf	.L4518	# delay slot filled
	l.addi  	r1,r1,-16
	l.j     	.L4517	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L4481:
	l.andi  	r4,r3,0xff	 # zero_extendqisi2
	l.sfltsi	r3,0
	l.bf	.L4542	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.sfgtsi	r4,31
	l.bf	.L4504	# delay slot filled
	l.movhi  	r5,hi(sqlite3IsAsciiIdChar)
	l.add   	r2,r2,r14
	l.addi  	r4,r0,2	 # move immediate I
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
.L4489:
	l.slli  	r16,r16,3
	l.movhi  	r5,hi(trans.21367)
	l.sfnei	r3,0
	l.add   	r4,r16,r4
	l.ori   	r5,r5,lo(trans.21367)
	l.add   	r4,r4,r5
	l.bnf	.L4480	# delay slot filled
	l.lbz   	r16,0(r4)	 # zero_extendqisi2
.L4517:
	l.addi  	r4,r3,-9
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.sfgtui	r4,87
	l.bf	.L4481	# delay slot filled
	l.movhi  	r5,hi(.L4488)
	l.slli  	r4,r4,2
	l.ori   	r5,r5,lo(.L4488)
	l.add   	r4,r4,r5
	l.lwz   	r4,0(r4)	 # SI load
	l.jr    	r4
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L4488:
	.word	.L4543
	.word	.L4543
	.word	.L4481
	.word	.L4543
	.word	.L4543
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4543
	.word	.L4481
	.word	.L4483
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4483
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4484
	.word	.L4481
	.word	.L4485
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4486
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4487
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4481
	.word	.L4483
	.section .text
.L4507:
	l.addi  	r14,r14,1
.L4542:
	l.add   	r4,r2,r14
	l.lbs   	r4,0(r4)	 # extendqisi2_no_sext_mem
	l.andi  	r5,r4,128
	l.sfnei	r5,0
	l.bf	.L4507	# delay slot filled
	l.sflesi	r4,31
	l.bf	.L4508	# delay slot filled
	l.movhi  	r5,hi(sqlite3IsAsciiIdChar)
	l.ori   	r5,r5,lo(sqlite3IsAsciiIdChar)
	l.add   	r4,r4,r5
	l.lbs   	r4,-32(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L4542	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
.L4508:
	l.addi  	r3,r3,-67
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfgtui	r3,49
	l.bnf	.L4547	# delay slot filled
	l.movhi  	r4,hi(.L4513)
.L4527:
	l.addi  	r4,r0,2	 # move immediate I
.L4509:
	l.slli  	r16,r16,3
	l.movhi  	r5,hi(trans.21367)
	l.add   	r2,r2,r14
	l.add   	r4,r16,r4
	l.ori   	r5,r5,lo(trans.21367)
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.add   	r4,r4,r5
	l.sfnei	r3,0
	l.bf	.L4517	# delay slot filled
	l.lbz   	r16,0(r4)	 # zero_extendqisi2
.L4480:
	l.addi  	r11,r16,-1
.L4559:
	l.srli  	r11,r11,31
.L4490:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4551:
	l.lbs   	r4,0(r2)	 # extendqisi2_no_sext_mem
	l.xori  	r6,r4,10
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bf	.L4495	# delay slot filled
	l.andi  	r6,r4,0xff	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bf	.L4558	# delay slot filled
	l.sfeqi	r4,0
	l.j     	.L4496	# delay slot filled
	l.ori   	r4,r3,0	 # move reg to reg
.L4548:
	l.andi  	r3,r4,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L4558	# delay slot filled
	l.sfeqi	r4,0
	l.lbs   	r4,0(r5)	 # extendqisi2_no_sext_mem
.L4496:
	l.xori  	r3,r4,10
	l.ori   	r2,r5,0	 # move reg to reg
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L4548	# delay slot filled
	l.addi  	r5,r5,1
.L4495:
	l.sfeqi	r4,0
.L4558:
	l.bf	.L4559	# delay slot filled
	l.addi  	r11,r16,-1
.L4543:
	l.addi  	r2,r2,1
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L4489	# delay slot filled
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
.L4487:
	l.addi  	r2,r2,1
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.andi  	r4,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L4498	# delay slot filled
	l.xori  	r4,r3,93
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bnf	.L4560	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.j     	.L4556	# delay slot filled
	l.sfeqi	r3,0
.L4549:
	l.sfnei	r4,0
	l.bnf	.L4556	# delay slot filled
	l.sfeqi	r3,0
	l.addi  	r2,r2,1
.L4560:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.xori  	r4,r3,93
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bnf	.L4549	# delay slot filled
	l.andi  	r4,r3,0xff	 # zero_extendqisi2
.L4498:
	l.sfeqi	r3,0
.L4556:
	l.bf	.L4490	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
.L4501:
	l.addi  	r2,r2,1
.L4557:
	l.addi  	r4,r0,2	 # move immediate I
	l.j     	.L4489	# delay slot filled
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
.L4486:
	l.addi  	r2,r2,1
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L4489	# delay slot filled
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
.L4485:
	l.addi  	r4,r2,1
	l.lbs   	r3,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,42
	l.bnf	.L4550
	l.nop			# nop delay slot
	l.ori   	r2,r4,0	 # move reg to reg
	l.j     	.L4489	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
.L4484:
	l.addi  	r5,r2,1
	l.lbs   	r3,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,45
	l.bnf	.L4551	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.j     	.L4489	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
.L4483:
	l.addi  	r2,r2,1
	l.lbs   	r11,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r11,0
	l.bf	.L4490	# delay slot filled
	l.sfeq 	r3,r11
	l.bnf	.L4561	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.j     	.L4557	# delay slot filled
	l.addi  	r2,r2,1
.L4552:
	l.sfne 	r3,r11
	l.bnf	.L4501
	l.nop			# nop delay slot
	l.addi  	r2,r2,1
.L4561:
	l.lbs   	r11,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r11,0
	l.bnf	.L4552
	l.nop			# nop delay slot
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4547:
	l.slli  	r3,r3,2
	l.ori   	r4,r4,lo(.L4513)
	l.add   	r3,r3,r4
	l.lwz   	r3,0(r3)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L4513:
	.word	.L4510
	.word	.L4527
	.word	.L4511
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4512
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4510
	.word	.L4527
	.word	.L4511
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4527
	.word	.L4512
	.section .text
.L4512:
	l.sfnei	r14,7
	l.bnf	.L4553	# delay slot filled
	l.sfnei	r14,4
	l.bnf	.L4554	# delay slot filled
	l.sfnei	r14,9
	l.bf	.L4509	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.movhi  	r4,hi(.LC116)
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L4544	# delay slot filled
	l.ori   	r4,r4,lo(.LC116)
.L4511:
	l.sfnei	r14,3
	l.bnf	.L4555	# delay slot filled
	l.sfnei	r14,7
	l.bf	.L4509	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.movhi  	r4,hi(.LC118)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC118)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4509	# delay slot filled
	l.addi  	r4,r0,3	 # move immediate I
	l.j     	.L4509	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
.L4510:
	l.sfnei	r14,6
	l.bf	.L4509	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.movhi  	r4,hi(.LC113)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC113)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4509	# delay slot filled
	l.addi  	r4,r0,4	 # move immediate I
	l.j     	.L4509	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
.L4550:
	l.lbs   	r11,2(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r11,0
	l.bf	.L4490	# delay slot filled
	l.addi  	r2,r2,3
	l.j     	.L4563	# delay slot filled
	l.sfnei	r11,42
.L4492:
	l.lbs   	r11,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r11,0
.L4562:
	l.bf	.L4490	# delay slot filled
	l.addi  	r2,r2,1
	l.sfnei	r11,42
.L4563:
	l.bf	.L4492
	l.nop			# nop delay slot
	l.lbs   	r11,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r11,47
	l.bf	.L4562	# delay slot filled
	l.sfeqi	r11,0
	l.addi  	r2,r2,1
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L4489	# delay slot filled
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
.L4504:
	l.ori   	r5,r5,lo(sqlite3IsAsciiIdChar)
	l.add   	r4,r4,r5
	l.lbs   	r4,-32(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,0
	l.bnf	.L4542
	l.nop			# nop delay slot
	l.j     	.L4557	# delay slot filled
	l.addi  	r2,r2,1
.L4555:
	l.movhi  	r4,hi(.LC117)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC117)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4509	# delay slot filled
	l.addi  	r4,r0,7	 # move immediate I
	l.j     	.L4509	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
.L4553:
	l.movhi  	r4,hi(.LC114)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC114)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4509	# delay slot filled
	l.addi  	r4,r0,6	 # move immediate I
	l.j     	.L4509	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
.L4554:
	l.movhi  	r4,hi(.LC115)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC115)
.L4544:
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4509	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.j     	.L4509	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
.L4518:
	l.j     	.L4480	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
.LFE1183:
	.size	sqlite3_complete, .-sqlite3_complete
	.align	4
.proc	sqlite3_libversion
	.global sqlite3_libversion
	.type	sqlite3_libversion, @function
sqlite3_libversion:
.LFB1185:
	l.movhi  	r11,hi(sqlite3_version)
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r11,lo(sqlite3_version)
.LFE1185:
	.size	sqlite3_libversion, .-sqlite3_libversion
	.align	4
.proc	sqlite3_libversion_number
	.global sqlite3_libversion_number
	.type	sqlite3_libversion_number, @function
sqlite3_libversion_number:
.LFB1186:
	l.movhi 	r11,hi(2949120)	 # move immediate M
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r11,56894
.LFE1186:
	.size	sqlite3_libversion_number, .-sqlite3_libversion_number
	.align	4
.proc	sqlite3_threadsafe
	.global sqlite3_threadsafe
	.type	sqlite3_threadsafe, @function
sqlite3_threadsafe:
.LFB1187:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE1187:
	.size	sqlite3_threadsafe, .-sqlite3_threadsafe
	.align	4
.proc	sqlite3_config
	.global sqlite3_config
	.type	sqlite3_config, @function
sqlite3_config:
.LFB1190:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1701:
	l.movhi  	r2,hi(sqlite3Config)
	l.sw    	-4(r1),r9	 # SI store
.LCFI1702:
	l.ori   	r2,r2,lo(sqlite3Config)
	l.sw    	-8(r1),r14	 # SI store
.LCFI1703:
	l.lwz   	r4,184(r2)	 # SI load
	l.addi  	r1,r1,-12
.LCFI1704:
	l.sfnei	r4,0
	l.bnf	.L4583	# delay slot filled
	l.addi  	r11,r0,21	 # move immediate I
.L4568:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L4583:
	l.addi  	r3,r3,-4
	l.sfgtui	r3,11
	l.bnf	.L4584	# delay slot filled
	l.addi  	r14,r1,12
.L4582:
	l.j     	.L4568	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L4584:
	l.movhi  	r4,hi(.L4578)
	l.slli  	r3,r3,2
	l.ori   	r4,r4,lo(.L4578)
	l.add   	r3,r3,r4
	l.lwz   	r3,0(r3)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L4578:
	.word	.L4570
	.word	.L4571
	.word	.L4572
	.word	.L4573
	.word	.L4582
	.word	.L4574
	.word	.L4582
	.word	.L4582
	.word	.L4582
	.word	.L4575
	.word	.L4576
	.word	.L4577
	.section .text
.L4577:
	l.lwz   	r3,96(r2)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L4585
	l.nop			# nop delay slot
	l.lwz   	r4,92(r2)	 # SI load
.L4587:
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	0(r3),r4	 # SI store
	l.lwz   	r4,96(r2)	 # SI load
	l.sw    	4(r3),r4	 # SI store
	l.lwz   	r4,100(r2)	 # SI load
	l.sw    	8(r3),r4	 # SI store
	l.lwz   	r4,104(r2)	 # SI load
	l.sw    	12(r3),r4	 # SI store
	l.lwz   	r4,108(r2)	 # SI load
	l.sw    	16(r3),r4	 # SI store
	l.lwz   	r4,112(r2)	 # SI load
	l.sw    	20(r3),r4	 # SI store
	l.lwz   	r4,116(r2)	 # SI load
	l.sw    	24(r3),r4	 # SI store
	l.lwz   	r4,120(r2)	 # SI load
	l.sw    	28(r3),r4	 # SI store
	l.lwz   	r4,124(r2)	 # SI load
	l.sw    	32(r3),r4	 # SI store
	l.lwz   	r4,128(r2)	 # SI load
	l.sw    	36(r3),r4	 # SI store
	l.lwz   	r2,132(r2)	 # SI load
	l.j     	.L4568	# delay slot filled
	l.sw    	40(r3),r2	 # SI store
.L4576:
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r4,0(r3)	 # SI load
	l.sw    	92(r2),r4	 # SI store
	l.lwz   	r4,4(r3)	 # SI load
	l.sw    	96(r2),r4	 # SI store
	l.lwz   	r4,8(r3)	 # SI load
	l.sw    	100(r2),r4	 # SI store
	l.lwz   	r4,12(r3)	 # SI load
	l.sw    	104(r2),r4	 # SI store
	l.lwz   	r4,16(r3)	 # SI load
	l.sw    	108(r2),r4	 # SI store
	l.lwz   	r4,20(r3)	 # SI load
	l.sw    	112(r2),r4	 # SI store
	l.lwz   	r4,24(r3)	 # SI load
	l.sw    	116(r2),r4	 # SI store
	l.lwz   	r4,28(r3)	 # SI load
	l.sw    	120(r2),r4	 # SI store
	l.lwz   	r4,32(r3)	 # SI load
	l.sw    	124(r2),r4	 # SI store
	l.lwz   	r4,36(r3)	 # SI load
	l.sw    	128(r2),r4	 # SI store
	l.lwz   	r3,40(r3)	 # SI load
	l.j     	.L4568	# delay slot filled
	l.sw    	132(r2),r3	 # SI store
.L4575:
	l.lwz   	r4,0(r14)	 # SI load
	l.lwz   	r3,4(r14)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	16(r2),r4	 # SI store
	l.j     	.L4568	# delay slot filled
	l.sw    	20(r2),r3	 # SI store
.L4574:
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L4568	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
.L4573:
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r4,4(r14)	 # SI load
	l.lwz   	r3,8(r14)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	164(r2),r5	 # SI store
	l.sw    	168(r2),r4	 # SI store
	l.j     	.L4568	# delay slot filled
	l.sw    	172(r2),r3	 # SI store
.L4572:
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r4,4(r14)	 # SI load
	l.lwz   	r3,8(r14)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	152(r2),r5	 # SI store
	l.sw    	156(r2),r4	 # SI store
	l.j     	.L4568	# delay slot filled
	l.sw    	160(r2),r3	 # SI store
.L4571:
	l.lwz   	r3,24(r2)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L4586
	l.nop			# nop delay slot
	l.lwz   	r4,24(r2)	 # SI load
.L4588:
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	0(r3),r4	 # SI store
	l.lwz   	r4,28(r2)	 # SI load
	l.sw    	4(r3),r4	 # SI store
	l.lwz   	r4,32(r2)	 # SI load
	l.sw    	8(r3),r4	 # SI store
	l.lwz   	r4,36(r2)	 # SI load
	l.sw    	12(r3),r4	 # SI store
	l.lwz   	r4,40(r2)	 # SI load
	l.sw    	16(r3),r4	 # SI store
	l.lwz   	r4,44(r2)	 # SI load
	l.sw    	20(r3),r4	 # SI store
	l.lwz   	r4,48(r2)	 # SI load
	l.sw    	24(r3),r4	 # SI store
	l.lwz   	r2,52(r2)	 # SI load
	l.j     	.L4568	# delay slot filled
	l.sw    	28(r3),r2	 # SI store
.L4570:
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r4,0(r3)	 # SI load
	l.sw    	24(r2),r4	 # SI store
	l.lwz   	r4,4(r3)	 # SI load
	l.sw    	28(r2),r4	 # SI store
	l.lwz   	r4,8(r3)	 # SI load
	l.sw    	32(r2),r4	 # SI store
	l.lwz   	r4,12(r3)	 # SI load
	l.sw    	36(r2),r4	 # SI store
	l.lwz   	r4,16(r3)	 # SI load
	l.sw    	40(r2),r4	 # SI store
	l.lwz   	r4,20(r3)	 # SI load
	l.sw    	44(r2),r4	 # SI store
	l.lwz   	r4,24(r3)	 # SI load
	l.sw    	48(r2),r4	 # SI store
	l.lwz   	r3,28(r3)	 # SI load
	l.j     	.L4568	# delay slot filled
	l.sw    	52(r2),r3	 # SI store
.L4585:
	l.jal   	sqlite3PCacheSetDefault
	l.nop			# nop delay slot
	l.j     	.L4587	# delay slot filled
	l.lwz   	r4,92(r2)	 # SI load
.L4586:
	l.jal   	sqlite3MemSetDefault
	l.nop			# nop delay slot
	l.j     	.L4588	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
.LFE1190:
	.size	sqlite3_config, .-sqlite3_config
	.align	4
.proc	sqlite3MemSetDefault
	.type	sqlite3MemSetDefault, @function
sqlite3MemSetDefault:
.LFB66:
	l.movhi  	r4,hi(defaultMethods.6608)
	l.sw    	-4(r1),r9	 # SI store
.LCFI1705:
	l.ori   	r4,r4,lo(defaultMethods.6608)
	l.addi  	r1,r1,-8
.LCFI1706:
	l.addi  	r3,r0,4	 # move immediate I
	l.jal   	sqlite3_config	# delay slot filled
	l.sw    	0(r1),r4	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE66:
	.size	sqlite3MemSetDefault, .-sqlite3MemSetDefault
	.align	4
.proc	sqlite3PCacheSetDefault
	.type	sqlite3PCacheSetDefault, @function
sqlite3PCacheSetDefault:
.LFB259:
	l.movhi  	r4,hi(defaultMethods.9455)
	l.sw    	-4(r1),r9	 # SI store
.LCFI1707:
	l.ori   	r4,r4,lo(defaultMethods.9455)
	l.addi  	r1,r1,-8
.LCFI1708:
	l.addi  	r3,r0,14	 # move immediate I
	l.jal   	sqlite3_config	# delay slot filled
	l.sw    	0(r1),r4	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE259:
	.size	sqlite3PCacheSetDefault, .-sqlite3PCacheSetDefault
	.align	4
.proc	sqlite3_initialize
	.global sqlite3_initialize
	.type	sqlite3_initialize, @function
sqlite3_initialize:
.LFB1188:
	l.sw    	-28(r1),r2	 # SI store
.LCFI1709:
	l.movhi  	r2,hi(sqlite3Config)
	l.sw    	-24(r1),r14	 # SI store
.LCFI1710:
	l.ori   	r2,r2,lo(sqlite3Config)
	l.sw    	-4(r1),r9	 # SI store
.LCFI1711:
	l.sw    	-20(r1),r16	 # SI store
.LCFI1712:
	l.sw    	-16(r1),r18	 # SI store
.LCFI1713:
	l.sw    	-12(r1),r20	 # SI store
.LCFI1714:
	l.sw    	-8(r1),r22	 # SI store
.LCFI1715:
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r14,184(r2)	 # SI load
	l.sfne 	r14,r11
.LCFI1716:
	l.bf	.L4592	# delay slot filled
	l.addi  	r1,r1,-28
	l.lwz   	r3,192(r2)	 # SI load
	l.sfne 	r3,r11
	l.bnf	.L4621
	l.nop			# nop delay slot
.L4593:
	l.addi  	r3,r0,1	 # move immediate I
	l.lwz   	r4,196(r2)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L4622	# delay slot filled
	l.sw    	192(r2),r3	 # SI store
.L4604:
	l.lwz   	r3,200(r2)	 # SI load
	l.movhi  	r6,hi(sqlite3Config)
	l.addi  	r3,r3,1
	l.ori   	r6,r6,lo(sqlite3Config)
	l.sw    	200(r2),r3	 # SI store
	l.sfeqi	r14,0
	l.bnf	.L4605	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r4,188(r6)	 # SI load
	l.sfnei	r4,0
	l.bf	.L4605	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
	l.movhi  	r3,hi(sqlite3GlobalFunctions)
	l.addi  	r7,r0,1	 # move immediate I
	l.ori   	r3,r3,lo(sqlite3GlobalFunctions)
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r5,r0,92	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.sw    	188(r6),r7	 # SI store
	l.movhi  	r5,hi(aBuiltinFunc.16983)
.L4629:
	l.slli  	r4,r14,5
	l.ori   	r5,r5,lo(aBuiltinFunc.16983)
	l.movhi  	r3,hi(sqlite3GlobalFunctions)
	l.add   	r4,r4,r5
	l.ori   	r3,r3,lo(sqlite3GlobalFunctions)
	l.jal   	sqlite3FuncDefInsert	# delay slot filled
	l.addi  	r14,r14,1
	l.sfnei	r14,46
	l.bf	.L4629	# delay slot filled
	l.movhi  	r5,hi(aBuiltinFunc.16983)
	l.addi  	r14,r0,0	 # move immediate I
	l.movhi  	r7,hi(aDateTimeFuncs.6424)
.L4630:
	l.slli  	r4,r14,5
	l.ori   	r7,r7,lo(aDateTimeFuncs.6424)
	l.movhi  	r3,hi(sqlite3GlobalFunctions)
	l.add   	r4,r4,r7
	l.ori   	r3,r3,lo(sqlite3GlobalFunctions)
	l.jal   	sqlite3FuncDefInsert	# delay slot filled
	l.addi  	r14,r14,1
	l.sfnei	r14,8
	l.bf	.L4630	# delay slot filled
	l.movhi  	r7,hi(aDateTimeFuncs.6424)
	l.lwz   	r11,96(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L4623
	l.nop			# nop delay slot
.L4608:
	l.lwz   	r3,92(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.movhi  	r14,hi(sqlite3Config)
	l.sfnei	r11,0
	l.bnf	.L4624	# delay slot filled
	l.ori   	r14,r14,lo(sqlite3Config)
.L4609:
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,200(r2)	 # SI load
	l.sw    	188(r2),r4	 # SI store
.L4605:
	l.addi  	r3,r3,-1
	l.sfgtsi	r3,0
	l.bnf	.L4625	# delay slot filled
	l.sw    	200(r2),r3	 # SI store
.L4592:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L4621:
	l.lwz   	r3,24(r2)	 # SI load
	l.sfne 	r3,r11
	l.bnf	.L4626
	l.nop			# nop delay slot
	l.movhi  	r14,hi(mem0)
	l.addi  	r4,r0,0	 # move immediate I
.L4628:
	l.ori   	r14,r14,lo(mem0)
	l.lwz   	r3,4(r2)	 # SI load
	l.sw    	0(r14),r4	 # SI store
	l.sw    	4(r14),r4	 # SI store
	l.sw    	8(r14),r4	 # SI store
	l.sw    	12(r14),r4	 # SI store
	l.sw    	16(r14),r4	 # SI store
	l.sw    	20(r14),r4	 # SI store
	l.sw    	24(r14),r4	 # SI store
	l.sw    	28(r14),r4	 # SI store
	l.sw    	32(r14),r4	 # SI store
	l.sfeq 	r3,r4
	l.bf	.L4595	# delay slot filled
	l.sw    	36(r14),r4	 # SI store
	l.addi  	r3,r0,8	 # move immediate I
	l.sw    	8(r14),r3	 # SI store
.L4595:
	l.lwz   	r4,152(r2)	 # SI load
	l.movhi  	r3,hi(sqlite3Config)
	l.sfeqi	r4,0
	l.bf	.L4596	# delay slot filled
	l.ori   	r3,r3,lo(sqlite3Config)
	l.lwz   	r6,156(r3)	 # SI load
	l.sflesi	r6,99
	l.bf	.L4596
	l.nop			# nop delay slot
	l.lwz   	r5,160(r3)	 # SI load
	l.sfltsi	r5,0
	l.bf	.L4596	# delay slot filled
	l.addi  	r7,r0,-8	 # move immediate I
	l.addi  	r6,r6,-4
	l.sfeqi	r5,0
	l.and   	r6,r6,r7
	l.mul   	r7,r6,r5
	l.add   	r4,r4,r7
	l.sw    	156(r3),r6	 # SI store
	l.bf	.L4597	# delay slot filled
	l.sw    	32(r14),r4	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
.L4598:
	l.sw    	0(r4),r3	 # SI store
	l.addi  	r3,r3,1
	l.sfne 	r3,r5
	l.bf	.L4598	# delay slot filled
	l.addi  	r4,r4,4
.L4597:
	l.sw    	0(r14),r5	 # SI store
.L4599:
	l.lwz   	r20,164(r2)	 # SI load
	l.movhi  	r16,hi(sqlite3Config)
	l.sfeqi	r20,0
	l.bf	.L4600	# delay slot filled
	l.ori   	r16,r16,lo(sqlite3Config)
	l.lwz   	r18,168(r16)	 # SI load
	l.sflesi	r18,511
	l.bf	.L4631	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r22,172(r16)	 # SI load
	l.sflesi	r22,0
	l.bf	.L4631	# delay slot filled
	l.addi  	r5,r0,-8	 # move immediate I
	l.slli  	r3,r22,2
	l.and   	r4,r18,r5
	l.add   	r3,r4,r3
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r3,r3,-1
	l.sub   	r11,r22,r11
	l.mul   	r4,r11,r18
	l.add   	r4,r20,r4
	l.sw    	172(r16),r11	 # SI store
	l.sflesi	r11,0
	l.bf	.L4601	# delay slot filled
	l.sw    	36(r14),r4	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
.L4602:
	l.sw    	0(r4),r3	 # SI store
	l.addi  	r3,r3,1
	l.sfne 	r3,r11
	l.bf	.L4602	# delay slot filled
	l.addi  	r4,r4,4
.L4601:
	l.sw    	4(r14),r11	 # SI store
.L4603:
	l.lwz   	r11,44(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.lwz   	r3,52(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L4592
	l.nop			# nop delay slot
	l.movhi  	r3,hi(sqlite3Config)
	l.ori   	r3,r3,lo(sqlite3Config)
	l.j     	.L4593	# delay slot filled
	l.lwz   	r14,184(r3)	 # SI load
.L4625:
	l.movhi  	r2,hi(sqlite3Config)
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r2,r2,lo(sqlite3Config)
	l.j     	.L4592	# delay slot filled
	l.sw    	196(r2),r5	 # SI store
.L4596:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	152(r2),r3	 # SI store
	l.j     	.L4599	# delay slot filled
	l.sw    	156(r2),r3	 # SI store
.L4600:
	l.addi  	r7,r0,0	 # move immediate I
.L4631:
	l.sw    	164(r2),r7	 # SI store
	l.j     	.L4603	# delay slot filled
	l.sw    	168(r2),r7	 # SI store
.L4624:
	l.jal   	sqlite3_os_init
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L4609	# delay slot filled
	l.movhi  	r8,hi(pcache1_g)
	l.lwz   	r6,168(r14)	 # SI load
	l.addi  	r3,r0,-8	 # move immediate I
	l.ori   	r8,r8,lo(pcache1_g)
	l.lwz   	r7,164(r14)	 # SI load
	l.and   	r6,r6,r3
	l.lwz   	r12,172(r14)	 # SI load
	l.sw    	24(r8),r6	 # SI store
	l.sw    	28(r8),r7	 # SI store
	l.sfeqi	r12,0
	l.bf	.L4610	# delay slot filled
	l.sw    	36(r8),r11	 # SI store
	l.addi  	r13,r12,-1
	l.ori   	r3,r7,0	 # move reg to reg
	l.ori   	r4,r13,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
.L4611:
	l.sw    	0(r3),r5	 # SI store
	l.addi  	r4,r4,-1
	l.ori   	r5,r3,0	 # move reg to reg
	l.sfnei	r4,-1
	l.bf	.L4611	# delay slot filled
	l.add   	r3,r3,r6
	l.mul   	r3,r13,r6
	l.mul   	r6,r6,r12
	l.add   	r3,r7,r3
	l.add   	r7,r7,r6
	l.sw    	36(r8),r3	 # SI store
.L4610:
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	32(r8),r7	 # SI store
	l.j     	.L4609	# delay slot filled
	l.sw    	184(r2),r3	 # SI store
.L4622:
	l.movhi  	r3,hi(sqlite3Config)
	l.addi  	r4,r0,8	 # move immediate I
	l.ori   	r3,r3,lo(sqlite3Config)
	l.j     	.L4604	# delay slot filled
	l.sw    	196(r3),r4	 # SI store
.L4626:
	l.jal   	sqlite3MemSetDefault	# delay slot filled
	l.movhi  	r14,hi(mem0)
	l.j     	.L4628	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L4623:
	l.jal   	sqlite3PCacheSetDefault
	l.nop			# nop delay slot
	l.movhi  	r3,hi(sqlite3Config)
	l.ori   	r3,r3,lo(sqlite3Config)
	l.j     	.L4608	# delay slot filled
	l.lwz   	r11,96(r3)	 # SI load
.LFE1188:
	.size	sqlite3_initialize, .-sqlite3_initialize
	.align	4
.proc	sqlite3_reset_auto_extension
	.global sqlite3_reset_auto_extension
	.type	sqlite3_reset_auto_extension, @function
sqlite3_reset_auto_extension:
.LFB997:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1717:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1718:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1719:
.LCFI1720:
	l.jal   	sqlite3_initialize	# delay slot filled
	l.addi  	r1,r1,-12
	l.sfnei	r11,0
	l.bf	.L4632	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.movhi  	r14,hi(sqlite3Autoext)
	l.ori   	r14,r14,lo(sqlite3Autoext)
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,4(r14)	 # SI load
	l.sw    	4(r14),r2	 # SI store
	l.sw    	0(r14),r2	 # SI store
.L4632:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE997:
	.size	sqlite3_reset_auto_extension, .-sqlite3_reset_auto_extension
	.align	4
.proc	sqlite3_shutdown
	.global sqlite3_shutdown
	.type	sqlite3_shutdown, @function
sqlite3_shutdown:
.LFB1189:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1721:
	l.movhi  	r2,hi(sqlite3Config)
	l.sw    	-4(r1),r9	 # SI store
.LCFI1722:
	l.ori   	r2,r2,lo(sqlite3Config)
	l.lwz   	r3,184(r2)	 # SI load
	l.sfeqi	r3,0
.LCFI1723:
	l.bf	.L4635	# delay slot filled
	l.addi  	r1,r1,-8
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r4,100(r2)	 # SI load
	l.sfeq 	r4,r3
	l.bf	.L4636	# delay slot filled
	l.sw    	192(r2),r3	 # SI store
	l.jalr  	r4	# delay slot filled
	l.lwz   	r3,92(r2)	 # SI load
.L4636:
	l.jal   	sqlite3_reset_auto_extension
	l.nop			# nop delay slot
	l.lwz   	r4,48(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L4637	# delay slot filled
	l.movhi  	r3,hi(sqlite3Config)
	l.ori   	r3,r3,lo(sqlite3Config)
	l.jalr  	r4	# delay slot filled
	l.lwz   	r3,52(r3)	 # SI load
.L4637:
	l.movhi  	r3,hi(mem0)
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r3,lo(mem0)
	l.sw    	184(r2),r4	 # SI store
	l.sw    	0(r3),r4	 # SI store
	l.sw    	4(r3),r4	 # SI store
	l.sw    	8(r3),r4	 # SI store
	l.sw    	12(r3),r4	 # SI store
	l.sw    	16(r3),r4	 # SI store
	l.sw    	20(r3),r4	 # SI store
	l.sw    	24(r3),r4	 # SI store
	l.sw    	28(r3),r4	 # SI store
	l.sw    	32(r3),r4	 # SI store
	l.sw    	36(r3),r4	 # SI store
.L4635:
	l.addi	r1,r1,8
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1189:
	.size	sqlite3_shutdown, .-sqlite3_shutdown
	.align	4
.proc	sqlite3_vmprintf
	.global sqlite3_vmprintf
	.type	sqlite3_vmprintf, @function
sqlite3_vmprintf:
.LFB108:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1724:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1725:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1726:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1727:
	l.addi  	r1,r1,-396
.LCFI1728:
	l.ori   	r16,r3,0	 # move reg to reg
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.sfne 	r11,r7
	l.bf	.L4639	# delay slot filled
	l.ori   	r4,r7,0	 # move reg to reg
	l.sw    	352(r1),r7	 # SI store
	l.sw    	364(r1),r7	 # SI store
	l.sb    	378(r1),r7	    # movqi
	l.sb    	376(r1),r7	    # movqi
	l.addi  	r7,r0,350	 # move immediate I
	l.addi  	r2,r1,352
	l.sw    	368(r1),r7	 # SI store
	l.movhi 	r7,hi(999948288)	 # move immediate M
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r7,r7,51712
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	372(r1),r7	 # SI store
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.sw    	356(r1),r1	 # SI store
	l.sb    	377(r1),r7	    # movqi
	l.jal   	sqlite3VXPrintf	# delay slot filled
	l.sw    	360(r1),r1	 # SI store
	l.jal   	sqlite3StrAccumFinish	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r7,r11,0	 # move reg to reg
.L4639:
	l.addi	r1,r1,396
	l.ori   	r11,r7,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE108:
	.size	sqlite3_vmprintf, .-sqlite3_vmprintf
	.align	4
.proc	sqlite3_mprintf
	.global sqlite3_mprintf
	.type	sqlite3_mprintf, @function
sqlite3_mprintf:
.LFB109:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1729:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1730:
	l.addi  	r1,r1,-8
.LCFI1731:
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.sfne 	r11,r4
	l.bf	.L4642
	l.nop			# nop delay slot
	l.addi  	r4,r1,8
	l.jal   	sqlite3_vmprintf	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
.L4642:
	l.addi	r1,r1,8
	l.ori   	r11,r4,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE109:
	.size	sqlite3_mprintf, .-sqlite3_mprintf
	.align	4
.proc	sqlite3_realloc
	.global sqlite3_realloc
	.type	sqlite3_realloc, @function
sqlite3_realloc:
.LFB88:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1732:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1733:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1734:
	l.addi  	r1,r1,-12
.LCFI1735:
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L4646	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L4646:
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3Realloc	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE88:
	.size	sqlite3_realloc, .-sqlite3_realloc
	.align	4
.proc	sqlite3DbRealloc
	.type	sqlite3DbRealloc, @function
sqlite3DbRealloc:
.LFB92:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1736:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1737:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1738:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1739:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbz   	r4,30(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-16
.LCFI1740:
	l.sfnei	r4,0
	l.bf	.L4652	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfnei	r2,0
	l.bnf	.L4654	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r4,240(r3)	 # SI load
	l.sfltu 	r2,r4
	l.bf	.L4650
	l.nop			# nop delay slot
	l.lwz   	r4,244(r3)	 # SI load
	l.sfgeu 	r2,r4
	l.bf	.L4650
	l.nop			# nop delay slot
	l.lhz   	r4,224(r3)	 # zero_extendqisi2
	l.sfles 	r5,r4
	l.bf	.L4648
	l.nop			# nop delay slot
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4653	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lhz   	r5,224(r14)	 # zero_extendqisi2
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
	l.j     	.L4655	# delay slot filled
	l.addi	r1,r1,16
.L4652:
	l.addi  	r2,r0,0	 # move immediate I
.L4648:
	l.addi	r1,r1,16
.L4655:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4650:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3_realloc	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L4648	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	30(r14),r2	    # movqi
	l.j     	.L4648	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L4654:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3DbMallocRaw	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L4653:
	l.j     	.L4648	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.LFE92:
	.size	sqlite3DbRealloc, .-sqlite3DbRealloc
	.align	4
.proc	sqlite3DbReallocOrFree
	.type	sqlite3DbReallocOrFree, @function
sqlite3DbReallocOrFree:
.LFB93:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1741:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1742:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1743:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1744:
	l.addi  	r1,r1,-16
.LCFI1745:
	l.ori   	r16,r3,0	 # move reg to reg
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L4658	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4658:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE93:
	.size	sqlite3DbReallocOrFree, .-sqlite3DbReallocOrFree
	.align	4
.proc	sqlite3VdbeMemGrow
	.type	sqlite3VdbeMemGrow, @function
sqlite3VdbeMemGrow:
.LFB511:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1746:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1747:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1748:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1749:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI1750:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sflesi	r4,31
	l.bnf	.L4660	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.addi  	r14,r0,32	 # move immediate I
.L4660:
	l.lwz   	r3,16(r2)	 # SI load
	l.jal   	sqlite3DbMallocSize	# delay slot filled
	l.lwz   	r4,36(r2)	 # SI load
	l.sfles 	r14,r11
	l.bf	.L4671	# delay slot filled
	l.sfeqi	r16,0
	l.bf	.L4662
	l.nop			# nop delay slot
	l.lwz   	r5,20(r2)	 # SI load
	l.lwz   	r4,36(r2)	 # SI load
	l.sfne 	r5,r4
	l.bnf	.L4669
	l.nop			# nop delay slot
.L4663:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r3,16(r2)	 # SI load
	l.lwz   	r3,16(r2)	 # SI load
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sw    	36(r2),r11	 # SI store
	l.sfeqi	r16,0
.L4671:
	l.bf	.L4664
	l.nop			# nop delay slot
	l.lwz   	r4,20(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L4664
	l.nop			# nop delay slot
	l.lwz   	r3,36(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L4664	# delay slot filled
	l.sfeq 	r4,r3
	l.bf	.L4664
	l.nop			# nop delay slot
	l.jal   	memcpy	# delay slot filled
	l.lwz   	r5,24(r2)	 # SI load
.L4664:
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,1024
	l.sfeqi	r3,0
	l.bf	.L4665
	l.nop			# nop delay slot
	l.lwz   	r4,32(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L4665
	l.nop			# nop delay slot
	l.jalr  	r4	# delay slot filled
	l.lwz   	r3,20(r2)	 # SI load
.L4665:
	l.lwz   	r3,36(r2)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L4670	# delay slot filled
	l.sw    	20(r2),r3	 # SI store
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.addi  	r4,r0,-6145	 # move immediate I
	l.and   	r3,r3,r4
	l.addi  	r4,r0,0	 # move immediate I
	l.sh    	28(r2),r3	 # movhi
	l.sw    	32(r2),r4	 # SI store
	l.addi	r1,r1,16
	l.ori   	r11,r4,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4662:
	l.j     	.L4663	# delay slot filled
	l.lwz   	r4,36(r2)	 # SI load
.L4670:
	l.addi  	r4,r0,1	 # movhi: move immediate
	l.sw    	32(r2),r3	 # SI store
	l.sh    	28(r2),r4	 # movhi
	l.addi	r1,r1,16
	l.addi  	r11,r0,7	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4669:
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r3,16(r2)	 # SI load
	l.jal   	sqlite3DbReallocOrFree	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sw    	36(r2),r11	 # SI store
	l.j     	.L4664	# delay slot filled
	l.sw    	20(r2),r11	 # SI store
.LFE511:
	.size	sqlite3VdbeMemGrow, .-sqlite3VdbeMemGrow
	.align	4
.proc	sqlite3VdbeMemExpandBlob
	.type	sqlite3VdbeMemExpandBlob, @function
sqlite3VdbeMemExpandBlob:
.LFB513:
	l.lhz   	r11,28(r3)	 # zero_extendqisi2
	l.sw    	-12(r1),r2	 # SI store
.LCFI1751:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1752:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1753:
	l.andi  	r11,r11,16384
	l.addi  	r1,r1,-12
.LCFI1754:
	l.sfeqi	r11,0
	l.bf	.L4673	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r3,24(r3)	 # SI load
	l.add   	r4,r4,r3
	l.sflesi	r4,0
	l.bf	.L4678	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfnei	r14,0
	l.bnf	.L4679	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
.L4673:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L4679:
	l.lwz   	r5,20(r2)	 # SI load
.L4680:
	l.lwz   	r3,24(r2)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.add   	r3,r5,r3
	l.jal   	memset	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
	l.lhz   	r4,28(r2)	 # zero_extendqisi2
	l.lwz   	r5,24(r2)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r6,r0,-16897	 # move immediate I
	l.add   	r3,r5,r3
	l.and   	r4,r4,r6
	l.sw    	24(r2),r3	 # SI store
	l.sh    	28(r2),r4	 # movhi
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L4678:
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfnei	r14,0
	l.bf	.L4673	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.j     	.L4680	# delay slot filled
	l.lwz   	r5,20(r2)	 # SI load
.LFE513:
	.size	sqlite3VdbeMemExpandBlob, .-sqlite3VdbeMemExpandBlob
	.align	4
.proc	sqlite3VdbeMemMakeWriteable
	.type	sqlite3VdbeMemMakeWriteable, @function
sqlite3VdbeMemMakeWriteable:
.LFB512:
	l.lhz   	r11,28(r3)	 # zero_extendqisi2
	l.sw    	-8(r1),r2	 # SI store
.LCFI1755:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1756:
	l.andi  	r4,r11,16384
	l.addi  	r1,r1,-8
.LCFI1757:
	l.sfeqi	r4,0
	l.bnf	.L4687	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L4682:
	l.andi  	r11,r11,18
	l.sfeqi	r11,0
	l.bf	.L4683
	l.nop			# nop delay slot
	l.lwz   	r4,20(r2)	 # SI load
	l.lwz   	r3,36(r2)	 # SI load
	l.sfeq 	r4,r3
	l.bf	.L4683	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r4,2
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r11,0	 # move reg to reg
	l.sfnei	r3,0
	l.bf	.L4683	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.lwz   	r5,20(r2)	 # SI load
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r11,r3,0	 # move reg to reg
	l.add   	r4,r5,r4
	l.sb    	0(r4),r3	    # movqi
	l.lwz   	r5,20(r2)	 # SI load
	l.lwz   	r4,24(r2)	 # SI load
	l.add   	r4,r5,r4
	l.sb    	1(r4),r3	    # movqi
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.ori   	r3,r3,512
	l.sh    	28(r2),r3	 # movhi
.L4683:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L4687:
	l.jal   	sqlite3VdbeMemExpandBlob
	l.nop			# nop delay slot
	l.j     	.L4682	# delay slot filled
	l.lhz   	r11,28(r2)	 # zero_extendqisi2
.LFE512:
	.size	sqlite3VdbeMemMakeWriteable, .-sqlite3VdbeMemMakeWriteable
	.align	4
.proc	sqlite3VdbeChangeEncoding
	.type	sqlite3VdbeChangeEncoding, @function
sqlite3VdbeChangeEncoding:
.LFB510:
	l.lhz   	r5,28(r3)	 # zero_extendqisi2
	l.sw    	-24(r1),r2	 # SI store
.LCFI1758:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1759:
	l.sw    	-20(r1),r14	 # SI store
.LCFI1760:
	l.sw    	-16(r1),r16	 # SI store
.LCFI1761:
	l.sw    	-12(r1),r18	 # SI store
.LCFI1762:
	l.sw    	-8(r1),r20	 # SI store
.LCFI1763:
	l.andi  	r5,r5,2
	l.addi  	r1,r1,-24
.LCFI1764:
	l.sfeqi	r5,0
	l.bf	.L4689	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r6,31(r3)	 # zero_extendqisi2
	l.sfeq 	r6,r4
	l.bf	.L4689	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.andi  	r16,r4,0xff	 # zero_extendqisi2
	l.sfeqi	r16,1
	l.bnf	.L4759	# delay slot filled
	l.sfeqi	r6,1
	l.sfnei	r16,1
.L4770:
	l.bnf	.L4760	# delay slot filled
	l.addi  	r13,r0,-2	 # move immediate I
	l.lwz   	r20,24(r2)	 # SI load
	l.addi  	r4,r20,1
	l.add   	r4,r4,r4
.L4695:
.L4691:
	l.lwz   	r3,16(r2)	 # SI load
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.lwz   	r18,20(r2)	 # SI load
	l.addi  	r5,r0,7	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L4689	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r3,31(r2)	 # zero_extendqisi2
	l.ori   	r5,r18,0	 # move reg to reg
	l.sfnei	r3,1
	l.bnf	.L4761	# delay slot filled
	l.add   	r8,r18,r20
	l.sfeqi	r3,2
	l.bf	.L4715	# delay slot filled
	l.sfltu 	r18,r8
	l.bf	.L4747	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
	l.j     	.L4717	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L4762:
	l.sb    	0(r7),r6	    # movqi
	l.addi  	r7,r7,1
.L4726:
	l.sfgtu 	r8,r5
	l.bnf	.L4717	# delay slot filled
	l.sub   	r3,r7,r14
.L4747:
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.lbz   	r3,1(r5)	 # zero_extendqisi2
	l.slli  	r6,r6,8
	l.movhi 	r13,hi(-65536)	 # move immediate M
	l.addi  	r5,r5,2
	l.add   	r6,r6,r3
	l.ori   	r13,r13,10240
	l.andi  	r12,r6,960
	l.slli  	r11,r6,10
	l.addi  	r12,r12,64
	l.add   	r3,r6,r13
	l.addi  	r4,r5,1
	l.slli  	r12,r12,10
	l.sfgtui	r3,2047
	l.bf	.L4724	# delay slot filled
	l.andi  	r11,r11,65535
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.slli  	r6,r6,8
	l.addi  	r5,r5,2
	l.add   	r6,r3,r6
	l.andi  	r6,r6,1023
	l.add   	r12,r6,r12
	l.add   	r6,r12,r11
.L4724:
	l.sfgtui	r6,127
	l.bnf	.L4762	# delay slot filled
	l.sfgtui	r6,2047
	l.srli  	r4,r6,6
	l.bf	.L4727	# delay slot filled
	l.andi  	r3,r6,63
	l.andi  	r4,r4,31
	l.addi  	r3,r3,-128
	l.addi  	r4,r4,-64
	l.sb    	1(r7),r3	    # movqi
	l.sb    	0(r7),r4	    # movqi
	l.sfgtu 	r8,r5
	l.bf	.L4747	# delay slot filled
	l.addi  	r7,r7,2
	l.sub   	r3,r7,r14
.L4717:
	l.sw    	24(r2),r3	 # SI store
.L4714:
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.sb    	0(r7),r4	    # movqi
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,58367
	l.sb    	31(r2),r16	    # movqi
	l.ori   	r3,r3,1536
	l.sw    	20(r2),r14	 # SI store
	l.sh    	28(r2),r3	 # movhi
	l.sw    	36(r2),r14	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
.L4689:
	l.addi	r1,r1,24
	l.ori   	r11,r5,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L4760:
	l.lwz   	r20,24(r2)	 # SI load
	l.and   	r20,r20,r13
	l.add   	r4,r20,r20
	l.sw    	24(r2),r20	 # SI store
	l.j     	.L4695	# delay slot filled
	l.addi  	r4,r4,1
.L4727:
	l.srli  	r13,r6,12
	l.srli  	r15,r6,18
	l.srli  	r12,r6,6
	l.ori   	r4,r13,0	 # move reg to reg
	l.ori   	r3,r0,65535	 # move immediate K
	l.andi  	r15,r15,7
	l.andi  	r13,r13,63
	l.andi  	r12,r12,63
	l.andi  	r11,r6,63
	l.andi  	r4,r4,15
	l.sfgtu 	r6,r3
	l.addi  	r15,r15,-16
	l.addi  	r13,r13,-128
	l.addi  	r12,r12,-128
	l.addi  	r11,r11,-128
	l.bf	.L4728	# delay slot filled
	l.addi  	r4,r4,-32
	l.sb    	0(r7),r4	    # movqi
	l.sb    	1(r7),r12	    # movqi
	l.sb    	2(r7),r11	    # movqi
	l.j     	.L4726	# delay slot filled
	l.addi  	r7,r7,3
.L4728:
	l.sb    	0(r7),r15	    # movqi
	l.sb    	1(r7),r13	    # movqi
	l.sb    	2(r7),r12	    # movqi
	l.sb    	3(r7),r11	    # movqi
	l.j     	.L4726	# delay slot filled
	l.addi  	r7,r7,4
.L4759:
	l.bf	.L4770	# delay slot filled
	l.sfnei	r16,1
	l.jal   	sqlite3VdbeMemMakeWriteable
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L4689	# delay slot filled
	l.addi  	r5,r0,7	 # move immediate I
	l.lwz   	r6,24(r2)	 # SI load
	l.addi  	r4,r0,-2	 # move immediate I
	l.lwz   	r3,20(r2)	 # SI load
	l.and   	r6,r6,r4
	l.add   	r6,r3,r6
	l.sfgeu 	r3,r6
	l.bf	.L4692
	l.nop			# nop delay slot
	l.addi  	r5,r3,1
.L4693:
	l.lbz   	r7,0(r5)	 # zero_extendqisi2
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sb    	0(r3),r7	    # movqi
	l.sb    	0(r5),r4	    # movqi
	l.addi  	r3,r3,2
	l.sfgtu 	r6,r3
	l.bf	.L4693	# delay slot filled
	l.addi  	r5,r5,2
.L4692:
	l.sb    	31(r2),r16	    # movqi
	l.j     	.L4689	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L4761:
	l.sfeqi	r16,2
	l.bf	.L4697	# delay slot filled
	l.sfltu 	r18,r8
	l.bnf	.L4755	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
.L4745:
	l.lbz   	r3,0(r5)	 # zero_extendqisi2
	l.sfleui	r3,191
	l.bf	.L4707	# delay slot filled
	l.addi  	r5,r5,1
	l.movhi  	r4,hi(sqlite3Utf8Trans1)
	l.sfeq 	r8,r5
	l.ori   	r4,r4,lo(sqlite3Utf8Trans1)
	l.add   	r3,r3,r4
	l.bf	.L4708	# delay slot filled
	l.lbz   	r3,-192(r3)	 # zero_extendqisi2
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.andi  	r4,r6,192
	l.sfnei	r4,128
	l.bnf	.L4746	# delay slot filled
	l.sfleui	r3,127
	l.j     	.L4768
	l.nop			# nop delay slot
.L4763:
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.andi  	r12,r6,192
	l.sfeqi	r12,128
	l.bnf	.L4768	# delay slot filled
	l.sfleui	r3,127
.L4746:
	l.slli  	r3,r3,6
	l.andi  	r6,r6,63
	l.addi  	r5,r5,1
	l.sfeq 	r8,r5
	l.bnf	.L4763	# delay slot filled
	l.add   	r3,r6,r3
.L4708:
	l.sfleui	r3,127
.L4768:
	l.bf	.L4742	# delay slot filled
	l.addi  	r6,r0,-2048	 # move immediate I
	l.ori   	r13,r0,55296	 # move immediate K
	l.and   	r4,r3,r6
	l.sfeq 	r4,r13
	l.bf	.L4742	# delay slot filled
	l.addi  	r6,r0,-2	 # move immediate I
	l.ori   	r13,r0,65534	 # move immediate K
	l.and   	r4,r3,r6
	l.sfeq 	r4,r13
	l.bf	.L4742
	l.nop			# nop delay slot
	l.ori   	r4,r0,65535	 # move immediate K
	l.sfgtu 	r3,r4
	l.bnf	.L4764	# delay slot filled
	l.movhi 	r6,hi(-65536)	 # move immediate M
	l.srli  	r12,r3,10
	l.add   	r4,r3,r6
	l.srli  	r6,r3,8
	l.srli  	r11,r4,18
	l.srli  	r4,r4,10
	l.addi  	r13,r0,-64	 # move immediate I
	l.andi  	r11,r11,3
	l.and   	r4,r4,r13
	l.andi  	r12,r12,63
	l.andi  	r6,r6,3
	l.addi  	r11,r11,-40
	l.add   	r4,r4,r12
	l.addi  	r6,r6,-36
	l.sb    	0(r7),r11	    # movqi
	l.sb    	1(r7),r4	    # movqi
	l.sb    	2(r7),r6	    # movqi
	l.sb    	3(r7),r3	    # movqi
	l.addi  	r7,r7,4
.L4712:
	l.sfgtu 	r8,r5
	l.bf	.L4745	# delay slot filled
	l.sub   	r3,r7,r14
.L4699:
	l.sw    	24(r2),r3	 # SI store
.L4772:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	0(r7),r3	    # movqi
	l.j     	.L4714	# delay slot filled
	l.addi  	r7,r7,1
.L4697:
	l.sfgeu 	r18,r8
	l.bf	.L4736	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
.L4706:
	l.lbz   	r3,0(r5)	 # zero_extendqisi2
	l.sfleui	r3,191
	l.bf	.L4700	# delay slot filled
	l.addi  	r5,r5,1
	l.movhi  	r4,hi(sqlite3Utf8Trans1)
	l.sfeq 	r8,r5
	l.ori   	r4,r4,lo(sqlite3Utf8Trans1)
	l.add   	r3,r3,r4
	l.bf	.L4701	# delay slot filled
	l.lbz   	r3,-192(r3)	 # zero_extendqisi2
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.andi  	r4,r6,192
	l.sfnei	r4,128
	l.bnf	.L4744	# delay slot filled
	l.sfleui	r3,127
	l.j     	.L4769
	l.nop			# nop delay slot
.L4765:
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.andi  	r4,r6,192
	l.sfeqi	r4,128
	l.bnf	.L4769	# delay slot filled
	l.sfleui	r3,127
.L4744:
	l.slli  	r3,r3,6
	l.andi  	r6,r6,63
	l.addi  	r5,r5,1
	l.sfeq 	r8,r5
	l.bnf	.L4765	# delay slot filled
	l.add   	r3,r6,r3
.L4701:
	l.sfleui	r3,127
.L4769:
	l.bf	.L4771	# delay slot filled
	l.addi  	r4,r0,255	 # move immediate I
	l.addi  	r6,r0,-2048	 # move immediate I
	l.ori   	r13,r0,55296	 # move immediate K
	l.and   	r4,r3,r6
	l.sfeq 	r4,r13
	l.bf	.L4739	# delay slot filled
	l.addi  	r6,r0,-2	 # move immediate I
	l.ori   	r13,r0,65534	 # move immediate K
	l.and   	r4,r3,r6
	l.sfeq 	r4,r13
	l.bf	.L4771	# delay slot filled
	l.addi  	r4,r0,255	 # move immediate I
	l.ori   	r4,r0,65535	 # move immediate K
	l.sfgtu 	r3,r4
	l.bnf	.L4766	# delay slot filled
	l.movhi 	r6,hi(-65536)	 # move immediate M
	l.srli  	r11,r3,10
	l.add   	r4,r3,r6
	l.addi  	r13,r0,-64	 # move immediate I
	l.srli  	r12,r4,10
	l.srli  	r6,r4,18
	l.srli  	r4,r3,8
	l.and   	r12,r12,r13
	l.andi  	r11,r11,63
	l.andi  	r6,r6,3
	l.andi  	r4,r4,3
	l.add   	r11,r12,r11
	l.addi  	r6,r6,-40
	l.addi  	r4,r4,-36
	l.sb    	0(r7),r11	    # movqi
	l.sb    	1(r7),r6	    # movqi
	l.sb    	2(r7),r3	    # movqi
	l.sb    	3(r7),r4	    # movqi
	l.addi  	r7,r7,4
.L4705:
	l.sfgtu 	r8,r5
	l.bf	.L4706	# delay slot filled
	l.sub   	r3,r7,r14
	l.j     	.L4772	# delay slot filled
	l.sw    	24(r2),r3	 # SI store
.L4707:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r0,0	 # move immediate I
.L4731:
	l.sb    	0(r7),r4	    # movqi
	l.sb    	1(r7),r3	    # movqi
	l.j     	.L4712	# delay slot filled
	l.addi  	r7,r7,2
.L4742:
	l.addi  	r3,r0,253	 # move immediate I
	l.j     	.L4731	# delay slot filled
	l.addi  	r4,r0,255	 # move immediate I
.L4700:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r0,0	 # move immediate I
.L4730:
	l.sb    	0(r7),r3	    # movqi
	l.sb    	1(r7),r4	    # movqi
	l.j     	.L4705	# delay slot filled
	l.addi  	r7,r7,2
.L4739:
	l.addi  	r4,r0,255	 # move immediate I
.L4771:
	l.j     	.L4730	# delay slot filled
	l.addi  	r3,r0,253	 # move immediate I
.L4715:
	l.sfgeu 	r18,r8
	l.bf	.L4743
	l.nop			# nop delay slot
	l.j     	.L4723	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
.L4767:
	l.sb    	0(r7),r3	    # movqi
	l.addi  	r7,r7,1
.L4720:
	l.sfgtu 	r8,r5
	l.bnf	.L4717	# delay slot filled
	l.sub   	r3,r7,r14
.L4723:
	l.lbz   	r3,1(r5)	 # zero_extendqisi2
	l.lbz   	r4,0(r5)	 # zero_extendqisi2
	l.slli  	r3,r3,8
	l.movhi 	r13,hi(-65536)	 # move immediate M
	l.addi  	r5,r5,2
	l.add   	r3,r3,r4
	l.ori   	r13,r13,10240
	l.andi  	r11,r3,960
	l.slli  	r6,r3,10
	l.addi  	r11,r11,64
	l.add   	r4,r3,r13
	l.addi  	r12,r5,1
	l.slli  	r11,r11,10
	l.sfgtui	r4,2047
	l.bf	.L4718	# delay slot filled
	l.andi  	r6,r6,65535
	l.lbz   	r3,0(r12)	 # zero_extendqisi2
	l.lbz   	r4,0(r5)	 # zero_extendqisi2
	l.slli  	r3,r3,8
	l.addi  	r5,r5,2
	l.add   	r3,r3,r4
	l.andi  	r3,r3,1023
	l.add   	r11,r3,r11
	l.add   	r3,r11,r6
.L4718:
	l.sfgtui	r3,127
	l.bnf	.L4767	# delay slot filled
	l.sfgtui	r3,2047
	l.srli  	r6,r3,6
	l.bf	.L4721	# delay slot filled
	l.andi  	r4,r3,63
	l.andi  	r6,r6,31
	l.addi  	r4,r4,-128
	l.addi  	r6,r6,-64
	l.sb    	1(r7),r4	    # movqi
	l.sb    	0(r7),r6	    # movqi
	l.j     	.L4720	# delay slot filled
	l.addi  	r7,r7,2
.L4721:
	l.srli  	r13,r3,12
	l.srli  	r15,r3,18
	l.srli  	r12,r3,6
	l.ori   	r6,r13,0	 # move reg to reg
	l.ori   	r4,r0,65535	 # move immediate K
	l.andi  	r15,r15,7
	l.andi  	r13,r13,63
	l.andi  	r12,r12,63
	l.andi  	r11,r3,63
	l.andi  	r6,r6,15
	l.sfgtu 	r3,r4
	l.addi  	r15,r15,-16
	l.addi  	r13,r13,-128
	l.addi  	r12,r12,-128
	l.addi  	r11,r11,-128
	l.bf	.L4722	# delay slot filled
	l.addi  	r6,r6,-32
	l.sb    	0(r7),r6	    # movqi
	l.sb    	1(r7),r12	    # movqi
	l.sb    	2(r7),r11	    # movqi
	l.j     	.L4720	# delay slot filled
	l.addi  	r7,r7,3
.L4722:
	l.sb    	0(r7),r15	    # movqi
	l.sb    	1(r7),r13	    # movqi
	l.sb    	2(r7),r12	    # movqi
	l.sb    	3(r7),r11	    # movqi
	l.j     	.L4720	# delay slot filled
	l.addi  	r7,r7,4
.L4743:
	l.ori   	r7,r11,0	 # move reg to reg
	l.j     	.L4717	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L4736:
.L4755:
	l.j     	.L4699	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L4764:
	l.srli  	r4,r3,8
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.j     	.L4731	# delay slot filled
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
.L4766:
	l.srli  	r4,r3,8
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.j     	.L4730	# delay slot filled
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
.LFE510:
	.size	sqlite3VdbeChangeEncoding, .-sqlite3VdbeChangeEncoding
	.align	4
.proc	sqlite3VdbeMemCopy
	.type	sqlite3VdbeMemCopy, @function
sqlite3VdbeMemCopy:
.LFB533:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1765:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1766:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1767:
	l.addi  	r1,r1,-12
.LCFI1768:
	l.ori   	r2,r4,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemReleaseExternal	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.sw    	0(r14),r3	 # SI store
	l.lwz   	r3,4(r2)	 # SI load
	l.sw    	4(r14),r3	 # SI store
	l.lwz   	r3,8(r2)	 # SI load
	l.sw    	8(r14),r3	 # SI store
	l.lwz   	r3,12(r2)	 # SI load
	l.sw    	12(r14),r3	 # SI store
	l.lwz   	r3,16(r2)	 # SI load
	l.sw    	16(r14),r3	 # SI store
	l.lwz   	r3,20(r2)	 # SI load
	l.sw    	20(r14),r3	 # SI store
	l.lwz   	r3,24(r2)	 # SI load
	l.sw    	24(r14),r3	 # SI store
	l.lwz   	r3,28(r2)	 # SI load
	l.sw    	28(r14),r3	 # SI store
	l.lhz   	r3,28(r14)	 # zero_extendqisi2
	l.lwz   	r4,32(r2)	 # SI load
	l.andi  	r3,r3,64511
	l.sw    	32(r14),r4	 # SI store
	l.andi  	r11,r3,18
	l.sfeqi	r11,0
	l.bf	.L4774	# delay slot filled
	l.sh    	28(r14),r3	 # movhi
	l.lhz   	r2,28(r2)	 # zero_extendqisi2
	l.addi  	r11,r0,0	 # move immediate I
	l.andi  	r2,r2,2048
	l.sfne 	r2,r11
	l.bnf	.L4777	# delay slot filled
	l.ori   	r2,r3,4096
.L4774:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L4777:
	l.ori   	r3,r14,0	 # move reg to reg
	l.sh    	28(r14),r2	 # movhi
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3VdbeMemMakeWriteable	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE533:
	.size	sqlite3VdbeMemCopy, .-sqlite3VdbeMemCopy
	.align	4
.proc	sqlite3_result_value
	.global sqlite3_result_value
	.type	sqlite3_result_value, @function
sqlite3_result_value:
.LFB631:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1769:
	l.addi  	r1,r1,-4
.LCFI1770:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemCopy	# delay slot filled	# sibcall s
	l.addi  	r3,r3,8
.LFE631:
	.size	sqlite3_result_value, .-sqlite3_result_value
	.align	4
.proc	ifnullFunc
	.type	ifnullFunc, @function
ifnullFunc:
.LFB951:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1771:
	l.sflesi	r4,0
.LCFI1772:
	l.bf	.L4779	# delay slot filled
	l.addi  	r1,r1,-4
	l.lwz   	r7,0(r5)	 # SI load
	l.lbz   	r6,30(r7)	 # zero_extendqisi2
	l.sfnei	r6,5
	l.bf	.L4781	# delay slot filled
	l.addi  	r5,r5,4
	l.j     	.L4783	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L4784:
	l.lwz   	r7,0(r5)	 # SI load
	l.lbz   	r8,30(r7)	 # zero_extendqisi2
	l.sfeqi	r8,5
	l.bnf	.L4781	# delay slot filled
	l.addi  	r5,r5,4
.L4783:
	l.addi  	r6,r6,1
	l.sfgts 	r4,r6
	l.bf	.L4784
	l.nop			# nop delay slot
.L4779:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.L4781:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_result_value	# delay slot filled	# sibcall s
	l.ori   	r4,r7,0	 # move reg to reg
.LFE951:
	.size	ifnullFunc, .-ifnullFunc
	.align	4
.proc	sqlite3VdbeMemSetStr
	.type	sqlite3VdbeMemSetStr, @function
sqlite3VdbeMemSetStr:
.LFB535:
	l.sw    	-28(r1),r14	 # SI store
.LCFI1773:
	l.sw    	-20(r1),r18	 # SI store
.LCFI1774:
	l.sw    	-12(r1),r22	 # SI store
.LCFI1775:
	l.sw    	-8(r1),r24	 # SI store
.LCFI1776:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1777:
	l.sw    	-32(r1),r2	 # SI store
.LCFI1778:
	l.sw    	-24(r1),r16	 # SI store
.LCFI1779:
	l.sw    	-16(r1),r20	 # SI store
.LCFI1780:
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI1781:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r24,r7,0	 # move reg to reg
	l.sfnei	r4,0
	l.bnf	.L4831	# delay slot filled
	l.ori   	r22,r6,0	 # move reg to reg
	l.lwz   	r2,16(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L4809	# delay slot filled
	l.movhi 	r16,hi(999948288)	 # move immediate M
	l.lwz   	r16,80(r2)	 # SI load
.L4790:
	l.sfnei	r22,0
	l.bnf	.L4832	# delay slot filled
	l.addi  	r20,r0,2	 # move immediate I
	l.sfgesi	r5,0
	l.bnf	.L4833	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
.L4792:
	l.sfnei	r24,-1
	l.bnf	.L4842	# delay slot filled
	l.andi  	r3,r20,512
	l.movhi  	r3,hi(sqlite3DbFree)
.L4844:
	l.ori   	r3,r3,lo(sqlite3DbFree)
	l.sfne 	r24,r3
	l.bnf	.L4835
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	20(r14),r18	 # SI store
	l.sw    	32(r14),r24	 # SI store
	l.sfnei	r24,0
	l.bnf	.L4836	# delay slot filled
	l.addi  	r3,r0,1024	 # move immediate I
.L4804:
	l.or    	r20,r3,r20
.L4803:
	l.sfgts 	r2,r16
	l.bf	.L4789	# delay slot filled
	l.addi  	r3,r0,18	 # move immediate I
	l.sw    	24(r14),r2	 # SI store
.L4841:
	l.sfeqi	r22,0
	l.bf	.L4805	# delay slot filled
	l.sh    	28(r14),r20	 # movhi
	l.addi  	r3,r0,3	 # movqi: move immediate
	l.sb    	31(r14),r22	    # movqi
	l.sb    	30(r14),r3	    # movqi
	l.sfeqi	r22,1
	l.bf	.L4789	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.sflesi	r2,1
	l.bf	.L4789
	l.nop			# nop delay slot
	l.lwz   	r4,20(r14)	 # SI load
	l.lbz   	r3,1(r4)	 # zero_extendqisi2
	l.xori  	r2,r3,0xffff
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.addi  	r2,r2,-1
	l.sfgesi	r2,0
	l.bf	.L4823	# delay slot filled
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.xori  	r2,r4,254
	l.addi  	r2,r2,-1
	l.sfgesi	r2,0
	l.bf	.L4806	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r2,r0,3	 # move immediate I
.L4806:
	l.xori  	r3,r3,254
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bf	.L4843	# delay slot filled
	l.sfeqi	r2,0
	l.xori  	r4,r4,0xffff
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.sfltsi	r4,0
	l.bf	.L4824	# delay slot filled
	l.sfeqi	r2,0
.L4843:
	l.bnf	.L4807	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L4789:
	l.addi	r1,r1,32
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L4832:
	l.addi  	r20,r0,16	 # move immediate I
	l.sfgesi	r5,0
	l.bf	.L4792	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
.L4833:
	l.sfeqi	r22,1
	l.bf	.L4793	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sflts 	r16,r2
	l.bf	.L4794
	l.nop			# nop delay slot
	l.lbz   	r4,1(r18)	 # zero_extendqisi2
	l.lbz   	r3,0(r18)	 # zero_extendqisi2
	l.or    	r3,r4,r3
	l.sfne 	r3,r2
	l.bnf	.L4794	# delay slot filled
	l.addi  	r3,r18,2
	l.j     	.L4845	# delay slot filled
	l.addi  	r2,r2,2
.L4837:
	l.lbz   	r5,1(r4)	 # zero_extendqisi2
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.or    	r4,r5,r4
	l.sfnei	r4,0
	l.bnf	.L4794
	l.nop			# nop delay slot
	l.addi  	r2,r2,2
.L4845:
	l.ori   	r4,r3,0	 # move reg to reg
	l.sflts 	r16,r2
	l.bnf	.L4837	# delay slot filled
	l.addi  	r3,r3,2
.L4794:
	l.ori   	r20,r20,512
.L4840:
	l.sfnei	r24,-1
	l.bf	.L4844	# delay slot filled
	l.movhi  	r3,hi(sqlite3DbFree)
	l.andi  	r3,r20,512
.L4842:
	l.sfeqi	r3,0
	l.bf	.L4799	# delay slot filled
	l.ori   	r24,r2,0	 # move reg to reg
	l.sfnei	r22,1
	l.bnf	.L4838	# delay slot filled
	l.addi  	r24,r0,2	 # move immediate I
.L4800:
	l.add   	r24,r24,r2
.L4799:
	l.sfgts 	r2,r16
	l.bf	.L4789	# delay slot filled
	l.addi  	r3,r0,18	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L4789	# delay slot filled
	l.addi  	r3,r0,7	 # move immediate I
	l.lwz   	r3,20(r14)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.j     	.L4841	# delay slot filled
	l.sw    	24(r14),r2	 # SI store
.L4805:
	l.addi  	r3,r0,4	 # movqi: move immediate
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	30(r14),r3	    # movqi
	l.sb    	31(r14),r2	    # movqi
	l.j     	.L4789	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L4823:
	l.j     	.L4806	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L4836:
	l.j     	.L4804	# delay slot filled
	l.addi  	r3,r0,2048	 # move immediate I
.L4793:
	l.sflts 	r16,r2
	l.bf	.L4794
	l.nop			# nop delay slot
	l.lbs   	r2,0(r18)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L4794
	l.nop			# nop delay slot
	l.j     	.L4796	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L4839:
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bnf	.L4794
	l.nop			# nop delay slot
.L4796:
	l.addi  	r2,r2,1
	l.sflts 	r16,r2
	l.bnf	.L4839	# delay slot filled
	l.add   	r3,r18,r2
	l.j     	.L4840	# delay slot filled
	l.ori   	r20,r20,512
.L4824:
	l.addi  	r2,r0,2	 # move immediate I
.L4807:
	l.jal   	sqlite3VdbeMemMakeWriteable	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r3,r0,7	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L4789	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r5,24(r14)	 # SI load
	l.lwz   	r3,20(r14)	 # SI load
	l.addi  	r5,r5,-2
	l.addi  	r4,r3,2
	l.jal   	memmove	# delay slot filled
	l.sw    	24(r14),r5	 # SI store
	l.lwz   	r5,20(r14)	 # SI load
	l.lwz   	r4,24(r14)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.add   	r4,r5,r4
	l.sb    	0(r4),r16	    # movqi
	l.lwz   	r5,20(r14)	 # SI load
	l.lwz   	r4,24(r14)	 # SI load
	l.add   	r4,r5,r4
	l.sb    	1(r4),r16	    # movqi
	l.sb    	31(r14),r2	    # movqi
	l.lhz   	r2,28(r14)	 # zero_extendqisi2
	l.ori   	r2,r2,512
	l.j     	.L4789	# delay slot filled
	l.sh    	28(r14),r2	 # movhi
.L4809:
	l.j     	.L4790	# delay slot filled
	l.ori   	r16,r16,51712
.L4835:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	20(r14),r18	 # SI store
	l.sw    	36(r14),r18	 # SI store
	l.j     	.L4803	# delay slot filled
	l.sw    	32(r14),r3	 # SI store
.L4838:
	l.j     	.L4800	# delay slot filled
	l.ori   	r24,r22,0	 # move reg to reg
.L4831:
	l.jal   	sqlite3VdbeMemSetNull
	l.nop			# nop delay slot
	l.j     	.L4789	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.LFE535:
	.size	sqlite3VdbeMemSetStr, .-sqlite3VdbeMemSetStr
	.align	4
.proc	sqlite3ValueSetStr
	.type	sqlite3ValueSetStr, @function
sqlite3ValueSetStr:
.LFB541:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1782:
	l.ori   	r8,r4,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI1783:
	l.bf	.L4846	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi	r1,r1,4
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.ori   	r5,r8,0	 # move reg to reg
.L4846:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE541:
	.size	sqlite3ValueSetStr, .-sqlite3ValueSetStr
	.align	4
.proc	sqlite3Error
	.type	sqlite3Error, @function
sqlite3Error:
.LFB124:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1784:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1785:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1786:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1787:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI1788:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bf	.L4848	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.lwz   	r4,204(r3)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L4852
	l.nop			# nop delay slot
.L4850:
	l.sfeqi	r14,0
	l.bf	.L4851	# delay slot filled
	l.sw    	20(r2),r16	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3VMPrintf	# delay slot filled
	l.addi  	r5,r1,16
	l.movhi  	r7,hi(sqlite3DbFree)
	l.lwz   	r3,204(r2)	 # SI load
	l.addi  	r4,r0,-1	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3ValueSetStr	# delay slot filled
	l.ori   	r7,r7,lo(sqlite3DbFree)
.L4848:
	l.addi	r1,r1,16
.L4853:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4851:
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r3,204(r2)	 # SI load
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.jal   	sqlite3ValueSetStr	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L4852:
	l.jal   	sqlite3ValueNew
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bnf	.L4850	# delay slot filled
	l.sw    	204(r2),r11	 # SI store
	l.j     	.L4853	# delay slot filled
	l.addi	r1,r1,16
.LFE124:
	.size	sqlite3Error, .-sqlite3Error
	.align	4
.proc	sqlite3ApiExit
	.type	sqlite3ApiExit, @function
sqlite3ApiExit:
.LFB97:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1789:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1790:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-8
.LCFI1791:
	l.sfeqi	r3,0
	l.bf	.L4855	# delay slot filled
	l.addi  	r11,r0,255	 # move immediate I
	l.xori  	r3,r4,3082
	l.sub   	r5,r0,r3
	l.or    	r3,r5,r3
	l.sfgesi	r3,0
	l.bf	.L4860	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L4859	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L4856:
	l.lwz   	r11,24(r2)	 # SI load
.L4855:
	l.addi	r1,r1,8
	l.and   	r11,r4,r11
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L4859:
.L4860:
	l.addi  	r4,r0,7	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.addi  	r4,r0,7	 # move immediate I
	l.j     	.L4856	# delay slot filled
	l.sb    	30(r2),r3	    # movqi
.LFE97:
	.size	sqlite3ApiExit, .-sqlite3ApiExit
	.align	4
.proc	createModule
	.type	createModule, @function
createModule:
.LFB1102:
	l.sw    	-32(r1),r14	 # SI store
.LCFI1792:
	l.sw    	-28(r1),r16	 # SI store
.LCFI1793:
	l.sw    	-16(r1),r22	 # SI store
.LCFI1794:
	l.sw    	-12(r1),r24	 # SI store
.LCFI1795:
	l.sw    	-8(r1),r26	 # SI store
.LCFI1796:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1797:
	l.sw    	-36(r1),r2	 # SI store
.LCFI1798:
	l.sw    	-24(r1),r18	 # SI store
.LCFI1799:
	l.sw    	-20(r1),r20	 # SI store
.LCFI1800:
	l.ori   	r16,r4,0	 # move reg to reg
	l.lbs   	r18,0(r4)	 # extendqisi2_no_sext_mem
	l.addi  	r1,r1,-36
.LCFI1801:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r26,r5,0	 # move reg to reg
	l.ori   	r24,r6,0	 # move reg to reg
	l.ori   	r22,r7,0	 # move reg to reg
	l.sfeqi	r18,0
	l.bf	.L4862	# delay slot filled
	l.addi  	r4,r0,17	 # move immediate I
	l.ori   	r8,r16,0	 # move reg to reg
	l.addi  	r8,r8,1
.L4873:
	l.lbs   	r11,0(r8)	 # extendqisi2_no_sext_mem
	l.sfnei	r11,0
	l.bf	.L4873	# delay slot filled
	l.addi  	r8,r8,1
	l.addi  	r8,r8,-1
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.sub   	r8,r8,r16
	l.ori   	r2,r2,65535
	l.and   	r18,r8,r2
	l.addi  	r4,r18,17
.L4862:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4864	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r20,r11,16
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r18,1
	l.addi  	r3,r14,268
	l.sw    	4(r2),r20	 # SI store
	l.sw    	0(r2),r26	 # SI store
	l.sw    	8(r2),r24	 # SI store
	l.sw    	12(r2),r22	 # SI store
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4865	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r4,12(r11)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L4874	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jalr  	r4	# delay slot filled
	l.lwz   	r3,8(r11)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
.L4874:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfne 	r16,r2
	l.bnf	.L4871	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
.L4867:
	l.ori   	r3,r14,0	 # move reg to reg
.L4872:
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L4868:
	l.addi	r1,r1,36
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r26,-8(r1)	 # SI load
.L4864:
	l.sfeqi	r22,0
	l.bf	.L4868
	l.nop			# nop delay slot
	l.jalr  	r22	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi	r1,r1,36
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r26,-8(r1)	 # SI load
.L4871:
	l.j     	.L4867	# delay slot filled
	l.sb    	30(r14),r2	    # movqi
.L4865:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L4872	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.LFE1102:
	.size	createModule, .-createModule
	.align	4
.proc	sqlite3_create_module_v2
	.global sqlite3_create_module_v2
	.type	sqlite3_create_module_v2, @function
sqlite3_create_module_v2:
.LFB1104:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1802:
	l.addi  	r1,r1,-4
.LCFI1803:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	createModule
	l.nop			# nop delay slot	# sibcall s
.LFE1104:
	.size	sqlite3_create_module_v2, .-sqlite3_create_module_v2
	.align	4
.proc	sqlite3_create_module
	.global sqlite3_create_module
	.type	sqlite3_create_module, @function
sqlite3_create_module:
.LFB1103:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1804:
	l.addi  	r1,r1,-4
.LCFI1805:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	createModule	# delay slot filled	# sibcall s
	l.addi  	r7,r0,0	 # move immediate I
.LFE1103:
	.size	sqlite3_create_module, .-sqlite3_create_module
	.align	4
.proc	columnMallocFailure
	.type	columnMallocFailure, @function
columnMallocFailure:
.LFB648:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1806:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1807:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI1808:
	l.bf	.L4877	# delay slot filled
	l.addi  	r1,r1,-8
	l.lwz   	r3,0(r3)	 # SI load
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.lwz   	r4,100(r2)	 # SI load
	l.sw    	100(r2),r11	 # SI store
.L4877:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE648:
	.size	columnMallocFailure, .-columnMallocFailure
	.section	.rodata.str1.1
.LC119:
	.string	"unable to delete/modify collation sequence due to active statements"
	.section .text
	.align	4
.proc	createCollation
	.type	createCollation, @function
createCollation:
.LFB1225:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1809:
	l.ori   	r2,r3,0	 # move reg to reg
	l.xori  	r3,r5,8
	l.sw    	-40(r1),r14	 # SI store
.LCFI1810:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1811:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1812:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1813:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1814:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1815:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1816:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1817:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1818:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1819:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-56
.LCFI1820:
	l.sub   	r4,r0,r3
	l.sw    	0(r1),r7	 # SI store
	l.or    	r3,r4,r3
	l.sw    	4(r1),r8	 # SI store
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfgesi	r3,0
	l.bf	.L4898	# delay slot filled
	l.ori   	r30,r6,0	 # move reg to reg
	l.xori  	r3,r5,4
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfltsi	r3,0
	l.bnf	.L4906	# delay slot filled
	l.movhi  	r3,hi(sqlite3one)
	l.addi  	r3,r5,-1
	l.sfgtui	r3,2
	l.bnf	.L4902	# delay slot filled
	l.addi  	r11,r0,21	 # move immediate I
.L4884:
	l.addi	r1,r1,56
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L4898:
	l.movhi  	r3,hi(sqlite3one)
.L4906:
	l.ori   	r3,r3,lo(sqlite3one)
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L4882	# delay slot filled
	l.addi  	r22,r0,3	 # move immediate I
	l.addi  	r22,r0,2	 # move immediate I
	l.ori   	r26,r22,0	 # move reg to reg
.L4895:
	l.lbs   	r20,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeqi	r20,0
	l.bf	.L4885	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
	l.addi  	r11,r11,1
.L4907:
	l.lbs   	r12,0(r11)	 # extendqisi2_no_sext_mem
	l.sfnei	r12,0
	l.bf	.L4907	# delay slot filled
	l.addi  	r11,r11,1
	l.addi  	r11,r11,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r11,r11,r14
	l.ori   	r3,r3,65535
	l.and   	r20,r11,r3
.L4885:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L4887	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,12(r11)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L4908	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,144(r2)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L4903	# delay slot filled
	l.movhi  	r5,hi(.LC119)
	l.lwz   	r12,140(r2)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L4889	# delay slot filled
	l.addi  	r4,r0,1	 # movqi: move immediate
.L4909:
	l.sb    	126(r12),r4	    # movqi
	l.lwz   	r12,8(r12)	 # SI load
	l.sfnei	r12,0
	l.bf	.L4909
	l.nop			# nop delay slot
.L4889:
	l.lbz   	r28,4(r16)	 # zero_extendqisi2
	l.addi  	r4,r0,-9	 # move immediate I
	l.and   	r3,r28,r4
	l.sfne 	r3,r26
	l.bnf	.L4904	# delay slot filled
	l.addi  	r3,r2,388
.L4887:
	l.ori   	r3,r2,0	 # move reg to reg
.L4908:
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L4894	# delay slot filled
	l.andi  	r18,r18,8
	l.lwz   	r3,0(r1)	 # SI load
	l.or    	r26,r26,r18
	l.lwz   	r4,4(r1)	 # SI load
	l.sw    	12(r11),r3	 # SI store
	l.sw    	8(r11),r30	 # SI store
	l.sw    	16(r11),r4	 # SI store
	l.sb    	4(r11),r26	    # movqi
.L4894:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.j     	.L4884	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L4882:
	l.j     	.L4895	# delay slot filled
	l.ori   	r26,r22,0	 # move reg to reg
.L4903:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r5,lo(.LC119)
	l.j     	.L4884	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
.L4902:
	l.andi  	r22,r5,0xff	 # zero_extendqisi2
	l.j     	.L4895	# delay slot filled
	l.ori   	r26,r5,0	 # move reg to reg
.L4904:
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3HashFind	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r24,r11,4
	l.addi  	r11,r11,64
	l.sw    	8(r1),r11	 # SI store
	l.lbz   	r3,0(r24)	 # zero_extendqisi2
	l.sfne 	r3,r28
	l.bnf	.L4905
	l.nop			# nop delay slot
.L4891:
	l.addi  	r24,r24,20
	l.lwz   	r4,8(r1)	 # SI load
	l.sfeq 	r24,r4
	l.bf	.L4908	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r28,4(r16)	 # zero_extendqisi2
	l.lbz   	r3,0(r24)	 # zero_extendqisi2
	l.sfne 	r3,r28
	l.bf	.L4891
	l.nop			# nop delay slot
.L4905:
	l.lwz   	r4,12(r24)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L4910	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.jalr  	r4	# delay slot filled
	l.lwz   	r3,4(r24)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
.L4910:
	l.j     	.L4891	# delay slot filled
	l.sw    	8(r24),r3	 # SI store
.LFE1225:
	.size	createCollation, .-createCollation
	.section	.rodata.str1.1
.LC120:
	.string	"bad parameters"
.LC121:
	.string	"unable to delete/modify user-function due to active statements"
	.section .text
	.align	4
.proc	sqlite3CreateFunc
	.type	sqlite3CreateFunc, @function
sqlite3CreateFunc:
.LFB1210:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1821:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1822:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1823:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1824:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1825:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1826:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1827:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1828:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1829:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1830:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1831:
	l.addi  	r1,r1,-52
.LCFI1832:
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.ori   	r24,r7,0	 # move reg to reg
	l.ori   	r20,r8,0	 # move reg to reg
	l.lwz   	r26,52(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L4912	# delay slot filled
	l.lwz   	r22,56(r1)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L4913	# delay slot filled
	l.sub   	r3,r0,r22
	l.or    	r3,r22,r3
	l.sfltsi	r3,0
	l.bf	.L4912	# delay slot filled
	l.sub   	r3,r0,r26
	l.or    	r3,r26,r3
.L4948:
	l.sfltsi	r3,0
	l.bf	.L4943	# delay slot filled
	l.movhi  	r5,hi(.LC120)
.L4914:
	l.addi  	r3,r18,1
	l.sfgtui	r3,128
	l.bf	.L4943	# delay slot filled
	l.movhi  	r5,hi(.LC120)
	l.lbs   	r28,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeqi	r28,0
	l.bf	.L4917	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
	l.addi  	r11,r11,1
.L4944:
	l.lbs   	r3,0(r11)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L4944	# delay slot filled
	l.addi  	r11,r11,1
	l.addi  	r11,r11,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r11,r11,r14
	l.ori   	r3,r3,65535
	l.and   	r28,r11,r3
	l.sflesi	r28,255
	l.bnf	.L4943	# delay slot filled
	l.movhi  	r5,hi(.LC120)
.L4917:
	l.sfnei	r16,4
	l.bnf	.L4935	# delay slot filled
	l.sfeqi	r16,5
	l.bf	.L4936	# delay slot filled
	l.andi  	r30,r16,0xff	 # zero_extendqisi2
.L4921:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r30,0	 # move reg to reg
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L4941	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,2(r11)	 # zero_extendqisi2
	l.sfne 	r3,r16
	l.bnf	.L4937
	l.nop			# nop delay slot
.L4923:
	l.ori   	r3,r2,0	 # move reg to reg
.L4941:
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r30,0	 # move reg to reg
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L4919	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sw    	12(r2),r20	 # SI store
	l.sb    	3(r2),r3	    # movqi
	l.sw    	16(r2),r26	 # SI store
	l.sw    	20(r2),r22	 # SI store
	l.sw    	4(r2),r24	 # SI store
	l.sh    	0(r2),r18	 # movhi
	l.j     	.L4919	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L4938:
	l.or    	r4,r26,r4
	l.sfgesi	r4,0
	l.bnf	.L4945	# delay slot filled
	l.or    	r3,r22,r3
.L4912:
	l.movhi  	r5,hi(.LC120)
.L4943:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r5,lo(.LC120)
	l.addi  	r11,r0,1	 # move immediate I
.L4919:
	l.addi	r1,r1,52
.L4942:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L4935:
	l.movhi  	r3,hi(sqlite3one)
	l.ori   	r3,r3,lo(sqlite3one)
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L4927
	l.nop			# nop delay slot
	l.addi  	r16,r0,3	 # move immediate I
.L4947:
	l.j     	.L4921	# delay slot filled
	l.ori   	r30,r16,0	 # move reg to reg
.L4913:
	l.or    	r4,r22,r3
	l.sfgesi	r4,0
	l.bnf	.L4938	# delay slot filled
	l.sub   	r4,r0,r26
	l.or    	r3,r22,r3
.L4945:
	l.sfltsi	r3,0
	l.bf	.L4914	# delay slot filled
	l.sub   	r3,r0,r26
	l.j     	.L4948	# delay slot filled
	l.or    	r3,r26,r3
.L4927:
	l.addi  	r16,r0,2	 # move immediate I
	l.j     	.L4921	# delay slot filled
	l.ori   	r30,r16,0	 # move reg to reg
.L4937:
	l.lhs   	r3,0(r11)	 # extendhisi2_no_sext_mem
	l.sfne 	r3,r18
	l.bf	.L4941	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,144(r2)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L4939	# delay slot filled
	l.movhi  	r5,hi(.LC121)
	l.lwz   	r3,140(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L4923	# delay slot filled
	l.addi  	r4,r0,1	 # movqi: move immediate
.L4946:
	l.sb    	126(r3),r4	    # movqi
	l.lwz   	r3,8(r3)	 # SI load
	l.sfnei	r3,0
	l.bf	.L4946
	l.nop			# nop delay slot
	l.j     	.L4941	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L4936:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r24,0	 # move reg to reg
	l.ori   	r8,r20,0	 # move reg to reg
	l.sw    	0(r1),r26	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r22	 # SI store
	l.sfnei	r11,0
	l.bf	.L4919	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r6,r0,2	 # move immediate I
	l.ori   	r7,r24,0	 # move reg to reg
	l.ori   	r8,r20,0	 # move reg to reg
	l.sw    	0(r1),r26	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r22	 # SI store
	l.sfnei	r11,0
	l.bnf	.L4947	# delay slot filled
	l.addi  	r16,r0,3	 # move immediate I
	l.j     	.L4942	# delay slot filled
	l.addi	r1,r1,52
.L4939:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r5,lo(.LC121)
	l.j     	.L4919	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
.LFE1210:
	.size	sqlite3CreateFunc, .-sqlite3CreateFunc
	.align	4
.proc	sqlite3VtabOverloadFunction
	.type	sqlite3VtabOverloadFunction, @function
sqlite3VtabOverloadFunction:
.LFB1125:
	l.sw    	-28(r1),r2	 # SI store
.LCFI1833:
	l.sw    	-24(r1),r14	 # SI store
.LCFI1834:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-20(r1),r16	 # SI store
.LCFI1835:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1836:
	l.sw    	-16(r1),r18	 # SI store
.LCFI1837:
	l.sw    	-12(r1),r20	 # SI store
.LCFI1838:
	l.sw    	-8(r1),r22	 # SI store
.LCFI1839:
	l.addi  	r1,r1,-40
.LCFI1840:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sw    	8(r1),r2	 # SI store
	l.sw    	4(r1),r2	 # SI store
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfeqi	r6,0
	l.bf	.L4950	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbz   	r4,0(r6)	 # zero_extendqisi2
	l.sfnei	r4,151
	l.bnf	.L4964
	l.nop			# nop delay slot
.L4950:
	l.addi	r1,r1,40
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L4964:
	l.lwz   	r4,56(r6)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L4950
	l.nop			# nop delay slot
	l.lbz   	r5,34(r4)	 # zero_extendqisi2
	l.andi  	r5,r5,16
	l.sfeqi	r5,0
	l.bf	.L4950
	l.nop			# nop delay slot
	l.lwz   	r20,56(r4)	 # SI load
	l.lwz   	r22,0(r20)	 # SI load
	l.lwz   	r4,72(r22)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L4950
	l.nop			# nop delay slot
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L4950	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lbz   	r7,0(r11)	 # zero_extendqisi2
	l.sfeqi	r7,0
	l.bf	.L4951	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.movhi  	r3,hi(sqlite3UpperToLower)
.L4965:
	l.ori   	r3,r3,lo(sqlite3UpperToLower)
	l.add   	r7,r7,r3
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.sb    	0(r6),r7	    # movqi
	l.addi  	r6,r6,1
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L4965	# delay slot filled
	l.movhi  	r3,hi(sqlite3UpperToLower)
.L4951:
	l.addi  	r6,r1,8
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r7,r1,4
	l.lwz   	r11,72(r22)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r6,8(r20)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L4953	# delay slot filled
	l.movhi  	r5,hi(.LC78)
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,8(r20)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	8(r20),r3	 # SI store
.L4953:
	l.sfeqi	r14,0
	l.bf	.L4950
	l.nop			# nop delay slot
	l.lwz   	r5,24(r2)	 # SI load
	l.lbs   	r3,0(r5)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L4954	# delay slot filled
	l.addi  	r4,r0,32	 # move immediate I
	l.ori   	r4,r5,0	 # move reg to reg
	l.addi  	r4,r4,1
.L4966:
	l.lbs   	r3,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L4966	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r4,r4,r5
	l.ori   	r3,r3,65535
	l.and   	r4,r4,r3
	l.addi  	r4,r4,32
.L4954:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L4950	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r3,r11,32
	l.sw    	0(r11),r4	 # SI store
	l.lwz   	r4,4(r2)	 # SI load
	l.sw    	4(r11),r4	 # SI store
	l.lwz   	r4,8(r2)	 # SI load
	l.sw    	8(r11),r4	 # SI store
	l.lwz   	r4,12(r2)	 # SI load
	l.sw    	12(r11),r4	 # SI store
	l.lwz   	r4,16(r2)	 # SI load
	l.sw    	16(r11),r4	 # SI store
	l.lwz   	r4,20(r2)	 # SI load
	l.sw    	20(r11),r4	 # SI store
	l.lwz   	r4,24(r2)	 # SI load
	l.sw    	24(r11),r4	 # SI store
	l.lwz   	r4,28(r2)	 # SI load
	l.sw    	24(r11),r3	 # SI store
	l.sw    	28(r11),r4	 # SI store
	l.lwz   	r4,24(r2)	 # SI load
	l.lbs   	r2,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L4956	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r2,r2,1
.L4967:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L4967	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.sub   	r5,r2,r4
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.ori   	r2,r2,65535
	l.and   	r5,r5,r2
	l.addi  	r5,r5,1
.L4956:
	l.jal   	memcpy	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
	l.lbz   	r3,3(r14)	 # zero_extendqisi2
	l.lwz   	r4,8(r1)	 # SI load
	l.ori   	r3,r3,4
	l.sw    	12(r14),r4	 # SI store
	l.lwz   	r4,4(r1)	 # SI load
	l.sw    	4(r14),r4	 # SI store
	l.j     	.L4950	# delay slot filled
	l.sb    	3(r14),r3	    # movqi
.LFE1125:
	.size	sqlite3VtabOverloadFunction, .-sqlite3VtabOverloadFunction
	.align	4
.proc	vdbeUnbind
	.type	vdbeUnbind, @function
vdbeUnbind:
.LFB664:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1841:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1842:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1843:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI1844:
	l.sfeqi	r3,0
	l.bf	.L4969	# delay slot filled
	l.addi  	r11,r0,21	 # move immediate I
	l.movhi 	r5,hi(-1108213760)	 # move immediate M
	l.lwz   	r3,68(r3)	 # SI load
	l.ori   	r5,r5,3491
	l.sfne 	r3,r5
	l.bnf	.L4975
	l.nop			# nop delay slot
.L4970:
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r4,r0,21	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r11,r0,21	 # move immediate I
.L4969:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L4975:
	l.lwz   	r3,96(r2)	 # SI load
	l.sfltsi	r3,0
	l.bnf	.L4970	# delay slot filled
	l.sflesi	r4,0
	l.bf	.L4972
	l.nop			# nop delay slot
	l.lwz   	r3,52(r2)	 # SI load
	l.sfles 	r4,r3
	l.bf	.L4973	# delay slot filled
	l.addi  	r4,r4,-1
.L4972:
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r4,r0,25	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L4969	# delay slot filled
	l.addi  	r11,r0,25	 # move immediate I
.L4973:
	l.lwz   	r14,56(r2)	 # SI load
	l.slli  	r3,r4,4
	l.slli  	r4,r4,8
	l.sub   	r3,r4,r3
	l.add   	r14,r14,r3
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.ori   	r5,r4,0	 # move reg to reg
	l.sh    	28(r14),r3	 # movhi
	l.jal   	sqlite3Error	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.j     	.L4969	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE664:
	.size	vdbeUnbind, .-vdbeUnbind
	.align	4
.proc	sqlite3_bind_zeroblob
	.global sqlite3_bind_zeroblob
	.type	sqlite3_bind_zeroblob, @function
sqlite3_bind_zeroblob:
.LFB674:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1845:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1846:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1847:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1848:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1849:
	l.addi  	r1,r1,-20
.LCFI1850:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r14,r4,0	 # move reg to reg
	l.jal   	vdbeUnbind	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L4977	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r14,-1
	l.lwz   	r14,56(r18)	 # SI load
	l.slli  	r4,r3,4
	l.slli  	r3,r3,8
	l.sub   	r3,r3,r4
	l.add   	r14,r14,r3
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.xori  	r3,r16,0xffff
	l.addi  	r4,r0,16400	 # movhi: move immediate
	l.srai  	r3,r3,31
	l.sh    	28(r14),r4	 # movhi
	l.addi  	r4,r0,4	 # movqi: move immediate
	l.and   	r16,r16,r3
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	30(r14),r4	    # movqi
	l.sw    	24(r14),r2	 # SI store
	l.sb    	31(r14),r3	    # movqi
	l.sw    	0(r14),r16	 # SI store
.L4977:
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE674:
	.size	sqlite3_bind_zeroblob, .-sqlite3_bind_zeroblob
	.align	4
.proc	sqlite3_bind_null
	.global sqlite3_bind_null
	.type	sqlite3_bind_null, @function
sqlite3_bind_null:
.LFB670:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1851:
	l.addi  	r1,r1,-4
.LCFI1852:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	vdbeUnbind
	l.nop			# nop delay slot	# sibcall s
.LFE670:
	.size	sqlite3_bind_null, .-sqlite3_bind_null
	.align	4
.proc	sqlite3_bind_int64
	.global sqlite3_bind_int64
	.type	sqlite3_bind_int64, @function
sqlite3_bind_int64:
.LFB669:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1853:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1854:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1855:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1856:
	l.addi  	r1,r1,-24
.LCFI1857:
	l.ori   	r16,r3,0	 # move reg to reg
		l.sw    	0(r1), r5
		l.sw    	4(r1), r6
	l.jal   	vdbeUnbind	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L4981	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r14,-1
	l.lwz   	r14,56(r16)	 # SI load
	l.slli  	r4,r3,4
	l.slli  	r3,r3,8
	l.sub   	r3,r3,r4
	l.add   	r14,r14,r3
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,4	 # movhi: move immediate
	l.sb    	30(r14),r4	    # movqi
	l.sh    	28(r14),r3	 # movhi
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
		l.sw    	0(r14), r3
		l.sw    	4(r14), r4
.L4981:
	l.addi	r1,r1,24
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE669:
	.size	sqlite3_bind_int64, .-sqlite3_bind_int64
	.align	4
.proc	sqlite3_bind_int
	.global sqlite3_bind_int
	.type	sqlite3_bind_int, @function
sqlite3_bind_int:
.LFB668:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1858:
	l.addi  	r1,r1,-4
.LCFI1859:
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_bind_int64	# delay slot filled	# sibcall s
	l.srai  	r5,r5,31
.LFE668:
	.size	sqlite3_bind_int, .-sqlite3_bind_int
	.align	4
.proc	sqlite3_bind_double
	.global sqlite3_bind_double
	.type	sqlite3_bind_double, @function
sqlite3_bind_double:
.LFB667:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1860:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1861:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1862:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1863:
	l.addi  	r1,r1,-24
.LCFI1864:
	l.ori   	r14,r3,0	 # move reg to reg
		l.sw    	0(r1), r5
		l.sw    	4(r1), r6
	l.jal   	vdbeUnbind	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L4984	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r16,r16,-1
	l.lwz   	r3,56(r14)	 # SI load
	l.slli  	r6,r16,4
	l.slli  	r16,r16,8
		l.lwz   	r4, 0(r1)
		l.lwz   	r5, 4(r1)
	l.sub   	r16,r16,r6
	l.jal   	sqlite3VdbeMemSetDouble	# delay slot filled
	l.add   	r3,r3,r16
.L4984:
	l.addi	r1,r1,24
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE667:
	.size	sqlite3_bind_double, .-sqlite3_bind_double
	.align	4
.proc	columnMem
	.type	columnMem, @function
columnMem:
.LFB647:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1865:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1866:
	l.movhi  	r2,hi(nullMem.12897)
	l.addi  	r1,r1,-8
.LCFI1867:
	l.sfeqi	r3,0
	l.bf	.L4986	# delay slot filled
	l.ori   	r2,r2,lo(nullMem.12897)
	l.lwz   	r5,120(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L4987	# delay slot filled
	l.sfltsi	r4,0
	l.bnf	.L4991
	l.nop			# nop delay slot
.L4987:
	l.lwz   	r3,0(r3)	 # SI load
	l.movhi  	r2,hi(nullMem.12897)
	l.sfeqi	r3,0
	l.bf	.L4986	# delay slot filled
	l.ori   	r2,r2,lo(nullMem.12897)
	l.addi  	r4,r0,25	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L4986:
	l.addi	r1,r1,8
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L4991:
	l.lwz   	r6,108(r3)	 # SI load
	l.sfgts 	r6,r4
	l.bnf	.L4992	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L4987
	l.nop			# nop delay slot
	l.slli  	r2,r4,4
.L4994:
	l.slli  	r4,r4,8
	l.addi	r1,r1,8
	l.sub   	r2,r4,r2
	l.lwz   	r9,-4(r1)	 # SI load
	l.add   	r2,r5,r2
	l.ori   	r11,r2,0	 # move reg to reg
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L4992:
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L4987
	l.nop			# nop delay slot
	l.j     	.L4994	# delay slot filled
	l.slli  	r2,r4,4
.LFE647:
	.size	columnMem, .-columnMem
	.align	4
.proc	sqlite3_column_type
	.global sqlite3_column_type
	.type	sqlite3_column_type, @function
sqlite3_column_type:
.LFB658:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1868:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1869:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1870:
	l.addi  	r1,r1,-12
.LCFI1871:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	columnMallocFailure	# delay slot filled
	l.lbz   	r14,30(r11)	 # zero_extendqisi2
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE658:
	.size	sqlite3_column_type, .-sqlite3_column_type
	.align	4
.proc	sqlite3_column_value
	.global sqlite3_column_value
	.type	sqlite3_column_value, @function
sqlite3_column_value:
.LFB656:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1872:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1873:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1874:
	l.addi  	r1,r1,-12
.LCFI1875:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.lhz   	r3,28(r11)	 # zero_extendqisi2
	l.andi  	r4,r3,2048
	l.sfeqi	r4,0
	l.bf	.L4997	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r4,r0,-2049	 # move immediate I
	l.and   	r3,r3,r4
	l.ori   	r3,r3,4096
	l.sh    	28(r11),r3	 # movhi
.L4997:
	l.jal   	columnMallocFailure	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE656:
	.size	sqlite3_column_value, .-sqlite3_column_value
	.align	4
.proc	sqlite3VdbeSetColName
	.type	sqlite3VdbeSetColName, @function
sqlite3VdbeSetColName:
.LFB579:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1876:
	l.lwz   	r8,0(r3)	 # SI load
	l.lbz   	r8,30(r8)	 # zero_extendqisi2
	l.sfnei	r8,0
.LCFI1877:
	l.bnf	.L5000	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
.L5000:
	l.lwz   	r12,108(r3)	 # SI load
	l.lwz   	r8,40(r3)	 # SI load
	l.mul   	r5,r5,r12
	l.add   	r5,r5,r4
	l.addi	r1,r1,4
	l.slli  	r3,r5,4
	l.slli  	r12,r5,8
	l.ori   	r4,r6,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.sub   	r3,r12,r3
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.add   	r3,r8,r3
.LFE579:
	.size	sqlite3VdbeSetColName, .-sqlite3VdbeSetColName
	.section	.rodata.str1.1
.LC122:
	.string	"%s.%s"
	.section .text
	.align	4
.proc	generateColumnNames.clone.131
	.type	generateColumnNames.clone.131, @function
generateColumnNames.clone.131:
.LFB1379:
	l.sw    	-40(r1),r14	 # SI store
.LCFI1878:
	l.sw    	-36(r1),r16	 # SI store
.LCFI1879:
	l.sw    	-32(r1),r18	 # SI store
.LCFI1880:
	l.sw    	-24(r1),r22	 # SI store
.LCFI1881:
	l.sw    	-20(r1),r24	 # SI store
.LCFI1882:
	l.sw    	-16(r1),r26	 # SI store
.LCFI1883:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1884:
	l.sw    	-44(r1),r2	 # SI store
.LCFI1885:
	l.sw    	-28(r1),r20	 # SI store
.LCFI1886:
	l.sw    	-12(r1),r28	 # SI store
.LCFI1887:
	l.sw    	-8(r1),r30	 # SI store
.LCFI1888:
	l.ori   	r16,r3,0	 # move reg to reg
	l.lbz   	r2,440(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-92
.LCFI1889:
	l.ori   	r24,r4,0	 # move reg to reg
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r22,r6,0	 # move reg to reg
	l.lwz   	r18,12(r3)	 # SI load
	l.sfnei	r2,0
	l.bf	.L5001	# delay slot filled
	l.lwz   	r26,0(r3)	 # SI load
	l.sub   	r2,r0,r18
	l.or    	r2,r18,r2
	l.sfgesi	r2,0
	l.bf	.L5001
	l.nop			# nop delay slot
	l.lbz   	r2,16(r3)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L5001
	l.nop			# nop delay slot
	l.lbz   	r20,30(r26)	 # zero_extendqisi2
	l.sfnei	r20,0
	l.bnf	.L5023	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
.L5001:
	l.addi	r1,r1,92
.L5029:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L5023:
	l.sb    	16(r3),r2	    # movqi
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r30,12(r26)	 # SI load
	l.lwz   	r4,0(r5)	 # SI load
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.srli  	r28,r30,5
	l.srli  	r30,r30,6
	l.lwz   	r6,0(r14)	 # SI load
	l.andi  	r28,r28,1
	l.sflesi	r6,0
	l.bf	.L5001	# delay slot filled
	l.andi  	r30,r30,1
	l.addi  	r3,r24,80
	l.or    	r30,r30,r28
	l.ori   	r2,r20,0	 # move reg to reg
	l.j     	.L5014	# delay slot filled
	l.sw    	8(r1),r3	 # SI store
.L5025:
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.addi  	r7,r0,-1	 # move immediate I
	l.lwz   	r6,0(r14)	 # SI load
.L5003:
	l.addi  	r2,r2,1
	l.sflts 	r2,r6
	l.bnf	.L5024	# delay slot filled
	l.addi  	r20,r20,16
.L5014:
	l.lwz   	r7,0(r22)	 # SI load
	l.add   	r7,r7,r20
	l.lwz   	r11,0(r7)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L5003
	l.nop			# nop delay slot
	l.lwz   	r6,4(r7)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L5025	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lbz   	r3,0(r11)	 # zero_extendqisi2
	l.xori  	r4,r3,153
	l.addi  	r4,r4,-1
	l.sfltsi	r4,0
	l.bnf	.L5026	# delay slot filled
	l.xori  	r3,r3,151
	l.sfeqi	r24,0
.L5031:
	l.bf	.L5005	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lhs   	r3,0(r24)	 # extendhisi2_no_sext_mem
	l.sfles 	r3,r7
	l.bf	.L5007	# delay slot filled
	l.lwz   	r12,40(r11)	 # SI load
	l.lwz   	r4,36(r11)	 # SI load
	l.lwz   	r5,28(r24)	 # SI load
	l.sfeq 	r5,r4
	l.bf	.L5007
	l.nop			# nop delay slot
	l.j     	.L5008	# delay slot filled
	l.lwz   	r8,8(r1)	 # SI load
.L5009:
	l.lwz   	r6,0(r8)	 # SI load
	l.sfeq 	r4,r6
	l.bf	.L5007	# delay slot filled
	l.addi  	r8,r8,52
.L5008:
	l.addi  	r7,r7,1
	l.sflts 	r7,r3
	l.bf	.L5009
	l.nop			# nop delay slot
.L5007:
	l.add   	r3,r7,r7
	l.sfgesi	r12,0
	l.add   	r3,r3,r7
	l.slli  	r4,r3,4
	l.add   	r3,r3,r4
	l.add   	r7,r3,r7
	l.add   	r7,r24,r7
	l.bnf	.L5027	# delay slot filled
	l.lwz   	r3,16(r7)	 # SI load
	l.slli  	r5,r12,2
.L5030:
	l.slli  	r4,r12,4
	l.lwz   	r6,16(r3)	 # SI load
	l.add   	r12,r5,r4
	l.add   	r12,r6,r12
	l.lwz   	r6,0(r12)	 # SI load
.L5011:
	l.sfnei	r30,0
	l.bnf	.L5028	# delay slot filled
	l.sfeqi	r28,0
	l.bf	.L5013	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.movhi  	r4,hi(.LC122)
	l.lwz   	r5,4(r3)	 # SI load
	l.ori   	r4,r4,lo(.LC122)
	l.ori   	r3,r26,0	 # move reg to reg
	l.sw    	0(r1),r5	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	4(r1),r6	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
.L5022:
	l.movhi  	r7,hi(sqlite3DbFree)
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r7,r7,lo(sqlite3DbFree)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.addi  	r2,r2,1
	l.lwz   	r6,0(r14)	 # SI load
	l.sflts 	r2,r6
	l.bf	.L5014	# delay slot filled
	l.addi  	r20,r20,16
.L5024:
	l.sw    	16(r1),r24	 # SI store
	l.sw    	12(r1),r16	 # SI store
	l.sflesi	r6,0
	l.bf	.L5001	# delay slot filled
	l.lwz   	r20,12(r16)	 # SI load
	l.addi  	r16,r0,0	 # move immediate I
	l.addi  	r18,r1,12
	l.ori   	r2,r16,0	 # move reg to reg
.L5015:
	l.lwz   	r4,0(r22)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.add   	r4,r4,r16
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,0(r4)	 # SI load
	l.jal   	columnType	# delay slot filled
	l.addi  	r16,r16,16
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.addi  	r7,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.add   	r2,r2,r5
	l.lwz   	r3,0(r14)	 # SI load
	l.sflts 	r2,r3
	l.bf	.L5015
	l.nop			# nop delay slot
	l.j     	.L5029	# delay slot filled
	l.addi	r1,r1,92
.L5026:
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bnf	.L5031	# delay slot filled
	l.sfeqi	r24,0
.L5005:
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r11)	 # SI load
	l.ori   	r4,r4,65535
	l.ori   	r3,r26,0	 # move reg to reg
	l.and   	r5,r5,r4
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.lwz   	r4,12(r11)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L5022	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L5013:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.addi  	r7,r0,-1	 # move immediate I
	l.j     	.L5003	# delay slot filled
	l.lwz   	r6,0(r14)	 # SI load
.L5028:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r11)	 # SI load
	l.ori   	r6,r6,65535
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r4,12(r11)	 # SI load
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.and   	r5,r5,r6
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L5022	# delay slot filled
	l.ori   	r5,r30,0	 # move reg to reg
.L5027:
	l.lwz   	r12,8(r3)	 # SI load
	l.movhi  	r6,hi(.LC21)
	l.sfltsi	r12,0
	l.bf	.L5011	# delay slot filled
	l.ori   	r6,r6,lo(.LC21)
	l.j     	.L5030	# delay slot filled
	l.slli  	r5,r12,2
.LFE1379:
	.size	generateColumnNames.clone.131, .-generateColumnNames.clone.131
	.section	.rodata.str1.1
.LC123:
	.string	"string or blob too big"
	.section .text
	.align	4
.proc	sqlite3_result_error_toobig
	.global sqlite3_result_error_toobig
	.type	sqlite3_result_error_toobig, @function
sqlite3_result_error_toobig:
.LFB634:
	l.ori   	r4,r3,0	 # move reg to reg
	l.addi  	r5,r0,18	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI1890:
	l.addi  	r1,r1,-4
.LCFI1891:
	l.sw    	252(r4),r5	 # SI store
	l.addi	r1,r1,4
	l.movhi  	r4,hi(.LC123)
	l.addi  	r3,r3,8
	l.ori   	r4,r4,lo(.LC123)
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.addi  	r7,r0,0	 # move immediate I
.LFE634:
	.size	sqlite3_result_error_toobig, .-sqlite3_result_error_toobig
	.align	4
.proc	contextMalloc
	.type	contextMalloc, @function
contextMalloc:
.LFB948:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1892:
	l.lwz   	r2,24(r3)	 # SI load
	l.sw    	-8(r1),r14	 # SI store
.LCFI1893:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r3,80(r2)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI1894:
	l.srai  	r2,r3,31
	l.sfgts 	r4,r2
.LCFI1895:
	l.bf	.L5037	# delay slot filled
	l.addi  	r1,r1,-12
	l.sfne 	r4,r2
	l.bnf	.L5038	# delay slot filled
	l.sfgtu 	r5,r3
.L5034:
	l.jal   	sqlite3Malloc	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L5039	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,12
.L5040:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L5038:
	l.bnf	.L5034
	l.nop			# nop delay slot
.L5037:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3_result_error_toobig	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L5039:
	l.jal   	sqlite3_result_error_nomem	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L5040	# delay slot filled
	l.addi	r1,r1,12
.LFE948:
	.size	contextMalloc, .-contextMalloc
	.section	.rodata.str1.1
.LC124:
	.string	"unknown error"
	.section .text
	.align	4
.proc	sqlite3_result_error_code
	.global sqlite3_result_error_code
	.type	sqlite3_result_error_code, @function
sqlite3_result_error_code:
.LFB633:
	l.lhz   	r5,36(r3)	 # zero_extendqisi2
	l.sw    	-4(r1),r9	 # SI store
.LCFI1896:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1897:
	l.andi  	r5,r5,1
	l.sw    	252(r3),r4	 # SI store
	l.sfeqi	r5,0
.LCFI1898:
	l.bf	.L5041	# delay slot filled
	l.addi  	r1,r1,-8
	l.andi  	r5,r4,255
	l.movhi  	r4,hi(.LC124)
	l.addi  	r3,r3,8
	l.sfgtui	r5,26
	l.bf	.L5043	# delay slot filled
	l.ori   	r4,r4,lo(.LC124)
	l.movhi  	r2,hi(aMsg.21565)
	l.slli  	r5,r5,2
	l.ori   	r2,r2,lo(aMsg.21565)
	l.add   	r5,r5,r2
	l.lwz   	r4,0(r5)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L5046
	l.nop			# nop delay slot
.L5043:
	l.addi	r1,r1,8
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L5041:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L5046:
	l.movhi  	r4,hi(.LC124)
	l.j     	.L5043	# delay slot filled
	l.ori   	r4,r4,lo(.LC124)
.LFE633:
	.size	sqlite3_result_error_code, .-sqlite3_result_error_code
	.align	4
.proc	sqlite3_result_text16le
	.global sqlite3_result_text16le
	.type	sqlite3_result_text16le, @function
sqlite3_result_text16le:
.LFB630:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1899:
	l.addi  	r1,r1,-4
.LCFI1900:
	l.ori   	r7,r6,0	 # move reg to reg
	l.addi	r1,r1,4
	l.addi  	r3,r3,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.addi  	r6,r0,2	 # move immediate I
.LFE630:
	.size	sqlite3_result_text16le, .-sqlite3_result_text16le
	.align	4
.proc	sqlite3_result_text16be
	.global sqlite3_result_text16be
	.type	sqlite3_result_text16be, @function
sqlite3_result_text16be:
.LFB629:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1901:
	l.addi  	r1,r1,-4
.LCFI1902:
	l.ori   	r7,r6,0	 # move reg to reg
	l.addi	r1,r1,4
	l.addi  	r3,r3,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.addi  	r6,r0,3	 # move immediate I
.LFE629:
	.size	sqlite3_result_text16be, .-sqlite3_result_text16be
	.align	4
.proc	sqlite3_result_text16
	.global sqlite3_result_text16
	.type	sqlite3_result_text16, @function
sqlite3_result_text16:
.LFB628:
	l.movhi  	r7,hi(sqlite3one)
	l.sw    	-4(r1),r9	 # SI store
.LCFI1903:
	l.ori   	r7,r7,lo(sqlite3one)
	l.addi  	r1,r1,-4
.LCFI1904:
	l.lbs   	r8,0(r7)	 # extendqisi2_no_sext_mem
	l.addi  	r3,r3,8
	l.ori   	r7,r6,0	 # move reg to reg
	l.sfnei	r8,0
	l.bf	.L5050	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
	l.addi  	r6,r0,3	 # move immediate I
.L5050:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr
	l.nop			# nop delay slot	# sibcall s
.LFE628:
	.size	sqlite3_result_text16, .-sqlite3_result_text16
	.align	4
.proc	sqlite3_result_text
	.global sqlite3_result_text
	.type	sqlite3_result_text, @function
sqlite3_result_text:
.LFB627:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1905:
	l.addi  	r1,r1,-4
.LCFI1906:
	l.ori   	r7,r6,0	 # move reg to reg
	l.addi	r1,r1,4
	l.addi  	r3,r3,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.addi  	r6,r0,1	 # move immediate I
.LFE627:
	.size	sqlite3_result_text, .-sqlite3_result_text
	.align	4
.proc	versionFunc
	.type	versionFunc, @function
versionFunc:
.LFB960:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1907:
	l.addi  	r1,r1,-4
.LCFI1908:
	l.movhi  	r4,hi(sqlite3_version)
	l.addi	r1,r1,4
	l.ori   	r4,r4,lo(sqlite3_version)
	l.addi  	r5,r0,-1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.addi  	r6,r0,0	 # move immediate I
.LFE960:
	.size	versionFunc, .-versionFunc
	.section	.rodata.str1.1
.LC125:
	.string	"null"
	.section .text
	.align	4
.proc	typeofFunc
	.type	typeofFunc, @function
typeofFunc:
.LFB943:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1909:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1910:
	l.lwz   	r4,0(r5)	 # SI load
	l.addi  	r1,r1,-8
.LCFI1911:
	l.lbz   	r5,30(r4)	 # zero_extendqisi2
	l.movhi  	r4,hi(.LC125)
	l.addi  	r5,r5,-1
	l.sfgtui	r5,3
	l.bf	.L5055	# delay slot filled
	l.ori   	r4,r4,lo(.LC125)
	l.movhi  	r2,hi(CSWTCH.1881)
	l.slli  	r5,r5,2
	l.ori   	r2,r2,lo(CSWTCH.1881)
	l.add   	r5,r5,r2
	l.lwz   	r4,0(r5)	 # SI load
.L5055:
	l.addi	r1,r1,8
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE943:
	.size	typeofFunc, .-typeofFunc
	.align	4
.proc	sqlite3_result_error16
	.global sqlite3_result_error16
	.type	sqlite3_result_error16, @function
sqlite3_result_error16:
.LFB623:
	l.addi  	r6,r0,1	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI1912:
	l.sw    	252(r3),r6	 # SI store
	l.movhi  	r6,hi(sqlite3one)
	l.addi  	r1,r1,-4
.LCFI1913:
	l.ori   	r6,r6,lo(sqlite3one)
	l.addi  	r3,r3,8
	l.lbs   	r7,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r7,0
	l.bf	.L5058	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
	l.addi  	r6,r0,3	 # move immediate I
.L5058:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.addi  	r7,r0,-1	 # move immediate I
.LFE623:
	.size	sqlite3_result_error16, .-sqlite3_result_error16
	.align	4
.proc	sqlite3_result_error
	.global sqlite3_result_error
	.type	sqlite3_result_error, @function
sqlite3_result_error:
.LFB622:
	l.ori   	r7,r3,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI1914:
	l.addi  	r1,r1,-4
.LCFI1915:
	l.sw    	252(r7),r6	 # SI store
	l.addi	r1,r1,4
	l.addi  	r3,r3,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.addi  	r7,r0,-1	 # move immediate I
.LFE622:
	.size	sqlite3_result_error, .-sqlite3_result_error
	.section	.rodata.str1.1
.LC126:
	.string	"unable to use function %s in the requested context"
	.section .text
	.align	4
.proc	sqlite3InvalidFunction
	.type	sqlite3InvalidFunction, @function
sqlite3InvalidFunction:
.LFB640:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1916:
	l.ori   	r2,r3,0	 # move reg to reg
	l.movhi  	r3,hi(.LC126)
	l.lwz   	r4,0(r2)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI1917:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1918:
	l.lwz   	r4,24(r4)	 # SI load
	l.addi  	r1,r1,-16
.LCFI1919:
	l.ori   	r3,r3,lo(.LC126)
	l.jal   	sqlite3_mprintf	# delay slot filled
	l.sw    	0(r1),r4	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3_result_error	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3_free	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE640:
	.size	sqlite3InvalidFunction, .-sqlite3InvalidFunction
	.align	4
.proc	sqlite3_result_blob
	.global sqlite3_result_blob
	.type	sqlite3_result_blob, @function
sqlite3_result_blob:
.LFB620:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1920:
	l.addi  	r1,r1,-4
.LCFI1921:
	l.ori   	r7,r6,0	 # move reg to reg
	l.addi	r1,r1,4
	l.addi  	r3,r3,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetStr	# delay slot filled	# sibcall s
	l.addi  	r6,r0,0	 # move immediate I
.LFE620:
	.size	sqlite3_result_blob, .-sqlite3_result_blob
	.align	4
.proc	sqlite3Utf16to8
	.type	sqlite3Utf16to8, @function
sqlite3Utf16to8:
.LFB120:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1922:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1923:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1924:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1925:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1926:
	l.addi  	r1,r1,-260
.LCFI1927:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r3,r1,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,240	 # move immediate I
	l.movhi  	r3,hi(sqlite3one)
	l.sw    	16(r1),r14	 # SI store
	l.ori   	r3,r3,lo(sqlite3one)
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L5064	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
	l.addi  	r6,r0,3	 # move immediate I
.L5064:
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeMemSetStr	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lbz   	r3,30(r14)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L5065	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.lwz   	r11,20(r1)	 # SI load
.L5066:
	l.lhz   	r2,28(r1)	 # zero_extendqisi2
	l.andi  	r2,r2,1024
	l.sfnei	r2,0
	l.bf	.L5067	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
.L5067:
	l.addi	r1,r1,260
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L5065:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r11,r2,0	 # move reg to reg
	l.j     	.L5066	# delay slot filled
	l.sw    	20(r1),r2	 # SI store
.LFE120:
	.size	sqlite3Utf16to8, .-sqlite3Utf16to8
	.align	4
.proc	bindText
	.type	bindText, @function
bindText:
.LFB665:
	l.sw    	-28(r1),r2	 # SI store
.LCFI1928:
	l.sw    	-24(r1),r14	 # SI store
.LCFI1929:
	l.sw    	-20(r1),r16	 # SI store
.LCFI1930:
	l.sw    	-16(r1),r18	 # SI store
.LCFI1931:
	l.sw    	-12(r1),r20	 # SI store
.LCFI1932:
	l.sw    	-8(r1),r22	 # SI store
.LCFI1933:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1934:
	l.addi  	r1,r1,-28
.LCFI1935:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.ori   	r20,r6,0	 # move reg to reg
	l.ori   	r14,r7,0	 # move reg to reg
	l.jal   	vdbeUnbind	# delay slot filled
	l.ori   	r18,r8,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5070	# delay slot filled
	l.sfeqi	r16,0
	l.bf	.L5070	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r22,r22,-1
	l.lwz   	r7,56(r2)	 # SI load
	l.slli  	r3,r22,4
	l.slli  	r22,r22,8
	l.ori   	r5,r20,0	 # move reg to reg
	l.sub   	r22,r22,r3
	l.ori   	r6,r18,0	 # move reg to reg
	l.add   	r22,r7,r22
	l.ori   	r7,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemSetStr	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfltsi	r3,0
	l.bnf	.L5072	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L5071:
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,0(r2)	 # SI load
	l.addi	r1,r1,28
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r22,-8(r1)	 # SI load
.L5070:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L5072:
	l.sfeqi	r18,0
	l.bf	.L5071	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r4,8(r4)	 # SI load
	l.lwz   	r4,20(r4)	 # SI load
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.lbz   	r4,57(r4)	 # zero_extendqisi2
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,0(r2)	 # SI load
	l.addi	r1,r1,28
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r22,-8(r1)	 # SI load
.LFE665:
	.size	bindText, .-bindText
	.align	4
.proc	sqlite3_bind_text16
	.global sqlite3_bind_text16
	.type	sqlite3_bind_text16, @function
sqlite3_bind_text16:
.LFB672:
	l.movhi  	r8,hi(sqlite3one)
	l.sw    	-4(r1),r9	 # SI store
.LCFI1936:
	l.ori   	r8,r8,lo(sqlite3one)
	l.addi  	r1,r1,-4
.LCFI1937:
	l.lbs   	r11,0(r8)	 # extendqisi2_no_sext_mem
	l.sfnei	r11,0
	l.bf	.L5074	# delay slot filled
	l.addi  	r8,r0,2	 # move immediate I
	l.addi  	r8,r0,3	 # move immediate I
.L5074:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	bindText
	l.nop			# nop delay slot	# sibcall s
.LFE672:
	.size	sqlite3_bind_text16, .-sqlite3_bind_text16
	.align	4
.proc	sqlite3_bind_text
	.global sqlite3_bind_text
	.type	sqlite3_bind_text, @function
sqlite3_bind_text:
.LFB671:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1938:
	l.addi  	r1,r1,-4
.LCFI1939:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	bindText	# delay slot filled	# sibcall s
	l.addi  	r8,r0,1	 # move immediate I
.LFE671:
	.size	sqlite3_bind_text, .-sqlite3_bind_text
	.align	4
.proc	sqlite3_bind_blob
	.global sqlite3_bind_blob
	.type	sqlite3_bind_blob, @function
sqlite3_bind_blob:
.LFB666:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1940:
	l.addi  	r1,r1,-4
.LCFI1941:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	bindText	# delay slot filled	# sibcall s
	l.addi  	r8,r0,0	 # move immediate I
.LFE666:
	.size	sqlite3_bind_blob, .-sqlite3_bind_blob
	.align	4
.proc	sqlite3_bind_value
	.global sqlite3_bind_value
	.type	sqlite3_bind_value, @function
sqlite3_bind_value:
.LFB673:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1942:
	l.ori   	r6,r5,0	 # move reg to reg
	l.lbz   	r5,30(r5)	 # zero_extendqisi2
	l.addi  	r1,r1,-4
.LCFI1943:
	l.ori   	r8,r3,0	 # move reg to reg
	l.sfeqi	r5,2
	l.bf	.L5081	# delay slot filled
	l.ori   	r7,r4,0	 # move reg to reg
	l.sfgtui	r5,2
	l.bnf	.L5086	# delay slot filled
	l.sfeqi	r5,1
	l.sfeqi	r5,3
	l.bf	.L5082	# delay slot filled
	l.sfeqi	r5,4
	l.bnf	.L5079
	l.nop			# nop delay slot
	l.lhz   	r5,28(r6)	 # zero_extendqisi2
	l.andi  	r5,r5,16384
	l.sfeqi	r5,0
	l.bf	.L5085
	l.nop			# nop delay slot
	l.lwz   	r5,0(r6)	 # SI load
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_bind_zeroblob
	l.nop			# nop delay slot	# sibcall s
.L5086:
	l.bf	.L5087
	l.nop			# nop delay slot
.L5079:
	l.addi	r1,r1,4
	l.ori   	r3,r8,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	vdbeUnbind	# delay slot filled	# sibcall s
	l.ori   	r4,r7,0	 # move reg to reg
.L5082:
	l.lbz   	r8,31(r6)	 # zero_extendqisi2
	l.lwz   	r5,20(r6)	 # SI load
	l.lwz   	r6,24(r6)	 # SI load
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	bindText	# delay slot filled	# sibcall s
	l.addi  	r7,r0,-1	 # move immediate I
.L5081:
		l.lwz   	r5, 8(r6)
		l.lwz   	r6, 8+4(r6)
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_bind_double
	l.nop			# nop delay slot	# sibcall s
.L5087:
		l.lwz   	r5, 0(r6)
		l.lwz   	r6, 4(r6)
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_bind_int64
	l.nop			# nop delay slot	# sibcall s
.L5085:
	l.lwz   	r5,20(r6)	 # SI load
	l.lwz   	r6,24(r6)	 # SI load
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_bind_blob	# delay slot filled	# sibcall s
	l.addi  	r7,r0,-1	 # move immediate I
.LFE673:
	.size	sqlite3_bind_value, .-sqlite3_bind_value
	.align	4
.proc	sqlite3VdbeMemNulTerminate
	.type	sqlite3VdbeMemNulTerminate, @function
sqlite3VdbeMemNulTerminate:
.LFB514:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.sw    	-8(r1),r2	 # SI store
.LCFI1944:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1945:
	l.andi  	r4,r4,514
	l.addi  	r1,r1,-8
.LCFI1946:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r4,2
	l.bnf	.L5092	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L5089:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L5092:
	l.lwz   	r4,24(r3)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.addi  	r4,r4,2
	l.ori   	r3,r11,0	 # move reg to reg
	l.sfnei	r3,0
	l.bf	.L5089	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.lwz   	r5,20(r2)	 # SI load
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r11,r3,0	 # move reg to reg
	l.add   	r4,r5,r4
	l.sb    	0(r4),r3	    # movqi
	l.lwz   	r5,20(r2)	 # SI load
	l.lwz   	r4,24(r2)	 # SI load
	l.add   	r4,r5,r4
	l.sb    	1(r4),r3	    # movqi
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.ori   	r3,r3,512
	l.sh    	28(r2),r3	 # movhi
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE514:
	.size	sqlite3VdbeMemNulTerminate, .-sqlite3VdbeMemNulTerminate
	.global __floatdidf
	.section	.rodata
	.align	4
.LC127:
	.long	0
	.long	0
	.section .text
	.align	4
.proc	sqlite3VdbeRealValue
	.type	sqlite3VdbeRealValue, @function
sqlite3VdbeRealValue:
.LFB521:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.sw    	-16(r1),r2	 # SI store
.LCFI1947:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1948:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1949:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1950:
	l.andi  	r5,r4,8
	l.addi  	r1,r1,-24
.LCFI1951:
	l.sfeqi	r5,0
	l.bnf	.L5101	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.andi  	r14,r4,4
	l.sfeqi	r14,0
	l.bnf	.L5102	# delay slot filled
	l.andi  	r11,r4,18
	l.sfeqi	r11,0
	l.bnf	.L5103	# delay slot filled
	l.ori   	r12,r11,0	 # move reg to reg
.L5106:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L5102:
		l.lwz   	r4, 4(r3)
		l.lwz   	r3, 0(r3)
	l.jal   	__floatdidf
	l.nop			# nop delay slot
.L5095:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L5101:
	l.lwz   	r11,8(r3)	 # SI load
	l.lwz   	r12,12(r3)	 # SI load
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L5103:
	l.movhi  	r5,hi(.LC127)
	l.ori   	r4,r4,2
	l.ori   	r5,r5,lo(.LC127)
	l.sh    	28(r3),r4	 # movhi
		l.lwz   	r6, 0(r5)
		l.lwz   	r7, 4(r5)
		l.sw    	0(r1), r6
		l.sw    	4(r1), r7
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L5104	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r11,r14,0	 # move reg to reg
	l.j     	.L5095	# delay slot filled
	l.ori   	r12,r14,0	 # move reg to reg
.L5104:
	l.jal   	sqlite3VdbeMemNulTerminate	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L5105
	l.nop			# nop delay slot
	l.ori   	r11,r16,0	 # move reg to reg
	l.j     	.L5106	# delay slot filled
	l.ori   	r12,r11,0	 # move reg to reg
.L5105:
	l.lwz   	r3,20(r2)	 # SI load
	l.jal   	sqlite3AtoF	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.lwz   	r11,0(r1)	 # SI load
	l.j     	.L5095	# delay slot filled
	l.lwz   	r12,4(r1)	 # SI load
.LFE521:
	.size	sqlite3VdbeRealValue, .-sqlite3VdbeRealValue
	.align	4
.proc	sqlite3_value_double
	.global sqlite3_value_double
	.type	sqlite3_value_double, @function
sqlite3_value_double:
.LFB612:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1952:
	l.addi  	r1,r1,-4
.LCFI1953:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeRealValue
	l.nop			# nop delay slot	# sibcall s
.LFE612:
	.size	sqlite3_value_double, .-sqlite3_value_double
	.align	4
.proc	sqlite3_column_double
	.global sqlite3_column_double
	.type	sqlite3_column_double, @function
sqlite3_column_double:
.LFB652:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1954:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1955:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1956:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1957:
	l.addi  	r1,r1,-16
.LCFI1958:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	columnMallocFailure	# delay slot filled
	l.ori   	r14,r12,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r12,r14,0	 # move reg to reg
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE652:
	.size	sqlite3_column_double, .-sqlite3_column_double
	.align	4
.proc	applyNumericAffinity
	.type	applyNumericAffinity, @function
applyNumericAffinity:
.LFB687:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.sw    	-8(r1),r2	 # SI store
.LCFI1959:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1960:
	l.andi  	r4,r4,12
	l.addi  	r1,r1,-20
.LCFI1961:
	l.sfnei	r4,0
	l.bnf	.L5112	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L5109:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L5112:
	l.jal   	sqlite3VdbeMemNulTerminate
	l.nop			# nop delay slot
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,2
	l.sfeqi	r3,0
	l.bf	.L5109
	l.nop			# nop delay slot
	l.lbz   	r5,31(r2)	 # zero_extendqisi2
	l.lwz   	r3,20(r2)	 # SI load
	l.jal   	sqlite3IsNumber	# delay slot filled
	l.addi  	r4,r1,8
	l.sfeqi	r11,0
	l.bf	.L5109
	l.nop			# nop delay slot
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r3,8(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L5111
	l.nop			# nop delay slot
	l.lwz   	r3,20(r2)	 # SI load
	l.jal   	sqlite3Atoi64	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5111	# delay slot filled
	l.addi  	r4,r0,-16640	 # move immediate I
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.and   	r3,r3,r4
		l.lwz   	r4, 0(r1)
		l.lwz   	r5, 4(r1)
	l.ori   	r3,r3,4
		l.sw    	0(r2), r4
		l.sw    	4(r2), r5
	l.j     	.L5109	# delay slot filled
	l.sh    	28(r2),r3	 # movhi
.L5111:
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.addi  	r5,r0,-16640	 # move immediate I
		l.sw    	8(r2), r11
		l.sw    	8+4(r2), r12
	l.and   	r3,r3,r5
	l.ori   	r3,r3,8
	l.j     	.L5109	# delay slot filled
	l.sh    	28(r2),r3	 # movhi
.LFE687:
	.size	applyNumericAffinity, .-applyNumericAffinity
	.align	4
.proc	sqlite3_value_numeric_type
	.global sqlite3_value_numeric_type
	.type	sqlite3_value_numeric_type, @function
sqlite3_value_numeric_type:
.LFB689:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1962:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1963:
	l.addi  	r1,r1,-8
.LCFI1964:
	l.jal   	applyNumericAffinity	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.jal   	_storeTypeInfo.clone.72	# delay slot filled
	l.addi  	r4,r2,30
	l.lbz   	r11,30(r2)	 # zero_extendqisi2
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE689:
	.size	sqlite3_value_numeric_type, .-sqlite3_value_numeric_type
	.section	.rodata
	.align	4
.LC128:
	.long	-1008730112
	.long	0
	.align	4
.LC129:
	.long	1138753536
	.long	0
	.section .text
	.align	4
.proc	sqlite3VdbeIntValue
	.type	sqlite3VdbeIntValue, @function
sqlite3VdbeIntValue:
.LFB520:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.sw    	-8(r1),r2	 # SI store
.LCFI1965:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1966:
	l.andi  	r5,r4,4
	l.addi  	r1,r1,-32
.LCFI1967:
	l.sfeqi	r5,0
	l.bnf	.L5123	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.andi  	r5,r4,8
	l.sfeqi	r5,0
	l.bf	.L5117	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.movhi  	r2,hi(.LC128)
		l.lwz   	r6, 8(r3)
		l.lwz   	r7, 8+4(r3)
	l.addi  	r8,r0,0	 # move immediate I
		l.sw    	8(r1), r6
		l.sw    	8+4(r1), r7
	l.ori   	r2,r2,lo(.LC128)
	l.movhi 	r7,hi(-2147483648)	 # move immediate M
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
		l.lwz   	r3, 8(r1)
		l.lwz   	r4, 8+4(r1)
		l.sw    	0(r1), r7
		l.sw    	4(r1), r8
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bf	.L5124	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
	l.movhi  	r2,hi(.LC129)
		l.lwz   	r3, 8(r1)
		l.lwz   	r4, 8+4(r1)
	l.ori   	r2,r2,lo(.LC129)
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bf	.L5124	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
		l.lwz   	r3, 8(r1)
		l.lwz   	r4, 8+4(r1)
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
.L5116:
	l.lwz   	r11,0(r1)	 # SI load
.L5124:
	l.lwz   	r12,4(r1)	 # SI load
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L5117:
	l.addi  	r7,r0,0	 # move immediate I
	l.andi  	r5,r4,18
		l.sw    	0(r1), r6
		l.sw    	4(r1), r7
	l.sfeqi	r5,0
	l.bf	.L5124	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
	l.ori   	r5,r4,2
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.sh    	28(r3),r5	 # movhi
	l.sfnei	r11,0
	l.bf	.L5124	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
	l.jal   	sqlite3VdbeMemNulTerminate	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5116
	l.nop			# nop delay slot
	l.lwz   	r3,20(r2)	 # SI load
	l.jal   	sqlite3Atoi64	# delay slot filled
	l.addi  	r4,r1,16
		l.lwz   	r7, 16(r1)
		l.lwz   	r8, 16+4(r1)
		l.sw    	0(r1), r7
		l.sw    	4(r1), r8
	l.j     	.L5124	# delay slot filled
	l.lwz   	r11,0(r1)	 # SI load
.L5123:
		l.lwz   	r4, 4(r3)
		l.lwz   	r3, 0(r3)
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.lwz   	r11,0(r1)	 # SI load
	l.lwz   	r12,4(r1)	 # SI load
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE520:
	.size	sqlite3VdbeIntValue, .-sqlite3VdbeIntValue
	.align	4
.proc	sqlite3VdbeMemIntegerify
	.type	sqlite3VdbeMemIntegerify, @function
sqlite3VdbeMemIntegerify:
.LFB523:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1968:
	l.sw    	-8(r1),r2	 # SI store
.LCFI1969:
	l.addi  	r1,r1,-8
.LCFI1970:
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.addi  	r4,r0,-16640	 # move immediate I
		l.sw    	0(r2), r11
		l.sw    	4(r2), r12
	l.and   	r3,r3,r4
	l.addi  	r11,r0,0	 # move immediate I
	l.ori   	r3,r3,4
	l.sh    	28(r2),r3	 # movhi
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE523:
	.size	sqlite3VdbeMemIntegerify, .-sqlite3VdbeMemIntegerify
	.align	4
.proc	sqlite3_value_int64
	.global sqlite3_value_int64
	.type	sqlite3_value_int64, @function
sqlite3_value_int64:
.LFB614:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1971:
	l.addi  	r1,r1,-4
.LCFI1972:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeIntValue
	l.nop			# nop delay slot	# sibcall s
.LFE614:
	.size	sqlite3_value_int64, .-sqlite3_value_int64
	.align	4
.proc	zeroblobFunc
	.type	zeroblobFunc, @function
zeroblobFunc:
.LFB963:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1973:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-8(r1),r14	 # SI store
.LCFI1974:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1975:
	l.lwz   	r3,0(r5)	 # SI load
	l.addi  	r1,r1,-12
.LCFI1976:
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.lwz   	r14,24(r2)	 # SI load
	l.lwz   	r4,80(r14)	 # SI load
	l.srai  	r3,r4,31
	l.sfgts 	r11,r3
	l.bf	.L5130	# delay slot filled
	l.sfne 	r11,r3
	l.bnf	.L5131	# delay slot filled
	l.sfgtu 	r12,r4
.L5128:
	l.addi	r1,r1,12
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3_result_zeroblob	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L5131:
	l.bnf	.L5128
	l.nop			# nop delay slot
.L5130:
	l.addi	r1,r1,12
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3_result_error_toobig	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE963:
	.size	zeroblobFunc, .-zeroblobFunc
	.section	.rodata.str1.1
.LC130:
	.string	"integer overflow"
	.section	.rodata
	.align	4
.LC131:
	.long	0
	.long	0
	.section .text
	.align	4
.proc	absFunc
	.type	absFunc, @function
absFunc:
.LFB945:
	l.sw    	-20(r1),r2	 # SI store
.LCFI1977:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1978:
	l.sw    	-16(r1),r14	 # SI store
.LCFI1979:
	l.sw    	-12(r1),r16	 # SI store
.LCFI1980:
	l.sw    	-8(r1),r18	 # SI store
.LCFI1981:
	l.lwz   	r4,0(r5)	 # SI load
	l.addi  	r1,r1,-20
.LCFI1982:
	l.lbz   	r14,30(r4)	 # zero_extendqisi2
	l.sfeqi	r14,1
	l.bf	.L5134	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r14,5
	l.bf	.L5147	# delay slot filled
	l.addi  	r3,r3,8
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.movhi  	r5,hi(.LC131)
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC131)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__ltdf2	# delay slot filled
	l.ori   	r16,r12,0	 # move reg to reg
	l.sfltsi	r11,0
	l.bnf	.L5142
	l.nop			# nop delay slot
	l.movhi 	r3,hi(-2147483648)	 # move immediate M
	l.add   	r14,r14,r3
.L5142:
	l.addi	r1,r1,20
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r3,r2,8
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3VdbeMemSetDouble	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L5147:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3VdbeMemSetNull	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L5134:
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfltsi	r16,0
	l.bnf	.L5136	# delay slot filled
	l.ori   	r18,r12,0	 # move reg to reg
	l.add   	r3,r12,r12
	l.sfltu 	r3,r12
	l.bf	.L5149	# delay slot filled
	l.add   	r4,r16,r16
	l.addi  	r14,r0,0	 # move immediate I
.L5149:
	l.add   	r14,r14,r4
	l.or    	r3,r14,r3
	l.sfnei	r3,0
	l.bnf	.L5148	# delay slot filled
	l.sub   	r18,r0,r18
	l.sfgtui	r18,0
	l.bf	.L5140	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
.L5140:
	l.sub   	r16,r0,r16
	l.sub   	r16,r16,r3
.L5136:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r2,8
	l.addi  	r3,r0,4	 # movhi: move immediate
	l.sw    	8(r2),r16	 # SI store
	l.sh    	36(r2),r3	 # movhi
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sw    	12(r2),r18	 # SI store
	l.sb    	38(r2),r3	    # movqi
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L5148:
	l.addi	r1,r1,20
	l.movhi  	r4,hi(.LC130)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC130)
	l.addi  	r5,r0,-1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3_result_error	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.LFE945:
	.size	absFunc, .-absFunc
	.align	4
.proc	sqlite3_column_int64
	.global sqlite3_column_int64
	.type	sqlite3_column_int64, @function
sqlite3_column_int64:
.LFB654:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1983:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1984:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1985:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1986:
	l.addi  	r1,r1,-16
.LCFI1987:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
	l.jal   	columnMallocFailure	# delay slot filled
	l.ori   	r2,r12,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r12,r2,0	 # move reg to reg
	l.lwz   	r14,-12(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE654:
	.size	sqlite3_column_int64, .-sqlite3_column_int64
	.align	4
.proc	sqlite3_value_int
	.global sqlite3_value_int
	.type	sqlite3_value_int, @function
sqlite3_value_int:
.LFB613:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1988:
.LCFI1989:
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.ori   	r11,r12,0	 # move reg to reg
.LFE613:
	.size	sqlite3_value_int, .-sqlite3_value_int
	.section	.rodata.str1.1
.LC132:
	.string	"%.*f"
	.section .text
	.align	4
.proc	roundFunc
	.type	roundFunc, @function
roundFunc:
.LFB947:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1990:
	l.sw    	-12(r1),r14	 # SI store
.LCFI1991:
	l.sw    	-8(r1),r16	 # SI store
.LCFI1992:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1993:
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi  	r1,r1,-536
.LCFI1994:
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfnei	r4,2
	l.bnf	.L5159	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L5153:
	l.lwz   	r4,0(r14)	 # SI load
	l.lbz   	r3,30(r4)	 # zero_extendqisi2
	l.sfeqi	r3,5
	l.bf	.L5152
	l.nop			# nop delay slot
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.addi  	r14,r1,12
	l.movhi  	r5,hi(.LC132)
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC132)
	l.addi  	r3,r0,500	 # move immediate I
		l.sw    	512(r1), r11
		l.sw    	512+4(r1), r12
		l.sw    	4(r1), r11
		l.sw    	4+4(r1), r12
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3AtoF	# delay slot filled
	l.addi  	r4,r1,512
		l.lwz   	r4, 512(r1)
		l.lwz   	r5, 512+4(r1)
	l.jal   	sqlite3VdbeMemSetDouble	# delay slot filled
	l.addi  	r3,r16,8
.L5152:
	l.addi	r1,r1,536
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L5159:
	l.lwz   	r3,4(r5)	 # SI load
	l.lbz   	r2,30(r3)	 # zero_extendqisi2
	l.sfeqi	r2,5
	l.bf	.L5152
	l.nop			# nop delay slot
	l.jal   	sqlite3_value_int
	l.nop			# nop delay slot
	l.sfgtsi	r11,30
	l.bf	.L5157	# delay slot filled
	l.xori  	r3,r11,0xffff
	l.srai  	r3,r3,31
	l.j     	.L5153	# delay slot filled
	l.and   	r2,r11,r3
.L5157:
	l.j     	.L5153	# delay slot filled
	l.addi  	r2,r0,30	 # move immediate I
.LFE947:
	.size	roundFunc, .-roundFunc
	.align	4
.proc	sqlite3_column_int
	.global sqlite3_column_int
	.type	sqlite3_column_int, @function
sqlite3_column_int:
.LFB653:
	l.sw    	-4(r1),r9	 # SI store
.LCFI1995:
	l.sw    	-12(r1),r2	 # SI store
.LCFI1996:
	l.sw    	-8(r1),r14	 # SI store
.LCFI1997:
	l.addi  	r1,r1,-12
.LCFI1998:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3_value_int	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	columnMallocFailure	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE653:
	.size	sqlite3_column_int, .-sqlite3_column_int
	.section	.rodata.str1.1
.LC133:
	.string	"%lld"
.LC134:
	.string	"%!.15g"
	.section .text
	.align	4
.proc	sqlite3VdbeMemStringify
	.type	sqlite3VdbeMemStringify, @function
sqlite3VdbeMemStringify:
.LFB515:
	l.sw    	-16(r1),r2	 # SI store
.LCFI1999:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2000:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2001:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2002:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI2003:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,32	 # move immediate I
	l.ori   	r2,r3,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.lhz   	r16,28(r3)	 # zero_extendqisi2
	l.sfnei	r11,0
	l.bf	.L5162	# delay slot filled
	l.addi  	r3,r0,7	 # move immediate I
	l.andi  	r16,r16,4
	l.sfeqi	r16,0
	l.bnf	.L5170	# delay slot filled
	l.movhi  	r5,hi(.LC133)
	l.movhi  	r5,hi(.LC134)
	l.lwz   	r4,20(r2)	 # SI load
	l.addi  	r3,r0,32	 # move immediate I
		l.lwz   	r6, 8(r2)
		l.lwz   	r7, 8+4(r2)
		l.sw    	0(r1), r6
		l.sw    	4(r1), r7
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r5,lo(.LC134)
	l.lwz   	r6,20(r2)	 # SI load
.L5171:
	l.lbs   	r5,0(r6)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L5165
	l.nop			# nop delay slot
	l.ori   	r5,r6,0	 # move reg to reg
	l.addi  	r5,r5,1
.L5172:
	l.lbs   	r3,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L5172	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r6
	l.ori   	r7,r7,65535
	l.and   	r5,r5,r7
.L5165:
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.ori   	r3,r3,514
	l.sb    	31(r2),r4	    # movqi
	l.sh    	28(r2),r3	 # movhi
	l.sw    	24(r2),r5	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
.L5162:
	l.addi	r1,r1,24
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L5170:
	l.lwz   	r4,20(r2)	 # SI load
	l.addi  	r3,r0,32	 # move immediate I
		l.lwz   	r6, 0(r2)
		l.lwz   	r7, 4(r2)
		l.sw    	0(r1), r6
		l.sw    	4(r1), r7
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r5,lo(.LC133)
	l.j     	.L5171	# delay slot filled
	l.lwz   	r6,20(r2)	 # SI load
.LFE515:
	.size	sqlite3VdbeMemStringify, .-sqlite3VdbeMemStringify
	.align	4
.proc	sqlite3ValueText
	.type	sqlite3ValueText, @function
sqlite3ValueText:
.LFB538:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2004:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2005:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2006:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2007:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI2008:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bnf	.L5183	# delay slot filled
	l.ori   	r5,r3,0	 # move reg to reg
.L5174:
	l.addi	r1,r1,16
	l.ori   	r11,r5,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L5183:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.addi  	r5,r0,0	 # move immediate I
	l.andi  	r6,r4,1
	l.sfne 	r6,r5
	l.bf	.L5174
	l.nop			# nop delay slot
	l.andi  	r5,r4,16
	l.srai  	r5,r5,3
	l.or    	r4,r5,r4
	l.ori   	r5,r4,0	 # move reg to reg
	l.sh    	28(r3),r4	 # movhi
	l.andi  	r4,r4,16384
	l.sfeqi	r4,0
	l.bnf	.L5184
	l.nop			# nop delay slot
.L5175:
	l.andi  	r5,r5,2
	l.sfeqi	r5,0
	l.bf	.L5176	# delay slot filled
	l.addi  	r5,r0,-9	 # move immediate I
	l.addi  	r3,r0,-9	 # move immediate I
	l.and   	r16,r14,r3
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.andi  	r14,r14,8
	l.sfeqi	r14,0
	l.bf	.L5177
	l.nop			# nop delay slot
	l.lwz   	r3,20(r2)	 # SI load
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bnf	.L5185
	l.nop			# nop delay slot
.L5177:
	l.jal   	sqlite3VdbeMemNulTerminate	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,31(r2)	 # zero_extendqisi2
.L5186:
	l.sfne 	r3,r16
	l.bf	.L5174	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L5174	# delay slot filled
	l.lwz   	r5,20(r2)	 # SI load
.L5184:
	l.jal   	sqlite3VdbeMemExpandBlob
	l.nop			# nop delay slot
	l.j     	.L5175	# delay slot filled
	l.lhz   	r5,28(r2)	 # zero_extendqisi2
.L5185:
	l.jal   	sqlite3VdbeMemMakeWriteable	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.sfne 	r11,r5
	l.bf	.L5174
	l.nop			# nop delay slot
	l.j     	.L5177
	l.nop			# nop delay slot
.L5176:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemStringify	# delay slot filled
	l.and   	r16,r14,r5
	l.j     	.L5186	# delay slot filled
	l.lbz   	r3,31(r2)	 # zero_extendqisi2
.LFE538:
	.size	sqlite3ValueText, .-sqlite3ValueText
	.align	4
.proc	sqlite3MemCompare
	.type	sqlite3MemCompare, @function
sqlite3MemCompare:
.LFB536:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2009:
	l.lhz   	r6,28(r3)	 # zero_extendqisi2
	l.lhz   	r20,28(r4)	 # zero_extendqisi2
	l.sw    	-28(r1),r14	 # SI store
.LCFI2010:
	l.ori   	r14,r3,0	 # move reg to reg
	l.or    	r3,r20,r6
	l.sw    	-32(r1),r2	 # SI store
.LCFI2011:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2012:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2013:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2014:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2015:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2016:
	l.andi  	r2,r3,1
	l.addi  	r1,r1,-512
.LCFI2017:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bnf	.L5214	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
	l.andi  	r22,r3,12
	l.sfeqi	r22,0
	l.bf	.L5190	# delay slot filled
	l.andi  	r3,r3,2
	l.andi  	r3,r6,12
	l.sfeqi	r3,0
	l.bnf	.L5215	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L5189:
	l.addi	r1,r1,512
.L5219:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L5190:
	l.sfeqi	r3,0
	l.bnf	.L5216	# delay slot filled
	l.andi  	r6,r6,2
.L5200:
	l.lwz   	r18,24(r16)	 # SI load
	l.lwz   	r20,24(r14)	 # SI load
	l.lwz   	r3,20(r14)	 # SI load
	l.lwz   	r4,20(r16)	 # SI load
	l.sfles 	r18,r20
	l.bf	.L5204	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
.L5204:
	l.jal   	memcmp
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L5189	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L5189	# delay slot filled
	l.sub   	r2,r20,r18
.L5214:
	l.andi  	r2,r20,1
	l.andi  	r6,r6,1
	l.j     	.L5189	# delay slot filled
	l.sub   	r2,r2,r6
.L5216:
	l.sfeqi	r6,0
	l.bf	.L5189	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.andi  	r20,r20,2
	l.sfeqi	r20,0
	l.bf	.L5189	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
	l.sfeqi	r5,0
	l.bf	.L5200
	l.nop			# nop delay slot
	l.lbz   	r3,31(r14)	 # zero_extendqisi2
	l.lbz   	r2,4(r5)	 # zero_extendqisi2
	l.sfne 	r3,r2
	l.bnf	.L5217	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.addi  	r24,r1,240
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,240	 # move immediate I
	l.addi  	r5,r0,240	 # move immediate I
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemShallowCopy	# delay slot filled
	l.addi  	r5,r0,4096	 # move immediate I
	l.ori   	r3,r1,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemShallowCopy	# delay slot filled
	l.addi  	r5,r0,4096	 # move immediate I
	l.lbz   	r4,4(r18)	 # zero_extendqisi2
	l.jal   	sqlite3ValueText	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5202	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r14,264(r1)	 # SI load
.L5202:
	l.lbz   	r4,4(r18)	 # zero_extendqisi2
	l.jal   	sqlite3ValueText	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.ori   	r7,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5203	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r6,24(r1)	 # SI load
.L5203:
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r11,12(r18)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.lwz   	r3,8(r18)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.j     	.L5219	# delay slot filled
	l.addi	r1,r1,512
.L5215:
	l.andi  	r3,r20,12
	l.sfeqi	r3,0
	l.bf	.L5189	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
	l.and   	r2,r6,r20
	l.andi  	r2,r2,4
	l.sfnei	r2,0
	l.bf	.L5191	# delay slot filled
	l.andi  	r6,r6,8
	l.sfnei	r6,0
	l.bf	.L5192
	l.nop			# nop delay slot
		l.lwz   	r3, 0(r14)
		l.lwz   	r4, 4(r14)
	l.jal   	__floatdidf
	l.nop			# nop delay slot
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r18,r12,0	 # move reg to reg
.L5193:
	l.andi  	r20,r20,8
	l.sfnei	r20,0
	l.bf	.L5194
	l.nop			# nop delay slot
		l.lwz   	r3, 0(r16)
		l.lwz   	r4, 4(r16)
	l.jal   	__floatdidf
	l.nop			# nop delay slot
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r14,r12,0	 # move reg to reg
.L5195:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.jal   	__ltdf2	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
	l.sfltsi	r11,0
	l.bf	.L5189	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.jal   	__gtdf2	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sfgtsi	r11,0
	l.bf	.L5189
	l.nop			# nop delay slot
.L5199:
	l.j     	.L5189	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L5191:
	l.lwz   	r4,0(r14)	 # SI load
	l.lwz   	r3,0(r16)	 # SI load
	l.lwz   	r6,4(r14)	 # SI load
	l.sfgts 	r3,r4
	l.bf	.L5208	# delay slot filled
	l.lwz   	r5,4(r16)	 # SI load
	l.sfne 	r3,r4
	l.bnf	.L5218	# delay slot filled
	l.sfgtu 	r5,r6
	l.sfgts 	r4,r3
.L5220:
	l.bf	.L5189	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sfne 	r4,r3
	l.bf	.L5199	# delay slot filled
	l.sfgtu 	r6,r5
	l.bf	.L5189
	l.nop			# nop delay slot
	l.j     	.L5189	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L5194:
	l.lwz   	r20,8(r16)	 # SI load
	l.j     	.L5195	# delay slot filled
	l.lwz   	r14,12(r16)	 # SI load
.L5192:
	l.lwz   	r22,8(r14)	 # SI load
	l.j     	.L5193	# delay slot filled
	l.lwz   	r18,12(r14)	 # SI load
.L5218:
	l.bnf	.L5220	# delay slot filled
	l.sfgts 	r4,r3
.L5208:
	l.j     	.L5189	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
.L5217:
	l.lwz   	r11,12(r5)	 # SI load
	l.lwz   	r3,8(r5)	 # SI load
	l.lwz   	r4,24(r14)	 # SI load
	l.lwz   	r5,20(r14)	 # SI load
	l.lwz   	r6,24(r16)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.lwz   	r7,20(r16)	 # SI load
	l.j     	.L5189	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.LFE536:
	.size	sqlite3MemCompare, .-sqlite3MemCompare
	.align	4
.proc	sqlite3VdbeRecordCompare
	.type	sqlite3VdbeRecordCompare, @function
sqlite3VdbeRecordCompare:
.LFB598:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2018:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2019:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2020:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2021:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2022:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2023:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2024:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2025:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2026:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2027:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2028:
	l.lwz   	r2,0(r5)	 # SI load
	l.addi  	r1,r1,-304
.LCFI2029:
	l.ori   	r26,r4,0	 # move reg to reg
	l.sw    	8(r1),r2	 # SI store
	l.ori   	r18,r5,0	 # move reg to reg
	l.lbs   	r2,0(r4)	 # extendqisi2_no_sext_mem
	l.lwz   	r4,8(r1)	 # SI load
	l.lwz   	r5,8(r1)	 # SI load
	l.lbz   	r4,4(r4)	 # zero_extendqisi2
	l.sb    	43(r1),r4	    # movqi
	l.sw    	0(r1),r3	 # SI store
	l.addi  	r4,r0,0	 # movhi: move immediate
	l.lwz   	r3,0(r5)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.sh    	40(r1),r4	 # movhi
	l.sw    	28(r1),r3	 # SI store
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	48(r1),r5	 # SI store
		l.sw    	12(r1), r3
		l.sw    	12+4(r1), r4
	l.sflts 	r2,r5
	l.bf	.L5222	# delay slot filled
	l.lbz   	r20,0(r26)	 # zero_extendqisi2
	l.addi  	r14,r0,1	 # move immediate I
	l.sw    	256(r1),r20	 # SI store
.L5223:
	l.lhz   	r3,6(r18)	 # zero_extendqisi2
	l.andi  	r3,r3,4
	l.sfeqi	r3,0
	l.bf	.L5224	# delay slot filled
	l.ori   	r2,r20,0	 # move reg to reg
	l.addi  	r2,r20,-1
	l.sw    	256(r1),r2	 # SI store
.L5224:
	l.lwz   	r4,8(r1)	 # SI load
	l.sfgeu 	r14,r2
	l.lhz   	r4,6(r4)	 # zero_extendqisi2
	l.bf	.L5239	# delay slot filled
	l.sw    	4(r1),r4	 # SI store
	l.lhz   	r16,4(r18)	 # zero_extendqisi2
	l.sfeqi	r16,0
	l.bf	.L5225	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
	l.addi  	r22,r0,0	 # move immediate I
	l.lwz   	r5,8(r1)	 # SI load
	l.ori   	r16,r22,0	 # move reg to reg
	l.addi  	r24,r5,12
	l.j     	.L5232	# delay slot filled
	l.addi  	r28,r1,12
.L5244:
	l.srli  	r2,r2,1
	l.sfnei	r2,0
	l.bf	.L5225	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L5228:
	l.ori   	r5,r28,0	 # move reg to reg
.L5248:
	l.jal   	sqlite3VdbeSerialGet	# delay slot filled
	l.add   	r3,r26,r20
	l.lwz   	r2,16(r18)	 # SI load
	l.ori   	r30,r11,0	 # move reg to reg
	l.add   	r4,r2,r22
	l.lwz   	r2,4(r1)	 # SI load
	l.sfles 	r2,r16
	l.bf	.L5231	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
.L5231:
	l.jal   	sqlite3MemCompare	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5225	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,256(r1)	 # SI load
	l.sfleu 	r3,r14
	l.bf	.L5225	# delay slot filled
	l.addi  	r16,r16,1
	l.lhz   	r5,4(r18)	 # zero_extendqisi2
	l.addi  	r24,r24,4
	l.sfles 	r5,r16
	l.bf	.L5225	# delay slot filled
	l.addi  	r22,r22,240
	l.add   	r20,r20,r30
.L5232:
	l.add   	r2,r26,r14
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfltsi	r5,0
	l.bf	.L5226	# delay slot filled
	l.lbz   	r4,0(r2)	 # zero_extendqisi2
	l.addi  	r11,r0,1	 # move immediate I
	l.sw    	252(r1),r4	 # SI store
.L5227:
	l.lwz   	r2,0(r1)	 # SI load
	l.sflts 	r20,r2
	l.bf	.L5228	# delay slot filled
	l.add   	r14,r14,r11
	l.sfleui	r4,11
	l.bnf	.L5244	# delay slot filled
	l.addi  	r2,r4,-12
	l.movhi  	r3,hi(aSize.12542)
	l.ori   	r3,r3,lo(aSize.12542)
	l.add   	r2,r4,r3
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L5248	# delay slot filled
	l.ori   	r5,r28,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
.L5225:
	l.lwz   	r3,48(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L5233
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r1,12
.L5233:
	l.lhz   	r3,6(r18)	 # zero_extendqisi2
	l.andi  	r4,r3,32
	l.sfeqi	r4,0
	l.bf	.L5247	# delay slot filled
	l.sfnei	r2,0
	l.lhz   	r4,4(r18)	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.sfne 	r4,r16
	l.bnf	.L5245	# delay slot filled
	l.addi  	r4,r0,-33	 # move immediate I
	l.sfnei	r2,0
.L5247:
	l.bnf	.L5246	# delay slot filled
	l.lwz   	r5,8(r1)	 # SI load
	l.lwz   	r3,8(r5)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L5236
	l.nop			# nop delay slot
	l.lhz   	r4,6(r5)	 # zero_extendqisi2
	l.sfles 	r4,r16
	l.bf	.L5236	# delay slot filled
	l.add   	r3,r3,r16
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L5236
	l.nop			# nop delay slot
	l.sub   	r2,r0,r2
.L5236:
	l.addi	r1,r1,304
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L5226:
	l.addi  	r4,r1,252
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L5227	# delay slot filled
	l.lwz   	r4,252(r1)	 # SI load
.L5245:
	l.and   	r3,r3,r4
		l.lwz   	r4, 12(r1)
		l.lwz   	r5, 12+4(r1)
	l.sh    	6(r18),r3	 # movhi
		l.sw    	8(r18), r4
		l.sw    	8+4(r18), r5
	l.j     	.L5247	# delay slot filled
	l.sfnei	r2,0
.L5222:
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.addi  	r4,r1,256
	l.lwz   	r20,256(r1)	 # SI load
	l.j     	.L5223	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L5246:
	l.lhz   	r3,6(r18)	 # zero_extendqisi2
	l.andi  	r4,r3,8
	l.sfnei	r4,0
	l.bf	.L5243	# delay slot filled
	l.andi  	r3,r3,16
	l.sfnei	r3,0
	l.bf	.L5236	# delay slot filled
	l.lwz   	r4,256(r1)	 # SI load
	l.sfltu 	r14,r4
	l.bf	.L5236	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L5236	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L5239:
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L5225	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
.L5243:
	l.j     	.L5236	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
.LFE598:
	.size	sqlite3VdbeRecordCompare, .-sqlite3VdbeRecordCompare
	.align	4
.proc	nullifFunc
	.type	nullifFunc, @function
nullifFunc:
.LFB959:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2030:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sw    	-12(r1),r2	 # SI store
.LCFI2031:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2032:
	l.lwz   	r4,4(r5)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.addi  	r1,r1,-12
.LCFI2033:
	l.ori   	r2,r5,0	 # move reg to reg
	l.jal   	sqlite3MemCompare	# delay slot filled
	l.lwz   	r5,256(r14)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L5251	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L5251:
	l.lwz   	r4,0(r2)	 # SI load
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3_result_value	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE959:
	.size	nullifFunc, .-nullifFunc
	.align	4
.proc	minmaxFunc
	.type	minmaxFunc, @function
minmaxFunc:
.LFB942:
	l.sw    	-36(r1),r2	 # SI store
.LCFI2034:
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	-24(r1),r18	 # SI store
.LCFI2035:
	l.sw    	-20(r1),r20	 # SI store
.LCFI2036:
	l.sw    	-16(r1),r22	 # SI store
.LCFI2037:
	l.sw    	-8(r1),r26	 # SI store
.LCFI2038:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2039:
	l.sw    	-32(r1),r14	 # SI store
.LCFI2040:
	l.sw    	-28(r1),r16	 # SI store
.LCFI2041:
	l.sw    	-12(r1),r24	 # SI store
.LCFI2042:
	l.lwz   	r2,4(r2)	 # SI load
	l.addi  	r1,r1,-36
.LCFI2043:
	l.ori   	r26,r3,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfnei	r2,0
	l.bnf	.L5262	# delay slot filled
	l.addi  	r22,r0,-1	 # move immediate I
.L5253:
	l.lwz   	r2,0(r18)	 # SI load
	l.lbz   	r2,30(r2)	 # zero_extendqisi2
	l.sfeqi	r2,5
	l.bf	.L5252	# delay slot filled
	l.lwz   	r24,256(r26)	 # SI load
	l.sflesi	r20,1
	l.bf	.L5255	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.lwz   	r4,4(r18)	 # SI load
	l.lbz   	r2,30(r4)	 # zero_extendqisi2
	l.sfeqi	r2,5
	l.bf	.L5252	# delay slot filled
	l.addi  	r14,r18,8
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L5256	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L5258:
	l.lwz   	r4,0(r14)	 # SI load
	l.lbz   	r6,30(r4)	 # zero_extendqisi2
	l.sfeqi	r6,5
	l.bf	.L5252	# delay slot filled
	l.addi  	r14,r14,4
.L5256:
	l.slli  	r6,r16,2
	l.ori   	r5,r24,0	 # move reg to reg
	l.add   	r6,r18,r6
	l.jal   	sqlite3MemCompare	# delay slot filled
	l.lwz   	r3,0(r6)	 # SI load
	l.xor   	r11,r11,r22
	l.sfgesi	r11,0
	l.bnf	.L5257
	l.nop			# nop delay slot
	l.ori   	r16,r2,0	 # move reg to reg
.L5257:
	l.addi  	r2,r2,1
	l.sfgts 	r20,r2
	l.bf	.L5258
	l.nop			# nop delay slot
	l.slli  	r16,r16,2
.L5255:
	l.add   	r18,r18,r16
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r4,0(r18)	 # SI load
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.j	sqlite3_result_value	# delay slot filled	# sibcall s
	l.lwz   	r26,-8(r1)	 # SI load
.L5252:
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L5262:
	l.j     	.L5253	# delay slot filled
	l.ori   	r22,r2,0	 # move reg to reg
.LFE942:
	.size	minmaxFunc, .-minmaxFunc
	.align	4
.proc	sqlite3_value_text16le
	.global sqlite3_value_text16le
	.type	sqlite3_value_text16le, @function
sqlite3_value_text16le:
.LFB618:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2044:
	l.addi  	r1,r1,-4
.LCFI2045:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ValueText	# delay slot filled	# sibcall s
	l.addi  	r4,r0,2	 # move immediate I
.LFE618:
	.size	sqlite3_value_text16le, .-sqlite3_value_text16le
	.align	4
.proc	sqlite3_value_text16be
	.global sqlite3_value_text16be
	.type	sqlite3_value_text16be, @function
sqlite3_value_text16be:
.LFB617:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2046:
	l.addi  	r1,r1,-4
.LCFI2047:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ValueText	# delay slot filled	# sibcall s
	l.addi  	r4,r0,3	 # move immediate I
.LFE617:
	.size	sqlite3_value_text16be, .-sqlite3_value_text16be
	.align	4
.proc	sqlite3_value_text16
	.global sqlite3_value_text16
	.type	sqlite3_value_text16, @function
sqlite3_value_text16:
.LFB616:
	l.movhi  	r4,hi(sqlite3one)
	l.sw    	-4(r1),r9	 # SI store
.LCFI2048:
	l.ori   	r4,r4,lo(sqlite3one)
	l.addi  	r1,r1,-4
.LCFI2049:
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L5266	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.addi  	r4,r0,3	 # move immediate I
.L5266:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ValueText
	l.nop			# nop delay slot	# sibcall s
.LFE616:
	.size	sqlite3_value_text16, .-sqlite3_value_text16
	.align	4
.proc	sqlite3_column_text16
	.global sqlite3_column_text16
	.type	sqlite3_column_text16, @function
sqlite3_column_text16:
.LFB657:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2050:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2051:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2052:
	l.addi  	r1,r1,-12
.LCFI2053:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3_value_text16	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	columnMallocFailure	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE657:
	.size	sqlite3_column_text16, .-sqlite3_column_text16
	.align	4
.proc	sqlite3_value_text
	.global sqlite3_value_text
	.type	sqlite3_value_text, @function
sqlite3_value_text:
.LFB615:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2054:
	l.addi  	r1,r1,-4
.LCFI2055:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ValueText	# delay slot filled	# sibcall s
	l.addi  	r4,r0,1	 # move immediate I
.LFE615:
	.size	sqlite3_value_text, .-sqlite3_value_text
	.section	.rodata.str1.1
.LC135:
	.string	"%.*s\"%w\"%s"
	.section .text
	.align	4
.proc	renameTriggerFunc
	.type	renameTriggerFunc, @function
renameTriggerFunc:
.LFB813:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2056:
	l.sw    	-40(r1),r2	 # SI store
.LCFI2057:
	l.sw    	-20(r1),r22	 # SI store
.LCFI2058:
	l.sw    	-16(r1),r24	 # SI store
.LCFI2059:
	l.sw    	-12(r1),r26	 # SI store
.LCFI2060:
	l.sw    	-8(r1),r28	 # SI store
.LCFI2061:
	l.sw    	-36(r1),r14	 # SI store
.LCFI2062:
	l.sw    	-32(r1),r16	 # SI store
.LCFI2063:
	l.sw    	-28(r1),r18	 # SI store
.LCFI2064:
	l.sw    	-24(r1),r20	 # SI store
.LCFI2065:
	l.ori   	r24,r3,0	 # move reg to reg
	l.addi  	r1,r1,-60
.LCFI2066:
	l.lwz   	r3,0(r5)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.lwz   	r3,4(r2)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.sfeqi	r22,0
	l.ori   	r26,r11,0	 # move reg to reg
	l.bf	.L5270	# delay slot filled
	l.lwz   	r28,24(r24)	 # SI load
	l.ori   	r16,r22,0	 # move reg to reg
	l.addi  	r11,r0,0	 # move immediate I
	l.lbz   	r2,0(r16)	 # zero_extendqisi2
	l.addi  	r18,r0,3	 # move immediate I
	l.sfeqi	r2,0
	l.bf	.L5270	# delay slot filled
	l.addi  	r14,r1,16
	l.movhi 	r2,hi(1073676288)	 # move immediate M
.L5282:
	l.ori   	r2,r2,65535
	l.and   	r20,r11,r2
	l.ori   	r2,r16,0	 # move reg to reg
.L5273:
	l.add   	r2,r2,r11
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3GetToken	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,16(r1)	 # SI load
	l.sfeqi	r5,148
	l.bf	.L5273	# delay slot filled
	l.xori  	r4,r5,104
	l.sub   	r6,r0,r4
	l.or    	r4,r6,r4
	l.sfgesi	r4,0
	l.bf	.L5276	# delay slot filled
	l.xori  	r4,r5,118
	l.sub   	r6,r0,r4
	l.or    	r4,r6,r4
	l.sfgesi	r4,0
	l.bf	.L5276
	l.nop			# nop delay slot
	l.addi  	r18,r18,1
	l.sfnei	r18,2
	l.bf	.L5274	# delay slot filled
	l.xori  	r4,r5,44
	l.sub   	r6,r0,r4
	l.or    	r4,r6,r4
	l.sfgesi	r4,0
	l.bf	.L5275	# delay slot filled
	l.xori  	r4,r5,135
	l.sub   	r6,r0,r4
	l.or    	r4,r6,r4
	l.sfgesi	r4,0
	l.bf	.L5275	# delay slot filled
	l.sfnei	r5,5
	l.bnf	.L5281	# delay slot filled
	l.movhi  	r4,hi(.LC135)
.L5274:
	l.ori   	r16,r2,0	 # move reg to reg
.L5279:
	l.lbz   	r2,0(r16)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bnf	.L5282	# delay slot filled
	l.movhi 	r2,hi(1073676288)	 # move immediate M
.L5270:
	l.addi	r1,r1,60
.L5280:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L5276:
	l.addi  	r18,r0,0	 # move immediate I
	l.j     	.L5279	# delay slot filled
	l.ori   	r16,r2,0	 # move reg to reg
.L5275:
	l.movhi  	r4,hi(.LC135)
.L5281:
	l.sub   	r2,r16,r22
	l.ori   	r3,r28,0	 # move reg to reg
	l.add   	r16,r16,r20
	l.ori   	r4,r4,lo(.LC135)
	l.sw    	0(r1),r2	 # SI store
	l.sw    	4(r1),r22	 # SI store
	l.sw    	8(r1),r26	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	12(r1),r16	 # SI store
	l.movhi  	r6,hi(sqlite3DbFree)
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3_result_text	# delay slot filled
	l.ori   	r6,r6,lo(sqlite3DbFree)
	l.j     	.L5280	# delay slot filled
	l.addi	r1,r1,60
.LFE813:
	.size	renameTriggerFunc, .-renameTriggerFunc
	.align	4
.proc	renameTableFunc
	.type	renameTableFunc, @function
renameTableFunc:
.LFB812:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2067:
	l.sw    	-36(r1),r2	 # SI store
.LCFI2068:
	l.sw    	-24(r1),r18	 # SI store
.LCFI2069:
	l.sw    	-16(r1),r22	 # SI store
.LCFI2070:
	l.sw    	-12(r1),r24	 # SI store
.LCFI2071:
	l.sw    	-8(r1),r26	 # SI store
.LCFI2072:
	l.sw    	-32(r1),r14	 # SI store
.LCFI2073:
	l.sw    	-28(r1),r16	 # SI store
.LCFI2074:
	l.sw    	-20(r1),r20	 # SI store
.LCFI2075:
	l.ori   	r22,r3,0	 # move reg to reg
	l.addi  	r1,r1,-56
.LCFI2076:
	l.lwz   	r3,0(r5)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.lwz   	r3,4(r2)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfeqi	r18,0
	l.ori   	r24,r11,0	 # move reg to reg
	l.bf	.L5283	# delay slot filled
	l.lwz   	r26,24(r22)	 # SI load
	l.ori   	r16,r18,0	 # move reg to reg
	l.addi  	r11,r0,0	 # move immediate I
	l.lbz   	r2,0(r16)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L5283	# delay slot filled
	l.addi  	r14,r1,16
	l.movhi 	r2,hi(1073676288)	 # move immediate M
.L5293:
	l.ori   	r2,r2,65535
	l.and   	r20,r11,r2
	l.ori   	r2,r16,0	 # move reg to reg
.L5285:
	l.add   	r2,r2,r11
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3GetToken	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,16(r1)	 # SI load
	l.sfeqi	r5,148
	l.bf	.L5285	# delay slot filled
	l.xori  	r4,r5,121
	l.sub   	r6,r0,r4
	l.or    	r4,r6,r4
	l.sfgesi	r4,0
	l.bf	.L5289	# delay slot filled
	l.xori  	r5,r5,22
	l.sub   	r4,r0,r5
	l.or    	r5,r4,r5
	l.sfltsi	r5,0
	l.bnf	.L5289
	l.nop			# nop delay slot
	l.ori   	r16,r2,0	 # move reg to reg
	l.lbz   	r2,0(r16)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bnf	.L5293	# delay slot filled
	l.movhi 	r2,hi(1073676288)	 # move immediate M
.L5283:
	l.addi	r1,r1,56
.L5292:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L5289:
	l.movhi  	r4,hi(.LC135)
	l.sub   	r2,r16,r18
	l.ori   	r3,r26,0	 # move reg to reg
	l.add   	r16,r16,r20
	l.ori   	r4,r4,lo(.LC135)
	l.sw    	0(r1),r2	 # SI store
	l.sw    	4(r1),r18	 # SI store
	l.sw    	8(r1),r24	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	12(r1),r16	 # SI store
	l.movhi  	r6,hi(sqlite3DbFree)
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3_result_text	# delay slot filled
	l.ori   	r6,r6,lo(sqlite3DbFree)
	l.j     	.L5292	# delay slot filled
	l.addi	r1,r1,56
.LFE812:
	.size	renameTableFunc, .-renameTableFunc
	.section	.rodata.str1.1
.LC139:
	.string	"now"
.LC140:
	.string	"localtime"
.LC141:
	.string	"unixepoch"
.LC142:
	.string	"utc"
.LC143:
	.string	"weekday "
	.global __eqdf2
.LC145:
	.string	"start of "
.LC147:
	.string	"month"
.LC148:
	.string	"year"
.LC149:
	.string	"day"
.LC150:
	.string	"hour"
.LC152:
	.string	"minute"
.LC154:
	.string	"second"
	.section	.rodata
	.align	4
.LC136:
	.long	-1075838976
	.long	0
	.align	4
.LC137:
	.long	1071644672
	.long	0
	.align	4
.LC138:
	.long	1100257648
	.long	0
	.align	4
.LC144:
	.long	1075576832
	.long	0
	.align	4
.LC146:
	.long	0
	.long	0
	.align	4
.LC151:
	.long	1095464768
	.long	0
	.align	4
.LC153:
	.long	1089293312
	.long	0
	.align	4
.LC155:
	.long	1083129856
	.long	0
	.align	4
.LC156:
	.long	1077805056
	.long	0
	.align	4
.LC157:
	.long	1081528320
	.long	0
	.section .text
	.align	4
.proc	isDate
	.type	isDate, @function
isDate:
.LFB21:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2077:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-32(r1),r18	 # SI store
.LCFI2078:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2079:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2080:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2081:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2082:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2083:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2084:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2085:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2086:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2087:
	l.sw    	0(r6),r2	 # SI store
	l.sw    	4(r6),r2	 # SI store
	l.sw    	8(r6),r2	 # SI store
	l.sw    	12(r6),r2	 # SI store
	l.sw    	16(r6),r2	 # SI store
	l.sw    	20(r6),r2	 # SI store
	l.sw    	24(r6),r2	 # SI store
	l.sw    	28(r6),r2	 # SI store
	l.sw    	32(r6),r2	 # SI store
	l.sw    	36(r6),r2	 # SI store
	l.sw    	40(r6),r2	 # SI store
	l.addi  	r1,r1,-228
.LCFI2088:
	l.ori   	r18,r6,0	 # move reg to reg
	l.ori   	r30,r4,0	 # move reg to reg
	l.ori   	r22,r3,0	 # move reg to reg
	l.sfne 	r4,r2
	l.bnf	.L5414	# delay slot filled
	l.ori   	r20,r5,0	 # move reg to reg
	l.lwz   	r2,0(r5)	 # SI load
	l.lbz   	r5,30(r2)	 # zero_extendqisi2
	l.sfeqi	r5,2
	l.bf	.L5298	# delay slot filled
	l.sfnei	r5,1
	l.bnf	.L5298	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3_value_text	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L5296	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lbs   	r3,0(r11)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,45
	l.bnf	.L5301	# delay slot filled
	l.add   	r14,r11,r2
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
.L5301:
	l.addi  	r4,r0,4	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.sw    	0(r1),r4	 # SI store
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r7,r0,45	 # move immediate I
	l.sw    	4(r1),r4	 # SI store
	l.addi  	r4,r0,9999	 # move immediate I
	l.addi  	r6,r0,2	 # move immediate I
	l.sw    	8(r1),r4	 # SI store
	l.addi  	r4,r1,176
	l.sw    	24(r1),r5	 # SI store
	l.sw    	16(r1),r4	 # SI store
	l.addi  	r4,r0,12	 # move immediate I
	l.sw    	44(r1),r5	 # SI store
	l.sw    	28(r1),r4	 # SI store
	l.addi  	r4,r1,172
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	36(r1),r4	 # SI store
	l.addi  	r4,r0,31	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	48(r1),r4	 # SI store
	l.addi  	r4,r1,168
	l.sw    	12(r1),r7	 # SI store
	l.sw    	20(r1),r6	 # SI store
	l.sw    	32(r1),r7	 # SI store
	l.sw    	40(r1),r6	 # SI store
	l.sw    	52(r1),r5	 # SI store
	l.jal   	getDigits	# delay slot filled
	l.sw    	56(r1),r4	 # SI store
	l.sfnei	r11,3
	l.bnf	.L5415
	l.nop			# nop delay slot
.L5302:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	parseHhMmSs	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5439	# delay slot filled
	l.sfgtsi	r30,1
	l.movhi  	r4,hi(.LC139)
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC139)
	l.sfnei	r11,0
	l.bnf	.L5416	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r1,180
	l.jal   	sqlite3IsNumber	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5296	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3AtoF	# delay slot filled
	l.addi  	r4,r1,160
	l.movhi  	r5,hi(.LC138)
		l.lwz   	r3, 160(r1)
		l.lwz   	r4, 160+4(r1)
	l.ori   	r5,r5,lo(.LC138)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__muldf3
	l.nop			# nop delay slot
	l.movhi  	r5,hi(.LC137)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC137)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__adddf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
	l.sb    	42(r18),r2	    # movqi
		l.sw    	0(r18), r11
		l.sw    	4(r18), r12
	l.j     	.L5439	# delay slot filled
	l.sfgtsi	r30,1
.L5298:
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.movhi  	r2,hi(.LC138)
.L5441:
	l.ori   	r2,r2,lo(.LC138)
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
	l.jal   	__muldf3	# delay slot filled
	l.movhi  	r2,hi(.LC137)
	l.ori   	r2,r2,lo(.LC137)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
	l.jal   	__adddf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
	l.addi  	r4,r0,1	 # movqi: move immediate
		l.sw    	0(r18), r11
		l.sw    	4(r18), r12
	l.sb    	42(r18),r4	    # movqi
.L5300:
	l.sfgtsi	r30,1
.L5439:
	l.bnf	.L5408	# delay slot filled
	l.addi  	r22,r0,1	 # move immediate I
	l.addi  	r20,r20,4
	l.addi  	r16,r1,128
.L5369:
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r3,0(r20)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L5388	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L5449	# delay slot filled
	l.add   	r3,r11,r2
.L5313:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3UpperToLower)
	l.add   	r4,r16,r2
	l.add   	r3,r3,r5
	l.addi  	r2,r2,1
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.sfeqi	r2,29
	l.bf	.L5312	# delay slot filled
	l.sb    	0(r4),r3	    # movqi
	l.add   	r3,r11,r2
.L5449:
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L5313	# delay slot filled
	l.movhi  	r5,hi(sqlite3UpperToLower)
.L5312:
	l.add   	r2,r16,r2
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.sb    	0(r2),r6	    # movqi
	l.lbz   	r2,128(r1)	 # zero_extendqisi2
	l.addi  	r2,r2,-43
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfgtui	r2,76
	l.bf	.L5388	# delay slot filled
	l.movhi  	r7,hi(.L5319)
	l.slli  	r2,r2,2
	l.ori   	r7,r7,lo(.L5319)
	l.add   	r2,r2,r7
	l.lwz   	r2,0(r2)	 # SI load
	l.jr    	r2
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L5319:
	.word	.L5314
	.word	.L5388
	.word	.L5314
	.word	.L5388
	.word	.L5388
	.word	.L5314
	.word	.L5314
	.word	.L5314
	.word	.L5314
	.word	.L5314
	.word	.L5314
	.word	.L5314
	.word	.L5314
	.word	.L5314
	.word	.L5314
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5315
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5388
	.word	.L5316
	.word	.L5388
	.word	.L5317
	.word	.L5388
	.word	.L5318
	.section .text
.L5318:
	l.movhi  	r4,hi(.LC143)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC143)
	l.jal   	strncmp	# delay slot filled
	l.addi  	r5,r0,8	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L5388	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r1,136
	l.jal   	sqlite3AtoF	# delay slot filled
	l.addi  	r4,r1,160
	l.sflesi	r11,0
	l.bf	.L5388
	l.nop			# nop delay slot
		l.lwz   	r3, 160(r1)
		l.lwz   	r4, 160+4(r1)
		l.sw    	60(r1), r3
		l.sw    	60+4(r1), r4
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__eqdf2
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bnf	.L5388	# delay slot filled
	l.sfltsi	r14,0
	l.bf	.L5388	# delay slot filled
	l.movhi  	r7,hi(.LC144)
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
	l.ori   	r7,r7,lo(.LC144)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bf	.L5417
	l.nop			# nop delay slot
.L5388:
	l.addi  	r2,r0,1	 # move immediate I
.L5296:
	l.addi	r1,r1,228
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L5317:
	l.movhi  	r4,hi(.LC141)
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC141)
	l.sfnei	r11,0
	l.bf	.L5322
	l.nop			# nop delay slot
	l.lbs   	r2,42(r18)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bnf	.L5418	# delay slot filled
	l.ori   	r6,r0,43200	 # move immediate K
.L5322:
	l.movhi  	r4,hi(.LC142)
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC142)
	l.sfnei	r11,0
	l.bf	.L5388	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	computeJD	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	localtimeOffset	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,4(r18)	 # SI load
	l.ori   	r24,r11,0	 # move reg to reg
	l.sub   	r14,r4,r12
	l.ori   	r26,r12,0	 # move reg to reg
	l.lwz   	r28,0(r18)	 # SI load
	l.sfgtu 	r14,r4
	l.bnf	.L5419	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L5325:
	l.sub   	r28,r28,r24
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.sub   	r28,r28,r3
	l.sw    	4(r18),r14	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.sb    	40(r18),r7	    # movqi
	l.sw    	0(r18),r28	 # SI store
	l.sb    	41(r18),r7	    # movqi
	l.jal   	localtimeOffset	# delay slot filled
	l.sb    	43(r18),r7	    # movqi
	l.sub   	r2,r14,r12
	l.ori   	r3,r11,0	 # move reg to reg
	l.sfgtu 	r2,r14
	l.bnf	.L5420	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.sub   	r3,r28,r3
	l.add   	r4,r2,r26
	l.sfltu 	r4,r2
	l.bnf	.L5421	# delay slot filled
	l.sub   	r3,r3,r5
.L5327:
	l.add   	r3,r3,r24
	l.sw    	4(r18),r4	 # SI store
	l.add   	r5,r5,r3
	l.sw    	0(r18),r5	 # SI store
.L5433:
	l.addi  	r22,r22,1
	l.sfgts 	r30,r22
	l.bf	.L5369	# delay slot filled
	l.addi  	r20,r20,4
.L5408:
	l.j     	.L5296	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L5316:
	l.movhi  	r4,hi(.LC145)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC145)
	l.jal   	strncmp	# delay slot filled
	l.addi  	r5,r0,9	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L5388	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	computeYMD	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC146)
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.movhi  	r4,hi(.LC147)
	l.ori   	r6,r6,lo(.LC146)
	l.addi  	r3,r1,137
	l.sb    	41(r18),r7	    # movqi
	l.sw    	24(r18),r2	 # SI store
	l.sw    	20(r18),r2	 # SI store
	l.sb    	43(r18),r2	    # movqi
	l.sb    	42(r18),r2	    # movqi
		l.lwz   	r5, 0(r6)
		l.lwz   	r6, 4(r6)
		l.sw    	32(r18), r5
		l.sw    	32+4(r18), r6
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC147)
	l.sfnei	r11,0
	l.bnf	.L5422	# delay slot filled
	l.movhi  	r4,hi(.LC148)
	l.addi  	r3,r1,137
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC148)
	l.sfnei	r11,0
	l.bnf	.L5423	# delay slot filled
	l.movhi  	r4,hi(.LC149)
	l.addi  	r3,r1,137
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC149)
	l.sfeqi	r11,0
	l.bf	.L5444	# delay slot filled
	l.addi  	r22,r22,1
	l.j     	.L5296	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L5315:
	l.movhi  	r4,hi(.LC140)
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC140)
	l.sfnei	r11,0
	l.bf	.L5388	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	computeJD	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r24,4(r18)	 # SI load
	l.jal   	localtimeOffset	# delay slot filled
	l.lwz   	r14,0(r18)	 # SI load
	l.add   	r3,r12,r24
	l.sfltu 	r3,r12
	l.bf	.L5320	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
.L5320:
	l.add   	r11,r11,r14
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.add   	r4,r4,r11
	l.sw    	4(r18),r3	 # SI store
	l.sb    	40(r18),r2	    # movqi
	l.sw    	0(r18),r4	 # SI store
	l.sb    	41(r18),r2	    # movqi
	l.sb    	43(r18),r2	    # movqi
.L5370:
	l.addi  	r22,r22,1
.L5444:
	l.sfgts 	r30,r22
	l.bf	.L5369	# delay slot filled
	l.addi  	r20,r20,4
	l.j     	.L5296	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L5314:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3AtoF	# delay slot filled
	l.addi  	r4,r1,160
	l.add   	r14,r16,r11
	l.lbs   	r2,0(r14)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,58
	l.bnf	.L5424	# delay slot filled
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.movhi  	r3,hi(sqlite3CtypeMap)
	l.ori   	r3,r3,lo(sqlite3CtypeMap)
	l.add   	r2,r2,r3
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
	l.bf	.L5345
	l.nop			# nop delay slot
	l.addi  	r14,r14,1
.L5445:
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.lbz   	r2,0(r14)	 # zero_extendqisi2
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.add   	r2,r2,r4
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfnei	r2,0
	l.bf	.L5445	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
.L5345:
	l.lbs   	r3,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L5347	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
	l.addi  	r2,r2,1
.L5446:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L5446	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
.L5347:
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r14
	l.ori   	r5,r5,65535
	l.and   	r2,r2,r5
	l.addi  	r3,r2,-3
	l.sfgtui	r3,7
	l.bf	.L5388	# delay slot filled
	l.addi  	r3,r2,-1
	l.add   	r4,r14,r3
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,115
	l.bnf	.L5425	# delay slot filled
	l.addi  	r6,r0,0	 # movqi: move immediate
.L5349:
	l.jal   	computeJD	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.movhi  	r7,hi(.LC146)
		l.lwz   	r3, 160(r1)
		l.lwz   	r4, 160+4(r1)
	l.ori   	r7,r7,lo(.LC146)
		l.sw    	60(r1), r3
		l.sw    	60+4(r1), r4
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bnf	.L5405	# delay slot filled
	l.movhi  	r7,hi(.LC137)
	l.movhi  	r5,hi(.LC136)
	l.sfnei	r2,3
	l.ori   	r5,r5,lo(.LC136)
		l.lwz   	r4, 0(r5)
		l.lwz   	r5, 4(r5)
		l.sw    	68(r1), r4
		l.sw    	68+4(r1), r5
	l.bnf	.L5426	# delay slot filled
	l.sfnei	r2,4
.L5447:
	l.bnf	.L5427	# delay slot filled
	l.sfnei	r2,6
	l.bnf	.L5428	# delay slot filled
	l.sfnei	r2,5
	l.bf	.L5353	# delay slot filled
	l.movhi  	r4,hi(.LC147)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC147)
	l.sfnei	r11,0
	l.bnf	.L5429
	l.nop			# nop delay slot
.L5361:
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.addi  	r2,r0,1	 # move immediate I
	l.sb    	40(r18),r4	    # movqi
	l.sb    	41(r18),r4	    # movqi
	l.j     	.L5296	# delay slot filled
	l.sb    	43(r18),r4	    # movqi
.L5424:
	l.movhi  	r3,hi(sqlite3CtypeMap)
	l.lbz   	r2,128(r1)	 # zero_extendqisi2
	l.ori   	r3,r3,lo(sqlite3CtypeMap)
	l.add   	r2,r2,r3
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,4
	l.sfeqi	r2,0
	l.bf	.L5339	# delay slot filled
	l.addi  	r3,r1,129
	l.ori   	r3,r16,0	 # move reg to reg
.L5339:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r1,84
	l.sw    	84(r1),r5	 # SI store
	l.sw    	88(r1),r5	 # SI store
	l.sw    	92(r1),r5	 # SI store
	l.sw    	96(r1),r5	 # SI store
	l.sw    	100(r1),r5	 # SI store
	l.sw    	104(r1),r5	 # SI store
	l.sw    	108(r1),r5	 # SI store
	l.sw    	112(r1),r5	 # SI store
	l.sw    	116(r1),r5	 # SI store
	l.sw    	120(r1),r5	 # SI store
	l.jal   	parseHhMmSs	# delay slot filled
	l.sw    	124(r1),r5	 # SI store
	l.sfnei	r11,0
	l.bf	.L5388	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	computeJD	# delay slot filled
	l.addi  	r3,r1,84
	l.movhi 	r6,hi(-43253760)	 # move immediate M
	l.lwz   	r4,88(r1)	 # SI load
	l.ori   	r6,r6,53760
	l.lwz   	r24,84(r1)	 # SI load
	l.add   	r14,r4,r6
	l.sfltu 	r14,r4
	l.bf	.L5340	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
.L5340:
	l.addi  	r24,r24,-1
	l.movhi  	r6,hi(86400000)
	l.add   	r24,r3,r24
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r6,lo(86400000)
	l.jal   	__divdi3	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.movhi  	r6,hi(-86400000)
	l.addi  	r5,r0,-1	 # move immediate I
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__muldi3	# delay slot filled
	l.ori   	r6,r6,lo(-86400000)
	l.add   	r2,r12,r14
	l.sfltu 	r2,r12
	l.bf	.L5341	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
.L5341:
	l.add   	r11,r11,r24
	l.lbs   	r3,128(r1)	 # extendqisi2_no_sext_mem
	l.add   	r4,r4,r11
	l.sw    	88(r1),r2	 # SI store
	l.sfnei	r3,45
	l.bnf	.L5430	# delay slot filled
	l.sw    	84(r1),r4	 # SI store
.L5342:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	computeJD	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.lwz   	r6,4(r18)	 # SI load
	l.lwz   	r3,88(r1)	 # SI load
	l.sb    	40(r18),r7	    # movqi
	l.add   	r3,r6,r3
	l.sb    	41(r18),r7	    # movqi
	l.sb    	43(r18),r7	    # movqi
	l.lwz   	r5,0(r18)	 # SI load
	l.sfltu 	r3,r6
	l.bf	.L5344	# delay slot filled
	l.lwz   	r4,84(r1)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
.L5344:
	l.add   	r4,r5,r4
	l.sw    	4(r18),r3	 # SI store
	l.add   	r2,r2,r4
	l.j     	.L5370	# delay slot filled
	l.sw    	0(r18),r2	 # SI store
.L5405:
	l.sfnei	r2,3
	l.ori   	r7,r7,lo(.LC137)
		l.lwz   	r6, 0(r7)
		l.lwz   	r7, 4(r7)
		l.sw    	68(r1), r6
		l.sw    	68+4(r1), r7
	l.bf	.L5447	# delay slot filled
	l.sfnei	r2,4
.L5426:
	l.movhi  	r4,hi(.LC149)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC149)
	l.sfnei	r11,0
	l.bf	.L5361	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.movhi  	r2,hi(.LC138)
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
	l.ori   	r2,r2,lo(.LC138)
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
	l.jal   	__muldf3
	l.nop			# nop delay slot
		l.lwz   	r5, 68(r1)
		l.lwz   	r6, 68+4(r1)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
.L5412:
	l.jal   	__adddf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
	l.lwz   	r5,4(r18)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.add   	r12,r5,r12
	l.lwz   	r4,0(r18)	 # SI load
	l.sfltu 	r12,r5
	l.bf	.L5368	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.j     	.L5368	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L5414:
	l.lwz   	r2,24(r3)	 # SI load
	l.addi  	r4,r1,160
	l.lwz   	r5,0(r2)	 # SI load
	l.ori   	r2,r30,0	 # move reg to reg
	l.lwz   	r11,64(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.movhi  	r5,hi(.LC138)
		l.lwz   	r3, 160(r1)
		l.lwz   	r4, 160+4(r1)
	l.ori   	r5,r5,lo(.LC138)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__muldf3
	l.nop			# nop delay slot
	l.movhi  	r5,hi(.LC137)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r5,r5,lo(.LC137)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__adddf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
	l.addi  	r3,r0,1	 # movqi: move immediate
		l.sw    	0(r18), r11
		l.sw    	4(r18), r12
	l.j     	.L5296	# delay slot filled
	l.sb    	42(r18),r3	    # movqi
.L5418:
	l.lwz   	r5,4(r18)	 # SI load
	l.lwz   	r3,0(r18)	 # SI load
	l.add   	r4,r5,r6
	l.sfltu 	r4,r5
	l.bnf	.L5431	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L5323:
	l.movhi  	r6,hi(86400)
	l.add   	r3,r2,r3
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r6,lo(86400)
	l.jal   	__divdi3	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.movhi 	r7,hi(1045626880)	 # move immediate M
	l.movhi 	r4,hi(-1045692416)	 # move immediate M
	l.ori   	r7,r7,8704
	l.ori   	r4,r4,56832
	l.sfgeu 	r12,r4
	l.bnf	.L5432	# delay slot filled
	l.add   	r3,r12,r7
.L5324:
	l.ori   	r5,r0,49096	 # move immediate K
	l.add   	r11,r11,r5
.L5407:
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.add   	r2,r2,r11
	l.sw    	4(r18),r3	 # SI store
	l.sb    	40(r18),r6	    # movqi
	l.sw    	0(r18),r2	 # SI store
	l.sb    	41(r18),r6	    # movqi
	l.j     	.L5370	# delay slot filled
	l.sb    	43(r18),r6	    # movqi
.L5422:
	l.addi  	r7,r0,1	 # move immediate I
	l.j     	.L5370	# delay slot filled
	l.sw    	16(r18),r7	 # SI store
.L5421:
	l.addi  	r5,r0,0	 # move immediate I
.L5440:
	l.add   	r3,r3,r24
	l.sw    	4(r18),r4	 # SI store
	l.add   	r5,r5,r3
	l.j     	.L5433	# delay slot filled
	l.sw    	0(r18),r5	 # SI store
.L5420:
	l.addi  	r5,r0,0	 # move immediate I
	l.sub   	r3,r28,r3
	l.add   	r4,r2,r26
	l.sub   	r3,r3,r5
	l.sfltu 	r4,r2
	l.bf	.L5327	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L5440	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L5419:
	l.j     	.L5325	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L5432:
	l.j     	.L5324	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L5431:
	l.j     	.L5323	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L5428:
	l.movhi  	r4,hi(.LC152)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC152)
	l.sfnei	r11,0
	l.bf	.L5359	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.movhi  	r2,hi(.LC153)
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
	l.ori   	r2,r2,lo(.LC153)
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
.L5413:
	l.jal   	__muldf3
	l.nop			# nop delay slot
		l.lwz   	r3, 68(r1)
		l.lwz   	r4, 68+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
	l.lwz   	r5,4(r18)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.add   	r12,r5,r12
	l.lwz   	r4,0(r18)	 # SI load
	l.sfltu 	r12,r5
	l.bf	.L5368	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
.L5368:
	l.add   	r2,r4,r2
	l.sw    	4(r18),r12	 # SI store
	l.add   	r3,r3,r2
	l.sw    	0(r18),r3	 # SI store
.L5355:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	40(r18),r3	    # movqi
	l.sb    	41(r18),r3	    # movqi
	l.j     	.L5370	# delay slot filled
	l.sb    	43(r18),r3	    # movqi
.L5417:
	l.jal   	computeYMD_HMS	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.sb    	43(r18),r2	    # movqi
	l.jal   	computeJD	# delay slot filled
	l.sb    	42(r18),r2	    # movqi
	l.movhi 	r5,hi(129564672)	 # move immediate M
	l.lwz   	r24,4(r18)	 # SI load
	l.ori   	r5,r5,35328
	l.lwz   	r26,0(r18)	 # SI load
	l.add   	r4,r24,r5
	l.sfltu 	r4,r24
	l.bf	.L5330	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
.L5330:
	l.movhi  	r6,hi(86400000)
	l.add   	r3,r5,r26
	l.ori   	r6,r6,lo(86400000)
	l.jal   	__divdi3	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__moddi3	# delay slot filled
	l.addi  	r6,r0,7	 # move immediate I
	l.srai  	r3,r14,31
	l.ori   	r5,r11,0	 # move reg to reg
	l.sfgts 	r11,r3
	l.bnf	.L5434	# delay slot filled
	l.ori   	r4,r12,0	 # move reg to reg
.L5392:
	l.addi  	r4,r12,-7
	l.sfltu 	r4,r12
	l.bnf	.L5435	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L5333:
	l.addi  	r2,r11,-1
	l.add   	r5,r5,r2
.L5331:
	l.sub   	r4,r14,r4
	l.sfgtu 	r4,r14
.L5450:
	l.bf	.L5334	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r2,r0,0	 # move immediate I
.L5334:
	l.sub   	r3,r3,r5
	l.movhi  	r6,hi(86400000)
	l.sub   	r3,r3,r2
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r6,lo(86400000)
	l.jal   	__muldi3	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.add   	r3,r12,r24
	l.sfltu 	r3,r12
	l.bf	.L5335
	l.nop			# nop delay slot
	l.addi  	r2,r0,0	 # move immediate I
.L5335:
	l.j     	.L5407	# delay slot filled
	l.add   	r11,r11,r26
.L5415:
	l.addi  	r14,r14,10
.L5303:
	l.movhi  	r6,hi(sqlite3CtypeMap)
	l.lbz   	r3,0(r14)	 # zero_extendqisi2
	l.ori   	r6,r6,lo(sqlite3CtypeMap)
	l.add   	r4,r3,r6
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,1
	l.sfnei	r4,0
	l.bf	.L5304	# delay slot filled
	l.sfeqi	r3,84
	l.bnf	.L5436	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L5304:
	l.j     	.L5303	# delay slot filled
	l.addi  	r14,r14,1
.L5436:
	l.jal   	parseHhMmSs	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5448	# delay slot filled
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.lbs   	r3,0(r14)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L5302
	l.nop			# nop delay slot
	l.sb    	41(r18),r3	    # movqi
.L5448:
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	42(r18),r7	    # movqi
	l.sfeqi	r2,0
	l.bnf	.L5437	# delay slot filled
	l.sb    	40(r18),r3	    # movqi
	l.lwz   	r2,176(r1)	 # SI load
.L5307:
	l.sw    	8(r18),r2	 # SI store
	l.lwz   	r2,172(r1)	 # SI load
	l.lbs   	r3,43(r18)	 # extendqisi2_no_sext_mem
	l.sw    	12(r18),r2	 # SI store
	l.lwz   	r2,168(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L5300	# delay slot filled
	l.sw    	16(r18),r2	 # SI store
	l.jal   	computeJD	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.j     	.L5439	# delay slot filled
	l.sfgtsi	r30,1
.L5353:
	l.sfnei	r2,4
	l.bf	.L5361
	l.nop			# nop delay slot
.L5396:
	l.movhi  	r4,hi(.LC148)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC148)
	l.sfnei	r11,0
	l.bf	.L5361	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	computeYMD_HMS	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,8(r18)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r4,r4,r2
	l.sb    	42(r18),r14	    # movqi
	l.jal   	computeJD	# delay slot filled
	l.sw    	8(r18),r4	 # SI store
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
		l.lwz   	r3, 160(r1)
		l.lwz   	r4, 160+4(r1)
		l.sw    	60(r1), r11
		l.sw    	60+4(r1), r12
		l.sw    	76(r1), r3
		l.sw    	76+4(r1), r4
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
		l.lwz   	r5, 76(r1)
		l.lwz   	r6, 76+4(r1)
	l.jal   	__nedf2
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L5355
	l.nop			# nop delay slot
		l.lwz   	r5, 60(r1)
		l.lwz   	r6, 60+4(r1)
		l.lwz   	r3, 76(r1)
		l.lwz   	r4, 76+4(r1)
	l.jal   	__subdf3	# delay slot filled
	l.movhi  	r2,hi(.LC138)
	l.movhi  	r7,hi(.LC157)
	l.ori   	r7,r7,lo(.LC157)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r2,r2,lo(.LC138)
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.j     	.L5411
	l.nop			# nop delay slot
.L5425:
	l.ori   	r2,r3,0	 # move reg to reg
	l.j     	.L5349	# delay slot filled
	l.sb    	0(r4),r6	    # movqi
.L5427:
	l.movhi  	r4,hi(.LC150)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC150)
	l.sfnei	r11,0
	l.bf	.L5396	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.movhi  	r7,hi(.LC151)
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
	l.ori   	r7,r7,lo(.LC151)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.j     	.L5413
	l.nop			# nop delay slot
.L5359:
	l.movhi  	r4,hi(.LC154)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC154)
	l.sfnei	r11,0
	l.bf	.L5361	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.movhi  	r7,hi(.LC155)
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
	l.ori   	r7,r7,lo(.LC155)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
.L5411:
	l.jal   	__muldf3
	l.nop			# nop delay slot
		l.lwz   	r3, 68(r1)
		l.lwz   	r4, 68+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.j     	.L5412
	l.nop			# nop delay slot
.L5423:
	l.addi  	r2,r0,1	 # move immediate I
	l.jal   	computeYMD	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sw    	12(r18),r2	 # SI store
	l.j     	.L5370	# delay slot filled
	l.sw    	16(r18),r2	 # SI store
.L5430:
	l.sub   	r2,r0,r2
	l.sfgtui	r2,0
	l.bnf	.L5438	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L5343:
	l.sub   	r4,r0,r4
	l.sw    	88(r1),r2	 # SI store
	l.sub   	r3,r4,r3
	l.j     	.L5342	# delay slot filled
	l.sw    	84(r1),r3	 # SI store
.L5438:
	l.j     	.L5343	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L5435:
	l.j     	.L5333	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L5437:
	l.lwz   	r2,176(r1)	 # SI load
	l.j     	.L5307	# delay slot filled
	l.sub   	r2,r0,r2
.L5416:
	l.lwz   	r2,24(r22)	 # SI load
	l.addi  	r4,r1,160
	l.lwz   	r2,0(r2)	 # SI load
	l.lwz   	r11,64(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
		l.lwz   	r3, 160(r1)
		l.lwz   	r4, 160+4(r1)
	l.j     	.L5441	# delay slot filled
	l.movhi  	r2,hi(.LC138)
.L5434:
	l.sfne 	r11,r3
	l.bf	.L5331	# delay slot filled
	l.sfgtu 	r12,r14
	l.bf	.L5392	# delay slot filled
	l.sub   	r4,r14,r4
	l.j     	.L5450	# delay slot filled
	l.sfgtu 	r4,r14
.L5429:
	l.jal   	computeYMD_HMS	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
		l.lwz   	r3, 160(r1)
		l.lwz   	r4, 160+4(r1)
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.lwz   	r2,12(r18)	 # SI load
	l.add   	r2,r11,r2
	l.sflesi	r2,0
	l.bf	.L5363
	l.nop			# nop delay slot
	l.addi  	r3,r2,-1
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r4,r0,12	 # move immediate I
	l.add   	r4,r11,r11
.L5443:
	l.lwz   	r6,8(r18)	 # SI load
	l.add   	r4,r4,r11
	l.add   	r11,r6,r11
	l.slli  	r4,r4,2
	l.ori   	r3,r18,0	 # move reg to reg
	l.sw    	8(r18),r11	 # SI store
	l.sub   	r2,r2,r4
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sw    	12(r18),r2	 # SI store
	l.jal   	computeJD	# delay slot filled
	l.sb    	42(r18),r4	    # movqi
		l.lwz   	r5, 160(r1)
		l.lwz   	r6, 160+4(r1)
		l.or    	r3, r5, r0
		l.or    	r4, r6, r0
		l.sw    	60(r1), r5
		l.sw    	60+4(r1), r6
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
		l.sw    	76(r1), r11
		l.sw    	76+4(r1), r12
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__nedf2
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L5355
	l.nop			# nop delay slot
		l.lwz   	r5, 76(r1)
		l.lwz   	r6, 76+4(r1)
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
	l.jal   	__subdf3	# delay slot filled
	l.movhi  	r2,hi(.LC138)
	l.movhi  	r7,hi(.LC156)
	l.ori   	r7,r7,lo(.LC156)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r2,r2,lo(.LC138)
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
		l.lwz   	r3, 68(r1)
		l.lwz   	r4, 68+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
	l.lwz   	r4,4(r18)	 # SI load
	l.add   	r12,r4,r12
	l.sfltu 	r12,r4
	l.bf	.L5366	# delay slot filled
	l.lwz   	r3,0(r18)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
.L5366:
	l.add   	r11,r3,r11
	l.sw    	4(r18),r12	 # SI store
	l.add   	r2,r2,r11
	l.j     	.L5355	# delay slot filled
	l.sw    	0(r18),r2	 # SI store
.L5363:
	l.addi  	r3,r2,-12
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r4,r0,12	 # move immediate I
	l.j     	.L5443	# delay slot filled
	l.add   	r4,r11,r11
.LFE21:
	.size	isDate, .-isDate
	.section	.rodata.str1.1
.LC158:
	.string	"%04d-%02d-%02d %02d:%02d:%02d"
	.section .text
	.align	4
.proc	datetimeFunc
	.type	datetimeFunc, @function
datetimeFunc:
.LFB23:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2089:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2090:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2091:
	l.addi  	r1,r1,-180
.LCFI2092:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r2,r1,124
	l.jal   	isDate	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5451	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	computeYMD_HMS	# delay slot filled
	l.addi  	r2,r1,24
	l.lwz   	r5,132(r1)	 # SI load
		l.lwz   	r3, 156(r1)
		l.lwz   	r4, 156+4(r1)
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r5,136(r1)	 # SI load
	l.sw    	4(r1),r5	 # SI store
	l.lwz   	r5,140(r1)	 # SI load
	l.sw    	8(r1),r5	 # SI store
	l.lwz   	r5,144(r1)	 # SI load
	l.sw    	12(r1),r5	 # SI store
	l.lwz   	r5,148(r1)	 # SI load
	l.jal   	__fixdfsi	# delay slot filled
	l.sw    	16(r1),r5	 # SI store
	l.movhi  	r5,hi(.LC158)
	l.addi  	r3,r0,100	 # move immediate I
	l.ori   	r5,r5,lo(.LC158)
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	20(r1),r11	 # SI store
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3_result_text	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
.L5451:
	l.addi	r1,r1,180
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE23:
	.size	datetimeFunc, .-datetimeFunc
	.align	4
.proc	ctimestampFunc
	.type	ctimestampFunc, @function
ctimestampFunc:
.LFB29:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2093:
	l.addi  	r1,r1,-4
.LCFI2094:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	datetimeFunc	# delay slot filled	# sibcall s
	l.ori   	r5,r4,0	 # move reg to reg
.LFE29:
	.size	ctimestampFunc, .-ctimestampFunc
	.section	.rodata.str1.1
.LC160:
	.string	"%02d:%02d:%02d"
	.section	.rodata
	.align	4
.LC159:
	.long	1083129856
	.long	0
	.section .text
	.align	4
.proc	timeFunc
	.type	timeFunc, @function
timeFunc:
.LFB24:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2095:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2096:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2097:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2098:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2099:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2100:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2101:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2102:
	l.addi  	r1,r1,-196
.LCFI2103:
	l.ori   	r20,r3,0	 # move reg to reg
	l.addi  	r2,r1,120
	l.jal   	isDate	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5454	# delay slot filled
	l.lbs   	r14,161(r1)	 # extendqisi2_no_sext_mem
	l.sfeqi	r14,0
	l.bf	.L5456	# delay slot filled
	l.lwz   	r16,140(r1)	 # SI load
	l.lwz   	r14,144(r1)	 # SI load
	l.lwz   	r11,152(r1)	 # SI load
	l.lwz   	r12,156(r1)	 # SI load
	l.ori   	r3,r12,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
.L5459:
	l.sw    	0(r1),r16	 # SI store
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__fixdfsi	# delay slot filled
	l.sw    	4(r1),r14	 # SI store
	l.addi  	r18,r1,20
	l.movhi  	r5,hi(.LC160)
	l.addi  	r3,r0,100	 # move immediate I
	l.ori   	r5,r5,lo(.LC160)
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3_result_text	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
.L5454:
	l.addi	r1,r1,196
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L5456:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	computeJD	# delay slot filled
	l.movhi 	r2,hi(43188224)	 # move immediate M
	l.lwz   	r5,124(r1)	 # SI load
	l.ori   	r2,r2,11776
	l.lwz   	r3,120(r1)	 # SI load
	l.add   	r4,r5,r2
	l.sfltu 	r4,r5
	l.bf	.L5458	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.ori   	r2,r14,0	 # move reg to reg
.L5458:
	l.movhi  	r6,hi(86400000)
	l.add   	r3,r2,r3
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r6,lo(86400000)
	l.jal   	__moddi3	# delay slot filled
	l.movhi  	r2,hi(.LC159)
	l.ori   	r3,r12,0	 # move reg to reg
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r2,r2,lo(.LC159)
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__divdf3	# delay slot filled
	l.addi  	r18,r0,-3600	 # move immediate I
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r12,0	 # move reg to reg
	l.ori   	r2,r24,0	 # move reg to reg
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__fixdfsi	# delay slot filled
	l.ori   	r22,r12,0	 # move reg to reg
	l.addi  	r4,r0,3600	 # move immediate I
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.mul   	r18,r11,r18
	l.add   	r18,r18,r2
	l.addi  	r4,r0,60	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.sw    	140(r1),r11	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
	l.jal   	__floatsidf	# delay slot filled
	l.sw    	144(r1),r11	 # SI store
	l.ori   	r2,r24,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__subdf3	# delay slot filled
	l.slli  	r2,r14,6
	l.slli  	r3,r14,2
		l.sw    	12(r1), r11
		l.sw    	12+4(r1), r12
	l.sub   	r3,r3,r2
	l.jal   	__floatsidf	# delay slot filled
	l.add   	r3,r3,r18
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
		l.lwz   	r3, 12(r1)
		l.lwz   	r4, 12+4(r1)
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r3,r12,0	 # move reg to reg
	l.ori   	r2,r5,0	 # move reg to reg
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sb    	161(r1),r5	    # movqi
		l.or    	r4, r2, r0
		l.or    	r5, r3, r0
		l.sw    	152(r1), r4
		l.sw    	152+4(r1), r5
	l.j     	.L5459	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.LFE24:
	.size	timeFunc, .-timeFunc
	.align	4
.proc	ctimeFunc
	.type	ctimeFunc, @function
ctimeFunc:
.LFB27:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2104:
	l.addi  	r1,r1,-4
.LCFI2105:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	timeFunc	# delay slot filled	# sibcall s
	l.ori   	r5,r4,0	 # move reg to reg
.LFE27:
	.size	ctimeFunc, .-ctimeFunc
	.section	.rodata.str1.1
.LC161:
	.string	"%04d-%02d-%02d"
	.section .text
	.align	4
.proc	dateFunc
	.type	dateFunc, @function
dateFunc:
.LFB25:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2106:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2107:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2108:
	l.addi  	r1,r1,-168
.LCFI2109:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r2,r1,112
	l.jal   	isDate	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5461	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	computeYMD	# delay slot filled
	l.addi  	r2,r1,12
	l.lwz   	r6,120(r1)	 # SI load
	l.movhi  	r5,hi(.LC161)
	l.sw    	0(r1),r6	 # SI store
	l.lwz   	r6,124(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC161)
	l.addi  	r3,r0,100	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.sw    	4(r1),r6	 # SI store
	l.lwz   	r6,128(r1)	 # SI load
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	8(r1),r6	 # SI store
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3_result_text	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
.L5461:
	l.addi	r1,r1,168
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE25:
	.size	dateFunc, .-dateFunc
	.align	4
.proc	cdateFunc
	.type	cdateFunc, @function
cdateFunc:
.LFB28:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2110:
	l.addi  	r1,r1,-4
.LCFI2111:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	dateFunc	# delay slot filled	# sibcall s
	l.ori   	r5,r4,0	 # move reg to reg
.LFE28:
	.size	cdateFunc, .-cdateFunc
	.section	.rodata
	.align	4
.LC162:
	.long	1100257648
	.long	0
	.section .text
	.align	4
.proc	juliandayFunc
	.type	juliandayFunc, @function
juliandayFunc:
.LFB22:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2112:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2113:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2114:
	l.addi  	r1,r1,-56
.LCFI2115:
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	isDate	# delay slot filled
	l.ori   	r6,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5464
	l.nop			# nop delay slot
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	computeJD	# delay slot filled
	l.movhi  	r2,hi(.LC162)
	l.ori   	r2,r2,lo(.LC162)
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
	l.jal   	__floatdidf	# delay slot filled
	l.addi  	r14,r14,8
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__divdf3
	l.nop			# nop delay slot
		l.or    	r4, r11, r0
		l.or    	r5, r12, r0
	l.jal   	sqlite3VdbeMemSetDouble	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L5464:
	l.addi	r1,r1,56
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE22:
	.size	juliandayFunc, .-juliandayFunc
	.section	.rodata.str1.1
.LC164:
	.string	"%02d"
.LC165:
	.string	"%06.3f"
.LC166:
	.string	"%03d"
.LC167:
	.string	"%.16g"
.LC169:
	.string	"%04d"
	.section	.rodata
	.align	4
.LC163:
	.long	1078853599
	.long	996432413
	.align	4
.LC168:
	.long	1100257648
	.long	0
	.section .text
	.align	4
.proc	strftimeFunc
	.type	strftimeFunc, @function
strftimeFunc:
.LFB26:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2116:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2117:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2118:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2119:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2120:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2121:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2122:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2123:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2124:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2125:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2126:
	l.ori   	r20,r3,0	 # move reg to reg
	l.addi  	r1,r1,-248
.LCFI2127:
	l.lwz   	r3,0(r5)	 # SI load
	l.ori   	r2,r5,0	 # move reg to reg
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5466	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r16,r1,160
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r18,-1
	l.addi  	r5,r2,4
	l.jal   	isDate	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5466
	l.nop			# nop delay slot
	l.lbs   	r7,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeqi	r7,0
	l.bf	.L5519	# delay slot filled
	l.lwz   	r6,24(r20)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L5483	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L5469:
	l.addi  	r4,r3,1
.L5552:
	l.addi  	r5,r5,1
	l.sfltu 	r4,r3
	l.bf	.L5482	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
.L5482:
	l.add   	r7,r14,r5
	l.add   	r8,r8,r2
	l.lbs   	r7,0(r7)	 # extendqisi2_no_sext_mem
	l.ori   	r2,r8,0	 # move reg to reg
	l.sfnei	r7,0
	l.bnf	.L5540	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
.L5483:
	l.sfnei	r7,37
	l.bf	.L5552	# delay slot filled
	l.addi  	r4,r3,1
	l.addi  	r5,r5,1
	l.add   	r4,r14,r5
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.addi  	r4,r4,-37
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.sfgtui	r4,82
	l.bf	.L5466	# delay slot filled
	l.movhi  	r7,hi(.L5476)
	l.slli  	r4,r4,2
	l.ori   	r7,r7,lo(.L5476)
	l.add   	r4,r4,r7
	l.lwz   	r4,0(r4)	 # SI load
	l.jr    	r4
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L5476:
	.word	.L5469
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5471
	.word	.L5466
	.word	.L5472
	.word	.L5466
	.word	.L5466
	.word	.L5471
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5471
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5471
	.word	.L5466
	.word	.L5473
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5471
	.word	.L5466
	.word	.L5473
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5475
	.word	.L5466
	.word	.L5466
	.word	.L5471
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5472
	.word	.L5466
	.word	.L5466
	.word	.L5466
	.word	.L5469
	.section .text
.L5544:
	l.add   	r2,r18,r2
.L5487:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.addi  	r6,r0,-1	 # move immediate I
	l.sfeq 	r18,r24
	l.bf	.L5518	# delay slot filled
	l.sb    	0(r2),r3	    # movqi
	l.movhi  	r6,hi(sqlite3DbFree)
	l.ori   	r6,r6,lo(sqlite3DbFree)
.L5518:
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3_result_text	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
.L5466:
	l.addi	r1,r1,248
.L5548:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L5473:
	l.addi  	r4,r3,8
	l.sfltu 	r4,r3
	l.bnf	.L5537	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
.L5481:
	l.add   	r7,r7,r2
	l.ori   	r3,r4,0	 # move reg to reg
	l.j     	.L5469	# delay slot filled
	l.ori   	r2,r7,0	 # move reg to reg
.L5472:
	l.addi  	r4,r3,50
	l.sfltu 	r4,r3
	l.bf	.L5481	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
.L5537:
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r3,r4,0	 # move reg to reg
	l.add   	r7,r7,r2
	l.j     	.L5469	# delay slot filled
	l.ori   	r2,r7,0	 # move reg to reg
.L5471:
	l.addi  	r4,r3,1
	l.sfltu 	r4,r3
	l.bnf	.L5537	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.add   	r7,r7,r2
	l.ori   	r3,r4,0	 # move reg to reg
	l.j     	.L5469	# delay slot filled
	l.ori   	r2,r7,0	 # move reg to reg
.L5475:
	l.addi  	r4,r3,3
	l.sfltu 	r4,r3
	l.bnf	.L5537	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.add   	r7,r7,r2
	l.ori   	r3,r4,0	 # move reg to reg
	l.j     	.L5469	# delay slot filled
	l.ori   	r2,r7,0	 # move reg to reg
.L5540:
	l.sfnei	r8,0
	l.bnf	.L5541	# delay slot filled
	l.sfgtui	r4,99
.L5528:
	l.lwz   	r3,80(r6)	 # SI load
	l.srai  	r2,r3,31
	l.sfgtu 	r8,r2
	l.bf	.L5529	# delay slot filled
	l.sfne 	r8,r2
	l.bnf	.L5542	# delay slot filled
	l.sfgtu 	r4,r3
.L5485:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r3,r6,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L5543	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r24,r1,16
.L5468:
	l.jal   	computeJD	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	computeYMD_HMS	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lbs   	r5,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L5487	# delay slot filled
	l.movhi  	r30,hi(.LC163)
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r26,r0,1	 # move immediate I
	l.ori   	r16,r2,0	 # move reg to reg
	l.j     	.L5517	# delay slot filled
	l.ori   	r30,r30,lo(.LC163)
.L5545:
	l.addi  	r2,r2,1
	l.sb    	0(r4),r5	    # movqi
.L5489:
	l.addi  	r16,r16,1
.L5549:
	l.add   	r4,r14,r16
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bnf	.L5544
	l.nop			# nop delay slot
.L5517:
	l.sfeqi	r5,37
	l.bnf	.L5545	# delay slot filled
	l.add   	r4,r18,r2
	l.addi  	r16,r16,1
	l.add   	r22,r14,r16
	l.lbz   	r4,0(r22)	 # zero_extendqisi2
	l.addi  	r4,r4,-72
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.sfgtui	r4,47
	l.bnf	.L5546	# delay slot filled
	l.movhi  	r8,hi(.L5502)
.L5490:
	l.add   	r3,r18,r2
	l.addi  	r11,r0,37	 # movqi: move immediate
	l.addi  	r2,r2,1
	l.j     	.L5489	# delay slot filled
	l.sb    	0(r3),r11	    # movqi
.L5546:
	l.slli  	r4,r4,2
	l.ori   	r8,r8,lo(.L5502)
	l.add   	r4,r4,r8
	l.lwz   	r4,0(r4)	 # SI load
	l.jr    	r4
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L5502:
	.word	.L5491
	.word	.L5490
	.word	.L5492
	.word	.L5490
	.word	.L5490
	.word	.L5493
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5494
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5495
	.word	.L5490
	.word	.L5496
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5497
	.word	.L5490
	.word	.L5498
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5495
	.word	.L5490
	.word	.L5490
	.word	.L5499
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5500
	.word	.L5490
	.word	.L5490
	.word	.L5490
	.word	.L5501
	.section .text
.L5542:
	l.bnf	.L5485
	l.nop			# nop delay slot
.L5529:
	l.jal   	sqlite3_result_error_toobig	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.j     	.L5548	# delay slot filled
	l.addi	r1,r1,248
.L5541:
	l.bf	.L5528
	l.nop			# nop delay slot
.L5519:
	l.addi  	r24,r1,16
	l.ori   	r2,r24,0	 # move reg to reg
	l.j     	.L5468	# delay slot filled
	l.ori   	r18,r24,0	 # move reg to reg
.L5501:
	l.movhi 	r7,hi(129564672)	 # move immediate M
	l.lwz   	r6,164(r1)	 # SI load
	l.ori   	r7,r7,35328
	l.add   	r22,r18,r2
	l.add   	r4,r6,r7
	l.lwz   	r5,160(r1)	 # SI load
	l.sfltu 	r4,r6
	l.bf	.L5514	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
.L5514:
	l.movhi  	r6,hi(86400000)
	l.add   	r3,r3,r5
	l.ori   	r6,r6,lo(86400000)
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	__divdi3	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r5,r0,0	 # move immediate I
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__moddi3	# delay slot filled
	l.addi  	r6,r0,7	 # move immediate I
	l.addi  	r12,r12,48
	l.j     	.L5489	# delay slot filled
	l.sb    	0(r22),r12	    # movqi
.L5500:
	l.addi  	r5,r0,0	 # move immediate I
		l.lwz   	r3, 160(r1)
		l.lwz   	r4, 160+4(r1)
	l.jal   	__divdi3	# delay slot filled
	l.addi  	r6,r0,1000	 # move immediate I
	l.movhi 	r3,hi(-413401088)	 # move immediate M
	l.movhi 	r5,hi(413335552)	 # move immediate M
	l.ori   	r3,r3,38592
	l.ori   	r5,r5,26943
	l.add   	r22,r18,r2
	l.add   	r6,r12,r3
	l.sfgtu 	r12,r5
	l.bf	.L5511	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
.L5511:
	l.addi  	r7,r11,-50
	l.movhi  	r5,hi(.LC133)
	l.add   	r7,r4,r7
	l.addi  	r3,r0,30	 # move immediate I
	l.ori   	r5,r5,lo(.LC133)
	l.ori   	r4,r22,0	 # move reg to reg
	l.sw    	0(r1),r7	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	4(r1),r6	 # SI store
	l.lbs   	r3,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L5512	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r5,r5,1
.L5553:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L5553	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
.L5512:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.sub   	r3,r5,r22
	l.ori   	r6,r6,65535
	l.and   	r3,r3,r6
	l.j     	.L5489	# delay slot filled
	l.add   	r2,r2,r3
.L5499:
	l.movhi  	r5,hi(.LC164)
	l.add   	r4,r18,r2
	l.lwz   	r6,172(r1)	 # SI load
	l.addi  	r3,r0,3	 # move immediate I
	l.ori   	r5,r5,lo(.LC164)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.addi  	r2,r2,2
	l.j     	.L5549	# delay slot filled
	l.addi  	r16,r16,1
.L5498:
		l.lwz   	r3, 192(r1)
		l.lwz   	r4, 192+4(r1)
		l.lwz   	r5, 0(r30)
		l.lwz   	r6, 4(r30)
		l.sw    	8(r1), r3
		l.sw    	8+4(r1), r4
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L5554	# delay slot filled
	l.add   	r22,r18,r2
		l.lwz   	r4, 0(r30)
		l.lwz   	r5, 4(r30)
		l.sw    	8(r1), r4
		l.sw    	8+4(r1), r5
.L5554:
	l.movhi  	r5,hi(.LC165)
	l.addi  	r3,r0,7	 # move immediate I
	l.ori   	r5,r5,lo(.LC165)
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
		l.sw    	0(r1), r6
		l.sw    	4(r1), r7
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.lbs   	r3,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L5504	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r5,r5,1
.L5555:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L5555	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
.L5504:
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.sub   	r3,r5,r22
	l.ori   	r7,r7,65535
	l.and   	r3,r3,r7
	l.j     	.L5489	# delay slot filled
	l.add   	r2,r2,r3
.L5497:
	l.movhi  	r5,hi(.LC164)
	l.add   	r4,r18,r2
	l.lwz   	r6,176(r1)	 # SI load
	l.addi  	r3,r0,3	 # move immediate I
	l.ori   	r5,r5,lo(.LC164)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.addi  	r2,r2,2
	l.j     	.L5549	# delay slot filled
	l.addi  	r16,r16,1
.L5496:
	l.add   	r22,r18,r2
	l.movhi  	r5,hi(.LC169)
	l.addi  	r3,r0,5	 # move immediate I
	l.ori   	r5,r5,lo(.LC169)
	l.lwz   	r6,168(r1)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.lbs   	r3,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L5515	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r5,r5,1
.L5556:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L5556	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
.L5515:
	l.movhi 	r8,hi(1073676288)	 # move immediate M
.L5550:
	l.sub   	r3,r5,r22
	l.ori   	r8,r8,65535
	l.and   	r3,r3,r8
	l.j     	.L5489	# delay slot filled
	l.add   	r2,r2,r3
.L5495:
	l.lwz   	r4,200(r1)	 # SI load
	l.addi  	r3,r1,116
	l.sw    	156(r1),r4	 # SI store
	l.lwz   	r4,160(r1)	 # SI load
	l.addi  	r8,r0,0	 # movqi: move immediate
	l.sw    	116(r1),r4	 # SI store
	l.lwz   	r4,164(r1)	 # SI load
	l.sb    	158(r1),r8	    # movqi
	l.sw    	120(r1),r4	 # SI store
	l.lwz   	r4,168(r1)	 # SI load
	l.sw    	128(r1),r26	 # SI store
	l.sw    	124(r1),r4	 # SI store
	l.lwz   	r4,180(r1)	 # SI load
	l.sw    	132(r1),r26	 # SI store
	l.sw    	136(r1),r4	 # SI store
	l.lwz   	r4,184(r1)	 # SI load
	l.sw    	140(r1),r4	 # SI store
	l.lwz   	r4,188(r1)	 # SI load
	l.sw    	144(r1),r4	 # SI store
	l.lwz   	r4,192(r1)	 # SI load
	l.sw    	148(r1),r4	 # SI store
	l.lwz   	r4,196(r1)	 # SI load
	l.jal   	computeJD	# delay slot filled
	l.sw    	152(r1),r4	 # SI store
	l.movhi 	r11,hi(43188224)	 # move immediate M
	l.lwz   	r5,164(r1)	 # SI load
	l.ori   	r11,r11,11776
	l.lwz   	r4,160(r1)	 # SI load
	l.add   	r28,r5,r11
	l.sfltu 	r28,r5
	l.bf	.L5506	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
.L5506:
	l.add   	r4,r3,r4
	l.addi  	r5,r0,1	 # move immediate I
	l.sw    	8(r1),r4	 # SI store
	l.lwz   	r4,120(r1)	 # SI load
	l.sub   	r4,r28,r4
	l.sfgtu 	r4,r28
	l.bf	.L5507	# delay slot filled
	l.lwz   	r3,116(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
.L5507:
	l.lwz   	r6,8(r1)	 # SI load
	l.sub   	r3,r6,r3
	l.movhi  	r6,hi(86400000)
	l.sub   	r3,r3,r5
	l.ori   	r6,r6,lo(86400000)
	l.jal   	__divdi3	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lbs   	r3,0(r22)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,87
	l.bnf	.L5547	# delay slot filled
	l.add   	r4,r18,r2
	l.movhi  	r5,hi(.LC166)
	l.addi  	r12,r12,1
	l.addi  	r3,r0,4	 # move immediate I
	l.ori   	r5,r5,lo(.LC166)
	l.sw    	0(r1),r12	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.addi  	r2,r2,3
	l.j     	.L5549	# delay slot filled
	l.addi  	r16,r16,1
.L5494:
		l.lwz   	r3, 192(r1)
		l.lwz   	r4, 192+4(r1)
	l.jal   	__fixdfsi	# delay slot filled
	l.add   	r22,r18,r2
	l.movhi  	r5,hi(.LC164)
.L5551:
	l.addi  	r3,r0,3	 # move immediate I
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC164)
	l.sw    	0(r1),r11	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.addi  	r2,r2,2
	l.j     	.L5549	# delay slot filled
	l.addi  	r16,r16,1
.L5492:
		l.lwz   	r3, 160(r1)
		l.lwz   	r4, 160+4(r1)
	l.jal   	__floatdidf	# delay slot filled
	l.add   	r22,r18,r2
	l.movhi  	r7,hi(.LC168)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r7,r7,lo(.LC168)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__divdf3
	l.nop			# nop delay slot
	l.movhi  	r5,hi(.LC167)
	l.addi  	r3,r0,20	 # move immediate I
	l.ori   	r5,r5,lo(.LC167)
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.lbs   	r3,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L5515	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r5,r5,1
.L5557:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L5557	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.j     	.L5550	# delay slot filled
	l.movhi 	r8,hi(1073676288)	 # move immediate M
.L5491:
	l.movhi  	r5,hi(.LC164)
	l.add   	r4,r18,r2
	l.lwz   	r6,180(r1)	 # SI load
	l.addi  	r3,r0,3	 # move immediate I
	l.ori   	r5,r5,lo(.LC164)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.addi  	r2,r2,2
	l.j     	.L5549	# delay slot filled
	l.addi  	r16,r16,1
.L5493:
	l.movhi  	r5,hi(.LC164)
	l.add   	r4,r18,r2
	l.lwz   	r6,184(r1)	 # SI load
	l.addi  	r3,r0,3	 # move immediate I
	l.ori   	r5,r5,lo(.LC164)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.addi  	r2,r2,2
	l.j     	.L5549	# delay slot filled
	l.addi  	r16,r16,1
.L5547:
	l.movhi  	r6,hi(86400000)
	l.lwz   	r3,8(r1)	 # SI load
	l.ori   	r4,r28,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r6,lo(86400000)
	l.jal   	__divdi3	# delay slot filled
	l.addi  	r22,r12,7
	l.addi  	r5,r0,0	 # move immediate I
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__moddi3	# delay slot filled
	l.addi  	r6,r0,7	 # move immediate I
	l.addi  	r4,r0,7	 # move immediate I
	l.sub   	r3,r22,r12
	l.jal   	__divsi3	# delay slot filled
	l.add   	r22,r18,r2
	l.j     	.L5551	# delay slot filled
	l.movhi  	r5,hi(.LC164)
.L5543:
	l.jal   	sqlite3_result_error_nomem	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.j     	.L5548	# delay slot filled
	l.addi	r1,r1,248
.LFE26:
	.size	strftimeFunc, .-strftimeFunc
	.align	4
.proc	sqlite3_column_text
	.global sqlite3_column_text
	.type	sqlite3_column_text, @function
sqlite3_column_text:
.LFB655:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2128:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2129:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2130:
	l.addi  	r1,r1,-12
.LCFI2131:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	columnMallocFailure	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE655:
	.size	sqlite3_column_text, .-sqlite3_column_text
	.align	4
.proc	sqlite3_value_blob
	.global sqlite3_value_blob
	.type	sqlite3_value_blob, @function
sqlite3_value_blob:
.LFB609:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.sw    	-8(r1),r2	 # SI store
.LCFI2132:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2133:
	l.andi  	r4,r4,18
	l.addi  	r1,r1,-8
.LCFI2134:
	l.sfeqi	r4,0
	l.bnf	.L5562	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_value_text	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L5562:
	l.jal   	sqlite3VdbeMemExpandBlob
	l.nop			# nop delay slot
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.addi  	r4,r0,-3	 # move immediate I
	l.lwz   	r11,20(r2)	 # SI load
	l.and   	r3,r3,r4
	l.ori   	r3,r3,16
	l.sh    	28(r2),r3	 # movhi
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE609:
	.size	sqlite3_value_blob, .-sqlite3_value_blob
	.align	4
.proc	sqlite3_column_blob
	.global sqlite3_column_blob
	.type	sqlite3_column_blob, @function
sqlite3_column_blob:
.LFB649:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2135:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2136:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2137:
	l.addi  	r1,r1,-12
.LCFI2138:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3_value_blob	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	columnMallocFailure	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE649:
	.size	sqlite3_column_blob, .-sqlite3_column_blob
	.align	4
.proc	sqlite3_value_bytes16
	.global sqlite3_value_bytes16
	.type	sqlite3_value_bytes16, @function
sqlite3_value_bytes16:
.LFB611:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2139:
	l.ori   	r2,r3,0	 # move reg to reg
	l.movhi  	r3,hi(sqlite3one)
	l.sw    	-4(r1),r9	 # SI store
.LCFI2140:
	l.ori   	r3,r3,lo(sqlite3one)
	l.addi  	r1,r1,-8
.LCFI2141:
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L5565	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.addi  	r4,r0,3	 # move immediate I
.L5565:
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.andi  	r5,r3,16
	l.sfnei	r5,0
	l.bnf	.L5571
	l.nop			# nop delay slot
.L5566:
	l.andi  	r3,r3,16384
	l.sfeqi	r3,0
	l.bnf	.L5572
	l.nop			# nop delay slot
	l.lwz   	r11,24(r2)	 # SI load
.L5567:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L5572:
	l.lwz   	r11,0(r2)	 # SI load
	l.lwz   	r2,24(r2)	 # SI load
	l.addi	r1,r1,8
	l.add   	r11,r11,r2
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L5571:
	l.jal   	sqlite3ValueText	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5567
	l.nop			# nop delay slot
	l.j     	.L5566	# delay slot filled
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
.LFE611:
	.size	sqlite3_value_bytes16, .-sqlite3_value_bytes16
	.align	4
.proc	sqlite3_column_bytes16
	.global sqlite3_column_bytes16
	.type	sqlite3_column_bytes16, @function
sqlite3_column_bytes16:
.LFB651:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2142:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2143:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2144:
	l.addi  	r1,r1,-12
.LCFI2145:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3_value_bytes16	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	columnMallocFailure	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE651:
	.size	sqlite3_column_bytes16, .-sqlite3_column_bytes16
	.align	4
.proc	sqlite3_value_bytes
	.global sqlite3_value_bytes
	.type	sqlite3_value_bytes, @function
sqlite3_value_bytes:
.LFB610:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.sw    	-8(r1),r2	 # SI store
.LCFI2146:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2147:
	l.andi  	r5,r4,16
	l.addi  	r1,r1,-8
.LCFI2148:
	l.sfnei	r5,0
	l.bnf	.L5579	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L5575:
	l.andi  	r4,r4,16384
	l.sfeqi	r4,0
	l.bnf	.L5580
	l.nop			# nop delay slot
	l.lwz   	r11,24(r2)	 # SI load
.L5576:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L5580:
	l.lwz   	r11,0(r2)	 # SI load
	l.lwz   	r2,24(r2)	 # SI load
	l.addi	r1,r1,8
	l.add   	r11,r11,r2
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L5579:
	l.jal   	sqlite3ValueText	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L5576
	l.nop			# nop delay slot
	l.j     	.L5575	# delay slot filled
	l.lhz   	r4,28(r2)	 # zero_extendqisi2
.LFE610:
	.size	sqlite3_value_bytes, .-sqlite3_value_bytes
	.section	.rodata.str1.1
.LC170:
	.string	"LIKE or GLOB pattern too complex"
.LC171:
	.string	"ESCAPE expression must be a single character"
	.section .text
	.align	4
.proc	likeFunc
	.type	likeFunc, @function
likeFunc:
.LFB958:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2149:
	l.sw    	-28(r1),r2	 # SI store
.LCFI2150:
	l.sw    	-24(r1),r14	 # SI store
.LCFI2151:
	l.sw    	-20(r1),r16	 # SI store
.LCFI2152:
	l.sw    	-16(r1),r18	 # SI store
.LCFI2153:
	l.sw    	-12(r1),r20	 # SI store
.LCFI2154:
	l.sw    	-8(r1),r22	 # SI store
.LCFI2155:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI2156:
	l.lwz   	r3,0(r5)	 # SI load
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r22,r4,0	 # move reg to reg
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r20,24(r2)	 # SI load
	l.lwz   	r3,4(r14)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r3,112(r20)	 # SI load
	l.sfles 	r11,r3
	l.bnf	.L5587	# delay slot filled
	l.sfnei	r22,3
	l.bnf	.L5588	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L5584:
	l.sub   	r3,r0,r16
	l.or    	r3,r16,r3
	l.sfgesi	r3,0
	l.bnf	.L5589	# delay slot filled
	l.sub   	r3,r0,r18
.L5581:
	l.addi	r1,r1,32
.L5590:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L5589:
	l.or    	r3,r18,r3
	l.sfgesi	r3,0
	l.bf	.L5581	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r5,0(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	patternCompare	# delay slot filled
	l.lwz   	r5,4(r5)	 # SI load
	l.addi  	r3,r2,8
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.srai  	r3,r14,31
	l.addi  	r4,r0,4	 # movhi: move immediate
	l.sw    	12(r2),r14	 # SI store
	l.sw    	8(r2),r3	 # SI store
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sh    	36(r2),r4	 # movhi
	l.j     	.L5581	# delay slot filled
	l.sb    	38(r2),r3	    # movqi
.L5587:
	l.movhi  	r4,hi(.LC170)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC170)
	l.jal   	sqlite3_result_error	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
	l.j     	.L5590	# delay slot filled
	l.addi	r1,r1,32
.L5588:
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r3,8(r14)	 # SI load
	l.sw    	0(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L5581	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	sqlite3Utf8CharLen	# delay slot filled
	l.addi  	r4,r0,-1	 # move immediate I
	l.sfeqi	r11,1
	l.bf	.L5585	# delay slot filled
	l.movhi  	r4,hi(.LC171)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC171)
	l.jal   	sqlite3_result_error	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
	l.j     	.L5590	# delay slot filled
	l.addi	r1,r1,32
.L5585:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3Utf8Read	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.j     	.L5584	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.LFE958:
	.size	likeFunc, .-likeFunc
	.align	4
.proc	quoteFunc
	.type	quoteFunc, @function
quoteFunc:
.LFB961:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2157:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2158:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2159:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2160:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2161:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2162:
	l.lwz   	r4,0(r5)	 # SI load
	l.addi  	r1,r1,-24
.LCFI2163:
	l.lbz   	r2,30(r4)	 # zero_extendqisi2
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfeqi	r2,3
	l.bf	.L5594	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfgtui	r2,3
	l.bnf	.L5617	# delay slot filled
	l.sfltui	r2,1
	l.sfeqi	r2,4
	l.bf	.L5618
	l.nop			# nop delay slot
.L5592:
	l.addi	r1,r1,24
	l.movhi  	r4,hi(.LC27)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC27)
	l.addi  	r5,r0,4	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L5617:
	l.bf	.L5592
	l.nop			# nop delay slot
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3_result_value	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L5618:
	l.jal   	sqlite3_value_blob	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r3,0(r16)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.addi  	r2,r11,2
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r3,r0,1	 # move immediate I
	l.sfltu 	r2,r11
	l.bnf	.L5619	# delay slot filled
	l.srai  	r4,r11,31
	l.add   	r5,r2,r2
	l.add   	r3,r3,r4
	l.sfltu 	r5,r2
	l.bnf	.L5620	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L5598:
	l.add   	r2,r3,r3
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	contextMalloc	# delay slot filled
	l.add   	r4,r4,r2
	l.sfeqi	r11,0
	l.bf	.L5591	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sflesi	r18,0
	l.bf	.L5600	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r2,r11,2
	l.add   	r3,r20,r18
.L5601:
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.movhi  	r4,hi(hexdigits)
	l.srli  	r6,r6,4
	l.ori   	r4,r4,lo(hexdigits)
	l.add   	r6,r6,r4
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.sb    	0(r2),r6	    # movqi
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.andi  	r6,r6,15
	l.addi  	r5,r5,1
	l.add   	r6,r6,r4
	l.sfne 	r5,r3
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.sb    	1(r2),r6	    # movqi
	l.bf	.L5601	# delay slot filled
	l.addi  	r2,r2,2
.L5600:
	l.addi  	r2,r18,1
	l.add   	r18,r18,r18
	l.add   	r2,r2,r2
	l.addi  	r3,r0,39	 # movqi: move immediate
	l.add   	r2,r16,r2
	l.add   	r18,r16,r18
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sb    	0(r2),r3	    # movqi
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r2,r0,88	 # movqi: move immediate
	l.sb    	3(r18),r4	    # movqi
	l.sb    	0(r16),r2	    # movqi
	l.sb    	1(r16),r3	    # movqi
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3_result_text	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi	r1,r1,24
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3_free	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L5594:
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5591	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbz   	r5,0(r11)	 # zero_extendqisi2
	l.addi  	r6,r0,0	 # move immediate I
	l.sfeqi	r5,0
	l.bf	.L5602	# delay slot filled
	l.addi  	r7,r0,3	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L5605	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L5603:
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bnf	.L5626	# delay slot filled
	l.add   	r3,r4,r7
.L5605:
	l.addi  	r4,r4,1
.L5627:
	l.sfnei	r5,39
	l.bf	.L5603	# delay slot filled
	l.add   	r5,r2,r4
	l.addi  	r3,r7,1
	l.addi  	r8,r0,1	 # move immediate I
	l.sfltu 	r3,r7
	l.bf	.L5604	# delay slot filled
	l.ori   	r13,r3,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
.L5604:
	l.add   	r6,r8,r6
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.ori   	r11,r6,0	 # move reg to reg
	l.ori   	r12,r13,0	 # move reg to reg
	l.sfnei	r5,0
		l.or    	r6, r11, r0
		l.or    	r7, r12, r0
	l.bf	.L5627	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
	l.add   	r3,r4,r7
.L5626:
	l.srai  	r8,r4,31
	l.sfltu 	r3,r4
	l.bnf	.L5622	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.add   	r6,r8,r6
	l.addi  	r4,r3,3
	l.add   	r6,r7,r6
	l.sfltu 	r4,r3
	l.bnf	.L5623	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L5607:
	l.add   	r5,r5,r6
	l.ori   	r7,r4,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
.L5602:
		l.or    	r4, r6, r0
		l.or    	r5, r7, r0
	l.jal   	contextMalloc	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5591	# delay slot filled
	l.addi  	r3,r0,39	 # movqi: move immediate
	l.sb    	0(r11),r3	    # movqi
	l.lbz   	r7,0(r2)	 # zero_extendqisi2
	l.sfeqi	r7,0
	l.bf	.L5612	# delay slot filled
	l.addi  	r6,r2,1
	l.j     	.L5610	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L5609:
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.ori   	r2,r6,0	 # move reg to reg
	l.sfnei	r7,0
	l.bnf	.L5624	# delay slot filled
	l.addi  	r6,r6,1
.L5610:
	l.add   	r3,r11,r5
	l.sb    	0(r3),r7	    # movqi
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.sfnei	r2,39
	l.bf	.L5609	# delay slot filled
	l.addi  	r5,r5,1
	l.add   	r3,r11,r5
	l.addi  	r5,r5,1
	l.sb    	0(r3),r2	    # movqi
	l.ori   	r2,r6,0	 # move reg to reg
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L5610	# delay slot filled
	l.addi  	r6,r6,1
.L5624:
	l.ori   	r2,r5,0	 # move reg to reg
	l.addi  	r5,r5,1
	l.ori   	r3,r5,0	 # move reg to reg
.L5608:
	l.add   	r2,r11,r2
	l.addi  	r4,r0,39	 # movqi: move immediate
	l.add   	r3,r11,r3
	l.sb    	0(r2),r4	    # movqi
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.movhi  	r6,hi(sqlite3_free)
	l.sb    	0(r3),r2	    # movqi
	l.addi	r1,r1,24
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r6,r6,lo(sqlite3_free)
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L5620:
	l.j     	.L5598	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L5619:
	l.addi  	r3,r0,0	 # move immediate I
	l.add   	r5,r2,r2
	l.add   	r3,r3,r4
	l.sfltu 	r5,r2
	l.bf	.L5598	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L5598	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L5623:
	l.addi  	r5,r0,0	 # move immediate I
.L5625:
	l.ori   	r7,r4,0	 # move reg to reg
	l.add   	r5,r5,r6
	l.j     	.L5602	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
.L5622:
	l.ori   	r7,r5,0	 # move reg to reg
	l.add   	r6,r8,r6
	l.addi  	r4,r3,3
	l.add   	r6,r7,r6
	l.sfltu 	r4,r3
	l.bf	.L5607	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L5625	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L5591:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L5612:
	l.addi  	r3,r0,2	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L5608	# delay slot filled
	l.ori   	r5,r3,0	 # move reg to reg
.LFE961:
	.size	quoteFunc, .-quoteFunc
	.align	4
.proc	hexFunc
	.type	hexFunc, @function
hexFunc:
.LFB962:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2164:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2165:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2166:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2167:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2168:
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI2169:
	l.lwz   	r3,0(r5)	 # SI load
	l.jal   	sqlite3_value_blob	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.add   	r14,r11,r11
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r0,1	 # move immediate I
	l.sfltu 	r14,r11
	l.bf	.L5629	# delay slot filled
	l.srai  	r4,r11,31
	l.addi  	r3,r0,0	 # move immediate I
.L5629:
	l.add   	r4,r4,r4
	l.addi  	r5,r14,1
	l.add   	r4,r3,r4
	l.sfltu 	r5,r14
	l.bf	.L5630	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
.L5630:
	l.add   	r4,r7,r4
	l.jal   	contextMalloc	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5628	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sflesi	r2,0
	l.bf	.L5632	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r11,0	 # move reg to reg
	l.add   	r2,r18,r2
.L5633:
	l.lbz   	r8,0(r6)	 # zero_extendqisi2
	l.movhi  	r3,hi(hexdigits)
	l.srli  	r12,r8,4
	l.ori   	r3,r3,lo(hexdigits)
	l.andi  	r8,r8,15
	l.add   	r12,r12,r3
	l.add   	r8,r8,r3
	l.lbz   	r12,0(r12)	 # zero_extendqisi2
	l.lbz   	r8,0(r8)	 # zero_extendqisi2
	l.addi  	r6,r6,1
	l.sb    	0(r7),r12	    # movqi
	l.sb    	1(r7),r8	    # movqi
	l.sfne 	r6,r2
	l.bf	.L5633	# delay slot filled
	l.addi  	r7,r7,2
	l.add   	r3,r4,r14
.L5632:
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.movhi  	r6,hi(sqlite3_free)
	l.sb    	0(r3),r2	    # movqi
	l.addi	r1,r1,20
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(sqlite3_free)
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L5628:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE962:
	.size	hexFunc, .-hexFunc
	.align	4
.proc	lowerFunc
	.type	lowerFunc, @function
lowerFunc:
.LFB950:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2170:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2171:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2172:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2173:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2174:
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI2175:
	l.lwz   	r3,0(r5)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfeqi	r16,0
	l.bf	.L5636	# delay slot filled
	l.addi  	r14,r11,1
	l.srai  	r4,r11,31
	l.sfltu 	r14,r11
	l.bnf	.L5642	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.add   	r4,r2,r4
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	contextMalloc	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5636	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L5643:
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.lbz   	r6,0(r2)	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bf	.L5639	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.addi  	r5,r2,1
.L5640:
	l.movhi  	r3,hi(sqlite3UpperToLower)
	l.ori   	r3,r3,lo(sqlite3UpperToLower)
	l.add   	r6,r6,r3
	l.lbz   	r6,0(r6)	 # zero_extendqisi2
	l.sb    	0(r7),r6	    # movqi
	l.ori   	r7,r5,0	 # move reg to reg
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L5640	# delay slot filled
	l.addi  	r5,r5,1
.L5639:
	l.addi	r1,r1,20
	l.movhi  	r6,hi(sqlite3_free)
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r6,r6,lo(sqlite3_free)
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L5642:
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r4,r2,r4
	l.jal   	contextMalloc	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L5643	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L5636:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE950:
	.size	lowerFunc, .-lowerFunc
	.align	4
.proc	upperFunc
	.type	upperFunc, @function
upperFunc:
.LFB949:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2176:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2177:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2178:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2179:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2180:
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI2181:
	l.lwz   	r3,0(r5)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfeqi	r16,0
	l.bf	.L5644	# delay slot filled
	l.addi  	r14,r11,1
	l.srai  	r4,r11,31
	l.sfltu 	r14,r11
	l.bnf	.L5650	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.add   	r4,r2,r4
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	contextMalloc	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5644	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L5651:
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L5647	# delay slot filled
	l.addi  	r6,r2,1
	l.ori   	r7,r2,0	 # move reg to reg
.L5648:
	l.movhi  	r3,hi(sqlite3CtypeMap)
	l.andi  	r8,r5,0xff	 # zero_extendqisi2
	l.ori   	r3,r3,lo(sqlite3CtypeMap)
	l.add   	r8,r8,r3
	l.lbz   	r8,0(r8)	 # zero_extendqisi2
	l.andi  	r8,r8,32
	l.xori  	r8,r8,0x00ff
	l.and   	r5,r5,r8
	l.sb    	0(r7),r5	    # movqi
	l.ori   	r7,r6,0	 # move reg to reg
	l.lbs   	r5,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L5648	# delay slot filled
	l.addi  	r6,r6,1
.L5647:
	l.addi	r1,r1,20
	l.movhi  	r6,hi(sqlite3_free)
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r6,r6,lo(sqlite3_free)
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L5650:
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r4,r2,r4
	l.jal   	contextMalloc	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L5651	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L5644:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE949:
	.size	upperFunc, .-upperFunc
	.align	4
.proc	substrFunc
	.type	substrFunc, @function
substrFunc:
.LFB946:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2182:
	l.addi  	r18,r5,4
	l.sw    	-32(r1),r2	 # SI store
.LCFI2183:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2184:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2185:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2186:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2187:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2188:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2189:
	l.lwz   	r2,0(r18)	 # SI load
	l.addi  	r1,r1,-48
.LCFI2190:
	l.lbz   	r2,30(r2)	 # zero_extendqisi2
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r2,5
	l.bf	.L5652	# delay slot filled
	l.ori   	r20,r4,0	 # move reg to reg
	l.sfnei	r4,3
	l.bnf	.L5727
	l.nop			# nop delay slot
.L5654:
	l.lwz   	r2,0(r14)	 # SI load
	l.lbz   	r22,30(r2)	 # zero_extendqisi2
	l.sfnei	r22,4
	l.bnf	.L5728
	l.nop			# nop delay slot
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5652	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbz   	r7,0(r11)	 # zero_extendqisi2
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.sfeqi	r7,0
		l.sw    	8(r1), r5
		l.sw    	8+4(r1), r6
	l.bf	.L5656	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.j     	.L5660	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L5730:
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.sfnei	r7,0
.L5748:
	l.bnf	.L5729	# delay slot filled
	l.addi  	r11,r11,1
.L5660:
	l.sfgtui	r7,191
	l.bnf	.L5730	# delay slot filled
	l.addi  	r6,r6,1
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.andi  	r5,r7,192
	l.sfnei	r5,128
	l.bf	.L5748	# delay slot filled
	l.sfnei	r7,0
	l.addi  	r6,r6,1
.L5749:
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.andi  	r8,r7,192
	l.sfeqi	r8,128
	l.bf	.L5749	# delay slot filled
	l.addi  	r6,r6,1
	l.addi  	r6,r6,-1
	l.sfnei	r7,0
	l.bf	.L5660	# delay slot filled
	l.addi  	r11,r11,1
.L5729:
	l.sw    	12(r1),r11	 # SI store
	l.srai  	r11,r11,31
	l.sw    	8(r1),r11	 # SI store
.L5656:
	l.lwz   	r3,0(r18)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r12,r0,0	 # move immediate I
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
	l.jal   	sqlite3_value_int
	l.nop			# nop delay slot
	l.sw    	4(r1),r11	 # SI store
	l.srai  	r11,r11,31
	l.sfnei	r20,3
	l.bnf	.L5731	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r3,24(r16)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r8,80(r3)	 # SI load
	l.srai  	r7,r8,31
.L5662:
	l.lwz   	r3,0(r1)	 # SI load
	l.sfltsi	r3,0
	l.bf	.L5708	# delay slot filled
	l.lwz   	r6,4(r1)	 # SI load
	l.or    	r3,r3,r6
	l.sfeqi	r3,0
	l.bf	.L5732	# delay slot filled
	l.lwz   	r12,4(r1)	 # SI load
	l.addi  	r3,r12,-1
	l.sfltu 	r3,r12
	l.bnf	.L5733	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L5674:
	l.lwz   	r12,0(r1)	 # SI load
	l.ori   	r6,r3,0	 # move reg to reg
	l.addi  	r11,r12,-1
	l.add   	r11,r4,r11
	l.ori   	r4,r6,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
.L5668:
	l.sfeqi	r5,0
.L5747:
	l.bf	.L5750	# delay slot filled
	l.lwz   	r6,4(r1)	 # SI load
	l.lwz   	r4,4(r1)	 # SI load
	l.lwz   	r5,4(r1)	 # SI load
	l.sub   	r3,r4,r8
	l.sfgtu 	r3,r5
	l.bnf	.L5734	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L5678:
	l.lwz   	r6,0(r1)	 # SI load
	l.sub   	r5,r6,r7
	l.ori   	r6,r3,0	 # move reg to reg
	l.sub   	r5,r5,r4
	l.ori   	r4,r6,0	 # move reg to reg
	l.ori   	r3,r5,0	 # move reg to reg
	l.sfltsi	r5,0
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.bf	.L5735	# delay slot filled
	l.lwz   	r11,4(r1)	 # SI load
.L5677:
	l.lwz   	r6,4(r1)	 # SI load
.L5750:
	l.add   	r4,r8,r6
	l.sfltu 	r4,r8
	l.bf	.L5682	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
.L5682:
	l.lwz   	r11,0(r1)	 # SI load
	l.lwz   	r12,8(r1)	 # SI load
	l.add   	r5,r7,r11
	l.add   	r3,r3,r5
	l.sfgts 	r3,r12
	l.bf	.L5713	# delay slot filled
	l.sfne 	r3,r12
	l.bnf	.L5736	# delay slot filled
	l.lwz   	r6,12(r1)	 # SI load
	l.sfeqi	r22,4
.L5746:
	l.bf	.L5687	# delay slot filled
	l.lwz   	r12,4(r1)	 # SI load
	l.lwz   	r11,0(r1)	 # SI load
	l.lbz   	r6,0(r2)	 # zero_extendqisi2
	l.or    	r3,r11,r12
	l.sub   	r11,r0,r6
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L5688	# delay slot filled
	l.srli  	r11,r11,31
	l.sfeqi	r11,0
	l.bnf	.L5717
	l.nop			# nop delay slot
	l.j     	.L5743
	l.nop			# nop delay slot
.L5737:
	l.lbz   	r6,0(r2)	 # zero_extendqisi2
	l.lwz   	r3,4(r1)	 # SI load
.L5744:
	l.addi  	r4,r3,-1
	l.sfltu 	r4,r3
	l.bf	.L5692	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
.L5692:
	l.lwz   	r12,0(r1)	 # SI load
	l.sub   	r11,r0,r6
	l.addi  	r13,r12,-1
	l.ori   	r12,r4,0	 # move reg to reg
	l.add   	r13,r5,r13
	l.srli  	r11,r11,31
	l.ori   	r4,r13,0	 # move reg to reg
	l.ori   	r5,r12,0	 # move reg to reg
	l.sfeqi	r11,0
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.bf	.L5743	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.or    	r4,r3,r12
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfltsi	r4,0
	l.bnf	.L5743	# delay slot filled
	l.sfeqi	r11,0
.L5717:
	l.sfgtui	r6,191
	l.bnf	.L5737	# delay slot filled
	l.addi  	r2,r2,1
	l.lbz   	r6,0(r2)	 # zero_extendqisi2
	l.andi  	r4,r6,192
	l.sfnei	r4,128
	l.bf	.L5744	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.addi  	r2,r2,1
.L5751:
	l.lbz   	r6,0(r2)	 # zero_extendqisi2
	l.andi  	r4,r6,192
	l.sfeqi	r4,128
	l.bf	.L5751	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.j     	.L5744	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
.L5727:
	l.lwz   	r2,8(r5)	 # SI load
	l.lbz   	r2,30(r2)	 # zero_extendqisi2
	l.sfeqi	r2,5
	l.bnf	.L5654
	l.nop			# nop delay slot
.L5652:
	l.addi	r1,r1,48
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L5688:
	l.sfeqi	r11,0
.L5743:
	l.bf	.L5706	# delay slot filled
	l.or    	r3,r7,r8
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L5706
	l.nop			# nop delay slot
	l.j     	.L5700	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
.L5738:
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.addi  	r4,r8,-1
.L5745:
	l.sfltu 	r4,r8
	l.bf	.L5699	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.addi  	r11,r0,0	 # move immediate I
.L5699:
	l.addi  	r7,r7,-1
	l.sfeqi	r6,0
	l.add   	r11,r11,r7
	l.ori   	r8,r4,0	 # move reg to reg
	l.bf	.L5715	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
	l.or    	r4,r11,r4
	l.sub   	r11,r0,r4
	l.or    	r4,r11,r4
	l.sfltsi	r4,0
	l.bnf	.L5715
	l.nop			# nop delay slot
.L5700:
	l.sfgtui	r6,191
	l.bnf	.L5738	# delay slot filled
	l.addi  	r5,r5,1
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.andi  	r4,r6,192
	l.sfnei	r4,128
	l.bf	.L5745	# delay slot filled
	l.addi  	r4,r8,-1
	l.addi  	r5,r5,1
.L5752:
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.andi  	r4,r6,192
	l.sfeqi	r4,128
	l.bf	.L5752	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.j     	.L5745	# delay slot filled
	l.addi  	r4,r8,-1
.L5715:
	l.sub   	r5,r5,r2
.L5695:
	l.addi	r1,r1,48
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r6,r0,-1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r24,-8(r1)	 # SI load
.L5736:
	l.sfgtu 	r4,r6
	l.bnf	.L5746	# delay slot filled
	l.sfeqi	r22,4
.L5713:
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r11,4(r1)	 # SI load
	l.sub   	r3,r7,r11
	l.sfgtu 	r3,r7
	l.bnf	.L5739	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L5684:
	l.lwz   	r7,0(r1)	 # SI load
	l.lwz   	r6,8(r1)	 # SI load
	l.sub   	r5,r6,r7
	l.sub   	r4,r5,r4
	l.srai  	r11,r4,31
	l.ori   	r7,r4,0	 # move reg to reg
	l.xori  	r17,r11,0xffff
	l.srai  	r5,r17,31
	l.and   	r13,r7,r5
	l.and   	r14,r3,r5
		l.or    	r7, r13, r0
		l.or    	r8, r14, r0
	l.j     	.L5746	# delay slot filled
	l.sfeqi	r22,4
.L5728:
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3_value_blob	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5652	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sw    	12(r1),r24	 # SI store
	l.srai  	r24,r24,31
	l.j     	.L5656	# delay slot filled
	l.sw    	8(r1),r24	 # SI store
.L5733:
	l.j     	.L5674	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L5739:
	l.j     	.L5684	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L5734:
	l.j     	.L5678	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L5708:
	l.lwz   	r11,4(r1)	 # SI load
	l.lwz   	r12,12(r1)	 # SI load
	l.add   	r3,r11,r12
	l.sfltu 	r3,r11
	l.bf	.L5667	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
.L5667:
	l.lwz   	r11,0(r1)	 # SI load
	l.lwz   	r12,8(r1)	 # SI load
	l.add   	r6,r11,r12
	l.ori   	r11,r3,0	 # move reg to reg
	l.add   	r6,r4,r6
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r3,r6,0	 # move reg to reg
	l.sfltsi	r6,0
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.bnf	.L5747	# delay slot filled
	l.sfeqi	r5,0
	l.lwz   	r3,4(r1)	 # SI load
	l.add   	r4,r8,r3
	l.sfltu 	r4,r8
	l.bnf	.L5740	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L5670:
	l.add   	r6,r7,r6
	l.ori   	r8,r4,0	 # move reg to reg
	l.add   	r3,r3,r6
	l.sfltsi	r3,0
	l.bf	.L5704	# delay slot filled
	l.ori   	r7,r3,0	 # move reg to reg
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r12,r0,0	 # move immediate I
		l.sw    	0(r1), r11
		l.sw    	4(r1), r12
	l.j     	.L5747	# delay slot filled
	l.sfeqi	r5,0
.L5732:
	l.sfgtsi	r7,0
	l.bnf	.L5741	# delay slot filled
	l.sfnei	r7,0
.L5711:
	l.addi  	r3,r8,-1
	l.sfltu 	r3,r8
	l.bf	.L5676	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
.L5676:
	l.addi  	r7,r7,-1
	l.ori   	r8,r3,0	 # move reg to reg
	l.add   	r4,r4,r7
	l.j     	.L5668	# delay slot filled
	l.ori   	r7,r4,0	 # move reg to reg
.L5731:
	l.jal   	sqlite3_value_int	# delay slot filled
	l.lwz   	r3,8(r14)	 # SI load
	l.srai  	r7,r11,31
	l.ori   	r8,r11,0	 # move reg to reg
	l.sfltsi	r7,0
	l.bnf	.L5662	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.sub   	r4,r0,r11
	l.sfgtui	r4,0
	l.bf	.L5664	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
.L5664:
	l.sub   	r7,r0,r7
	l.addi  	r5,r0,1	 # move immediate I
	l.sub   	r3,r7,r3
	l.ori   	r8,r4,0	 # move reg to reg
	l.j     	.L5662	# delay slot filled
	l.ori   	r7,r3,0	 # move reg to reg
.L5687:
	l.lwz   	r5,4(r1)	 # SI load
	l.addi	r1,r1,48
	l.add   	r4,r2,r5
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r8,0	 # move reg to reg
	l.addi  	r6,r0,-1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.j	sqlite3_result_blob	# delay slot filled	# sibcall s
	l.lwz   	r24,-8(r1)	 # SI load
.L5735:
	l.add   	r3,r8,r11
	l.sfltu 	r3,r8
	l.bnf	.L5742	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L5680:
	l.add   	r5,r7,r5
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r4,r4,r5
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r7,r4,0	 # move reg to reg
		l.sw    	0(r1), r5
		l.sw    	4(r1), r6
	l.j     	.L5677	# delay slot filled
	l.ori   	r8,r3,0	 # move reg to reg
.L5706:
	l.j     	.L5695	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L5742:
	l.j     	.L5680	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L5740:
	l.j     	.L5670	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L5704:
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
		l.sw    	0(r1), r7
		l.sw    	4(r1), r8
	l.j     	.L5747	# delay slot filled
	l.sfeqi	r5,0
.L5741:
	l.bf	.L5668	# delay slot filled
	l.sfnei	r8,0
	l.bf	.L5711	# delay slot filled
	l.sfeqi	r5,0
	l.j     	.L5747
	l.nop			# nop delay slot
.LFE946:
	.size	substrFunc, .-substrFunc
	.align	4
.proc	lengthFunc
	.type	lengthFunc, @function
lengthFunc:
.LFB944:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2191:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2192:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2193:
	l.lwz   	r2,0(r5)	 # SI load
	l.ori   	r14,r3,0	 # move reg to reg
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.sfeqi	r3,3
.LCFI2194:
	l.bf	.L5756	# delay slot filled
	l.addi  	r1,r1,-12
	l.sfgtui	r3,3
	l.bnf	.L5771	# delay slot filled
	l.sfltui	r3,1
	l.sfeqi	r3,4
	l.bf	.L5755
	l.nop			# nop delay slot
.L5754:
	l.addi	r1,r1,12
	l.addi  	r3,r14,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3VdbeMemSetNull	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L5771:
	l.bf	.L5754
	l.nop			# nop delay slot
.L5755:
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
.L5769:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r14,8
	l.srai  	r3,r2,31
	l.sw    	12(r14),r2	 # SI store
	l.addi  	r2,r0,4	 # movhi: move immediate
	l.sw    	8(r14),r3	 # SI store
	l.sh    	36(r14),r2	 # movhi
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	38(r14),r2	    # movqi
.L5753:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L5756:
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5753	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lbz   	r4,0(r11)	 # zero_extendqisi2
	l.sfnei	r4,0
.L5773:
	l.bnf	.L5769	# delay slot filled
	l.sfgtui	r4,191
	l.addi  	r2,r2,1
	l.bf	.L5760	# delay slot filled
	l.addi  	r11,r11,1
.L5772:
	l.lbz   	r4,0(r11)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L5769	# delay slot filled
	l.sfgtui	r4,191
	l.addi  	r2,r2,1
	l.bnf	.L5772	# delay slot filled
	l.addi  	r11,r11,1
.L5760:
	l.lbz   	r4,0(r11)	 # zero_extendqisi2
	l.andi  	r3,r4,192
	l.sfnei	r3,128
	l.bf	.L5773	# delay slot filled
	l.sfnei	r4,0
	l.addi  	r11,r11,1
.L5774:
	l.lbz   	r4,0(r11)	 # zero_extendqisi2
	l.andi  	r5,r4,192
	l.sfeqi	r5,128
	l.bf	.L5774	# delay slot filled
	l.addi  	r11,r11,1
	l.addi  	r11,r11,-1
	l.j     	.L5773	# delay slot filled
	l.sfnei	r4,0
.LFE944:
	.size	lengthFunc, .-lengthFunc
	.align	4
.proc	trimFunc
	.type	trimFunc, @function
trimFunc:
.LFB965:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2195:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2196:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2197:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2198:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2199:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2200:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2201:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2202:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2203:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2204:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2205:
	l.lwz   	r2,0(r5)	 # SI load
	l.ori   	r28,r3,0	 # move reg to reg
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.addi  	r1,r1,-48
.LCFI2206:
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfeqi	r3,5
	l.bf	.L5775	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5775	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeqi	r18,1
	l.bf	.L5799	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r3,4(r14)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L5775	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lbz   	r6,0(r11)	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bf	.L5778	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L5782	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L5815:
	l.lbz   	r6,0(r4)	 # zero_extendqisi2
	l.sfnei	r6,0
.L5821:
	l.bnf	.L5814	# delay slot filled
	l.addi  	r7,r7,1
.L5782:
	l.sfgtui	r6,191
	l.bnf	.L5815	# delay slot filled
	l.addi  	r4,r4,1
	l.lbz   	r6,0(r4)	 # zero_extendqisi2
	l.andi  	r3,r6,192
	l.sfnei	r3,128
	l.bf	.L5821	# delay slot filled
	l.sfnei	r6,0
	l.addi  	r4,r4,1
.L5822:
	l.lbz   	r6,0(r4)	 # zero_extendqisi2
	l.andi  	r5,r6,192
	l.sfeqi	r5,128
	l.bf	.L5822	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
	l.sfnei	r6,0
	l.bf	.L5782	# delay slot filled
	l.addi  	r7,r7,1
.L5814:
	l.srai  	r8,r7,31
	l.slli  	r24,r7,2
	l.srli  	r11,r7,30
	l.slli  	r3,r8,2
	l.add   	r5,r24,r7
	l.addi  	r4,r0,1	 # move immediate I
	l.sfltu 	r5,r24
	l.bnf	.L5816	# delay slot filled
	l.or    	r3,r11,r3
	l.add   	r8,r3,r8
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	contextMalloc	# delay slot filled
	l.add   	r4,r4,r8
	l.sfeqi	r11,0
	l.bf	.L5775	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
.L5817:
	l.lbz   	r3,0(r30)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L5778	# delay slot filled
	l.add   	r24,r11,r24
	l.ori   	r7,r11,0	 # move reg to reg
	l.ori   	r6,r30,0	 # move reg to reg
	l.addi  	r18,r0,0	 # move immediate I
.L5786:
	l.sw    	0(r7),r6	 # SI store
	l.lbz   	r3,0(r6)	 # zero_extendqisi2
	l.sfleui	r3,191
	l.bf	.L5784	# delay slot filled
	l.addi  	r4,r6,1
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.andi  	r3,r3,192
	l.sfnei	r3,128
	l.bf	.L5823	# delay slot filled
	l.add   	r3,r24,r18
	l.addi  	r4,r4,1
.L5824:
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.andi  	r5,r5,192
	l.sfeqi	r5,128
	l.bf	.L5824	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
.L5784:
	l.add   	r3,r24,r18
.L5823:
	l.sub   	r6,r4,r6
	l.addi  	r18,r18,1
	l.sb    	0(r3),r6	    # movqi
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L5777	# delay slot filled
	l.addi  	r7,r7,4
	l.j     	.L5786	# delay slot filled
	l.ori   	r6,r4,0	 # move reg to reg
.L5775:
	l.addi	r1,r1,48
.L5820:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L5818:
.L5793:
	l.sfeqi	r30,0
.L5819:
	l.bf	.L5778
	l.nop			# nop delay slot
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
.L5778:
	l.addi	r1,r1,48
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r6,r0,-1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L5799:
	l.movhi  	r26,hi(azOne.16856)
	l.movhi  	r24,hi(lenOne.16855)
	l.ori   	r26,r26,lo(azOne.16856)
	l.ori   	r24,r24,lo(lenOne.16855)
	l.addi  	r30,r0,0	 # move immediate I
.L5777:
	l.lwz   	r3,0(r28)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.sw    	0(r1),r3	 # SI store
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L5825	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
.L5813:
	l.sfgtsi	r2,0
	l.bnf	.L5825	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
	l.ori   	r20,r26,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
.L5791:
	l.add   	r4,r24,r14
	l.ori   	r3,r22,0	 # move reg to reg
	l.lbz   	r16,0(r4)	 # zero_extendqisi2
	l.sflts 	r2,r16
	l.bf	.L5789	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	memcmp	# delay slot filled
	l.lwz   	r4,0(r20)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L5790	# delay slot filled
	l.sfles 	r18,r14
.L5789:
	l.addi  	r14,r14,1
	l.sflts 	r14,r18
	l.bf	.L5791	# delay slot filled
	l.addi  	r20,r20,4
	l.lwz   	r4,0(r1)	 # SI load
.L5825:
	l.andi  	r3,r4,2
	l.sfeqi	r3,0
	l.bf	.L5819	# delay slot filled
	l.sfeqi	r30,0
	l.sfgtsi	r2,0
	l.bnf	.L5819	# delay slot filled
	l.sfeqi	r30,0
	l.ori   	r16,r26,0	 # move reg to reg
.L5826:
	l.addi  	r14,r0,0	 # move immediate I
.L5797:
	l.add   	r4,r24,r14
	l.lbz   	r6,0(r4)	 # zero_extendqisi2
	l.sub   	r20,r2,r6
	l.ori   	r5,r6,0	 # move reg to reg
	l.sflts 	r2,r6
	l.bf	.L5795	# delay slot filled
	l.add   	r3,r22,r20
	l.jal   	memcmp	# delay slot filled
	l.lwz   	r4,0(r16)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L5796	# delay slot filled
	l.sfles 	r18,r14
.L5795:
	l.addi  	r14,r14,1
	l.sflts 	r14,r18
	l.bf	.L5797	# delay slot filled
	l.addi  	r16,r16,4
	l.j     	.L5819	# delay slot filled
	l.sfeqi	r30,0
.L5790:
	l.bf	.L5825	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
	l.sub   	r2,r2,r16
	l.j     	.L5813	# delay slot filled
	l.add   	r22,r22,r16
.L5816:
	l.add   	r8,r3,r8
	l.ori   	r4,r6,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	contextMalloc	# delay slot filled
	l.add   	r4,r4,r8
	l.sfeqi	r11,0
	l.bnf	.L5817	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.j     	.L5820	# delay slot filled
	l.addi	r1,r1,48
.L5796:
	l.bf	.L5793	# delay slot filled
	l.sfgtsi	r20,0
	l.bnf	.L5818	# delay slot filled
	l.ori   	r2,r20,0	 # move reg to reg
	l.j     	.L5826	# delay slot filled
	l.ori   	r16,r26,0	 # move reg to reg
.LFE965:
	.size	trimFunc, .-trimFunc
	.align	4
.proc	sqlite3_column_bytes
	.global sqlite3_column_bytes
	.type	sqlite3_column_bytes, @function
sqlite3_column_bytes:
.LFB650:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2207:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2208:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2209:
	l.addi  	r1,r1,-12
.LCFI2210:
	l.jal   	columnMem	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	columnMallocFailure	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE650:
	.size	sqlite3_column_bytes, .-sqlite3_column_bytes
	.align	4
.proc	sqlite3GetCollSeq.clone.182
	.type	sqlite3GetCollSeq.clone.182, @function
sqlite3GetCollSeq.clone.182:
.LFB1425:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2211:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2212:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2213:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2214:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2215:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2216:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI2217:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfnei	r4,0
	l.bnf	.L5849	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
.L5829:
	l.lwz   	r3,12(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L5832
	l.nop			# nop delay slot
.L5833:
	l.addi	r1,r1,24
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L5849:
	l.lwz   	r4,8(r3)	 # SI load
	l.ori   	r7,r2,0	 # move reg to reg
	l.lwz   	r4,20(r4)	 # SI load
	l.addi  	r6,r0,-1	 # move immediate I
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.lbz   	r4,57(r4)	 # zero_extendqisi2
	l.sfnei	r11,0
	l.bf	.L5829	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L5832:
	l.lbs   	r3,0(r16)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bnf	.L5850	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
	l.addi  	r2,r2,1
.L5852:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L5852	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r16
	l.ori   	r3,r3,65535
	l.and   	r2,r2,r3
.L5831:
	l.lwz   	r3,192(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L5835	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5836	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r3,8(r14)	 # SI load
	l.lwz   	r7,192(r14)	 # SI load
	l.lwz   	r4,20(r3)	 # SI load
	l.ori   	r6,r11,0	 # move reg to reg
	l.lbz   	r5,57(r4)	 # zero_extendqisi2
	l.lwz   	r3,200(r14)	 # SI load
	l.jalr  	r7	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
.L5835:
	l.lwz   	r3,196(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L5836
	l.nop			# nop delay slot
	l.jal   	sqlite3ValueNew	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.movhi  	r2,hi(sqlite3one)
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r2,r2,lo(sqlite3one)
	l.jal   	sqlite3ValueSetStr	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lbs   	r2,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L5837	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.addi  	r4,r0,3	 # move immediate I
.L5837:
	l.jal   	sqlite3ValueText	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5838	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r2,8(r14)	 # SI load
	l.lwz   	r7,196(r14)	 # SI load
	l.lwz   	r2,20(r2)	 # SI load
	l.lwz   	r3,200(r14)	 # SI load
	l.lbz   	r5,57(r2)	 # zero_extendqisi2
	l.jalr  	r7	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L5838:
	l.jal   	sqlite3ValueFree	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L5836:
	l.lwz   	r2,8(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r2,20(r2)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.lbz   	r4,57(r2)	 # zero_extendqisi2
	l.addi  	r6,r0,-1	 # move immediate I
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L5833	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,12(r11)	 # SI load
	l.sfnei	r3,0
	l.bf	.L5833
	l.nop			# nop delay slot
	l.lwz   	r20,0(r11)	 # SI load
	l.lbs   	r18,0(r20)	 # extendqisi2_no_sext_mem
	l.sfeqi	r18,0
	l.bf	.L5839	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r3,r3,1
.L5853:
	l.lbs   	r4,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L5853	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r3,r3,-1
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r3,r3,r20
	l.ori   	r4,r4,65535
	l.and   	r18,r3,r4
.L5839:
	l.movhi  	r16,hi(aEnc.16332)
	l.ori   	r16,r16,lo(aEnc.16332)
.L5842:
	l.lbz   	r4,0(r16)	 # zero_extendqisi2
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r3,12(r11)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L5851	# delay slot filled
	l.movhi  	r4,hi(aEnc.16332+3)
	l.ori   	r4,r4,lo(aEnc.16332+3)
	l.sfne 	r16,r4
	l.bf	.L5842
	l.nop			# nop delay slot
	l.j     	.L5833	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L5850:
	l.j     	.L5831	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L5851:
	l.lwz   	r3,0(r11)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	0(r2),r3	 # SI store
	l.lwz   	r3,4(r11)	 # SI load
	l.sw    	4(r2),r3	 # SI store
	l.lwz   	r3,8(r11)	 # SI load
	l.sw    	8(r2),r3	 # SI store
	l.lwz   	r3,12(r11)	 # SI load
	l.sw    	16(r2),r4	 # SI store
	l.j     	.L5833	# delay slot filled
	l.sw    	12(r2),r3	 # SI store
.LFE1425:
	.size	sqlite3GetCollSeq.clone.182, .-sqlite3GetCollSeq.clone.182
	.section	.rodata.str1.1
.LC172:
	.string	"no such collation sequence: %.*s"
	.section .text
	.align	4
.proc	sqlite3LocateCollSeq.clone.180
	.type	sqlite3LocateCollSeq.clone.180, @function
sqlite3LocateCollSeq.clone.180:
.LFB1427:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2218:
	l.lwz   	r14,0(r3)	 # SI load
	l.sw    	-24(r1),r2	 # SI store
.LCFI2219:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2220:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2221:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2222:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2223:
	l.lwz   	r2,8(r14)	 # SI load
	l.lbz   	r18,128(r14)	 # zero_extendqisi2
	l.lwz   	r2,20(r2)	 # SI load
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r16,r4,0	 # move reg to reg
	l.lbz   	r4,57(r2)	 # zero_extendqisi2
	l.addi  	r1,r1,-32
.LCFI2224:
	l.ori   	r20,r3,0	 # move reg to reg
	l.addi  	r6,r0,-1	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.sfnei	r18,0
	l.bf	.L5855	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5862	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r3,12(r11)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L5863	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L5855:
	l.addi	r1,r1,32
.L5861:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L5862:
	l.ori   	r3,r14,0	 # move reg to reg
.L5863:
	l.jal   	sqlite3GetCollSeq.clone.182	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5855	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbs   	r4,0(r16)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,0
	l.bf	.L5857	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r3,r3,1
.L5864:
	l.lbs   	r4,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L5864	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r3,r3,-1
.L5857:
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r5,r3,r16
	l.ori   	r4,r4,65535
	l.ori   	r3,r20,0	 # move reg to reg
	l.and   	r5,r5,r4
	l.movhi  	r4,hi(.LC172)
	l.sw    	0(r1),r5	 # SI store
	l.ori   	r4,r4,lo(.LC172)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r16	 # SI store
	l.j     	.L5861	# delay slot filled
	l.addi	r1,r1,32
.LFE1427:
	.size	sqlite3LocateCollSeq.clone.180, .-sqlite3LocateCollSeq.clone.180
	.align	4
.proc	sqlite3ExprSetColl
	.type	sqlite3ExprSetColl, @function
sqlite3ExprSetColl:
.LFB725:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2225:
	l.lwz   	r16,0(r3)	 # SI load
	l.sw    	-20(r1),r2	 # SI store
.LCFI2226:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2227:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2228:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2229:
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI2230:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r14,r4,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.sub   	r3,r0,r11
	l.or    	r3,r11,r3
	l.sfgesi	r3,0
	l.bnf	.L5867	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L5866:
	l.ori   	r3,r16,0	 # move reg to reg
.L5868:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi	r1,r1,20
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L5867:
	l.sub   	r3,r0,r14
	l.or    	r3,r14,r3
	l.sfgesi	r3,0
	l.bf	.L5868	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3LocateCollSeq.clone.180	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5868	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lhz   	r3,2(r14)	 # zero_extendqisi2
	l.ori   	r3,r3,256
	l.sw    	32(r14),r11	 # SI store
	l.j     	.L5866	# delay slot filled
	l.sh    	2(r14),r3	 # movhi
.LFE725:
	.size	sqlite3ExprSetColl, .-sqlite3ExprSetColl
	.align	4
.proc	sqlite3IndexKeyinfo
	.type	sqlite3IndexKeyinfo, @function
sqlite3IndexKeyinfo:
.LFB921:
	l.sw    	-16(r1),r22	 # SI store
.LCFI2231:
	l.lwz   	r22,4(r4)	 # SI load
	l.sw    	-32(r1),r14	 # SI store
.LCFI2232:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r4,r22,3
	l.sw    	-8(r1),r26	 # SI store
.LCFI2233:
	l.slli  	r4,r4,2
	l.lwz   	r26,0(r3)	 # SI load
	l.sw    	-28(r1),r16	 # SI store
.LCFI2234:
	l.sw    	-12(r1),r24	 # SI store
.LCFI2235:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2236:
	l.sw    	-36(r1),r2	 # SI store
.LCFI2237:
	l.sw    	-24(r1),r18	 # SI store
.LCFI2238:
	l.sw    	-20(r1),r20	 # SI store
.LCFI2239:
	l.ori   	r24,r3,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI2240:
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.add   	r4,r4,r22
	l.sfeqi	r11,0
	l.bf	.L5870	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.slli  	r2,r22,2
	l.addi  	r20,r11,12
	l.lwz   	r3,0(r24)	 # SI load
	l.add   	r2,r20,r2
	l.sw    	0(r11),r3	 # SI store
	l.sflesi	r22,0
	l.bf	.L5871	# delay slot filled
	l.sw    	8(r11),r2	 # SI store
	l.addi  	r18,r0,0	 # move immediate I
	l.ori   	r2,r18,0	 # move reg to reg
.L5872:
	l.lwz   	r4,44(r14)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.add   	r4,r4,r18
	l.addi  	r18,r18,4
	l.jal   	sqlite3LocateCollSeq.clone.180	# delay slot filled
	l.lwz   	r4,0(r4)	 # SI load
	l.lwz   	r5,40(r14)	 # SI load
	l.sw    	0(r20),r11	 # SI store
	l.add   	r5,r5,r2
	l.lwz   	r4,8(r16)	 # SI load
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.add   	r4,r4,r2
	l.addi  	r2,r2,1
	l.sb    	0(r4),r5	    # movqi
	l.sfgts 	r22,r2
	l.bf	.L5872	# delay slot filled
	l.addi  	r20,r20,4
.L5871:
	l.sh    	6(r16),r22	 # movhi
.L5870:
	l.lwz   	r2,64(r24)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L5875	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi	r1,r1,36
.L5876:
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L5875:
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L5876	# delay slot filled
	l.addi	r1,r1,36
.LFE921:
	.size	sqlite3IndexKeyinfo, .-sqlite3IndexKeyinfo
	.section	.rodata.str1.1
.LC173:
	.string	"no such collation sequence: %s"
	.section .text
	.align	4
.proc	sqlite3ExprCollSeq
	.type	sqlite3ExprCollSeq, @function
sqlite3ExprCollSeq:
.LFB726:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2241:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2242:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2243:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2244:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI2245:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L5878	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r2,32(r4)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L5881	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.j     	.L5895	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L5893:
	l.bf	.L5882	# delay slot filled
	l.sfnei	r6,132
	l.bnf	.L5882	# delay slot filled
	l.sfeqi	r6,92
.L5897:
	l.bnf	.L5892	# delay slot filled
	l.sfnei	r6,36
.L5890:
	l.lwz   	r5,20(r5)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L5878
	l.nop			# nop delay slot
	l.lwz   	r6,32(r5)	 # SI load
	l.sfnei	r6,0
	l.bf	.L5879
	l.nop			# nop delay slot
.L5881:
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
	l.sfeqi	r6,151
	l.bnf	.L5893	# delay slot filled
	l.sfeqi	r6,153
.L5882:
	l.lwz   	r7,56(r5)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L5897	# delay slot filled
	l.sfeqi	r6,92
	l.lwz   	r4,40(r5)	 # SI load
	l.sfltsi	r4,0
	l.bf	.L5878
	l.nop			# nop delay slot
	l.lwz   	r3,0(r16)	 # SI load
	l.slli  	r2,r4,2
	l.slli  	r4,r4,4
	l.lwz   	r6,8(r3)	 # SI load
	l.lwz   	r5,16(r7)	 # SI load
	l.add   	r2,r2,r4
	l.lwz   	r4,20(r6)	 # SI load
	l.add   	r2,r5,r2
	l.lbz   	r4,57(r4)	 # zero_extendqisi2
	l.lwz   	r5,12(r2)	 # SI load
	l.addi  	r6,r0,-1	 # move immediate I
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sw    	32(r14),r11	 # SI store
	l.sfnei	r11,0
	l.bf	.L5884	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L5878:
	l.addi	r1,r1,20
.L5896:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L5895:
.L5879:
	l.ori   	r2,r6,0	 # move reg to reg
.L5884:
	l.lwz   	r14,0(r2)	 # SI load
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3GetCollSeq.clone.182	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5878
	l.nop			# nop delay slot
	l.lwz   	r2,64(r16)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L5894	# delay slot filled
	l.movhi  	r4,hi(.LC173)
.L5887:
	l.addi  	r3,r2,1
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	64(r16),r3	 # SI store
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L5892:
	l.bnf	.L5890
	l.nop			# nop delay slot
	l.j     	.L5896	# delay slot filled
	l.addi	r1,r1,20
.L5894:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC173)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
	l.j     	.L5887	# delay slot filled
	l.lwz   	r2,64(r16)	 # SI load
.LFE726:
	.size	sqlite3ExprCollSeq, .-sqlite3ExprCollSeq
	.align	4
.proc	selectAddColumnTypeAndCollation.clone.132
	.type	selectAddColumnTypeAndCollation.clone.132, @function
selectAddColumnTypeAndCollation.clone.132:
.LFB1380:
	l.sw    	-16(r1),r22	 # SI store
.LCFI2246:
	l.sw    	-12(r1),r24	 # SI store
.LCFI2247:
	l.sw    	-8(r1),r26	 # SI store
.LCFI2248:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2249:
	l.sw    	-36(r1),r2	 # SI store
.LCFI2250:
	l.sw    	-32(r1),r14	 # SI store
.LCFI2251:
	l.sw    	-28(r1),r16	 # SI store
.LCFI2252:
	l.sw    	-24(r1),r18	 # SI store
.LCFI2253:
	l.sw    	-20(r1),r20	 # SI store
.LCFI2254:
	l.lwz   	r22,0(r3)	 # SI load
	l.addi  	r1,r1,-72
.LCFI2255:
	l.lbz   	r16,30(r22)	 # zero_extendqisi2
	l.ori   	r24,r3,0	 # move reg to reg
	l.sfnei	r16,0
	l.bnf	.L5903	# delay slot filled
	l.ori   	r26,r4,0	 # move reg to reg
.L5898:
	l.addi	r1,r1,72
.L5904:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L5903:
	l.lwz   	r3,0(r7)	 # SI load
	l.sw    	0(r1),r16	 # SI store
	l.sw    	8(r1),r16	 # SI store
	l.sw    	12(r1),r16	 # SI store
	l.sw    	16(r1),r16	 # SI store
	l.sw    	20(r1),r16	 # SI store
	l.sw    	24(r1),r16	 # SI store
	l.sw    	28(r1),r16	 # SI store
	l.sw    	32(r1),r16	 # SI store
	l.sflesi	r4,0
	l.lwz   	r2,0(r6)	 # SI load
	l.sw    	4(r1),r3	 # SI store
	l.bf	.L5898	# delay slot filled
	l.lwz   	r18,12(r2)	 # SI load
	l.addi  	r2,r5,8
.L5901:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r14,0(r18)	 # SI load
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r3,r1,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	columnType	# delay slot filled
	l.addi  	r16,r16,1
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.addi  	r18,r18,16
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprAffinity	# delay slot filled
	l.sw    	0(r2),r11	 # SI store
	l.ori   	r3,r24,0	 # move reg to reg
	l.sb    	10(r2),r11	    # movqi
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5900	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.lwz   	r4,0(r11)	 # SI load
	l.sw    	4(r2),r11	 # SI store
.L5900:
	l.sflts 	r16,r26
	l.bf	.L5901	# delay slot filled
	l.addi  	r2,r2,20
	l.j     	.L5904	# delay slot filled
	l.addi	r1,r1,72
.LFE1380:
	.size	selectAddColumnTypeAndCollation.clone.132, .-selectAddColumnTypeAndCollation.clone.132
	.align	4
.proc	selectAddSubqueryTypeInfo
	.type	selectAddSubqueryTypeInfo, @function
selectAddSubqueryTypeInfo:
.LFB1066:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2256:
	l.lhz   	r2,6(r4)	 # zero_extendqisi2
	l.sw    	-16(r1),r14	 # SI store
.LCFI2257:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2258:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2259:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2260:
	l.andi  	r14,r2,32
	l.sfnei	r14,0
.LCFI2261:
	l.bf	.L5906	# delay slot filled
	l.addi  	r1,r1,-20
	l.lwz   	r16,8(r4)	 # SI load
	l.ori   	r2,r2,32
	l.lhs   	r6,0(r16)	 # extendhisi2_no_sext_mem
	l.sh    	6(r4),r2	 # movhi
	l.sflesi	r6,0
	l.bf	.L5906	# delay slot filled
	l.lwz   	r18,8(r3)	 # SI load
	l.addi  	r2,r16,16
.L5909:
	l.lwz   	r5,0(r2)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L5907
	l.nop			# nop delay slot
	l.lbz   	r4,34(r5)	 # zero_extendqisi2
	l.andi  	r4,r4,2
	l.sfeqi	r4,0
	l.bf	.L5907
	l.nop			# nop delay slot
	l.j     	.L5908	# delay slot filled
	l.lwz   	r6,4(r2)	 # SI load
.L5910:
	l.ori   	r6,r4,0	 # move reg to reg
.L5908:
	l.lwz   	r4,28(r6)	 # SI load
	l.sfnei	r4,0
	l.bf	.L5910	# delay slot filled
	l.addi  	r7,r6,8
	l.lwz   	r4,12(r5)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	selectAddColumnTypeAndCollation.clone.132	# delay slot filled
	l.lwz   	r5,16(r5)	 # SI load
	l.lhs   	r6,0(r16)	 # extendhisi2_no_sext_mem
.L5907:
	l.addi  	r14,r14,1
	l.sfgts 	r6,r14
	l.bf	.L5909	# delay slot filled
	l.addi  	r2,r2,52
.L5906:
	l.addi	r1,r1,20
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE1066:
	.size	selectAddSubqueryTypeInfo, .-selectAddSubqueryTypeInfo
	.align	4
.proc	sqlite3ResultSetOfSelect
	.type	sqlite3ResultSetOfSelect, @function
sqlite3ResultSetOfSelect:
.LFB1049:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2262:
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	-8(r1),r20	 # SI store
.LCFI2263:
	l.addi  	r7,r0,-33	 # move immediate I
	l.lwz   	r20,12(r2)	 # SI load
	l.sw    	-20(r1),r14	 # SI store
.LCFI2264:
	l.and   	r6,r20,r7
	l.sw    	-16(r1),r16	 # SI store
.LCFI2265:
	l.ori   	r6,r6,64
	l.sw    	-12(r1),r18	 # SI store
.LCFI2266:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2267:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r1,r1,-24
.LCFI2268:
	l.sw    	12(r2),r6	 # SI store
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.jal   	sqlite3SelectPrep	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
	l.lwz   	r3,64(r14)	 # SI load
	l.sfne 	r3,r16
	l.bnf	.L5919
	l.nop			# nop delay slot
.L5913:
	l.addi	r1,r1,24
.L5921:
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L5917:
	l.ori   	r18,r3,0	 # move reg to reg
.L5919:
	l.lwz   	r3,28(r18)	 # SI load
	l.sfnei	r3,0
	l.bf	.L5917
	l.nop			# nop delay slot
	l.sw    	12(r2),r20	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r0,80	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L5913	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lbz   	r4,226(r2)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L5920	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L5915:
	l.lwz   	r5,0(r18)	 # SI load
	l.addi  	r6,r16,12
	l.lwz   	r4,0(r5)	 # SI load
	l.sw    	0(r16),r3	 # SI store
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.addi  	r5,r5,12
	l.sh    	32(r16),r3	 # movhi
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r7,r16,16
	l.sw    	4(r16),r3	 # SI store
	l.jal   	selectColumnsFromExprList.clone.110	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.lwz   	r4,12(r16)	 # SI load
	l.lwz   	r5,16(r16)	 # SI load
	l.jal   	selectAddColumnTypeAndCollation.clone.132	# delay slot filled
	l.addi  	r7,r18,8
	l.addi  	r3,r0,-1	 # move immediate I
	l.sw    	8(r16),r3	 # SI store
	l.lbz   	r2,30(r2)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L5913	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L5921	# delay slot filled
	l.addi	r1,r1,24
.L5920:
	l.j     	.L5915	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
.LFE1049:
	.size	sqlite3ResultSetOfSelect, .-sqlite3ResultSetOfSelect
	.section	.rodata.str1.1
.LC174:
	.string	"no such module: %s"
.LC175:
	.string	"view %s is circularly defined"
	.section .text
	.align	4
.proc	sqlite3ViewGetColumnNames
	.type	sqlite3ViewGetColumnNames, @function
sqlite3ViewGetColumnNames:
.LFB886:
	l.sw    	-40(r1),r2	 # SI store
.LCFI2269:
	l.sw    	-32(r1),r16	 # SI store
.LCFI2270:
	l.sw    	-28(r1),r18	 # SI store
.LCFI2271:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2272:
	l.sw    	-36(r1),r14	 # SI store
.LCFI2273:
	l.sw    	-24(r1),r20	 # SI store
.LCFI2274:
	l.sw    	-20(r1),r22	 # SI store
.LCFI2275:
	l.sw    	-16(r1),r24	 # SI store
.LCFI2276:
	l.sw    	-12(r1),r26	 # SI store
.LCFI2277:
	l.sw    	-8(r1),r28	 # SI store
.LCFI2278:
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi  	r1,r1,-48
.LCFI2279:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L5923	# delay slot filled
	l.lwz   	r18,0(r3)	 # SI load
	l.lbz   	r5,34(r4)	 # zero_extendqisi2
	l.andi  	r5,r5,16
	l.sfeqi	r5,0
	l.bf	.L5924	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r5,56(r4)	 # SI load
	l.sfne 	r5,r14
	l.bnf	.L5935
	l.nop			# nop delay slot
.L5925:
	l.addi	r1,r1,48
.L5939:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L5935:
	l.lwz   	r5,52(r4)	 # SI load
	l.sfne 	r5,r14
	l.bnf	.L5936	# delay slot filled
	l.addi  	r6,r5,8
	l.lwz   	r7,0(r5)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r7,8(r7)	 # SI load
	l.addi  	r8,r1,4
	l.jal   	vtabCallConstructor.clone.111	# delay slot filled
	l.sw    	4(r1),r14	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L5937	# delay slot filled
	l.movhi  	r4,hi(.LC78)
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,4(r1)	 # SI load
.L5923:
	l.lbz   	r3,34(r2)	 # zero_extendqisi2
	l.addi  	r14,r0,0	 # move immediate I
	l.andi  	r3,r3,16
	l.sfne 	r3,r14
	l.bf	.L5925
	l.nop			# nop delay slot
.L5924:
	l.lwz   	r20,12(r2)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.sfgts 	r20,r14
	l.bf	.L5925	# delay slot filled
	l.sfeq 	r20,r14
	l.bnf	.L5938	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,28(r2)	 # SI load
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L5925	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.lwz   	r4,8(r11)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.lbz   	r26,226(r18)	 # zero_extendqisi2
	l.jal   	sqlite3SrcListAssignCursors	# delay slot filled
	l.lwz   	r24,68(r16)	 # SI load
	l.addi  	r3,r0,-1	 # move immediate I
	l.lwz   	r28,248(r18)	 # SI load
	l.sw    	12(r2),r3	 # SI store
	l.sb    	226(r18),r20	    # movqi
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	248(r18),r20	 # SI store
	l.jal   	sqlite3ResultSetOfSelect	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sw    	248(r18),r28	 # SI store
	l.sb    	226(r18),r26	    # movqi
	l.sw    	68(r16),r24	 # SI store
	l.sfeqi	r11,0
	l.bf	.L5929	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r5,12(r11)	 # SI load
	l.lwz   	r4,16(r11)	 # SI load
	l.sw    	12(r2),r5	 # SI store
	l.sw    	16(r2),r4	 # SI store
	l.sw    	12(r11),r20	 # SI store
	l.sw    	16(r11),r20	 # SI store
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.ori   	r14,r20,0	 # move reg to reg
	l.lwz   	r2,72(r2)	 # SI load
	l.lhz   	r3,58(r2)	 # zero_extendqisi2
	l.ori   	r3,r3,2
	l.sh    	58(r2),r3	 # movhi
.L5930:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.j     	.L5939	# delay slot filled
	l.addi	r1,r1,48
.L5937:
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r2,4(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC78)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,4(r1)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L5939	# delay slot filled
	l.addi	r1,r1,48
.L5938:
	l.movhi  	r4,hi(.LC175)
	l.lwz   	r2,4(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC175)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L5939	# delay slot filled
	l.addi	r1,r1,48
.L5929:
	l.j     	.L5930	# delay slot filled
	l.sw    	12(r2),r11	 # SI store
.L5936:
	l.lwz   	r2,64(r4)	 # SI load
	l.movhi  	r4,hi(.LC174)
	l.lwz   	r2,0(r2)	 # SI load
	l.ori   	r4,r4,lo(.LC174)
	l.addi  	r14,r0,1	 # move immediate I
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.j     	.L5939	# delay slot filled
	l.addi	r1,r1,48
.LFE886:
	.size	sqlite3ViewGetColumnNames, .-sqlite3ViewGetColumnNames
	.align	4
.proc	multiSelectCollSeq.clone.133
	.type	multiSelectCollSeq.clone.133, @function
multiSelectCollSeq.clone.133:
.LFB1381:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2280:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2281:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2282:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2283:
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI2284:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L5941	# delay slot filled
	l.ori   	r14,r6,0	 # move reg to reg
	l.ori   	r4,r5,0	 # move reg to reg
	l.jal   	multiSelectCollSeq.clone.133	# delay slot filled
	l.lwz   	r5,28(r5)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L5941
	l.nop			# nop delay slot
.L5942:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L5941:
	l.lwz   	r2,0(r2)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.sfges 	r14,r3
	l.bf	.L5942	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.slli  	r14,r14,4
	l.lwz   	r2,12(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.add   	r14,r2,r14
	l.lwz   	r4,0(r14)	 # SI load
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3ExprCollSeq	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.LFE1381:
	.size	multiSelectCollSeq.clone.133, .-multiSelectCollSeq.clone.133
	.align	4
.proc	keyInfoFromExprList.clone.134
	.type	keyInfoFromExprList.clone.134, @function
keyInfoFromExprList.clone.134:
.LFB1382:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2285:
	l.slli  	r2,r4,2
	l.sw    	-16(r1),r20	 # SI store
.LCFI2286:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2287:
	l.ori   	r20,r4,0	 # move reg to reg
	l.lwz   	r24,0(r3)	 # SI load
	l.add   	r4,r2,r4
	l.sw    	-28(r1),r14	 # SI store
.LCFI2288:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2289:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2290:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2291:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2292:
	l.ori   	r22,r3,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI2293:
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r4,16
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L5945	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi  	r18,r11,12
	l.lwz   	r3,8(r24)	 # SI load
	l.add   	r2,r18,r2
	l.lwz   	r3,20(r3)	 # SI load
	l.sw    	8(r11),r2	 # SI store
	l.sh    	6(r11),r20	 # movhi
	l.sflesi	r20,0
	l.lbz   	r3,57(r3)	 # zero_extendqisi2
	l.sw    	0(r11),r24	 # SI store
	l.sb    	4(r11),r3	    # movqi
	l.bf	.L5945	# delay slot filled
	l.lwz   	r14,0(r14)	 # SI load
	l.j     	.L5947	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L5946:
	l.sw    	0(r18),r11	 # SI store
	l.lwz   	r4,8(r16)	 # SI load
	l.lbz   	r3,8(r14)	 # zero_extendqisi2
	l.add   	r4,r4,r2
	l.addi  	r2,r2,1
	l.sb    	0(r4),r3	    # movqi
	l.sfges 	r2,r20
	l.bf	.L5945	# delay slot filled
	l.addi  	r18,r18,4
	l.addi  	r14,r14,16
.L5947:
	l.lwz   	r4,0(r14)	 # SI load
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L5946
	l.nop			# nop delay slot
	l.j     	.L5946	# delay slot filled
	l.lwz   	r11,44(r24)	 # SI load
.L5945:
	l.addi	r1,r1,32
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.LFE1382:
	.size	keyInfoFromExprList.clone.134, .-keyInfoFromExprList.clone.134
	.align	4
.proc	sqlite3BinaryCompareCollSeq
	.type	sqlite3BinaryCompareCollSeq, @function
sqlite3BinaryCompareCollSeq:
.LFB731:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2294:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lhz   	r3,2(r4)	 # zero_extendqisi2
	l.sw    	-12(r1),r2	 # SI store
.LCFI2295:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2296:
	l.andi  	r3,r3,256
	l.addi  	r1,r1,-12
.LCFI2297:
	l.sfeqi	r3,0
	l.bnf	.L5952	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L5951
	l.nop			# nop delay slot
	l.lhz   	r3,2(r5)	 # zero_extendqisi2
	l.andi  	r3,r3,256
	l.sfeqi	r3,0
	l.bnf	.L5953
	l.nop			# nop delay slot
.L5951:
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L5954	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L5953:
	l.addi	r1,r1,12
	l.lwz   	r11,32(r5)	 # SI load
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L5952:
	l.lwz   	r11,32(r4)	 # SI load
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L5954:
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3ExprCollSeq	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE731:
	.size	sqlite3BinaryCompareCollSeq, .-sqlite3BinaryCompareCollSeq
	.align	4
.proc	findTerm
	.type	findTerm, @function
findTerm:
.LFB1141:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2298:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2299:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2300:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2301:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2302:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2303:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2304:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2305:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2306:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2307:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2308:
	l.lwz   	r16,12(r3)	 # SI load
	l.addi  	r1,r1,-56
.LCFI2309:
	l.ori   	r22,r3,0	 # move reg to reg
	l.ori   	r24,r4,0	 # move reg to reg
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r26,r6,0	 # move reg to reg
	l.ori   	r28,r7,0	 # move reg to reg
	l.lwz   	r18,56(r1)	 # SI load
	l.andi  	r30,r8,4095
	l.sfeqi	r16,0
	l.bf	.L5972	# delay slot filled
	l.lwz   	r2,20(r3)	 # SI load
	l.slli  	r4,r5,2
	l.slli  	r3,r5,4
	l.add   	r3,r4,r3
	l.sw    	0(r1),r3	 # SI store
.L5967:
	l.lwz   	r3,8(r2)	 # SI load
	l.sfne 	r3,r24
	l.bf	.L5957
	l.nop			# nop delay slot
	l.lwz   	r5,24(r2)	 # SI load
	l.lwz   	r3,28(r2)	 # SI load
	l.and   	r5,r5,r26
	l.and   	r3,r3,r28
	l.or    	r3,r5,r3
	l.sfnei	r3,0
	l.bf	.L5957
	l.nop			# nop delay slot
	l.lwz   	r3,12(r2)	 # SI load
	l.sfne 	r3,r14
	l.bf	.L5957
	l.nop			# nop delay slot
	l.lhz   	r3,16(r2)	 # zero_extendqisi2
	l.and   	r4,r30,r3
	l.sfeqi	r4,0
	l.bf	.L5957	# delay slot filled
	l.sfeqi	r18,0
	l.bf	.L5956	# delay slot filled
	l.sfeqi	r3,128
	l.bf	.L5956	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
	l.lwz   	r3,16(r18)	 # SI load
	l.lwz   	r4,16(r3)	 # SI load
	l.lwz   	r20,0(r2)	 # SI load
	l.add   	r4,r4,r5
	l.ori   	r3,r20,0	 # move reg to reg
	l.lbs   	r4,18(r4)	 # extendqisi2_no_sext_mem
	l.lwz   	r5,0(r22)	 # SI load
	l.sw    	8(r1),r4	 # SI store
	l.jal   	comparisonAffinity	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
	l.sfeqi	r11,97
	l.bf	.L5959	# delay slot filled
	l.sfeqi	r11,98
	l.bf	.L5960	# delay slot filled
	l.lwz   	r5,8(r1)	 # SI load
	l.sfgtsi	r5,98
	l.bnf	.L5957
	l.nop			# nop delay slot
.L5960:
	l.lwz   	r3,4(r1)	 # SI load
.L5976:
	l.lwz   	r4,20(r20)	 # SI load
	l.jal   	sqlite3BinaryCompareCollSeq	# delay slot filled
	l.lwz   	r5,24(r20)	 # SI load
	l.lwz   	r15,8(r18)	 # SI load
	l.lwz   	r3,0(r15)	 # SI load
	l.sfeq 	r3,r14
	l.bf	.L5963	# delay slot filled
	l.addi  	r12,r0,0	 # move immediate I
	l.lwz   	r17,4(r18)	 # SI load
	l.sflesi	r17,0
	l.bf	.L5971	# delay slot filled
	l.addi  	r12,r0,4	 # move immediate I
	l.j     	.L5965	# delay slot filled
	l.addi  	r13,r0,0	 # move immediate I
.L5966:
	l.sfges 	r13,r17
	l.bf	.L5971	# delay slot filled
	l.addi  	r12,r12,4
.L5965:
	l.add   	r5,r15,r12
	l.lwz   	r5,0(r5)	 # SI load
	l.sfne 	r5,r14
	l.bf	.L5966	# delay slot filled
	l.addi  	r13,r13,1
.L5963:
	l.sfeqi	r11,0
	l.bf	.L5956
	l.nop			# nop delay slot
	l.lwz   	r4,44(r18)	 # SI load
	l.lwz   	r3,0(r11)	 # SI load
	l.add   	r12,r4,r12
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.lwz   	r4,0(r12)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L5975	# delay slot filled
	l.addi  	r16,r16,-1
.L5956:
	l.addi	r1,r1,56
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L5959:
	l.lwz   	r4,8(r1)	 # SI load
	l.xori  	r3,r4,97
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bnf	.L5976	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
.L5957:
	l.addi  	r16,r16,-1
.L5975:
	l.sfeqi	r16,0
	l.bf	.L5972
	l.nop			# nop delay slot
	l.j     	.L5967	# delay slot filled
	l.addi  	r2,r2,40
.L5971:
	l.j     	.L5956	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L5972:
	l.j     	.L5956	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
.LFE1141:
	.size	findTerm, .-findTerm
	.global __floatunsidf
	.section	.rodata
	.align	4
.LC176:
	.long	1076101120
	.long	0
	.align	4
.LC177:
	.long	1072693248
	.long	0
	.align	4
.LC178:
	.long	1093567616
	.long	0
	.align	4
.LC179:
	.long	1417495214
	.long	2726797102
	.align	4
.LC180:
	.long	0
	.long	0
	.align	4
.LC181:
	.long	1079574528
	.long	0
	.align	4
.LC182:
	.long	1080623104
	.long	0
	.align	4
.LC183:
	.long	1074266112
	.long	0
	.align	4
.LC184:
	.long	1077477376
	.long	0
	.align	4
.LC185:
	.long	1071644672
	.long	0
	.section .text
	.align	4
.proc	bestBtreeIndex
	.type	bestBtreeIndex, @function
bestBtreeIndex:
.LFB1156:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2310:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2311:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2312:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2313:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2314:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2315:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2316:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2317:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2318:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2319:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2320:
	l.addi  	r1,r1,-152
.LCFI2321:
	l.lbz   	r2,22(r5)	 # zero_extendqisi2
	l.sw    	88(r1),r3	 # SI store
	l.lwz   	r3,24(r5)	 # SI load
	l.lwz   	r11,12(r5)	 # SI load
	l.sw    	56(r1),r5	 # SI store
	l.sw    	4(r1),r4	 # SI store
	l.sw    	68(r1),r8	 # SI store
	l.sw    	72(r1),r3	 # SI store
		l.sw    	8(r1), r6
		l.sw    	8+4(r1), r7
	l.sfnei	r2,0
	l.bf	.L5978	# delay slot filled
	l.lwz   	r14,20(r11)	 # SI load
	l.lwz   	r4,152(r1)	 # SI load
	l.sfnei	r14,0
	l.sw    	0(r4),r2	 # SI store
	l.sw    	4(r4),r2	 # SI store
	l.sw    	8(r4),r2	 # SI store
	l.sw    	12(r4),r2	 # SI store
	l.sw    	16(r4),r2	 # SI store
	l.sw    	20(r4),r2	 # SI store
	l.bnf	.L6055	# delay slot filled
	l.sw    	24(r4),r2	 # SI store
	l.movhi  	r11,hi(.LC179)
.L6140:
	l.lwz   	r7,56(r1)	 # SI load
	l.ori   	r11,r11,lo(.LC179)
	l.lwz   	r5,152(r1)	 # SI load
	l.lwz   	r2,48(r7)	 # SI load
		l.lwz   	r3, 0(r11)
		l.lwz   	r4, 4(r11)
		l.sw    	12(r5), r3
		l.sw    	12+4(r5), r4
	l.sfnei	r2,0
	l.bnf	.L6101	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
.L5982:
	l.lwz   	r3,88(r1)	 # SI load
.L6127:
	l.lwz   	r4,4(r1)	 # SI load
	l.lwz   	r2,152(r1)	 # SI load
	l.lwz   	r5,56(r1)	 # SI load
	l.lwz   	r8,68(r1)	 # SI load
	l.sw    	0(r1),r2	 # SI store
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jal   	bestOrClauseIndex
	l.nop			# nop delay slot
	l.lwz   	r3,56(r1)	 # SI load
	l.addi  	r4,r0,131	 # move immediate I
	l.lbz   	r11,21(r3)	 # zero_extendqisi2
	l.andi  	r11,r11,8
	l.sfeqi	r11,0
	l.bnf	.L6102	# delay slot filled
	l.sw    	84(r1),r4	 # SI store
	l.lwz   	r6,56(r1)	 # SI load
	l.lwz   	r6,48(r6)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L6000	# delay slot filled
	l.sw    	28(r1),r6	 # SI store
.L6119:
	l.movhi  	r7,hi(.LC177)
	l.movhi  	r2,hi(.LC176)
	l.ori   	r7,r7,lo(.LC177)
	l.ori   	r2,r2,lo(.LC176)
	l.sw    	76(r1),r7	 # SI store
	l.sw    	52(r1),r2	 # SI store
.L6001:
	l.lwz   	r3,68(r1)	 # SI load
	l.lwz   	r4,28(r1)	 # SI load
	l.addi  	r3,r3,12
	l.lwz   	r4,4(r4)	 # SI load
	l.sw    	92(r1),r3	 # SI store
	l.sfgtsi	r4,0
	l.bnf	.L6103	# delay slot filled
	l.sw    	36(r1),r4	 # SI store
.L6049:
	l.addi  	r26,r0,0	 # move immediate I
	l.movhi 	r5,hi(1072693248)	 # move immediate M
	l.sw    	20(r1),r26	 # SI store
	l.sw    	16(r1),r5	 # SI store
	l.ori   	r28,r26,0	 # move reg to reg
	l.ori   	r30,r26,0	 # move reg to reg
	l.sw    	24(r1),r26	 # SI store
	l.lwz   	r24,72(r1)	 # SI load
	l.lwz   	r14,28(r1)	 # SI load
	l.lwz   	r18,84(r1)	 # SI load
	l.ori   	r16,r5,0	 # move reg to reg
	l.j     	.L6008	# delay slot filled
	l.ori   	r22,r26,0	 # move reg to reg
.L6106:
	l.lwz   	r7,0(r11)	 # SI load
	l.movhi 	r4,hi(262144)	 # move immediate M
	l.lhz   	r5,2(r7)	 # zero_extendqisi2
	l.andi  	r5,r5,4096
	l.ori   	r2,r16,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L6006	# delay slot filled
	l.or    	r30,r30,r4
	l.movhi  	r7,hi(.LC184)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.ori   	r7,r7,lo(.LC184)
	l.addi  	r2,r0,1	 # move immediate I
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3	# delay slot filled
	l.sw    	24(r1),r2	 # SI store
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r22,r12,0	 # move reg to reg
.L6007:
	l.addi  	r28,r28,1
.L6123:
	l.lwz   	r20,4(r14)	 # SI load
	l.sfgts 	r20,r28
	l.bnf	.L6104	# delay slot filled
	l.addi  	r26,r26,4
.L6008:
	l.lwz   	r2,8(r14)	 # SI load
	l.sw    	0(r1),r14	 # SI store
	l.add   	r2,r2,r26
	l.ori   	r4,r24,0	 # move reg to reg
	l.lwz   	r5,0(r2)	 # SI load
	l.ori   	r8,r18,0	 # move reg to reg
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L6105	# delay slot filled
	l.movhi 	r7,hi(65536)	 # move immediate M
	l.lhz   	r2,16(r11)	 # zero_extendqisi2
	l.andi  	r5,r2,1
	l.or    	r30,r30,r7
	l.sfeqi	r5,0
	l.bnf	.L6106	# delay slot filled
	l.andi  	r2,r2,128
	l.sfeqi	r2,0
	l.bf	.L6007	# delay slot filled
	l.movhi 	r3,hi(524288)	 # move immediate M
	l.addi  	r28,r28,1
	l.lwz   	r20,4(r14)	 # SI load
	l.or    	r30,r30,r3
	l.sfgts 	r20,r28
	l.bf	.L6008	# delay slot filled
	l.addi  	r26,r26,4
.L6104:
	l.lwz   	r18,24(r1)	 # SI load
	l.sw    	16(r1),r16	 # SI store
	l.sw    	20(r1),r22	 # SI store
	l.slli  	r26,r28,2
	l.j     	.L6004	# delay slot filled
	l.sw    	80(r1),r28	 # SI store
.L6006:
	l.lwz   	r2,28(r7)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L6007
	l.nop			# nop delay slot
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r3,r2,1
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__muldf3	# delay slot filled
	l.addi  	r28,r28,1
	l.ori   	r16,r11,0	 # move reg to reg
	l.j     	.L6123	# delay slot filled
	l.ori   	r22,r12,0	 # move reg to reg
.L6105:
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r18,24(r1)	 # SI load
	l.sw    	80(r1),r28	 # SI store
	l.sw    	16(r1),r16	 # SI store
	l.sw    	20(r1),r22	 # SI store
	l.lwz   	r20,4(r6)	 # SI load
.L6004:
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r22,12(r4)	 # SI load
	l.add   	r2,r22,r26
	l.jal   	__floatunsidf	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r16,16(r1)	 # SI load
	l.lwz   	r2,20(r1)	 # SI load
	l.ori   	r14,r16,0	 # move reg to reg
	l.ori   	r15,r2,0	 # move reg to reg
		l.sw    	60(r1), r11
		l.sw    	60+4(r1), r12
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.jal   	__muldf3
	l.nop			# nop delay slot
	l.sw    	24(r1),r11	 # SI store
	l.sfnei	r18,0
	l.bf	.L6009	# delay slot filled
	l.sw    	40(r1),r12	 # SI store
	l.lwz   	r3,0(r22)	 # SI load
	l.jal   	__floatunsidf	# delay slot filled
	l.sw    	36(r1),r20	 # SI store
	l.sw    	44(r1),r11	 # SI store
	l.sw    	48(r1),r12	 # SI store
.L6010:
	l.lwz   	r15,44(r1)	 # SI load
	l.lwz   	r16,48(r1)	 # SI load
	l.ori   	r2,r15,0	 # move reg to reg
	l.lwz   	r7,52(r1)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L6093	# delay slot filled
	l.movhi 	r18,hi(1076101120)	 # move immediate M
	l.addi  	r20,r0,0	 # move immediate I
	l.movhi 	r24,hi(1072693248)	 # move immediate M
	l.ori   	r22,r20,0	 # move reg to reg
	l.lwz   	r14,44(r1)	 # SI load
	l.lwz   	r16,48(r1)	 # SI load
	l.movhi  	r2,hi(.LC177)
.L6129:
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r2,r2,lo(.LC177)
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
	l.jal   	__adddf3	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.movhi  	r7,hi(.LC176)
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC176)
	l.ori   	r4,r20,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.ori   	r24,r11,0	 # move reg to reg
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r22,r12,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	__ltdf2	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
	l.sfltsi	r11,0
	l.bf	.L6129	# delay slot filled
	l.movhi  	r2,hi(.LC177)
.L6012:
	l.lwz   	r15,20(r1)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.ori   	r3,r15,0	 # move reg to reg
	l.ori   	r2,r5,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.lwz   	r13,40(r1)	 # SI load
	l.lwz   	r2,24(r1)	 # SI load
	l.ori   	r6,r13,0	 # move reg to reg
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__adddf3	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r3,28(r1)	 # SI load
	l.ori   	r22,r11,0	 # move reg to reg
	l.lbz   	r2,24(r3)	 # zero_extendqisi2
	l.sw    	16(r1),r22	 # SI store
	l.sw    	20(r1),r12	 # SI store
	l.sfeqi	r2,0
	l.bf	.L6015	# delay slot filled
	l.ori   	r18,r12,0	 # move reg to reg
	l.lwz   	r4,36(r1)	 # SI load
	l.sfne 	r4,r28
	l.bnf	.L6107
	l.nop			# nop delay slot
.L6015:
	l.lwz   	r7,36(r1)	 # SI load
	l.sfles 	r7,r28
	l.bnf	.L6108	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
.L6016:
	l.lwz   	r2,68(r1)	 # SI load
.L6139:
	l.sfeqi	r2,0
	l.bf	.L6130	# delay slot filled
	l.lwz   	r3,88(r1)	 # SI load
.L6113:
	l.movhi 	r3,hi(786432)	 # move immediate M
	l.and   	r17,r30,r3
	l.sfnei	r17,0
	l.bnf	.L6109	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
.L6137:
	l.lwz   	r13,20(r1)	 # SI load
	l.ori   	r2,r5,0	 # move reg to reg
	l.lwz   	r4,52(r1)	 # SI load
	l.ori   	r3,r13,0	 # move reg to reg
		l.lwz   	r5, 0(r4)
		l.lwz   	r6, 4(r4)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L6094	# delay slot filled
	l.lwz   	r14,16(r1)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
	l.movhi 	r20,hi(1076101120)	 # move immediate M
	l.movhi 	r22,hi(1072693248)	 # move immediate M
	l.ori   	r24,r18,0	 # move reg to reg
	l.lwz   	r16,20(r1)	 # SI load
	l.movhi  	r7,hi(.LC177)
.L6131:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC177)
	l.ori   	r4,r24,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__adddf3	# delay slot filled
	l.movhi  	r2,hi(.LC176)
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r2,r2,lo(.LC176)
	l.ori   	r22,r11,0	 # move reg to reg
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r24,r12,0	 # move reg to reg
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r6,r12,0	 # move reg to reg
	l.jal   	__gtdf2	# delay slot filled
	l.ori   	r18,r12,0	 # move reg to reg
	l.sfgtsi	r11,0
	l.bf	.L6131	# delay slot filled
	l.movhi  	r7,hi(.LC177)
.L6037:
	l.lwz   	r17,20(r1)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.ori   	r3,r17,0	 # move reg to reg
	l.ori   	r2,r5,0	 # move reg to reg
	l.ori   	r6,r24,0	 # move reg to reg
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.lwz   	r15,20(r1)	 # SI load
	l.lwz   	r16,16(r1)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r15,0	 # move reg to reg
	l.ori   	r2,r16,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__adddf3	# delay slot filled
	l.ori   	r6,r12,0	 # move reg to reg
	l.sw    	16(r1),r11	 # SI store
	l.sw    	20(r1),r12	 # SI store
	l.sfeqi	r30,0
.L6136:
	l.bnf	.L6053	# delay slot filled
	l.lwz   	r7,56(r1)	 # SI load
.L6135:
	l.lwz   	r2,48(r7)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L6132	# delay slot filled
	l.lwz   	r2,28(r1)	 # SI load
.L6003:
	l.lwz   	r5,152(r1)	 # SI load
.L6141:
	l.lwz   	r6,84(r1)	 # SI load
	l.lwz   	r2,0(r5)	 # SI load
	l.or    	r2,r2,r6
	l.sw    	0(r5),r2	 # SI store
.L5977:
	l.addi	r1,r1,152
.L6128:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L6009:
	l.lwz   	r22,0(r22)	 # SI load
	l.jal   	__floatunsidf	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r17,40(r1)	 # SI load
	l.lwz   	r15,24(r1)	 # SI load
	l.ori   	r3,r17,0	 # move reg to reg
	l.ori   	r2,r15,0	 # move reg to reg
	l.ori   	r14,r15,0	 # move reg to reg
	l.ori   	r15,r17,0	 # move reg to reg
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.sw    	44(r1),r11	 # SI store
	l.jal   	__adddf3	# delay slot filled
	l.sw    	48(r1),r12	 # SI store
	l.lwz   	r16,44(r1)	 # SI load
	l.lwz   	r2,48(r1)	 # SI load
	l.ori   	r14,r16,0	 # move reg to reg
	l.ori   	r15,r2,0	 # move reg to reg
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bf	.L6011	# delay slot filled
	l.srli  	r3,r22,1
	l.j     	.L6010	# delay slot filled
	l.sw    	36(r1),r20	 # SI store
.L6068:
	l.ori   	r18,r17,0	 # move reg to reg
.L6020:
	l.sub   	r2,r0,r18
.L6142:
	l.or    	r2,r2,r18
	l.srli  	r2,r2,31
	l.sw    	104(r1),r2	 # SI store
.L6035:
	l.sfeqi	r30,0
	l.bnf	.L6111	# delay slot filled
	l.movhi 	r6,hi(16777216)	 # move immediate M
	l.movhi 	r30,hi(16908288)	 # move immediate M
.L6051:
	l.sfeqi	r2,0
	l.bf	.L6133	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
	l.movhi 	r7,hi(33554432)	 # move immediate M
	l.or    	r30,r30,r7
.L6053:
	l.lwz   	r6,56(r1)	 # SI load
.L6133:
	l.lwz   	r17,36(r6)	 # SI load
	l.sfltsi	r17,0
	l.bf	.L6042	# delay slot filled
	l.lwz   	r18,40(r6)	 # SI load
	l.lwz   	r7,28(r1)	 # SI load
	l.lwz   	r19,4(r7)	 # SI load
	l.sflesi	r19,0
	l.bf	.L6044	# delay slot filled
	l.addi  	r13,r0,0	 # move immediate I
	l.j     	.L6048	# delay slot filled
	l.lwz   	r14,8(r7)	 # SI load
.L6112:
	l.addi  	r2,r0,1	 # move immediate I
	l.sll   	r3,r2,r3
	l.addi  	r2,r0,0	 # move immediate I
.L6047:
	l.xori  	r3,r3,0xffff
	l.xori  	r2,r2,0xffff
	l.and   	r17,r17,r3
	l.and   	r18,r18,r2
.L6045:
	l.addi  	r13,r13,1
	l.sfne 	r13,r19
	l.bnf	.L6044	# delay slot filled
	l.addi  	r14,r14,4
.L6048:
	l.lwz   	r2,0(r14)	 # SI load
	l.sfgtsi	r2,62
	l.bf	.L6045	# delay slot filled
	l.addi  	r3,r2,-32
	l.sfltsi	r3,0
	l.bnf	.L6112
	l.nop			# nop delay slot
	l.addi  	r3,r0,1	 # move immediate I
	l.sll   	r2,r3,r2
	l.j     	.L6047	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L6044:
	l.or    	r2,r17,r18
	l.sfnei	r2,0
	l.bf	.L6134	# delay slot filled
	l.lwz   	r13,16(r1)	 # SI load
	l.lwz   	r15,20(r1)	 # SI load
	l.lwz   	r16,16(r1)	 # SI load
	l.movhi  	r4,hi(.LC185)
	l.ori   	r3,r15,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC185)
	l.movhi 	r7,hi(8388608)	 # move immediate M
	l.ori   	r2,r16,0	 # move reg to reg
		l.lwz   	r5, 0(r4)
		l.lwz   	r6, 4(r4)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__muldf3	# delay slot filled
	l.or    	r30,r30,r7
	l.sw    	16(r1),r11	 # SI store
	l.sw    	20(r1),r12	 # SI store
.L6042:
	l.lwz   	r13,16(r1)	 # SI load
.L6134:
	l.lwz   	r2,20(r1)	 # SI load
	l.lwz   	r7,152(r1)	 # SI load
	l.ori   	r5,r13,0	 # move reg to reg
		l.lwz   	r3, 12(r7)
		l.lwz   	r4, 12+4(r7)
	l.jal   	__gtdf2	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.sfgtsi	r11,0
	l.bnf	.L6135	# delay slot filled
	l.lwz   	r7,56(r1)	 # SI load
	l.lwz   	r4,152(r1)	 # SI load
	l.lwz   	r7,80(r1)	 # SI load
	l.lwz   	r16,16(r1)	 # SI load
	l.lwz   	r15,20(r1)	 # SI load
	l.sw    	4(r4),r7	 # SI store
	l.lwz   	r11,24(r1)	 # SI load
	l.lwz   	r7,28(r1)	 # SI load
	l.lwz   	r12,40(r1)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r15,0	 # move reg to reg
	l.sw    	8(r4),r7	 # SI store
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r12,0	 # move reg to reg
	l.lwz   	r7,56(r1)	 # SI load
		l.sw    	12(r4), r5
		l.sw    	12+4(r4), r6
	l.lwz   	r6,152(r1)	 # SI load
	l.sw    	0(r4),r30	 # SI store
		l.or    	r4, r2, r0
		l.or    	r5, r3, r0
	l.lwz   	r2,48(r7)	 # SI load
		l.sw    	20(r6), r4
		l.sw    	20+4(r6), r5
	l.sfnei	r2,0
	l.bf	.L6003	# delay slot filled
	l.lwz   	r2,28(r1)	 # SI load
.L6132:
	l.lwz   	r2,32(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L6003	# delay slot filled
	l.sw    	28(r1),r2	 # SI store
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r4,4(r4)	 # SI load
	l.sfgtsi	r4,0
	l.bf	.L6049	# delay slot filled
	l.sw    	36(r1),r4	 # SI store
.L6103:
	l.lwz   	r4,28(r1)	 # SI load
	l.addi  	r28,r0,0	 # move immediate I
	l.lwz   	r2,12(r4)	 # SI load
	l.ori   	r30,r28,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	__floatunsidf	# delay slot filled
	l.ori   	r26,r28,0	 # move reg to reg
	l.movhi 	r5,hi(1072693248)	 # move immediate M
	l.sw    	24(r1),r11	 # SI store
	l.sw    	40(r1),r12	 # SI store
	l.sw    	44(r1),r11	 # SI store
	l.sw    	48(r1),r12	 # SI store
	l.sw    	80(r1),r28	 # SI store
	l.sw    	16(r1),r5	 # SI store
	l.j     	.L6010	# delay slot filled
	l.sw    	20(r1),r28	 # SI store
.L6108:
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r2,8(r3)	 # SI load
	l.lwz   	r4,72(r1)	 # SI load
	l.add   	r26,r2,r26
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r20,0(r26)	 # SI load
	l.addi  	r8,r0,60	 # move immediate I
	l.sw    	0(r1),r6	 # SI store
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6016	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r4,72(r1)	 # SI load
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r8,r0,24	 # move immediate I
	l.movhi 	r2,hi(131072)	 # move immediate M
	l.sw    	0(r1),r7	 # SI store
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.or    	r30,r30,r2
	l.sfeqi	r11,0
	l.bf	.L6017	# delay slot filled
	l.movhi  	r4,hi(.LC183)
	l.movhi 	r7,hi(1048576)	 # move immediate M
	l.ori   	r2,r22,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC183)
	l.ori   	r3,r18,0	 # move reg to reg
		l.lwz   	r5, 0(r4)
		l.lwz   	r6, 4(r4)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__divdf3	# delay slot filled
	l.or    	r30,r30,r7
	l.lwz   	r13,40(r1)	 # SI load
	l.lwz   	r14,24(r1)	 # SI load
	l.movhi  	r4,hi(.LC183)
	l.ori   	r3,r13,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC183)
	l.ori   	r2,r14,0	 # move reg to reg
		l.lwz   	r5, 0(r4)
		l.lwz   	r6, 4(r4)
	l.sw    	16(r1),r11	 # SI store
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__divdf3	# delay slot filled
	l.sw    	20(r1),r12	 # SI store
	l.sw    	24(r1),r11	 # SI store
	l.sw    	40(r1),r12	 # SI store
.L6017:
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r4,72(r1)	 # SI load
	l.ori   	r5,r20,0	 # move reg to reg
	l.sw    	0(r1),r6	 # SI store
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.addi  	r8,r0,36	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L6016	# delay slot filled
	l.lwz   	r15,20(r1)	 # SI load
	l.lwz   	r16,16(r1)	 # SI load
	l.movhi  	r7,hi(.LC183)
	l.ori   	r3,r15,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC183)
	l.ori   	r2,r16,0	 # move reg to reg
	l.movhi 	r4,hi(2097152)	 # move immediate M
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.or    	r30,r30,r4
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__divdf3
	l.nop			# nop delay slot
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r13,40(r1)	 # SI load
	l.movhi  	r7,hi(.LC183)
	l.ori   	r2,r5,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC183)
	l.ori   	r3,r13,0	 # move reg to reg
	l.sw    	16(r1),r11	 # SI store
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__divdf3	# delay slot filled
	l.sw    	20(r1),r12	 # SI store
	l.lwz   	r2,68(r1)	 # SI load
	l.sw    	24(r1),r11	 # SI store
	l.sfeqi	r2,0
	l.bnf	.L6113	# delay slot filled
	l.sw    	40(r1),r12	 # SI store
	l.lwz   	r3,88(r1)	 # SI load
.L6130:
	l.movhi 	r4,hi(4194304)	 # move immediate M
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r2,12(r2)	 # SI load
	l.and   	r2,r2,r4
	l.sfeqi	r2,0
	l.bf	.L6136	# delay slot filled
	l.sfeqi	r30,0
	l.movhi 	r5,hi(33554432)	 # move immediate M
	l.j     	.L6053	# delay slot filled
	l.or    	r30,r30,r5
.L6011:
	l.jal   	__floatunsidf	# delay slot filled
	l.sw    	36(r1),r20	 # SI store
	l.ori   	r15,r11,0	 # move reg to reg
	l.ori   	r3,r12,0	 # move reg to reg
	l.ori   	r2,r15,0	 # move reg to reg
	l.sw    	24(r1),r11	 # SI store
	l.sw    	40(r1),r12	 # SI store
		l.lwz   	r5, 60(r1)
		l.lwz   	r6, 60+4(r1)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__divdf3
	l.nop			# nop delay slot
	l.sw    	16(r1),r11	 # SI store
	l.j     	.L6010	# delay slot filled
	l.sw    	20(r1),r12	 # SI store
.L6109:
	l.lwz   	r6,88(r1)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r5,4(r5)	 # SI load
	l.lwz   	r6,0(r6)	 # SI load
	l.lwz   	r7,12(r2)	 # SI load
	l.sw    	36(r1),r4	 # SI store
	l.sw    	100(r1),r5	 # SI store
	l.sw    	96(r1),r6	 # SI store
	l.sflesi	r4,0
	l.bf	.L6068	# delay slot filled
	l.sw    	44(r1),r7	 # SI store
	l.lwz   	r2,28(r1)	 # SI load
	l.lwz   	r20,4(r2)	 # SI load
	l.sfltsi	r20,0
	l.bf	.L6071
	l.nop			# nop delay slot
	l.lwz   	r16,0(r7)	 # SI load
	l.lbz   	r2,0(r16)	 # zero_extendqisi2
	l.sfnei	r2,151
	l.bf	.L6071	# delay slot filled
	l.lwz   	r3,72(r1)	 # SI load
	l.lwz   	r2,36(r16)	 # SI load
	l.sfne 	r3,r2
	l.bf	.L6071	# delay slot filled
	l.ori   	r22,r17,0	 # move reg to reg
	l.ori   	r24,r17,0	 # move reg to reg
	l.sw    	48(r1),r17	 # SI store
	l.sw    	60(r1),r17	 # SI store
	l.lwz   	r14,28(r1)	 # SI load
.L6023:
	l.lwz   	r3,88(r1)	 # SI load
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L6114	# delay slot filled
	l.lwz   	r6,96(r1)	 # SI load
.L6024:
	l.lwz   	r20,4(r14)	 # SI load
	l.sfles 	r20,r22
	l.bf	.L6025	# delay slot filled
	l.ori   	r26,r20,0	 # move reg to reg
	l.lwz   	r8,8(r14)	 # SI load
	l.lwz   	r2,16(r14)	 # SI load
	l.add   	r8,r8,r24
	l.lwz   	r2,8(r2)	 # SI load
	l.lwz   	r12,0(r8)	 # SI load
	l.sfeq 	r12,r2
	l.bf	.L6115
	l.nop			# nop delay slot
.L6026:
	l.lwz   	r8,40(r14)	 # SI load
	l.lwz   	r2,44(r14)	 # SI load
	l.add   	r8,r8,r22
	l.add   	r2,r2,r24
	l.lbz   	r18,0(r8)	 # zero_extendqisi2
	l.lwz   	r4,0(r2)	 # SI load
.L6027:
	l.lwz   	r2,40(r16)	 # SI load
	l.sfne 	r2,r12
	l.bnf	.L6116	# delay slot filled
	l.sflts 	r22,r28
.L6138:
	l.bf	.L6125	# delay slot filled
	l.lwz   	r6,36(r1)	 # SI load
	l.sfeq 	r20,r22
	l.bnf	.L6137	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r2,60(r1)	 # SI load
	l.lwz   	r3,36(r1)	 # SI load
	l.sub   	r7,r0,r2
	l.lwz   	r4,48(r1)	 # SI load
	l.or    	r2,r7,r2
	l.sfles 	r3,r4
	l.srli  	r2,r2,31
	l.bf	.L6035	# delay slot filled
	l.sw    	104(r1),r2	 # SI store
	l.lwz   	r5,28(r1)	 # SI load
	l.lbz   	r2,24(r5)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L6137	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.sfne 	r26,r20
.L6124:
	l.bf	.L6137	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r3,68(r1)	 # SI load
	l.lwz   	r4,92(r1)	 # SI load
	l.lwz   	r5,100(r1)	 # SI load
	l.lwz   	r6,48(r1)	 # SI load
	l.jal   	referencesOtherTables.clone.95	# delay slot filled
	l.lwz   	r7,72(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L6137	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.j     	.L6035	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
.L6116:
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.lwz   	r3,0(r11)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L6138	# delay slot filled
	l.sflts 	r22,r28
	l.lwz   	r7,44(r1)	 # SI load
	l.sfles 	r22,r28
	l.lbz   	r8,8(r7)	 # zero_extendqisi2
	l.bf	.L6033	# delay slot filled
	l.xor   	r18,r18,r8
	l.lwz   	r3,60(r1)	 # SI load
	l.sfne 	r18,r3
	l.bf	.L6137	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
.L6033:
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r5,44(r1)	 # SI load
	l.addi  	r4,r4,1
	l.addi  	r5,r5,16
	l.sw    	48(r1),r4	 # SI store
	l.sw    	44(r1),r5	 # SI store
	l.sfgesi	r2,0
	l.bnf	.L6117	# delay slot filled
	l.sw    	60(r1),r18	 # SI store
	l.lwz   	r6,36(r1)	 # SI load
.L6125:
	l.lwz   	r7,48(r1)	 # SI load
	l.sfles 	r6,r7
	l.bf	.L6076	# delay slot filled
	l.addi  	r22,r22,1
	l.sfges 	r20,r22
	l.bnf	.L6073	# delay slot filled
	l.lwz   	r4,44(r1)	 # SI load
	l.lwz   	r16,0(r4)	 # SI load
	l.lbz   	r2,0(r16)	 # zero_extendqisi2
	l.sfnei	r2,151
	l.bf	.L6073	# delay slot filled
	l.lwz   	r5,72(r1)	 # SI load
	l.lwz   	r2,36(r16)	 # SI load
	l.sfne 	r5,r2
	l.bnf	.L6023	# delay slot filled
	l.addi  	r24,r24,4
.L6073:
	l.ori   	r26,r22,0	 # move reg to reg
.L6021:
	l.lwz   	r6,60(r1)	 # SI load
	l.lwz   	r5,28(r1)	 # SI load
	l.sub   	r7,r0,r6
	l.or    	r2,r7,r6
	l.srli  	r2,r2,31
	l.sw    	104(r1),r2	 # SI store
	l.lbz   	r2,24(r5)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L6137	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.j     	.L6124	# delay slot filled
	l.sfne 	r26,r20
.L6025:
	l.lwz   	r4,0(r11)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
	l.j     	.L6027	# delay slot filled
	l.addi  	r12,r0,-1	 # move immediate I
.L6107:
	l.movhi 	r5,hi(786432)	 # move immediate M
	l.and   	r2,r30,r5
	l.sfnei	r2,0
	l.bf	.L6139	# delay slot filled
	l.lwz   	r2,68(r1)	 # SI load
	l.movhi 	r6,hi(67108864)	 # move immediate M
	l.j     	.L6139	# delay slot filled
	l.or    	r30,r30,r6
.L6093:
	l.movhi 	r24,hi(1072693248)	 # move immediate M
	l.j     	.L6012	# delay slot filled
	l.addi  	r22,r0,0	 # move immediate I
.L6114:
	l.j     	.L6024	# delay slot filled
	l.lwz   	r11,44(r6)	 # SI load
.L6094:
	l.movhi 	r22,hi(1072693248)	 # move immediate M
	l.j     	.L6037	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
.L6115:
	l.j     	.L6026	# delay slot filled
	l.addi  	r12,r0,-1	 # move immediate I
.L5978:
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r2,152(r1)	 # SI load
	l.sw    	0(r2),r3	 # SI store
	l.sw    	4(r2),r3	 # SI store
	l.sw    	8(r2),r3	 # SI store
	l.sw    	12(r2),r3	 # SI store
	l.sw    	16(r2),r3	 # SI store
	l.sw    	20(r2),r3	 # SI store
	l.sw    	24(r2),r3	 # SI store
.L6055:
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,4(r1)	 # SI load
	l.sw    	0(r1),r6	 # SI store
	l.lwz   	r4,72(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r8,r0,63	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	findTerm	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.sfne 	r11,r14
	l.bf	.L6140	# delay slot filled
	l.movhi  	r11,hi(.LC179)
	l.lwz   	r7,68(r1)	 # SI load
	l.sfeq 	r7,r14
	l.bf	.L5980	# delay slot filled
	l.lwz   	r2,4(r1)	 # SI load
	l.lwz   	r3,72(r1)	 # SI load
	l.ori   	r4,r7,0	 # move reg to reg
	l.lwz   	r5,4(r2)	 # SI load
	l.jal   	sortableByRowid	# delay slot filled
	l.addi  	r6,r1,104
	l.sfne 	r11,r14
	l.bf	.L6140	# delay slot filled
	l.movhi  	r11,hi(.LC179)
.L5980:
	l.lwz   	r3,88(r1)	 # SI load
	l.movhi 	r4,hi(4194304)	 # move immediate M
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r2,12(r2)	 # SI load
	l.and   	r2,r2,r4
	l.sfeqi	r2,0
	l.bf	.L5977	# delay slot filled
	l.lwz   	r5,152(r1)	 # SI load
	l.movhi 	r6,hi(33554432)	 # move immediate M
	l.lwz   	r2,0(r5)	 # SI load
	l.or    	r2,r2,r6
	l.j     	.L5977	# delay slot filled
	l.sw    	0(r5),r2	 # SI store
.L6102:
	l.lwz   	r6,56(r1)	 # SI load
	l.addi  	r5,r0,3	 # move immediate I
	l.lwz   	r6,48(r6)	 # SI load
	l.sw    	84(r1),r5	 # SI store
	l.sfeqi	r6,0
	l.bnf	.L6119	# delay slot filled
	l.sw    	28(r1),r6	 # SI store
.L6000:
	l.sfnei	r14,0
	l.bnf	.L6141	# delay slot filled
	l.lwz   	r5,152(r1)	 # SI load
	l.movhi  	r3,hi(.LC177)
	l.movhi  	r4,hi(.LC176)
	l.ori   	r3,r3,lo(.LC177)
	l.ori   	r4,r4,lo(.LC176)
	l.sw    	28(r1),r14	 # SI store
	l.sw    	76(r1),r3	 # SI store
	l.j     	.L6001	# delay slot filled
	l.sw    	52(r1),r4	 # SI store
.L6111:
	l.j     	.L6051	# delay slot filled
	l.or    	r30,r30,r6
.L6117:
	l.lwz   	r3,68(r1)	 # SI load
	l.lwz   	r4,92(r1)	 # SI load
	l.lwz   	r5,100(r1)	 # SI load
	l.lwz   	r6,48(r1)	 # SI load
	l.jal   	referencesOtherTables.clone.95	# delay slot filled
	l.lwz   	r7,72(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L6142	# delay slot filled
	l.sub   	r2,r0,r18
	l.j     	.L6125	# delay slot filled
	l.lwz   	r6,36(r1)	 # SI load
.L6101:
	l.lwz   	r4,72(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.sw    	0(r1),r2	 # SI store
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.addi  	r8,r0,3	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L5983	# delay slot filled
	l.addi  	r7,r0,4096	 # move immediate I
	l.lhz   	r2,16(r11)	 # zero_extendqisi2
	l.lwz   	r6,152(r1)	 # SI load
	l.andi  	r2,r2,2
	l.sfeqi	r2,0
	l.bnf	.L6120	# delay slot filled
	l.sw    	0(r6),r7	 # SI store
	l.lwz   	r2,0(r11)	 # SI load
	l.lhz   	r18,2(r2)	 # zero_extendqisi2
	l.andi  	r18,r18,4096
	l.sfnei	r18,0
	l.bf	.L5985
	l.nop			# nop delay slot
	l.lwz   	r2,28(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L5985	# delay slot filled
	l.movhi  	r4,hi(.LC176)
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r4,r4,lo(.LC176)
	l.jal   	__floatsidf	# delay slot filled
	l.sw    	52(r1),r4	 # SI store
	l.lwz   	r7,52(r1)	 # SI load
	l.lwz   	r2,152(r1)	 # SI load
		l.sw    	28(r1), r11
		l.sw    	28+4(r1), r12
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
		l.sw    	20(r2), r11
		l.sw    	20+4(r2), r12
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L6091	# delay slot filled
	l.movhi  	r3,hi(.LC177)
	l.movhi 	r20,hi(1076101120)	 # move immediate M
	l.ori   	r3,r3,lo(.LC177)
	l.movhi 	r24,hi(1072693248)	 # move immediate M
	l.sw    	76(r1),r3	 # SI store
	l.ori   	r22,r18,0	 # move reg to reg
	l.movhi  	r4,hi(.LC177)
.L6143:
	l.ori   	r2,r24,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC177)
	l.ori   	r3,r22,0	 # move reg to reg
		l.lwz   	r5, 0(r4)
		l.lwz   	r6, 4(r4)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__adddf3	# delay slot filled
	l.ori   	r2,r20,0	 # move reg to reg
	l.movhi  	r7,hi(.LC176)
	l.ori   	r7,r7,lo(.LC176)
	l.ori   	r3,r18,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.ori   	r24,r11,0	 # move reg to reg
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r22,r12,0	 # move reg to reg
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r6,r12,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
		l.lwz   	r3, 28(r1)
		l.lwz   	r4, 28+4(r1)
	l.jal   	__gtdf2	# delay slot filled
	l.ori   	r18,r12,0	 # move reg to reg
	l.sfgtsi	r11,0
	l.bf	.L6143	# delay slot filled
	l.movhi  	r4,hi(.LC177)
.L5986:
	l.ori   	r12,r24,0	 # move reg to reg
	l.ori   	r13,r22,0	 # move reg to reg
		l.lwz   	r3, 28(r1)
		l.lwz   	r4, 28+4(r1)
		l.or    	r5, r12, r0
		l.or    	r6, r13, r0
	l.jal   	__muldf3
	l.nop			# nop delay slot
	l.lwz   	r2,152(r1)	 # SI load
		l.sw    	12(r2), r11
		l.sw    	12+4(r2), r12
	l.j     	.L6126	# delay slot filled
	l.sfeqi	r14,0
.L5985:
	l.movhi  	r2,hi(.LC181)
	l.lwz   	r5,152(r1)	 # SI load
	l.ori   	r2,r2,lo(.LC181)
		l.lwz   	r3, 0(r2)
		l.lwz   	r4, 4(r2)
	l.movhi  	r2,hi(.LC182)
		l.sw    	20(r5), r3
		l.sw    	20+4(r5), r4
	l.ori   	r2,r2,lo(.LC182)
		l.lwz   	r6, 0(r2)
		l.lwz   	r7, 4(r2)
		l.sw    	12(r5), r6
		l.sw    	12+4(r5), r7
.L5983:
	l.sfeqi	r14,0
.L6126:
	l.bf	.L6060	# delay slot filled
	l.movhi  	r2,hi(.LC178)
	l.lwz   	r2,12(r14)	 # SI load
	l.jal   	__floatunsidf	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r18,r12,0	 # move reg to reg
.L5989:
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r4,72(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.sw    	0(r1),r6	 # SI store
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.addi  	r8,r0,60	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L5990	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r4,72(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r8,r0,24	 # move immediate I
	l.sw    	0(r1),r7	 # SI store
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.addi  	r22,r0,8192	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L5991	# delay slot filled
	l.movhi  	r7,hi(.LC183)
	l.ori   	r2,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC183)
	l.movhi 	r22,hi(1048576)	 # move immediate M
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__divdf3	# delay slot filled
	l.ori   	r22,r22,8192
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r18,r12,0	 # move reg to reg
.L5991:
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r4,72(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.sw    	0(r1),r2	 # SI store
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.addi  	r8,r0,36	 # move immediate I
	l.sfeq 	r11,r2
	l.bf	.L5990	# delay slot filled
	l.movhi  	r7,hi(.LC183)
	l.ori   	r2,r20,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC183)
	l.ori   	r3,r18,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.movhi 	r7,hi(2097152)	 # move immediate M
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__divdf3	# delay slot filled
	l.or    	r22,r22,r7
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r18,r12,0	 # move reg to reg
.L5990:
	l.lwz   	r2,68(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L5992	# delay slot filled
	l.lwz   	r6,4(r1)	 # SI load
	l.lwz   	r3,72(r1)	 # SI load
	l.lwz   	r5,4(r6)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sortableByRowid	# delay slot filled
	l.addi  	r6,r1,104
	l.sfnei	r11,0
	l.bnf	.L6121	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.movhi 	r5,hi(16777216)	 # move immediate M
	l.lwz   	r2,104(r1)	 # SI load
	l.ori   	r5,r5,8192
	l.sfeqi	r2,0
	l.bf	.L6064	# delay slot filled
	l.or    	r22,r22,r5
	l.movhi 	r6,hi(33554432)	 # move immediate M
	l.ori   	r24,r20,0	 # move reg to reg
	l.or    	r22,r22,r6
	l.j     	.L5996	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
.L6121:
	l.movhi  	r4,hi(.LC176)
	l.ori   	r2,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC176)
	l.ori   	r3,r18,0	 # move reg to reg
	l.sw    	52(r1),r4	 # SI store
		l.lwz   	r5, 0(r4)
		l.lwz   	r6, 4(r4)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L6122	# delay slot filled
	l.movhi  	r7,hi(.LC177)
	l.movhi 	r26,hi(1076101120)	 # move immediate M
	l.ori   	r7,r7,lo(.LC177)
	l.movhi 	r30,hi(1072693248)	 # move immediate M
	l.sw    	76(r1),r7	 # SI store
	l.ori   	r28,r24,0	 # move reg to reg
	l.movhi  	r2,hi(.LC177)
.L6144:
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r2,r2,lo(.LC177)
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
	l.jal   	__adddf3	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.movhi  	r7,hi(.LC176)
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC176)
	l.ori   	r4,r24,0	 # move reg to reg
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.ori   	r30,r11,0	 # move reg to reg
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r28,r12,0	 # move reg to reg
	l.ori   	r26,r11,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r5,r26,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r6,r12,0	 # move reg to reg
	l.jal   	__gtdf2	# delay slot filled
	l.ori   	r24,r12,0	 # move reg to reg
	l.sfgtsi	r11,0
	l.bf	.L6144	# delay slot filled
	l.movhi  	r2,hi(.LC177)
.L5995:
	l.ori   	r2,r20,0	 # move reg to reg
	l.ori   	r11,r30,0	 # move reg to reg
	l.ori   	r12,r28,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__muldf3
	l.nop			# nop delay slot
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r12,0	 # move reg to reg
	l.ori   	r11,r20,0	 # move reg to reg
	l.ori   	r12,r18,0	 # move reg to reg
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r2,r12,0	 # move reg to reg
.L5996:
	l.ori   	r15,r24,0	 # move reg to reg
	l.lwz   	r6,152(r1)	 # SI load
	l.ori   	r16,r2,0	 # move reg to reg
		l.lwz   	r3, 12(r6)
		l.lwz   	r4, 12+4(r6)
		l.or    	r5, r15, r0
		l.or    	r6, r16, r0
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L5982	# delay slot filled
	l.lwz   	r7,152(r1)	 # SI load
	l.ori   	r15,r24,0	 # move reg to reg
	l.ori   	r11,r20,0	 # move reg to reg
	l.ori   	r12,r18,0	 # move reg to reg
	l.sw    	0(r7),r22	 # SI store
		l.sw    	12(r7), r15
		l.sw    	12+4(r7), r16
		l.sw    	20(r7), r11
		l.sw    	20+4(r7), r12
	l.j     	.L6127	# delay slot filled
	l.lwz   	r3,88(r1)	 # SI load
.L6071:
	l.sw    	48(r1),r17	 # SI store
	l.sw    	60(r1),r17	 # SI store
	l.j     	.L6021	# delay slot filled
	l.ori   	r26,r17,0	 # move reg to reg
.L6120:
	l.movhi 	r2,hi(67108864)	 # move immediate M
	l.ori   	r5,r6,0	 # move reg to reg
	l.or    	r2,r2,r7
	l.sw    	0(r6),r2	 # SI store
	l.addi  	r2,r0,1	 # move immediate I
	l.sw    	4(r6),r2	 # SI store
	l.movhi  	r2,hi(.LC180)
	l.ori   	r2,r2,lo(.LC180)
		l.lwz   	r3, 0(r2)
		l.lwz   	r4, 4(r2)
	l.movhi  	r2,hi(.LC177)
		l.sw    	12(r6), r3
		l.sw    	12+4(r6), r4
	l.ori   	r2,r2,lo(.LC177)
		l.lwz   	r6, 0(r2)
		l.lwz   	r7, 4(r2)
		l.sw    	20(r5), r6
		l.sw    	20+4(r5), r7
	l.j     	.L6128	# delay slot filled
	l.addi	r1,r1,152
.L6064:
	l.ori   	r24,r20,0	 # move reg to reg
	l.j     	.L5996	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
.L5992:
	l.lwz   	r3,88(r1)	 # SI load
	l.movhi 	r4,hi(4194304)	 # move immediate M
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r2,12(r2)	 # SI load
	l.and   	r2,r2,r4
	l.sfeqi	r2,0
	l.bf	.L6064	# delay slot filled
	l.movhi 	r5,hi(33554432)	 # move immediate M
	l.ori   	r24,r20,0	 # move reg to reg
	l.or    	r22,r22,r5
	l.j     	.L5996	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
.L6076:
	l.j     	.L6020	# delay slot filled
	l.lwz   	r18,60(r1)	 # SI load
.L6060:
	l.ori   	r18,r14,0	 # move reg to reg
	l.ori   	r2,r2,lo(.LC178)
	l.j     	.L5989	# delay slot filled
	l.lwz   	r20,0(r2)	 # SI load
.L6091:
	l.movhi 	r24,hi(1072693248)	 # move immediate M
	l.j     	.L5986	# delay slot filled
	l.ori   	r22,r18,0	 # move reg to reg
.L6122:
	l.movhi 	r30,hi(1072693248)	 # move immediate M
	l.j     	.L5995	# delay slot filled
	l.ori   	r28,r24,0	 # move reg to reg
.LFE1156:
	.size	bestBtreeIndex, .-bestBtreeIndex
	.align	4
.proc	bestIndex.clone.181
	.type	bestIndex.clone.181, @function
bestIndex.clone.181:
.LFB1426:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2322:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2323:
	l.lwz   	r11,12(r5)	 # SI load
	l.addi  	r1,r1,-20
.LCFI2324:
	l.lbz   	r12,34(r11)	 # zero_extendqisi2
	l.andi  	r12,r12,16
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r12,0
	l.bf	.L6146	# delay slot filled
	l.ori   	r11,r8,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.sw    	0(r1),r11	 # SI store
	l.addi  	r11,r1,8
	l.sw    	8(r1),r8	 # SI store
	l.jal   	bestVirtualIndex	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
	l.lwz   	r4,8(r1)	 # SI load
	l.lwz   	r3,28(r4)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L6149
	l.nop			# nop delay slot
.L6147:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L6146:
	l.ori   	r8,r12,0	 # move reg to reg
	l.jal   	bestBtreeIndex	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L6149:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,24(r4)	 # SI load
	l.j     	.L6147	# delay slot filled
	l.lwz   	r4,8(r1)	 # SI load
.LFE1426:
	.size	bestIndex.clone.181, .-bestIndex.clone.181
	.global __ledf2
	.section	.rodata
	.align	4
.LC187:
	.long	1076101120
	.long	0
	.align	4
.LC188:
	.long	1072693248
	.long	0
	.section .text
	.align	4
.proc	bestOrClauseIndex
	.type	bestOrClauseIndex, @function
bestOrClauseIndex:
.LFB1152:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2325:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2326:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2327:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2328:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2329:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2330:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2331:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2332:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2333:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2334:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2335:
	l.addi  	r1,r1,-320
.LCFI2336:
	l.lwz   	r11,4(r4)	 # SI load
	l.lwz   	r2,24(r5)	 # SI load
	l.sw    	32(r1),r4	 # SI store
	l.sw    	56(r1),r3	 # SI store
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r13,0(r11)	 # SI load
	l.sw    	28(r1),r5	 # SI store
	l.sw    	20(r1),r6	 # SI store
	l.sw    	24(r1),r7	 # SI store
	l.sw    	52(r1),r8	 # SI store
	l.sw    	48(r1),r2	 # SI store
		l.sw    	12(r1), r3
		l.sw    	12+4(r1), r4
	l.sflesi	r13,0
	l.bf	.L6151	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r2,4(r11)	 # SI load
	l.sfeq 	r4,r2
	l.bf	.L6186	# delay slot filled
	l.addi  	r11,r11,8
	l.j     	.L6154	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L6157:
	l.lwz   	r3,0(r11)	 # SI load
	l.sfne 	r4,r3
	l.bnf	.L6187	# delay slot filled
	l.addi  	r11,r11,4
.L6154:
	l.addi  	r2,r2,1
	l.sflts 	r2,r13
	l.bf	.L6157	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
		l.sw    	12(r1), r3
		l.sw    	12+4(r1), r4
.L6151:
	l.lwz   	r4,32(r1)	 # SI load
.L6193:
	l.lwz   	r2,12(r4)	 # SI load
	l.lwz   	r18,20(r4)	 # SI load
	l.slli  	r11,r2,3
	l.slli  	r2,r2,5
	l.add   	r2,r11,r2
	l.add   	r2,r18,r2
	l.sfgeu 	r18,r2
	l.bf	.L6150	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r5,12(r1)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.xori  	r5,r5,0xffff
	l.xori  	r6,r6,0xffff
	l.sw    	40(r1),r5	 # SI store
	l.j     	.L6178	# delay slot filled
	l.sw    	44(r1),r6	 # SI store
.L6159:
	l.addi  	r18,r18,40
.L6192:
	l.lwz   	r2,0(r1)	 # SI load
	l.sfgtu 	r2,r18
	l.bnf	.L6150
	l.nop			# nop delay slot
.L6178:
	l.lhz   	r2,16(r18)	 # zero_extendqisi2
	l.sfnei	r2,256
	l.bf	.L6159	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r11,32(r18)	 # SI load
	l.lwz   	r2,36(r18)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.and   	r11,r11,r3
	l.and   	r2,r2,r4
	l.lwz   	r5,40(r1)	 # SI load
	l.lwz   	r6,44(r1)	 # SI load
	l.and   	r11,r11,r5
	l.and   	r2,r2,r6
	l.or    	r11,r11,r2
	l.sfnei	r11,0
	l.bf	.L6159	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r2,12(r18)	 # SI load
	l.lwz   	r8,184(r2)	 # SI load
	l.lwz   	r4,188(r2)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.and   	r8,r8,r3
	l.and   	r4,r4,r5
	l.or    	r4,r8,r4
	l.sfeqi	r4,0
	l.bf	.L6159
	l.nop			# nop delay slot
	l.lwz   	r4,12(r2)	 # SI load
	l.lwz   	r16,20(r2)	 # SI load
	l.slli  	r2,r4,3
	l.slli  	r4,r4,5
	l.add   	r4,r2,r4
	l.add   	r20,r16,r4
	l.sfltu 	r16,r20
	l.bnf	.L6188	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sw    	60(r1),r18	 # SI store
	l.ori   	r26,r11,0	 # move reg to reg
	l.ori   	r28,r11,0	 # move reg to reg
	l.sw    	36(r1),r11	 # SI store
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r24,48(r1)	 # SI load
	l.lwz   	r18,56(r1)	 # SI load
	l.j     	.L6166	# delay slot filled
	l.lwz   	r22,32(r1)	 # SI load
.L6163:
	l.lwz   	r2,8(r16)	 # SI load
	l.sfne 	r2,r24
	l.bnf	.L6189	# delay slot filled
	l.addi  	r8,r1,248
	l.addi  	r16,r16,40
.L6194:
	l.sfgtu 	r20,r16
	l.bnf	.L6190	# delay slot filled
	l.lwz   	r6,320(r1)	 # SI load
.L6166:
	l.lhz   	r2,16(r16)	 # zero_extendqisi2
	l.sfnei	r2,512
	l.bf	.L6163	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,12(r16)	 # SI load
	l.lwz   	r5,28(r1)	 # SI load
	l.lwz   	r6,20(r1)	 # SI load
	l.lwz   	r7,24(r1)	 # SI load
	l.jal   	bestIndex.clone.181	# delay slot filled
	l.addi  	r8,r1,248
	l.ori   	r2,r14,0	 # move reg to reg
.L6191:
	l.ori   	r3,r30,0	 # move reg to reg
		l.lwz   	r5, 260(r1)
		l.lwz   	r6, 260+4(r1)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__adddf3	# delay slot filled
	l.ori   	r2,r26,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
		l.lwz   	r5, 268(r1)
		l.lwz   	r6, 268+4(r1)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__adddf3	# delay slot filled
	l.ori   	r30,r12,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r4,320(r1)	 # SI load
	l.ori   	r6,r30,0	 # move reg to reg
		l.lwz   	r3, 12(r4)
		l.lwz   	r4, 12+4(r4)
	l.ori   	r26,r11,0	 # move reg to reg
		l.sw    	4(r1), r3
		l.sw    	4+4(r1), r4
	l.jal   	__ledf2	# delay slot filled
	l.ori   	r28,r12,0	 # move reg to reg
	l.sflesi	r11,0
	l.bnf	.L6194	# delay slot filled
	l.addi  	r16,r16,40
	l.addi  	r16,r16,-40
	l.lwz   	r18,60(r1)	 # SI load
	l.j     	.L6162	# delay slot filled
	l.sw    	36(r1),r14	 # SI store
.L6189:
	l.lwz   	r2,4(r22)	 # SI load
	l.lwz   	r11,0(r22)	 # SI load
	l.sw    	68(r1),r2	 # SI store
	l.addi  	r2,r0,67	 # movqi: move immediate
	l.lwz   	r7,24(r1)	 # SI load
	l.sb    	72(r1),r2	    # movqi
	l.addi  	r2,r0,1	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r1,64
	l.lwz   	r5,28(r1)	 # SI load
	l.lwz   	r6,20(r1)	 # SI load
	l.sw    	84(r1),r16	 # SI store
	l.sw    	64(r1),r11	 # SI store
	l.jal   	bestIndex.clone.181	# delay slot filled
	l.sw    	76(r1),r2	 # SI store
	l.j     	.L6191	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
.L6150:
	l.addi	r1,r1,320
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L6190:
	l.lwz   	r18,60(r1)	 # SI load
	l.sw    	36(r1),r14	 # SI store
		l.lwz   	r5, 12(r6)
		l.lwz   	r6, 12+4(r6)
		l.sw    	4(r1), r5
		l.sw    	4+4(r1), r6
.L6162:
	l.lwz   	r2,52(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L6167	# delay slot filled
	l.movhi  	r4,hi(.LC187)
	l.ori   	r2,r26,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC187)
	l.ori   	r3,r28,0	 # move reg to reg
		l.lwz   	r5, 0(r4)
		l.lwz   	r6, 4(r4)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L6184	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.movhi 	r20,hi(1076101120)	 # move immediate M
	l.movhi 	r22,hi(1072693248)	 # move immediate M
	l.ori   	r24,r16,0	 # move reg to reg
	l.movhi  	r2,hi(.LC188)
.L6195:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r2,r2,lo(.LC188)
	l.ori   	r4,r24,0	 # move reg to reg
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
	l.jal   	__adddf3	# delay slot filled
	l.movhi  	r2,hi(.LC187)
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r2,r2,lo(.LC187)
	l.ori   	r22,r11,0	 # move reg to reg
		l.lwz   	r5, 0(r2)
		l.lwz   	r6, 4(r2)
	l.jal   	__muldf3	# delay slot filled
	l.ori   	r24,r12,0	 # move reg to reg
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r6,r12,0	 # move reg to reg
	l.jal   	__gtdf2	# delay slot filled
	l.ori   	r16,r12,0	 # move reg to reg
	l.sfgtsi	r11,0
	l.bf	.L6195	# delay slot filled
	l.movhi  	r2,hi(.LC188)
.L6168:
	l.ori   	r17,r28,0	 # move reg to reg
	l.ori   	r15,r24,0	 # move reg to reg
	l.ori   	r16,r26,0	 # move reg to reg
	l.ori   	r14,r22,0	 # move reg to reg
		l.or    	r3, r16, r0
		l.or    	r4, r17, r0
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.jal   	__muldf3
	l.nop			# nop delay slot
	l.lwz   	r15,36(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r2,r15,0	 # move reg to reg
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.sw    	36(r1),r11	 # SI store
	l.ori   	r30,r12,0	 # move reg to reg
.L6167:
	l.lwz   	r14,36(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r2,r14,0	 # move reg to reg
		l.lwz   	r5, 4(r1)
		l.lwz   	r6, 4+4(r1)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bnf	.L6159	# delay slot filled
	l.lwz   	r2,36(r1)	 # SI load
	l.lwz   	r4,320(r1)	 # SI load
	l.ori   	r14,r2,0	 # move reg to reg
	l.movhi 	r5,hi(268435456)	 # move immediate M
	l.ori   	r2,r26,0	 # move reg to reg
	l.ori   	r15,r30,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r6,320(r1)	 # SI load
	l.sw    	0(r4),r5	 # SI store
	l.sw    	8(r4),r18	 # SI store
		l.sw    	12(r4), r14
		l.sw    	12+4(r4), r15
		l.or    	r4, r2, r0
		l.or    	r5, r3, r0
		l.sw    	20(r6), r4
		l.sw    	20+4(r6), r5
	l.j     	.L6192	# delay slot filled
	l.addi  	r18,r18,40
.L6187:
	l.addi  	r11,r2,-32
	l.sfltsi	r11,0
	l.bf	.L6155	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
	l.sll   	r2,r2,r11
	l.sw    	16(r1),r5	 # SI store
	l.j     	.L6151	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L6155:
	l.addi  	r11,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.sll   	r11,r11,r2
	l.sw    	12(r1),r6	 # SI store
	l.j     	.L6151	# delay slot filled
	l.sw    	16(r1),r11	 # SI store
.L6184:
	l.movhi 	r22,hi(1072693248)	 # move immediate M
	l.j     	.L6168	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
.L6186:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r3,r0,1	 # move immediate I
		l.sw    	12(r1), r2
		l.sw    	12+4(r1), r3
	l.j     	.L6193	# delay slot filled
	l.lwz   	r4,32(r1)	 # SI load
.L6188:
	l.lwz   	r3,320(r1)	 # SI load
	l.ori   	r26,r11,0	 # move reg to reg
		l.lwz   	r2, 12(r3)
		l.lwz   	r3, 12+4(r3)
	l.ori   	r28,r11,0	 # move reg to reg
		l.sw    	4(r1), r2
		l.sw    	4+4(r1), r3
	l.sw    	36(r1),r11	 # SI store
	l.j     	.L6162	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.LFE1152:
	.size	bestOrClauseIndex, .-bestOrClauseIndex
	.section	.rodata.str1.1
.LC189:
	.string	"out of memory"
.LC191:
	.string	"table %s: xBestIndex returned an invalid plan"
	.section	.rodata
	.align	4
.LC190:
	.long	1416446638
	.long	2726797102
	.section .text
	.align	4
.proc	bestVirtualIndex
	.type	bestVirtualIndex, @function
bestVirtualIndex:
.LFB1155:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2337:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2338:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2339:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2340:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2341:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2342:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2343:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2344:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2345:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2346:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2347:
	l.addi  	r1,r1,-72
.LCFI2348:
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r22,72(r1)	 # SI load
	l.sw    	12(r1),r5	 # SI store
	l.lwz   	r16,76(r1)	 # SI load
	l.lwz   	r20,12(r5)	 # SI load
	l.sw    	4(r22),r2	 # SI store
	l.sw    	8(r22),r2	 # SI store
	l.sw    	12(r22),r2	 # SI store
	l.sw    	16(r22),r2	 # SI store
	l.sw    	20(r22),r2	 # SI store
	l.sw    	24(r22),r2	 # SI store
	l.movhi 	r2,hi(134217728)	 # move immediate M
	l.ori   	r24,r3,0	 # move reg to reg
	l.sw    	0(r22),r2	 # SI store
	l.lwz   	r2,0(r16)	 # SI load
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r26,r6,0	 # move reg to reg
	l.ori   	r28,r7,0	 # move reg to reg
	l.sfnei	r2,0
	l.bnf	.L6244	# delay slot filled
	l.ori   	r30,r8,0	 # move reg to reg
.L6197:
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r11,4(r2)	 # SI load
	l.sflesi	r4,0
	l.bf	.L6212	# delay slot filled
	l.lwz   	r3,16(r2)	 # SI load
	l.addi  	r11,r11,8
	l.addi  	r12,r0,0	 # move immediate I
.L6213:
	l.lwz   	r4,0(r11)	 # SI load
	l.lwz   	r6,20(r18)	 # SI load
	l.slli  	r14,r4,3
	l.slli  	r4,r4,5
	l.addi  	r12,r12,1
	l.add   	r13,r14,r4
	l.add   	r13,r6,r13
	l.lwz   	r4,28(r13)	 # SI load
	l.lwz   	r14,24(r13)	 # SI load
	l.and   	r4,r4,r28
	l.and   	r13,r14,r26
	l.or    	r4,r13,r4
	l.sub   	r13,r0,r4
	l.or    	r4,r13,r4
	l.xori  	r4,r4,0xffff
	l.srli  	r4,r4,31
	l.sb    	-3(r11),r4	    # movqi
	l.lwz   	r4,0(r2)	 # SI load
	l.sfgts 	r4,r12
	l.bf	.L6213	# delay slot filled
	l.addi  	r11,r11,12
.L6212:
	l.slli  	r5,r4,3
	l.jal   	memset	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,28(r2)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L6245
	l.nop			# nop delay slot
	l.movhi  	r4,hi(.LC190)
.L6254:
	l.addi  	r12,r0,0	 # move immediate I
	l.lwz   	r5,8(r2)	 # SI load
	l.ori   	r4,r4,lo(.LC190)
	l.sw    	24(r2),r12	 # SI store
	l.sw    	20(r2),r12	 # SI store
	l.sw    	28(r2),r12	 # SI store
	l.sw    	32(r2),r12	 # SI store
	l.sw    	16(r1),r5	 # SI store
		l.lwz   	r3, 0(r4)
		l.lwz   	r4, 4(r4)
		l.sw    	36(r2), r3
		l.sw    	36+4(r2), r4
	l.sfne 	r30,r12
	l.bnf	.L6246
	l.nop			# nop delay slot
.L6215:
	l.lwz   	r14,56(r20)	 # SI load
	l.addi  	r20,r20,4
	l.lwz   	r5,0(r14)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r11,12(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.sw    	4(r1),r20	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L6247	# delay slot filled
	l.sfnei	r11,7
.L6216:
	l.lwz   	r3,0(r24)	 # SI load
.L6252:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,8(r14)	 # SI load
	l.addi  	r12,r0,0	 # move immediate I
	l.lwz   	r11,0(r2)	 # SI load
	l.sfles 	r11,r12
	l.bf	.L6220	# delay slot filled
	l.sw    	8(r14),r12	 # SI store
	l.ori   	r20,r12,0	 # move reg to reg
	l.ori   	r16,r12,0	 # move reg to reg
	l.ori   	r14,r12,0	 # move reg to reg
.L6222:
	l.lwz   	r3,4(r2)	 # SI load
	l.addi  	r14,r14,1
	l.add   	r3,r3,r16
	l.lbz   	r3,5(r3)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L6221	# delay slot filled
	l.addi  	r16,r16,12
	l.lwz   	r6,16(r2)	 # SI load
	l.movhi  	r4,hi(.LC191)
	l.add   	r6,r6,r20
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r6,0(r6)	 # SI load
	l.sflesi	r6,0
	l.bf	.L6221	# delay slot filled
	l.ori   	r4,r4,lo(.LC191)
	l.lwz   	r6,4(r1)	 # SI load
	l.lwz   	r5,0(r6)	 # SI load
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r11,0(r2)	 # SI load
.L6221:
	l.sflts 	r14,r11
	l.bf	.L6222	# delay slot filled
	l.addi  	r20,r20,8
.L6220:
	l.lwz   	r3,64(r24)	 # SI load
	l.sfnei	r3,0
	l.bf	.L6196
	l.nop			# nop delay slot
		l.lwz   	r3, 36(r2)
		l.lwz   	r4, 36+4(r2)
		l.sw    	4(r1), r3
		l.sw    	4+4(r1), r4
	l.movhi  	r4,hi(.LC190)
	l.ori   	r4,r4,lo(.LC190)
		l.lwz   	r5, 0(r4)
		l.lwz   	r6, 4(r4)
		l.lwz   	r3, 4(r1)
		l.lwz   	r4, 4+4(r1)
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bf	.L6248	# delay slot filled
	l.movhi  	r3,hi(.LC190)
		l.lwz   	r6, 4(r1)
		l.lwz   	r7, 4+4(r1)
		l.sw    	12(r22), r6
		l.sw    	12+4(r22), r7
	l.lwz   	r3,32(r2)	 # SI load
.L6253:
	l.sfeqi	r3,0
	l.bf	.L6226	# delay slot filled
	l.sw    	8(r22),r2	 # SI store
	l.lwz   	r3,0(r22)	 # SI load
	l.movhi 	r7,hi(16777216)	 # move immediate M
	l.or    	r3,r3,r7
	l.sw    	0(r22),r3	 # SI store
.L6226:
	l.addi  	r12,r0,0	 # move immediate I
	l.lwz   	r3,16(r1)	 # SI load
	l.sw    	4(r22),r12	 # SI store
	l.sw    	8(r2),r3	 # SI store
	l.sw    	72(r1),r22	 # SI store
	l.lwz   	r5,12(r1)	 # SI load
	l.addi	r1,r1,72
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r7,r28,0	 # move reg to reg
	l.ori   	r8,r30,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	bestOrClauseIndex	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L6247:
	l.bnf	.L6249	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.lwz   	r5,8(r14)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L6250	# delay slot filled
	l.andi  	r11,r11,255
.L6218:
	l.movhi  	r4,hi(.LC78)
.L6255:
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC78)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.j     	.L6252	# delay slot filled
	l.lwz   	r3,0(r24)	 # SI load
.L6248:
	l.ori   	r3,r3,lo(.LC190)
		l.lwz   	r5, 0(r3)
		l.lwz   	r6, 4(r3)
		l.sw    	12(r22), r5
		l.sw    	12+4(r22), r6
	l.j     	.L6253	# delay slot filled
	l.lwz   	r3,32(r2)	 # SI load
.L6251:
	l.movhi  	r4,hi(.LC189)
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC189)
	l.sw    	0(r16),r2	 # SI store
.L6196:
	l.addi	r1,r1,72
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L6245:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,24(r2)	 # SI load
	l.j     	.L6254	# delay slot filled
	l.movhi  	r4,hi(.LC190)
.L6246:
	l.j     	.L6215	# delay slot filled
	l.sw    	8(r2),r30	 # SI store
.L6249:
	l.lwz   	r3,0(r24)	 # SI load
	l.j     	.L6216	# delay slot filled
	l.sb    	30(r3),r6	    # movqi
.L6250:
	l.movhi  	r5,hi(.LC124)
	l.sfgtui	r11,26
	l.bf	.L6218	# delay slot filled
	l.ori   	r5,r5,lo(.LC124)
	l.movhi  	r7,hi(aMsg.21565)
	l.slli  	r3,r11,2
	l.ori   	r7,r7,lo(aMsg.21565)
	l.add   	r3,r3,r7
	l.lwz   	r5,0(r3)	 # SI load
	l.sfeqi	r5,0
	l.bnf	.L6255	# delay slot filled
	l.movhi  	r4,hi(.LC78)
	l.movhi  	r5,hi(.LC124)
	l.j     	.L6255	# delay slot filled
	l.ori   	r5,r5,lo(.LC124)
.L6244:
	l.addi  	r3,r18,12
	l.addi  	r5,r5,24
	l.lwz   	r4,12(r4)	 # SI load
	l.sw    	4(r1),r3	 # SI store
	l.sw    	16(r1),r5	 # SI store
	l.sw    	20(r1),r2	 # SI store
	l.sflesi	r4,0
	l.bf	.L6198	# delay slot filled
	l.lwz   	r3,20(r18)	 # SI load
	l.lwz   	r6,12(r1)	 # SI load
	l.addi  	r2,r3,8
	l.lwz   	r5,24(r6)	 # SI load
	l.j     	.L6200	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
.L6199:
	l.sfne 	r3,r4
.L6256:
	l.bnf	.L6198	# delay slot filled
	l.addi  	r2,r2,40
.L6200:
	l.lwz   	r6,0(r2)	 # SI load
	l.sfne 	r6,r5
	l.bf	.L6199	# delay slot filled
	l.addi  	r3,r3,1
	l.lhz   	r6,8(r2)	 # zero_extendqisi2
	l.andi  	r6,r6,129
	l.sfnei	r6,0
	l.bf	.L6256	# delay slot filled
	l.sfne 	r3,r4
	l.lwz   	r7,20(r1)	 # SI load
	l.addi  	r7,r7,1
	l.j     	.L6199	# delay slot filled
	l.sw    	20(r1),r7	 # SI store
.L6198:
	l.sfeqi	r30,0
	l.bf	.L6228
	l.nop			# nop delay slot
	l.lwz   	r14,0(r30)	 # SI load
	l.sflesi	r14,0
	l.bf	.L6202	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r3,12(r30)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.lbz   	r4,0(r2)	 # zero_extendqisi2
	l.sfnei	r4,151
	l.bf	.L6230	# delay slot filled
	l.lwz   	r12,12(r1)	 # SI load
	l.lwz   	r6,36(r2)	 # SI load
	l.lwz   	r2,24(r12)	 # SI load
	l.sfne 	r6,r2
	l.bf	.L6231	# delay slot filled
	l.addi  	r3,r3,16
	l.j     	.L6203	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L6204:
	l.lwz   	r4,0(r3)	 # SI load
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.sfnei	r5,151
	l.bf	.L6234	# delay slot filled
	l.addi  	r3,r3,16
	l.lwz   	r4,36(r4)	 # SI load
	l.sfne 	r4,r6
	l.bf	.L6234
	l.nop			# nop delay slot
.L6203:
	l.addi  	r2,r2,1
	l.sflts 	r2,r14
	l.bf	.L6204
	l.nop			# nop delay slot
.L6202:
	l.sfne 	r14,r2
	l.bf	.L6234
	l.nop			# nop delay slot
	l.slli  	r2,r14,3
	l.sw    	24(r1),r2	 # SI store
.L6201:
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r6,24(r1)	 # SI load
	l.slli  	r2,r5,4
	l.slli  	r4,r5,2
	l.lwz   	r3,0(r24)	 # SI load
	l.add   	r4,r4,r2
	l.addi  	r4,r4,44
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.add   	r4,r4,r6
	l.sfnei	r11,0
	l.bnf	.L6251	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r7,20(r1)	 # SI load
	l.addi  	r8,r2,44
	l.add   	r11,r7,r7
	l.lwz   	r12,24(r1)	 # SI load
	l.add   	r11,r11,r7
	l.lwz   	r4,12(r18)	 # SI load
	l.slli  	r11,r11,2
	l.sw    	0(r2),r7	 # SI store
	l.sw    	8(r2),r14	 # SI store
	l.add   	r11,r8,r11
	l.sw    	4(r2),r8	 # SI store
	l.add   	r3,r11,r12
	l.sw    	12(r2),r11	 # SI store
	l.sw    	16(r2),r3	 # SI store
	l.sflesi	r4,0
	l.bf	.L6207	# delay slot filled
	l.lwz   	r3,20(r18)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r3,8
	l.j     	.L6209	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
.L6208:
	l.lwz   	r7,4(r1)	 # SI load
.L6257:
	l.addi  	r4,r4,1
	l.lwz   	r6,0(r7)	 # SI load
	l.sflts 	r4,r6
	l.bnf	.L6207	# delay slot filled
	l.addi  	r3,r3,40
.L6209:
	l.lwz   	r12,16(r1)	 # SI load
	l.lwz   	r7,0(r3)	 # SI load
	l.lwz   	r6,0(r12)	 # SI load
	l.sfne 	r7,r6
	l.bf	.L6257	# delay slot filled
	l.lwz   	r7,4(r1)	 # SI load
	l.lhz   	r7,8(r3)	 # zero_extendqisi2
	l.add   	r6,r5,r5
	l.andi  	r12,r7,129
	l.add   	r6,r6,r5
	l.sfnei	r12,0
	l.bf	.L6208	# delay slot filled
	l.slli  	r6,r6,2
	l.lwz   	r12,4(r3)	 # SI load
	l.add   	r6,r8,r6
	l.addi  	r5,r5,1
	l.sw    	8(r6),r4	 # SI store
	l.sw    	0(r6),r12	 # SI store
	l.j     	.L6208	# delay slot filled
	l.sb    	4(r6),r7	    # movqi
.L6207:
	l.sfeqi	r14,0
	l.bf	.L6210	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
.L6211:
	l.lwz   	r6,12(r30)	 # SI load
	l.addi  	r5,r5,1
	l.add   	r6,r6,r4
	l.sfne 	r5,r14
	l.lwz   	r7,0(r6)	 # SI load
	l.addi  	r4,r4,16
	l.lwz   	r7,40(r7)	 # SI load
	l.sw    	0(r3),r7	 # SI store
	l.lbz   	r6,8(r6)	 # zero_extendqisi2
	l.sb    	4(r3),r6	    # movqi
	l.bf	.L6211	# delay slot filled
	l.addi  	r3,r3,8
.L6210:
	l.j     	.L6197	# delay slot filled
	l.sw    	0(r16),r2	 # SI store
.L6234:
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L6201	# delay slot filled
	l.sw    	24(r1),r14	 # SI store
.L6228:
	l.sw    	24(r1),r30	 # SI store
	l.j     	.L6201	# delay slot filled
	l.ori   	r14,r30,0	 # move reg to reg
.L6231:
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	24(r1),r4	 # SI store
	l.j     	.L6201	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
.L6230:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	24(r1),r3	 # SI store
	l.j     	.L6201	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
.LFE1155:
	.size	bestVirtualIndex, .-bestVirtualIndex
	.section	.rodata
	.align	4
.LC192:
	.long	-1008730112
	.long	0
	.align	4
.LC193:
	.long	1138753536
	.long	0
	.section .text
	.align	4
.proc	applyAffinity
	.type	applyAffinity, @function
applyAffinity:
.LFB688:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2349:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2350:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2351:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2352:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r4,97
.LCFI2353:
	l.bnf	.L6267	# delay slot filled
	l.addi  	r1,r1,-32
	l.sfeqi	r4,98
	l.bf	.L6258
	l.nop			# nop delay slot
	l.jal   	applyNumericAffinity
	l.nop			# nop delay slot
	l.lhz   	r16,28(r2)	 # zero_extendqisi2
	l.andi  	r3,r16,8
	l.sfeqi	r3,0
	l.bf	.L6258	# delay slot filled
	l.movhi  	r14,hi(.LC192)
		l.lwz   	r3, 8(r2)
		l.lwz   	r4, 8+4(r2)
	l.ori   	r14,r14,lo(.LC192)
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
		l.lwz   	r5, 0(r14)
		l.lwz   	r6, 4(r14)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bnf	.L6268	# delay slot filled
	l.movhi  	r5,hi(.LC193)
	l.movhi 	r3,hi(-2147483648)	 # move immediate M
.L6269:
	l.addi  	r4,r0,0	 # move immediate I
		l.lwz   	r5, 0(r14)
		l.lwz   	r6, 4(r14)
		l.sw    	8(r1), r3
		l.sw    	8+4(r1), r4
.L6262:
		l.lwz   	r3, 8(r1)
		l.lwz   	r4, 8+4(r1)
		l.sw    	0(r2), r3
		l.sw    	4(r2), r4
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
	l.jal   	__eqdf2
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bnf	.L6258
	l.nop			# nop delay slot
	l.ori   	r16,r16,4
	l.sh    	28(r2),r16	 # movhi
.L6258:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L6267:
	l.lhz   	r4,28(r3)	 # zero_extendqisi2
	l.andi  	r6,r4,2
	l.sfnei	r6,0
	l.bf	.L6260	# delay slot filled
	l.andi  	r6,r4,12
	l.sfeqi	r6,0
	l.bf	.L6260
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeMemStringify	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.lhz   	r4,28(r2)	 # zero_extendqisi2
.L6260:
	l.addi  	r3,r0,-13	 # move immediate I
	l.and   	r4,r4,r3
	l.sh    	28(r2),r4	 # movhi
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L6268:
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
	l.ori   	r5,r5,lo(.LC193)
		l.lwz   	r6, 4(r5)
		l.lwz   	r5, 0(r5)
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bf	.L6269	# delay slot filled
	l.movhi 	r3,hi(-2147483648)	 # move immediate M
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
		l.sw    	8(r1), r11
		l.sw    	8+4(r1), r12
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__floatdidf
	l.nop			# nop delay slot
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.j     	.L6262
	l.nop			# nop delay slot
.LFE688:
	.size	applyAffinity, .-applyAffinity
	.align	4
.proc	sqlite3ValueFromExpr
	.type	sqlite3ValueFromExpr, @function
sqlite3ValueFromExpr:
.LFB540:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2354:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2355:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2356:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2357:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2358:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI2359:
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	-28(r1),r14	 # SI store
.LCFI2360:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2361:
	l.addi  	r1,r1,-36
.LCFI2362:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sw    	0(r1),r4	 # SI store
	l.ori   	r22,r7,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfne 	r2,r4
	l.bnf	.L6287	# delay slot filled
	l.ori   	r18,r6,0	 # move reg to reg
	l.lbz   	r14,0(r2)	 # zero_extendqisi2
	l.sfeqi	r14,130
	l.bf	.L6273	# delay slot filled
	l.xori  	r4,r14,94
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.xori  	r4,r4,0xffff
	l.srli  	r4,r4,31
	l.sfnei	r4,0
	l.bf	.L6273	# delay slot filled
	l.sfnei	r14,129
	l.bnf	.L6273	# delay slot filled
	l.sfnei	r14,91
	l.bnf	.L6288	# delay slot filled
	l.sfnei	r14,131
	l.bnf	.L6289	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
.L6280:
	l.sw    	0(r22),r18	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
.L6272:
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L6273:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,8(r2)	 # SI load
	l.ori   	r6,r6,65535
	l.lwz   	r4,4(r2)	 # SI load
	l.and   	r5,r5,r6
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ValueNew	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sub   	r4,r0,r11
	l.sw    	0(r1),r11	 # SI store
	l.or    	r4,r11,r4
	l.sfgesi	r4,0
	l.bnf	.L6290	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
.L6275:
	l.addi  	r6,r0,1	 # movqi: move immediate
.L6292:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.sb    	30(r16),r6	    # movqi
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.jal   	sqlite3ValueFree	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.addi  	r11,r0,7	 # move immediate I
	l.j     	.L6272	# delay slot filled
	l.sw    	0(r22),r2	 # SI store
.L6287:
	l.sw    	0(r7),r2	 # SI store
	l.j     	.L6272	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
.L6289:
	l.jal   	sqlite3ValueNew
	l.nop			# nop delay slot
	l.sw    	0(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L6285	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.lwz   	r3,8(r2)	 # SI load
	l.ori   	r5,r5,65535
	l.lwz   	r4,4(r2)	 # SI load
	l.and   	r2,r3,r5
	l.addi  	r4,r4,2
	l.addi  	r2,r2,-3
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3HexToBlob	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.srli  	r4,r2,31
	l.movhi  	r7,hi(sqlite3DbFree)
	l.ori   	r6,r18,0	 # move reg to reg
	l.add   	r2,r4,r2
	l.ori   	r3,r14,0	 # move reg to reg
	l.srai  	r5,r2,1
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemSetStr	# delay slot filled
	l.ori   	r7,r7,lo(sqlite3DbFree)
.L6286:
	l.j     	.L6280	# delay slot filled
	l.lwz   	r18,0(r1)	 # SI load
.L6290:
	l.sub   	r24,r0,r2
	l.or    	r24,r2,r24
	l.xori  	r24,r24,0xffff
	l.srli  	r24,r24,31
	l.sfnei	r24,0
	l.bf	.L6292	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.movhi  	r7,hi(sqlite3DbFree)
	l.ori   	r5,r2,0	 # move reg to reg
	l.xori  	r2,r18,98
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r7,lo(sqlite3DbFree)
	l.jal   	sqlite3ValueSetStr	# delay slot filled
	l.addi  	r2,r2,-1
	l.sfgesi	r2,0
	l.bf	.L6293	# delay slot filled
	l.slli  	r4,r18,24
	l.addi  	r14,r14,-129
	l.sfleui	r14,1
	l.bf	.L6277	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.ori   	r2,r24,0	  # movqi: move reg to reg
.L6277:
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L6276	# delay slot filled
	l.slli  	r4,r18,24
	l.lwz   	r3,0(r1)	 # SI load
	l.addi  	r4,r0,99	 # move immediate I
	l.jal   	applyAffinity	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.sfnei	r20,1
.L6291:
	l.bnf	.L6286
	l.nop			# nop delay slot
	l.lwz   	r3,0(r1)	 # SI load
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L6280	# delay slot filled
	l.lwz   	r18,0(r1)	 # SI load
.L6288:
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3ValueFromExpr	# delay slot filled
	l.ori   	r7,r1,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L6280	# delay slot filled
	l.lwz   	r18,0(r1)	 # SI load
	l.addi  	r3,r0,1	 # move immediate I
	l.lwz   	r2,4(r18)	 # SI load
	l.sub   	r2,r0,r2
	l.sfgtui	r2,0
	l.bf	.L6283	# delay slot filled
	l.lwz   	r5,0(r18)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
.L6283:
	l.lwz   	r4,8(r18)	 # SI load
	l.sub   	r5,r0,r5
	l.movhi 	r6,hi(-2147483648)	 # move immediate M
	l.sub   	r3,r5,r3
	l.add   	r4,r4,r6
	l.sw    	4(r18),r2	 # SI store
	l.sw    	0(r18),r3	 # SI store
	l.j     	.L6280	# delay slot filled
	l.sw    	8(r18),r4	 # SI store
.L6285:
	l.j     	.L6275	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L6276:
.L6293:
	l.lwz   	r3,0(r1)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	applyAffinity	# delay slot filled
	l.srai  	r4,r4,24
	l.j     	.L6291	# delay slot filled
	l.sfnei	r20,1
.LFE540:
	.size	sqlite3ValueFromExpr, .-sqlite3ValueFromExpr
	.align	4
.proc	sqlite3ColumnDefault.clone.135
	.type	sqlite3ColumnDefault.clone.135, @function
sqlite3ColumnDefault.clone.135:
.LFB1383:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2363:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2364:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r5,0
.LCFI2365:
	l.bnf	.L6296	# delay slot filled
	l.addi  	r1,r1,-12
.L6294:
	l.addi	r1,r1,12
.L6297:
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L6296:
	l.slli  	r5,r6,2
	l.slli  	r6,r6,4
	l.lwz   	r3,0(r3)	 # SI load
	l.ori   	r7,r1,0	 # move reg to reg
	l.add   	r6,r5,r6
	l.lwz   	r5,8(r3)	 # SI load
	l.add   	r4,r4,r6
	l.lwz   	r5,20(r5)	 # SI load
	l.lbz   	r6,18(r4)	 # zero_extendqisi2
	l.lbz   	r5,57(r5)	 # zero_extendqisi2
	l.jal   	sqlite3ValueFromExpr	# delay slot filled
	l.lwz   	r4,4(r4)	 # SI load
	l.lwz   	r5,0(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L6294
	l.nop			# nop delay slot
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-8	 # move immediate I
	l.j     	.L6297	# delay slot filled
	l.addi	r1,r1,12
.LFE1383:
	.size	sqlite3ColumnDefault.clone.135, .-sqlite3ColumnDefault.clone.135
	.align	4
.proc	sqlite3_aggregate_context
	.global sqlite3_aggregate_context
	.type	sqlite3_aggregate_context, @function
sqlite3_aggregate_context:
.LFB641:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2366:
	l.lwz   	r2,248(r3)	 # SI load
	l.sw    	-12(r1),r16	 # SI store
.LCFI2367:
	l.lhz   	r16,28(r2)	 # zero_extendqisi2
	l.sw    	-16(r1),r14	 # SI store
.LCFI2368:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2369:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2370:
	l.andi  	r16,r16,8192
	l.addi  	r1,r1,-20
.LCFI2371:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r16,0
	l.bnf	.L6303	# delay slot filled
	l.ori   	r18,r4,0	 # move reg to reg
	l.sfnei	r4,0
	l.bnf	.L6304	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r4,r0,8192	 # movhi: move immediate
	l.lwz   	r11,20(r2)	 # SI load
	l.sh    	28(r2),r4	 # movhi
	l.sfeqi	r11,0
	l.bf	.L6300	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
.L6303:
	l.lwz   	r11,20(r2)	 # SI load
.L6300:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L6304:
	l.jal   	sqlite3VdbeMemReleaseExternal	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.sw    	20(r2),r18	 # SI store
	l.sh    	28(r2),r3	 # movhi
	l.addi	r1,r1,20
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE641:
	.size	sqlite3_aggregate_context, .-sqlite3_aggregate_context
	.align	4
.proc	groupConcatFinalize
	.type	groupConcatFinalize, @function
groupConcatFinalize:
.LFB975:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2372:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2373:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-8
.LCFI2374:
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6305
	l.nop			# nop delay slot
	l.lbz   	r3,26(r11)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L6309	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,24(r11)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L6310
	l.nop			# nop delay slot
	l.jal   	sqlite3StrAccumFinish	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.movhi  	r6,hi(sqlite3_free)
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r6,r6,lo(sqlite3_free)
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L6310:
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_result_error_nomem	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L6309:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_result_error_toobig	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L6305:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE975:
	.size	groupConcatFinalize, .-groupConcatFinalize
	.section	.rodata.str1.1
.LC194:
	.string	","
	.section .text
	.align	4
.proc	groupConcatStep
	.type	groupConcatStep, @function
groupConcatStep:
.LFB974:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2375:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2376:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2377:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2378:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2379:
	l.ori   	r2,r5,0	 # move reg to reg
	l.lwz   	r5,0(r5)	 # SI load
	l.ori   	r16,r4,0	 # move reg to reg
	l.lbz   	r4,30(r5)	 # zero_extendqisi2
	l.addi  	r1,r1,-20
.LCFI2380:
	l.sfeqi	r4,5
	l.bf	.L6311	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.addi  	r4,r0,28	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L6311	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.lwz   	r3,24(r18)	 # SI load
	l.sb    	25(r11),r4	    # movqi
	l.lwz   	r4,80(r3)	 # SI load
	l.lwz   	r3,248(r18)	 # SI load
	l.sw    	20(r11),r4	 # SI store
	l.lwz   	r3,24(r3)	 # SI load
	l.sflesi	r3,1
	l.bf	.L6313	# delay slot filled
	l.sfnei	r16,2
	l.bnf	.L6316
	l.nop			# nop delay slot
	l.movhi  	r16,hi(.LC194)
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r16,r16,lo(.LC194)
.L6314:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.L6313:
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi	r1,r1,20
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3StrAccumAppend	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L6311:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L6316:
	l.addi  	r18,r2,4
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r3,0(r18)	 # SI load
	l.lwz   	r3,0(r18)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.j     	.L6314	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
.LFE974:
	.size	groupConcatStep, .-groupConcatStep
	.align	4
.proc	countFinalize
	.type	countFinalize, @function
countFinalize:
.LFB971:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2381:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2382:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-16
.LCFI2383:
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.sfeqi	r11,0
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.bf	.L6318
	l.nop			# nop delay slot
		l.lwz   	r3, 0(r11)
		l.lwz   	r4, 4(r11)
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
.L6318:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r2,8
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r4,r0,4	 # movhi: move immediate
	l.sb    	38(r2),r3	    # movqi
	l.sh    	36(r2),r4	 # movhi
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
		l.sw    	8(r2), r3
		l.sw    	8+4(r2), r4
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE971:
	.size	countFinalize, .-countFinalize
	.align	4
.proc	countStep
	.type	countStep, @function
countStep:
.LFB970:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2384:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2385:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2386:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI2387:
	l.addi  	r4,r0,8	 # move immediate I
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L6325	# delay slot filled
	l.sfeqi	r11,0
	l.lwz   	r2,0(r14)	 # SI load
	l.lbz   	r2,30(r2)	 # zero_extendqisi2
	l.sfeqi	r2,5
	l.bf	.L6320	# delay slot filled
	l.sfeqi	r11,0
.L6325:
	l.bf	.L6320
	l.nop			# nop delay slot
	l.lwz   	r5,4(r11)	 # SI load
	l.lwz   	r2,0(r11)	 # SI load
	l.addi  	r3,r5,1
	l.sfltu 	r3,r5
	l.bnf	.L6324	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L6323:
	l.add   	r4,r4,r2
	l.sw    	4(r11),r3	 # SI store
	l.sw    	0(r11),r4	 # SI store
.L6320:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L6324:
	l.j     	.L6323	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.LFE970:
	.size	countStep, .-countStep
	.align	4
.proc	avgFinalize
	.type	avgFinalize, @function
avgFinalize:
.LFB968:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2388:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2389:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2390:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-12
.LCFI2391:
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6326	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,16(r11)	 # SI load
	l.sfgtsi	r3,0
	l.bnf	.L6330	# delay slot filled
	l.lwz   	r4,20(r11)	 # SI load
.L6329:
	l.jal   	__floatdidf	# delay slot filled
	l.addi  	r14,r14,8
		l.lwz   	r3, 0(r2)
		l.lwz   	r4, 4(r2)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__divdf3
	l.nop			# nop delay slot
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
		l.or    	r4, r11, r0
		l.or    	r5, r12, r0
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3VdbeMemSetDouble	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L6330:
	l.sfnei	r3,0
	l.bf	.L6326	# delay slot filled
	l.sfnei	r4,0
	l.bf	.L6329
	l.nop			# nop delay slot
.L6326:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE968:
	.size	avgFinalize, .-avgFinalize
	.section	.rodata
	.align	4
.LC195:
	.long	0
	.long	0
	.section .text
	.align	4
.proc	totalFinalize
	.type	totalFinalize, @function
totalFinalize:
.LFB969:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2392:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2393:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-8
.LCFI2394:
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6333	# delay slot filled
	l.addi  	r3,r2,8
		l.lwz   	r4, 0(r11)
		l.lwz   	r5, 4(r11)
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetDouble	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L6333:
	l.movhi  	r3,hi(.LC195)
	l.addi	r1,r1,8
	l.ori   	r3,r3,lo(.LC195)
	l.lwz   	r9,-4(r1)	 # SI load
		l.lwz   	r4, 0(r3)
		l.lwz   	r5, 4(r3)
	l.addi  	r3,r2,8
	l.j	sqlite3VdbeMemSetDouble	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE969:
	.size	totalFinalize, .-totalFinalize
	.align	4
.proc	sumFinalize
	.type	sumFinalize, @function
sumFinalize:
.LFB967:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2395:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2396:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-16
.LCFI2397:
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6334
	l.nop			# nop delay slot
	l.lwz   	r3,16(r11)	 # SI load
	l.sfgtsi	r3,0
	l.bnf	.L6340	# delay slot filled
	l.sfnei	r3,0
	l.lbz   	r3,24(r11)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L6341
	l.nop			# nop delay slot
.L6337:
	l.lbz   	r3,25(r11)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L6342	# delay slot filled
	l.addi  	r3,r2,8
		l.lwz   	r4, 8(r11)
		l.lwz   	r5, 8+4(r11)
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r2,8
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r5,r0,4	 # movhi: move immediate
	l.sb    	38(r2),r3	    # movqi
	l.sh    	36(r2),r5	 # movhi
		l.lwz   	r4, 0(r1)
		l.lwz   	r5, 4(r1)
		l.sw    	8(r2), r4
		l.sw    	8+4(r2), r5
.L6334:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L6342:
		l.lwz   	r4, 0(r11)
		l.lwz   	r5, 4(r11)
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeMemSetDouble	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L6340:
	l.bf	.L6334
	l.nop			# nop delay slot
	l.lwz   	r3,20(r11)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L6334
	l.nop			# nop delay slot
	l.lbz   	r3,24(r11)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L6337
	l.nop			# nop delay slot
.L6341:
	l.addi	r1,r1,16
	l.movhi  	r4,hi(.LC130)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC130)
	l.addi  	r5,r0,-1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3_result_error	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE967:
	.size	sumFinalize, .-sumFinalize
	.align	4
.proc	sumStep
	.type	sumStep, @function
sumStep:
.LFB966:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2398:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2399:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2400:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2401:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2402:
	l.addi  	r4,r0,28	 # move immediate I
	l.addi  	r1,r1,-28
.LCFI2403:
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.lwz   	r3,0(r16)	 # SI load
	l.jal   	sqlite3_value_numeric_type	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sub   	r3,r0,r2
	l.or    	r3,r2,r3
	l.sfgesi	r3,0
	l.bf	.L6343	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.xori  	r3,r11,5
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L6343
	l.nop			# nop delay slot
	l.lwz   	r6,20(r2)	 # SI load
	l.lwz   	r5,16(r2)	 # SI load
	l.addi  	r3,r6,1
	l.sfltu 	r3,r6
	l.bnf	.L6348	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.add   	r4,r4,r5
	l.sw    	20(r2),r3	 # SI store
	l.sfnei	r14,1
	l.bnf	.L6349	# delay slot filled
	l.sw    	16(r2),r4	 # SI store
.L6346:
	l.lwz   	r3,0(r16)	 # SI load
		l.lwz   	r4, 0(r2)
		l.lwz   	r5, 4(r2)
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.jal   	sqlite3VdbeRealValue
	l.nop			# nop delay slot
		l.lwz   	r3, 0(r1)
		l.lwz   	r4, 4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.addi  	r5,r0,1	 # movqi: move immediate
		l.sw    	0(r2), r11
		l.sw    	4(r2), r12
	l.sb    	25(r2),r5	    # movqi
.L6343:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L6348:
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	20(r2),r3	 # SI store
	l.add   	r4,r4,r5
	l.sfnei	r14,1
	l.bf	.L6346	# delay slot filled
	l.sw    	16(r2),r4	 # SI store
.L6349:
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	__floatdidf	# delay slot filled
	l.ori   	r18,r12,0	 # move reg to reg
		l.lwz   	r3, 0(r2)
		l.lwz   	r4, 4(r2)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.lbz   	r4,24(r2)	 # zero_extendqisi2
	l.lbz   	r3,25(r2)	 # zero_extendqisi2
	l.or    	r3,r4,r3
		l.sw    	0(r2), r11
		l.sw    	4(r2), r12
	l.sfnei	r3,0
	l.bf	.L6343
	l.nop			# nop delay slot
	l.lwz   	r4,12(r2)	 # SI load
	l.add   	r4,r18,r4
	l.sfltu 	r4,r18
	l.bnf	.L6350	# delay slot filled
	l.lwz   	r5,8(r2)	 # SI load
.L6347:
	l.add   	r3,r16,r5
	l.srai  	r5,r5,31
	l.add   	r14,r14,r3
	l.srai  	r16,r16,31
	l.srai  	r3,r14,31
	l.sw    	8(r2),r14	 # SI store
	l.or    	r6,r16,r5
	l.and   	r16,r16,r5
	l.xori  	r5,r6,0xffff
	l.xori  	r6,r3,0xffff
	l.and   	r3,r5,r3
	l.and   	r16,r16,r6
	l.sw    	12(r2),r4	 # SI store
	l.or    	r3,r3,r16
	l.srli  	r3,r3,31
	l.j     	.L6343	# delay slot filled
	l.sb    	24(r2),r3	    # movqi
.L6350:
	l.j     	.L6347	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
.LFE966:
	.size	sumStep, .-sumStep
	.align	4
.proc	minMaxFinalize
	.type	minMaxFinalize, @function
minMaxFinalize:
.LFB973:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2404:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2405:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2406:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-12
.LCFI2407:
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6351	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhz   	r4,28(r11)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bnf	.L6354	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3VdbeMemRelease	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L6354:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3_result_value	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3VdbeMemRelease	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L6351:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE973:
	.size	minMaxFinalize, .-minMaxFinalize
	.align	4
.proc	minmaxStep
	.type	minmaxStep, @function
minmaxStep:
.LFB972:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2408:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2409:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2410:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2411:
	l.lwz   	r14,0(r5)	 # SI load
	l.addi  	r1,r1,-16
.LCFI2412:
	l.lbz   	r2,30(r14)	 # zero_extendqisi2
	l.sfeqi	r2,5
	l.bf	.L6355	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.jal   	sqlite3_aggregate_context	# delay slot filled
	l.addi  	r4,r0,240	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L6355	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhz   	r3,28(r11)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L6357	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r4,0(r16)	 # SI load
	l.lwz   	r5,256(r16)	 # SI load
	l.lwz   	r6,4(r4)	 # SI load
	l.sub   	r7,r0,r6
	l.ori   	r4,r14,0	 # move reg to reg
	l.or    	r6,r6,r7
	l.jal   	sqlite3MemCompare	# delay slot filled
	l.srli  	r16,r6,31
	l.sfgesi	r11,0
	l.bnf	.L6361	# delay slot filled
	l.sfnei	r16,0
.L6360:
	l.sflesi	r11,0
	l.bnf	.L6362	# delay slot filled
	l.sfnei	r16,0
.L6355:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L6362:
	l.bf	.L6355
	l.nop			# nop delay slot
.L6357:
	l.addi	r1,r1,16
.L6363:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3VdbeMemCopy	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L6361:
	l.bnf	.L6360
	l.nop			# nop delay slot
	l.j     	.L6363	# delay slot filled
	l.addi	r1,r1,16
.LFE972:
	.size	minmaxStep, .-minmaxStep
	.align	4
.proc	sqlite3TableLock
	.type	sqlite3TableLock, @function
sqlite3TableLock:
.LFB847:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2413:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2414:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2415:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2416:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2417:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2418:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI2419:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.ori   	r20,r7,0	 # move reg to reg
	l.sfltsi	r4,0
	l.bf	.L6364	# delay slot filled
	l.ori   	r18,r6,0	 # move reg to reg
	l.lwz   	r12,396(r3)	 # SI load
	l.sfgtsi	r12,0
	l.bnf	.L6372	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r4,400(r3)	 # SI load
	l.j     	.L6369	# delay slot filled
	l.ori   	r8,r4,0	 # move reg to reg
.L6368:
	l.sflts 	r11,r12
.L6373:
	l.bnf	.L6367	# delay slot filled
	l.addi  	r8,r8,16
.L6369:
	l.lwz   	r13,0(r8)	 # SI load
	l.sfne 	r13,r2
	l.bf	.L6368	# delay slot filled
	l.addi  	r11,r11,1
	l.lwz   	r3,4(r8)	 # SI load
	l.sfne 	r3,r16
	l.bf	.L6373	# delay slot filled
	l.sflts 	r11,r12
	l.lbz   	r2,8(r8)	 # zero_extendqisi2
	l.or    	r2,r18,r2
	l.sub   	r2,r0,r2
	l.srli  	r2,r2,31
	l.sb    	8(r8),r2	    # movqi
.L6364:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L6372:
	l.lwz   	r4,400(r3)	 # SI load
.L6367:
	l.addi  	r5,r12,1
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3DbReallocOrFree	# delay slot filled
	l.slli  	r5,r5,4
	l.sfeqi	r11,0
	l.bf	.L6370	# delay slot filled
	l.sw    	400(r14),r11	 # SI store
	l.lwz   	r3,396(r14)	 # SI load
	l.slli  	r4,r3,4
	l.addi  	r3,r3,1
	l.add   	r11,r11,r4
	l.sw    	396(r14),r3	 # SI store
	l.sb    	8(r11),r18	    # movqi
	l.sw    	0(r11),r2	 # SI store
	l.sw    	4(r11),r16	 # SI store
	l.sw    	12(r11),r20	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L6370:
	l.lwz   	r2,0(r14)	 # SI load
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sw    	396(r14),r11	 # SI store
	l.sb    	30(r2),r3	    # movqi
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE847:
	.size	sqlite3TableLock, .-sqlite3TableLock
	.align	4
.proc	sqlite3VdbeMakeLabel
	.type	sqlite3VdbeMakeLabel, @function
sqlite3VdbeMakeLabel:
.LFB554:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2420:
	l.lwz   	r14,24(r3)	 # SI load
	l.sw    	-12(r1),r2	 # SI store
.LCFI2421:
	l.addi  	r4,r14,1
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI2422:
	l.lwz   	r3,28(r3)	 # SI load
	l.sw    	24(r2),r4	 # SI store
	l.sflts 	r14,r3
.LCFI2423:
	l.bnf	.L6377	# delay slot filled
	l.addi  	r1,r1,-12
.L6375:
	l.lwz   	r2,32(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L6376	# delay slot filled
	l.slli  	r3,r14,2
	l.add   	r2,r2,r3
	l.addi  	r3,r0,-1	 # move immediate I
	l.sw    	0(r2),r3	 # SI store
.L6376:
	l.addi	r1,r1,12
	l.xori  	r11,r14,0xffff
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L6377:
	l.add   	r5,r3,r3
	l.lwz   	r4,32(r2)	 # SI load
	l.addi  	r5,r5,5
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3DbReallocOrFree	# delay slot filled
	l.slli  	r5,r5,2
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3DbMallocSize	# delay slot filled
	l.sw    	32(r2),r11	 # SI store
	l.srli  	r11,r11,2
	l.j     	.L6375	# delay slot filled
	l.sw    	28(r2),r11	 # SI store
.LFE554:
	.size	sqlite3VdbeMakeLabel, .-sqlite3VdbeMakeLabel
	.align	4
.proc	growOpArray
	.type	growOpArray, @function
growOpArray:
.LFB548:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2424:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2425:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2426:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,16(r3)	 # SI load
	l.addi  	r1,r1,-12
.LCFI2427:
	l.sfeqi	r3,0
	l.bf	.L6379	# delay slot filled
	l.addi  	r5,r0,1020	 # move immediate I
	l.add   	r3,r3,r3
	l.slli  	r5,r3,2
	l.slli  	r3,r3,4
	l.add   	r5,r5,r3
.L6379:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L6380	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3DbMallocSize	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r4,r0,20	 # move immediate I
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.sw    	20(r2),r14	 # SI store
	l.sw    	16(r2),r11	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
.L6380:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE548:
	.size	growOpArray, .-growOpArray
	.align	4
.proc	sqlite3VdbeAddOp3
	.type	sqlite3VdbeAddOp3, @function
sqlite3VdbeAddOp3:
.LFB549:
	l.sw    	-28(r1),r2	 # SI store
.LCFI2428:
	l.sw    	-24(r1),r14	 # SI store
.LCFI2429:
	l.sw    	-20(r1),r16	 # SI store
.LCFI2430:
	l.sw    	-16(r1),r18	 # SI store
.LCFI2431:
	l.sw    	-12(r1),r20	 # SI store
.LCFI2432:
	l.sw    	-8(r1),r22	 # SI store
.LCFI2433:
	l.lwz   	r14,12(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI2434:
	l.lwz   	r8,16(r3)	 # SI load
	l.ori   	r22,r4,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI2435:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r18,r6,0	 # move reg to reg
	l.ori   	r16,r7,0	 # move reg to reg
	l.sflts 	r14,r8
	l.bnf	.L6388	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
.L6384:
	l.slli  	r3,r14,4
	l.slli  	r8,r14,2
	l.lwz   	r5,20(r2)	 # SI load
	l.addi  	r4,r4,1
	l.add   	r8,r8,r3
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.add   	r8,r5,r8
	l.sw    	12(r2),r4	 # SI store
	l.sb    	3(r8),r3	    # movqi
	l.addi  	r3,r0,0	 # move immediate I
	l.sb    	0(r8),r22	    # movqi
	l.sw    	4(r8),r20	 # SI store
	l.sw    	8(r8),r18	 # SI store
	l.sw    	12(r8),r16	 # SI store
	l.sw    	16(r8),r3	 # SI store
	l.sb    	1(r8),r3	    # movqi
	l.sb    	126(r2),r3	    # movqi
.L6385:
	l.addi	r1,r1,28
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L6388:
	l.jal   	growOpArray
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L6387
	l.nop			# nop delay slot
	l.j     	.L6384	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
.L6387:
	l.j     	.L6385	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.LFE549:
	.size	sqlite3VdbeAddOp3, .-sqlite3VdbeAddOp3
	.align	4
.proc	sqlite3VdbeAddOp0
	.type	sqlite3VdbeAddOp0, @function
sqlite3VdbeAddOp0:
.LFB550:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2436:
	l.addi  	r1,r1,-4
.LCFI2437:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.ori   	r6,r5,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeAddOp3	# delay slot filled	# sibcall s
	l.ori   	r7,r5,0	 # move reg to reg
.LFE550:
	.size	sqlite3VdbeAddOp0, .-sqlite3VdbeAddOp0
	.align	4
.proc	sqlite3GetVdbe.clone.136
	.type	sqlite3GetVdbe.clone.136, @function
sqlite3GetVdbe.clone.136:
.LFB1384:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2438:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2439:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2440:
	l.lwz   	r2,0(r4)	 # SI load
	l.addi  	r1,r1,-12
.LCFI2441:
	l.sfnei	r2,0
	l.bnf	.L6392	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
.L6391:
	l.addi	r1,r1,12
.L6393:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L6392:
	l.jal   	sqlite3VdbeCreate
	l.nop			# nop delay slot
	l.sw    	0(r14),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L6391	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.addi  	r4,r0,21	 # move immediate I
	l.j     	.L6393	# delay slot filled
	l.addi	r1,r1,12
.LFE1384:
	.size	sqlite3GetVdbe.clone.136, .-sqlite3GetVdbe.clone.136
	.align	4
.proc	sqlite3VdbeAddOp4
	.type	sqlite3VdbeAddOp4, @function
sqlite3VdbeAddOp4:
.LFB553:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2442:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2443:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2444:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2445:
	l.addi  	r1,r1,-16
.LCFI2446:
	l.ori   	r16,r8,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r6,16(r1)	 # SI load
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE553:
	.size	sqlite3VdbeAddOp4, .-sqlite3VdbeAddOp4
	.align	4
.proc	sqlite3Savepoint
	.type	sqlite3Savepoint, @function
sqlite3Savepoint:
.LFB913:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2447:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2448:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2449:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2450:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2451:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI2452:
	l.ori   	r18,r4,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6395	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r2,12
	l.sfeqi	r11,0
	l.bf	.L6397	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.movhi  	r6,hi(az.16235)
	l.slli  	r5,r18,2
	l.ori   	r6,r6,lo(az.16235)
	l.ori   	r3,r2,0	 # move reg to reg
	l.add   	r5,r5,r6
	l.addi  	r4,r0,32	 # move immediate I
	l.ori   	r6,r14,0	 # move reg to reg
	l.lwz   	r5,0(r5)	 # SI load
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L6398	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L6397:
	l.lwz   	r3,0(r2)	 # SI load
	l.addi	r1,r1,24
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L6398:
	l.addi  	r2,r0,-1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,7	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r7,r11,0	 # move reg to reg
	l.ori   	r8,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.L6395:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE913:
	.size	sqlite3Savepoint, .-sqlite3Savepoint
	.align	4
.proc	codeCompare
	.type	codeCompare, @function
codeCompare:
.LFB733:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2453:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2454:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2455:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2456:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2457:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2458:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2459:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2460:
	l.addi  	r1,r1,-36
.LCFI2461:
	l.ori   	r24,r5,0	 # move reg to reg
	l.ori   	r22,r6,0	 # move reg to reg
	l.ori   	r18,r8,0	 # move reg to reg
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r20,r7,0	 # move reg to reg
	l.jal   	sqlite3BinaryCompareCollSeq	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3ExprAffinity	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3CompareAffinity	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r16,40(r1)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.or    	r16,r11,r16
	l.ori   	r8,r14,0	 # move reg to reg
	l.addi  	r11,r0,-4	 # move immediate I
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r6,36(r1)	 # SI load
	l.ori   	r7,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r3,12(r2)	 # SI load
	l.andi  	r16,r16,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L6400	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r4,20(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L6400
	l.nop			# nop delay slot
	l.lwz   	r3,12(r3)	 # SI load
	l.addi  	r3,r3,-1
	l.slli  	r5,r3,2
	l.slli  	r3,r3,4
	l.add   	r3,r5,r3
	l.add   	r4,r4,r3
	l.sb    	3(r4),r16	    # movqi
.L6400:
	l.andi  	r16,r16,103
	l.sfeqi	r16,98
	l.bf	.L6401	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L6401:
	l.addi	r1,r1,36
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.LFE733:
	.size	codeCompare, .-codeCompare
	.align	4
.proc	finalizeAggFunctions.clone.137
	.type	finalizeAggFunctions.clone.137, @function
finalizeAggFunctions.clone.137:
.LFB1385:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2462:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2463:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2464:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2465:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2466:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2467:
	l.lwz   	r2,0(r5)	 # SI load
	l.addi  	r1,r1,-28
.LCFI2468:
	l.ori   	r16,r5,0	 # move reg to reg
	l.sflesi	r2,0
	l.bf	.L6402	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
	l.addi  	r20,r0,-5	 # move immediate I
.L6405:
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r8,28(r4)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,92	 # move immediate I
	l.ori   	r6,r8,0	 # move reg to reg
	l.addi  	r14,r14,1
	l.sfeq 	r8,r7
	l.bf	.L6404	# delay slot filled
	l.lwz   	r5,8(r2)	 # SI load
	l.lwz   	r6,0(r8)	 # SI load
.L6404:
	l.lwz   	r8,4(r2)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r20	 # SI store
	l.lwz   	r3,0(r16)	 # SI load
	l.sflts 	r14,r3
	l.bf	.L6405	# delay slot filled
	l.addi  	r2,r2,16
.L6402:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE1385:
	.size	finalizeAggFunctions.clone.137, .-finalizeAggFunctions.clone.137
	.section	.rodata.str1.1
.LC196:
	.string	"tbl_name=%Q"
	.section .text
	.align	4
.proc	reloadTableSchema
	.type	reloadTableSchema, @function
reloadTableSchema:
.LFB816:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2469:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sw    	-20(r1),r18	 # SI store
.LCFI2470:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2471:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2472:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2473:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2474:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2475:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2476:
	l.ori   	r22,r4,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI2477:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r4,r16,12
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r24,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6408	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r7,72(r22)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L6418	# delay slot filled
	l.lwz   	r3,0(r16)	 # SI load
	l.lwz   	r8,4(r3)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.sfles 	r8,r14
	l.bf	.L6410
	l.nop			# nop delay slot
	l.lwz   	r2,8(r3)	 # SI load
	l.lwz   	r4,20(r2)	 # SI load
	l.sfeq 	r7,r4
	l.bf	.L6410	# delay slot filled
	l.addi  	r2,r2,44
	l.j     	.L6427	# delay slot filled
	l.addi  	r14,r14,1
.L6412:
	l.lwz   	r6,0(r2)	 # SI load
	l.sfeq 	r7,r6
	l.bf	.L6410	# delay slot filled
	l.addi  	r2,r2,24
	l.addi  	r14,r14,1
.L6427:
	l.sflts 	r14,r8
	l.bf	.L6412
	l.nop			# nop delay slot
.L6410:
	l.jal   	sqlite3TriggerList.clone.90	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6413	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.movhi 	r20,hi(-1048576)	 # move immediate M
	l.ori   	r20,r20,48576
.L6424:
	l.lwz   	r8,28(r2)	 # SI load
	l.lwz   	r6,0(r16)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L6414	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.lwz   	r12,4(r6)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.sfles 	r12,r5
	l.bf	.L6426	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r6,8(r6)	 # SI load
	l.lwz   	r3,20(r6)	 # SI load
	l.sfeq 	r8,r3
	l.bf	.L6414	# delay slot filled
	l.addi  	r6,r6,44
	l.j     	.L6428	# delay slot filled
	l.addi  	r5,r5,1
.L6416:
	l.lwz   	r7,0(r6)	 # SI load
	l.sfeq 	r8,r7
	l.bf	.L6414	# delay slot filled
	l.addi  	r6,r6,24
	l.addi  	r5,r5,1
.L6428:
	l.sflts 	r5,r12
	l.bf	.L6416
	l.nop			# nop delay slot
.L6414:
	l.addi  	r3,r0,0	 # move immediate I
.L6426:
	l.addi  	r4,r0,61	 # move immediate I
	l.sw    	0(r1),r3	 # SI store
	l.ori   	r6,r3,0	 # move reg to reg
	l.lwz   	r8,0(r2)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.lwz   	r2,40(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L6424
	l.nop			# nop delay slot
.L6413:
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r8,4(r22)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,69	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.movhi  	r4,hi(.LC196)
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r4,r4,lo(.LC196)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r24	 # SI store
	l.sfeqi	r11,0
	l.bf	.L6408	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,31	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.addi  	r2,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r3,0(r16)	 # SI load
	l.jal   	whereTempTriggers.clone.112	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6408	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,31	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.L6408:
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L6418:
	l.movhi 	r14,hi(-1048576)	 # move immediate M
	l.j     	.L6410	# delay slot filled
	l.ori   	r14,r14,48576
.LFE816:
	.size	reloadTableSchema, .-reloadTableSchema
	.align	4
.proc	sqlite3VdbeAddOp2
	.type	sqlite3VdbeAddOp2, @function
sqlite3VdbeAddOp2:
.LFB552:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2478:
	l.addi  	r1,r1,-4
.LCFI2479:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeAddOp3	# delay slot filled	# sibcall s
	l.addi  	r7,r0,0	 # move immediate I
.LFE552:
	.size	sqlite3VdbeAddOp2, .-sqlite3VdbeAddOp2
	.align	4
.proc	codeReal.clone.139
	.type	codeReal.clone.139, @function
codeReal.clone.139:
.LFB1387:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2480:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2481:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2482:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2483:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2484:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2485:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-60
.LCFI2486:
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L6430	# delay slot filled
	l.ori   	r18,r6,0	 # move reg to reg
	l.addi  	r16,r1,28
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	sqlite3AtoF	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
		l.lwz   	r2, 28(r1)
		l.lwz   	r3, 28+4(r1)
		l.sw    	20(r1), r2
		l.sw    	20+4(r1), r3
		l.sw    	4(r1), r2
		l.sw    	4+4(r1), r3
		l.lwz   	r2, 20(r1)
		l.lwz   	r3, 20+4(r1)
		l.sw    	12(r1), r2
		l.sw    	12+4(r1), r3
		l.lwz   	r2, 20(r1)
		l.lwz   	r3, 20+4(r1)
		l.lwz   	r7, 12(r1)
		l.lwz   	r8, 12+4(r1)
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
		l.or    	r5, r7, r0
		l.or    	r6, r8, r0
	l.jal   	__nedf2
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L6437	# delay slot filled
	l.sfeqi	r20,0
	l.bnf	.L6438	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
.L6434:
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	dup8bytes.clone.99	# delay slot filled
	l.addi  	r2,r0,-12	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,130	 # move immediate I
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.L6430:
	l.addi	r1,r1,60
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L6438:
	l.movhi 	r4,hi(-2147483648)	 # move immediate M
	l.add   	r2,r3,r4
	l.lwz   	r3,8(r1)	 # SI load
	l.sw    	28(r1),r2	 # SI store
	l.j     	.L6434	# delay slot filled
	l.sw    	32(r1),r3	 # SI store
.L6437:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.addi	r1,r1,60
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE1387:
	.size	codeReal.clone.139, .-codeReal.clone.139
	.align	4
.proc	codeInteger
	.type	codeInteger, @function
codeInteger:
.LFB777:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2487:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lhz   	r3,2(r4)	 # zero_extendqisi2
	l.sw    	-20(r1),r14	 # SI store
.LCFI2488:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2489:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2490:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2491:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2492:
	l.andi  	r3,r3,2048
	l.addi  	r1,r1,-40
.LCFI2493:
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bf	.L6440	# delay slot filled
	l.ori   	r14,r6,0	 # move reg to reg
	l.sfeqi	r16,0
	l.bf	.L6445	# delay slot filled
	l.lwz   	r5,36(r4)	 # SI load
	l.sub   	r5,r0,r5
.L6445:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
.L6439:
	l.addi	r1,r1,40
.L6461:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L6440:
	l.lwz   	r18,4(r4)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L6439	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3GetInt32	# delay slot filled
	l.addi  	r4,r1,12
	l.sfeqi	r11,0
	l.bf	.L6443	# delay slot filled
	l.sub   	r3,r0,r16
	l.sfnei	r16,0
	l.bnf	.L6457
	l.nop			# nop delay slot
	l.lwz   	r5,12(r1)	 # SI load
	l.sub   	r5,r0,r5
	l.j     	.L6445	# delay slot filled
	l.sw    	12(r1),r5	 # SI store
.L6443:
	l.lbs   	r8,0(r18)	 # extendqisi2_no_sext_mem
	l.or    	r3,r3,r16
	l.ori   	r7,r18,0	 # move reg to reg
	l.sfnei	r8,48
	l.bf	.L6446	# delay slot filled
	l.srli  	r20,r3,31
	l.addi  	r7,r7,1
.L6462:
	l.lbs   	r8,0(r7)	 # extendqisi2_no_sext_mem
	l.sfeqi	r8,48
	l.bf	.L6462	# delay slot filled
	l.addi  	r7,r7,1
	l.addi  	r7,r7,-1
.L6446:
	l.sflesi	r8,47
	l.bf	.L6448	# delay slot filled
	l.sfgtsi	r8,57
	l.bf	.L6448	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.j     	.L6465	# delay slot filled
	l.addi  	r8,r8,1
.L6458:
	l.bnf	.L6463	# delay slot filled
	l.sflesi	r8,18
	l.addi  	r8,r8,1
.L6465:
	l.add   	r3,r7,r8
	l.lbs   	r6,0(r3)	 # extendqisi2_no_sext_mem
	l.sflesi	r6,47
	l.bnf	.L6458	# delay slot filled
	l.sflesi	r6,57
	l.sflesi	r8,18
.L6463:
	l.bf	.L6448	# delay slot filled
	l.sfnei	r8,19
	l.bnf	.L6459	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L6464:
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	codeReal.clone.139	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.j     	.L6461	# delay slot filled
	l.addi	r1,r1,40
.L6459:
	l.jal   	compare2pow63	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.sfges 	r11,r20
	l.bf	.L6464	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L6448:
	l.addi  	r16,r1,4
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3Atoi64	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfeqi	r20,0
	l.bf	.L6452	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.lwz   	r5,4(r1)	 # SI load
	l.sub   	r3,r0,r3
	l.sfgtui	r3,0
	l.bnf	.L6460	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L6453:
	l.sub   	r5,r0,r5
	l.sw    	8(r1),r3	 # SI store
	l.sub   	r4,r5,r4
	l.sw    	4(r1),r4	 # SI store
.L6452:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	dup8bytes.clone.99	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,37	 # move immediate I
	l.addi  	r2,r0,-13	 # move immediate I
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.j     	.L6461	# delay slot filled
	l.addi	r1,r1,40
.L6457:
	l.j     	.L6445	# delay slot filled
	l.lwz   	r5,12(r1)	 # SI load
.L6460:
	l.j     	.L6453	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.LFE777:
	.size	codeInteger, .-codeInteger
	.section	.rodata.str1.1
.LC197:
	.string	"DISTINCT aggregates must have exactly one argument"
	.section .text
	.align	4
.proc	resetAccumulator
	.type	resetAccumulator, @function
resetAccumulator:
.LFB1069:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2494:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2495:
	l.lwz   	r2,20(r4)	 # SI load
	l.ori   	r20,r3,0	 # move reg to reg
	l.lwz   	r3,36(r4)	 # SI load
	l.sw    	-28(r1),r14	 # SI store
.LCFI2496:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2497:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2498:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2499:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2500:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2501:
	l.ori   	r14,r4,0	 # move reg to reg
	l.add   	r4,r2,r3
	l.addi  	r1,r1,-36
.LCFI2502:
	l.sfeqi	r4,0
	l.bf	.L6466	# delay slot filled
	l.lwz   	r18,12(r20)	 # SI load
	l.sflesi	r2,0
	l.bf	.L6468	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r16,r2,0	 # move reg to reg
.L6469:
	l.lwz   	r6,16(r14)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r6,r6,r2
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r6,16(r6)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r3,20(r14)	 # SI load
	l.sfgts 	r3,r16
	l.bf	.L6469	# delay slot filled
	l.addi  	r2,r2,24
	l.lwz   	r3,36(r14)	 # SI load
.L6468:
	l.sflesi	r3,0
	l.bf	.L6466	# delay slot filled
	l.lwz   	r2,32(r14)	 # SI load
	l.addi  	r2,r2,12
	l.addi  	r16,r0,0	 # move immediate I
	l.addi  	r22,r0,-1	 # move immediate I
	l.j     	.L6473	# delay slot filled
	l.addi  	r24,r0,-16	 # move immediate I
.L6471:
	l.jal   	sqlite3ErrorMsg
	l.nop			# nop delay slot
	l.sw    	0(r2),r22	 # SI store
.L6470:
	l.addi  	r16,r16,1
	l.lwz   	r3,36(r14)	 # SI load
	l.sfgts 	r3,r16
	l.bnf	.L6466	# delay slot filled
	l.addi  	r2,r2,16
.L6473:
	l.ori   	r3,r18,0	 # move reg to reg
.L6476:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,119	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,-4(r2)	 # SI load
	l.lwz   	r5,0(r2)	 # SI load
	l.movhi  	r4,hi(.LC197)
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfltsi	r5,0
	l.bf	.L6470	# delay slot filled
	l.ori   	r4,r4,lo(.LC197)
	l.lwz   	r5,-12(r2)	 # SI load
	l.lwz   	r5,28(r5)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L6471
	l.nop			# nop delay slot
	l.lwz   	r6,0(r5)	 # SI load
	l.sfeqi	r6,1
	l.bnf	.L6471	# delay slot filled
	l.addi  	r5,r5,12
	l.ori   	r4,r6,0	 # move reg to reg
	l.jal   	keyInfoFromExprList.clone.134	# delay slot filled
	l.addi  	r16,r16,1
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	0(r1),r24	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r5,0(r2)	 # SI load
	l.addi  	r4,r0,118	 # move immediate I
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.addi  	r2,r2,16
	l.lwz   	r3,36(r14)	 # SI load
	l.sfgts 	r3,r16
	l.bf	.L6476	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L6466:
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.LFE1069:
	.size	resetAccumulator, .-resetAccumulator
	.align	4
.proc	codeApplyAffinity
	.type	codeApplyAffinity, @function
codeApplyAffinity:
.LFB1159:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2503:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2504:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2505:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2506:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2507:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2508:
	l.ori   	r2,r5,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI2509:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r14,r4,0	 # move reg to reg
	l.sflesi	r5,0
	l.bf	.L6477	# delay slot filled
	l.ori   	r20,r6,0	 # move reg to reg
	l.lwz   	r18,12(r3)	 # SI load
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3IndexAffinityStr	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi	r1,r1,24
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3ExprCacheAffinityChange	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L6477:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE1159:
	.size	codeApplyAffinity, .-codeApplyAffinity
	.align	4
.proc	returnSingleInt
	.type	returnSingleInt, @function
returnSingleInt:
.LFB1006:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2510:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI2511:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2512:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2513:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2514:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r1,r1,-32
.LCFI2515:
	l.ori   	r18,r4,0	 # move reg to reg
		l.sw    	4(r1), r5
		l.sw    	4+4(r1), r6
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r2,12
	l.lwz   	r16,72(r2)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r16,r16,1
	l.addi  	r4,r0,8	 # move immediate I
	l.sw    	72(r2),r16	 # SI store
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6480	# delay slot filled
	l.ori   	r8,r11,0	 # move reg to reg
		l.lwz   	r2, 4(r1)
		l.lwz   	r3, 4+4(r1)
		l.sw    	0(r11), r2
		l.sw    	4(r11), r3
.L6480:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r16,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,37	 # move immediate I
	l.addi  	r2,r0,-13	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r4,0	 # move reg to reg
	l.addi	r1,r1,32
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3VdbeAddOp2	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.LFE1006:
	.size	returnSingleInt, .-returnSingleInt
	.align	4
.proc	sqlite3VdbeAddOp1
	.type	sqlite3VdbeAddOp1, @function
sqlite3VdbeAddOp1:
.LFB551:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2516:
	l.addi  	r1,r1,-4
.LCFI2517:
	l.addi  	r6,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeAddOp3	# delay slot filled	# sibcall s
	l.ori   	r7,r6,0	 # move reg to reg
.LFE551:
	.size	sqlite3VdbeAddOp1, .-sqlite3VdbeAddOp1
	.align	4
.proc	codeOffset.clone.141
	.type	codeOffset.clone.141, @function
codeOffset.clone.141:
.LFB1389:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2518:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sub   	r4,r0,r5
	l.sw    	-16(r1),r2	 # SI store
.LCFI2519:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2520:
	l.or    	r4,r4,r5
	l.sw    	-4(r1),r9	 # SI store
.LCFI2521:
	l.ori   	r2,r5,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI2522:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfgesi	r4,0
	l.bnf	.L6484	# delay slot filled
	l.lwz   	r5,0(r14)	 # SI load
.L6482:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L6484:
	l.sub   	r4,r0,r5
	l.or    	r4,r4,r5
	l.sfgesi	r4,0
	l.bf	.L6482	# delay slot filled
	l.addi  	r6,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,42	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r5,0(r14)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,23	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3VdbeJumpHere	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.LFE1389:
	.size	codeOffset.clone.141, .-codeOffset.clone.141
	.align	4
.proc	sqlite3WhereEnd
	.type	sqlite3WhereEnd, @function
sqlite3WhereEnd:
.LFB1165:
	l.lwz   	r4,0(r3)	 # SI load
	l.sw    	-44(r1),r2	 # SI store
.LCFI2523:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2524:
	l.lwz   	r2,8(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI2525:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2526:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2527:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2528:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2529:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2530:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2531:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2532:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2533:
	l.addi  	r1,r1,-64
.LCFI2534:
	l.sw    	4(r1),r3	 # SI store
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r2,12(r4)	 # SI load
	l.lwz   	r4,0(r4)	 # SI load
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.sw    	16(r1),r4	 # SI store
	l.lwz   	r3,0(r1)	 # SI load
	l.lhs   	r6,0(r3)	 # extendhisi2_no_sext_mem
	l.addi  	r20,r6,-1
	l.sfgesi	r20,0
	l.bnf	.L6540	# delay slot filled
	l.add   	r3,r20,r20
	l.slli  	r6,r6,6
	l.add   	r3,r3,r20
	l.slli  	r22,r20,6
	l.slli  	r28,r3,4
	l.sw    	8(r1),r6	 # SI store
	l.lwz   	r4,4(r1)	 # SI load
	l.add   	r28,r3,r28
	l.lwz   	r3,8(r1)	 # SI load
	l.add   	r28,r28,r20
	l.addi  	r26,r22,76
	l.addi  	r30,r22,68
	l.add   	r16,r4,r22
	l.addi  	r24,r22,88
	l.lwz   	r6,32(r2)	 # SI load
	l.addi  	r28,r28,28
	l.addi  	r22,r22,84
	l.lwz   	r5,0(r1)	 # SI load
	l.sub   	r3,r0,r3
	l.ori   	r7,r6,0	 # move reg to reg
	l.add   	r26,r4,r26
	l.add   	r30,r4,r30
	l.addi  	r16,r16,73
	l.add   	r28,r5,r28
	l.add   	r24,r4,r24
	l.add   	r22,r4,r22
	l.sw    	12(r1),r3	 # SI store
.L6502:
	l.lwz   	r5,12(r1)	 # SI load
	l.lwz   	r3,8(r1)	 # SI load
	l.add   	r4,r16,r5
	l.sfeqi	r6,0
	l.add   	r4,r4,r3
	l.lwz   	r5,12(r2)	 # SI load
	l.bf	.L6488	# delay slot filled
	l.lwz   	r4,-9(r4)	 # SI load
	l.xori  	r4,r4,0xffff
	l.slli  	r4,r4,2
	l.add   	r4,r6,r4
	l.sw    	0(r4),r5	 # SI store
.L6488:
	l.lbz   	r4,0(r16)	 # zero_extendqisi2
	l.sfeqi	r4,24
	l.bf	.L6489	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r6,7(r16)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r5,0(r26)	 # SI load
	l.lwz   	r4,20(r2)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L6535	# delay slot filled
	l.lbz   	r6,1(r16)	 # zero_extendqisi2
	l.lwz   	r5,12(r2)	 # SI load
	l.addi  	r5,r5,-1
	l.slli  	r7,r5,2
	l.slli  	r5,r5,4
	l.add   	r5,r7,r5
	l.add   	r4,r4,r5
	l.sb    	3(r4),r6	    # movqi
.L6535:
	l.lwz   	r6,32(r2)	 # SI load
	l.ori   	r7,r6,0	 # move reg to reg
.L6489:
	l.movhi 	r5,hi(983040)	 # move immediate M
	l.lwz   	r4,-41(r16)	 # SI load
	l.ori   	r5,r5,4096
	l.and   	r4,r4,r5
	l.sfeqi	r4,0
	l.bf	.L6491
	l.nop			# nop delay slot
	l.lwz   	r18,0(r22)	 # SI load
	l.sfgtsi	r18,0
	l.bnf	.L6536	# delay slot filled
	l.sfeqi	r6,0
	l.lwz   	r5,-13(r16)	 # SI load
	l.bf	.L6493	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
	l.xori  	r5,r5,0xffff
	l.slli  	r5,r5,2
	l.add   	r6,r6,r5
	l.sw    	0(r6),r4	 # SI store
	l.lwz   	r18,0(r22)	 # SI load
	l.sflesi	r18,0
	l.bf	.L6494	# delay slot filled
	l.lwz   	r4,0(r24)	 # SI load
	l.addi  	r18,r18,-1
	l.slli  	r14,r18,3
	l.add   	r14,r4,r14
.L6495:
	l.addi  	r14,r14,4
.L6496:
	l.lwz   	r4,0(r14)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.addi  	r4,r4,1
	l.lwz   	r5,-4(r14)	 # SI load
	l.lwz   	r6,0(r14)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,106	 # move immediate I
	l.lwz   	r4,0(r14)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r4,-1
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.addi  	r14,r14,-8
	l.sfgtsi	r18,0
	l.bf	.L6496	# delay slot filled
	l.addi  	r18,r18,-1
	l.addi  	r18,r18,1
	l.lwz   	r4,0(r24)	 # SI load
.L6494:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r6,32(r2)	 # SI load
.L6536:
	l.ori   	r7,r6,0	 # move reg to reg
.L6491:
	l.lwz   	r5,-17(r16)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L6497	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
	l.xori  	r5,r5,0xffff
	l.slli  	r5,r5,2
	l.add   	r5,r6,r5
	l.sw    	0(r5),r4	 # SI store
.L6497:
	l.lwz   	r5,-29(r16)	 # SI load
	l.sfeqi	r5,0
	l.bnf	.L6542	# delay slot filled
	l.addi  	r4,r0,129	 # move immediate I
.L6498:
	l.addi  	r20,r20,-1
	l.addi  	r26,r26,-64
	l.addi  	r30,r30,-64
	l.addi  	r16,r16,-64
	l.addi  	r28,r28,-52
	l.addi  	r24,r24,-64
	l.sfgesi	r20,0
	l.bf	.L6502	# delay slot filled
	l.addi  	r22,r22,-64
	l.lwz   	r3,0(r1)	 # SI load
	l.lhs   	r6,0(r3)	 # extendhisi2_no_sext_mem
.L6487:
	l.lwz   	r5,4(r1)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L6503	# delay slot filled
	l.lwz   	r4,20(r5)	 # SI load
	l.xori  	r4,r4,0xffff
	l.slli  	r4,r4,2
	l.add   	r7,r7,r4
	l.sw    	0(r7),r3	 # SI store
.L6503:
	l.sflesi	r6,0
	l.bf	.L6504	# delay slot filled
	l.lwz   	r7,4(r1)	 # SI load
	l.addi  	r16,r0,0	 # move immediate I
	l.addi  	r14,r7,32
	l.j     	.L6519	# delay slot filled
	l.addi  	r18,r7,52
.L6544:
	l.addi  	r14,r14,64
.L6519:
	l.lbz   	r5,40(r14)	 # zero_extendqisi2
	l.add   	r7,r5,r5
	l.lwz   	r3,0(r1)	 # SI load
	l.add   	r7,r7,r5
	l.slli  	r4,r7,4
	l.add   	r7,r7,r4
	l.add   	r5,r7,r5
	l.add   	r5,r3,r5
	l.lwz   	r4,16(r5)	 # SI load
	l.lbz   	r7,34(r4)	 # zero_extendqisi2
	l.andi  	r7,r7,2
	l.sfnei	r7,0
	l.bf	.L6505
	l.nop			# nop delay slot
	l.lwz   	r4,28(r4)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L6543	# delay slot filled
	l.lwz   	r4,4(r1)	 # SI load
.L6505:
	l.addi  	r16,r16,1
	l.sfles 	r6,r16
	l.bnf	.L6544	# delay slot filled
	l.addi  	r18,r18,64
.L6504:
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r4,4(r1)	 # SI load
	l.addi	r1,r1,64
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	whereInfoFree	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L6542:
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,0(r28)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,131	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r5,-21(r16)	 # SI load
	l.sfltsi	r5,0
	l.bf	.L6499	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,131	 # move immediate I
.L6499:
	l.lbz   	r4,0(r16)	 # zero_extendqisi2
	l.sfnei	r4,25
	l.bnf	.L6545	# delay slot filled
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,0(r30)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
.L6551:
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r6,32(r2)	 # SI load
	l.j     	.L6498	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
.L6545:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,47	 # move immediate I
	l.lwz   	r5,0(r26)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,0(r30)	 # SI load
	l.j     	.L6551	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L6543:
	l.lhz   	r3,4(r4)	 # zero_extendqisi2
	l.andi  	r3,r3,32
	l.sfnei	r3,0
	l.bnf	.L6546
	l.nop			# nop delay slot
	l.lwz   	r3,0(r14)	 # SI load
.L6552:
	l.movhi 	r5,hi(983040)	 # move immediate M
	l.and   	r4,r3,r5
	l.sfeqi	r4,0
	l.bf	.L6539	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
	l.movhi 	r6,hi(8388608)	 # move immediate M
	l.lwz   	r4,12(r5)	 # SI load
	l.lwz   	r17,8(r14)	 # SI load
	l.sfltsi	r4,0
	l.bf	.L6509	# delay slot filled
	l.and   	r3,r3,r6
	l.lwz   	r12,12(r2)	 # SI load
	l.sfges 	r4,r12
	l.bf	.L6554	# delay slot filled
	l.lwz   	r7,0(r1)	 # SI load
	l.slli  	r7,r4,2
	l.slli  	r5,r4,4
	l.lwz   	r6,20(r2)	 # SI load
	l.add   	r5,r7,r5
	l.add   	r6,r6,r5
.L6511:
	l.sub   	r3,r0,r3
	l.addi  	r5,r6,4
	l.addi  	r11,r6,8
	l.j     	.L6510	# delay slot filled
	l.srli  	r19,r3,31
.L6512:
	l.addi  	r4,r4,1
	l.addi  	r5,r5,20
	l.sfges 	r4,r12
	l.bf	.L6547	# delay slot filled
	l.addi  	r11,r11,20
.L6534:
	l.addi  	r6,r6,20
.L6510:
	l.lwz   	r7,0(r5)	 # SI load
	l.lwz   	r3,16(r14)	 # SI load
	l.sfne 	r7,r3
	l.bf	.L6512
	l.nop			# nop delay slot
	l.lbz   	r3,0(r6)	 # zero_extendqisi2
	l.sfnei	r3,3
	l.bnf	.L6548	# delay slot filled
	l.sfnei	r3,40
	l.bnf	.L6549	# delay slot filled
	l.sfeqi	r19,0
	l.bf	.L6512	# delay slot filled
	l.xori  	r3,r3,131
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bf	.L6512	# delay slot filled
	l.addi  	r3,r0,24	 # movqi: move immediate
	l.addi  	r4,r4,1
	l.sb    	0(r6),r3	    # movqi
	l.addi  	r5,r5,20
	l.sfges 	r4,r12
	l.bnf	.L6534	# delay slot filled
	l.addi  	r11,r11,20
.L6547:
	l.lwz   	r4,0(r1)	 # SI load
	l.j     	.L6505	# delay slot filled
	l.lhs   	r6,0(r4)	 # extendhisi2_no_sext_mem
.L6493:
	l.addi  	r18,r18,-1
	l.lwz   	r14,0(r24)	 # SI load
	l.slli  	r3,r18,3
	l.j     	.L6495	# delay slot filled
	l.add   	r14,r14,r3
.L6546:
	l.lbz   	r3,6(r4)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L6507	# delay slot filled
	l.movhi 	r6,hi(8388608)	 # move immediate M
	l.lwz   	r3,0(r14)	 # SI load
.L6508:
	l.movhi 	r7,hi(983040)	 # move immediate M
.L6555:
	l.and   	r3,r3,r7
	l.sfeqi	r3,0
	l.bnf	.L6530	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
.L6553:
	l.j     	.L6505	# delay slot filled
	l.lhs   	r6,0(r3)	 # extendhisi2_no_sext_mem
.L6539:
	l.lwz   	r7,0(r1)	 # SI load
.L6554:
	l.j     	.L6505	# delay slot filled
	l.lhs   	r6,0(r7)	 # extendhisi2_no_sext_mem
.L6507:
	l.lwz   	r3,0(r14)	 # SI load
	l.and   	r4,r3,r6
	l.sfnei	r4,0
	l.bf	.L6555	# delay slot filled
	l.movhi 	r7,hi(983040)	 # move immediate M
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,28(r5)	 # SI load
	l.j     	.L6508	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
.L6548:
	l.lwz   	r3,4(r17)	 # SI load
	l.sflesi	r3,0
	l.bf	.L6512
	l.nop			# nop delay slot
	l.lwz   	r8,8(r17)	 # SI load
	l.lwz   	r15,0(r11)	 # SI load
	l.lwz   	r7,0(r8)	 # SI load
	l.sfeq 	r15,r7
	l.bf	.L6514	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r8,r8,4
.L6516:
	l.addi  	r7,r7,1
	l.sflts 	r7,r3
	l.bnf	.L6512
	l.nop			# nop delay slot
	l.lwz   	r13,0(r8)	 # SI load
	l.sfne 	r13,r15
	l.bf	.L6516	# delay slot filled
	l.addi  	r8,r8,4
.L6514:
	l.sw    	0(r11),r7	 # SI store
	l.lwz   	r3,0(r18)	 # SI load
	l.j     	.L6512	# delay slot filled
	l.sw    	0(r5),r3	 # SI store
.L6549:
	l.lwz   	r3,0(r18)	 # SI load
	l.addi  	r7,r0,57	 # movqi: move immediate
	l.sw    	0(r5),r3	 # SI store
	l.j     	.L6512	# delay slot filled
	l.sb    	0(r6),r7	    # movqi
.L6530:
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,0(r18)	 # SI load
	l.j     	.L6552	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
.L6509:
	l.lwz   	r12,12(r2)	 # SI load
	l.sflts 	r4,r12
	l.bf	.L6511	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L6553	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
.L6540:
	l.j     	.L6487	# delay slot filled
	l.lwz   	r7,32(r2)	 # SI load
.LFE1165:
	.size	sqlite3WhereEnd, .-sqlite3WhereEnd
	.align	4
.proc	loadAnalysis
	.type	loadAnalysis, @function
loadAnalysis:
.LFB822:
	l.ori   	r6,r3,0	 # move reg to reg
	l.sw    	-8(r1),r2	 # SI store
.LCFI2535:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2536:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-8
.LCFI2537:
	l.lwz   	r3,0(r3)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r6,12
	l.sfeqi	r11,0
	l.bf	.L6556	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi	r1,r1,8
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,114	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3VdbeAddOp1	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L6556:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE822:
	.size	loadAnalysis, .-loadAnalysis
	.section	.rodata.str1.1
.LC198:
	.string	"sqlite_temp_master"
.LC199:
	.string	"sqlite_master"
	.section .text
	.align	4
.proc	sqlite3OpenMasterTable
	.type	sqlite3OpenMasterTable, @function
sqlite3OpenMasterTable:
.LFB863:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2538:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-12(r1),r14	 # SI store
.LCFI2539:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2540:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2541:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI2542:
	l.lwz   	r3,0(r3)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r2,12
	l.movhi  	r7,hi(.LC199)
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfnei	r14,1
	l.bnf	.L6562	# delay slot filled
	l.ori   	r7,r7,lo(.LC199)
.L6559:
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3TableLock	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,10	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r5,r0,5	 # move immediate I
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-14	 # move immediate I
	l.lwz   	r3,68(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L6558	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	68(r2),r3	 # SI store
.L6558:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L6562:
	l.movhi  	r7,hi(.LC198)
	l.j     	.L6559	# delay slot filled
	l.ori   	r7,r7,lo(.LC198)
.LFE863:
	.size	sqlite3OpenMasterTable, .-sqlite3OpenMasterTable
	.align	4
.proc	sqlite3ChangeCookie
	.type	sqlite3ChangeCookie, @function
sqlite3ChangeCookie:
.LFB878:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2543:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2544:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2545:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2546:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2547:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,21(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-20
.LCFI2548:
	l.sfnei	r3,0
	l.bnf	.L6566	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r2,r3
	l.lwz   	r16,0(r3)	 # SI load
.L6565:
	l.add   	r3,r14,r14
	l.lwz   	r4,0(r2)	 # SI load
	l.add   	r3,r3,r14
	l.lwz   	r5,8(r4)	 # SI load
	l.slli  	r3,r3,3
	l.lwz   	r18,12(r2)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.add   	r3,r5,r3
	l.addi  	r4,r0,48	 # move immediate I
	l.lwz   	r5,20(r3)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r5,0(r5)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r5,r5,1
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.addi	r1,r1,20
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3ReleaseTempReg	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L6566:
	l.lwz   	r16,72(r2)	 # SI load
	l.addi  	r16,r16,1
	l.j     	.L6565	# delay slot filled
	l.sw    	72(r2),r16	 # SI store
.LFE878:
	.size	sqlite3ChangeCookie, .-sqlite3ChangeCookie
	.align	4
.proc	sqlite3OpenTable
	.type	sqlite3OpenTable, @function
sqlite3OpenTable:
.LFB981:
	l.sw    	-28(r1),r2	 # SI store
.LCFI2549:
	l.sw    	-24(r1),r14	 # SI store
.LCFI2550:
	l.sw    	-20(r1),r16	 # SI store
.LCFI2551:
	l.sw    	-16(r1),r18	 # SI store
.LCFI2552:
	l.sw    	-12(r1),r20	 # SI store
.LCFI2553:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2554:
	l.sw    	-8(r1),r22	 # SI store
.LCFI2555:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,34(r6)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.addi  	r1,r1,-28
.LCFI2556:
	l.ori   	r14,r6,0	 # move reg to reg
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfnei	r3,0
	l.bnf	.L6569	# delay slot filled
	l.ori   	r20,r7,0	 # move reg to reg
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L6569:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r2,12
	l.xori  	r4,r20,10
	l.lwz   	r7,4(r14)	 # SI load
	l.sub   	r6,r0,r4
	l.ori   	r3,r2,0	 # move reg to reg
	l.or    	r6,r6,r4
	l.lwz   	r5,24(r14)	 # SI load
	l.xori  	r6,r6,0xffff
	l.ori   	r4,r18,0	 # move reg to reg
	l.srli  	r6,r6,31
	l.jal   	sqlite3TableLock	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r6,24(r14)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.lwz   	r5,12(r14)	 # SI load
	l.addi	r1,r1,28
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r6,r0,-14	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.j	sqlite3VdbeChangeP4	# delay slot filled	# sibcall s
	l.lwz   	r22,-8(r1)	 # SI load
.LFE981:
	.size	sqlite3OpenTable, .-sqlite3OpenTable
	.align	4
.proc	sqlite3OpenTableAndIndices
	.type	sqlite3OpenTableAndIndices, @function
sqlite3OpenTableAndIndices:
.LFB991:
	l.sw    	-28(r1),r16	 # SI store
.LCFI2557:
	l.sw    	-24(r1),r18	 # SI store
.LCFI2558:
	l.sw    	-20(r1),r20	 # SI store
.LCFI2559:
	l.sw    	-16(r1),r22	 # SI store
.LCFI2560:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2561:
	l.sw    	-36(r1),r2	 # SI store
.LCFI2562:
	l.sw    	-32(r1),r14	 # SI store
.LCFI2563:
	l.sw    	-12(r1),r24	 # SI store
.LCFI2564:
	l.sw    	-8(r1),r26	 # SI store
.LCFI2565:
	l.addi  	r11,r0,0	 # move immediate I
	l.lbz   	r14,34(r4)	 # zero_extendqisi2
	l.andi  	r14,r14,16
	l.addi  	r1,r1,-40
.LCFI2566:
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfne 	r14,r11
	l.bf	.L6571	# delay slot filled
	l.ori   	r22,r6,0	 # move reg to reg
	l.lwz   	r5,72(r4)	 # SI load
	l.sfeq 	r5,r11
	l.bf	.L6578	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r7,4(r3)	 # SI load
	l.sfles 	r7,r11
	l.bf	.L6572
	l.nop			# nop delay slot
	l.lwz   	r2,8(r3)	 # SI load
	l.lwz   	r4,20(r2)	 # SI load
	l.sfeq 	r5,r4
	l.bf	.L6572	# delay slot filled
	l.addi  	r2,r2,44
	l.j     	.L6583	# delay slot filled
	l.addi  	r14,r14,1
.L6574:
	l.lwz   	r8,0(r2)	 # SI load
	l.sfeq 	r5,r8
	l.bf	.L6572	# delay slot filled
	l.addi  	r2,r2,24
	l.addi  	r14,r14,1
.L6583:
	l.sflts 	r14,r7
	l.bf	.L6574
	l.nop			# nop delay slot
.L6572:
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r18,12
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.ori   	r7,r22,0	 # move reg to reg
	l.jal   	sqlite3OpenTable	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r2,20(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L6581	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
	l.addi  	r16,r0,1	 # move immediate I
	l.addi  	r26,r0,-16	 # move immediate I
.L6576:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3IndexKeyinfo	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r6,20(r2)	 # SI load
	l.add   	r5,r16,r20
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r26	 # SI store
	l.lwz   	r2,32(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L6576	# delay slot filled
	l.addi  	r16,r16,1
	l.addi  	r11,r16,-1
.L6575:
	l.add   	r16,r16,r20
	l.lwz   	r2,68(r18)	 # SI load
	l.sfges 	r2,r16
	l.bf	.L6571
	l.nop			# nop delay slot
	l.sw    	68(r18),r16	 # SI store
.L6571:
	l.addi	r1,r1,40
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L6578:
	l.movhi 	r14,hi(-1048576)	 # move immediate M
	l.j     	.L6572	# delay slot filled
	l.ori   	r14,r14,48576
.L6581:
	l.j     	.L6575	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
.LFE991:
	.size	sqlite3OpenTableAndIndices, .-sqlite3OpenTableAndIndices
	.align	4
.proc	sqlite3ExprCodeGetColumn
	.type	sqlite3ExprCodeGetColumn, @function
sqlite3ExprCodeGetColumn:
.LFB783:
	l.sw    	-28(r1),r2	 # SI store
.LCFI2567:
	l.sub   	r2,r0,r8
	l.sw    	-24(r1),r14	 # SI store
.LCFI2568:
	l.or    	r8,r2,r8
	l.sw    	-20(r1),r16	 # SI store
.LCFI2569:
	l.sw    	-16(r1),r18	 # SI store
.LCFI2570:
	l.sw    	-12(r1),r20	 # SI store
.LCFI2571:
	l.sw    	-8(r1),r22	 # SI store
.LCFI2572:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2573:
	l.srli  	r11,r8,31
	l.addi  	r1,r1,-28
.LCFI2574:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r2,r5,0	 # move reg to reg
	l.ori   	r14,r6,0	 # move reg to reg
	l.ori   	r18,r7,0	 # move reg to reg
	l.lwz   	r22,12(r3)	 # SI load
	l.addi  	r8,r3,96
	l.j     	.L6589	# delay slot filled
	l.addi  	r12,r0,10	 # move immediate I
.L6585:
	l.sfeqi	r12,0
.L6601:
	l.bf	.L6588	# delay slot filled
	l.addi  	r8,r8,24
.L6589:
	l.lwz   	r13,16(r8)	 # SI load
	l.sflesi	r13,0
	l.bf	.L6585	# delay slot filled
	l.addi  	r12,r12,-1
	l.lwz   	r4,0(r8)	 # SI load
	l.sfne 	r4,r14
	l.bf	.L6601	# delay slot filled
	l.sfeqi	r12,0
	l.lwz   	r3,4(r8)	 # SI load
	l.sfne 	r3,r2
	l.bf	.L6601	# delay slot filled
	l.sfeqi	r12,0
	l.sfnei	r11,0
	l.bf	.L6595
	l.nop			# nop delay slot
	l.lbz   	r3,8(r8)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bf	.L6601	# delay slot filled
	l.sfeqi	r12,0
.L6595:
	l.lwz   	r3,88(r16)	 # SI load
	l.ori   	r18,r13,0	 # move reg to reg
	l.addi  	r2,r3,1
	l.sw    	20(r8),r3	 # SI store
	l.sw    	88(r16),r2	 # SI store
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.j     	.L6587	# delay slot filled
	l.sb    	9(r8),r2	    # movqi
.L6588:
	l.sfgesi	r2,0
	l.bnf	.L6596	# delay slot filled
	l.sfnei	r20,0
	l.bnf	.L6597	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lbz   	r3,34(r20)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bnf	.L6598	# delay slot filled
	l.addi  	r4,r0,3	 # move immediate I
.L6593:
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,16(r20)	 # SI load
	l.lwz   	r5,28(r20)	 # SI load
	l.jal   	sqlite3ColumnDefault.clone.135	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.slli  	r5,r2,2
	l.slli  	r3,r2,4
	l.lwz   	r4,16(r20)	 # SI load
	l.add   	r3,r5,r3
	l.add   	r3,r4,r3
	l.lbs   	r3,18(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,101
	l.bnf	.L6599	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
.L6600:
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheStore	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
.L6587:
	l.addi	r1,r1,28
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L6598:
	l.j     	.L6593	# delay slot filled
	l.addi  	r4,r0,52	 # move immediate I
.L6596:
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,40	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.j     	.L6600	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L6599:
	l.addi  	r4,r0,29	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.j     	.L6600	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L6597:
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.j     	.L6600	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.LFE783:
	.size	sqlite3ExprCodeGetColumn, .-sqlite3ExprCodeGetColumn
	.align	4
.proc	sqlite3ExprCodeMove
	.type	sqlite3ExprCodeMove, @function
sqlite3ExprCodeMove:
.LFB786:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2575:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2576:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2577:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2578:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2579:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI2580:
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r18,r3,0	 # move reg to reg
	l.sfeq 	r4,r5
	l.bf	.L6602	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.lwz   	r3,12(r3)	 # SI load
	l.addi  	r4,r0,120	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.sub   	r14,r14,r2
	l.addi  	r3,r18,112
	l.addi  	r8,r0,10	 # move immediate I
	l.add   	r6,r16,r2
.L6605:
	l.lwz   	r11,0(r3)	 # SI load
	l.sfgts 	r2,r11
	l.bf	.L6604	# delay slot filled
	l.addi  	r8,r8,-1
	l.sfges 	r11,r6
	l.bf	.L6604	# delay slot filled
	l.add   	r4,r14,r11
	l.sw    	0(r3),r4	 # SI store
.L6604:
	l.sfnei	r8,0
	l.bf	.L6605	# delay slot filled
	l.addi  	r3,r3,24
.L6602:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE786:
	.size	sqlite3ExprCodeMove, .-sqlite3ExprCodeMove
	.align	4
.proc	generateOutputSubroutine.clone.142
	.type	generateOutputSubroutine.clone.142, @function
generateOutputSubroutine.clone.142:
.LFB1390:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2581:
	l.lwz   	r14,12(r3)	 # SI load
	l.sw    	-44(r1),r2	 # SI store
.LCFI2582:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2583:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2584:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2585:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2586:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2587:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2588:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2589:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2590:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2591:
	l.addi  	r1,r1,-64
.LCFI2592:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r26,r4,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,12(r14)	 # SI load
	l.lwz   	r30,64(r1)	 # SI load
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r24,r6,0	 # move reg to reg
	l.ori   	r22,r7,0	 # move reg to reg
	l.sw    	16(r1),r8	 # SI store
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	8(r1),r4	 # SI store
	l.sfeqi	r30,0
	l.bnf	.L6632	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
.L6640:
	l.lbz   	r3,30(r3)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L6633	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	8(r1),r2	 # SI store
	l.lwz   	r11,8(r1)	 # SI load
.L6639:
	l.addi	r1,r1,64
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L6633:
	l.addi  	r4,r26,52
	l.jal   	codeOffset.clone.141	# delay slot filled
	l.ori   	r5,r28,0	 # move reg to reg
	l.lbz   	r3,0(r22)	 # zero_extendqisi2
	l.addi  	r3,r3,-5
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfgtui	r3,5
	l.bnf	.L6634	# delay slot filled
	l.movhi  	r4,hi(.L6618)
	l.lwz   	r5,48(r26)	 # SI load
.L6641:
	l.sfeqi	r5,0
	l.bnf	.L6635	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r2,32(r14)	 # SI load
.L6642:
	l.sfeqi	r2,0
	l.bf	.L6629	# delay slot filled
	l.lwz   	r3,12(r14)	 # SI load
	l.xori  	r28,r28,0xffff
	l.slli  	r28,r28,2
	l.add   	r2,r2,r28
	l.sw    	0(r2),r3	 # SI store
.L6629:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,25	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.j     	.L6639	# delay slot filled
	l.lwz   	r11,8(r1)	 # SI load
.L6632:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,68	 # move immediate I
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r18,r30,1
	l.lwz   	r8,68(r1)	 # SI load
	l.lwz   	r5,0(r20)	 # SI load
	l.lwz   	r7,0(r24)	 # SI load
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,95	 # move immediate I
	l.ori   	r6,r18,0	 # move reg to reg
	l.lwz   	r11,72(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.addi  	r5,r11,2
	l.ori   	r6,r28,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,132	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,0(r20)	 # SI load
	l.lwz   	r4,0(r24)	 # SI load
	l.sw    	4(r1),r3	 # SI store
	l.sfeq 	r18,r3
	l.bf	.L6609	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
	l.sflesi	r4,0
	l.bf	.L6643	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r16,r0,0	 # move immediate I
.L6610:
	l.lwz   	r3,4(r1)	 # SI load
	l.add   	r6,r16,r18
	l.add   	r5,r16,r3
	l.addi  	r4,r0,20	 # move immediate I
	l.lwz   	r3,12(r2)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r4,12(r1)	 # SI load
	l.sfgts 	r4,r16
	l.bf	.L6610
	l.nop			# nop delay slot
.L6609:
	l.ori   	r3,r14,0	 # move reg to reg
.L6643:
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.j     	.L6640	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
.L6634:
	l.slli  	r3,r3,2
	l.ori   	r4,r4,lo(.L6618)
	l.add   	r3,r3,r4
	l.lwz   	r3,0(r3)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L6618:
	.word	.L6613
	.word	.L6614
	.word	.L6615
	.word	.L6616
	.word	.L6616
	.word	.L6617
	.section .text
.L6616:
	l.lbz   	r3,21(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L6636	# delay slot filled
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r4,r4,2
	l.sfnei	r3,0
	l.add   	r4,r2,r4
	l.bnf	.L6637	# delay slot filled
	l.lwz   	r16,0(r4)	 # SI load
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r2,r3
	l.lwz   	r18,0(r3)	 # SI load
.L6622:
	l.ori   	r7,r16,0	 # move reg to reg
	l.addi  	r4,r0,79	 # move immediate I
	l.lwz   	r5,0(r20)	 # SI load
	l.lwz   	r6,0(r24)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.lwz   	r5,4(r22)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,110	 # move immediate I
	l.lwz   	r5,4(r22)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.lwz   	r3,20(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6623
	l.nop			# nop delay slot
	l.lwz   	r4,12(r14)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.addi  	r4,r0,8	 # movqi: move immediate
	l.sb    	3(r3),r4	    # movqi
.L6623:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L6641	# delay slot filled
	l.lwz   	r5,48(r26)	 # SI load
.L6615:
	l.lwz   	r3,0(r26)	 # SI load
	l.lbs   	r4,1(r22)	 # extendqisi2_no_sext_mem
	l.lwz   	r3,12(r3)	 # SI load
	l.jal   	sqlite3CompareAffinity	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.sb    	5(r26),r11	    # movqi
	l.lbz   	r3,21(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L6638	# delay slot filled
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r2,r3
	l.lwz   	r16,0(r3)	 # SI load
.L6625:
	l.addi  	r18,r0,1	 # move immediate I
	l.ori   	r7,r16,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r8,r26,5
	l.lwz   	r5,0(r20)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,79	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,0(r20)	 # SI load
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,4(r22)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,108	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L6641	# delay slot filled
	l.lwz   	r5,48(r26)	 # SI load
.L6614:
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,0(r20)	 # SI load
	l.lwz   	r5,4(r22)	 # SI load
	l.jal   	sqlite3ExprCodeMove	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.j     	.L6641	# delay slot filled
	l.lwz   	r5,48(r26)	 # SI load
.L6613:
	l.lwz   	r5,0(r20)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,0(r24)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,0(r20)	 # SI load
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L6641	# delay slot filled
	l.lwz   	r5,48(r26)	 # SI load
.L6617:
	l.lwz   	r5,8(r22)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L6626	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r6,12(r22)	 # SI load
.L6627:
	l.lwz   	r4,0(r20)	 # SI load
	l.jal   	sqlite3ExprCodeMove	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,60	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,4(r22)	 # SI load
	l.j     	.L6641	# delay slot filled
	l.lwz   	r5,48(r26)	 # SI load
.L6635:
	l.addi  	r4,r0,42	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,-1	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,126	 # move immediate I
	l.lwz   	r5,48(r26)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,76(r1)	 # SI load
	l.j     	.L6642	# delay slot filled
	l.lwz   	r2,32(r14)	 # SI load
.L6638:
	l.lwz   	r16,72(r2)	 # SI load
	l.addi  	r16,r16,1
	l.j     	.L6625	# delay slot filled
	l.sw    	72(r2),r16	 # SI store
.L6636:
	l.lwz   	r18,72(r2)	 # SI load
	l.addi  	r16,r18,1
	l.ori   	r18,r16,0	 # move reg to reg
	l.sw    	72(r2),r16	 # SI store
.L6620:
	l.addi  	r18,r18,1
	l.j     	.L6622	# delay slot filled
	l.sw    	72(r2),r18	 # SI store
.L6626:
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.lwz   	r4,0(r24)	 # SI load
	l.sw    	8(r22),r11	 # SI store
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r6,0(r24)	 # SI load
	l.j     	.L6627	# delay slot filled
	l.sw    	12(r22),r6	 # SI store
.L6637:
	l.j     	.L6620	# delay slot filled
	l.lwz   	r18,72(r2)	 # SI load
.LFE1390:
	.size	generateOutputSubroutine.clone.142, .-generateOutputSubroutine.clone.142
	.align	4
.proc	codeDistinct
	.type	codeDistinct, @function
codeDistinct:
.LFB1038:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2593:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2594:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2595:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2596:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2597:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2598:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,21(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-24
.LCFI2599:
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfnei	r3,0
	l.bnf	.L6647	# delay slot filled
	l.lwz   	r16,12(r2)	 # SI load
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r2,r3
	l.lwz   	r14,0(r3)	 # SI load
.L6646:
	l.ori   	r5,r7,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,128	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,108	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.addi	r1,r1,24
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3ReleaseTempReg	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L6647:
	l.lwz   	r14,72(r2)	 # SI load
	l.addi  	r14,r14,1
	l.j     	.L6646	# delay slot filled
	l.sw    	72(r2),r14	 # SI store
.LFE1038:
	.size	codeDistinct, .-codeDistinct
	.align	4
.proc	sqlite3GenerateIndexKey
	.type	sqlite3GenerateIndexKey, @function
sqlite3GenerateIndexKey:
.LFB940:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2600:
	l.lwz   	r26,4(r4)	 # SI load
	l.sw    	-44(r1),r2	 # SI store
.LCFI2601:
	l.addi  	r2,r26,1
	l.sw    	-4(r1),r9	 # SI store
.LCFI2602:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2603:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2604:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2605:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2606:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2607:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2608:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2609:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2610:
	l.ori   	r22,r4,0	 # move reg to reg
	l.addi  	r1,r1,-64
.LCFI2611:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r30,r3,0	 # move reg to reg
	l.ori   	r28,r5,0	 # move reg to reg
	l.sw    	8(r1),r2	 # SI store
	l.sw    	16(r1),r6	 # SI store
	l.sw    	12(r1),r7	 # SI store
	l.lwz   	r24,12(r3)	 # SI load
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.lwz   	r14,16(r22)	 # SI load
	l.add   	r2,r11,r26
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,40	 # move immediate I
	l.ori   	r5,r28,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.sw    	0(r1),r11	 # SI store
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
	l.sflesi	r26,0
	l.bf	.L6658	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
	l.lwz   	r16,0(r1)	 # SI load
	l.j     	.L6652	# delay slot filled
	l.ori   	r20,r18,0	 # move reg to reg
.L6650:
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r20,r20,1
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r4,16(r14)	 # SI load
	l.lwz   	r5,28(r14)	 # SI load
	l.jal   	sqlite3ColumnDefault.clone.135	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r18,r18,4
	l.sfgts 	r26,r20
	l.bnf	.L6649	# delay slot filled
	l.addi  	r16,r16,1
.L6652:
	l.lwz   	r2,8(r22)	 # SI load
	l.lwz   	r8,8(r14)	 # SI load
	l.add   	r2,r2,r18
	l.addi  	r4,r0,3	 # move immediate I
	l.lwz   	r2,0(r2)	 # SI load
	l.ori   	r5,r28,0	 # move reg to reg
	l.ori   	r7,r16,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.sfne 	r8,r2
	l.bf	.L6650	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.lwz   	r5,4(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r20,r20,1
	l.addi  	r18,r18,4
	l.sfgts 	r26,r20
	l.bf	.L6652	# delay slot filled
	l.addi  	r16,r16,1
.L6649:
	l.lwz   	r3,12(r1)	 # SI load
.L6658:
	l.sfeqi	r3,0
	l.bnf	.L6656	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
	l.lwz   	r2,56(r30)	 # SI load
.L6657:
	l.lwz   	r3,8(r1)	 # SI load
	l.sfles 	r3,r2
	l.bf	.L6654	# delay slot filled
	l.lwz   	r2,0(r1)	 # SI load
	l.sw    	56(r30),r3	 # SI store
	l.sw    	60(r30),r2	 # SI store
.L6654:
	l.lwz   	r11,0(r1)	 # SI load
	l.addi	r1,r1,64
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L6656:
	l.lwz   	r6,8(r1)	 # SI load
	l.lwz   	r7,16(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3IndexAffinityStr	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.lwz   	r5,8(r1)	 # SI load
	l.j     	.L6657	# delay slot filled
	l.lwz   	r2,56(r30)	 # SI load
.LFE940:
	.size	sqlite3GenerateIndexKey, .-sqlite3GenerateIndexKey
	.section	.rodata.str1.1
.LC200:
	.string	"indexed columns are not unique"
	.section .text
	.align	4
.proc	sqlite3RefillIndex
	.type	sqlite3RefillIndex, @function
sqlite3RefillIndex:
.LFB894:
	l.sw    	-20(r1),r20	 # SI store
.LCFI2612:
	l.lwz   	r20,68(r3)	 # SI load
	l.sw    	-36(r1),r2	 # SI store
.LCFI2613:
	l.addi  	r2,r20,2
	l.sw    	-32(r1),r14	 # SI store
.LCFI2614:
	l.sw    	-24(r1),r18	 # SI store
.LCFI2615:
	l.sw    	-16(r1),r22	 # SI store
.LCFI2616:
	l.sw    	-12(r1),r24	 # SI store
.LCFI2617:
	l.sw    	-8(r1),r26	 # SI store
.LCFI2618:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2619:
	l.sw    	-28(r1),r16	 # SI store
.LCFI2620:
	l.lwz   	r12,36(r4)	 # SI load
	l.lwz   	r24,16(r4)	 # SI load
	l.sw    	68(r3),r2	 # SI store
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-40
.LCFI2621:
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r26,r5,0	 # move reg to reg
	l.addi  	r22,r20,1
	l.sfeqi	r12,0
	l.bf	.L6670	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r13,4(r3)	 # SI load
	l.sflesi	r13,0
	l.bf	.L6671	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.lwz   	r4,8(r3)	 # SI load
	l.lwz   	r2,20(r4)	 # SI load
	l.sfeq 	r12,r2
	l.bf	.L6679	# delay slot filled
	l.addi  	r7,r4,44
	l.addi  	r8,r0,24	 # move immediate I
	l.j     	.L6661	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L6662:
	l.lwz   	r11,0(r7)	 # SI load
	l.sfeq 	r12,r11
	l.bf	.L6660	# delay slot filled
	l.addi  	r7,r7,24
	l.ori   	r8,r3,0	 # move reg to reg
.L6661:
	l.addi  	r2,r2,1
	l.sfgts 	r13,r2
	l.bf	.L6662	# delay slot filled
	l.addi  	r3,r8,24
	l.add   	r8,r2,r2
	l.add   	r8,r8,r2
	l.slli  	r8,r8,3
.L6660:
	l.add   	r8,r4,r8
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,27	 # move immediate I
	l.lwz   	r5,0(r18)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.lwz   	r7,0(r8)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L6673	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L6659:
	l.addi	r1,r1,40
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L6673:
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r5,24(r24)	 # SI load
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3TableLock	# delay slot filled
	l.lwz   	r7,4(r24)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r14,12
	l.sfeqi	r11,0
	l.bf	.L6659	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfgesi	r26,0
	l.bnf	.L6674	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3IndexKeyinfo	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.addi  	r4,r0,10	 # move immediate I
	l.addi  	r11,r0,-16	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r7,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6678	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r4,12(r16)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sb    	3(r3),r4	    # movqi
	l.ori   	r5,r2,0	 # move reg to reg
.L6678:
	l.ori   	r6,r24,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r7,r0,13	 # move immediate I
	l.jal   	sqlite3OpenTable	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,122	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lbz   	r2,21(r14)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L6675	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.addi  	r2,r2,-1
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.addi  	r3,r2,6
	l.sb    	21(r14),r2	    # movqi
	l.slli  	r2,r3,2
	l.add   	r2,r14,r2
	l.lwz   	r2,0(r2)	 # SI load
.L6667:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3GenerateIndexKey	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.lbz   	r3,24(r18)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L6676	# delay slot filled
	l.ori   	r8,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
.L6677:
	l.addi  	r4,r0,108	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6669
	l.nop			# nop delay slot
	l.lwz   	r4,12(r16)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.addi  	r4,r0,16	 # movqi: move immediate
	l.sb    	3(r3),r4	    # movqi
.L6669:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r6,r24,1
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,106	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,33	 # move immediate I
	l.addi	r1,r1,40
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.j	sqlite3VdbeAddOp1	# delay slot filled	# sibcall s
	l.lwz   	r26,-8(r1)	 # SI load
.L6675:
	l.lwz   	r2,72(r14)	 # SI load
	l.addi  	r2,r2,1
	l.j     	.L6667	# delay slot filled
	l.sw    	72(r14),r2	 # SI store
.L6670:
	l.movhi 	r8,hi(-24051712)	 # move immediate M
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.ori   	r8,r8,51712
	l.ori   	r2,r2,48576
	l.j     	.L6660	# delay slot filled
	l.lwz   	r4,8(r3)	 # SI load
.L6676:
	l.lwz   	r6,12(r16)	 # SI load
	l.lwz   	r7,4(r18)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.add   	r7,r11,r7
	l.addi  	r4,r0,35	 # move immediate I
	l.addi  	r6,r6,2
	l.addi  	r11,r0,-14	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.movhi  	r8,hi(.LC200)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,39	 # move immediate I
	l.addi  	r5,r0,19	 # move immediate I
	l.addi  	r6,r0,2	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r8,r8,lo(.LC200)
	l.addi  	r11,r0,-2	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L6677	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L6674:
	l.lwz   	r26,20(r18)	 # SI load
	l.ori   	r5,r26,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,98	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3IndexKeyinfo	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.addi  	r4,r0,10	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r7,r2,0	 # move reg to reg
	l.addi  	r11,r0,-16	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L6678	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
.L6671:
	l.lwz   	r4,8(r3)	 # SI load
	l.j     	.L6660	# delay slot filled
	l.ori   	r2,r8,0	 # move reg to reg
.L6679:
	l.j     	.L6660	# delay slot filled
	l.ori   	r2,r8,0	 # move reg to reg
.LFE894:
	.size	sqlite3RefillIndex, .-sqlite3RefillIndex
	.align	4
.proc	sqlite3GenerateRowIndexDelete.clone.143
	.type	sqlite3GenerateRowIndexDelete.clone.143, @function
sqlite3GenerateRowIndexDelete.clone.143:
.LFB1391:
	l.sw    	-28(r1),r2	 # SI store
.LCFI2622:
	l.sw    	-16(r1),r18	 # SI store
.LCFI2623:
	l.sw    	-12(r1),r20	 # SI store
.LCFI2624:
	l.sw    	-8(r1),r22	 # SI store
.LCFI2625:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2626:
	l.sw    	-24(r1),r14	 # SI store
.LCFI2627:
	l.sw    	-20(r1),r16	 # SI store
.LCFI2628:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI2629:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L6680	# delay slot filled
	l.ori   	r22,r6,0	 # move reg to reg
	l.ori   	r14,r6,0	 # move reg to reg
	l.addi  	r16,r5,1
.L6684:
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfeq 	r22,r6
	l.bf	.L6682	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.lwz   	r8,0(r14)	 # SI load
	l.sfeq 	r8,r6
	l.bf	.L6683
	l.nop			# nop delay slot
.L6682:
	l.jal   	sqlite3GenerateIndexKey
	l.nop			# nop delay slot
	l.lwz   	r7,4(r2)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r3,12(r18)	 # SI load
	l.addi  	r4,r0,64	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r7,r7,1
.L6683:
	l.lwz   	r2,32(r2)	 # SI load
	l.addi  	r14,r14,4
	l.sfnei	r2,0
	l.bf	.L6684	# delay slot filled
	l.addi  	r16,r16,1
.L6680:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.LFE1391:
	.size	sqlite3GenerateRowIndexDelete.clone.143, .-sqlite3GenerateRowIndexDelete.clone.143
	.align	4
.proc	sqlite3GenerateRowDelete.clone.144
	.type	sqlite3GenerateRowDelete.clone.144, @function
sqlite3GenerateRowDelete.clone.144:
.LFB1392:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2630:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2631:
	l.lwz   	r2,12(r3)	 # SI load
	l.ori   	r16,r6,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI2632:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2633:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2634:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2635:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2636:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2637:
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI2638:
	l.ori   	r22,r5,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r24,r4,0	 # move reg to reg
	l.addi  	r4,r0,46	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r14,r8,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,0(r22)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3GenerateRowIndexDelete.clone.143	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.sub   	r6,r0,r14
	l.ori   	r3,r2,0	 # move reg to reg
	l.or    	r6,r6,r14
	l.addi  	r4,r0,91	 # move immediate I
	l.srli  	r6,r6,31
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L6687	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-2	 # move immediate I
.L6687:
	l.addi	r1,r1,32
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.j	sqlite3VdbeJumpHere	# delay slot filled	# sibcall s
	l.lwz   	r24,-8(r1)	 # SI load
.LFE1392:
	.size	sqlite3GenerateRowDelete.clone.144, .-sqlite3GenerateRowDelete.clone.144
	.align	4
.proc	sqlite3CompleteInsertion
	.type	sqlite3CompleteInsertion, @function
sqlite3CompleteInsertion:
.LFB990:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2639:
	l.ori   	r18,r3,0	 # move reg to reg
	l.sw    	-44(r1),r2	 # SI store
.LCFI2640:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2641:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2642:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2643:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2644:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2645:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2646:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2647:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2648:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2649:
	l.ori   	r20,r4,0	 # move reg to reg
	l.addi  	r1,r1,-48
.LCFI2650:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r4,r18,12
	l.ori   	r28,r5,0	 # move reg to reg
	l.ori   	r22,r6,0	 # move reg to reg
	l.ori   	r14,r7,0	 # move reg to reg
	l.sw    	0(r1),r8	 # SI store
	l.lwz   	r30,48(r1)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.lwz   	r24,56(r1)	 # SI load
	l.lwz   	r12,20(r20)	 # SI load
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfeqi	r12,0
	l.bnf	.L6690	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L6708	# delay slot filled
	l.lbz   	r3,21(r18)	 # zero_extendqisi2
.L6702:
	l.ori   	r2,r11,0	 # move reg to reg
.L6690:
	l.lwz   	r12,32(r12)	 # SI load
	l.sfnei	r12,0
	l.bf	.L6702	# delay slot filled
	l.addi  	r11,r2,1
	l.slli  	r3,r2,2
	l.addi  	r26,r28,1
	l.j     	.L6692	# delay slot filled
	l.add   	r14,r14,r3
.L6691:
	l.addi  	r2,r2,-1
	l.sfnei	r2,-1
	l.bnf	.L6689
	l.nop			# nop delay slot
.L6692:
	l.lwz   	r6,0(r14)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L6691	# delay slot filled
	l.addi  	r14,r14,-4
	l.add   	r5,r26,r2
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,108	 # move immediate I
	l.sfeqi	r24,0
	l.bf	.L6691	# delay slot filled
	l.sfeqi	r16,0
	l.bf	.L6691
	l.nop			# nop delay slot
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6691
	l.nop			# nop delay slot
	l.lwz   	r4,12(r16)	 # SI load
	l.addi  	r2,r2,-1
	l.addi  	r4,r4,-1
	l.sfnei	r2,-1
	l.slli  	r6,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r6,r4
	l.add   	r3,r3,r4
	l.addi  	r4,r0,16	 # movqi: move immediate
	l.bf	.L6692	# delay slot filled
	l.sb    	3(r3),r4	    # movqi
.L6689:
	l.lbz   	r3,21(r18)	 # zero_extendqisi2
.L6708:
	l.sfnei	r3,0
	l.bf	.L6693	# delay slot filled
	l.addi  	r2,r22,1
	l.lwz   	r14,72(r18)	 # SI load
	l.addi  	r14,r14,1
	l.sw    	72(r18),r14	 # SI store
.L6694:
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r6,12(r20)	 # SI load
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3TableAffinityStr	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.lwz   	r5,12(r20)	 # SI load
	l.sfltsi	r30,0
	l.bf	.L6695	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,110	 # move immediate I
	l.ori   	r5,r30,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
.L6695:
	l.lbz   	r3,19(r18)	 # zero_extendqisi2
	l.addi  	r2,r0,0	 # move immediate I
	l.sfne 	r3,r2
	l.bf	.L6710	# delay slot filled
	l.lwz   	r3,52(r1)	 # SI load
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L6706	# delay slot filled
	l.addi  	r2,r0,3	 # move immediate I
.L6696:
	l.lwz   	r3,52(r1)	 # SI load
.L6710:
	l.sfeqi	r3,0
	l.bf	.L6711	# delay slot filled
	l.sfeqi	r24,0
	l.ori   	r2,r2,8
.L6711:
	l.bf	.L6712	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r2,r2,16
.L6712:
	l.addi  	r4,r0,110	 # move immediate I
	l.ori   	r5,r28,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.lbz   	r3,19(r18)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L6707	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r16,0
.L6709:
	l.bf	.L6688
	l.nop			# nop delay slot
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6688
	l.nop			# nop delay slot
	l.lwz   	r4,12(r16)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.sb    	3(r3),r2	    # movqi
.L6688:
	l.addi	r1,r1,48
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L6693:
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r18),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r18,r3
	l.j     	.L6694	# delay slot filled
	l.lwz   	r14,0(r3)	 # SI load
.L6706:
	l.j     	.L6696	# delay slot filled
	l.addi  	r2,r0,5	 # move immediate I
.L6707:
	l.addi  	r4,r0,-1	 # move immediate I
	l.lwz   	r5,4(r20)	 # SI load
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-2	 # move immediate I
	l.j     	.L6709	# delay slot filled
	l.sfeqi	r16,0
.LFE990:
	.size	sqlite3CompleteInsertion, .-sqlite3CompleteInsertion
	.align	4
.proc	autoIncBegin.clone.145
	.type	autoIncBegin.clone.145, @function
autoIncBegin.clone.145:
.LFB1393:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2651:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2652:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2653:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2654:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2655:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2656:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2657:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2658:
	l.andi  	r14,r6,8
	l.addi  	r1,r1,-36
.LCFI2659:
	l.ori   	r7,r4,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bnf	.L6717	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
	l.addi	r1,r1,36
.L6718:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L6717:
	l.add   	r4,r4,r4
	l.lwz   	r5,0(r3)	 # SI load
	l.add   	r4,r4,r7
	l.lwz   	r5,8(r5)	 # SI load
	l.slli  	r4,r4,3
	l.lwz   	r16,68(r3)	 # SI load
	l.lwz   	r14,72(r3)	 # SI load
	l.add   	r4,r5,r4
	l.addi  	r8,r16,1
	l.lwz   	r6,20(r4)	 # SI load
	l.addi  	r22,r14,3
	l.lwz   	r6,52(r6)	 # SI load
	l.ori   	r5,r7,0	 # move reg to reg
	l.sw    	68(r3),r8	 # SI store
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r7,r0,13	 # move immediate I
	l.sw    	72(r3),r22	 # SI store
	l.jal   	sqlite3OpenTable	# delay slot filled
	l.lwz   	r2,12(r3)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r24,r14,1
	l.lwz   	r20,12(r2)	 # SI load
	l.lwz   	r8,0(r18)	 # SI load
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.ori   	r6,r24,0	 # move reg to reg
	l.addi  	r18,r20,9
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r4,r0,122	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r14,r14,2
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,73	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.addi  	r6,r20,7
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.lwz   	r3,20(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6715
	l.nop			# nop delay slot
	l.lwz   	r4,12(r2)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.addi  	r4,r0,8	 # movqi: move immediate
	l.sb    	3(r3),r4	    # movqi
.L6715:
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,40	 # move immediate I
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r6,r20,2
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,106	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L6718	# delay slot filled
	l.addi	r1,r1,36
.LFE1393:
	.size	autoIncBegin.clone.145, .-autoIncBegin.clone.145
	.align	4
.proc	autoIncEnd.clone.146
	.type	autoIncEnd.clone.146, @function
autoIncEnd.clone.146:
.LFB1394:
	l.sw    	-20(r1),r16	 # SI store
.LCFI2660:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2661:
	l.sw    	-28(r1),r2	 # SI store
.LCFI2662:
	l.sw    	-24(r1),r14	 # SI store
.LCFI2663:
	l.sw    	-16(r1),r18	 # SI store
.LCFI2664:
	l.sw    	-12(r1),r20	 # SI store
.LCFI2665:
	l.sw    	-8(r1),r22	 # SI store
.LCFI2666:
	l.andi  	r5,r5,8
	l.addi  	r1,r1,-28
.LCFI2667:
	l.ori   	r8,r4,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bnf	.L6722	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L6722:
	l.add   	r4,r4,r4
	l.lwz   	r5,0(r3)	 # SI load
	l.add   	r4,r4,r8
	l.lwz   	r5,8(r5)	 # SI load
	l.slli  	r4,r4,3
	l.lwz   	r14,68(r3)	 # SI load
	l.lwz   	r20,72(r3)	 # SI load
	l.add   	r4,r5,r4
	l.addi  	r20,r20,1
	l.lwz   	r4,20(r4)	 # SI load
	l.addi  	r11,r14,1
	l.ori   	r5,r8,0	 # move reg to reg
	l.lwz   	r6,52(r4)	 # SI load
	l.addi  	r7,r0,10	 # move immediate I
	l.sw    	68(r3),r11	 # SI store
	l.ori   	r4,r14,0	 # move reg to reg
	l.sw    	72(r3),r20	 # SI store
	l.lwz   	r2,12(r3)	 # SI load
	l.jal   	sqlite3OpenTable	# delay slot filled
	l.addi  	r18,r16,1
	l.addi  	r4,r0,72	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,79	 # move immediate I
	l.addi  	r5,r16,-1
	l.addi  	r6,r0,2	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,110	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L6721
	l.nop			# nop delay slot
	l.lwz   	r3,20(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6721
	l.nop			# nop delay slot
	l.lwz   	r4,12(r2)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.addi  	r4,r0,8	 # movqi: move immediate
	l.sb    	3(r3),r4	    # movqi
.L6721:
	l.addi	r1,r1,28
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.j	sqlite3VdbeAddOp1	# delay slot filled	# sibcall s
	l.lwz   	r22,-8(r1)	 # SI load
.LFE1394:
	.size	autoIncEnd.clone.146, .-autoIncEnd.clone.146
	.section	.rodata.str1.1
.LC201:
	.string	"aaa"
	.section .text
	.align	4
.proc	analyzeOneTable
	.type	analyzeOneTable, @function
analyzeOneTable:
.LFB821:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2668:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2669:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2670:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2671:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2672:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2673:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2674:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2675:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2676:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2677:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2678:
	l.addi  	r1,r1,-84
.LCFI2679:
	l.ori   	r20,r6,0	 # move reg to reg
	l.sw    	16(r1),r3	 # SI store
	l.sw    	28(r1),r4	 # SI store
	l.lwz   	r2,16(r1)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r4,r2,12
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.sw    	36(r1),r5	 # SI store
	l.sub   	r3,r0,r11
	l.or    	r3,r11,r3
	l.sfgesi	r3,0
	l.bf	.L6723	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,28(r1)	 # SI load
	l.sub   	r30,r0,r3
	l.or    	r30,r3,r30
	l.xori  	r30,r30,0xffff
	l.srli  	r30,r30,31
	l.sfnei	r30,0
	l.bf	.L6723
	l.nop			# nop delay slot
	l.lwz   	r3,20(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6723	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r5,28(r1)	 # SI load
	l.lwz   	r4,72(r5)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L6751	# delay slot filled
	l.lwz   	r3,0(r6)	 # SI load
	l.lwz   	r8,4(r3)	 # SI load
	l.sfgtsi	r8,0
	l.bnf	.L6752
	l.nop			# nop delay slot
	l.lwz   	r5,8(r3)	 # SI load
	l.lwz   	r3,20(r5)	 # SI load
	l.sfeq 	r4,r3
	l.bf	.L6726	# delay slot filled
	l.ori   	r7,r5,0	 # move reg to reg
	l.j     	.L6728	# delay slot filled
	l.addi  	r6,r5,24
.L6729:
	l.lwz   	r3,20(r6)	 # SI load
	l.sfeq 	r4,r3
	l.bf	.L6726	# delay slot filled
	l.addi  	r6,r6,24
.L6728:
	l.addi  	r30,r30,1
	l.sflts 	r30,r8
	l.bf	.L6729	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.add   	r7,r30,r30
	l.add   	r7,r7,r30
	l.slli  	r7,r7,3
	l.add   	r7,r5,r7
.L6726:
	l.lwz   	r11,28(r1)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.addi  	r4,r0,28	 # move immediate I
	l.lwz   	r5,4(r11)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.lwz   	r7,0(r7)	 # SI load
	l.sfnei	r11,0
	l.bf	.L6723	# delay slot filled
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r8,28(r1)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r30,0	 # move reg to reg
	l.lwz   	r5,24(r6)	 # SI load
	l.lwz   	r7,4(r8)	 # SI load
	l.jal   	sqlite3TableLock	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r11,16(r1)	 # SI load
	l.lwz   	r3,28(r1)	 # SI load
	l.lwz   	r24,68(r11)	 # SI load
	l.lwz   	r3,20(r3)	 # SI load
	l.sw    	8(r1),r3	 # SI store
	l.addi  	r3,r24,1
	l.lwz   	r4,8(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L6723	# delay slot filled
	l.sw    	68(r11),r3	 # SI store
	l.addi  	r5,r20,1
	l.sw    	4(r1),r5	 # SI store
.L6745:
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	sqlite3IndexKeyinfo	# delay slot filled
	l.lwz   	r4,8(r1)	 # SI load
	l.lwz   	r7,8(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r6,20(r7)	 # SI load
	l.lwz   	r16,4(r7)	 # SI load
	l.addi  	r4,r0,13	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.ori   	r7,r30,0	 # move reg to reg
	l.addi  	r11,r0,-16	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.add   	r3,r16,r16
	l.lwz   	r5,16(r1)	 # SI load
	l.add   	r3,r20,r3
	l.lwz   	r4,72(r5)	 # SI load
	l.addi  	r6,r3,4
	l.sw    	12(r1),r3	 # SI store
	l.sw    	20(r1),r6	 # SI store
	l.sfles 	r6,r4
	l.bf	.L6730	# delay slot filled
	l.addi  	r14,r3,3
	l.sw    	72(r5),r6	 # SI store
.L6730:
	l.sfltsi	r16,0
	l.bf	.L6731	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.add   	r6,r18,r20
.L6754:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r18,r18,1
	l.sfges 	r16,r18
	l.bf	.L6754	# delay slot filled
	l.add   	r6,r18,r20
	l.sflesi	r16,0
	l.bf	.L6731	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.addi  	r26,r16,1
	l.add   	r26,r26,r20
.L6733:
	l.add   	r6,r18,r26
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r18,r18,1
	l.sfgts 	r16,r18
	l.bf	.L6733	# delay slot filled
	l.ori   	r22,r26,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,122	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	24(r1),r11	 # SI store
	l.lwz   	r7,12(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,42	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	32(r1),r7	 # SI store
	l.ori   	r6,r18,0	 # move reg to reg
.L6755:
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.add   	r7,r18,r26
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,73	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r18,r18,1
	l.lwz   	r8,20(r2)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L6734	# delay slot filled
	l.addi  	r11,r0,8	 # movqi: move immediate
	l.lwz   	r12,12(r2)	 # SI load
	l.addi  	r12,r12,-1
	l.slli  	r13,r12,2
	l.slli  	r12,r12,4
	l.add   	r12,r13,r12
	l.add   	r8,r8,r12
	l.sb    	3(r8),r11	    # movqi
.L6734:
	l.sfgts 	r16,r18
	l.bf	.L6755	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.lwz   	r7,32(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r6,24(r1)	 # SI load
	l.addi  	r26,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r28,r7,2
.L6736:
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.addi  	r18,r26,1
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,42	 # move immediate I
	l.add   	r5,r18,r20
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r28,r28,2
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r7,r22,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r26,r18,0	 # move reg to reg
	l.sfgts 	r16,r18
	l.bf	.L6736	# delay slot filled
	l.addi  	r22,r22,1
	l.lwz   	r3,32(r2)	 # SI load
.L6753:
	l.sfeqi	r3,0
	l.bf	.L6737	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
	l.lwz   	r8,24(r1)	 # SI load
	l.xori  	r5,r8,0xffff
	l.slli  	r5,r5,2
	l.add   	r3,r3,r5
	l.sw    	0(r3),r4	 # SI store
.L6737:
	l.lwz   	r6,32(r1)	 # SI load
	l.addi  	r4,r0,106	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r11,12(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r18,r11,2
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,68	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,28(r1)	 # SI load
	l.ori   	r7,r5,0	 # move reg to reg
	l.lwz   	r8,4(r3)	 # SI load
	l.addi  	r4,r0,94	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r6,12(r1)	 # SI load
	l.sw    	0(r1),r5	 # SI store
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r8,12(r1)	 # SI load
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r11,8(r1)	 # SI load
	l.ori   	r7,r5,0	 # move reg to reg
	l.addi  	r6,r8,1
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.lwz   	r8,0(r11)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.sflesi	r16,0
	l.bf	.L6756	# delay slot filled
	l.movhi  	r8,hi(.LC201)
	l.addi  	r22,r0,0	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
.L6757:
	l.movhi  	r8,hi(.LC57)
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r8,r8,lo(.LC57)
	l.addi  	r4,r0,94	 # move immediate I
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r8,4(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,89	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.add   	r26,r8,r22
	l.ori   	r7,r14,0	 # move reg to reg
	l.addi  	r4,r0,84	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r22,r22,1
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,42	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,-1	 # move immediate I
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,87	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,144	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,89	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.sfgts 	r16,r22
	l.bf	.L6757	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.movhi  	r8,hi(.LC201)
.L6756:
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r8,r8,lo(.LC201)
	l.addi  	r4,r0,79	 # move immediate I
	l.lwz   	r5,12(r1)	 # SI load
	l.addi  	r6,r0,3	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r11,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.lwz   	r5,36(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,110	 # move immediate I
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r6,20(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.lwz   	r3,20(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6740
	l.nop			# nop delay slot
	l.lwz   	r5,12(r2)	 # SI load
	l.addi  	r5,r5,-1
	l.slli  	r4,r5,2
	l.slli  	r5,r5,4
	l.add   	r5,r4,r5
	l.addi  	r4,r0,8	 # movqi: move immediate
	l.add   	r3,r3,r5
	l.sb    	3(r3),r4	    # movqi
.L6740:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.lwz   	r5,8(r1)	 # SI load
	l.lwz   	r5,32(r5)	 # SI load
	l.sfnei	r5,0
	l.bf	.L6745	# delay slot filled
	l.sw    	8(r1),r5	 # SI store
.L6723:
	l.addi	r1,r1,84
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L6751:
	l.movhi 	r8,hi(-24051712)	 # move immediate M
	l.lwz   	r7,8(r3)	 # SI load
	l.ori   	r8,r8,51712
	l.movhi 	r30,hi(-1048576)	 # move immediate M
	l.add   	r7,r7,r8
	l.j     	.L6726	# delay slot filled
	l.ori   	r30,r30,48576
.L6731:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.addi  	r4,r0,122	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	24(r1),r11	 # SI store
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r7,12(r2)	 # SI load
	l.addi  	r4,r0,42	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	32(r1),r7	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,24(r1)	 # SI load
	l.j     	.L6753	# delay slot filled
	l.lwz   	r3,32(r2)	 # SI load
.L6752:
	l.j     	.L6726	# delay slot filled
	l.lwz   	r7,8(r3)	 # SI load
.LFE821:
	.size	analyzeOneTable, .-analyzeOneTable
	.align	4
.proc	sqlite3VdbeAddOpList
	.type	sqlite3VdbeAddOpList, @function
sqlite3VdbeAddOpList:
.LFB558:
	l.lwz   	r13,12(r3)	 # SI load
	l.sw    	-16(r1),r2	 # SI store
.LCFI2680:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2681:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2682:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2683:
	l.ori   	r14,r4,0	 # move reg to reg
	l.lwz   	r6,16(r3)	 # SI load
	l.add   	r4,r4,r13
	l.addi  	r1,r1,-16
.LCFI2684:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfles 	r4,r6
	l.bnf	.L6766	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
.L6759:
	l.sflesi	r14,0
	l.bf	.L6760	# delay slot filled
	l.slli  	r12,r13,2
	l.slli  	r3,r13,4
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.add   	r12,r12,r3
.L6764:
	l.lwz   	r6,20(r2)	 # SI load
	l.lbz   	r3,0(r5)	 # zero_extendqisi2
	l.add   	r6,r6,r12
	l.lbs   	r8,2(r5)	 # extendqisi2_no_sext_mem
	l.sb    	0(r6),r3	    # movqi
	l.sfgesi	r8,0
	l.lbs   	r4,1(r5)	 # extendqisi2_no_sext_mem
	l.bnf	.L6767	# delay slot filled
	l.sw    	4(r6),r4	 # SI store
.L6761:
	l.sw    	8(r6),r8	 # SI store
.L6762:
	l.lbs   	r3,3(r5)	 # extendqisi2_no_sext_mem
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sw    	12(r6),r3	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r7,r7,1
	l.sb    	1(r6),r4	    # movqi
	l.sw    	16(r6),r3	 # SI store
	l.sb    	3(r6),r4	    # movqi
	l.sfeq 	r7,r14
	l.bf	.L6763	# delay slot filled
	l.addi  	r12,r12,20
	l.j     	.L6764	# delay slot filled
	l.addi  	r5,r5,4
.L6767:
	l.movhi  	r4,hi(opcodeProperty)
	l.ori   	r4,r4,lo(opcodeProperty)
	l.add   	r3,r3,r4
	l.xori  	r4,r8,0xffff
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L6761	# delay slot filled
	l.add   	r4,r13,r4
	l.j     	.L6762	# delay slot filled
	l.sw    	8(r6),r4	 # SI store
.L6763:
	l.lwz   	r3,12(r2)	 # SI load
	l.add   	r7,r3,r7
	l.sw    	12(r2),r7	 # SI store
.L6760:
	l.addi	r1,r1,16
	l.ori   	r11,r13,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L6766:
	l.jal   	growOpArray
	l.nop			# nop delay slot
	l.addi  	r13,r0,0	 # move immediate I
	l.sfne 	r11,r13
	l.bf	.L6760
	l.nop			# nop delay slot
	l.j     	.L6759	# delay slot filled
	l.lwz   	r13,12(r2)	 # SI load
.LFE558:
	.size	sqlite3VdbeAddOpList, .-sqlite3VdbeAddOpList
	.align	4
.proc	sqlite3SrcListEnlarge
	.type	sqlite3SrcListEnlarge, @function
sqlite3SrcListEnlarge:
.LFB903:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2685:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2686:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2687:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2688:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2689:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2690:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI2691:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L6769	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
	l.lhs   	r5,0(r4)	 # extendhisi2_no_sext_mem
	l.sflts 	r5,r6
	l.bf	.L6769
	l.nop			# nop delay slot
	l.lhs   	r7,2(r4)	 # extendhisi2_no_sext_mem
	l.add   	r6,r16,r5
	l.sfles 	r6,r7
	l.bnf	.L6776	# delay slot filled
	l.addi  	r8,r5,-1
	l.sfgts 	r2,r8
	l.bf	.L6771
	l.nop			# nop delay slot
.L6777:
	l.addi  	r4,r16,-1
	l.add   	r3,r8,r8
	l.add   	r5,r4,r5
	l.add   	r3,r3,r8
	l.add   	r4,r5,r5
	l.slli  	r11,r3,4
	l.add   	r4,r4,r5
	l.slli  	r7,r4,4
	l.add   	r3,r3,r11
	l.add   	r4,r4,r7
	l.add   	r3,r3,r8
	l.add   	r5,r4,r5
	l.addi  	r3,r3,4
	l.addi  	r7,r5,4
	l.add   	r3,r14,r3
	l.add   	r7,r14,r7
.L6772:
	l.lwz   	r4,0(r3)	 # SI load
	l.addi  	r8,r8,-1
	l.sw    	0(r7),r4	 # SI store
	l.sfles 	r2,r8
	l.lwz   	r4,4(r3)	 # SI load
	l.sw    	4(r7),r4	 # SI store
	l.lwz   	r4,8(r3)	 # SI load
	l.sw    	8(r7),r4	 # SI store
	l.lwz   	r4,12(r3)	 # SI load
	l.sw    	12(r7),r4	 # SI store
	l.lwz   	r4,16(r3)	 # SI load
	l.sw    	16(r7),r4	 # SI store
	l.lwz   	r4,20(r3)	 # SI load
	l.sw    	20(r7),r4	 # SI store
	l.lwz   	r4,24(r3)	 # SI load
	l.sw    	24(r7),r4	 # SI store
	l.lwz   	r4,28(r3)	 # SI load
	l.sw    	28(r7),r4	 # SI store
	l.lwz   	r4,32(r3)	 # SI load
	l.sw    	32(r7),r4	 # SI store
	l.lwz   	r4,36(r3)	 # SI load
	l.sw    	36(r7),r4	 # SI store
	l.lwz   	r4,40(r3)	 # SI load
	l.sw    	40(r7),r4	 # SI store
	l.lwz   	r4,44(r3)	 # SI load
	l.sw    	44(r7),r4	 # SI store
	l.lwz   	r4,48(r3)	 # SI load
	l.addi  	r3,r3,-52
	l.sw    	48(r7),r4	 # SI store
	l.bf	.L6772	# delay slot filled
	l.addi  	r7,r7,-52
.L6771:
	l.add   	r5,r2,r2
.L6778:
	l.add   	r4,r16,r16
	l.add   	r5,r5,r2
	l.add   	r4,r4,r16
	l.slli  	r18,r5,4
	l.slli  	r7,r4,4
	l.addi  	r3,r14,4
	l.add   	r5,r5,r18
	l.add   	r7,r4,r7
	l.add   	r18,r5,r2
	l.sh    	0(r14),r6	 # movhi
	l.add   	r5,r7,r16
	l.add   	r3,r3,r18
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.add   	r16,r2,r16
	l.sfges 	r2,r16
	l.bf	.L6769
	l.nop			# nop delay slot
	l.addi  	r3,r18,28
	l.ori   	r6,r2,0	 # move reg to reg
	l.add   	r3,r14,r3
	l.addi  	r2,r0,-1	 # move immediate I
.L6773:
	l.sw    	0(r3),r2	 # SI store
	l.addi  	r6,r6,1
	l.sflts 	r6,r16
	l.bf	.L6773	# delay slot filled
	l.addi  	r3,r3,52
.L6769:
	l.addi	r1,r1,24
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L6776:
	l.addi  	r6,r6,-1
	l.add   	r5,r6,r6
	l.add   	r5,r5,r6
	l.slli  	r7,r5,4
	l.add   	r5,r5,r7
	l.add   	r5,r5,r6
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.addi  	r5,r5,56
	l.sfeqi	r11,0
	l.bf	.L6769	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3DbMallocSize	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r4,r0,52	 # move immediate I
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r3,r11,-56
	l.lhs   	r5,0(r20)	 # extendhisi2_no_sext_mem
	l.addi  	r11,r11,1
	l.addi  	r8,r5,-1
	l.sh    	2(r20),r11	 # movhi
	l.sfgts 	r2,r8
	l.bnf	.L6777	# delay slot filled
	l.add   	r6,r16,r5
	l.j     	.L6778	# delay slot filled
	l.add   	r5,r2,r2
.LFE903:
	.size	sqlite3SrcListEnlarge, .-sqlite3SrcListEnlarge
	.align	4
.proc	sqlite3SrcListAppend
	.type	sqlite3SrcListAppend, @function
sqlite3SrcListAppend:
.LFB904:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2692:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2693:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2694:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2695:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2696:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2697:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI2698:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfnei	r4,0
	l.bnf	.L6785	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
.L6780:
	l.lhs   	r6,0(r2)	 # extendhisi2_no_sext_mem
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3SrcListEnlarge	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.lbz   	r3,30(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L6786	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhs   	r18,0(r11)	 # extendhisi2_no_sext_mem
	l.sfeqi	r16,0
	l.bf	.L6783	# delay slot filled
	l.addi  	r18,r18,-1
	l.lwz   	r3,0(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L6784
	l.nop			# nop delay slot
	l.sub   	r3,r0,r20
	l.or    	r3,r20,r3
	l.sfgesi	r3,0
	l.bf	.L6783	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r20,r16,0	 # move reg to reg
	l.ori   	r16,r3,0	 # move reg to reg
.L6783:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.add   	r5,r18,r18
	l.ori   	r3,r14,0	 # move reg to reg
	l.add   	r5,r5,r18
	l.ori   	r4,r16,0	 # move reg to reg
	l.slli  	r6,r5,4
	l.add   	r5,r5,r6
	l.add   	r18,r5,r18
	l.add   	r18,r2,r18
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.sw    	8(r18),r11	 # SI store
	l.sw    	4(r18),r11	 # SI store
.L6781:
	l.addi	r1,r1,24
.L6787:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L6784:
	l.j     	.L6783	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
.L6786:
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L6787	# delay slot filled
	l.addi	r1,r1,24
.L6785:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r0,56	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L6781	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.j     	.L6780	# delay slot filled
	l.sh    	2(r11),r3	 # movhi
.LFE904:
	.size	sqlite3SrcListAppend, .-sqlite3SrcListAppend
	.align	4
.proc	sqlite3SrcListAppendFromTerm.clone.147
	.type	sqlite3SrcListAppendFromTerm.clone.147, @function
sqlite3SrcListAppendFromTerm.clone.147:
.LFB1395:
	l.sw    	-36(r1),r2	 # SI store
.LCFI2699:
	l.sw    	-28(r1),r16	 # SI store
.LCFI2700:
	l.sw    	-24(r1),r18	 # SI store
.LCFI2701:
	l.sw    	-20(r1),r20	 # SI store
.LCFI2702:
	l.sw    	-12(r1),r24	 # SI store
.LCFI2703:
	l.sw    	-8(r1),r26	 # SI store
.LCFI2704:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2705:
	l.sw    	-32(r1),r14	 # SI store
.LCFI2706:
	l.sw    	-16(r1),r22	 # SI store
.LCFI2707:
	l.addi  	r1,r1,-36
.LCFI2708:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r16,r7,0	 # move reg to reg
	l.ori   	r20,r8,0	 # move reg to reg
	l.lwz   	r26,36(r1)	 # SI load
	l.jal   	sqlite3SrcListAppend	# delay slot filled
	l.lwz   	r24,40(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L6789	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhs   	r14,0(r11)	 # extendhisi2_no_sext_mem
	l.sfnei	r14,0
	l.bnf	.L6789	# delay slot filled
	l.addi  	r14,r14,-1
	l.sfeqi	r16,0
	l.bf	.L6792	# delay slot filled
	l.add   	r22,r14,r14
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r3,4(r16)	 # SI load
	l.ori   	r4,r4,65535
	l.and   	r3,r3,r4
	l.sfeqi	r3,0
	l.bnf	.L6795	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L6792:
	l.add   	r3,r22,r14
	l.slli  	r5,r3,4
	l.add   	r3,r3,r5
	l.add   	r14,r3,r14
	l.add   	r14,r2,r14
	l.sw    	20(r14),r20	 # SI store
	l.sw    	32(r14),r26	 # SI store
	l.sw    	36(r14),r24	 # SI store
	l.addi	r1,r1,36
.L6796:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L6789:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3IdListDelete	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L6796	# delay slot filled
	l.addi	r1,r1,36
.L6795:
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.add   	r3,r22,r14
	l.slli  	r4,r3,4
	l.add   	r3,r3,r4
	l.add   	r3,r3,r14
	l.add   	r3,r2,r3
	l.j     	.L6792	# delay slot filled
	l.sw    	12(r3),r11	 # SI store
.LFE1395:
	.size	sqlite3SrcListAppendFromTerm.clone.147, .-sqlite3SrcListAppendFromTerm.clone.147
	.align	4
.proc	targetSrcList.clone.148
	.type	targetSrcList.clone.148, @function
targetSrcList.clone.148:
.LFB1396:
	l.ori   	r6,r4,0	 # move reg to reg
	l.lwz   	r4,8(r4)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI2709:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2710:
	l.lwz   	r12,28(r4)	 # SI load
	l.sfeqi	r12,0
.LCFI2711:
	l.bf	.L6798	# delay slot filled
	l.addi  	r1,r1,-16
	l.lwz   	r13,4(r3)	 # SI load
	l.sfgtsi	r13,0
	l.bnf	.L6810
	l.nop			# nop delay slot
	l.lwz   	r4,8(r3)	 # SI load
	l.lwz   	r5,20(r4)	 # SI load
	l.sfeq 	r12,r5
	l.bf	.L6807	# delay slot filled
	l.addi  	r8,r4,44
	l.j     	.L6801	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L6803:
	l.lwz   	r11,0(r8)	 # SI load
	l.sfeq 	r12,r11
	l.bf	.L6802	# delay slot filled
	l.addi  	r8,r8,24
.L6801:
	l.addi  	r7,r7,1
	l.sflts 	r7,r13
	l.bf	.L6803
	l.nop			# nop delay slot
.L6802:
	l.sflesi	r7,1
	l.bf	.L6798	# delay slot filled
	l.add   	r5,r7,r7
	l.add   	r7,r5,r7
	l.slli  	r7,r7,3
.L6800:
	l.add   	r4,r4,r7
	l.lwz   	r4,0(r4)	 # SI load
	l.sw    	0(r1),r4	 # SI store
	l.lbs   	r7,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r7,0
	l.bf	.L6811	# delay slot filled
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.ori   	r7,r4,0	 # move reg to reg
	l.addi  	r7,r7,1
.L6812:
	l.lbs   	r8,0(r7)	 # extendqisi2_no_sext_mem
	l.sfnei	r8,0
	l.bf	.L6812	# delay slot filled
	l.addi  	r7,r7,1
	l.addi  	r7,r7,-1
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.sub   	r7,r7,r4
	l.ori   	r2,r2,65535
	l.and   	r7,r7,r2
	l.movhi 	r2,hi(1073676288)	 # move immediate M
.L6811:
	l.lwz   	r4,4(r1)	 # SI load
	l.ori   	r2,r2,65535
	l.ori   	r5,r1,0	 # move reg to reg
	l.and   	r7,r7,r2
	l.movhi 	r2,hi(-2147483648)	 # move immediate M
	l.addi  	r6,r6,16
	l.and   	r4,r4,r2
	l.or    	r7,r4,r7
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3SrcListAppend	# delay slot filled
	l.sw    	4(r1),r7	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L6798:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r6,16
	l.jal   	sqlite3SrcListAppend	# delay slot filled
	l.ori   	r6,r4,0	 # move reg to reg
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L6810:
	l.lwz   	r4,8(r3)	 # SI load
	l.j     	.L6800	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L6807:
	l.j     	.L6800	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.LFE1396:
	.size	targetSrcList.clone.148, .-targetSrcList.clone.148
	.align	4
.proc	sqlite3ArrayAllocate
	.type	sqlite3ArrayAllocate, @function
sqlite3ArrayAllocate:
.LFB899:
	l.sw    	-28(r1),r2	 # SI store
.LCFI2712:
	l.sw    	-24(r1),r14	 # SI store
.LCFI2713:
	l.sw    	-20(r1),r16	 # SI store
.LCFI2714:
	l.sw    	-16(r1),r18	 # SI store
.LCFI2715:
	l.sw    	-12(r1),r20	 # SI store
.LCFI2716:
	l.sw    	-8(r1),r22	 # SI store
.LCFI2717:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2718:
	l.ori   	r2,r7,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI2719:
	l.lwz   	r7,0(r7)	 # SI load
	l.lwz   	r11,0(r8)	 # SI load
	l.ori   	r18,r8,0	 # move reg to reg
	l.ori   	r20,r3,0	 # move reg to reg
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r14,r5,0	 # move reg to reg
	l.sflts 	r7,r11
	l.bf	.L6814	# delay slot filled
	l.lwz   	r22,28(r1)	 # SI load
	l.add   	r11,r11,r11
	l.add   	r6,r11,r6
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.mul   	r5,r6,r5
	l.sfnei	r11,0
	l.bnf	.L6817	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3DbMallocSize	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.sw    	0(r18),r11	 # SI store
	l.lwz   	r7,0(r2)	 # SI load
.L6814:
	l.mul   	r3,r7,r14
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r3,r16,r3
	l.jal   	memset	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.sw    	0(r22),r3	 # SI store
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	0(r2),r3	 # SI store
.L6816:
	l.addi	r1,r1,28
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L6817:
	l.addi  	r2,r0,-1	 # move immediate I
	l.j     	.L6816	# delay slot filled
	l.sw    	0(r22),r2	 # SI store
.LFE899:
	.size	sqlite3ArrayAllocate, .-sqlite3ArrayAllocate
	.align	4
.proc	analyzeAggregate
	.type	analyzeAggregate, @function
analyzeAggregate:
.LFB804:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2720:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2721:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2722:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2723:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2724:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2725:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2726:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2727:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.lwz   	r3,12(r3)	 # SI load
	l.addi  	r1,r1,-40
.LCFI2728:
	l.lwz   	r20,0(r3)	 # SI load
	l.lwz   	r4,4(r3)	 # SI load
	l.sfeqi	r5,152
	l.bf	.L6821	# delay slot filled
	l.lwz   	r18,28(r3)	 # SI load
	l.sfeqi	r5,153
	l.bf	.L6820	# delay slot filled
	l.sfeqi	r5,151
	l.bf	.L6820	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L6819:
	l.addi	r1,r1,40
.L6853:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L6820:
	l.sfeqi	r4,0
	l.bf	.L6819	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.lhs   	r7,0(r4)	 # extendhisi2_no_sext_mem
	l.sflesi	r7,0
	l.bf	.L6819
	l.nop			# nop delay slot
	l.lwz   	r6,36(r2)	 # SI load
	l.lwz   	r3,28(r4)	 # SI load
	l.sfeq 	r6,r3
	l.bf	.L6822	# delay slot filled
	l.addi  	r4,r4,80
	l.j     	.L6824	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L6832:
	l.lwz   	r5,0(r4)	 # SI load
	l.sfne 	r5,r6
	l.bnf	.L6822	# delay slot filled
	l.addi  	r4,r4,52
.L6824:
	l.addi  	r3,r3,1
	l.sflts 	r3,r7
	l.bf	.L6832	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.j     	.L6853	# delay slot filled
	l.addi	r1,r1,40
.L6821:
	l.lwz   	r14,24(r3)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sfne 	r14,r11
	l.bf	.L6819
	l.nop			# nop delay slot
	l.lwz   	r22,36(r18)	 # SI load
	l.sfles 	r22,r11
	l.bf	.L6833	# delay slot filled
	l.lwz   	r24,32(r18)	 # SI load
	l.j     	.L6835	# delay slot filled
	l.ori   	r16,r24,0	 # move reg to reg
.L6850:
	l.sfles 	r22,r14
	l.bf	.L6833
	l.nop			# nop delay slot
.L6835:
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCompare	# delay slot filled
	l.addi  	r16,r16,16
	l.sfnei	r11,0
	l.bnf	.L6850	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
.L6834:
	l.sw    	48(r2),r14	 # SI store
	l.sw    	44(r2),r18	 # SI store
	l.j     	.L6819	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L6833:
	l.lwz   	r3,0(r20)	 # SI load
	l.addi  	r5,r0,16	 # move immediate I
	l.lwz   	r4,8(r3)	 # SI load
	l.addi  	r6,r0,3	 # move immediate I
	l.lwz   	r11,20(r4)	 # SI load
	l.addi  	r7,r18,36
	l.lbz   	r22,57(r11)	 # zero_extendqisi2
	l.ori   	r4,r24,0	 # move reg to reg
	l.addi  	r11,r1,4
	l.addi  	r8,r18,40
	l.jal   	sqlite3ArrayAllocate	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r14,4(r1)	 # SI load
	l.sfgesi	r14,0
	l.bnf	.L6834	# delay slot filled
	l.sw    	32(r18),r11	 # SI store
	l.slli  	r16,r14,4
	l.lwz   	r4,72(r20)	 # SI load
	l.lwz   	r3,0(r20)	 # SI load
	l.add   	r16,r11,r16
	l.addi  	r4,r4,1
	l.sw    	0(r16),r2	 # SI store
	l.sw    	72(r20),r4	 # SI store
	l.sw    	8(r16),r4	 # SI store
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.lwz   	r5,8(r2)	 # SI load
	l.lwz   	r6,28(r2)	 # SI load
	l.ori   	r7,r7,65535
	l.lwz   	r4,4(r2)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L6836	# delay slot filled
	l.and   	r5,r5,r7
	l.lwz   	r6,0(r6)	 # SI load
.L6836:
	l.ori   	r7,r22,0	 # move reg to reg
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bf	.L6837	# delay slot filled
	l.sw    	4(r16),r11	 # SI store
	l.lwz   	r4,68(r20)	 # SI load
	l.addi  	r3,r4,1
	l.sw    	12(r16),r4	 # SI store
	l.j     	.L6834	# delay slot filled
	l.sw    	68(r20),r3	 # SI store
.L6822:
	l.lwz   	r7,20(r18)	 # SI load
	l.sflesi	r7,0
	l.bf	.L6825	# delay slot filled
	l.lwz   	r4,16(r18)	 # SI load
	l.addi  	r3,r4,4
	l.j     	.L6828	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L6826:
	l.addi  	r5,r5,1
.L6851:
	l.sflts 	r5,r7
	l.bnf	.L6825	# delay slot filled
	l.addi  	r3,r3,24
.L6828:
	l.lwz   	r8,0(r3)	 # SI load
	l.sfne 	r8,r6
	l.bf	.L6826
	l.nop			# nop delay slot
	l.lwz   	r11,4(r3)	 # SI load
	l.lwz   	r8,40(r2)	 # SI load
	l.sfeq 	r11,r8
	l.bnf	.L6851	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
.L6827:
	l.addi  	r3,r0,-103	 # movqi: move immediate
	l.sw    	44(r2),r18	 # SI store
	l.sb    	0(r2),r3	    # movqi
	l.sw    	48(r2),r5	 # SI store
	l.j     	.L6819	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L6825:
	l.addi  	r3,r1,4
	l.addi  	r5,r0,24	 # move immediate I
	l.sw    	0(r1),r3	 # SI store
	l.add   	r8,r18,r5
	l.lwz   	r3,0(r20)	 # SI load
	l.addi  	r6,r0,3	 # move immediate I
	l.jal   	sqlite3ArrayAllocate	# delay slot filled
	l.addi  	r7,r18,20
	l.lwz   	r5,4(r1)	 # SI load
	l.sfgesi	r5,0
	l.bnf	.L6827	# delay slot filled
	l.sw    	16(r18),r11	 # SI store
	l.add   	r3,r5,r5
	l.lwz   	r4,72(r20)	 # SI load
	l.add   	r3,r3,r5
	l.lwz   	r6,56(r2)	 # SI load
	l.slli  	r3,r3,3
	l.lwz   	r12,36(r2)	 # SI load
	l.lwz   	r13,40(r2)	 # SI load
	l.add   	r11,r11,r3
	l.addi  	r4,r4,1
	l.sw    	0(r11),r6	 # SI store
	l.sw    	4(r11),r12	 # SI store
	l.sw    	8(r11),r13	 # SI store
	l.sw    	72(r20),r4	 # SI store
	l.lwz   	r3,8(r18)	 # SI load
	l.sw    	16(r11),r4	 # SI store
	l.addi  	r4,r0,-1	 # move immediate I
	l.sw    	20(r11),r2	 # SI store
	l.sfeqi	r3,0
	l.bf	.L6829	# delay slot filled
	l.sw    	12(r11),r4	 # SI store
	l.lwz   	r8,0(r3)	 # SI load
	l.sflesi	r8,0
	l.bf	.L6829	# delay slot filled
	l.lwz   	r3,12(r3)	 # SI load
	l.j     	.L6831	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L6830:
	l.addi  	r4,r4,1
.L6852:
	l.sfles 	r8,r4
	l.bf	.L6829
	l.nop			# nop delay slot
.L6831:
	l.lwz   	r6,0(r3)	 # SI load
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.sfnei	r7,151
	l.bf	.L6830	# delay slot filled
	l.addi  	r3,r3,16
	l.lwz   	r7,36(r6)	 # SI load
	l.sfne 	r12,r7
	l.bf	.L6830
	l.nop			# nop delay slot
	l.lwz   	r6,40(r6)	 # SI load
	l.sfne 	r13,r6
	l.bf	.L6852	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
	l.j     	.L6827	# delay slot filled
	l.sw    	12(r11),r4	 # SI store
.L6829:
	l.lwz   	r4,12(r18)	 # SI load
	l.addi  	r3,r4,1
	l.sw    	12(r11),r4	 # SI store
	l.j     	.L6827	# delay slot filled
	l.sw    	12(r18),r3	 # SI store
.L6837:
	l.addi  	r3,r0,-1	 # move immediate I
	l.j     	.L6834	# delay slot filled
	l.sw    	12(r16),r3	 # SI store
.LFE804:
	.size	analyzeAggregate, .-analyzeAggregate
	.align	4
.proc	sqlite3IdListAppend
	.type	sqlite3IdListAppend, @function
sqlite3IdListAppend:
.LFB900:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2729:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2730:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2731:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2732:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2733:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2734:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI2735:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfnei	r4,0
	l.bnf	.L6858	# delay slot filled
	l.ori   	r20,r5,0	 # move reg to reg
.L6855:
	l.addi  	r6,r1,4
	l.addi  	r5,r0,8	 # move immediate I
	l.sw    	0(r1),r6	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r6,r0,5	 # move immediate I
	l.addi  	r7,r2,4
	l.jal   	sqlite3ArrayAllocate	# delay slot filled
	l.add   	r8,r2,r5
	l.lwz   	r18,4(r1)	 # SI load
	l.sw    	0(r2),r11	 # SI store
	l.sfgesi	r18,0
	l.bnf	.L6859	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.slli  	r18,r18,3
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.add   	r16,r16,r18
	l.sw    	0(r16),r11	 # SI store
.L6856:
	l.addi	r1,r1,32
.L6860:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L6859:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3IdListDelete	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L6860	# delay slot filled
	l.addi	r1,r1,32
.L6858:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r0,12	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L6856	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.j     	.L6855	# delay slot filled
	l.sw    	8(r11),r3	 # SI store
.LFE900:
	.size	sqlite3IdListAppend, .-sqlite3IdListAppend
	.align	4
.proc	sqlite3ExprListAppend.clone.149
	.type	sqlite3ExprListAppend.clone.149, @function
sqlite3ExprListAppend.clone.149:
.LFB1397:
	l.sw    	-24(r1),r2	 # SI store
.LCFI2736:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2737:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2738:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2739:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2740:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2741:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI2742:
	l.ori   	r20,r3,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfnei	r4,0
	l.bnf	.L6868	# delay slot filled
	l.ori   	r14,r6,0	 # move reg to reg
.L6862:
	l.lwz   	r5,4(r2)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.sfgts 	r5,r3
	l.bnf	.L6869	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L6864:
	l.sub   	r3,r0,r14
	l.or    	r3,r14,r3
	l.sfltsi	r3,0
	l.bf	.L6867	# delay slot filled
	l.sub   	r3,r0,r18
	l.or    	r3,r18,r3
	l.sfgesi	r3,0
	l.bnf	.L6867
	l.nop			# nop delay slot
.L6865:
	l.addi	r1,r1,24
.L6870:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L6867:
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r16,12(r2)	 # SI load
	l.slli  	r5,r4,4
	l.addi  	r4,r4,1
	l.ori   	r3,r20,0	 # move reg to reg
	l.add   	r16,r16,r5
	l.sw    	0(r2),r4	 # SI store
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	0(r16),r4	 # SI store
	l.sw    	4(r16),r4	 # SI store
	l.sw    	8(r16),r4	 # SI store
	l.sw    	12(r16),r4	 # SI store
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r3,r0,0	 # movhi: move immediate
	l.sw    	0(r16),r18	 # SI store
	l.sw    	4(r16),r11	 # SI store
	l.j     	.L6865	# delay slot filled
	l.sh    	12(r16),r3	 # movhi
.L6869:
	l.slli  	r5,r5,5
	l.lwz   	r4,12(r2)	 # SI load
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.addi  	r5,r5,64
	l.sfeqi	r11,0
	l.bf	.L6863	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sw    	12(r2),r11	 # SI store
	l.jal   	sqlite3DbMallocSize	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.srli  	r11,r11,4
	l.j     	.L6864	# delay slot filled
	l.sw    	4(r2),r11	 # SI store
.L6868:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r0,16	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L6862	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L6863:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L6870	# delay slot filled
	l.addi	r1,r1,24
.LFE1397:
	.size	sqlite3ExprListAppend.clone.149, .-sqlite3ExprListAppend.clone.149
	.section	.rodata.str1.1
.LC202:
	.string	"match"
	.section .text
	.align	4
.proc	exprAnalyze
	.type	exprAnalyze, @function
exprAnalyze:
.LFB1147:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2743:
	l.lwz   	r2,0(r4)	 # SI load
	l.sw    	-20(r1),r24	 # SI store
.LCFI2744:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2745:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2746:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2747:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2748:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2749:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2750:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2751:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2752:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2753:
	l.lwz   	r24,0(r2)	 # SI load
	l.addi  	r1,r1,-156
.LCFI2754:
	l.sw    	8(r1),r2	 # SI store
	l.lbz   	r2,30(r24)	 # zero_extendqisi2
	l.sw    	4(r1),r4	 # SI store
	l.sw    	40(r1),r3	 # SI store
	l.sw    	16(r1),r5	 # SI store
	l.sfnei	r2,0
	l.bnf	.L7067	# delay slot filled
	l.sw    	36(r1),r24	 # SI store
.L6871:
	l.addi	r1,r1,156
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L7067:
	l.slli  	r6,r5,3
	l.slli  	r2,r5,5
	l.lwz   	r20,20(r4)	 # SI load
	l.lwz   	r3,4(r4)	 # SI load
	l.add   	r2,r6,r2
	l.sw    	12(r1),r3	 # SI store
	l.add   	r26,r20,r2
	l.sw    	44(r1),r2	 # SI store
	l.lwz   	r4,0(r26)	 # SI load
	l.lwz   	r30,20(r4)	 # SI load
	l.sw    	0(r1),r4	 # SI store
	l.jal   	exprTableUsage	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.lwz   	r5,0(r1)	 # SI load
	l.sw    	28(r1),r11	 # SI store
	l.lbz   	r16,0(r5)	 # zero_extendqisi2
	l.sfnei	r16,70
	l.bnf	.L7068	# delay slot filled
	l.sw    	48(r1),r12	 # SI store
	l.sfnei	r16,71
	l.bnf	.L7069	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
	l.jal   	exprTableUsage	# delay slot filled
	l.lwz   	r4,24(r5)	 # SI load
	l.lwz   	r6,0(r1)	 # SI load
	l.lhz   	r2,2(r6)	 # zero_extendqisi2
		l.sw    	24(r26), r11
		l.sw    	24+4(r26), r12
.L6875:
	l.addi  	r5,r0,0	 # move immediate I
.L7101:
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r4,0(r1)	 # SI load
		l.sw    	20(r1), r5
		l.sw    	20+4(r1), r6
	l.jal   	exprTableUsage	# delay slot filled
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
	l.ori   	r28,r11,0	 # move reg to reg
	l.bf	.L6877	# delay slot filled
	l.ori   	r22,r12,0	 # move reg to reg
	l.lwz   	r6,12(r1)	 # SI load
	l.lwz   	r2,0(r1)	 # SI load
	l.lwz   	r13,0(r6)	 # SI load
	l.sflesi	r13,0
	l.bf	.L6987	# delay slot filled
	l.lwz   	r15,52(r2)	 # SI load
	l.lwz   	r7,4(r6)	 # SI load
	l.sfeq 	r15,r7
	l.bf	.L7070	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.j     	.L6881	# delay slot filled
	l.addi  	r8,r3,8
.L6885:
	l.lwz   	r2,0(r8)	 # SI load
	l.sfne 	r15,r2
	l.bnf	.L7071	# delay slot filled
	l.addi  	r8,r8,4
.L6881:
	l.addi  	r7,r7,1
	l.sflts 	r7,r13
	l.bf	.L6885	# delay slot filled
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r13,r0,0	 # move immediate I
	l.addi  	r14,r0,0	 # move immediate I
		l.sw    	20(r1), r4
		l.sw    	20+4(r1), r5
.L6878:
	l.or    	r28,r28,r13
.L7103:
	l.or    	r22,r22,r14
.L6877:
	l.xori  	r7,r16,70
	l.addi  	r13,r0,-1	 # move immediate I
	l.sub   	r8,r0,r7
	l.addi  	r6,r0,0	 # movhi: move immediate
	l.or    	r7,r8,r7
	l.addi  	r18,r16,-74
	l.xori  	r8,r7,0xffff
	l.sw    	32(r26),r28	 # SI store
	l.sw    	36(r26),r22	 # SI store
	l.sw    	8(r26),r13	 # SI store
	l.sw    	4(r26),r13	 # SI store
	l.sh    	16(r26),r6	 # movhi
	l.srli  	r17,r8,31
	l.sfleui	r18,4
	l.bf	.L6887	# delay slot filled
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.addi  	r8,r0,0	 # movqi: move immediate
.L6887:
	l.andi  	r7,r8,0xff	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L6886	# delay slot filled
	l.sfnei	r17,0
	l.bf	.L6886	# delay slot filled
	l.sfnei	r16,71
	l.bnf	.L6886	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
.L7110:
	l.lbz   	r2,0(r5)	 # zero_extendqisi2
	l.sfnei	r2,69
	l.bnf	.L7072	# delay slot filled
	l.sfnei	r2,66
	l.bnf	.L7073	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
.L6892:
	l.sfnei	r2,150
	l.bnf	.L7074
	l.nop			# nop delay slot
.L6976:
	l.sfnei	r2,150
	l.bnf	.L7035
	l.nop			# nop delay slot
.L6981:
	l.lwz   	r3,24(r26)	 # SI load
.L7102:
	l.lwz   	r2,28(r26)	 # SI load
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r6,24(r1)	 # SI load
	l.or    	r3,r3,r5
	l.or    	r2,r2,r6
	l.sw    	24(r26),r3	 # SI store
	l.j     	.L6871	# delay slot filled
	l.sw    	28(r26),r2	 # SI store
.L7069:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
		l.sw    	24(r26), r2
		l.sw    	24+4(r26), r3
	l.lwz   	r3,0(r1)	 # SI load
	l.j     	.L6875	# delay slot filled
	l.lhz   	r2,2(r3)	 # zero_extendqisi2
.L6886:
	l.lwz   	r13,24(r26)	 # SI load
	l.lwz   	r15,28(r26)	 # SI load
	l.lwz   	r2,28(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.and   	r13,r13,r2
	l.and   	r8,r15,r3
	l.or    	r8,r13,r8
	l.sfnei	r8,0
	l.bf	.L7110	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
	l.lbz   	r8,0(r30)	 # zero_extendqisi2
	l.lwz   	r4,0(r1)	 # SI load
	l.sfnei	r8,151
	l.bnf	.L7075	# delay slot filled
	l.lwz   	r7,24(r4)	 # SI load
.L6889:
	l.sfnei	r7,0
	l.bnf	.L7111	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.sfeqi	r7,151
	l.bf	.L6893
	l.nop			# nop delay slot
.L7061:
	l.lwz   	r3,0(r1)	 # SI load
	l.lwz   	r4,8(r1)	 # SI load
	l.lbz   	r2,0(r3)	 # zero_extendqisi2
	l.j     	.L6892	# delay slot filled
	l.lwz   	r24,0(r4)	 # SI load
.L7068:
	l.lhz   	r2,2(r5)	 # zero_extendqisi2
	l.andi  	r7,r2,4096
	l.sfeqi	r7,0
	l.bf	.L6874	# delay slot filled
	l.lwz   	r6,0(r1)	 # SI load
	l.lwz   	r4,28(r5)	 # SI load
	l.jal   	exprSelectTableUsage	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
		l.sw    	24(r26), r11
		l.sw    	24+4(r26), r12
	l.j     	.L7101	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L7074:
	l.lwz   	r4,0(r1)	 # SI load
	l.lwz   	r7,28(r4)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L7112	# delay slot filled
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.lwz   	r7,0(r7)	 # SI load
	l.sfnei	r7,2
	l.bnf	.L7076	# delay slot filled
	l.movhi 	r6,hi(1073676288)	 # move immediate M
.L7035:
	l.lwz   	r4,0(r1)	 # SI load
	l.movhi 	r5,hi(1073676288)	 # move immediate M
.L7112:
	l.lwz   	r8,8(r4)	 # SI load
	l.ori   	r5,r5,65535
	l.and   	r7,r8,r5
	l.sfnei	r7,5
	l.bf	.L6981
	l.nop			# nop delay slot
	l.lwz   	r3,4(r4)	 # SI load
	l.movhi  	r4,hi(.LC202)
	l.ori   	r5,r7,0	 # move reg to reg
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC202)
	l.sfnei	r11,0
	l.bf	.L6981	# delay slot filled
	l.lwz   	r6,0(r1)	 # SI load
	l.lwz   	r8,28(r6)	 # SI load
	l.lwz   	r11,0(r8)	 # SI load
	l.sfnei	r11,2
	l.bf	.L6981
	l.nop			# nop delay slot
	l.lwz   	r4,12(r8)	 # SI load
	l.lwz   	r16,16(r4)	 # SI load
	l.lbz   	r5,0(r16)	 # zero_extendqisi2
	l.sfnei	r5,151
	l.bf	.L6981	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r18,0(r4)	 # SI load
	l.jal   	exprTableUsage	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r3,12(r1)	 # SI load
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r22,r12,0	 # move reg to reg
	l.jal   	exprTableUsage	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.and   	r11,r11,r20
	l.and   	r12,r12,r22
	l.or    	r14,r11,r12
	l.sfeqi	r14,0
	l.bnf	.L6981
	l.nop			# nop delay slot
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r3,36(r1)	 # SI load
	l.jal   	sqlite3Expr	# delay slot filled
	l.addi  	r4,r0,49	 # move immediate I
	l.lwz   	r3,4(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	whereClauseInsert	# delay slot filled
	l.addi  	r5,r0,3	 # move immediate I
	l.slli  	r15,r11,3
	l.slli  	r14,r11,5
	l.lwz   	r2,4(r1)	 # SI load
	l.lwz   	r13,40(r16)	 # SI load
	l.lwz   	r12,20(r2)	 # SI load
	l.add   	r14,r15,r14
	l.lwz   	r8,36(r16)	 # SI load
	l.add   	r7,r12,r14
	l.lwz   	r4,44(r1)	 # SI load
	l.sw    	12(r7),r13	 # SI store
	l.addi  	r5,r0,64	 # movhi: move immediate
	l.lwz   	r3,20(r2)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.add   	r26,r3,r4
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.lbz   	r2,18(r26)	 # zero_extendqisi2
	l.ori   	r2,r2,8
	l.sh    	16(r7),r5	 # movhi
	l.sw    	24(r7),r20	 # SI store
		l.lwz   	r4, 32(r26)
		l.lwz   	r5, 32+4(r26)
	l.sw    	28(r7),r22	 # SI store
	l.sw    	8(r7),r8	 # SI store
	l.sw    	4(r7),r6	 # SI store
	l.sb    	19(r26),r3	    # movqi
	l.sb    	18(r26),r2	    # movqi
		l.sw    	32(r7), r4
		l.sw    	32+4(r7), r5
	l.j     	.L7102	# delay slot filled
	l.lwz   	r3,24(r26)	 # SI load
.L7071:
	l.addi  	r8,r7,-32
	l.sfltsi	r8,0
	l.bf	.L6882	# delay slot filled
	l.addi  	r13,r0,0	 # move immediate I
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r14,r0,0	 # move immediate I
	l.sll   	r13,r7,r8
.L6879:
	l.addi  	r8,r14,-1
	l.sfltu 	r8,r14
	l.bnf	.L7077	# delay slot filled
	l.addi  	r15,r0,1	 # move immediate I
.L6884:
	l.addi  	r7,r13,-1
	l.add   	r15,r15,r7
	l.ori   	r7,r15,0	 # move reg to reg
		l.sw    	20(r1), r7
		l.sw    	20+4(r1), r8
	l.j     	.L7103	# delay slot filled
	l.or    	r28,r28,r13
.L7072:
	l.lwz   	r6,4(r1)	 # SI load
	l.lbz   	r7,8(r6)	 # zero_extendqisi2
	l.sfnei	r7,67
	l.bf	.L6981	# delay slot filled
	l.movhi  	r18,hi(ops.20226)
	l.ori   	r4,r30,0	 # move reg to reg
	l.lwz   	r20,28(r5)	 # SI load
	l.ori   	r18,r18,lo(ops.20226)
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r28,44(r1)	 # SI load
	l.ori   	r16,r6,0	 # move reg to reg
	l.lwz   	r30,40(r1)	 # SI load
.L6900:
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.lbz   	r22,0(r18)	 # zero_extendqisi2
	l.lwz   	r4,12(r20)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.add   	r4,r4,r14
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r4,0(r4)	 # SI load
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3Expr	# delay slot filled
	l.addi  	r14,r14,16
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,3	 # move immediate I
	l.jal   	whereClauseInsert	# delay slot filled
	l.addi  	r18,r18,1
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	exprAnalyze	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.slli  	r5,r2,3
	l.slli  	r2,r2,5
	l.lwz   	r4,20(r16)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.add   	r2,r5,r2
	l.sfnei	r14,32
	l.add   	r2,r4,r2
	l.add   	r26,r4,r28
	l.bnf	.L7039	# delay slot filled
	l.sw    	4(r2),r3	 # SI store
	l.lwz   	r5,0(r1)	 # SI load
	l.j     	.L6900	# delay slot filled
	l.lwz   	r4,20(r5)	 # SI load
.L6874:
	l.lwz   	r3,12(r1)	 # SI load
	l.jal   	exprListTableUsage	# delay slot filled
	l.lwz   	r4,28(r6)	 # SI load
		l.sw    	24(r26), r11
		l.sw    	24+4(r26), r12
	l.j     	.L7101	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L7077:
	l.j     	.L6884	# delay slot filled
	l.addi  	r15,r0,0	 # move immediate I
.L7076:
	l.lwz   	r8,8(r4)	 # SI load
	l.ori   	r6,r6,65535
	l.ori   	r3,r24,0	 # move reg to reg
	l.and   	r5,r8,r6
	l.lwz   	r4,4(r4)	 # SI load
	l.ori   	r6,r7,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L7104	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.lbz   	r14,3(r11)	 # zero_extendqisi2
	l.andi  	r8,r14,1
	l.sfeqi	r8,0
	l.bnf	.L7045	# delay slot filled
	l.addi  	r8,r1,108
.L7064:
	l.lwz   	r4,0(r1)	 # SI load
	l.j     	.L6976	# delay slot filled
	l.lbz   	r2,0(r4)	 # zero_extendqisi2
.L7073:
	l.lwz   	r5,8(r1)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.add   	r20,r20,r6
	l.sw    	76(r1),r5	 # SI store
	l.ori   	r3,r5,0	 # move reg to reg
	l.addi  	r4,r0,192	 # move immediate I
	l.lwz   	r5,0(r20)	 # SI load
	l.sw    	72(r1),r20	 # SI store
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.sw    	88(r1),r5	 # SI store
	l.lwz   	r20,72(r1)	 # SI load
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7062	# delay slot filled
	l.sw    	12(r20),r11	 # SI store
	l.lwz   	r4,72(r1)	 # SI load
	l.addi  	r16,r0,4	 # move immediate I
	l.lbz   	r8,18(r4)	 # zero_extendqisi2
	l.ori   	r8,r8,16
	l.ori   	r3,r11,0	 # move reg to reg
	l.sb    	18(r4),r8	    # movqi
	l.addi  	r8,r11,24
	l.lwz   	r5,4(r1)	 # SI load
	l.lwz   	r6,12(r1)	 # SI load
	l.lwz   	r12,0(r5)	 # SI load
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	20(r11),r8	 # SI store
	l.sw    	0(r11),r12	 # SI store
	l.sw    	4(r11),r6	 # SI store
	l.sw    	12(r11),r2	 # SI store
	l.sw    	16(r11),r16	 # SI store
	l.jal   	whereSplit	# delay slot filled
	l.lwz   	r4,88(r1)	 # SI load
	l.lwz   	r3,40(r1)	 # SI load
	l.jal   	exprAnalyzeAll	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.lwz   	r3,76(r1)	 # SI load
	l.lbz   	r8,30(r3)	 # zero_extendqisi2
	l.sfeq 	r8,r2
	l.bnf	.L7078	# delay slot filled
	l.lwz   	r5,8(r1)	 # SI load
	l.lwz   	r8,12(r30)	 # SI load
	l.sub   	r12,r0,r8
	l.sfgesi	r12,0
	l.bf	.L6903	# delay slot filled
	l.lwz   	r13,20(r30)	 # SI load
	l.addi  	r2,r0,-1	 # move immediate I
	l.addi  	r3,r0,-1	 # move immediate I
	l.lwz   	r6,12(r1)	 # SI load
	l.addi  	r22,r13,16
	l.sw    	104(r1),r26	 # SI store
	l.sw    	92(r1),r30	 # SI store
	l.addi  	r24,r8,-2
	l.addi  	r20,r6,8
	l.addi  	r28,r0,1	 # move immediate I
		l.sw    	48(r1), r2
		l.sw    	48+4(r1), r3
		l.sw    	28(r1), r2
		l.sw    	28+4(r1), r3
	l.lwz   	r26,76(r1)	 # SI load
		l.or    	r13, r2, r0
		l.or    	r14, r3, r0
	l.lwz   	r30,4(r1)	 # SI load
	l.j     	.L6937	# delay slot filled
	l.ori   	r18,r6,0	 # move reg to reg
.L7081:
	l.lwz   	r3,32(r1)	 # SI load
	l.xori  	r7,r24,0xffff
	l.or    	r6,r2,r3
	l.sub   	r5,r0,r6
	l.or    	r4,r5,r6
	l.and   	r4,r4,r7
	l.srli  	r8,r4,31
.L6906:
	l.addi  	r22,r22,40
	l.sfnei	r8,0
	l.bnf	.L7079	# delay slot filled
	l.addi  	r24,r24,-1
.L6937:
	l.lhz   	r12,0(r22)	 # zero_extendqisi2
	l.andi  	r16,r12,255
	l.sfnei	r16,0
	l.bnf	.L7080	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.lbz   	r11,2(r22)	 # zero_extendqisi2
	l.andi  	r5,r11,8
	l.sfeqi	r5,0
	l.bnf	.L7081	# delay slot filled
	l.lwz   	r2,28(r1)	 # SI load
	l.lwz   	r8,0(r18)	 # SI load
	l.sflesi	r8,0
	l.bf	.L6998	# delay slot filled
	l.lwz   	r7,-8(r22)	 # SI load
	l.lwz   	r6,4(r18)	 # SI load
	l.sfeq 	r7,r6
	l.bnf	.L6924	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L7100	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L6927:
	l.lwz   	r2,0(r4)	 # SI load
	l.sfne 	r7,r2
	l.bnf	.L7083	# delay slot filled
	l.addi  	r4,r4,4
.L6924:
	l.addi  	r5,r5,1
	l.sflts 	r5,r8
	l.bf	.L6927	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
		l.sw    	56(r1), r3
		l.sw    	56+4(r1), r4
.L6921:
	l.andi  	r4,r11,2
.L7106:
	l.sfeqi	r4,0
	l.bf	.L7113	# delay slot filled
	l.lwz   	r2,32(r1)	 # SI load
	l.lwz   	r7,-12(r22)	 # SI load
	l.lwz   	r5,92(r1)	 # SI load
	l.sflesi	r8,0
	l.lwz   	r2,20(r5)	 # SI load
	l.slli  	r5,r7,3
	l.slli  	r7,r7,5
	l.add   	r5,r5,r7
	l.add   	r5,r2,r5
	l.bf	.L7000	# delay slot filled
	l.lwz   	r7,8(r5)	 # SI load
	l.lwz   	r5,4(r18)	 # SI load
	l.sfeq 	r7,r5
	l.bf	.L7084	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L6932	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L6935:
	l.lwz   	r2,0(r4)	 # SI load
	l.sfne 	r7,r2
	l.bnf	.L6930	# delay slot filled
	l.addi  	r4,r4,4
.L6932:
	l.addi  	r5,r5,1
	l.sflts 	r5,r8
	l.bf	.L6935	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
		l.sw    	80(r1), r3
		l.sw    	80+4(r1), r4
.L6929:
	l.lwz   	r5,56(r1)	 # SI load
.L7108:
	l.lwz   	r2,60(r1)	 # SI load
	l.lwz   	r6,80(r1)	 # SI load
	l.lwz   	r3,84(r1)	 # SI load
	l.or    	r8,r5,r6
	l.or    	r7,r2,r3
	l.ori   	r4,r8,0	 # move reg to reg
	l.ori   	r5,r7,0	 # move reg to reg
		l.sw    	56(r1), r4
		l.sw    	56+4(r1), r5
	l.lwz   	r2,32(r1)	 # SI load
.L7113:
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r3,60(r1)	 # SI load
	l.lwz   	r6,56(r1)	 # SI load
	l.and   	r7,r2,r3
	l.and   	r5,r4,r6
	l.ori   	r3,r7,0	 # move reg to reg
	l.ori   	r2,r5,0	 # move reg to reg
	l.sfeqi	r12,2
		l.sw    	28(r1), r2
		l.sw    	28+4(r1), r3
	l.bf	.L6936	# delay slot filled
	l.or    	r5,r5,r7
	l.xori  	r7,r24,0xffff
	l.sub   	r6,r0,r5
	l.addi  	r13,r0,0	 # move immediate I
	l.or    	r5,r6,r5
	l.addi  	r14,r0,0	 # move immediate I
	l.and   	r5,r7,r5
	l.j     	.L6906	# delay slot filled
	l.srli  	r8,r5,31
.L7080:
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r0,184	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L7085	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r6,2(r22)	 # zero_extendqisi2
	l.ori   	r6,r6,32
	l.sw    	-4(r22),r11	 # SI store
	l.sb    	2(r22),r6	    # movqi
	l.addi  	r5,r0,512	 # movhi: move immediate
	l.lwz   	r6,0(r30)	 # SI load
	l.sh    	0(r22),r5	 # movhi
	l.addi  	r7,r11,24
	l.sw    	0(r11),r6	 # SI store
	l.addi  	r6,r0,4	 # move immediate I
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r5,r0,67	 # move immediate I
	l.sw    	4(r11),r18	 # SI store
	l.sw    	12(r11),r16	 # SI store
	l.sw    	16(r11),r6	 # SI store
	l.sw    	20(r11),r7	 # SI store
	l.jal   	whereSplit	# delay slot filled
	l.lwz   	r4,-16(r22)	 # SI load
	l.lwz   	r3,40(r1)	 # SI load
	l.jal   	exprAnalyzeAll	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lbz   	r8,30(r26)	 # zero_extendqisi2
	l.sfnei	r8,0
	l.bf	.L6994	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r15,12(r14)	 # SI load
	l.sflesi	r15,0
	l.bf	.L7116	# delay slot filled
	l.lwz   	r11,20(r14)	 # SI load
	l.ori   	r14,r8,0	 # move reg to reg
	l.addi  	r12,r0,0	 # move immediate I
		l.lwz   	r7, 96(r1)
		l.lwz   	r8, 96+4(r1)
	l.j     	.L6919	# delay slot filled
	l.addi  	r13,r0,0	 # move immediate I
.L7086:
	l.bf	.L6908	# delay slot filled
	l.sfnei	r4,71
	l.bnf	.L6908
	l.nop			# nop delay slot
.L6910:
	l.addi  	r14,r14,1
	l.sfeq 	r14,r15
	l.bf	.L6918	# delay slot filled
	l.addi  	r11,r11,40
.L6919:
	l.lwz   	r3,0(r11)	 # SI load
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.addi  	r3,r4,-74
	l.sfleui	r3,4
	l.bf	.L6909	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.addi  	r2,r0,0	 # movqi: move immediate
.L6909:
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L7086	# delay slot filled
	l.sfeqi	r4,70
.L6908:
	l.lwz   	r6,0(r18)	 # SI load
	l.sflesi	r6,0
	l.bf	.L6996	# delay slot filled
	l.lwz   	r5,8(r11)	 # SI load
	l.lwz   	r2,4(r18)	 # SI load
	l.sfeq 	r5,r2
	l.bf	.L7087	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.j     	.L6914	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L6917:
	l.lwz   	r2,0(r3)	 # SI load
	l.sfne 	r5,r2
	l.bnf	.L7088	# delay slot filled
	l.addi  	r3,r3,4
.L6914:
	l.addi  	r4,r4,1
	l.sflts 	r4,r6
	l.bf	.L6917
	l.nop			# nop delay slot
.L6996:
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
.L6911:
	l.or    	r3,r12,r7
	l.or    	r2,r13,r8
	l.ori   	r12,r3,0	 # move reg to reg
	l.j     	.L6910	# delay slot filled
	l.ori   	r13,r2,0	 # move reg to reg
.L7088:
	l.addi  	r2,r4,-32
	l.sfltsi	r2,0
	l.bf	.L6915
	l.nop			# nop delay slot
	l.sll   	r7,r28,r2
	l.j     	.L6911	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
.L7083:
	l.addi  	r7,r5,-32
	l.sfltsi	r7,0
	l.bf	.L6925	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.sll   	r7,r28,r7
	l.sw    	56(r1),r7	 # SI store
	l.j     	.L6921	# delay slot filled
	l.sw    	60(r1),r4	 # SI store
.L7075:
	l.lwz   	r14,36(r30)	 # SI load
	l.lwz   	r13,40(r30)	 # SI load
	l.sw    	8(r26),r14	 # SI store
	l.sw    	12(r26),r13	 # SI store
	l.sfnei	r17,0
	l.bf	.L6890	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
	l.sfeqi	r16,71
	l.bf	.L6890	# delay slot filled
	l.addi  	r8,r0,128	 # move immediate I
	l.addi  	r8,r0,2	 # move immediate I
	l.sll   	r8,r8,r18
	l.andi  	r8,r8,0xffff	 # zero_extendqisi2
.L6890:
	l.j     	.L6889	# delay slot filled
	l.sh    	16(r26),r8	 # movhi
.L6893:
	l.lwz   	r8,8(r26)	 # SI load
	l.sfltsi	r8,0
	l.bf	.L6991	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lbz   	r8,30(r24)	 # zero_extendqisi2
	l.sfeqi	r8,0
	l.bnf	.L7089	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,4(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	whereClauseInsert	# delay slot filled
	l.addi  	r5,r0,3	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L6871	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
	l.lwz   	r5,4(r1)	 # SI load
	l.lwz   	r16,20(r5)	 # SI load
	l.slli  	r13,r11,3
	l.add   	r26,r16,r6
	l.slli  	r8,r11,5
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.lbz   	r4,18(r26)	 # zero_extendqisi2
	l.add   	r8,r13,r8
	l.sb    	19(r26),r2	    # movqi
	l.ori   	r4,r4,8
	l.add   	r16,r16,r8
	l.lwz   	r3,16(r1)	 # SI load
	l.sb    	18(r26),r4	    # movqi
	l.sw    	4(r16),r3	 # SI store
.L6894:
	l.lwz   	r18,24(r14)	 # SI load
	l.lwz   	r4,20(r14)	 # SI load
	l.lwz   	r3,8(r1)	 # SI load
	l.lhz   	r30,2(r4)	 # zero_extendqisi2
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.lhz   	r24,2(r18)	 # zero_extendqisi2
	l.lwz   	r20,20(r14)	 # SI load
	l.sw    	32(r18),r11	 # SI store
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r3,8(r1)	 # SI load
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.andi  	r30,r30,256
	l.lwz   	r7,24(r14)	 # SI load
	l.addi  	r4,r0,-257	 # move immediate I
	l.lhz   	r13,2(r7)	 # zero_extendqisi2
	l.andi  	r30,r30,0xffff	 # zero_extendqisi2
	l.and   	r13,r13,r4
	l.lwz   	r8,20(r14)	 # SI load
	l.or    	r13,r30,r13
	l.andi  	r24,r24,256
	l.sh    	2(r7),r13	 # movhi
	l.addi  	r5,r0,-257	 # move immediate I
	l.lhz   	r13,2(r8)	 # zero_extendqisi2
	l.sw    	32(r20),r11	 # SI store
	l.and   	r13,r13,r5
	l.andi  	r24,r24,0xffff	 # zero_extendqisi2
	l.lwz   	r4,32(r8)	 # SI load
	l.lwz   	r17,32(r7)	 # SI load
	l.or    	r15,r24,r13
	l.sw    	32(r7),r4	 # SI store
	l.lbz   	r13,0(r14)	 # zero_extendqisi2
	l.sw    	32(r8),r17	 # SI store
	l.sh    	2(r8),r15	 # movhi
	l.sw    	24(r14),r8	 # SI store
	l.sfleui	r13,74
	l.bf	.L6896	# delay slot filled
	l.sw    	20(r14),r7	 # SI store
	l.addi  	r4,r13,-75
	l.xori  	r4,r4,2
	l.addi  	r4,r4,75
	l.sb    	0(r14),r4	    # movqi
.L6896:
	l.lwz   	r8,36(r7)	 # SI load
	l.lwz   	r4,40(r7)	 # SI load
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r2,48(r1)	 # SI load
	l.sw    	8(r16),r8	 # SI store
	l.sw    	12(r16),r4	 # SI store
	l.sw    	24(r16),r6	 # SI store
	l.sw    	28(r16),r2	 # SI store
	l.sw    	32(r16),r28	 # SI store
	l.sw    	36(r16),r22	 # SI store
	l.lbz   	r11,0(r14)	 # zero_extendqisi2
	l.sfeqi	r11,70
	l.bf	.L6897	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
	l.sfeqi	r11,71
	l.bf	.L6897	# delay slot filled
	l.addi  	r8,r0,128	 # move immediate I
	l.addi  	r11,r11,-74
	l.addi  	r8,r0,2	 # move immediate I
	l.sll   	r8,r8,r11
	l.andi  	r8,r8,0xffff	 # zero_extendqisi2
.L6897:
	l.sh    	16(r16),r8	 # movhi
	l.lwz   	r3,8(r1)	 # SI load
	l.lwz   	r4,0(r1)	 # SI load
	l.lwz   	r24,0(r3)	 # SI load
	l.j     	.L6892	# delay slot filled
	l.lbz   	r2,0(r4)	 # zero_extendqisi2
.L7039:
	l.addi  	r6,r0,2	 # movqi: move immediate
	l.j     	.L7061	# delay slot filled
	l.sb    	19(r26),r6	    # movqi
.L6975:
	l.lwz   	r2,0(r1)	 # SI load
	l.lwz   	r8,28(r2)	 # SI load
	l.lwz   	r3,8(r1)	 # SI load
	l.lwz   	r8,12(r8)	 # SI load
	l.addi  	r4,r0,94	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.lwz   	r18,16(r8)	 # SI load
	l.jal   	sqlite3PExpr	# delay slot filled
	l.lwz   	r24,0(r8)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L6977	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,36(r1)	 # SI load
	l.addi  	r4,r11,4
	l.jal   	sqlite3TokenCopy	# delay slot filled
	l.addi  	r5,r24,4
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.lwz   	r8,8(r16)	 # SI load
	l.ori   	r3,r3,65535
	l.movhi 	r4,hi(-1073741824)	 # move immediate M
	l.and   	r14,r14,r3
	l.and   	r8,r8,r4
	l.or    	r8,r8,r14
	l.sw    	8(r16),r8	 # SI store
.L6977:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,36(r1)	 # SI load
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r5,36(r1)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r11,30(r5)	 # zero_extendqisi2
	l.sfnei	r11,0
	l.bf	.L6978	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r12,4(r14)	 # SI load
	l.add   	r12,r12,r28
	l.bf	.L6979	# delay slot filled
	l.lbz   	r8,0(r12)	 # zero_extendqisi2
	l.sfeqi	r8,64
	l.bf	.L7090
	l.nop			# nop delay slot
.L6980:
	l.movhi  	r6,hi(sqlite3UpperToLower)
	l.ori   	r6,r6,lo(sqlite3UpperToLower)
	l.add   	r8,r8,r6
	l.lbz   	r8,0(r8)	 # zero_extendqisi2
.L6979:
	l.addi  	r8,r8,1
	l.sb    	0(r12),r8	    # movqi
.L6978:
	l.ori   	r4,r18,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r3,8(r1)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r4,r0,78	 # move immediate I
	l.lwz   	r3,4(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	whereClauseInsert	# delay slot filled
	l.addi  	r5,r0,3	 # move immediate I
	l.lwz   	r3,40(r1)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r4,4(r1)	 # SI load
	l.jal   	exprAnalyze	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,36(r1)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r14,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r3,8(r1)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r4,r0,77	 # move immediate I
	l.lwz   	r3,4(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	whereClauseInsert	# delay slot filled
	l.addi  	r5,r0,3	 # move immediate I
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r4,4(r1)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	exprAnalyze	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r2,4(r1)	 # SI load
	l.lwz   	r3,44(r1)	 # SI load
	l.lwz   	r8,20(r2)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L7064	# delay slot filled
	l.add   	r26,r8,r3
	l.slli  	r11,r16,3
	l.slli  	r16,r16,5
	l.slli  	r12,r14,3
	l.addi  	r5,r0,2	 # movqi: move immediate
	l.slli  	r14,r14,5
	l.add   	r11,r11,r16
	l.sb    	19(r26),r5	    # movqi
	l.add   	r12,r12,r14
	l.add   	r11,r8,r11
	l.lwz   	r6,16(r1)	 # SI load
	l.add   	r8,r8,r12
	l.sw    	4(r11),r6	 # SI store
	l.sw    	4(r8),r6	 # SI store
	l.lwz   	r3,0(r1)	 # SI load
.L7104:
	l.j     	.L6976	# delay slot filled
	l.lbz   	r2,0(r3)	 # zero_extendqisi2
.L7091:
	l.lwz   	r26,28(r1)	 # SI load
	l.lwz   	r5,0(r1)	 # SI load
.L7111:
	l.lwz   	r6,8(r1)	 # SI load
	l.lbz   	r2,0(r5)	 # zero_extendqisi2
	l.j     	.L6892	# delay slot filled
	l.lwz   	r24,0(r6)	 # SI load
.L6882:
	l.addi  	r8,r0,1	 # move immediate I
	l.j     	.L6879	# delay slot filled
	l.sll   	r14,r8,r7
.L6994:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r8,r16,0	 # move reg to reg
		l.sw    	28(r1), r4
		l.sw    	28+4(r1), r5
.L6907:
	l.addi  	r13,r0,0	 # move immediate I
.L7107:
	l.j     	.L6906	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L6936:
	l.lwz   	r5,32(r1)	 # SI load
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r6,56(r1)	 # SI load
	l.or    	r7,r4,r5
	l.lwz   	r3,60(r1)	 # SI load
	l.sub   	r5,r0,r7
	l.and   	r8,r13,r6
	l.or    	r5,r5,r7
	l.and   	r2,r14,r3
	l.xori  	r11,r24,0xffff
	l.ori   	r6,r8,0	 # move reg to reg
	l.and   	r5,r11,r5
	l.ori   	r7,r2,0	 # move reg to reg
		l.or    	r13, r6, r0
		l.or    	r14, r7, r0
	l.j     	.L6906	# delay slot filled
	l.srli  	r8,r5,31
.L6918:
	l.lwz   	r2,28(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.and   	r5,r2,r12
	l.and   	r6,r3,r13
	l.ori   	r2,r5,0	 # move reg to reg
	l.ori   	r3,r6,0	 # move reg to reg
	l.or    	r6,r5,r6
		l.sw    	96(r1), r7
		l.sw    	96+4(r1), r8
	l.sub   	r5,r0,r6
	l.xori  	r8,r24,0xffff
	l.or    	r5,r5,r6
		l.sw    	28(r1), r2
		l.sw    	28+4(r1), r3
	l.and   	r8,r8,r5
	l.j     	.L6907	# delay slot filled
	l.srli  	r8,r8,31
.L7079:
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r5,32(r1)	 # SI load
	l.lwz   	r30,92(r1)	 # SI load
		l.sw    	48(r1), r13
		l.sw    	48+4(r1), r14
	l.or    	r13,r4,r5
		l.lwz   	r2, 28(r1)
		l.lwz   	r3, 28+4(r1)
		l.sw    	184(r30), r2
		l.sw    	184+4(r30), r3
	l.sfeqi	r13,0
	l.bnf	.L6985	# delay slot filled
	l.lwz   	r26,104(r1)	 # SI load
.L6938:
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r4,52(r1)	 # SI load
	l.lwz   	r5,72(r1)	 # SI load
	l.or    	r13,r3,r4
	l.sfnei	r13,0
	l.bnf	.L7062	# delay slot filled
	l.sh    	16(r5),r8	 # movhi
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r24,r0,0	 # move immediate I
	l.addi  	r28,r4,8
	l.sw    	28(r1),r26	 # SI store
	l.addi  	r22,r0,-1	 # move immediate I
	l.ori   	r26,r28,0	 # move reg to reg
	l.ori   	r28,r24,0	 # move reg to reg
	l.ori   	r24,r4,0	 # move reg to reg
.L6960:
	l.lwz   	r18,12(r30)	 # SI load
	l.addi  	r18,r18,-1
	l.sfgesi	r18,0
	l.bnf	.L7091	# delay slot filled
	l.lwz   	r2,20(r30)	 # SI load
	l.addi  	r7,r2,18
.L6953:
	l.lbz   	r2,0(r7)	 # zero_extendqisi2
	l.addi  	r3,r0,-65	 # move immediate I
	l.lwz   	r6,-10(r7)	 # SI load
	l.and   	r2,r2,r3
	l.addi  	r8,r7,-18
	l.sfeq 	r6,r22
	l.bf	.L6942	# delay slot filled
	l.sb    	0(r7),r2	    # movqi
	l.lwz   	r5,0(r24)	 # SI load
	l.sflesi	r5,0
	l.bf	.L6942
	l.nop			# nop delay slot
	l.lwz   	r2,4(r24)	 # SI load
	l.sfeq 	r6,r2
	l.bf	.L7092	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.j     	.L6945	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L6950:
	l.lwz   	r2,0(r3)	 # SI load
	l.sfne 	r6,r2
	l.bnf	.L7093	# delay slot filled
	l.addi  	r3,r3,4
.L6945:
	l.addi  	r4,r4,1
	l.sflts 	r4,r5
	l.bf	.L6950
	l.nop			# nop delay slot
.L6942:
	l.addi  	r18,r18,-1
	l.sfgesi	r18,0
	l.bf	.L6953	# delay slot filled
	l.addi  	r7,r7,40
	l.lwz   	r5,0(r1)	 # SI load
	l.lwz   	r6,8(r1)	 # SI load
	l.lwz   	r26,28(r1)	 # SI load
	l.lbz   	r2,0(r5)	 # zero_extendqisi2
	l.j     	.L6892	# delay slot filled
	l.lwz   	r24,0(r6)	 # SI load
.L7093:
	l.addi  	r2,r4,-32
	l.sfltsi	r2,0
	l.bf	.L6946	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r12,r0,0	 # move immediate I
	l.sll   	r11,r4,r2
.L6943:
	l.lwz   	r2,48(r1)	 # SI load
	l.lwz   	r4,52(r1)	 # SI load
	l.and   	r3,r11,r2
	l.and   	r2,r12,r4
	l.or    	r2,r3,r2
	l.sfeqi	r2,0
	l.bf	.L6942	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
		l.sw    	64(r1), r11
		l.sw    	64+4(r1), r12
	l.sfgesi	r18,0
	l.bnf	.L7058	# delay slot filled
	l.lwz   	r22,12(r8)	 # SI load
	l.sfeq 	r16,r6
	l.bf	.L6954	# delay slot filled
	l.addi  	r2,r8,18
.L7094:
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.addi  	r4,r0,-65	 # move immediate I
	l.and   	r3,r3,r4
	l.sb    	0(r2),r3	    # movqi
.L6955:
	l.addi  	r18,r18,-1
	l.sfltsi	r18,0
	l.bf	.L7058	# delay slot filled
	l.addi  	r2,r2,40
	l.lwz   	r6,-10(r2)	 # SI load
	l.sfeq 	r16,r6
	l.bnf	.L7094
	l.nop			# nop delay slot
.L6954:
	l.lwz   	r3,-6(r2)	 # SI load
	l.sfne 	r22,r3
	l.bnf	.L7095
	l.nop			# nop delay slot
.L6956:
	l.addi  	r28,r28,1
	l.sflesi	r28,1
	l.bf	.L6961	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.addi  	r2,r0,0	 # movqi: move immediate
.L6961:
	l.andi  	r2,r2,1
	l.sfnei	r2,0
	l.bf	.L6960
	l.nop			# nop delay slot
	l.lwz   	r26,28(r1)	 # SI load
.L7062:
	l.lwz   	r6,0(r1)	 # SI load
	l.lwz   	r3,8(r1)	 # SI load
	l.lbz   	r2,0(r6)	 # zero_extendqisi2
	l.j     	.L6892	# delay slot filled
	l.lwz   	r24,0(r3)	 # SI load
.L7095:
	l.lwz   	r14,-18(r2)	 # SI load
	l.jal   	sqlite3ExprAffinity	# delay slot filled
	l.lwz   	r3,24(r14)	 # SI load
	l.lwz   	r3,20(r14)	 # SI load
	l.jal   	sqlite3ExprAffinity	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.xor   	r11,r20,r11
	l.sub   	r4,r0,r20
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfgesi	r3,0
	l.bf	.L7008	# delay slot filled
	l.or    	r20,r4,r20
	l.sfltsi	r20,0
	l.bf	.L6956
	l.nop			# nop delay slot
.L7008:
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.ori   	r3,r3,64
	l.j     	.L6955	# delay slot filled
	l.sb    	0(r2),r3	    # movqi
.L6946:
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L6943	# delay slot filled
	l.sll   	r12,r5,r4
.L7085:
	l.lwz   	r3,28(r1)	 # SI load
	l.lwz   	r4,32(r1)	 # SI load
	l.xori  	r8,r24,0xffff
	l.or    	r7,r3,r4
	l.addi  	r13,r0,0	 # move immediate I
	l.sub   	r5,r0,r7
	l.addi  	r14,r0,0	 # move immediate I
	l.or    	r5,r5,r7
	l.and   	r8,r5,r8
	l.j     	.L6906	# delay slot filled
	l.srli  	r8,r8,31
.L7084:
	l.addi  	r5,r0,0	 # move immediate I
.L6930:
	l.addi  	r7,r5,-32
	l.sfltsi	r7,0
	l.bf	.L6933	# delay slot filled
	l.sll   	r7,r28,r7
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	80(r1),r7	 # SI store
	l.j     	.L6929	# delay slot filled
	l.sw    	84(r1),r6	 # SI store
.L7078:
	l.lwz   	r4,0(r1)	 # SI load
	l.lbz   	r2,0(r4)	 # zero_extendqisi2
	l.j     	.L6892	# delay slot filled
	l.lwz   	r24,0(r5)	 # SI load
.L7058:
	l.lwz   	r16,12(r30)	 # SI load
	l.lwz   	r26,28(r1)	 # SI load
	l.addi  	r16,r16,-1
	l.sfltsi	r16,0
	l.bf	.L7005	# delay slot filled
	l.lwz   	r14,20(r30)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r22,76(r1)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L6964	# delay slot filled
	l.lwz   	r20,4(r1)	 # SI load
.L6963:
	l.sfltsi	r16,0
	l.bf	.L6962	# delay slot filled
	l.addi  	r14,r14,40
.L6964:
	l.lbz   	r2,18(r14)	 # zero_extendqisi2
	l.andi  	r2,r2,64
	l.sfeqi	r2,0
	l.bf	.L6963	# delay slot filled
	l.addi  	r16,r16,-1
	l.lwz   	r2,0(r14)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r2,0(r20)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r2,0(r14)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L6963	# delay slot filled
	l.lwz   	r11,20(r2)	 # SI load
.L6903:
	l.addi  	r2,r0,-1	 # move immediate I
	l.addi  	r3,r0,-1	 # move immediate I
		l.sw    	184(r30), r2
		l.sw    	184+4(r30), r3
		l.sw    	48(r1), r2
		l.sw    	48+4(r1), r3
.L6985:
	l.j     	.L6938	# delay slot filled
	l.addi  	r8,r0,256	 # move immediate I
.L7092:
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L6943	# delay slot filled
	l.addi  	r12,r0,1	 # move immediate I
.L6987:
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r6,r0,-1	 # move immediate I
	l.addi  	r13,r0,0	 # move immediate I
		l.sw    	20(r1), r5
		l.sw    	20+4(r1), r6
	l.j     	.L6878	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L6915:
	l.addi  	r7,r0,0	 # move immediate I
	l.j     	.L6911	# delay slot filled
	l.sll   	r8,r28,r4
.L7070:
	l.addi  	r13,r0,0	 # move immediate I
	l.j     	.L6879	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
.L7005:
	l.addi  	r11,r0,0	 # move immediate I
	l.ori   	r18,r11,0	 # move reg to reg
.L6962:
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.lwz   	r3,76(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,76(r1)	 # SI load
	l.addi  	r4,r0,70	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3Expr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L6965	# delay slot filled
	l.lwz   	r3,76(r1)	 # SI load
	l.lwz   	r4,88(r1)	 # SI load
	l.lhz   	r8,2(r11)	 # zero_extendqisi2
	l.lhz   	r12,2(r4)	 # zero_extendqisi2
	l.andi  	r12,r12,1
	l.lwz   	r5,52(r4)	 # SI load
	l.or    	r4,r12,r8
	l.sw    	52(r11),r5	 # SI store
	l.sh    	2(r11),r4	 # movhi
	l.lwz   	r3,4(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,3	 # move immediate I
	l.sw    	28(r11),r18	 # SI store
	l.jal   	whereClauseInsert	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r4,4(r1)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	exprAnalyze	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r5,4(r1)	 # SI load
	l.lwz   	r6,44(r1)	 # SI load
	l.lwz   	r8,20(r5)	 # SI load
	l.slli  	r4,r14,3
	l.slli  	r14,r14,5
	l.add   	r6,r8,r6
	l.add   	r4,r4,r14
	l.sb    	19(r6),r2	    # movqi
	l.add   	r4,r8,r4
	l.lwz   	r3,16(r1)	 # SI load
	l.sw    	72(r1),r6	 # SI store
	l.sw    	4(r4),r3	 # SI store
	l.addi  	r5,r0,0	 # movhi: move immediate
.L7109:
	l.lwz   	r4,72(r1)	 # SI load
	l.lwz   	r6,8(r1)	 # SI load
	l.sh    	16(r4),r5	 # movhi
	l.lwz   	r3,0(r1)	 # SI load
	l.lwz   	r24,0(r6)	 # SI load
	l.j     	.L6892	# delay slot filled
	l.lbz   	r2,0(r3)	 # zero_extendqisi2
.L7089:
	l.addi	r1,r1,156
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3ExprDelete	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L6991:
	l.lwz   	r14,0(r1)	 # SI load
	l.j     	.L6894	# delay slot filled
	l.ori   	r16,r26,0	 # move reg to reg
.L6925:
	l.sll   	r5,r28,r5
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	60(r1),r5	 # SI store
	l.j     	.L6921	# delay slot filled
	l.sw    	56(r1),r6	 # SI store
.L7087:
	l.addi  	r7,r0,0	 # move immediate I
	l.j     	.L6911	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
.L6933:
	l.sll   	r5,r28,r5
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	84(r1),r5	 # SI store
	l.j     	.L6929	# delay slot filled
	l.sw    	80(r1),r2	 # SI store
.L7045:
	l.lwz   	r11,4(r11)	 # SI load
	l.lbz   	r5,0(r11)	 # zero_extendqisi2
	l.sb    	0(r8),r5	    # movqi
	l.lwz   	r3,0(r1)	 # SI load
	l.lbz   	r6,1(r11)	 # zero_extendqisi2
	l.sb    	1(r8),r6	    # movqi
	l.lbz   	r11,2(r11)	 # zero_extendqisi2
	l.sb    	2(r8),r11	    # movqi
	l.lwz   	r2,28(r3)	 # SI load
	l.lwz   	r8,12(r2)	 # SI load
	l.lwz   	r16,0(r8)	 # SI load
	l.lbz   	r4,0(r16)	 # zero_extendqisi2
	l.sfnei	r4,94
	l.bnf	.L7046
	l.nop			# nop delay slot
	l.j     	.L6976	# delay slot filled
	l.lbz   	r2,0(r3)	 # zero_extendqisi2
.L7046:
	l.lwz   	r7,16(r8)	 # SI load
	l.lbz   	r8,0(r7)	 # zero_extendqisi2
	l.sfnei	r8,151
	l.bnf	.L7047	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
.L7065:
	l.lwz   	r5,0(r1)	 # SI load
.L7114:
	l.j     	.L6976	# delay slot filled
	l.lbz   	r2,0(r5)	 # zero_extendqisi2
.L7047:
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.ori   	r4,r7,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7096
	l.nop			# nop delay slot
.L6969:
	l.andi  	r8,r14,2
	l.lbz   	r11,5(r11)	 # zero_extendqisi2
	l.sub   	r12,r0,r8
	l.sfnei	r11,1
	l.or    	r8,r12,r8
	l.xori  	r20,r8,0xffff
	l.bnf	.L7097	# delay slot filled
	l.srli  	r20,r20,31
	l.sfnei	r11,2
	l.bf	.L7104	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L7064
	l.nop			# nop delay slot
.L6971:
	l.lwz   	r8,4(r16)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L7065	# delay slot filled
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r13,8(r16)	 # SI load
	l.ori   	r6,r6,65535
	l.and   	r13,r13,r6
	l.sfeqi	r13,0
	l.bf	.L7104	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.lbs   	r11,0(r8)	 # extendqisi2_no_sext_mem
	l.sfeqi	r11,0
	l.bf	.L7064	# delay slot filled
	l.lbs   	r12,108(r1)	 # extendqisi2_no_sext_mem
	l.sfeq 	r11,r12
	l.bf	.L7114	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
	l.lbs   	r15,109(r1)	 # extendqisi2_no_sext_mem
	l.sfeq 	r11,r15
	l.bf	.L7066
	l.nop			# nop delay slot
	l.lbs   	r16,110(r1)	 # extendqisi2_no_sext_mem
	l.sfeq 	r11,r16
	l.bnf	.L6973	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L6976	# delay slot filled
	l.lbz   	r2,0(r3)	 # zero_extendqisi2
.L7098:
	l.lbs   	r2,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L6972	# delay slot filled
	l.sfeq 	r12,r2
	l.bf	.L6972	# delay slot filled
	l.sfeq 	r2,r15
	l.bf	.L6972	# delay slot filled
	l.sfne 	r2,r16
	l.bnf	.L7115	# delay slot filled
	l.addi  	r28,r14,-1
.L6973:
	l.addi  	r14,r14,1
	l.sfles 	r13,r14
	l.bnf	.L7098	# delay slot filled
	l.add   	r2,r8,r14
.L6972:
	l.addi  	r28,r14,-1
.L7115:
	l.add   	r4,r8,r28
	l.lbs   	r4,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,-1
	l.bf	.L7064	# delay slot filled
	l.add   	r8,r8,r14
	l.lbs   	r4,0(r8)	 # extendqisi2_no_sext_mem
	l.sfne 	r4,r12
	l.bnf	.L7099	# delay slot filled
	l.addi  	r22,r0,0	 # move immediate I
.L6974:
	l.lwz   	r5,4(r1)	 # SI load
	l.lbz   	r4,8(r5)	 # zero_extendqisi2
	l.sfeqi	r4,67
	l.bf	.L6975	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L7066:
	l.lwz   	r6,0(r1)	 # SI load
	l.j     	.L6976	# delay slot filled
	l.lbz   	r2,0(r6)	 # zero_extendqisi2
.L7097:
	l.sfnei	r20,0
	l.bnf	.L6971	# delay slot filled
	l.lwz   	r6,0(r1)	 # SI load
	l.j     	.L6976	# delay slot filled
	l.lbz   	r2,0(r6)	 # zero_extendqisi2
.L7100:
	l.addi  	r3,r0,1	 # move immediate I
		l.sw    	56(r1), r2
		l.sw    	56+4(r1), r3
	l.j     	.L7106	# delay slot filled
	l.andi  	r4,r11,2
.L6998:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
		l.sw    	56(r1), r4
		l.sw    	56+4(r1), r5
	l.j     	.L7106	# delay slot filled
	l.andi  	r4,r11,2
.L7096:
	l.j     	.L6969	# delay slot filled
	l.lwz   	r11,44(r24)	 # SI load
.L7090:
	l.j     	.L6980	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
.L7116:
	l.addi  	r6,r0,0	 # move immediate I
		l.sw    	28(r1), r5
		l.sw    	28+4(r1), r6
	l.j     	.L7107	# delay slot filled
	l.addi  	r13,r0,0	 # move immediate I
.L7000:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
		l.sw    	80(r1), r4
		l.sw    	80+4(r1), r5
	l.j     	.L7108	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
.L6965:
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.j     	.L7109	# delay slot filled
	l.addi  	r5,r0,0	 # movhi: move immediate
.L7099:
	l.lbz   	r22,1(r8)	 # zero_extendqisi2
	l.addi  	r22,r22,-1
	l.j     	.L6974	# delay slot filled
	l.srli  	r22,r22,31
.LFE1147:
	.size	exprAnalyze, .-exprAnalyze
	.align	4
.proc	exprAnalyzeAll
	.type	exprAnalyzeAll, @function
exprAnalyzeAll:
.LFB1142:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2755:
	l.lwz   	r2,12(r4)	 # SI load
	l.sw    	-12(r1),r14	 # SI store
.LCFI2756:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2757:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2758:
	l.addi  	r2,r2,-1
	l.addi  	r1,r1,-16
.LCFI2759:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfltsi	r2,0
	l.bf	.L7117	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
.L7122:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	exprAnalyze	# delay slot filled
	l.addi  	r2,r2,-1
	l.sfgesi	r2,0
	l.bf	.L7122	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
.L7117:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE1142:
	.size	exprAnalyzeAll, .-exprAnalyzeAll
	.align	4
.proc	sqlite3SelectNew.clone.150
	.type	sqlite3SelectNew.clone.150, @function
sqlite3SelectNew.clone.150:
.LFB1398:
	l.sw    	-32(r1),r16	 # SI store
.LCFI2760:
	l.lwz   	r16,0(r3)	 # SI load
	l.sw    	-40(r1),r2	 # SI store
.LCFI2761:
	l.sw    	-36(r1),r14	 # SI store
.LCFI2762:
	l.sw    	-28(r1),r18	 # SI store
.LCFI2763:
	l.sw    	-24(r1),r20	 # SI store
.LCFI2764:
	l.sw    	-20(r1),r22	 # SI store
.LCFI2765:
	l.sw    	-16(r1),r24	 # SI store
.LCFI2766:
	l.sw    	-12(r1),r26	 # SI store
.LCFI2767:
	l.sw    	-8(r1),r28	 # SI store
.LCFI2768:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2769:
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r1,r1,-108
.LCFI2770:
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,68	 # move immediate I
	l.ori   	r26,r5,0	 # move reg to reg
	l.ori   	r24,r6,0	 # move reg to reg
	l.ori   	r22,r7,0	 # move reg to reg
	l.ori   	r20,r8,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.lwz   	r28,112(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L7128	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r14,0
.L7132:
	l.bnf	.L7129	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
.L7125:
	l.sub   	r3,r0,r28
	l.addi  	r4,r0,-1	 # move immediate I
	l.or    	r3,r3,r28
	l.lwz   	r5,108(r1)	 # SI load
	l.srli  	r3,r3,31
	l.sw    	0(r2),r14	 # SI store
	l.sw    	8(r2),r26	 # SI store
	l.sh    	6(r2),r3	 # movhi
	l.addi  	r3,r0,116	 # movqi: move immediate
	l.sw    	12(r2),r24	 # SI store
	l.sb    	4(r2),r3	    # movqi
	l.sw    	16(r2),r22	 # SI store
	l.lwz   	r3,116(r1)	 # SI load
	l.sw    	20(r2),r20	 # SI store
	l.sw    	40(r2),r3	 # SI store
	l.lwz   	r3,120(r1)	 # SI load
	l.sw    	24(r2),r5	 # SI store
	l.sw    	44(r2),r3	 # SI store
	l.sw    	56(r2),r4	 # SI store
	l.sw    	60(r2),r4	 # SI store
	l.sw    	64(r2),r4	 # SI store
	l.lbz   	r3,30(r16)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L7130	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L7126:
	l.addi	r1,r1,108
.L7133:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L7128:
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r3,r1,0	 # move reg to reg
	l.addi  	r5,r0,68	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.ori   	r2,r1,0	 # move reg to reg
	l.j     	.L7132	# delay slot filled
	l.sfnei	r14,0
.L7129:
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3Expr	# delay slot filled
	l.addi  	r4,r0,113	 # move immediate I
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.lwz   	r3,0(r18)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.j     	.L7125	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7130:
	l.jal   	clearSelect	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.sfeq 	r2,r1
	l.bnf	.L7131	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.j     	.L7126	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L7131:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L7133	# delay slot filled
	l.addi	r1,r1,108
.LFE1398:
	.size	sqlite3SelectNew.clone.150, .-sqlite3SelectNew.clone.150
	.align	4
.proc	addModuleArgument.clone.151
	.type	addModuleArgument.clone.151, @function
addModuleArgument.clone.151:
.LFB1399:
	l.sw    	-32(r1),r14	 # SI store
.LCFI2771:
	l.lwz   	r14,0(r4)	 # SI load
	l.sw    	-36(r1),r2	 # SI store
.LCFI2772:
	l.sw    	-16(r1),r22	 # SI store
.LCFI2773:
	l.ori   	r2,r5,0	 # move reg to reg
	l.ori   	r22,r4,0	 # move reg to reg
	l.lwz   	r4,0(r5)	 # SI load
	l.addi  	r5,r14,2
	l.sw    	-24(r1),r18	 # SI store
.LCFI2774:
	l.addi  	r18,r14,1
	l.sw    	-28(r1),r16	 # SI store
.LCFI2775:
	l.sw    	-12(r1),r24	 # SI store
.LCFI2776:
	l.sw    	-8(r1),r26	 # SI store
.LCFI2777:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2778:
	l.sw    	-20(r1),r20	 # SI store
.LCFI2779:
	l.slli  	r5,r5,2
	l.addi  	r1,r1,-36
.LCFI2780:
	l.sw    	0(r22),r18	 # SI store
	l.ori   	r24,r3,0	 # move reg to reg
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.ori   	r26,r6,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7140	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.slli  	r14,r14,2
	l.slli  	r18,r18,2
	l.addi  	r3,r0,0	 # move immediate I
	l.add   	r14,r11,r14
	l.add   	r18,r11,r18
	l.sw    	0(r14),r26	 # SI store
	l.sw    	0(r18),r3	 # SI store
.L7138:
	l.sw    	0(r2),r16	 # SI store
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L7140:
	l.sflesi	r14,0
	l.bf	.L7136	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
.L7137:
	l.lwz   	r5,0(r2)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.add   	r5,r5,r20
	l.addi  	r18,r18,1
	l.lwz   	r4,0(r5)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r20,r20,4
	l.sfgts 	r14,r18
	l.bf	.L7137
	l.nop			# nop delay slot
.L7136:
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.j     	.L7138	# delay slot filled
	l.sw    	0(r22),r3	 # SI store
.LFE1399:
	.size	addModuleArgument.clone.151, .-addModuleArgument.clone.151
	.align	4
.proc	addArgumentToVtab
	.type	addArgumentToVtab, @function
addArgumentToVtab:
.LFB1110:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2781:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2782:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2783:
	l.lwz   	r4,492(r3)	 # SI load
	l.sfeqi	r4,0
.LCFI2784:
	l.bf	.L7141	# delay slot filled
	l.addi  	r1,r1,-12
	l.lwz   	r2,476(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7141
	l.nop			# nop delay slot
	l.lwz   	r14,0(r3)	 # SI load
	l.lwz   	r5,496(r3)	 # SI load
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.ori   	r3,r3,65535
	l.and   	r5,r5,r3
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r2,60
	l.addi  	r5,r2,64
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	addModuleArgument.clone.151	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L7141:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1110:
	.size	addArgumentToVtab, .-addArgumentToVtab
	.align	4
.proc	sqlite3_set_auxdata
	.global sqlite3_set_auxdata
	.type	sqlite3_set_auxdata, @function
sqlite3_set_auxdata:
.LFB643:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2785:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2786:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2787:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2788:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2789:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2790:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2791:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2792:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI2793:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r24,r5,0	 # move reg to reg
	l.sfltsi	r4,0
	l.bf	.L7144	# delay slot filled
	l.ori   	r20,r6,0	 # move reg to reg
	l.lwz   	r2,4(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7145	# delay slot filled
	l.ori   	r22,r2,0	 # move reg to reg
	l.lwz   	r22,4(r2)	 # SI load
	l.sfges 	r4,r22
	l.bnf	.L7146	# delay slot filled
	l.addi  	r18,r4,1
.L7145:
	l.addi  	r5,r14,2
	l.ori   	r4,r2,0	 # move reg to reg
	l.slli  	r5,r5,3
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.lwz   	r3,24(r16)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L7144	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r18,r14,1
	l.slli  	r3,r22,3
	l.sub   	r5,r18,r22
	l.addi  	r4,r11,8
	l.slli  	r5,r5,3
	l.add   	r3,r4,r3
	l.sw    	4(r16),r11	 # SI store
	l.jal   	memset	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,0(r16)	 # SI load
	l.sw    	4(r2),r18	 # SI store
	l.sw    	0(r2),r3	 # SI store
.L7146:
	l.slli  	r3,r18,3
	l.add   	r3,r2,r3
	l.lwz   	r3,0(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7153
	l.nop			# nop delay slot
	l.slli  	r14,r14,3
	l.add   	r4,r2,r14
	l.lwz   	r4,12(r4)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L7147
	l.nop			# nop delay slot
	l.jalr  	r4
	l.nop			# nop delay slot
.L7147:
	l.slli  	r18,r18,3
	l.add   	r14,r2,r14
	l.add   	r2,r2,r18
	l.sw    	12(r14),r20	 # SI store
	l.sw    	0(r2),r24	 # SI store
.L7143:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L7144:
	l.sfeqi	r20,0
	l.bf	.L7143	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.lwz   	r24,-8(r1)	 # SI load
	l.jr	r20		# sibcall r
	l.lwz	r20,-16(r1)

.L7153:
	l.j     	.L7147	# delay slot filled
	l.slli  	r14,r14,3
.LFE643:
	.size	sqlite3_set_auxdata, .-sqlite3_set_auxdata
	.align	4
.proc	addToVTrans
	.type	addToVTrans, @function
addToVTrans:
.LFB1116:
	l.sw    	-20(r1),r14	 # SI store
.LCFI2794:
	l.lwz   	r14,292(r3)	 # SI load
	l.sw    	-24(r1),r2	 # SI store
.LCFI2795:
	l.sw    	-16(r1),r16	 # SI store
.LCFI2796:
	l.sw    	-8(r1),r20	 # SI store
.LCFI2797:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2798:
	l.sw    	-12(r1),r18	 # SI store
.LCFI2799:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI2800:
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	__modsi3	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L7155	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r18,288(r2)	 # SI load
.L7156:
	l.slli  	r4,r14,2
	l.lwz   	r3,4(r16)	 # SI load
	l.addi  	r14,r14,1
	l.add   	r18,r18,r4
	l.addi  	r3,r3,1
	l.sw    	0(r18),r16	 # SI store
	l.sw    	292(r2),r14	 # SI store
	l.sw    	4(r16),r3	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
.L7157:
	l.addi	r1,r1,24
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L7155:
	l.addi  	r5,r14,5
	l.ori   	r3,r2,0	 # move reg to reg
	l.slli  	r5,r5,2
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.lwz   	r4,288(r2)	 # SI load
	l.addi  	r3,r0,7	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L7157	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r3,292(r2)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.slli  	r3,r3,2
	l.addi  	r5,r0,20	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.add   	r3,r11,r3
	l.sw    	288(r2),r18	 # SI store
	l.j     	.L7156	# delay slot filled
	l.lwz   	r14,292(r2)	 # SI load
.LFE1116:
	.size	addToVTrans, .-addToVTrans
	.align	4
.proc	replaceFunc
	.type	replaceFunc, @function
replaceFunc:
.LFB964:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2801:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2802:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2803:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2804:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2805:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2806:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2807:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2808:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2809:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2810:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2811:
	l.addi  	r1,r1,-72
.LCFI2812:
	l.ori   	r14,r5,0	 # move reg to reg
	l.sw    	0(r1),r3	 # SI store
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r3,0(r5)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L7159	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.addi  	r2,r14,4
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.sw    	12(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L7159	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lbz   	r3,0(r11)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L7175	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.addi  	r14,r14,8
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7159	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.lwz   	r2,12(r1)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3_value_bytes	# delay slot filled
	l.addi  	r26,r2,1
	l.srai  	r28,r26,31
	l.lwz   	r3,0(r1)	 # SI load
	l.ori   	r5,r26,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.jal   	contextMalloc	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L7159	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sub   	r24,r2,r30
	l.sfltsi	r24,0
	l.bf	.L7172	# delay slot filled
	l.addi  	r6,r30,-1
	l.lwz   	r3,4(r1)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.sub   	r3,r3,r30
	l.srai  	r5,r3,31
	l.sw    	16(r1),r3	 # SI store
	l.ori   	r2,r14,0	 # move reg to reg
	l.sw    	20(r1),r5	 # SI store
	l.j     	.L7171	# delay slot filled
	l.sw    	24(r1),r6	 # SI store
.L7163:
	l.add   	r6,r18,r14
.L7179:
	l.addi  	r2,r2,1
	l.sb    	0(r6),r16	    # movqi
	l.sfges 	r24,r2
	l.bnf	.L7176	# delay slot filled
	l.addi  	r14,r14,1
.L7171:
	l.add   	r6,r22,r2
.L7180:
	l.lbz   	r7,0(r20)	 # zero_extendqisi2
	l.lbz   	r16,0(r6)	 # zero_extendqisi2
	l.sfne 	r7,r16
	l.bf	.L7163	# delay slot filled
	l.ori   	r3,r6,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	memcmp	# delay slot filled
	l.ori   	r5,r30,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L7179	# delay slot filled
	l.add   	r6,r18,r14
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r3,0(r1)	 # SI load
	l.add   	r4,r26,r7
	l.lwz   	r16,24(r3)	 # SI load
	l.sfltu 	r4,r26
	l.bf	.L7166	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.ori   	r3,r11,0	 # move reg to reg
.L7166:
	l.lwz   	r5,20(r1)	 # SI load
	l.addi  	r7,r4,-1
	l.add   	r28,r28,r5
	l.ori   	r26,r4,0	 # move reg to reg
	l.add   	r28,r3,r28
	l.sfltu 	r7,r4
	l.bf	.L7168	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
.L7168:
	l.lwz   	r6,80(r16)	 # SI load
	l.addi  	r8,r28,-1
	l.srai  	r3,r6,31
	l.add   	r5,r5,r8
	l.sfgts 	r5,r3
	l.bf	.L7173	# delay slot filled
	l.sfne 	r5,r3
	l.bnf	.L7177	# delay slot filled
	l.sfgtu 	r7,r6
.L7167:
	l.jal   	sqlite3_realloc	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7178	# delay slot filled
	l.lwz   	r7,24(r1)	 # SI load
	l.add   	r3,r11,r14
	l.add   	r2,r2,r7
	l.lwz   	r5,4(r1)	 # SI load
	l.lwz   	r4,8(r1)	 # SI load
	l.addi  	r2,r2,1
	l.add   	r14,r14,r5
	l.jal   	memcpy	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfges 	r24,r2
	l.bf	.L7180	# delay slot filled
	l.add   	r6,r22,r2
.L7176:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
.L7162:
	l.lwz   	r5,12(r1)	 # SI load
	l.add   	r3,r18,r3
	l.sub   	r2,r5,r2
	l.add   	r4,r22,r4
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.add   	r5,r2,r14
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.add   	r2,r18,r5
	l.lwz   	r3,0(r1)	 # SI load
	l.sb    	0(r2),r6	    # movqi
	l.addi	r1,r1,72
	l.movhi  	r6,hi(sqlite3_free)
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(sqlite3_free)
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3_result_text	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L7175:
	l.lwz   	r4,0(r14)	 # SI load
	l.addi	r1,r1,72
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3_result_value	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L7159:
	l.addi	r1,r1,72
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L7177:
	l.bnf	.L7167
	l.nop			# nop delay slot
.L7173:
	l.jal   	sqlite3_result_error_toobig	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.addi	r1,r1,72
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L7178:
	l.jal   	sqlite3_result_error_nomem	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.addi	r1,r1,72
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L7172:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r4,0	 # move reg to reg
	l.ori   	r14,r4,0	 # move reg to reg
	l.j     	.L7162	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
.LFE964:
	.size	replaceFunc, .-replaceFunc
	.align	4
.proc	sqlite3VtabMakeWritable
	.type	sqlite3VtabMakeWritable, @function
sqlite3VtabMakeWritable:
.LFB1126:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2813:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2814:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2815:
	l.lwz   	r7,504(r3)	 # SI load
	l.addi  	r1,r1,-12
.LCFI2816:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfgtsi	r7,0
	l.bnf	.L7188	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r3,508(r3)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.sfeq 	r4,r2
	l.bf	.L7181	# delay slot filled
	l.addi  	r6,r3,4
	l.j     	.L7185	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L7186:
	l.lwz   	r4,0(r6)	 # SI load
	l.sfeq 	r4,r2
	l.bf	.L7181	# delay slot filled
	l.addi  	r6,r6,4
.L7185:
	l.addi  	r5,r5,1
	l.sflts 	r5,r7
	l.bf	.L7186
	l.nop			# nop delay slot
.L7183:
	l.addi  	r4,r7,1
	l.jal   	sqlite3_realloc	# delay slot filled
	l.slli  	r4,r4,2
	l.sfeqi	r11,0
	l.bf	.L7187	# delay slot filled
	l.sw    	508(r14),r11	 # SI store
	l.lwz   	r3,504(r14)	 # SI load
	l.slli  	r4,r3,2
	l.addi  	r3,r3,1
	l.add   	r11,r11,r4
	l.sw    	0(r11),r2	 # SI store
	l.sw    	504(r14),r3	 # SI store
.L7181:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7187:
	l.lwz   	r2,0(r14)	 # SI load
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	30(r2),r3	    # movqi
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7188:
	l.j     	.L7183	# delay slot filled
	l.lwz   	r3,508(r3)	 # SI load
.LFE1126:
	.size	sqlite3VtabMakeWritable, .-sqlite3VtabMakeWritable
	.align	4
.proc	unixClose
	.type	unixClose, @function
unixClose:
.LFB167:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2817:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2818:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2819:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI2820:
	l.bf	.L7190	# delay slot filled
	l.addi  	r1,r1,-12
	l.jal   	unixUnlock	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r14,4(r2)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L7191
	l.nop			# nop delay slot
	l.lwz   	r3,20(r14)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L7200
	l.nop			# nop delay slot
.L7191:
	l.lwz   	r3,8(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7192
	l.nop			# nop delay slot
	l.lwz   	r4,24(r3)	 # SI load
	l.addi  	r4,r4,-1
	l.sfnei	r4,0
	l.bf	.L7192	# delay slot filled
	l.sw    	24(r3),r4	 # SI store
	l.lwz   	r4,32(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L7193	# delay slot filled
	l.movhi  	r6,hi(lockList)
	l.lwz   	r5,28(r3)	 # SI load
	l.sw    	28(r4),r5	 # SI store
	l.lwz   	r5,28(r3)	 # SI load
.L7194:
	l.sfeqi	r5,0
	l.bf	.L7195
	l.nop			# nop delay slot
	l.sw    	32(r5),r4	 # SI store
.L7195:
	l.jal   	sqlite3_free
	l.nop			# nop delay slot
.L7192:
	l.lwz   	r14,4(r2)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L7196
	l.nop			# nop delay slot
	l.lwz   	r3,16(r14)	 # SI load
	l.addi  	r3,r3,-1
	l.sfnei	r3,0
	l.bf	.L7196	# delay slot filled
	l.sw    	16(r14),r3	 # SI store
	l.lwz   	r3,36(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7197	# delay slot filled
	l.movhi  	r5,hi(openList)
	l.lwz   	r4,32(r14)	 # SI load
	l.sw    	32(r3),r4	 # SI store
	l.lwz   	r4,32(r14)	 # SI load
.L7198:
	l.sfeqi	r4,0
	l.bf	.L7199
	l.nop			# nop delay slot
	l.sw    	36(r4),r3	 # SI store
.L7199:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,28(r14)	 # SI load
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L7196:
	l.addi	r1,r1,12
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	closeUnixFile	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L7190:
	l.addi	r1,r1,12
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7200:
	l.lwz   	r4,24(r14)	 # SI load
	l.lwz   	r3,28(r14)	 # SI load
	l.addi  	r4,r4,1
	l.jal   	sqlite3_realloc	# delay slot filled
	l.slli  	r4,r4,2
	l.sfeqi	r11,0
	l.bf	.L7191
	l.nop			# nop delay slot
	l.lwz   	r3,24(r14)	 # SI load
	l.lwz   	r4,12(r2)	 # SI load
	l.slli  	r3,r3,2
	l.sw    	28(r14),r11	 # SI store
	l.add   	r11,r11,r3
	l.sw    	0(r11),r4	 # SI store
	l.lwz   	r3,24(r14)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	24(r14),r3	 # SI store
	l.addi  	r3,r0,-1	 # move immediate I
	l.j     	.L7191	# delay slot filled
	l.sw    	12(r2),r3	 # SI store
.L7193:
	l.lwz   	r5,28(r3)	 # SI load
	l.ori   	r6,r6,lo(lockList)
	l.j     	.L7194	# delay slot filled
	l.sw    	0(r6),r5	 # SI store
.L7197:
	l.lwz   	r4,32(r14)	 # SI load
	l.ori   	r5,r5,lo(openList)
	l.j     	.L7198	# delay slot filled
	l.sw    	0(r5),r4	 # SI store
.LFE167:
	.size	unixClose, .-unixClose
	.align	4
.proc	sqlite3_complete16
	.global sqlite3_complete16
	.type	sqlite3_complete16, @function
sqlite3_complete16:
.LFB1184:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2821:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2822:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2823:
	l.addi  	r1,r1,-12
.LCFI2824:
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7207
	l.nop			# nop delay slot
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7207:
	l.jal   	sqlite3ValueNew	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.movhi  	r3,hi(sqlite3one)
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r3,lo(sqlite3one)
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bnf	.L7208	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
.L7203:
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ValueSetStr	# delay slot filled
	l.addi  	r14,r0,7	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ValueText	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L7204	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	sqlite3_complete
	l.nop			# nop delay slot
	l.ori   	r14,r11,0	 # move reg to reg
.L7204:
	l.jal   	sqlite3ValueFree	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L7208:
	l.j     	.L7203	# delay slot filled
	l.addi  	r6,r0,3	 # move immediate I
.LFE1184:
	.size	sqlite3_complete16, .-sqlite3_complete16
	.align	4
.proc	sqlite3_auto_extension
	.global sqlite3_auto_extension
	.type	sqlite3_auto_extension, @function
sqlite3_auto_extension:
.LFB996:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2825:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2826:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2827:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2828:
	l.addi  	r1,r1,-16
.LCFI2829:
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7210	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.movhi  	r3,hi(sqlite3Autoext)
	l.ori   	r3,r3,lo(sqlite3Autoext)
	l.lwz   	r7,0(r3)	 # SI load
	l.sflesi	r7,0
	l.bf	.L7211	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r5,4(r3)	 # SI load
	l.lwz   	r4,0(r5)	 # SI load
	l.sfeq 	r4,r2
	l.bf	.L7210
	l.nop			# nop delay slot
	l.addi  	r5,r5,4
	l.j     	.L7212	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
.L7213:
	l.lwz   	r6,0(r5)	 # SI load
	l.sfeq 	r6,r2
	l.bf	.L7210	# delay slot filled
	l.addi  	r5,r5,4
.L7212:
	l.addi  	r4,r4,1
	l.sflts 	r4,r7
	l.bf	.L7213
	l.nop			# nop delay slot
.L7211:
	l.sfne 	r4,r7
	l.bnf	.L7216
	l.nop			# nop delay slot
.L7210:
	l.addi	r1,r1,16
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7216:
	l.addi  	r4,r4,1
	l.lwz   	r3,4(r3)	 # SI load
	l.slli  	r4,r4,2
	l.jal   	sqlite3_realloc	# delay slot filled
	l.movhi  	r16,hi(sqlite3Autoext)
	l.sfeqi	r11,0
	l.bf	.L7215	# delay slot filled
	l.ori   	r16,r16,lo(sqlite3Autoext)
	l.lwz   	r3,0(r16)	 # SI load
	l.sw    	4(r16),r11	 # SI store
	l.slli  	r4,r3,2
	l.addi  	r3,r3,1
	l.add   	r11,r11,r4
	l.sw    	0(r11),r2	 # SI store
	l.j     	.L7210	# delay slot filled
	l.sw    	0(r16),r3	 # SI store
.L7215:
	l.j     	.L7210	# delay slot filled
	l.addi  	r14,r0,7	 # move immediate I
.LFE996:
	.size	sqlite3_auto_extension, .-sqlite3_auto_extension
	.align	4
.proc	sqlite3_malloc
	.global sqlite3_malloc
	.type	sqlite3_malloc, @function
sqlite3_malloc:
.LFB79:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2830:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2831:
	l.addi  	r1,r1,-8
.LCFI2832:
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7219	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L7219:
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3Malloc	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE79:
	.size	sqlite3_malloc, .-sqlite3_malloc
	.align	4
.proc	memjrnlWrite
	.type	memjrnlWrite, @function
memjrnlWrite:
.LFB699:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2833:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2834:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2835:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2836:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2837:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2838:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2839:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2840:
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r1,r1,-32
.LCFI2841:
	l.sfles 	r5,r11
	l.bf	.L7221	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r22,r4,0	 # move reg to reg
	l.lwz   	r3,8(r3)	 # SI load
	l.lwz   	r4,12(r14)	 # SI load
	l.ori   	r18,r5,0	 # move reg to reg
	l.j     	.L7227	# delay slot filled
	l.addi  	r24,r0,1020	 # move immediate I
.L7231:
	l.sw    	0(r20),r11	 # SI store
.L7224:
	l.sw    	16(r14),r11	 # SI store
	l.ori   	r20,r11,0	 # move reg to reg
.L7222:
	l.sub   	r2,r24,r16
	l.sfles 	r2,r18
	l.bf	.L7232	# delay slot filled
	l.addi  	r3,r20,4
	l.ori   	r2,r18,0	 # move reg to reg
.L7232:
	l.ori   	r4,r22,0	 # move reg to reg
	l.add   	r3,r3,r16
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.sub   	r18,r18,r2
	l.lwz   	r4,12(r14)	 # SI load
	l.srai  	r6,r2,31
	l.add   	r4,r2,r4
	l.lwz   	r3,8(r14)	 # SI load
	l.sfltu 	r4,r2
	l.bf	.L7226	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
.L7226:
	l.add   	r3,r6,r3
	l.sw    	12(r14),r4	 # SI store
	l.add   	r3,r5,r3
	l.sflesi	r18,0
	l.bf	.L7230	# delay slot filled
	l.sw    	8(r14),r3	 # SI store
	l.add   	r22,r22,r2
.L7227:
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	__moddi3	# delay slot filled
	l.addi  	r6,r0,1020	 # move immediate I
	l.lwz   	r20,16(r14)	 # SI load
	l.sfnei	r12,0
	l.bf	.L7222	# delay slot filled
	l.ori   	r16,r12,0	 # move reg to reg
	l.jal   	sqlite3_malloc	# delay slot filled
	l.addi  	r3,r0,1024	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L7229	# delay slot filled
	l.sfeqi	r20,0
	l.bnf	.L7231	# delay slot filled
	l.sw    	0(r11),r16	 # SI store
	l.j     	.L7224	# delay slot filled
	l.sw    	4(r14),r11	 # SI store
.L7230:
	l.addi  	r11,r0,0	 # move immediate I
.L7221:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L7229:
	l.j     	.L7221	# delay slot filled
	l.addi  	r11,r0,3082	 # move immediate I
.LFE699:
	.size	memjrnlWrite, .-memjrnlWrite
	.align	4
.proc	pcache1Fetch
	.type	pcache1Fetch, @function
pcache1Fetch:
.LFB254:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2842:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2843:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2844:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2845:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2846:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2847:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2848:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2849:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2850:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2851:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2852:
	l.ori   	r24,r5,0	 # move reg to reg
	l.addi  	r1,r1,-48
.LCFI2853:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfnei	r5,1
	l.bnf	.L7275	# delay slot filled
	l.ori   	r22,r4,0	 # move reg to reg
.L7234:
	l.lwz   	r14,24(r16)	 # SI load
.L7284:
	l.sfeqi	r14,0
	l.bf	.L7268	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	__umodsi3	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.slli  	r11,r11,2
	l.lwz   	r2,28(r16)	 # SI load
	l.add   	r11,r2,r11
	l.lwz   	r2,0(r11)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7286	# delay slot filled
	l.sub   	r3,r0,r24
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeq 	r3,r22
	l.bnf	.L7269
	l.nop			# nop delay slot
	l.j     	.L7266
	l.nop			# nop delay slot
.L7276:
	l.lwz   	r3,0(r2)	 # SI load
	l.sfne 	r3,r22
	l.bnf	.L7266
	l.nop			# nop delay slot
.L7269:
	l.lwz   	r2,4(r2)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L7276
	l.nop			# nop delay slot
.L7268:
	l.sub   	r3,r0,r24
.L7286:
	l.or    	r3,r3,r24
	l.sfltsi	r3,0
	l.bnf	.L7266	# delay slot filled
	l.sfnei	r24,1
	l.lwz   	r2,20(r16)	 # SI load
	l.bnf	.L7277	# delay slot filled
	l.lwz   	r3,16(r16)	 # SI load
	l.sfgtu 	r14,r2
.L7288:
	l.bnf	.L7278	# delay slot filled
	l.add   	r18,r14,r14
.L7242:
	l.lwz   	r2,4(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7251
	l.nop			# nop delay slot
	l.movhi  	r14,hi(pcache1_g)
.L7285:
	l.ori   	r14,r14,lo(pcache1_g)
	l.lwz   	r2,20(r14)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7251
	l.nop			# nop delay slot
	l.lwz   	r3,20(r16)	 # SI load
	l.lwz   	r4,12(r16)	 # SI load
	l.addi  	r3,r3,1
	l.sfgeu 	r3,r4
	l.bf	.L7252
	l.nop			# nop delay slot
	l.lwz   	r4,12(r14)	 # SI load
	l.lwz   	r3,4(r14)	 # SI load
	l.sflts 	r4,r3
	l.bf	.L7251
	l.nop			# nop delay slot
.L7252:
	l.jal   	pcache1RemoveFromHash	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pcache1PinPage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r4,0(r16)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.sfeq 	r5,r4
	l.bf	.L7253
	l.nop			# nop delay slot
	l.jal   	pcache1FreePage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L7251:
	l.lwz   	r3,0(r16)	 # SI load
	l.jal   	pcache1Alloc	# delay slot filled
	l.addi  	r3,r3,20
	l.sfeqi	r11,0
	l.bf	.L7241	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,4(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7254	# delay slot filled
	l.movhi  	r3,hi(pcache1_g)
	l.ori   	r3,r3,lo(pcache1_g)
	l.lwz   	r4,12(r3)	 # SI load
	l.addi  	r4,r4,1
	l.sw    	12(r3),r4	 # SI store
.L7254:
	l.lwz   	r4,24(r16)	 # SI load
	l.jal   	__umodsi3	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.slli  	r11,r11,2
	l.lwz   	r3,28(r16)	 # SI load
	l.lwz   	r4,20(r16)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r3,r3,r11
	l.addi  	r4,r4,1
	l.lwz   	r5,0(r3)	 # SI load
	l.sw    	20(r2),r6	 # SI store
	l.sw    	20(r16),r4	 # SI store
	l.sw    	0(r2),r22	 # SI store
	l.sw    	4(r2),r5	 # SI store
	l.sw    	8(r2),r16	 # SI store
	l.sw    	16(r2),r6	 # SI store
	l.sw    	12(r2),r6	 # SI store
	l.j     	.L7255	# delay slot filled
	l.sw    	0(r3),r2	 # SI store
.L7266:
.L7239:
	l.jal   	pcache1PinPage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L7287	# delay slot filled
	l.sfnei	r24,1
.L7255:
	l.lwz   	r3,32(r16)	 # SI load
	l.sfleu 	r22,r3
	l.bf	.L7287	# delay slot filled
	l.sfnei	r24,1
	l.sw    	32(r16),r22	 # SI store
.L7256:
	l.sfnei	r24,1
.L7287:
	l.bnf	.L7279	# delay slot filled
	l.movhi  	r3,hi(sqlite3Hooks)
.L7257:
	l.sfeqi	r2,0
.L7283:
	l.bf	.L7258	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
	l.addi  	r11,r2,20
.L7258:
	l.addi	r1,r1,48
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L7279:
	l.ori   	r3,r3,lo(sqlite3Hooks)
	l.lwz   	r3,4(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7257
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
	l.j     	.L7283	# delay slot filled
	l.sfeqi	r2,0
.L7275:
	l.movhi  	r2,hi(sqlite3Hooks)
	l.ori   	r2,r2,lo(sqlite3Hooks)
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7234
	l.nop			# nop delay slot
	l.jalr  	r2
	l.nop			# nop delay slot
	l.j     	.L7284	# delay slot filled
	l.lwz   	r14,24(r16)	 # SI load
.L7277:
	l.lwz   	r4,4(r16)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L7288	# delay slot filled
	l.sfgtu 	r14,r2
	l.movhi  	r4,hi(pcache1_g)
	l.lwz   	r6,8(r16)	 # SI load
	l.ori   	r4,r4,lo(pcache1_g)
	l.sub   	r18,r2,r3
	l.lwz   	r5,4(r4)	 # SI load
	l.lwz   	r4,8(r4)	 # SI load
	l.add   	r5,r5,r6
	l.sub   	r3,r5,r4
	l.sfgeu 	r18,r3
	l.bf	.L7241	# delay slot filled
	l.addi  	r4,r0,10	 # move immediate I
	l.lwz   	r3,12(r16)	 # SI load
	l.slli  	r5,r3,3
	l.jal   	__udivsi3	# delay slot filled
	l.add   	r3,r5,r3
	l.sfgeu 	r18,r11
	l.bnf	.L7288	# delay slot filled
	l.sfgtu 	r14,r2
.L7241:
	l.j     	.L7256	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L7278:
	l.sfleui	r18,255
	l.bf	.L7263	# delay slot filled
	l.addi  	r2,r0,1024	 # move immediate I
	l.slli  	r26,r18,2
	l.ori   	r2,r26,0	 # move reg to reg
.L7243:
	l.sfeqi	r14,0
	l.bf	.L7244	# delay slot filled
	l.movhi  	r3,hi(sqlite3Hooks)
	l.ori   	r3,r3,lo(sqlite3Hooks)
	l.lwz   	r3,0(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7244
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
.L7244:
	l.jal   	sqlite3_malloc	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r2,24(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7245	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.movhi  	r2,hi(sqlite3Hooks)
	l.ori   	r2,r2,lo(sqlite3Hooks)
	l.lwz   	r2,4(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7289	# delay slot filled
	l.sfnei	r20,0
	l.jalr  	r2
	l.nop			# nop delay slot
.L7245:
	l.sfnei	r20,0
.L7289:
	l.bnf	.L7280	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.lwz   	r30,24(r16)	 # SI load
	l.sfeqi	r30,0
	l.bf	.L7281
	l.nop			# nop delay slot
	l.lwz   	r4,28(r16)	 # SI load
	l.addi  	r28,r0,0	 # move immediate I
	l.sw    	0(r1),r4	 # SI store
	l.ori   	r26,r4,0	 # move reg to reg
.L7250:
	l.lwz   	r2,0(r26)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7248
	l.nop			# nop delay slot
.L7273:
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	__umodsi3	# delay slot filled
	l.lwz   	r14,4(r2)	 # SI load
	l.slli  	r6,r11,2
	l.sfnei	r14,0
	l.add   	r6,r20,r6
	l.lwz   	r4,0(r6)	 # SI load
	l.sw    	4(r2),r4	 # SI store
	l.sw    	0(r6),r2	 # SI store
	l.bf	.L7273	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
.L7248:
	l.addi  	r28,r28,1
	l.sfltu 	r28,r30
	l.bf	.L7250	# delay slot filled
	l.addi  	r26,r26,4
.L7247:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.lwz   	r2,4(r16)	 # SI load
	l.sw    	28(r16),r20	 # SI store
	l.sfeqi	r2,0
	l.bf	.L7251	# delay slot filled
	l.sw    	24(r16),r18	 # SI store
	l.j     	.L7285	# delay slot filled
	l.movhi  	r14,hi(pcache1_g)
.L7263:
	l.addi  	r18,r0,256	 # move immediate I
	l.j     	.L7243	# delay slot filled
	l.ori   	r26,r2,0	 # move reg to reg
.L7253:
	l.lwz   	r5,4(r16)	 # SI load
	l.lwz   	r4,12(r14)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.add   	r4,r5,r4
	l.sub   	r3,r4,r3
	l.j     	.L7254	# delay slot filled
	l.sw    	12(r14),r3	 # SI store
.L7280:
	l.lwz   	r2,28(r16)	 # SI load
	l.sfnei	r2,0
	l.bf	.L7242	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L7287	# delay slot filled
	l.sfnei	r24,1
.L7281:
	l.lwz   	r2,28(r16)	 # SI load
	l.j     	.L7247	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.LFE254:
	.size	pcache1Fetch, .-pcache1Fetch
	.align	4
.proc	pcache1Create
	.type	pcache1Create, @function
pcache1Create:
.LFB251:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2854:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2855:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2856:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI2857:
	l.addi  	r3,r0,36	 # move immediate I
	l.jal   	sqlite3_malloc	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7291	# delay slot filled
	l.sub   	r3,r0,r2
	l.addi  	r4,r0,0	 # move immediate I
	l.or    	r3,r3,r2
	l.sw    	8(r11),r4	 # SI store
	l.srli  	r3,r3,31
	l.sw    	12(r11),r4	 # SI store
	l.sw    	16(r11),r4	 # SI store
	l.sw    	20(r11),r4	 # SI store
	l.sw    	24(r11),r4	 # SI store
	l.sw    	28(r11),r4	 # SI store
	l.sw    	32(r11),r4	 # SI store
	l.sw    	0(r11),r14	 # SI store
	l.sfeq 	r2,r4
	l.bf	.L7291	# delay slot filled
	l.sw    	4(r11),r3	 # SI store
	l.movhi  	r2,hi(pcache1_g)
	l.addi  	r4,r0,10	 # move immediate I
	l.ori   	r2,r2,lo(pcache1_g)
	l.lwz   	r3,8(r2)	 # SI load
	l.sw    	8(r11),r4	 # SI store
	l.add   	r3,r3,r4
	l.sw    	8(r2),r3	 # SI store
.L7291:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE251:
	.size	pcache1Create, .-pcache1Create
	.section	.rodata.str1.1
.LC203:
	.string	"sqlite3_get_table() called with two or more incompatible queries"
	.section .text
	.align	4
.proc	sqlite3_get_table_cb
	.type	sqlite3_get_table_cb, @function
sqlite3_get_table_cb:
.LFB1073:
	l.sw    	-8(r1),r22	 # SI store
.LCFI2858:
	l.sub   	r22,r0,r5
	l.sw    	-28(r1),r2	 # SI store
.LCFI2859:
	l.or    	r22,r5,r22
	l.sw    	-24(r1),r14	 # SI store
.LCFI2860:
	l.srli  	r22,r22,31
	l.sw    	-20(r1),r16	 # SI store
.LCFI2861:
	l.sw    	-16(r1),r18	 # SI store
.LCFI2862:
	l.sw    	-12(r1),r20	 # SI store
.LCFI2863:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2864:
	l.ori   	r14,r5,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI2865:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bf	.L7305	# delay slot filled
	l.lwz   	r20,12(r3)	 # SI load
	l.sub   	r3,r0,r20
	l.or    	r3,r3,r20
	l.sfltsi	r3,0
	l.bf	.L7305	# delay slot filled
	l.add   	r4,r4,r4
	l.lwz   	r5,20(r2)	 # SI load
	l.lwz   	r3,8(r2)	 # SI load
	l.add   	r5,r4,r5
	l.sfles 	r5,r3
	l.bnf	.L7317	# delay slot filled
	l.add   	r5,r3,r3
	l.sfnei	r20,0
.L7320:
	l.bnf	.L7318	# delay slot filled
	l.sflesi	r18,0
.L7296:
	l.lwz   	r3,16(r2)	 # SI load
	l.sfeq 	r3,r18
	l.bnf	.L7314
	l.nop			# nop delay slot
.L7297:
	l.sfeqi	r22,0
.L7316:
	l.bf	.L7299	# delay slot filled
	l.ori   	r11,r22,0	 # move reg to reg
	l.sflesi	r18,0
	l.bf	.L7300
	l.nop			# nop delay slot
	l.addi  	r22,r0,0	 # move immediate I
.L7304:
	l.lwz   	r11,0(r14)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L7307
	l.nop			# nop delay slot
	l.lbs   	r3,0(r11)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L7302	# delay slot filled
	l.addi  	r20,r0,1	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.addi  	r6,r6,1
.L7319:
	l.lbs   	r7,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r7,0
	l.bf	.L7319	# delay slot filled
	l.addi  	r6,r6,1
	l.addi  	r6,r6,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r20,r6,r11
	l.ori   	r3,r3,65535
	l.and   	r20,r20,r3
	l.addi  	r20,r20,1
.L7302:
	l.jal   	sqlite3_malloc	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7295	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r4,0(r14)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
.L7301:
	l.lwz   	r3,20(r2)	 # SI load
	l.lwz   	r5,0(r2)	 # SI load
	l.slli  	r4,r3,2
	l.addi  	r3,r3,1
	l.addi  	r22,r22,1
	l.add   	r4,r5,r4
	l.addi  	r14,r14,4
	l.sw    	0(r4),r16	 # SI store
	l.sfgts 	r18,r22
	l.bf	.L7304	# delay slot filled
	l.sw    	20(r2),r3	 # SI store
.L7300:
	l.lwz   	r3,12(r2)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r3,r3,1
	l.sw    	12(r2),r3	 # SI store
.L7299:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L7305:
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r5,20(r2)	 # SI load
	l.lwz   	r3,8(r2)	 # SI load
	l.add   	r5,r4,r5
	l.sfles 	r5,r3
	l.bf	.L7320	# delay slot filled
	l.sfnei	r20,0
	l.add   	r5,r3,r3
.L7317:
	l.lwz   	r3,0(r2)	 # SI load
	l.add   	r5,r4,r5
	l.slli  	r4,r5,2
	l.jal   	sqlite3_realloc	# delay slot filled
	l.sw    	8(r2),r5	 # SI store
	l.sfeqi	r11,0
	l.bf	.L7321	# delay slot filled
	l.addi  	r3,r0,7	 # move immediate I
	l.lwz   	r20,12(r2)	 # SI load
	l.sfnei	r20,0
	l.bf	.L7296	# delay slot filled
	l.sw    	0(r2),r11	 # SI store
	l.sflesi	r18,0
.L7318:
	l.bnf	.L7298	# delay slot filled
	l.sw    	16(r2),r18	 # SI store
	l.j     	.L7316	# delay slot filled
	l.sfeqi	r22,0
.L7315:
	l.lwz   	r3,20(r2)	 # SI load
	l.lwz   	r5,0(r2)	 # SI load
	l.slli  	r4,r3,2
	l.addi  	r3,r3,1
	l.add   	r4,r5,r4
	l.sfgts 	r18,r20
	l.sw    	0(r4),r11	 # SI store
	l.bnf	.L7297	# delay slot filled
	l.sw    	20(r2),r3	 # SI store
.L7298:
	l.movhi  	r3,hi(.LC78)
	l.lwz   	r4,0(r16)	 # SI load
	l.ori   	r3,r3,lo(.LC78)
	l.sw    	0(r1),r4	 # SI store
	l.jal   	sqlite3_mprintf	# delay slot filled
	l.addi  	r20,r20,1
	l.sfeqi	r11,0
	l.bnf	.L7315	# delay slot filled
	l.addi  	r16,r16,4
.L7295:
	l.addi  	r3,r0,7	 # move immediate I
.L7321:
	l.addi  	r11,r0,1	 # move immediate I
	l.j     	.L7299	# delay slot filled
	l.sw    	24(r2),r3	 # SI store
.L7307:
	l.j     	.L7301	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L7314:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,4(r2)	 # SI load
	l.movhi  	r3,hi(.LC203)
	l.jal   	sqlite3_mprintf	# delay slot filled
	l.ori   	r3,r3,lo(.LC203)
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	4(r2),r11	 # SI store
	l.sw    	24(r2),r3	 # SI store
	l.j     	.L7299	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
.LFE1073:
	.size	sqlite3_get_table_cb, .-sqlite3_get_table_cb
	.align	4
.proc	sqlite3_soft_heap_limit
	.global sqlite3_soft_heap_limit
	.type	sqlite3_soft_heap_limit, @function
sqlite3_soft_heap_limit:
.LFB68:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2866:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2867:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2868:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfltsi	r3,0
.LCFI2869:
	l.bf	.L7323	# delay slot filled
	l.addi  	r1,r1,-12
	l.jal   	sqlite3_initialize	# delay slot filled
	l.srai  	r14,r3,31
	l.or    	r3,r14,r2
	l.sfeqi	r3,0
	l.bf	.L7324	# delay slot filled
	l.movhi  	r3,hi(mem0)
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r3,lo(mem0)
	l.sw    	24(r3),r4	 # SI store
	l.movhi  	r4,hi(softHeapLimitEnforcer)
	l.sw    	12(r3),r14	 # SI store
	l.ori   	r4,r4,lo(softHeapLimitEnforcer)
	l.sw    	16(r3),r2	 # SI store
	l.sw    	20(r3),r4	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7323:
	l.jal   	sqlite3_initialize
	l.nop			# nop delay slot
.L7324:
	l.movhi  	r2,hi(mem0)
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r2,r2,lo(mem0)
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	20(r2),r3	 # SI store
	l.sw    	24(r2),r3	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
		l.sw    	12(r2), r3
		l.sw    	12+4(r2), r4
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE68:
	.size	sqlite3_soft_heap_limit, .-sqlite3_soft_heap_limit
	.align	4
.proc	sqlite3_vfs_register
	.global sqlite3_vfs_register
	.type	sqlite3_vfs_register, @function
sqlite3_vfs_register:
.LFB54:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2870:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2871:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2872:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2873:
	l.addi  	r1,r1,-16
.LCFI2874:
	l.ori   	r14,r3,0	 # move reg to reg
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7332	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7332:
	l.jal   	vfsUnlink	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r16,0
	l.bnf	.L7333	# delay slot filled
	l.movhi  	r4,hi(vfsList)
	l.ori   	r4,r4,lo(vfsList)
	l.lwz   	r3,0(r4)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L7334	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r4,12(r3)	 # SI load
	l.sw    	12(r14),r4	 # SI store
	l.sw    	12(r3),r14	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7333:
	l.ori   	r4,r4,lo(vfsList)
	l.lwz   	r3,0(r4)	 # SI load
.L7330:
	l.sw    	12(r14),r3	 # SI store
	l.sw    	0(r4),r14	 # SI store
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7334:
	l.j     	.L7330	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.LFE54:
	.size	sqlite3_vfs_register, .-sqlite3_vfs_register
	.align	4
.proc	sqlite3_os_init
	.global sqlite3_os_init
	.type	sqlite3_os_init, @function
sqlite3_os_init:
.LFB201:
	l.movhi  	r3,hi(aVfs.9005)
	l.sw    	-8(r1),r2	 # SI store
.LCFI2875:
	l.movhi  	r2,hi(aVfs.9005+72)
	l.sw    	-4(r1),r9	 # SI store
.LCFI2876:
	l.ori   	r3,r3,lo(aVfs.9005)
	l.addi  	r1,r1,-8
.LCFI2877:
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3_vfs_register	# delay slot filled
	l.ori   	r2,r2,lo(aVfs.9005+72)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3_vfs_register	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r2,72
	l.jal   	sqlite3_vfs_register	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi	r1,r1,8
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE201:
	.size	sqlite3_os_init, .-sqlite3_os_init
	.align	4
.proc	sqlite3_vfs_find
	.global sqlite3_vfs_find
	.type	sqlite3_vfs_find, @function
sqlite3_vfs_find:
.LFB52:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2878:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2879:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2880:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r1,r1,-12
.LCFI2881:
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfne 	r11,r2
	l.bf	.L7337
	l.nop			# nop delay slot
	l.movhi  	r2,hi(vfsList)
	l.ori   	r2,r2,lo(vfsList)
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L7337	# delay slot filled
	l.sfeqi	r14,0
	l.bnf	.L7340
	l.nop			# nop delay slot
	l.j     	.L7343	# delay slot filled
	l.addi	r1,r1,12
.L7342:
	l.lwz   	r2,12(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L7337
	l.nop			# nop delay slot
.L7340:
	l.lwz   	r4,16(r2)	 # SI load
	l.jal   	strcmp	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L7342
	l.nop			# nop delay slot
.L7337:
	l.addi	r1,r1,12
.L7343:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE52:
	.size	sqlite3_vfs_find, .-sqlite3_vfs_find
	.align	4
.proc	sqlite3_randomness
	.global sqlite3_randomness
	.type	sqlite3_randomness, @function
sqlite3_randomness:
.LFB112:
	l.sw    	-16(r1),r20	 # SI store
.LCFI2882:
	l.sw    	-12(r1),r22	 # SI store
.LCFI2883:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2884:
	l.sw    	-32(r1),r2	 # SI store
.LCFI2885:
	l.sw    	-28(r1),r14	 # SI store
.LCFI2886:
	l.sw    	-24(r1),r16	 # SI store
.LCFI2887:
	l.sw    	-20(r1),r18	 # SI store
.LCFI2888:
	l.sw    	-8(r1),r24	 # SI store
.LCFI2889:
	l.ori   	r20,r3,0	 # move reg to reg
	l.addi  	r1,r1,-288
.LCFI2890:
	l.sfeqi	r3,0
	l.bf	.L7344	# delay slot filled
	l.ori   	r22,r4,0	 # move reg to reg
	l.movhi  	r2,hi(sqlite3Prng)
	l.addi  	r14,r0,0	 # move immediate I
	l.ori   	r2,r2,lo(sqlite3Prng)
	l.j     	.L7350	# delay slot filled
	l.ori   	r18,r2,0	 # move reg to reg
.L7354:
	l.lbz   	r7,2(r18)	 # zero_extendqisi2
.L7347:
	l.lbz   	r6,1(r2)	 # zero_extendqisi2
	l.movhi  	r3,hi(sqlite3Prng)
	l.addi  	r6,r6,1
	l.ori   	r3,r3,lo(sqlite3Prng)
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.add   	r12,r22,r14
	l.add   	r8,r6,r3
	l.sb    	1(r2),r6	    # movqi
	l.lbz   	r6,3(r8)	 # zero_extendqisi2
	l.add   	r7,r7,r6
	l.addi  	r14,r14,1
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.sfne 	r14,r20
	l.add   	r11,r7,r3
	l.sb    	2(r2),r7	    # movqi
	l.lbz   	r4,3(r11)	 # zero_extendqisi2
	l.sb    	3(r8),r4	    # movqi
	l.sb    	3(r11),r6	    # movqi
	l.lbz   	r7,3(r8)	 # zero_extendqisi2
	l.add   	r6,r6,r7
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.add   	r6,r6,r3
	l.lbz   	r6,3(r6)	 # zero_extendqisi2
	l.bnf	.L7344	# delay slot filled
	l.sb    	0(r12),r6	    # movqi
.L7350:
	l.lbz   	r16,0(r2)	 # zero_extendqisi2
	l.sfeqi	r16,0
	l.bnf	.L7354	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sb    	2(r18),r16	    # movqi
	l.jal   	sqlite3_vfs_find	# delay slot filled
	l.sb    	1(r18),r16	    # movqi
	l.addi  	r4,r0,256	 # move immediate I
	l.lwz   	r6,56(r11)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
	l.jalr  	r6	# delay slot filled
	l.ori   	r5,r1,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.movhi  	r3,hi(sqlite3Prng)
.L7355:
	l.ori   	r3,r3,lo(sqlite3Prng)
	l.add   	r7,r6,r3
	l.sb    	3(r7),r6	    # movqi
	l.addi  	r6,r6,1
	l.sfnei	r6,256
	l.bf	.L7355	# delay slot filled
	l.movhi  	r3,hi(sqlite3Prng)
	l.movhi  	r6,hi(sqlite3Prng+3)
	l.lbz   	r7,2(r2)	 # zero_extendqisi2
	l.ori   	r6,r6,lo(sqlite3Prng+3)
	l.ori   	r8,r1,0	 # move reg to reg
.L7349:
	l.lbz   	r12,0(r6)	 # zero_extendqisi2
	l.lbz   	r11,0(r8)	 # zero_extendqisi2
	l.add   	r11,r12,r11
	l.movhi  	r4,hi(sqlite3Prng)
	l.add   	r7,r7,r11
	l.ori   	r4,r4,lo(sqlite3Prng)
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.movhi  	r3,hi(sqlite3Prng+259)
	l.add   	r11,r7,r4
	l.ori   	r3,r3,lo(sqlite3Prng+259)
	l.lbz   	r13,3(r11)	 # zero_extendqisi2
	l.sb    	3(r11),r12	    # movqi
	l.sb    	0(r6),r13	    # movqi
	l.addi  	r6,r6,1
	l.sfne 	r6,r3
	l.bf	.L7349	# delay slot filled
	l.addi  	r8,r8,1
	l.ori   	r3,r4,0	 # move reg to reg
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.j     	.L7347	# delay slot filled
	l.sb    	0(r3),r4	    # movqi
.L7344:
	l.addi	r1,r1,288
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.LFE112:
	.size	sqlite3_randomness, .-sqlite3_randomness
	.align	4
.proc	writeJournalHdr
	.type	writeJournalHdr, @function
writeJournalHdr:
.LFB279:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2891:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2892:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2893:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2894:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2895:
	l.lwz   	r18,108(r3)	 # SI load
	l.lwz   	r16,120(r3)	 # SI load
	l.addi  	r1,r1,-20
.LCFI2896:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfleu 	r16,r18
	l.bf	.L7357	# delay slot filled
	l.lwz   	r14,148(r3)	 # SI load
	l.ori   	r16,r18,0	 # move reg to reg
.L7357:
	l.lwz   	r7,88(r2)	 # SI load
	l.sflesi	r7,0
	l.bf	.L7358	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,84(r2)	 # SI load
	l.addi  	r3,r3,8
.L7360:
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r8,4(r3)	 # SI load
	l.or    	r4,r4,r8
	l.sfnei	r4,0
	l.bf	.L7359	# delay slot filled
	l.addi  	r5,r5,1
		l.lwz   	r11, 68(r2)
		l.lwz   	r12, 68+4(r2)
		l.sw    	0(r3), r11
		l.sw    	4(r3), r12
.L7359:
	l.sfne 	r5,r7
	l.bf	.L7360	# delay slot filled
	l.addi  	r3,r3,28
.L7358:
	l.lwz   	r6,68(r2)	 # SI load
	l.lwz   	r5,72(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.or    	r7,r6,r5
	l.sfeqi	r7,0
	l.bf	.L7361	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r4,r5,-1
	l.sfltu 	r4,r5
	l.bnf	.L7374	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L7363:
	l.addi  	r6,r6,-1
	l.addi  	r5,r0,0	 # move immediate I
	l.add   	r3,r3,r6
	l.jal   	__divdi3	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r3,r0,1	 # move immediate I
	l.sfgeui	r12,-1
	l.bnf	.L7375	# delay slot filled
	l.addi  	r4,r12,1
.L7364:
	l.add   	r3,r3,r11
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	__muldi3	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
.L7361:
		l.sw    	68(r2), r3
		l.sw    	68+4(r2), r4
		l.sw    	76(r2), r3
		l.sw    	76+4(r2), r4
	l.addi  	r12,r0,-39	 # movqi: move immediate
	l.addi  	r3,r0,-43	 # movqi: move immediate
	l.addi  	r4,r0,5	 # movqi: move immediate
	l.addi  	r11,r0,-7	 # movqi: move immediate
	l.sb    	0(r14),r12	    # movqi
	l.sb    	1(r14),r3	    # movqi
	l.sb    	2(r14),r4	    # movqi
	l.sb    	3(r14),r11	    # movqi
	l.addi  	r3,r0,-95	 # movqi: move immediate
	l.addi  	r12,r0,32	 # movqi: move immediate
	l.addi  	r4,r0,99	 # movqi: move immediate
	l.addi  	r11,r0,-41	 # movqi: move immediate
	l.sb    	4(r14),r12	    # movqi
	l.sb    	5(r14),r3	    # movqi
	l.sb    	6(r14),r4	    # movqi
	l.sb    	7(r14),r11	    # movqi
	l.lbz   	r3,8(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7377	# delay slot filled
	l.addi  	r3,r14,8
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.sfeqi	r3,4
	l.bf	.L7377	# delay slot filled
	l.addi  	r3,r14,8
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r11,48(r4)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.andi  	r11,r11,512
	l.sfeqi	r11,0
	l.bf	.L7366	# delay slot filled
	l.addi  	r3,r14,8
.L7377:
	l.addi  	r12,r0,-1	 # movqi: move immediate
	l.sb    	0(r3),r12	    # movqi
	l.sb    	1(r3),r12	    # movqi
	l.sb    	2(r3),r12	    # movqi
	l.sb    	3(r3),r12	    # movqi
.L7367:
	l.addi  	r3,r0,4	 # move immediate I
	l.addi  	r4,r2,44
	l.jal   	sqlite3_randomness	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.lwz   	r4,44(r2)	 # SI load
	l.addi  	r3,r14,12
	l.srli  	r7,r4,24
	l.srli  	r6,r4,16
	l.srli  	r5,r4,8
	l.sb    	0(r3),r7	    # movqi
	l.sb    	1(r3),r6	    # movqi
	l.sb    	3(r3),r4	    # movqi
	l.sb    	2(r3),r5	    # movqi
	l.addi  	r3,r14,16
	l.lwz   	r5,28(r2)	 # SI load
	l.addi  	r4,r14,20
	l.srli  	r8,r5,24
	l.srli  	r7,r5,16
	l.srli  	r6,r5,8
	l.sb    	0(r3),r8	    # movqi
	l.sb    	1(r3),r7	    # movqi
	l.sb    	2(r3),r6	    # movqi
	l.sb    	3(r3),r5	    # movqi
	l.addi  	r6,r14,24
	l.lwz   	r5,108(r2)	 # SI load
	l.addi  	r3,r14,28
	l.srli  	r11,r5,24
	l.srli  	r8,r5,16
	l.srli  	r7,r5,8
	l.sb    	0(r4),r11	    # movqi
	l.sb    	1(r4),r8	    # movqi
	l.sb    	3(r4),r5	    # movqi
	l.sb    	2(r4),r7	    # movqi
	l.addi  	r5,r16,-28
	l.lwz   	r7,120(r2)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.srli  	r12,r7,24
	l.srli  	r11,r7,16
	l.srli  	r8,r7,8
	l.sb    	0(r6),r12	    # movqi
	l.sb    	1(r6),r11	    # movqi
	l.sb    	2(r6),r8	    # movqi
	l.jal   	memset	# delay slot filled
	l.sb    	3(r6),r7	    # movqi
.L7368:
	l.lwz   	r3,108(r2)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfltu 	r18,r3
	l.ori   	r5,r16,0	 # move reg to reg
	l.bnf	.L7376	# delay slot filled
	l.add   	r18,r18,r16
	l.lwz   	r3,60(r2)	 # SI load
		l.lwz   	r6, 68(r2)
		l.lwz   	r7, 68+4(r2)
	l.lwz   	r8,0(r3)	 # SI load
	l.lwz   	r11,12(r8)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.lwz   	r6,72(r2)	 # SI load
	l.lwz   	r5,68(r2)	 # SI load
	l.add   	r3,r6,r16
	l.sfltu 	r3,r6
	l.bf	.L7369	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
.L7369:
	l.add   	r4,r4,r5
	l.sw    	72(r2),r3	 # SI store
	l.sfnei	r11,0
	l.bnf	.L7368	# delay slot filled
	l.sw    	68(r2),r4	 # SI store
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L7375:
	l.j     	.L7364	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L7374:
	l.j     	.L7363	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L7376:
	l.addi	r1,r1,20
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L7366:
	l.sb    	0(r3),r11	    # movqi
	l.sb    	1(r3),r11	    # movqi
	l.sb    	2(r3),r11	    # movqi
	l.j     	.L7367	# delay slot filled
	l.sb    	3(r3),r11	    # movqi
.LFE279:
	.size	writeJournalHdr, .-writeJournalHdr
	.align	4
.proc	pager_open_journal
	.type	pager_open_journal, @function
pager_open_journal:
.LFB325:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2897:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2898:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2899:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2900:
	l.lwz   	r14,36(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI2901:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfnei	r14,0
	l.bnf	.L7388	# delay slot filled
	l.lwz   	r16,0(r3)	 # SI load
.L7379:
	l.addi	r1,r1,16
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7388:
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.addi  	r14,r0,7	 # move immediate I
	l.jal   	sqlite3BitvecCreate	# delay slot filled
	l.lwz   	r3,24(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L7379	# delay slot filled
	l.sw    	52(r2),r11	 # SI store
	l.lwz   	r5,60(r2)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L7389	# delay slot filled
	l.addi  	r4,r0,0	 # movqi: move immediate
.L7391:
	l.lwz   	r3,24(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.sb    	17(r2),r4	    # movqi
	l.sw    	28(r2),r3	 # SI store
	l.sb    	16(r2),r4	    # movqi
	l.sw    	40(r2),r5	 # SI store
	l.sb    	19(r2),r4	    # movqi
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
		l.sw    	68(r2), r4
		l.sw    	68+4(r2), r5
		l.sw    	76(r2), r4
		l.sw    	76+4(r2), r5
	l.jal   	writeJournalHdr	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7385	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,88(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7379
	l.nop			# nop delay slot
	l.jal   	openSubJournal	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7379	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7385:
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.lwz   	r3,52(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r11,r14,0	 # move reg to reg
	l.sw    	52(r2),r5	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7389:
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.sfnei	r3,4
	l.bnf	.L7390
	l.nop			# nop delay slot
	l.lbz   	r3,11(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L7382	# delay slot filled
	l.addi  	r6,r0,2054	 # move immediate I
	l.addi  	r6,r0,4110	 # move immediate I
.L7382:
	l.lwz   	r11,24(r16)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,132(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L7385	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L7391	# delay slot filled
	l.addi  	r4,r0,0	 # movqi: move immediate
.L7390:
	l.jal   	sqlite3MemJournalOpen	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.j     	.L7391	# delay slot filled
	l.addi  	r4,r0,0	 # movqi: move immediate
.LFE325:
	.size	pager_open_journal, .-pager_open_journal
	.align	4
.proc	sqlite3PagerBegin
	.type	sqlite3PagerBegin, @function
sqlite3PagerBegin:
.LFB326:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2902:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2903:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2904:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2905:
	l.ori   	r16,r4,0	 # move reg to reg
	l.lbz   	r4,14(r3)	 # zero_extendqisi2
	l.sb    	22(r3),r5	    # movqi
	l.addi  	r1,r1,-16
.LCFI2906:
	l.sfnei	r4,1
	l.bnf	.L7399	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r4,60(r3)	 # SI load
	l.lwz   	r14,0(r4)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L7394
	l.nop			# nop delay slot
	l.lwz   	r4,68(r3)	 # SI load
	l.lwz   	r2,72(r3)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.or    	r4,r4,r2
	l.sfne 	r4,r14
	l.bnf	.L7400
	l.nop			# nop delay slot
.L7394:
	l.addi	r1,r1,16
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7400:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	pager_open_journal	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L7399:
	l.lwz   	r3,56(r3)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r11,28(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L7394	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r3,r0,2	 # movqi: move immediate
	l.sfeqi	r16,0
	l.bnf	.L7401	# delay slot filled
	l.sb    	14(r2),r3	    # movqi
.L7395:
	l.lbz   	r3,6(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L7394
	l.nop			# nop delay slot
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.sfeqi	r3,2
	l.bf	.L7394
	l.nop			# nop delay slot
	l.addi	r1,r1,16
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	pager_open_journal	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L7401:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pager_wait_on_lock	# delay slot filled
	l.addi  	r4,r0,4	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L7395
	l.nop			# nop delay slot
	l.j     	.L7394	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.LFE326:
	.size	sqlite3PagerBegin, .-sqlite3PagerBegin
	.align	4
.proc	pager_write
	.type	pager_write, @function
pager_write:
.LFB327:
	l.sw    	-28(r1),r2	 # SI store
.LCFI2907:
	l.lwz   	r2,16(r3)	 # SI load
	l.sw    	-24(r1),r14	 # SI store
.LCFI2908:
	l.sw    	-20(r1),r16	 # SI store
.LCFI2909:
	l.sw    	-12(r1),r20	 # SI store
.LCFI2910:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2911:
	l.sw    	-16(r1),r18	 # SI store
.LCFI2912:
	l.sw    	-8(r1),r22	 # SI store
.LCFI2913:
	l.lwz   	r16,36(r2)	 # SI load
	l.addi  	r1,r1,-28
.LCFI2914:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfnei	r16,0
	l.bf	.L7403	# delay slot filled
	l.lwz   	r20,0(r3)	 # SI load
	l.lbz   	r4,12(r2)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L7425
	l.nop			# nop delay slot
	l.addi  	r16,r0,3	 # move immediate I
.L7403:
	l.addi	r1,r1,28
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L7425:
	l.jal   	sqlite3PcacheMakeDirty
	l.nop			# nop delay slot
	l.lwz   	r22,12(r14)	 # SI load
	l.lwz   	r18,16(r14)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.lwz   	r3,52(r18)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L7426	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L7404:
	l.lbz   	r5,22(r2)	 # zero_extendqisi2
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3PagerBegin	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L7403	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,60(r2)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L7427
	l.nop			# nop delay slot
.L7406:
	l.addi  	r3,r0,1	 # movqi: move immediate
.L7433:
	l.sb    	15(r2),r3	    # movqi
	l.lwz   	r18,12(r14)	 # SI load
	l.lwz   	r22,16(r14)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.lwz   	r3,52(r22)	 # SI load
	l.sfnei	r11,0
	l.bf	.L7431	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r3,60(r2)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L7407
	l.nop			# nop delay slot
	l.lwz   	r4,28(r2)	 # SI load
	l.sfgtu 	r18,r4
	l.bnf	.L7428
	l.nop			# nop delay slot
	l.lbz   	r3,17(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7431	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lbz   	r3,8(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7431	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lhz   	r3,20(r14)	 # zero_extendqisi2
	l.ori   	r3,r3,4
	l.sh    	20(r14),r3	 # movhi
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	16(r2),r3	    # movqi
.L7422:
	l.lwz   	r18,12(r14)	 # SI load
	l.lwz   	r22,16(r14)	 # SI load
.L7407:
	l.ori   	r3,r18,0	 # move reg to reg
.L7431:
	l.jal   	subjRequiresPage.clone.12	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7405
	l.nop			# nop delay slot
	l.jal   	subjournalPage	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r18,12(r14)	 # SI load
	l.j     	.L7405	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L7426:
	l.jal   	subjRequiresPage.clone.12	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7404	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	15(r2),r3	    # movqi
	l.lwz   	r18,12(r14)	 # SI load
.L7405:
	l.lwz   	r3,24(r2)	 # SI load
	l.sfgeu 	r3,r18
	l.bf	.L7403
	l.nop			# nop delay slot
	l.j     	.L7403	# delay slot filled
	l.sw    	24(r2),r18	 # SI store
.L7428:
	l.lwz   	r5,120(r2)	 # SI load
	l.addi  	r5,r5,-200
	l.sflesi	r5,0
	l.bf	.L7409	# delay slot filled
	l.lwz   	r22,44(r2)	 # SI load
.L7420:
	l.add   	r4,r20,r5
	l.addi  	r5,r5,-200
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sfgtsi	r5,0
	l.bf	.L7420	# delay slot filled
	l.add   	r22,r22,r4
.L7409:
		l.lwz   	r4, 68(r2)
		l.lwz   	r5, 68+4(r2)
	l.jal   	write32bits	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7429
	l.nop			# nop delay slot
.L7411:
	l.lbz   	r3,8(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7432	# delay slot filled
	l.sfnei	r11,0
	l.lhz   	r3,20(r14)	 # zero_extendqisi2
	l.ori   	r3,r3,4
	l.sh    	20(r14),r3	 # movhi
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	16(r2),r3	    # movqi
.L7432:
	l.bnf	.L7430
	l.nop			# nop delay slot
	l.j     	.L7403	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L7430:
	l.lwz   	r5,40(r2)	 # SI load
	l.lwz   	r4,12(r14)	 # SI load
	l.addi  	r5,r5,1
	l.lwz   	r3,52(r2)	 # SI load
	l.jal   	sqlite3BitvecSet	# delay slot filled
	l.sw    	40(r2),r5	 # SI store
	l.addi  	r3,r2,84
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r4,r2,88
	l.jal   	addToSavepointBitvecs.clone.105	# delay slot filled
	l.lwz   	r5,12(r14)	 # SI load
	l.or    	r11,r11,r18
	l.sfnei	r11,0
	l.bnf	.L7422
	l.nop			# nop delay slot
	l.j     	.L7403	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L7427:
	l.lbz   	r3,6(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L7433	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.sfeqi	r3,2
	l.bf	.L7433	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.jal   	pager_open_journal	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7406
	l.nop			# nop delay slot
	l.j     	.L7403	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L7429:
	l.lwz   	r12,72(r2)	 # SI load
	l.lwz   	r3,60(r2)	 # SI load
	l.addi  	r7,r12,4
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r5,120(r2)	 # SI load
	l.lwz   	r8,68(r2)	 # SI load
	l.sfltu 	r7,r12
	l.bf	.L7412	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
.L7412:
	l.lwz   	r11,12(r4)	 # SI load
	l.add   	r6,r6,r8
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r3,120(r2)	 # SI load
	l.lwz   	r5,72(r2)	 # SI load
	l.addi  	r3,r3,4
	l.lwz   	r6,68(r2)	 # SI load
	l.add   	r5,r3,r5
	l.srai  	r7,r3,31
	l.sfltu 	r5,r3
	l.bf	.L7413	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
.L7413:
	l.add   	r3,r7,r6
	l.sw    	72(r2),r5	 # SI store
	l.add   	r4,r4,r3
	l.sfnei	r11,0
	l.bf	.L7411	# delay slot filled
	l.sw    	68(r2),r4	 # SI store
	l.lwz   	r3,60(r2)	 # SI load
	l.jal   	write32bits	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r6,72(r2)	 # SI load
	l.lwz   	r5,68(r2)	 # SI load
	l.addi  	r3,r6,4
	l.sfltu 	r3,r6
	l.bf	.L7414	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
.L7414:
	l.add   	r4,r4,r5
	l.sw    	72(r2),r3	 # SI store
	l.j     	.L7411	# delay slot filled
	l.sw    	68(r2),r4	 # SI store
.LFE327:
	.size	pager_write, .-pager_write
	.align	4
.proc	sqlite3PagerWrite
	.type	sqlite3PagerWrite, @function
sqlite3PagerWrite:
.LFB328:
	l.sw    	-40(r1),r2	 # SI store
.LCFI2915:
	l.lwz   	r2,16(r3)	 # SI load
	l.sw    	-24(r1),r20	 # SI store
.LCFI2916:
	l.sw    	-20(r1),r22	 # SI store
.LCFI2917:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2918:
	l.sw    	-36(r1),r14	 # SI store
.LCFI2919:
	l.sw    	-32(r1),r16	 # SI store
.LCFI2920:
	l.sw    	-28(r1),r18	 # SI store
.LCFI2921:
	l.sw    	-16(r1),r24	 # SI store
.LCFI2922:
	l.sw    	-12(r1),r26	 # SI store
.LCFI2923:
	l.sw    	-8(r1),r28	 # SI store
.LCFI2924:
	l.ori   	r22,r3,0	 # move reg to reg
	l.addi  	r1,r1,-48
.LCFI2925:
	l.lwz   	r3,108(r2)	 # SI load
	l.jal   	__udivsi3	# delay slot filled
	l.lwz   	r4,120(r2)	 # SI load
	l.sfleui	r11,1
	l.bf	.L7435	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sub   	r5,r0,r11
	l.sb    	20(r2),r3	    # movqi
	l.addi  	r4,r1,4
	l.lwz   	r18,12(r22)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r18,r18,-1
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.and   	r18,r5,r18
	l.lwz   	r4,12(r22)	 # SI load
	l.lwz   	r3,4(r1)	 # SI load
	l.sfleu 	r4,r3
	l.bf	.L7436	# delay slot filled
	l.addi  	r5,r18,1
	l.addi  	r20,r4,1
	l.sub   	r20,r20,r5
.L7437:
	l.srai  	r14,r20,31
.L7459:
	l.sub   	r14,r14,r20
	l.srli  	r14,r14,31
	l.sfeqi	r14,0
	l.bf	.L7439	# delay slot filled
	l.movhi  	r24,hi(sqlite3PendingByte)
	l.addi  	r16,r0,1	 # move immediate I
	l.addi  	r26,r0,0	 # move immediate I
	l.ori   	r24,r24,lo(sqlite3PendingByte)
.L7447:
	l.add   	r14,r16,r18
	l.sfeq 	r14,r4
	l.bf	.L7440
	l.nop			# nop delay slot
	l.lwz   	r3,52(r2)	 # SI load
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7441
	l.nop			# nop delay slot
.L7440:
	l.lwz   	r3,0(r24)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r4,120(r2)	 # SI load
	l.addi  	r11,r11,1
	l.sfeq 	r11,r14
	l.bf	.L7453	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L7458	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7443:
	l.sfeqi	r26,0
	l.bf	.L7439	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
.L7450:
	l.lwz   	r3,160(r2)	 # SI load
	l.jal   	pager_lookup.clone.100	# delay slot filled
	l.add   	r4,r16,r18
	l.sfeqi	r11,0
	l.bf	.L7448	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lhz   	r5,20(r11)	 # zero_extendqisi2
	l.ori   	r5,r5,4
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.sh    	20(r11),r5	 # movhi
.L7448:
	l.sfgts 	r20,r16
	l.bf	.L7449	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L7449:
	l.andi  	r3,r3,1
	l.sfnei	r3,0
	l.bf	.L7450	# delay slot filled
	l.addi  	r16,r16,1
.L7439:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	20(r2),r3	    # movqi
.L7451:
	l.addi	r1,r1,48
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L7436:
	l.addi  	r6,r20,-1
	l.add   	r6,r6,r5
	l.sfgeu 	r3,r6
	l.bf	.L7459	# delay slot filled
	l.srai  	r14,r20,31
	l.addi  	r3,r3,1
	l.j     	.L7437	# delay slot filled
	l.sub   	r20,r3,r5
.L7453:
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r14,r0,0	 # move immediate I
.L7442:
	l.sfgts 	r20,r16
	l.bf	.L7446	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L7446:
	l.and   	r4,r4,r3
	l.sfeqi	r4,0
	l.bf	.L7443	# delay slot filled
	l.addi  	r16,r16,1
	l.j     	.L7447	# delay slot filled
	l.lwz   	r4,12(r22)	 # SI load
.L7441:
	l.lwz   	r3,160(r2)	 # SI load
	l.jal   	pager_lookup.clone.100	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7455	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lhz   	r3,20(r11)	 # zero_extendqisi2
	l.andi  	r3,r3,4
	l.sfnei	r3,0
	l.bnf	.L7445
	l.nop			# nop delay slot
	l.addi  	r26,r0,1	 # move immediate I
.L7445:
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L7442	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L7458:
	l.jal   	pager_write	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.lwz   	r3,0(r1)	 # SI load
	l.lhz   	r4,20(r3)	 # zero_extendqisi2
	l.andi  	r4,r4,4
	l.sfnei	r4,0
	l.bnf	.L7444	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r26,r0,1	 # move immediate I
.L7444:
	l.jal   	sqlite3PagerUnref
	l.nop			# nop delay slot
	l.sub   	r4,r0,r14
	l.or    	r4,r4,r14
	l.xori  	r4,r4,0xffff
	l.j     	.L7442	# delay slot filled
	l.srli  	r4,r4,31
.L7435:
	l.jal   	pager_write	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.j     	.L7451	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7455:
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L7442	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.LFE328:
	.size	sqlite3PagerWrite, .-sqlite3PagerWrite
	.align	4
.proc	backupOnePage.clone.155
	.type	backupOnePage.clone.155, @function
backupOnePage.clone.155:
.LFB1403:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2926:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2927:
	l.lwz   	r2,4(r4)	 # SI load
	l.ori   	r28,r3,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	-8(r1),r30	 # SI store
.LCFI2928:
	l.lhz   	r30,20(r2)	 # zero_extendqisi2
	l.lwz   	r2,4(r3)	 # SI load
	l.sw    	-32(r1),r18	 # SI store
.LCFI2929:
	l.lhz   	r18,20(r2)	 # zero_extendqisi2
	l.sw    	-20(r1),r24	 # SI store
.LCFI2930:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2931:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2932:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2933:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2934:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2935:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2936:
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r1,r1,-72
.LCFI2937:
	l.ori   	r4,r5,0	 # move reg to reg
	l.sw    	20(r1),r6	 # SI store
	l.sw    	4(r1),r2	 # SI store
	l.sw    	12(r1),r18	 # SI store
	l.sfles 	r18,r30
	l.bf	.L7461	# delay slot filled
	l.ori   	r24,r18,0	 # move reg to reg
	l.sw    	12(r1),r30	 # SI store
.L7461:
	l.sfeq 	r30,r18
	l.bf	.L7462	# delay slot filled
	l.lwz   	r2,4(r1)	 # SI load
	l.lbz   	r3,13(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L7462	# delay slot filled
	l.addi  	r2,r0,8	 # move immediate I
.L7463:
	l.addi	r1,r1,72
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L7462:
	l.srai  	r3,r30,31
	l.ori   	r6,r30,0	 # move reg to reg
	l.sw    	16(r1),r3	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.jal   	__muldi3	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.sub   	r3,r12,r30
	l.sw    	8(r1),r12	 # SI store
	l.ori   	r26,r11,0	 # move reg to reg
	l.sfgtu 	r3,r12
	l.bnf	.L7480	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sub   	r4,r26,r4
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r22,r4,0	 # move reg to reg
	l.sfgts 	r26,r4
	l.bnf	.L7481	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
.L7465:
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
	l.bf	.L7463	# delay slot filled
	l.add   	r20,r3,r18
	l.srai  	r2,r18,31
	l.addi  	r16,r0,1	 # move immediate I
	l.sfltu 	r20,r3
	l.bnf	.L7482	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.L7467:
	l.add   	r16,r16,r4
.L7475:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r5,0(r1)	 # SI load
	l.ori   	r6,r24,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
	l.jal   	__divdi3	# delay slot filled
	l.sw    	24(r1),r2	 # SI store
	l.movhi  	r4,hi(sqlite3PendingByte)
	l.addi  	r2,r12,1
	l.ori   	r4,r4,lo(sqlite3PendingByte)
	l.lwz   	r3,0(r4)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.addi  	r11,r11,1
	l.sfeq 	r2,r11
	l.bf	.L7478	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r3,4(r1)	 # SI load
	l.addi  	r5,r1,24
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L7483	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L7469:
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.sub   	r8,r0,r2
	l.or    	r8,r8,r2
	l.xori  	r8,r8,0xffff
	l.srli  	r8,r8,31
.L7468:
	l.add   	r4,r14,r24
	l.sfltu 	r4,r14
	l.bf	.L7471	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
.L7471:
	l.add   	r22,r7,r22
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfgts 	r26,r16
	l.bf	.L7472	# delay slot filled
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.sfne 	r26,r16
	l.bnf	.L7484	# delay slot filled
	l.lwz   	r5,8(r1)	 # SI load
	l.addi  	r7,r0,0	 # movqi: move immediate
.L7472:
	l.add   	r4,r20,r24
.L7487:
	l.and   	r8,r8,r7
	l.sfltu 	r4,r20
	l.bf	.L7474	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
.L7474:
	l.add   	r16,r7,r16
	l.sfeqi	r8,0
	l.bf	.L7463	# delay slot filled
	l.ori   	r20,r4,0	 # move reg to reg
	l.lwz   	r2,0(r28)	 # SI load
	l.lwz   	r2,4(r2)	 # SI load
	l.j     	.L7475	# delay slot filled
	l.lhz   	r18,20(r2)	 # zero_extendqisi2
.L7484:
	l.sfgtu 	r5,r20
	l.bf	.L7487	# delay slot filled
	l.add   	r4,r20,r24
	l.j     	.L7487	# delay slot filled
	l.addi  	r7,r0,0	 # movqi: move immediate
.L7478:
	l.addi  	r8,r0,1	 # move immediate I
	l.j     	.L7468	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L7483:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L7469	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r5,0(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	__moddi3	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r18,0(r3)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r6,r30,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	__moddi3	# delay slot filled
	l.add   	r18,r18,r12
	l.lwz   	r5,20(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r4,r5,r12
	l.jal   	memcpy	# delay slot filled
	l.lwz   	r5,12(r1)	 # SI load
	l.lwz   	r5,24(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,16(r5)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L7470	# delay slot filled
	l.lwz   	r5,4(r5)	 # SI load
	l.ori   	r3,r5,0	 # move reg to reg
.L7470:
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.j     	.L7469	# delay slot filled
	l.sb    	0(r3),r4	    # movqi
.L7482:
	l.j     	.L7467	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L7481:
	l.sfne 	r26,r4
.L7486:
	l.bnf	.L7485
	l.nop			# nop delay slot
	l.j     	.L7465	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
.L7480:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r14,r3,0	 # move reg to reg
	l.sub   	r4,r26,r4
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sfgts 	r26,r4
	l.bf	.L7465	# delay slot filled
	l.ori   	r22,r4,0	 # move reg to reg
	l.j     	.L7486	# delay slot filled
	l.sfne 	r26,r4
.L7485:
	l.lwz   	r5,8(r1)	 # SI load
	l.sfgtu 	r5,r3
	l.bf	.L7465
	l.nop			# nop delay slot
	l.j     	.L7465	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
.LFE1403:
	.size	backupOnePage.clone.155, .-backupOnePage.clone.155
	.align	4
.proc	sqlite3BackupUpdate
	.type	sqlite3BackupUpdate, @function
sqlite3BackupUpdate:
.LFB507:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2938:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2939:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2940:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2941:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI2942:
	l.sfeqi	r3,0
	l.bf	.L7488	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.j     	.L7492	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L7495:
	l.sfgesi	r11,0
	l.bf	.L7490	# delay slot filled
	l.sfnei	r3,6
	l.bnf	.L7490
	l.nop			# nop delay slot
.L7491:
	l.lwz   	r2,40(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L7488
	l.nop			# nop delay slot
.L7492:
	l.lwz   	r3,28(r2)	 # SI load
	l.xori  	r7,r3,5
	l.sub   	r11,r0,r3
	l.sub   	r8,r0,r7
	l.or    	r7,r8,r7
	l.sfgesi	r7,0
	l.bnf	.L7495	# delay slot filled
	l.or    	r11,r11,r3
.L7490:
	l.lwz   	r3,16(r2)	 # SI load
	l.sfgtu 	r3,r14
	l.bnf	.L7491	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r3,r2,4
	l.lwz   	r4,24(r2)	 # SI load
	l.jal   	backupOnePage.clone.155	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7491
	l.nop			# nop delay slot
	l.sw    	28(r2),r11	 # SI store
	l.lwz   	r2,40(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L7492
	l.nop			# nop delay slot
.L7488:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE507:
	.size	sqlite3BackupUpdate, .-sqlite3BackupUpdate
	.align	4
.proc	pager_playback_one_page
	.type	pager_playback_one_page, @function
pager_playback_one_page:
.LFB291:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2943:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2944:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2945:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2946:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2947:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2948:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2949:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2950:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2951:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2952:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2953:
	l.addi  	r1,r1,-64
.LCFI2954:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sw    	0(r1),r5	 # SI store
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.ori   	r30,r7,0	 # move reg to reg
	l.ori   	r26,r8,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L7497	# delay slot filled
	l.lwz   	r22,148(r3)	 # SI load
	l.lwz   	r18,60(r3)	 # SI load
	l.addi  	r6,r1,12
		l.lwz   	r4, 0(r16)
		l.lwz   	r5, 4(r16)
	l.jal   	read32bits	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7526	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L7499:
	l.addi	r1,r1,64
.L7534:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L7497:
	l.lwz   	r18,64(r3)	 # SI load
	l.addi  	r6,r1,12
		l.lwz   	r4, 0(r16)
		l.lwz   	r5, 4(r16)
	l.jal   	read32bits	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7499	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L7526:
	l.lwz   	r4,4(r16)	 # SI load
	l.lwz   	r3,0(r18)	 # SI load
	l.addi  	r12,r4,4
	l.lwz   	r8,120(r14)	 # SI load
	l.lwz   	r7,0(r16)	 # SI load
	l.sfltu 	r12,r4
	l.bnf	.L7527	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
.L7500:
	l.lwz   	r11,8(r3)	 # SI load
	l.add   	r6,r6,r7
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r8,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.ori   	r7,r12,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7499	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,120(r14)	 # SI load
	l.slli  	r3,r20,2
	l.addi  	r5,r4,4
	l.lwz   	r28,4(r16)	 # SI load
	l.add   	r3,r5,r3
	l.lwz   	r6,0(r16)	 # SI load
	l.add   	r28,r3,r28
	l.srai  	r7,r3,31
	l.sfltu 	r28,r3
	l.bnf	.L7528	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.add   	r3,r7,r6
	l.lwz   	r24,12(r1)	 # SI load
	l.add   	r3,r5,r3
	l.sfeqi	r24,0
	l.sw    	4(r1),r3	 # SI store
	l.sw    	4(r16),r28	 # SI store
	l.bf	.L7521	# delay slot filled
	l.sw    	0(r16),r3	 # SI store
.L7533:
	l.movhi  	r3,hi(sqlite3PendingByte)
	l.ori   	r3,r3,lo(sqlite3PendingByte)
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r11,r11,1
	l.sfeq 	r24,r11
	l.bf	.L7521
	l.nop			# nop delay slot
	l.lwz   	r3,24(r14)	 # SI load
	l.sfgtu 	r24,r3
	l.bf	.L7499
	l.nop			# nop delay slot
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7499	# delay slot filled
	l.sfeqi	r20,0
	l.bnf	.L7529	# delay slot filled
	l.addi  	r5,r28,-4
.L7502:
	l.sfeqi	r26,0
	l.bf	.L7507	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3BitvecSet	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7522	# delay slot filled
	l.lwz   	r24,12(r1)	 # SI load
.L7507:
	l.lwz   	r3,160(r14)	 # SI load
	l.jal   	pager_lookup.clone.100	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.lbz   	r3,14(r14)	 # zero_extendqisi2
	l.sfleui	r3,3
	l.bf	.L7508	# delay slot filled
	l.sw    	16(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L7535	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
	l.lhz   	r3,20(r11)	 # zero_extendqisi2
	l.andi  	r3,r3,4
	l.sfnei	r3,0
	l.bf	.L7510
	l.nop			# nop delay slot
.L7535:
	l.lwz   	r24,56(r14)	 # SI load
	l.sub   	r3,r0,r4
	l.or    	r3,r3,r4
	l.sfltsi	r3,0
	l.bnf	.L7530	# delay slot filled
	l.lwz   	r18,0(r24)	 # SI load
.L7508:
	l.sub   	r3,r0,r11
.L7539:
	l.or    	r3,r11,r3
	l.sfltsi	r3,0
	l.bnf	.L7531	# delay slot filled
	l.sub   	r3,r0,r20
.L7512:
	l.sfeqi	r11,0
.L7538:
	l.bf	.L7499
	l.nop			# nop delay slot
.L7510:
	l.lwz   	r18,0(r11)	 # SI load
	l.lwz   	r5,120(r14)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r5,144(r14)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L7536	# delay slot filled
	l.sfeqi	r20,0
	l.jalr  	r5	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.sfeqi	r20,0
.L7536:
	l.bf	.L7537	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.sfeqi	r30,0
	l.bf	.L7515
	l.nop			# nop delay slot
	l.lwz   	r4,0(r16)	 # SI load
	l.lwz   	r3,76(r14)	 # SI load
	l.sfgts 	r4,r3
	l.bf	.L7514	# delay slot filled
	l.sfne 	r4,r3
	l.bf	.L7515
	l.nop			# nop delay slot
	l.lwz   	r3,4(r16)	 # SI load
	l.lwz   	r4,80(r14)	 # SI load
	l.sfgtu 	r3,r4
	l.bf	.L7537	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
.L7515:
	l.jal   	sqlite3PcacheMakeClean	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
.L7514:
	l.lwz   	r3,12(r1)	 # SI load
.L7537:
	l.sfnei	r3,1
	l.bnf	.L7532	# delay slot filled
	l.addi  	r4,r18,24
.L7517:
	l.jal   	sqlite3PcacheRelease	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.j     	.L7534	# delay slot filled
	l.addi	r1,r1,64
.L7527:
	l.j     	.L7500	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L7528:
	l.ori   	r5,r11,0	 # move reg to reg
	l.add   	r3,r7,r6
	l.lwz   	r24,12(r1)	 # SI load
	l.add   	r3,r5,r3
	l.sfeqi	r24,0
	l.sw    	4(r1),r3	 # SI store
	l.sw    	4(r16),r28	 # SI store
	l.bnf	.L7533	# delay slot filled
	l.sw    	0(r16),r3	 # SI store
	l.j     	.L7499	# delay slot filled
	l.addi  	r2,r0,101	 # move immediate I
.L7529:
	l.sfltu 	r5,r28
	l.bf	.L7503	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r4,r11,0	 # move reg to reg
.L7503:
	l.lwz   	r3,4(r1)	 # SI load
	l.addi  	r6,r3,-1
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r4,r4,r6
	l.jal   	read32bits	# delay slot filled
	l.addi  	r6,r1,8
	l.sfnei	r11,0
	l.bf	.L7522	# delay slot filled
	l.sfeqi	r30,0
	l.bnf	.L7502	# delay slot filled
	l.lwz   	r24,12(r1)	 # SI load
	l.lwz   	r3,120(r14)	 # SI load
	l.addi  	r3,r3,-200
	l.sflesi	r3,0
	l.bf	.L7505	# delay slot filled
	l.lwz   	r4,44(r14)	 # SI load
.L7523:
	l.add   	r5,r22,r3
	l.addi  	r3,r3,-200
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.sfgtsi	r3,0
	l.bf	.L7523	# delay slot filled
	l.add   	r4,r4,r5
.L7505:
	l.lwz   	r3,8(r1)	 # SI load
	l.sfne 	r3,r4
	l.bnf	.L7502	# delay slot filled
	l.lwz   	r24,12(r1)	 # SI load
.L7521:
	l.j     	.L7499	# delay slot filled
	l.addi  	r2,r0,101	 # move immediate I
.L7522:
	l.j     	.L7499	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L7531:
	l.or    	r3,r3,r20
	l.sfltsi	r3,0
	l.bf	.L7538	# delay slot filled
	l.sfeqi	r11,0
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r5,r1,16
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L7499	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r3,r0,-9	 # move immediate I
	l.lhz   	r5,20(r4)	 # zero_extendqisi2
	l.and   	r5,r5,r3
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	sqlite3PcacheMakeDirty	# delay slot filled
	l.sh    	20(r4),r5	 # movhi
	l.j     	.L7512	# delay slot filled
	l.lwz   	r11,16(r1)	 # SI load
.L7532:
	l.addi  	r3,r14,92
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.j     	.L7517
	l.nop			# nop delay slot
.L7530:
	l.sub   	r3,r0,r18
	l.or    	r3,r18,r3
	l.sfgesi	r3,0
	l.bf	.L7539	# delay slot filled
	l.sub   	r3,r0,r11
	l.lwz   	r2,120(r14)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.srai  	r5,r2,31
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.jal   	__muldi3	# delay slot filled
	l.addi  	r4,r4,-1
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.lwz   	r8,12(r18)	 # SI load
		l.or    	r6, r11, r0
		l.or    	r7, r12, r0
	l.jalr  	r8	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r3,32(r14)	 # SI load
	l.sfgeu 	r3,r4
	l.bf	.L7511	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sw    	32(r14),r4	 # SI store
.L7511:
	l.lwz   	r3,164(r14)	 # SI load
	l.jal   	sqlite3BackupUpdate	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.j     	.L7512	# delay slot filled
	l.lwz   	r11,16(r1)	 # SI load
.LFE291:
	.size	pager_playback_one_page, .-pager_playback_one_page
	.align	4
.proc	pager_playback
	.type	pager_playback, @function
pager_playback:
.LFB295:
	l.sw    	-44(r1),r2	 # SI store
.LCFI2955:
	l.sw    	-40(r1),r14	 # SI store
.LCFI2956:
	l.sw    	-36(r1),r16	 # SI store
.LCFI2957:
	l.sw    	-32(r1),r18	 # SI store
.LCFI2958:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2959:
	l.sw    	-28(r1),r20	 # SI store
.LCFI2960:
	l.sw    	-24(r1),r22	 # SI store
.LCFI2961:
	l.sw    	-20(r1),r24	 # SI store
.LCFI2962:
	l.sw    	-16(r1),r26	 # SI store
.LCFI2963:
	l.sw    	-12(r1),r28	 # SI store
.LCFI2964:
	l.sw    	-8(r1),r30	 # SI store
.LCFI2965:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-80
.LCFI2966:
	l.lwz   	r3,60(r3)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r18,r4,0	 # move reg to reg
	l.lwz   	r4,0(r3)	 # SI load
	l.sw    	28(r1),r5	 # SI store
	l.addi  	r5,r0,1	 # move immediate I
	l.lwz   	r11,24(r4)	 # SI load
	l.sw    	24(r1),r5	 # SI store
	l.addi  	r4,r1,12
	l.jalr  	r11	# delay slot filled
	l.lwz   	r16,0(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L7541	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r5,12(r1)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.or    	r5,r5,r3
	l.sfeqi	r5,0
	l.bnf	.L7597
	l.nop			# nop delay slot
.L7542:
	l.lbz   	r5,11(r2)	 # zero_extendqisi2
	l.lwz   	r3,0(r2)	 # SI load
	l.sb    	18(r2),r5	    # movqi
	l.lwz   	r18,148(r2)	 # SI load
	l.lwz   	r5,8(r3)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r3,60(r2)	 # SI load
	l.jal   	readMasterJournal	# delay slot filled
	l.addi  	r5,r5,1
	l.sfeqi	r11,0
	l.bnf	.L7562	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r4,0(r18)	 # zero_extendqisi2
	l.sub   	r4,r0,r4
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pager_end_transaction	# delay slot filled
	l.srli  	r4,r4,31
	l.sfnei	r11,0
	l.bf	.L7562	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbs   	r3,0(r18)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L7562	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7562
	l.nop			# nop delay slot
	l.lwz   	r16,0(r2)	 # SI load
	l.addi  	r14,r0,7	 # move immediate I
	l.lwz   	r3,4(r16)	 # SI load
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.add   	r3,r3,r3
	l.lwz   	r26,4(r16)	 # SI load
	l.ori   	r20,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7578	# delay slot filled
	l.add   	r26,r11,r26
	l.lwz   	r11,24(r16)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r6,r0,16385	 # move immediate I
	l.jalr  	r11	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L7598	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7563:
	l.sfnei	r20,0
	l.bnf	.L7578
	l.nop			# nop delay slot
.L7581:
	l.lwz   	r3,0(r20)	 # SI load
.L7609:
	l.sfeqi	r3,0
	l.bf	.L7578
	l.nop			# nop delay slot
	l.lwz   	r11,4(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	0(r20),r4	 # SI store
.L7578:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.j     	.L7562
	l.nop			# nop delay slot
.L7602:
	l.sfeqi	r11,101
	l.bf	.L7542
	l.nop			# nop delay slot
.L7541:
	l.lbz   	r4,11(r2)	 # zero_extendqisi2
.L7611:
	l.sb    	18(r2),r4	    # movqi
.L7562:
	l.jal   	setSectorSize	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi	r1,r1,80
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L7597:
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r20,148(r2)	 # SI load
	l.lwz   	r5,8(r3)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r3,60(r2)	 # SI load
	l.jal   	readMasterJournal	# delay slot filled
	l.addi  	r5,r5,1
	l.sfnei	r11,0
	l.bf	.L7541	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbs   	r3,0(r20)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bnf	.L7599	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L7544:
	l.lwz   	r3,24(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7542	# delay slot filled
	l.sub   	r28,r0,r18
	l.addi  	r3,r0,0	 # move immediate I
	l.or    	r28,r28,r18
	l.addi  	r4,r0,0	 # move immediate I
	l.xori  	r28,r28,0xffff
	l.ori   	r26,r18,0	 # move reg to reg
	l.addi  	r24,r1,32
	l.addi  	r22,r1,28
	l.addi  	r30,r2,68
		l.sw    	68(r2), r3
		l.sw    	68+4(r2), r4
	l.j     	.L7596	# delay slot filled
	l.srli  	r28,r28,31
.L7603:
	l.lwz   	r16,108(r2)	 # SI load
.L7547:
	l.sub   	r3,r0,r12
	l.or    	r12,r3,r12
	l.sfltsi	r12,0
	l.bf	.L7586	# delay slot filled
	l.sfnei	r28,0
	l.bf	.L7549
	l.nop			# nop delay slot
.L7586:
	l.lwz   	r3,68(r2)	 # SI load
	l.lwz   	r8,72(r2)	 # SI load
	l.addi  	r20,r0,0	 # move immediate I
.L7551:
	l.sfnei	r3,0
	l.bnf	.L7613	# delay slot filled
	l.sfne 	r8,r16
.L7554:
	l.lwz   	r3,32(r1)	 # SI load
.L7615:
	l.sfeqi	r3,0
	l.bnf	.L7614	# delay slot filled
	l.sfeqi	r26,0
.L7596:
		l.lwz   	r4, 12(r1)
		l.lwz   	r5, 12+4(r1)
	l.ori   	r3,r2,0	 # move reg to reg
.L7619:
	l.ori   	r6,r24,0	 # move reg to reg
	l.jal   	readJournalHdr	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L7602	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r12,32(r1)	 # SI load
	l.sfeqi	r12,-1
	l.bnf	.L7603	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r16,108(r2)	 # SI load
	l.lwz   	r5,12(r1)	 # SI load
	l.sub   	r4,r7,r16
	l.sfgtu 	r4,r7
	l.bf	.L7548	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.ori   	r3,r11,0	 # move reg to reg
.L7548:
	l.lwz   	r8,120(r2)	 # SI load
	l.sub   	r3,r5,r3
	l.addi  	r8,r8,8
	l.srai  	r5,r8,31
	l.jal   	__divdi3	# delay slot filled
	l.ori   	r6,r8,0	 # move reg to reg
	l.j     	.L7547	# delay slot filled
	l.sw    	32(r1),r12	 # SI store
.L7549:
	l.lwz   	r14,80(r2)	 # SI load
	l.lwz   	r18,76(r2)	 # SI load
	l.add   	r14,r16,r14
	l.sfltu 	r14,r16
	l.bf	.L7552	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
.L7552:
	l.add   	r18,r3,r18
	l.lwz   	r3,68(r2)	 # SI load
	l.sfne 	r18,r3
	l.bnf	.L7604	# delay slot filled
	l.lwz   	r8,72(r2)	 # SI load
	l.sfnei	r3,0
.L7617:
	l.bf	.L7554	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
	l.sfne 	r8,r16
.L7613:
	l.bf	.L7615	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pager_truncate	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L7541	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,28(r1)	 # SI load
	l.sw    	24(r2),r3	 # SI store
	l.lwz   	r3,32(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7596	# delay slot filled
	l.sfeqi	r26,0
.L7614:
	l.bnf	.L7605
	l.nop			# nop delay slot
	l.addi  	r16,r0,0	 # move immediate I
.L7559:
	l.addi  	r7,r0,0	 # move immediate I
.L7616:
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r30,0	 # move reg to reg
	l.ori   	r8,r7,0	 # move reg to reg
	l.jal   	pager_playback_one_page	# delay slot filled
	l.add   	r16,r16,r4
	l.sfeqi	r11,0
	l.bnf	.L7606	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.sfgtu 	r3,r16
	l.bf	.L7616	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.j     	.L7596	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
.L7604:
	l.sfne 	r14,r8
	l.bf	.L7617	# delay slot filled
	l.sfnei	r3,0
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r5,12(r1)	 # SI load
	l.sub   	r4,r7,r14
	l.sfgtu 	r4,r7
	l.bf	.L7553	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
.L7553:
	l.lwz   	r6,120(r2)	 # SI load
	l.sub   	r5,r5,r18
	l.addi  	r6,r6,8
	l.sub   	r3,r5,r3
	l.srai  	r5,r6,31
	l.jal   	__divdi3	# delay slot filled
	l.addi  	r20,r0,1	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.sw    	32(r1),r12	 # SI store
	l.j     	.L7551	# delay slot filled
	l.ori   	r8,r14,0	 # move reg to reg
.L7605:
	l.jal   	pager_reset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L7559	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L7598:
	l.lwz   	r4,0(r20)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r11,24(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r1,4
	l.sfnei	r11,0
	l.bf	.L7563	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r4,4(r1)	 # SI load
	l.sfgtsi	r4,0
	l.bnf	.L7607	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
.L7587:
	l.lwz   	r4,8(r16)	 # SI load
	l.addi  	r4,r4,1
	l.add   	r3,r4,r3
	l.jal   	sqlite3Malloc	# delay slot filled
	l.sw    	0(r1),r4	 # SI store
	l.sfeqi	r11,0
	l.bf	.L7585	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r30,8(r1)	 # SI load
	l.lwz   	r4,0(r20)	 # SI load
	l.ori   	r5,r30,0	 # move reg to reg
	l.lwz   	r11,8(r4)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.jalr  	r11	# delay slot filled
	l.add   	r30,r24,r30
	l.sfnei	r11,0
	l.bf	.L7580	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,4(r1)	 # SI load
	l.sfgtsi	r3,0
	l.bnf	.L7608	# delay slot filled
	l.sfnei	r3,0
.L7588:
	l.ori   	r28,r24,0	 # move reg to reg
	l.ori   	r22,r24,0	 # move reg to reg
.L7594:
	l.lwz   	r11,32(r16)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jalr  	r11	# delay slot filled
	l.addi  	r6,r1,20
	l.sfnei	r11,0
	l.bf	.L7580	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,20(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L7568	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
.L7572:
	l.lbs   	r8,0(r22)	 # extendqisi2_no_sext_mem
.L7610:
	l.sfnei	r8,0
	l.bnf	.L7570	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.addi  	r7,r7,1
.L7618:
	l.lbs   	r8,0(r7)	 # extendqisi2_no_sext_mem
	l.sfnei	r8,0
	l.bf	.L7618	# delay slot filled
	l.addi  	r7,r7,1
	l.addi  	r7,r7,-1
.L7570:
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r7,r7,r28
	l.ori   	r3,r3,65535
	l.lwz   	r11,4(r1)	 # SI load
	l.and   	r7,r7,r3
	l.addi  	r7,r7,1
	l.add   	r22,r22,r7
	l.sub   	r7,r22,r24
	l.srai  	r8,r7,31
	l.sfgts 	r11,r8
	l.bf	.L7594	# delay slot filled
	l.ori   	r28,r22,0	 # move reg to reg
	l.sfne 	r11,r8
	l.bf	.L7564	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.sfgtu 	r3,r7
	l.bf	.L7594
	l.nop			# nop delay slot
.L7564:
.L7576:
	l.lwz   	r11,28(r16)	 # SI load
.L7612:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.sfeqi	r24,0
	l.bf	.L7581	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7580:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.j     	.L7609	# delay slot filled
	l.lwz   	r3,0(r20)	 # SI load
.L7568:
	l.lwz   	r11,24(r16)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r26,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.addi  	r6,r0,2049	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L7580	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r30,0	 # move reg to reg
	l.jal   	readMasterJournal	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
	l.lwz   	r3,0(r26)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7571	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r11,4(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	0(r26),r5	 # SI store
.L7571:
	l.sfnei	r14,0
	l.bf	.L7580
	l.nop			# nop delay slot
	l.lbs   	r3,0(r30)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L7572	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7580
	l.nop			# nop delay slot
	l.j     	.L7610	# delay slot filled
	l.lbs   	r8,0(r22)	 # extendqisi2_no_sext_mem
.L7599:
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r11,32(r16)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.addi  	r6,r1,24
	l.sfnei	r11,0
	l.bnf	.L7544	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L7611	# delay slot filled
	l.lbz   	r4,11(r2)	 # zero_extendqisi2
.L7606:
	l.sfnei	r11,101
	l.bf	.L7541	# delay slot filled
	l.addi  	r26,r0,0	 # move immediate I
		l.lwz   	r4, 12(r1)
		l.lwz   	r5, 12+4(r1)
		l.sw    	68(r2), r4
		l.sw    	68+4(r2), r5
	l.j     	.L7619	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L7585:
	l.j     	.L7563	# delay slot filled
	l.addi  	r14,r0,7	 # move immediate I
.L7607:
	l.sfnei	r4,0
	l.bf	.L7584	# delay slot filled
	l.sfnei	r3,0
	l.bf	.L7587
	l.nop			# nop delay slot
.L7584:
	l.j     	.L7564	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
.L7608:
	l.bf	.L7564	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L7588
	l.nop			# nop delay slot
	l.j     	.L7612	# delay slot filled
	l.lwz   	r11,28(r16)	 # SI load
.LFE295:
	.size	pager_playback, .-pager_playback
	.align	4
.proc	sqlite3PagerRollback
	.type	sqlite3PagerRollback, @function
sqlite3PagerRollback:
.LFB334:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2967:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2968:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2969:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r4,15(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
.LCFI2970:
	l.bf	.L7621	# delay slot filled
	l.addi  	r1,r1,-12
	l.lwz   	r4,60(r3)	 # SI load
	l.lwz   	r4,0(r4)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L7621
	l.nop			# nop delay slot
	l.lwz   	r11,36(r3)	 # SI load
	l.xori  	r4,r11,13
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bnf	.L7630	# delay slot filled
	l.sub   	r4,r0,r11
.L7623:
	l.lbz   	r3,14(r2)	 # zero_extendqisi2
	l.sfnei	r3,2
	l.bnf	.L7631	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pager_playback	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r14,r11,0	 # move reg to reg
.L7627:
	l.lbz   	r3,13(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7628
	l.nop			# nop delay slot
	l.sb    	21(r2),r3	    # movqi
.L7628:
	l.addi	r1,r1,12
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	pager_error	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L7630:
	l.or    	r4,r4,r11
	l.sfgesi	r4,0
	l.bf	.L7623
	l.nop			# nop delay slot
	l.lbz   	r4,14(r3)	 # zero_extendqisi2
	l.sfleui	r4,3
	l.bf	.L7625
	l.nop			# nop delay slot
	l.jal   	pager_playback	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r11,36(r2)	 # SI load
.L7625:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7621:
	l.lbz   	r4,19(r2)	 # zero_extendqisi2
	l.addi	r1,r1,12
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	pager_end_transaction	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L7631:
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	pager_playback	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r4,19(r2)	 # zero_extendqisi2
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pager_end_transaction	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bnf	.L7627
	l.nop			# nop delay slot
	l.j     	.L7627	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.LFE334:
	.size	sqlite3PagerRollback, .-sqlite3PagerRollback
	.align	4
.proc	pagerUnlockAndRollback
	.type	pagerUnlockAndRollback, @function
pagerUnlockAndRollback:
.LFB288:
	l.sw    	-12(r1),r2	 # SI store
.LCFI2971:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2972:
	l.sw    	-8(r1),r14	 # SI store
.LCFI2973:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,36(r3)	 # SI load
	l.sfnei	r3,0
.LCFI2974:
	l.bf	.L7633	# delay slot filled
	l.addi  	r1,r1,-12
	l.lbz   	r3,14(r2)	 # zero_extendqisi2
	l.sfleui	r3,1
	l.bf	.L7633	# delay slot filled
	l.movhi  	r14,hi(sqlite3Hooks)
	l.ori   	r14,r14,lo(sqlite3Hooks)
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7634
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
.L7634:
	l.jal   	sqlite3PagerRollback	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,4(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7633
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
.L7633:
	l.addi	r1,r1,12
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	pager_unlock	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.LFE288:
	.size	pagerUnlockAndRollback, .-pagerUnlockAndRollback
	.align	4
.proc	pagerUnlockIfUnused
	.type	pagerUnlockIfUnused, @function
pagerUnlockIfUnused:
.LFB319:
	l.lwz   	r4,160(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI2975:
	l.lwz   	r4,12(r4)	 # SI load
	l.sfnei	r4,0
.LCFI2976:
	l.bf	.L7635	# delay slot filled
	l.addi  	r1,r1,-4
	l.lbz   	r4,4(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L7637
	l.nop			# nop delay slot
	l.lwz   	r4,68(r3)	 # SI load
	l.sfgtsi	r4,0
	l.bnf	.L7639	# delay slot filled
	l.sfnei	r4,0
.L7637:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	pagerUnlockAndRollback
	l.nop			# nop delay slot	# sibcall s
.L7639:
	l.bf	.L7635
	l.nop			# nop delay slot
	l.lwz   	r4,72(r3)	 # SI load
	l.sfnei	r4,0
	l.bf	.L7637
	l.nop			# nop delay slot
.L7635:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE319:
	.size	pagerUnlockIfUnused, .-pagerUnlockIfUnused
	.align	4
.proc	sqlite3PagerUnref
	.type	sqlite3PagerUnref, @function
sqlite3PagerUnref:
.LFB323:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2977:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2978:
	l.sfeqi	r3,0
.LCFI2979:
	l.bf	.L7640	# delay slot filled
	l.addi  	r1,r1,-8
	l.jal   	sqlite3PcacheRelease	# delay slot filled
	l.lwz   	r2,16(r3)	 # SI load
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	pagerUnlockIfUnused	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L7640:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE323:
	.size	sqlite3PagerUnref, .-sqlite3PagerUnref
	.align	4
.proc	releasePage
	.type	releasePage, @function
releasePage:
.LFB389:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2980:
	l.sfeqi	r3,0
.LCFI2981:
	l.bf	.L7642	# delay slot filled
	l.addi  	r1,r1,-4
	l.lwz   	r3,68(r3)	 # SI load
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3PagerUnref
	l.nop			# nop delay slot	# sibcall s
.L7642:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE389:
	.size	releasePage, .-releasePage
	.align	4
.proc	sqlite3BtreeTripAllCursors.clone.157
	.type	sqlite3BtreeTripAllCursors.clone.157, @function
sqlite3BtreeTripAllCursors.clone.157:
.LFB1405:
	l.sw    	-12(r1),r16	 # SI store
.LCFI2982:
	l.sw    	-8(r1),r18	 # SI store
.LCFI2983:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2984:
	l.sw    	-20(r1),r2	 # SI store
.LCFI2985:
	l.sw    	-16(r1),r14	 # SI store
.LCFI2986:
	l.lwz   	r16,8(r4)	 # SI load
	l.sw    	4(r4),r3	 # SI store
	l.addi  	r1,r1,-20
.LCFI2987:
	l.sfeqi	r16,0
	l.bf	.L7644	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
.L7649:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,64(r16)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,3	 # movqi: move immediate
	l.lhs   	r2,88(r16)	 # extendhisi2_no_sext_mem
	l.sw    	64(r16),r3	 # SI store
	l.sb    	63(r16),r4	    # movqi
	l.sflts 	r2,r3
	l.bf	.L7646	# delay slot filled
	l.sw    	76(r16),r18	 # SI store
	l.addi  	r2,r16,92
	l.ori   	r14,r3,0	 # move reg to reg
.L7647:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r4,r0,0	 # move immediate I
	l.lhs   	r3,88(r16)	 # extendhisi2_no_sext_mem
	l.sw    	0(r2),r4	 # SI store
	l.sfles 	r14,r3
	l.bf	.L7647	# delay slot filled
	l.addi  	r2,r2,4
.L7646:
	l.lwz   	r16,8(r16)	 # SI load
	l.sfnei	r16,0
	l.bf	.L7649
	l.nop			# nop delay slot
.L7644:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE1405:
	.size	sqlite3BtreeTripAllCursors.clone.157, .-sqlite3BtreeTripAllCursors.clone.157
	.align	4
.proc	invalidateCursorsOnModifiedBtrees
	.type	invalidateCursorsOnModifiedBtrees, @function
invalidateCursorsOnModifiedBtrees:
.LFB581:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2988:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2989:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2990:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2991:
	l.ori   	r16,r3,0	 # move reg to reg
	l.lwz   	r3,4(r3)	 # SI load
	l.sflesi	r3,0
.LCFI2992:
	l.bf	.L7652	# delay slot filled
	l.addi  	r1,r1,-16
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L7655	# delay slot filled
	l.ori   	r14,r2,0	 # move reg to reg
.L7654:
	l.sfgts 	r3,r14
.L7657:
	l.bnf	.L7652
	l.nop			# nop delay slot
.L7655:
	l.lwz   	r4,8(r16)	 # SI load
	l.addi  	r14,r14,1
	l.add   	r4,r4,r2
	l.lwz   	r4,4(r4)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L7654	# delay slot filled
	l.addi  	r2,r2,24
	l.lbz   	r5,8(r4)	 # zero_extendqisi2
	l.sfnei	r5,2
	l.bf	.L7657	# delay slot filled
	l.sfgts 	r3,r14
	l.lwz   	r3,0(r4)	 # SI load
	l.addi  	r5,r0,4	 # move immediate I
	l.jal   	sqlite3BtreeTripAllCursors.clone.157	# delay slot filled
	l.lwz   	r4,4(r4)	 # SI load
	l.lwz   	r3,4(r16)	 # SI load
	l.sfgts 	r3,r14
	l.bf	.L7655
	l.nop			# nop delay slot
.L7652:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE581:
	.size	invalidateCursorsOnModifiedBtrees, .-invalidateCursorsOnModifiedBtrees
	.align	4
.proc	unlockBtreeIfUnused
	.type	unlockBtreeIfUnused, @function
unlockBtreeIfUnused:
.LFB408:
	l.sw    	-8(r1),r2	 # SI store
.LCFI2993:
	l.sw    	-4(r1),r9	 # SI store
.LCFI2994:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,32(r3)	 # zero_extendqisi2
	l.sfnei	r3,0
.LCFI2995:
	l.bf	.L7658	# delay slot filled
	l.addi  	r1,r1,-8
	l.lwz   	r3,8(r2)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L7661
	l.nop			# nop delay slot
.L7658:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L7661:
	l.lwz   	r3,12(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7658
	l.nop			# nop delay slot
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r4,160(r4)	 # SI load
	l.lwz   	r4,12(r4)	 # SI load
	l.sflesi	r4,0
	l.bf	.L7660
	l.nop			# nop delay slot
	l.jal   	releasePage
	l.nop			# nop delay slot
.L7660:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	12(r2),r3	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE408:
	.size	unlockBtreeIfUnused, .-unlockBtreeIfUnused
	.align	4
.proc	sqlite3BtreeCommitPhaseTwo
	.type	sqlite3BtreeCommitPhaseTwo, @function
sqlite3BtreeCommitPhaseTwo:
.LFB418:
	l.sw    	-16(r1),r2	 # SI store
.LCFI2996:
	l.sw    	-12(r1),r14	 # SI store
.LCFI2997:
	l.lwz   	r2,4(r3)	 # SI load
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI2998:
	l.sw    	-8(r1),r16	 # SI store
.LCFI2999:
	l.sw    	4(r2),r3	 # SI store
	l.lbz   	r3,8(r14)	 # zero_extendqisi2
	l.sfnei	r3,2
.LCFI3000:
	l.bnf	.L7670	# delay slot filled
	l.addi  	r1,r1,-16
	l.sfeqi	r3,0
	l.bnf	.L7671
	l.nop			# nop delay slot
.L7668:
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.lwz   	r3,52(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	52(r2),r3	 # SI store
	l.sb    	8(r14),r3	    # movqi
	l.jal   	unlockBtreeIfUnused	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r11,r0,0	 # move immediate I
.L7667:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7670:
	l.lwz   	r16,0(r2)	 # SI load
	l.lwz   	r11,36(r16)	 # SI load
	l.sfnei	r11,0
	l.bf	.L7667
	l.nop			# nop delay slot
	l.lbz   	r3,14(r16)	 # zero_extendqisi2
	l.addi  	r11,r0,1	 # move immediate I
	l.sfleu 	r3,r11
	l.bf	.L7667
	l.nop			# nop delay slot
	l.lbz   	r3,15(r16)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7665
	l.nop			# nop delay slot
	l.lbz   	r3,4(r16)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L7672
	l.nop			# nop delay slot
.L7665:
	l.lbz   	r4,19(r16)	 # zero_extendqisi2
	l.jal   	pager_end_transaction	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	pager_error	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7667
	l.nop			# nop delay slot
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	32(r2),r3	    # movqi
.L7674:
	l.lbz   	r3,8(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L7668
	l.nop			# nop delay slot
.L7671:
	l.jal   	clearAllSharedCacheTableLocks	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r3,36(r2)	 # SI load
	l.addi  	r3,r3,-1
	l.sfnei	r3,0
	l.bf	.L7668	# delay slot filled
	l.sw    	36(r2),r3	 # SI store
	l.j     	.L7668	# delay slot filled
	l.sb    	32(r2),r3	    # movqi
.L7672:
	l.lbz   	r3,5(r16)	 # zero_extendqisi2
	l.sfeq 	r3,r11
	l.bnf	.L7665	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.j     	.L7674	# delay slot filled
	l.sb    	32(r2),r3	    # movqi
.LFE418:
	.size	sqlite3BtreeCommitPhaseTwo, .-sqlite3BtreeCommitPhaseTwo
	.align	4
.proc	sqlite3BtreeCloseCursor
	.type	sqlite3BtreeCloseCursor, @function
sqlite3BtreeCloseCursor:
.LFB429:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3001:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3002:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3003:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3004:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3005:
	l.lwz   	r2,0(r3)	 # SI load
	l.addi  	r1,r1,-20
.LCFI3006:
	l.sfeqi	r2,0
	l.bf	.L7676	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.lwz   	r4,4(r2)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.lwz   	r18,4(r3)	 # SI load
	l.lwz   	r3,64(r3)	 # SI load
	l.jal   	sqlite3_free	# delay slot filled
	l.sw    	4(r4),r2	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r2,12(r16)	 # SI load
	l.sw    	64(r16),r3	 # SI store
	l.sfeqi	r2,0
	l.bf	.L7677	# delay slot filled
	l.sb    	63(r16),r3	    # movqi
	l.lwz   	r3,8(r16)	 # SI load
	l.sw    	8(r2),r3	 # SI store
	l.lwz   	r4,8(r16)	 # SI load
.L7678:
	l.sfeqi	r4,0
	l.bf	.L7679
	l.nop			# nop delay slot
	l.sw    	12(r4),r2	 # SI store
.L7679:
	l.lhs   	r2,88(r16)	 # extendhisi2_no_sext_mem
	l.sfltsi	r2,0
	l.bf	.L7680	# delay slot filled
	l.addi  	r14,r16,92
	l.addi  	r2,r0,0	 # move immediate I
.L7681:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r2,r2,1
	l.lhs   	r4,88(r16)	 # extendhisi2_no_sext_mem
	l.sfges 	r4,r2
	l.bf	.L7681	# delay slot filled
	l.addi  	r14,r14,4
.L7680:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	unlockBtreeIfUnused	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,84(r16)	 # SI load
	l.sw    	84(r16),r2	 # SI store
.L7676:
	l.addi	r1,r1,20
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L7677:
	l.lwz   	r4,8(r16)	 # SI load
	l.j     	.L7678	# delay slot filled
	l.sw    	8(r18),r4	 # SI store
.LFE429:
	.size	sqlite3BtreeCloseCursor, .-sqlite3BtreeCloseCursor
	.align	4
.proc	sqlite3PagerAcquire
	.type	sqlite3PagerAcquire, @function
sqlite3PagerAcquire:
.LFB321:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3007:
	l.sw    	-32(r1),r14	 # SI store
.LCFI3008:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3009:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3010:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3011:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI3012:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3013:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3014:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3015:
	l.addi  	r1,r1,-76
.LCFI3016:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sw    	36(r1),r2	 # SI store
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r22,r6,0	 # move reg to reg
	l.sflesi	r4,0
	l.bf	.L7684	# delay slot filled
	l.addi  	r14,r0,11	 # move immediate I
	l.lwz   	r4,120(r3)	 # SI load
	l.movhi  	r3,hi(sqlite3PendingByte)
	l.ori   	r3,r3,lo(sqlite3PendingByte)
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r11,r11,1
	l.sfeq 	r11,r16
	l.bf	.L7684	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r20),r3	 # SI store
	l.ori   	r18,r3,0	 # move reg to reg
	l.lbz   	r3,13(r2)	 # zero_extendqisi2
	l.sfne 	r3,r18
	l.bf	.L7685
	l.nop			# nop delay slot
	l.lbz   	r18,4(r2)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bf	.L7685
	l.nop			# nop delay slot
	l.lwz   	r4,160(r2)	 # SI load
	l.lwz   	r4,12(r4)	 # SI load
	l.sfnei	r4,0
	l.bf	.L7685	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
	l.lwz   	r5,36(r2)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L7686
	l.nop			# nop delay slot
	l.lwz   	r5,60(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,0(r5)	 # SI load
	l.sw    	36(r2),r4	 # SI store
	l.sub   	r18,r0,r5
	l.or    	r5,r5,r18
	l.jal   	pager_reset	# delay slot filled
	l.srli  	r18,r5,31
.L7685:
	l.lwz   	r14,36(r2)	 # SI load
	l.xori  	r3,r14,13
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bnf	.L7747	# delay slot filled
	l.sub   	r3,r0,r14
	l.andi  	r3,r18,0xff	 # zero_extendqisi2
.L7686:
	l.lbz   	r4,14(r2)	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.sfnei	r3,0
	l.bf	.L7742	# delay slot filled
	l.srli  	r4,r4,31
	l.sfeqi	r4,0
	l.bf	.L7743
	l.nop			# nop delay slot
.L7742:
	l.lbz   	r5,7(r2)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bnf	.L7748	# delay slot filled
	l.lwz   	r24,0(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L7765	# delay slot filled
	l.sfnei	r18,0
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sb    	14(r2),r5	    # movqi
.L7765:
	l.bnf	.L7749	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
.L7694:
	l.lbz   	r3,14(r2)	 # zero_extendqisi2
	l.sfgtui	r3,3
	l.bnf	.L7750
	l.nop			# nop delay slot
.L7703:
	l.lwz   	r3,60(r2)	 # SI load
	l.lwz   	r18,0(r3)	 # SI load
	l.sfnei	r18,0
	l.bnf	.L7751	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r5,r0,0	 # movqi: move immediate
.L7767:
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	17(r2),r5	    # movqi
	l.sb    	19(r2),r5	    # movqi
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
		l.sw    	68(r2), r5
		l.sw    	68+4(r2), r6
		l.sw    	76(r2), r5
		l.sw    	76+4(r2), r6
	l.jal   	pager_playback	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L7766	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L7708:
	l.lwz   	r3,160(r2)	 # SI load
.L7762:
	l.lwz   	r4,40(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L7731
	l.nop			# nop delay slot
	l.ori   	r3,r4,0	 # move reg to reg
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r11,112(r4)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L7743
	l.nop			# nop delay slot
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r14,36(r2)	 # SI load
	l.sfnei	r14,0
	l.bf	.L7729
	l.nop			# nop delay slot
	l.lwz   	r3,24(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7711	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r11,8(r4)	 # SI load
	l.addi  	r7,r0,24	 # move immediate I
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7729	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7712:
	l.addi  	r3,r2,92
	l.ori   	r4,r1,0	 # move reg to reg
	l.jal   	memcmp	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L7743
	l.nop			# nop delay slot
	l.jal   	pager_reset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,160(r2)	 # SI load
.L7731:
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3PcacheFetch	# delay slot filled
	l.addi  	r6,r1,36
	l.sfnei	r11,0
	l.bf	.L7684	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,36(r1)	 # SI load
	l.lwz   	r4,16(r3)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L7752	# delay slot filled
	l.addi  	r4,r1,32
	l.sw    	0(r20),r3	 # SI store
.L7684:
	l.addi	r1,r1,76
.L7761:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L7747:
	l.or    	r3,r3,r14
	l.sfltsi	r3,0
	l.bnf	.L7686	# delay slot filled
	l.andi  	r3,r18,0xff	 # zero_extendqisi2
	l.j     	.L7761	# delay slot filled
	l.addi	r1,r1,76
.L7748:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pager_wait_on_lock	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L7765	# delay slot filled
	l.sfnei	r18,0
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pager_error	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7684	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7743:
	l.j     	.L7731	# delay slot filled
	l.lwz   	r3,160(r2)	 # SI load
.L7752:
	l.sw    	16(r3),r2	 # SI store
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L7753	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.sfgts 	r16,r3
	l.bf	.L7717	# delay slot filled
	l.sub   	r3,r0,r22
	l.or    	r3,r3,r22
	l.sfltsi	r3,0
	l.bf	.L7717
	l.nop			# nop delay slot
	l.lbz   	r3,13(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L7717
	l.nop			# nop delay slot
	l.lwz   	r16,36(r1)	 # SI load
	l.lwz   	r2,16(r16)	 # SI load
	l.lwz   	r26,56(r2)	 # SI load
	l.lwz   	r24,0(r26)	 # SI load
	l.sfnei	r24,0
	l.bnf	.L7754	# delay slot filled
	l.lwz   	r22,12(r16)	 # SI load
	l.lwz   	r18,120(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.srai  	r5,r18,31
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	__muldi3	# delay slot filled
	l.addi  	r4,r22,-1
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r8,8(r24)	 # SI load
		l.or    	r6, r11, r0
		l.or    	r7, r12, r0
	l.jalr  	r8	# delay slot filled
	l.lwz   	r4,0(r16)	 # SI load
	l.sfeqi	r11,522
	l.bf	.L7755	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L7726:
	l.sfnei	r22,1
	l.bnf	.L7756	# delay slot filled
	l.addi  	r3,r2,92
	l.sfnei	r18,0
.L7764:
	l.bf	.L7728	# delay slot filled
	l.lwz   	r2,36(r1)	 # SI load
	l.lwz   	r3,36(r1)	 # SI load
.L7760:
.L7768:
	l.j     	.L7684	# delay slot filled
	l.sw    	0(r20),r3	 # SI store
.L7728:
	l.ori   	r14,r18,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3PcacheDrop	# delay slot filled
	l.lwz   	r16,16(r2)	 # SI load
	l.jal   	pagerUnlockIfUnused	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.j     	.L7761	# delay slot filled
	l.addi	r1,r1,76
.L7751:
	l.lwz   	r11,32(r24)	 # SI load
	l.lwz   	r4,132(r2)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.addi  	r6,r1,32
	l.sfnei	r11,0
	l.bf	.L7729	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7729	# delay slot filled
	l.addi  	r14,r0,5	 # move immediate I
	l.sw    	28(r1),r18	 # SI store
	l.lwz   	r11,24(r24)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r4,132(r2)	 # SI load
	l.lwz   	r5,60(r2)	 # SI load
	l.addi  	r6,r0,2050	 # move immediate I
	l.jalr  	r11	# delay slot filled
	l.addi  	r7,r1,28
	l.sfnei	r11,0
	l.bf	.L7729	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,28(r1)	 # SI load
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L7767	# delay slot filled
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.lwz   	r16,60(r2)	 # SI load
	l.lwz   	r3,0(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7729	# delay slot filled
	l.addi  	r14,r0,14	 # move immediate I
	l.lwz   	r11,4(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	0(r16),r18	 # SI store
.L7729:
	l.jal   	pager_unlock	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L7761	# delay slot filled
	l.addi	r1,r1,76
.L7749:
	l.lwz   	r26,0(r2)	 # SI load
	l.lwz   	r4,132(r2)	 # SI load
	l.lwz   	r11,32(r26)	 # SI load
	l.ori   	r3,r26,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.addi  	r6,r1,28
	l.sfnei	r11,0
	l.bf	.L7729	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,28(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7708
	l.nop			# nop delay slot
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r11,36(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r1,24
	l.sfnei	r11,0
	l.bf	.L7729	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L7708	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.addi  	r4,r1,20
	l.sfnei	r11,0
	l.bf	.L7729	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,20(r1)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L7757	# delay slot filled
	l.addi  	r6,r0,2049	 # move immediate I
	l.lwz   	r11,24(r26)	 # SI load
	l.sw    	16(r1),r6	 # SI store
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r4,132(r2)	 # SI load
	l.lwz   	r5,60(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r7,r1,16
	l.sfnei	r11,0
	l.bf	.L7729	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sb    	32(r1),r18	    # movqi
	l.addi  	r4,r1,32
	l.lwz   	r3,60(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r3)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r11,8(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.sfeqi	r11,522
	l.bf	.L7699
	l.nop			# nop delay slot
	l.ori   	r14,r11,0	 # move reg to reg
.L7699:
	l.lwz   	r18,60(r2)	 # SI load
	l.lwz   	r3,0(r18)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7700
	l.nop			# nop delay slot
	l.lwz   	r11,4(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	0(r18),r6	 # SI store
.L7700:
	l.lbz   	r18,32(r1)	 # zero_extendqisi2
	l.sub   	r18,r0,r18
	l.srli  	r18,r18,31
.L7698:
	l.sfnei	r14,0
	l.bf	.L7729	# delay slot filled
	l.sfnei	r18,0
	l.bf	.L7694
	l.nop			# nop delay slot
	l.j     	.L7762	# delay slot filled
	l.lwz   	r3,160(r2)	 # SI load
.L7750:
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r11,28(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r0,4	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L7745	# delay slot filled
	l.addi  	r3,r0,4	 # movqi: move immediate
	l.j     	.L7703	# delay slot filled
	l.sb    	14(r2),r3	    # movqi
.L7745:
.L7705:
	l.ori   	r3,r2,0	 # move reg to reg
.L7766:
	l.jal   	pager_error	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L7729	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L7731	# delay slot filled
	l.lwz   	r3,160(r2)	 # SI load
.L7711:
	l.sw    	0(r1),r3	 # SI store
	l.sw    	4(r1),r3	 # SI store
	l.sw    	8(r1),r3	 # SI store
	l.j     	.L7712	# delay slot filled
	l.sw    	12(r1),r3	 # SI store
.L7717:
	l.lwz   	r3,124(r2)	 # SI load
	l.sfleu 	r16,r3
	l.bnf	.L7758	# delay slot filled
	l.sfeqi	r22,0
	l.bf	.L7721	# delay slot filled
	l.movhi  	r18,hi(sqlite3Hooks)
	l.ori   	r18,r18,lo(sqlite3Hooks)
	l.lwz   	r3,0(r18)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7722
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
.L7722:
	l.lwz   	r3,28(r2)	 # SI load
	l.sfgtu 	r16,r3
	l.bnf	.L7759
	l.nop			# nop delay slot
	l.addi  	r3,r2,84
.L7763:
	l.addi  	r4,r2,88
	l.jal   	addToSavepointBitvecs.clone.105	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r2,4(r18)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L7768	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.jalr  	r2
	l.nop			# nop delay slot
	l.lwz   	r3,36(r1)	 # SI load
	l.j     	.L7684	# delay slot filled
	l.sw    	0(r20),r3	 # SI store
.L7758:
	l.lwz   	r3,36(r1)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.addi  	r14,r0,13	 # move immediate I
	l.j     	.L7761	# delay slot filled
	l.addi	r1,r1,76
.L7753:
	l.lwz   	r3,36(r1)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L7761	# delay slot filled
	l.addi	r1,r1,76
.L7721:
	l.lwz   	r3,36(r1)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.jal   	memset	# delay slot filled
	l.lwz   	r5,120(r2)	 # SI load
	l.j     	.L7760	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
.L7757:
	l.lwz   	r11,28(r26)	 # SI load
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r4,132(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.j     	.L7698	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7759:
	l.lwz   	r3,52(r2)	 # SI load
	l.jal   	sqlite3BitvecSet	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L7763	# delay slot filled
	l.addi  	r3,r2,84
.L7755:
	l.j     	.L7726	# delay slot filled
	l.ori   	r18,r14,0	 # move reg to reg
.L7754:
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.lwz   	r5,120(r2)	 # SI load
	l.lwz   	r3,36(r1)	 # SI load
	l.j     	.L7684	# delay slot filled
	l.sw    	0(r20),r3	 # SI store
.L7756:
	l.lwz   	r4,0(r16)	 # SI load
	l.addi  	r4,r4,24
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.j     	.L7764	# delay slot filled
	l.sfnei	r18,0
.LFE321:
	.size	sqlite3PagerAcquire, .-sqlite3PagerAcquire
	.align	4
.proc	ptrmapGet.clone.156
	.type	ptrmapGet.clone.156, @function
ptrmapGet.clone.156:
.LFB1404:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3017:
	l.sw    	-28(r1),r2	 # SI store
.LCFI3018:
	l.sw    	-24(r1),r14	 # SI store
.LCFI3019:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3020:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3021:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3022:
	l.sw    	-8(r1),r22	 # SI store
.LCFI3023:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI3024:
	l.addi  	r4,r0,5	 # move immediate I
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r3,r5,0	 # move reg to reg
	l.ori   	r18,r6,0	 # move reg to reg
	l.ori   	r20,r7,0	 # move reg to reg
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r22,r8,0	 # move reg to reg
	l.andi  	r14,r11,0xffff	 # zero_extendqisi2
	l.addi  	r3,r18,-2
	l.addi  	r14,r14,1
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.mul   	r14,r11,r14
	l.movhi  	r3,hi(sqlite3PendingByte)
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r3,lo(sqlite3PendingByte)
	l.addi  	r14,r14,2
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r3,r11,1
	l.sfne 	r14,r3
	l.bnf	.L7773
	l.nop			# nop delay slot
.L7770:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L7771	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sub   	r14,r18,r14
	l.lwz   	r16,0(r1)	 # SI load
	l.slli  	r18,r14,2
	l.lwz   	r4,0(r16)	 # SI load
	l.sfeqi	r22,0
	l.add   	r14,r18,r14
	l.add   	r3,r4,r14
	l.lbz   	r3,-5(r3)	 # zero_extendqisi2
	l.bf	.L7772	# delay slot filled
	l.sb    	0(r20),r3	    # movqi
	l.addi  	r14,r14,-4
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r4,r14
	l.sw    	0(r22),r11	 # SI store
.L7772:
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lbz   	r3,0(r20)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfleui	r3,4
	l.bnf	.L7774
	l.nop			# nop delay slot
.L7771:
	l.addi	r1,r1,32
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L7774:
	l.j     	.L7771	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
.L7773:
	l.j     	.L7770	# delay slot filled
	l.addi  	r14,r11,2
.LFE1404:
	.size	ptrmapGet.clone.156, .-ptrmapGet.clone.156
	.section	.rodata.str1.1
.LC204:
	.string	"Failed to read ptrmap key=%d"
.LC205:
	.string	"Bad ptr map entry key=%d expected=(%d,%d) got=(%d,%d)"
	.section .text
	.align	4
.proc	checkPtrmap
	.type	checkPtrmap, @function
checkPtrmap:
.LFB484:
	l.sw    	-24(r1),r2	 # SI store
.LCFI3025:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	-20(r1),r14	 # SI store
.LCFI3026:
	l.sw    	-16(r1),r16	 # SI store
.LCFI3027:
	l.sw    	-12(r1),r18	 # SI store
.LCFI3028:
	l.sw    	-8(r1),r20	 # SI store
.LCFI3029:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3030:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-52
.LCFI3031:
	l.lhz   	r4,20(r3)	 # zero_extendqisi2
	l.ori   	r16,r5,0	 # move reg to reg
	l.lhz   	r5,22(r3)	 # zero_extendqisi2
	l.ori   	r20,r6,0	 # move reg to reg
	l.ori   	r18,r7,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.ori   	r6,r14,0	 # move reg to reg
	l.addi  	r7,r1,27
	l.jal   	ptrmapGet.clone.156	# delay slot filled
	l.addi  	r8,r1,20
	l.sfeqi	r11,0
	l.bf	.L7776	# delay slot filled
	l.lbz   	r6,27(r1)	 # zero_extendqisi2
	l.xori  	r3,r11,3082
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bnf	.L7783	# delay slot filled
	l.xori  	r11,r11,7
	l.addi  	r3,r0,1	 # move immediate I
.L7787:
	l.sw    	24(r2),r3	 # SI store
	l.movhi  	r5,hi(.LC204)
.L7785:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC204)
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
	l.addi	r1,r1,52
.L7784:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L7776:
	l.sfeq 	r6,r16
	l.bf	.L7780	# delay slot filled
	l.lwz   	r7,20(r1)	 # SI load
	l.movhi  	r5,hi(.LC205)
.L7786:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC205)
	l.sw    	0(r1),r14	 # SI store
	l.sw    	4(r1),r16	 # SI store
	l.sw    	8(r1),r20	 # SI store
	l.sw    	12(r1),r6	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	16(r1),r7	 # SI store
	l.addi	r1,r1,52
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L7780:
	l.sfeq 	r7,r20
	l.bnf	.L7786	# delay slot filled
	l.movhi  	r5,hi(.LC205)
	l.j     	.L7784	# delay slot filled
	l.addi	r1,r1,52
.L7783:
	l.sub   	r3,r0,r11
	l.or    	r11,r3,r11
	l.sfltsi	r11,0
	l.bnf	.L7787	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.j     	.L7785	# delay slot filled
	l.movhi  	r5,hi(.LC204)
.LFE484:
	.size	checkPtrmap, .-checkPtrmap
	.align	4
.proc	sqlite3BtreeGetPage
	.type	sqlite3BtreeGetPage, @function
sqlite3BtreeGetPage:
.LFB385:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3032:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3033:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3034:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3035:
	l.addi  	r1,r1,-20
.LCFI3036:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7789	# delay slot filled
	l.lwz   	r7,0(r1)	 # SI load
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r4,16(r7)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L7790	# delay slot filled
	l.lwz   	r3,4(r7)	 # SI load
	l.ori   	r6,r3,0	 # move reg to reg
.L7790:
	l.lwz   	r3,0(r7)	 # SI load
	l.sw    	60(r6),r2	 # SI store
	l.sw    	68(r6),r7	 # SI store
	l.sw    	64(r6),r3	 # SI store
	l.sw    	72(r6),r14	 # SI store
	l.sfnei	r14,1
	l.bnf	.L7794	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L7791:
	l.sb    	5(r6),r2	    # movqi
	l.sw    	0(r16),r6	 # SI store
.L7789:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7794:
	l.j     	.L7791	# delay slot filled
	l.addi  	r2,r0,100	 # move immediate I
.LFE385:
	.size	sqlite3BtreeGetPage, .-sqlite3BtreeGetPage
	.align	4
.proc	getAndInitPage
	.type	getAndInitPage, @function
getAndInitPage:
.LFB388:
	l.sw    	-24(r1),r2	 # SI store
.LCFI3037:
	l.sw    	-16(r1),r16	 # SI store
.LCFI3038:
	l.sw    	-12(r1),r18	 # SI store
.LCFI3039:
	l.sw    	-8(r1),r20	 # SI store
.LCFI3040:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3041:
	l.sw    	-20(r1),r14	 # SI store
.LCFI3042:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI3043:
	l.ori   	r20,r3,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bnf	.L7801	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
.L7796:
	l.addi	r1,r1,24
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L7801:
	l.jal   	btreePageLookup
	l.nop			# nop delay slot
	l.sw    	0(r18),r11	 # SI store
	l.sfnei	r11,0
	l.bnf	.L7802	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L7797:
	l.lbz   	r16,0(r14)	 # zero_extendqisi2
	l.addi  	r2,r0,0	 # move immediate I
	l.sfne 	r16,r2
	l.bf	.L7796
	l.nop			# nop delay slot
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L7796	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L7796	# delay slot filled
	l.sw    	0(r18),r16	 # SI store
.L7802:
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.lwz   	r3,0(r20)	 # SI load
	l.sfgtu 	r16,r11
	l.bf	.L7796	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7796	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L7797	# delay slot filled
	l.lwz   	r14,0(r18)	 # SI load
.LFE388:
	.size	getAndInitPage, .-getAndInitPage
	.align	4
.proc	moveToChild
	.type	moveToChild, @function
moveToChild:
.LFB442:
	l.sw    	-8(r1),r14	 # SI store
.LCFI3044:
	l.lhs   	r14,88(r3)	 # extendhisi2_no_sext_mem
	l.sw    	-12(r1),r2	 # SI store
.LCFI3045:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3046:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI3047:
	l.addi  	r11,r0,11	 # move immediate I
	l.sfgtsi	r14,18
	l.bnf	.L7806	# delay slot filled
	l.lwz   	r3,4(r3)	 # SI load
.L7804:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7806:
	l.jal   	getAndInitPage	# delay slot filled
	l.ori   	r5,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7804
	l.nop			# nop delay slot
	l.addi  	r3,r14,87
	l.addi  	r14,r14,24
	l.add   	r3,r3,r3
	l.lhz   	r5,88(r2)	 # zero_extendqisi2
	l.add   	r4,r2,r3
	l.slli  	r14,r14,2
	l.lwz   	r3,0(r1)	 # SI load
	l.sb    	62(r2),r11	    # movqi
	l.sh    	0(r4),r11	 # movhi
	l.add   	r14,r2,r14
	l.addi  	r5,r5,1
	l.lhz   	r4,16(r3)	 # zero_extendqisi2
	l.sw    	0(r14),r3	 # SI store
	l.sh    	88(r2),r5	 # movhi
	l.sfnei	r4,0
	l.bf	.L7804	# delay slot filled
	l.sh    	58(r2),r11	 # movhi
	l.addi	r1,r1,16
	l.addi  	r11,r0,11	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE442:
	.size	moveToChild, .-moveToChild
	.align	4
.proc	moveToRightmost
	.type	moveToRightmost, @function
moveToRightmost:
.LFB446:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3048:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3049:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3050:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3051:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI3052:
.L7808:
	l.lhs   	r16,88(r14)	 # extendhisi2_no_sext_mem
	l.addi  	r2,r16,23
	l.slli  	r2,r2,2
	l.add   	r2,r14,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.lbz   	r3,3(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L7813	# delay slot filled
	l.addi  	r3,r0,0	 # movhi: move immediate
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.lwz   	r4,64(r2)	 # SI load
	l.addi  	r3,r3,8
	l.addi  	r16,r16,86
	l.add   	r3,r4,r3
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r16,r16,r16
	l.lhz   	r2,16(r2)	 # zero_extendqisi2
	l.add   	r16,r14,r16
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	moveToChild	# delay slot filled
	l.sh    	0(r16),r2	 # movhi
	l.sfnei	r11,0
	l.bnf	.L7808
	l.nop			# nop delay slot
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7813:
	l.addi  	r16,r16,86
	l.lhz   	r2,16(r2)	 # zero_extendqisi2
	l.add   	r16,r16,r16
	l.addi  	r2,r2,-1
	l.add   	r16,r14,r16
	l.sh    	0(r16),r2	 # movhi
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sh    	58(r14),r3	 # movhi
	l.sb    	62(r14),r2	    # movqi
	l.addi	r1,r1,16
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE446:
	.size	moveToRightmost, .-moveToRightmost
	.align	4
.proc	moveToLeftmost
	.type	moveToLeftmost, @function
moveToLeftmost:
.LFB445:
	l.sw    	-8(r1),r2	 # SI store
.LCFI3053:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3054:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-8
.LCFI3055:
.L7815:
	l.lhs   	r4,88(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r3,r4,86
	l.addi  	r4,r4,23
	l.add   	r3,r3,r3
	l.slli  	r4,r4,2
	l.add   	r4,r2,r4
	l.lwz   	r4,0(r4)	 # SI load
	l.lbz   	r5,3(r4)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bnf	.L7818	# delay slot filled
	l.add   	r3,r2,r3
	l.lhz   	r3,0(r3)	 # zero_extendqisi2
	l.lhz   	r6,12(r4)	 # zero_extendqisi2
	l.add   	r3,r3,r3
	l.lwz   	r5,64(r4)	 # SI load
	l.add   	r3,r3,r6
	l.lhz   	r6,18(r4)	 # zero_extendqisi2
	l.add   	r4,r5,r3
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.lbz   	r4,1(r4)	 # zero_extendqisi2
	l.slli  	r3,r3,8
	l.or    	r3,r4,r3
	l.and   	r3,r3,r6
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r5,r3
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	moveToChild	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L7815
	l.nop			# nop delay slot
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L7818:
	l.addi	r1,r1,8
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE445:
	.size	moveToLeftmost, .-moveToLeftmost
	.align	4
.proc	moveToRoot
	.type	moveToRoot, @function
moveToRoot:
.LFB444:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3056:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3057:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3058:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3059:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r4,63(r3)	 # zero_extendqisi2
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI3060:
	l.sfleui	r4,1
	l.bf	.L7820	# delay slot filled
	l.lwz   	r14,4(r3)	 # SI load
	l.sfnei	r4,3
	l.bnf	.L7828
	l.nop			# nop delay slot
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,64(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sw    	64(r2),r3	 # SI store
	l.sb    	63(r2),r4	    # movqi
.L7820:
	l.lhs   	r4,88(r2)	 # extendhisi2_no_sext_mem
	l.sfltsi	r4,0
	l.bf	.L7823	# delay slot filled
	l.sfeqi	r4,0
	l.bf	.L7830	# delay slot filled
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.addi  	r16,r2,96
	l.addi  	r14,r0,1	 # move immediate I
.L7825:
	l.lwz   	r3,0(r16)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r14,r14,1
	l.lhs   	r3,88(r2)	 # extendhisi2_no_sext_mem
	l.sfges 	r3,r14
	l.bf	.L7825	# delay slot filled
	l.addi  	r16,r16,4
	l.addi  	r4,r0,0	 # movqi: move immediate
.L7830:
	l.lwz   	r3,92(r2)	 # SI load
	l.sb    	61(r2),r4	    # movqi
	l.sb    	62(r2),r4	    # movqi
	l.addi  	r5,r0,0	 # movhi: move immediate
	l.lhz   	r4,16(r3)	 # zero_extendqisi2
	l.sh    	88(r2),r5	 # movhi
	l.sh    	172(r2),r5	 # movhi
	l.sfnei	r4,0
	l.bnf	.L7829	# delay slot filled
	l.sh    	58(r2),r5	 # movhi
	l.sub   	r4,r0,r4
.L7831:
	l.addi  	r11,r0,0	 # move immediate I
	l.srli  	r4,r4,31
	l.sb    	63(r2),r4	    # movqi
.L7822:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7829:
	l.lbz   	r5,3(r3)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L7831	# delay slot filled
	l.sub   	r4,r0,r4
	l.lbz   	r5,5(r3)	 # zero_extendqisi2
	l.lwz   	r4,64(r3)	 # SI load
	l.addi  	r3,r5,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r4,r3
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.ori   	r3,r2,0	 # move reg to reg
	l.sb    	63(r2),r4	    # movqi
	l.addi	r1,r1,16
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	moveToChild	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L7828:
	l.lwz   	r11,76(r2)	 # SI load
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L7823:
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,20(r2)	 # SI load
	l.jal   	getAndInitPage	# delay slot filled
	l.addi  	r5,r2,92
	l.sfeqi	r11,0
	l.bf	.L7830	# delay slot filled
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.j     	.L7822	# delay slot filled
	l.sb    	63(r2),r5	    # movqi
.LFE444:
	.size	moveToRoot, .-moveToRoot
	.align	4
.proc	sqlite3BtreeLast
	.type	sqlite3BtreeLast, @function
sqlite3BtreeLast:
.LFB448:
	l.sw    	-12(r1),r2	 # SI store
.LCFI3061:
	l.sw    	-8(r1),r14	 # SI store
.LCFI3062:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3063:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,63(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-12
.LCFI3064:
	l.sfnei	r3,1
	l.bnf	.L7838	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
.L7833:
	l.jal   	moveToRoot	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7834
	l.nop			# nop delay slot
	l.lbz   	r3,63(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7835	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r2,r0,1	 # move immediate I
	l.sw    	0(r14),r2	 # SI store
.L7834:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7838:
	l.lbz   	r3,61(r2)	 # zero_extendqisi2
	l.addi  	r11,r0,0	 # move immediate I
	l.sfne 	r3,r11
	l.bnf	.L7833
	l.nop			# nop delay slot
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7835:
	l.jal   	moveToRightmost	# delay slot filled
	l.sw    	0(r14),r11	 # SI store
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.xori  	r3,r3,0xffff
	l.srli  	r3,r3,31
	l.sb    	61(r2),r3	    # movqi
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE448:
	.size	sqlite3BtreeLast, .-sqlite3BtreeLast
	.align	4
.proc	getOverflowPage
	.type	getOverflowPage, @function
getOverflowPage:
.LFB434:
	l.sw    	-32(r1),r2	 # SI store
.LCFI3065:
	l.sw    	-20(r1),r18	 # SI store
.LCFI3066:
	l.sw    	-16(r1),r20	 # SI store
.LCFI3067:
	l.sw    	-12(r1),r22	 # SI store
.LCFI3068:
	l.sw    	-8(r1),r24	 # SI store
.LCFI3069:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3070:
	l.sw    	-28(r1),r14	 # SI store
.LCFI3071:
	l.sw    	-24(r1),r16	 # SI store
.LCFI3072:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r1,r1,-44
.LCFI3073:
	l.ori   	r18,r3,0	 # move reg to reg
	l.sw    	4(r1),r2	 # SI store
	l.lbz   	r2,18(r3)	 # zero_extendqisi2
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r22,r5,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L7840	# delay slot filled
	l.ori   	r24,r6,0	 # move reg to reg
	l.lhz   	r3,22(r3)	 # zero_extendqisi2
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r2,r20,1
	l.movhi  	r3,hi(sqlite3PendingByte)
	l.lhz   	r4,20(r18)	 # zero_extendqisi2
	l.ori   	r3,r3,lo(sqlite3PendingByte)
	l.andi  	r11,r11,0xffff	 # zero_extendqisi2
	l.lwz   	r3,0(r3)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r14,r11,1
	l.addi  	r3,r2,-2
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r16,r11,1
	l.mul   	r11,r11,r14
	l.addi  	r7,r11,2
	l.sfne 	r7,r16
	l.bnf	.L7852
	l.nop			# nop delay slot
.L7842:
	l.sfeq 	r2,r7
.L7859:
	l.bf	.L7843	# delay slot filled
	l.sfeq 	r2,r16
	l.bnf	.L7853
	l.nop			# nop delay slot
.L7843:
	l.addi  	r2,r2,1
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r3,r2,-2
	l.mul   	r11,r11,r14
	l.addi  	r7,r11,2
	l.sfne 	r7,r16
	l.bf	.L7859	# delay slot filled
	l.sfeq 	r2,r7
.L7852:
	l.j     	.L7842	# delay slot filled
	l.addi  	r7,r11,3
.L7853:
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.lwz   	r3,0(r18)	 # SI load
	l.sfltu 	r11,r2
	l.bnf	.L7854	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L7840:
	l.ori   	r3,r18,0	 # move reg to reg
.L7860:
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r5,r1,4
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r14,r11,0	 # move reg to reg
	l.sub   	r11,r0,r11
	l.or    	r11,r11,r14
	l.xori  	r11,r11,0xffff
	l.srli  	r11,r11,31
	l.sfeqi	r11,0
	l.bnf	.L7855	# delay slot filled
	l.lwz   	r2,4(r1)	 # SI load
.L7845:
	l.sfeqi	r22,0
.L7857:
	l.bf	.L7846	# delay slot filled
	l.sw    	0(r24),r11	 # SI store
	l.sw    	0(r22),r2	 # SI store
	l.sfnei	r14,101
.L7858:
	l.bnf	.L7856
	l.nop			# nop delay slot
.L7848:
	l.addi	r1,r1,44
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L7855:
	l.addi  	r14,r0,0	 # move immediate I
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.lwz   	r3,64(r2)	 # SI load
	l.j     	.L7857	# delay slot filled
	l.sfeqi	r22,0
.L7854:
	l.lhz   	r4,20(r18)	 # zero_extendqisi2
	l.lhz   	r5,22(r18)	 # zero_extendqisi2
	l.lwz   	r3,0(r18)	 # SI load
	l.addi  	r7,r1,11
	l.jal   	ptrmapGet.clone.156	# delay slot filled
	l.ori   	r8,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7849	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r3,11(r1)	 # zero_extendqisi2
	l.sfnei	r3,4
	l.bf	.L7860	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeq 	r3,r20
	l.bnf	.L7860	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r11,r2,0	 # move reg to reg
	l.addi  	r14,r0,101	 # move immediate I
	l.j     	.L7845	# delay slot filled
	l.lwz   	r2,4(r1)	 # SI load
.L7856:
	l.j     	.L7848	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L7849:
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L7845	# delay slot filled
	l.lwz   	r2,4(r1)	 # SI load
.L7846:
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L7858	# delay slot filled
	l.sfnei	r14,101
.LFE434:
	.size	getOverflowPage, .-getOverflowPage
	.align	4
.proc	sqlite3BtreeGetMeta
	.type	sqlite3BtreeGetMeta, @function
sqlite3BtreeGetMeta:
.LFB477:
	l.sw    	-28(r1),r2	 # SI store
.LCFI3074:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3075:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3076:
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r16,4(r3)	 # SI load
	l.ori   	r20,r4,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.sw    	-24(r1),r14	 # SI store
.LCFI3077:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3078:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3079:
	l.sw    	-8(r1),r22	 # SI store
.LCFI3080:
	l.sw    	4(r16),r2	 # SI store
	l.addi  	r1,r1,-32
.LCFI3081:
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.sw    	0(r1),r2	 # SI store
	l.jal   	querySharedCacheTableLock	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7862	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r6,12(r16)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L7863	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r20,r20,9
	l.lwz   	r3,64(r6)	 # SI load
	l.slli  	r20,r20,2
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r3,r20
	l.sw    	0(r18),r11	 # SI store
.L7864:
	l.lbz   	r3,8(r14)	 # zero_extendqisi2
.L7867:
	l.sfeqi	r3,0
	l.bnf	.L7866	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L7862:
	l.addi	r1,r1,32
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L7866:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	setSharedCacheTableLock	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.j     	.L7862	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L7863:
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7865	# delay slot filled
	l.addi  	r20,r20,9
	l.lwz   	r22,0(r1)	 # SI load
	l.slli  	r20,r20,2
	l.lwz   	r3,0(r22)	 # SI load
	l.lwz   	r16,12(r16)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r3,r20
	l.sfnei	r16,0
	l.bf	.L7864	# delay slot filled
	l.sw    	0(r18),r11	 # SI store
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.j     	.L7867	# delay slot filled
	l.lbz   	r3,8(r14)	 # zero_extendqisi2
.L7865:
	l.j     	.L7862	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.LFE477:
	.size	sqlite3BtreeGetMeta, .-sqlite3BtreeGetMeta
	.section	.rodata.str1.1
.LC206:
	.string	"%d of %d pages missing from overflow list starting at %d"
.LC207:
	.string	"failed to get page %d"
.LC208:
	.string	"freelist leaf count too big on page %d"
	.section .text
	.align	4
.proc	checkList
	.type	checkList, @function
checkList:
.LFB485:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3082:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3083:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3084:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3085:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3086:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3087:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3088:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3089:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3090:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3091:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3092:
	l.addi  	r1,r1,-72
.LCFI3093:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	16(r1),r6	 # SI store
	l.sw    	12(r1),r4	 # SI store
	l.sw    	20(r1),r5	 # SI store
	l.sflesi	r6,0
	l.bf	.L7868	# delay slot filled
	l.ori   	r22,r7,0	 # move reg to reg
	l.lwz   	r3,16(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7868	# delay slot filled
	l.sflesi	r5,0
	l.bf	.L7886	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r14,20(r1)	 # SI load
	l.addi  	r24,r3,-1
	l.addi  	r30,r1,24
	l.ori   	r3,r2,0	 # move reg to reg
.L7895:
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	checkRef	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L7868	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r3,4(r2)	 # SI load
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L7887	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r16,24(r1)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7874	# delay slot filled
	l.lwz   	r28,0(r16)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r3,r28,4
	l.lwz   	r20,0(r2)	 # SI load
	l.lbz   	r3,18(r20)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L7888	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
.L7875:
	l.lhz   	r3,22(r20)	 # zero_extendqisi2
	l.srli  	r3,r3,2
	l.addi  	r3,r3,-1
	l.sfges 	r26,r3
	l.bf	.L7876	# delay slot filled
	l.sfgtsi	r26,0
	l.bnf	.L7878	# delay slot filled
	l.addi  	r16,r28,8
	l.j     	.L7881	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L7880:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	checkRef	# delay slot filled
	l.addi  	r16,r16,4
	l.sfles 	r26,r14
	l.bf	.L7893	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
.L7889:
	l.lwz   	r20,0(r2)	 # SI load
.L7881:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r14,r14,1
	l.lbz   	r7,18(r20)	 # zero_extendqisi2
	l.sfeqi	r7,0
	l.bf	.L7880	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r7,r22,0	 # move reg to reg
	l.addi  	r5,r0,2	 # move immediate I
	l.jal   	checkPtrmap	# delay slot filled
	l.addi  	r16,r16,4
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	checkRef	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.sfles 	r26,r14
	l.bnf	.L7889
	l.nop			# nop delay slot
.L7878:
	l.ori   	r3,r28,0	 # move reg to reg
.L7893:
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.lwz   	r16,24(r1)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.sub   	r24,r24,r26
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sflesi	r24,0
	l.bnf	.L7882
	l.nop			# nop delay slot
.L7868:
	l.addi	r1,r1,72
.L7892:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L7874:
	l.sflesi	r24,0
	l.bnf	.L7890
	l.nop			# nop delay slot
.L7879:
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sflesi	r24,0
	l.bf	.L7868
	l.nop			# nop delay slot
.L7882:
	l.lwz   	r3,16(r2)	 # SI load
.L7891:
	l.sfnei	r3,0
	l.bnf	.L7868	# delay slot filled
	l.sflesi	r14,0
	l.bf	.L7894	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L7895	# delay slot filled
	l.addi  	r24,r24,-1
.L7876:
	l.movhi  	r5,hi(.LC208)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC208)
	l.sw    	0(r1),r14	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.addi  	r24,r24,-1
	l.j     	.L7879	# delay slot filled
	l.lwz   	r16,24(r1)	 # SI load
.L7888:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r5,r0,2	 # move immediate I
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	checkPtrmap	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.j     	.L7875	# delay slot filled
	l.lwz   	r20,0(r2)	 # SI load
.L7890:
	l.lwz   	r3,0(r2)	 # SI load
	l.lbz   	r3,18(r3)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L7879
	l.nop			# nop delay slot
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,4	 # move immediate I
	l.jal   	checkPtrmap	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L7891	# delay slot filled
	l.lwz   	r3,16(r2)	 # SI load
.L7886:
	l.lwz   	r24,16(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
.L7894:
	l.movhi  	r5,hi(.LC206)
	l.lwz   	r2,16(r1)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.sw    	4(r1),r2	 # SI store
	l.ori   	r5,r5,lo(.LC206)
	l.lwz   	r2,20(r1)	 # SI load
	l.sw    	0(r1),r24	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
	l.j     	.L7892	# delay slot filled
	l.addi	r1,r1,72
.L7887:
	l.movhi  	r5,hi(.LC207)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC207)
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
	l.j     	.L7892	# delay slot filled
	l.addi	r1,r1,72
.LFE485:
	.size	checkList, .-checkList
	.section	.rodata.str1.1
.LC209:
	.string	"Page %d: "
.LC210:
	.string	"unable to get the page. error code=%d"
.LC211:
	.string	"sqlite3BtreeInitPage() returns error code %d"
.LC212:
	.string	"On tree page %d cell %d: "
.LC213:
	.string	"Child page depth differs"
.LC214:
	.string	"On page %d at right child: "
.LC215:
	.string	"Corruption detected in header on page %d"
.LC216:
	.string	"Corruption detected in cell %d on page %d"
.LC217:
	.string	"Multiple uses for byte %d of page %d"
.LC218:
	.string	"Fragmented space is %d byte reported as %d on page %d"
	.section .text
	.align	4
.proc	checkTreePage
	.type	checkTreePage, @function
checkTreePage:
.LFB486:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3094:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3095:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3096:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3097:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3098:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3099:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3100:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3101:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3102:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3103:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3104:
	l.addi  	r1,r1,-196
.LCFI3105:
	l.ori   	r22,r5,0	 # move reg to reg
	l.addi  	r16,r1,20
	l.movhi  	r5,hi(.LC209)
	l.ori   	r2,r4,0	 # move reg to reg
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r3,r0,100	 # move immediate I
	l.ori   	r5,r5,lo(.LC209)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r18,0(r14)	 # SI load
	l.ori   	r20,r2,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bnf	.L7952	# delay slot filled
	l.lhz   	r24,22(r18)	 # zero_extendqisi2
.L7897:
	l.addi	r1,r1,196
.L7963:
	l.ori   	r11,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L7952:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	checkRef	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
	l.sfne 	r11,r20
	l.bf	.L7897	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r5,r1,148
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfeq 	r11,r20
	l.bf	.L7898
	l.nop			# nop delay slot
	l.xori  	r2,r11,3082
	l.sub   	r3,r0,r2
	l.or    	r2,r3,r2
	l.sfges 	r2,r20
	l.bnf	.L7953	# delay slot filled
	l.xori  	r2,r11,7
	l.addi  	r2,r0,1	 # move immediate I
.L7971:
	l.sw    	24(r14),r2	 # SI store
	l.movhi  	r5,hi(.LC210)
.L7965:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC210)
	l.sw    	0(r1),r11	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
	l.j     	.L7963	# delay slot filled
	l.addi	r1,r1,196
.L7898:
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.lwz   	r3,148(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L7901	# delay slot filled
	l.lwz   	r6,148(r1)	 # SI load
	l.lhz   	r20,16(r6)	 # zero_extendqisi2
	l.sfeqi	r20,0
	l.bf	.L7902
	l.nop			# nop delay slot
	l.lwz   	r20,16(r14)	 # SI load
	l.sfnei	r20,0
	l.bnf	.L7902	# delay slot filled
	l.addi  	r3,r24,-4
	l.ori   	r20,r11,0	 # move reg to reg
	l.addi  	r30,r1,120
	l.ori   	r22,r11,0	 # move reg to reg
	l.j     	.L7911	# delay slot filled
	l.sw    	16(r1),r3	 # SI store
.L7908:
	l.ori   	r3,r14,0	 # move reg to reg
.L7964:
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	checkTreePage	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.xor   	r20,r11,r20
	l.sub   	r3,r0,r20
	l.or    	r20,r3,r20
	l.sfgesi	r20,0
	l.bnf	.L7954	# delay slot filled
	l.sfgtsi	r22,0
.L7943:
	l.lwz   	r6,148(r1)	 # SI load
	l.ori   	r20,r11,0	 # move reg to reg
.L7907:
	l.lhz   	r3,16(r6)	 # zero_extendqisi2
	l.addi  	r22,r22,1
	l.sfles 	r3,r22
	l.bf	.L7902
	l.nop			# nop delay slot
	l.lwz   	r3,16(r14)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L7902
	l.nop			# nop delay slot
.L7911:
	l.movhi  	r5,hi(.LC212)
	l.addi  	r3,r0,100	 # move immediate I
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC212)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	4(r1),r22	 # SI store
	l.lwz   	r3,148(r1)	 # SI load
	l.add   	r7,r22,r22
	l.lhz   	r8,12(r3)	 # zero_extendqisi2
	l.lwz   	r6,64(r3)	 # SI load
	l.add   	r7,r8,r7
	l.lhz   	r8,18(r3)	 # zero_extendqisi2
	l.add   	r7,r6,r7
	l.ori   	r5,r30,0	 # move reg to reg
	l.lbz   	r26,0(r7)	 # zero_extendqisi2
	l.lbz   	r7,1(r7)	 # zero_extendqisi2
	l.slli  	r26,r26,8
	l.or    	r26,r7,r26
	l.and   	r26,r26,r8
	l.add   	r26,r6,r26
	l.jal   	sqlite3BtreeParseCellPtr	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.lwz   	r6,148(r1)	 # SI load
	l.lbz   	r3,2(r6)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7904	# delay slot filled
	l.lwz   	r7,132(r1)	 # SI load
	l.lwz   	r3,128(r1)	 # SI load
	l.add   	r7,r7,r3
.L7904:
	l.lhz   	r8,142(r1)	 # zero_extendqisi2
	l.sfleu 	r7,r8
	l.bf	.L7905	# delay slot filled
	l.lhz   	r28,144(r1)	 # zero_extendqisi2
	l.lhz   	r3,22(r18)	 # zero_extendqisi2
	l.lwz   	r5,64(r6)	 # SI load
	l.add   	r28,r26,r28
	l.add   	r3,r5,r3
	l.sfgtu 	r28,r3
	l.bf	.L7905	# delay slot filled
	l.sub   	r3,r24,r8
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r3,r3,-5
	l.jal   	__udivsi3	# delay slot filled
	l.add   	r3,r3,r7
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sw    	12(r1),r11	 # SI store
	l.lbz   	r3,18(r18)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L7955	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.lwz   	r6,12(r1)	 # SI load
.L7966:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r28,0	 # move reg to reg
	l.jal   	checkList	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.lwz   	r6,148(r1)	 # SI load
.L7905:
	l.lbz   	r3,3(r6)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7907
	l.nop			# nop delay slot
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.lbz   	r3,18(r18)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L7908	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,5	 # move immediate I
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	checkPtrmap	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.j     	.L7964	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L7954:
	l.bnf	.L7943	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.movhi  	r5,hi(.LC213)
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC213)
	l.jal   	checkAppendMsg	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.j     	.L7907	# delay slot filled
	l.lwz   	r6,148(r1)	 # SI load
.L7953:
	l.sub   	r3,r0,r2
	l.or    	r2,r3,r2
	l.sflts 	r2,r20
	l.bnf	.L7971	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L7965	# delay slot filled
	l.movhi  	r5,hi(.LC210)
.L7902:
	l.lbz   	r22,3(r6)	 # zero_extendqisi2
	l.sfnei	r22,0
	l.bnf	.L7956
	l.nop			# nop delay slot
.L7912:
	l.lhz   	r3,20(r18)	 # zero_extendqisi2
	l.lwz   	r28,64(r6)	 # SI load
	l.jal   	pcache1Alloc	# delay slot filled
	l.lbz   	r22,5(r6)	 # zero_extendqisi2
	l.sfnei	r11,0
	l.bnf	.L7957	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.add   	r30,r28,r22
	l.lbz   	r16,5(r30)	 # zero_extendqisi2
	l.lbz   	r3,6(r30)	 # zero_extendqisi2
	l.slli  	r16,r16,8
	l.or    	r16,r16,r3
	l.sfges 	r24,r16
	l.bf	.L7916	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.movhi  	r5,hi(.LC215)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC215)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	4(r1),r4	 # SI store
.L7917:
	l.jal   	pcache1Free	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L7915:
	l.lwz   	r3,148(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r20,r20,1
	l.j     	.L7963	# delay slot filled
	l.addi	r1,r1,196
.L7955:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,3	 # move immediate I
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	checkPtrmap	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.j     	.L7966	# delay slot filled
	l.lwz   	r6,12(r1)	 # SI load
.L7916:
	l.sub   	r5,r24,r16
	l.add   	r3,r11,r16
	l.jal   	memset	# delay slot filled
	l.addi  	r22,r22,12
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.lbz   	r5,3(r30)	 # zero_extendqisi2
	l.lwz   	r3,148(r1)	 # SI load
	l.lbz   	r4,4(r30)	 # zero_extendqisi2
	l.slli  	r5,r5,8
	l.lbz   	r3,3(r3)	 # zero_extendqisi2
	l.or    	r4,r5,r4
	l.slli  	r3,r3,2
	l.sw    	12(r1),r4	 # SI store
	l.sflesi	r4,0
	l.bf	.L7918	# delay slot filled
	l.sub   	r22,r22,r3
	l.add   	r22,r28,r22
	l.addi  	r26,r0,0	 # move immediate I
.L7925:
	l.lbz   	r16,0(r22)	 # zero_extendqisi2
	l.lbz   	r3,1(r22)	 # zero_extendqisi2
	l.slli  	r16,r16,8
	l.or    	r16,r16,r3
	l.sflts 	r24,r16
	l.bnf	.L7958	# delay slot filled
	l.addi  	r11,r0,1024	 # move immediate I
	l.add   	r11,r11,r16
.L7969:
	l.sfgts 	r11,r24
	l.bf	.L7922	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L7922:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L7959	# delay slot filled
	l.movhi  	r5,hi(.LC216)
	l.addi  	r5,r11,-1
	l.sfgts 	r16,r5
	l.bf	.L7923	# delay slot filled
	l.add   	r4,r18,r5
.L7924:
	l.lbz   	r6,0(r4)	 # zero_extendqisi2
	l.addi  	r6,r6,1
	l.addi  	r5,r5,-1
	l.sb    	0(r4),r6	    # movqi
	l.sfles 	r16,r5
	l.bf	.L7924	# delay slot filled
	l.addi  	r4,r4,-1
.L7923:
	l.addi  	r26,r26,1
.L7968:
	l.lwz   	r4,12(r1)	 # SI load
	l.sfgts 	r4,r26
	l.bf	.L7925	# delay slot filled
	l.addi  	r22,r22,2
.L7918:
	l.lbz   	r6,1(r30)	 # zero_extendqisi2
	l.lbz   	r4,2(r30)	 # zero_extendqisi2
	l.slli  	r6,r6,8
	l.or    	r6,r6,r4
	l.sfgts 	r24,r6
	l.bf	.L7927	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L7927:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L7926	# delay slot filled
	l.sfeqi	r6,0
	l.bf	.L7972	# delay slot filled
	l.sfeqi	r24,0
	l.addi  	r22,r0,10000	 # move immediate I
	l.add   	r16,r28,r6
.L7973:
	l.lbz   	r5,2(r16)	 # zero_extendqisi2
	l.lbz   	r3,3(r16)	 # zero_extendqisi2
	l.slli  	r5,r5,8
	l.or    	r5,r5,r3
	l.add   	r5,r5,r6
	l.sfges 	r24,r5
	l.bnf	.L7960	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r5,-1
	l.sflts 	r5,r6
	l.bf	.L7929	# delay slot filled
	l.add   	r4,r18,r5
.L7930:
	l.lbz   	r7,0(r4)	 # zero_extendqisi2
	l.addi  	r7,r7,1
	l.addi  	r5,r5,-1
	l.sb    	0(r4),r7	    # movqi
	l.sfges 	r5,r6
	l.bf	.L7930	# delay slot filled
	l.addi  	r4,r4,-1
.L7929:
	l.lbz   	r6,0(r16)	 # zero_extendqisi2
.L7967:
	l.lbz   	r4,1(r16)	 # zero_extendqisi2
	l.slli  	r6,r6,8
	l.or    	r6,r4,r6
	l.sfgts 	r24,r6
	l.bf	.L7931	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L7931:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L7926	# delay slot filled
	l.sfeqi	r6,0
	l.bf	.L7972	# delay slot filled
	l.sfeqi	r24,0
	l.addi  	r22,r22,-1
	l.sfnei	r22,0
	l.bf	.L7973	# delay slot filled
	l.add   	r16,r28,r6
.L7926:
	l.sfeqi	r24,0
.L7972:
	l.bf	.L7933	# delay slot filled
	l.ori   	r16,r24,0	 # move reg to reg
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L7936	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
.L7961:
	l.addi  	r16,r16,1
	l.addi  	r6,r6,1
.L7974:
	l.sfgts 	r24,r6
	l.bnf	.L7933
	l.nop			# nop delay slot
.L7936:
	l.add   	r3,r18,r6
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bnf	.L7961	# delay slot filled
	l.sflesi	r3,1
	l.bf	.L7974	# delay slot filled
	l.addi  	r6,r6,1
	l.addi  	r6,r6,-1
	l.movhi  	r5,hi(.LC217)
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r5,lo(.LC217)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
.L7933:
	l.lbz   	r6,7(r30)	 # zero_extendqisi2
	l.sfeq 	r6,r16
	l.bf	.L7917	# delay slot filled
	l.movhi  	r5,hi(.LC218)
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r5,lo(.LC218)
	l.sw    	0(r1),r16	 # SI store
	l.sw    	4(r1),r6	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
	l.j     	.L7917
	l.nop			# nop delay slot
.L7960:
	l.movhi  	r5,hi(.LC216)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC216)
	l.sw    	0(r1),r6	 # SI store
	l.sw    	4(r1),r2	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	8(r1),r4	 # SI store
	l.j     	.L7967	# delay slot filled
	l.lbz   	r6,0(r16)	 # zero_extendqisi2
.L7959:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC216)
	l.sw    	0(r1),r26	 # SI store
	l.sw    	4(r1),r2	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	8(r1),r4	 # SI store
	l.j     	.L7968	# delay slot filled
	l.addi  	r26,r26,1
.L7958:
	l.lwz   	r3,148(r1)	 # SI load
	l.jal   	cellSizePtr	# delay slot filled
	l.add   	r4,r28,r16
	l.j     	.L7969	# delay slot filled
	l.add   	r11,r11,r16
.L7956:
	l.lbz   	r3,5(r6)	 # zero_extendqisi2
	l.lwz   	r4,64(r6)	 # SI load
	l.addi  	r3,r3,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r4,r3
	l.movhi  	r5,hi(.LC214)
	l.addi  	r3,r0,100	 # move immediate I
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC214)
	l.ori   	r26,r11,0	 # move reg to reg
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lbz   	r3,18(r18)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L7962	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L7970:
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	checkTreePage	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.j     	.L7912	# delay slot filled
	l.lwz   	r6,148(r1)	 # SI load
.L7901:
	l.movhi  	r5,hi(.LC211)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC211)
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,148(r1)	 # SI load
	l.j     	.L7963	# delay slot filled
	l.addi	r1,r1,196
.L7957:
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L7915	# delay slot filled
	l.sw    	24(r14),r2	 # SI store
.L7962:
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r5,r0,5	 # move immediate I
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	checkPtrmap	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.j     	.L7970	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.LFE486:
	.size	checkTreePage, .-checkTreePage
	.align	4
.proc	sqlite3PagerClose
	.type	sqlite3PagerClose, @function
sqlite3PagerClose:
.LFB309:
	l.sw    	-8(r1),r14	 # SI store
.LCFI3106:
	l.movhi  	r14,hi(sqlite3Hooks)
	l.sw    	-12(r1),r2	 # SI store
.LCFI3107:
	l.ori   	r14,r14,lo(sqlite3Hooks)
	l.sw    	-4(r1),r9	 # SI store
.LCFI3108:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeqi	r3,0
.LCFI3109:
	l.bf	.L7976	# delay slot filled
	l.addi  	r1,r1,-12
	l.jalr  	r3
	l.nop			# nop delay slot
.L7976:
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sw    	36(r2),r3	 # SI store
	l.sb    	4(r2),r4	    # movqi
	l.jal   	pager_reset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,13(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L7977	# delay slot filled
	l.addi  	r4,r0,-1	 # move immediate I
	l.jal   	pager_unlock	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,4(r14)	 # SI load
.L7982:
	l.sfeqi	r3,0
	l.bf	.L7979
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
.L7979:
	l.lwz   	r14,56(r2)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7980
	l.nop			# nop delay slot
	l.lwz   	r11,4(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	0(r14),r5	 # SI store
.L7980:
	l.jal   	pcache1Free	# delay slot filled
	l.lwz   	r3,148(r2)	 # SI load
	l.lwz   	r3,160(r2)	 # SI load
	l.lwz   	r3,40(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7981	# delay slot filled
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r4,132(r4)	 # SI load
	l.jalr  	r4
	l.nop			# nop delay slot
.L7981:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi	r1,r1,12
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L7977:
	l.addi  	r5,r0,-1	 # move immediate I
		l.sw    	76(r2), r4
		l.sw    	76+4(r2), r5
	l.jal   	pagerUnlockAndRollback	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L7982	# delay slot filled
	l.lwz   	r3,4(r14)	 # SI load
.LFE309:
	.size	sqlite3PagerClose, .-sqlite3PagerClose
	.section	.rodata.str1.1
.LC219:
	.string	":memory:"
	.section .text
	.align	4
.proc	sqlite3BtreeFactory
	.type	sqlite3BtreeFactory, @function
sqlite3BtreeFactory:
.LFB1220:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3110:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3111:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3112:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3113:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3114:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3115:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3116:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3117:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3118:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3119:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3120:
	l.sub   	r26,r0,r5
	l.addi  	r1,r1,-176
.LCFI3121:
	l.lwz   	r2,12(r3)	 # SI load
	l.or    	r26,r26,r5
	l.andi  	r2,r2,4096
	l.sw    	8(r1),r6	 # SI store
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r20,r7,0	 # move reg to reg
	l.ori   	r22,r8,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L7984	# delay slot filled
	l.srli  	r26,r26,31
	l.ori   	r26,r26,2
.L7984:
	l.sfnei	r14,0
	l.bnf	.L8072	# delay slot filled
	l.andi  	r2,r20,256
.L8089:
	l.sfeqi	r2,0
	l.bf	.L8084	# delay slot filled
	l.sfeqi	r14,0
	l.bf	.L8085	# delay slot filled
	l.addi  	r2,r0,-769	 # move immediate I
	l.lbs   	r2,0(r14)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L8086	# delay slot filled
	l.movhi  	r4,hi(.LC219)
	l.addi  	r2,r0,-769	 # move immediate I
.L8085:
	l.and   	r20,r20,r2
	l.ori   	r20,r20,512
	l.sfeqi	r14,0
.L8084:
	l.bf	.L7989	# delay slot filled
	l.movhi  	r4,hi(.LC219)
.L8086:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC219)
	l.jal   	strcmp	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L7989
	l.nop			# nop delay slot
.L7990:
	l.addi  	r3,r0,28	 # move immediate I
	l.lwz   	r24,0(r16)	 # SI load
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.addi  	r18,r0,7	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L8036	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sub   	r28,r0,r14
	l.xori  	r30,r30,1
	l.or    	r28,r14,r28
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.srli  	r28,r28,31
	l.sb    	8(r11),r3	    # movqi
	l.sw    	0(r11),r16	 # SI store
	l.and   	r30,r28,r30
	l.sfeqi	r30,0
	l.bf	.L7992	# delay slot filled
	l.sw    	0(r1),r30	 # SI store
	l.lbs   	r3,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bnf	.L8073	# delay slot filled
	l.movhi  	r3,hi(sqlite3Config)
.L7992:
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.addi  	r3,r0,80	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L8044	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.addi  	r7,r0,32	 # move immediate I
	l.addi  	r6,r0,1024	 # movhi: move immediate
	l.lwz   	r3,4(r24)	 # SI load
	l.sh    	130(r1),r6	 # movhi
	l.sfles 	r3,r7
	l.bf	.L8002	# delay slot filled
	l.sw    	16(r1),r7	 # SI store
	l.addi  	r4,r3,7
	l.addi  	r8,r0,-8	 # move immediate I
	l.and   	r8,r4,r8
	l.sw    	16(r1),r8	 # SI store
.L8002:
	l.addi  	r11,r0,0	 # move immediate I
	l.sfeq 	r28,r11
	l.bf	.L8046	# delay slot filled
	l.sw    	0(r30),r11	 # SI store
	l.lbs   	r18,0(r14)	 # extendqisi2_no_sext_mem
	l.sfeq 	r18,r11
	l.bnf	.L8074
	l.nop			# nop delay slot
	l.sw    	12(r1),r18	 # SI store
	l.sw    	20(r1),r18	 # SI store
.L8003:
	l.lwz   	r8,16(r1)	 # SI load
	l.addi  	r11,r0,-8	 # move immediate I
	l.add   	r4,r8,r8
	l.addi  	r3,r3,7
	l.addi  	r4,r4,226
	l.and   	r3,r3,r11
	l.add   	r4,r4,r18
	l.add   	r4,r4,r18
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.add   	r3,r4,r3
	l.sfnei	r11,0
	l.bnf	.L8075	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
	l.lwz   	r4,4(r24)	 # SI load
	l.lwz   	r13,4(r1)	 # SI load
	l.addi  	r4,r4,7
	l.addi  	r17,r0,-8	 # move immediate I
	l.addi  	r3,r13,216
	l.addi  	r5,r13,168
	l.and   	r4,r4,r17
	l.sw    	160(r13),r5	 # SI store
	l.add   	r4,r3,r4
	l.lwz   	r5,16(r1)	 # SI load
	l.sw    	56(r13),r3	 # SI store
	l.add   	r3,r4,r5
	l.sw    	64(r13),r4	 # SI store
	l.add   	r4,r3,r5
	l.lwz   	r6,12(r1)	 # SI load
	l.sw    	60(r13),r3	 # SI store
	l.sfeqi	r6,0
	l.bf	.L8011	# delay slot filled
	l.sw    	128(r13),r4	 # SI store
	l.addi  	r6,r18,1
	l.ori   	r3,r4,0	 # move reg to reg
	l.add   	r6,r4,r6
	l.ori   	r5,r18,0	 # move reg to reg
	l.sw    	132(r13),r6	 # SI store
	l.jal   	memcpy	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r7,4(r1)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r3,132(r7)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r8,4(r1)	 # SI load
	l.addi  	r11,r0,45	 # movqi: move immediate
	l.lwz   	r4,132(r8)	 # SI load
	l.addi  	r13,r0,106	 # movqi: move immediate
	l.add   	r18,r4,r18
	l.addi  	r17,r0,111	 # movqi: move immediate
	l.addi  	r4,r0,117	 # movqi: move immediate
	l.addi  	r5,r0,114	 # movqi: move immediate
	l.addi  	r6,r0,110	 # movqi: move immediate
	l.addi  	r7,r0,97	 # movqi: move immediate
	l.addi  	r8,r0,108	 # movqi: move immediate
	l.lwz   	r3,12(r1)	 # SI load
	l.sb    	0(r18),r11	    # movqi
	l.sb    	1(r18),r13	    # movqi
	l.sb    	2(r18),r17	    # movqi
	l.sb    	3(r18),r4	    # movqi
	l.sb    	4(r18),r5	    # movqi
	l.sb    	5(r18),r6	    # movqi
	l.sb    	6(r18),r7	    # movqi
	l.jal   	sqlite3_free	# delay slot filled
	l.sb    	7(r18),r8	    # movqi
.L8011:
	l.lwz   	r11,4(r1)	 # SI load
	l.sfeqi	r28,0
	l.sw    	0(r11),r24	 # SI store
	l.bf	.L8012	# delay slot filled
	l.sw    	116(r11),r20	 # SI store
	l.lwz   	r13,20(r1)	 # SI load
	l.sub   	r3,r0,r13
	l.or    	r3,r3,r13
	l.sfltsi	r3,0
	l.bnf	.L8076
	l.nop			# nop delay slot
.L8012:
	l.addi  	r11,r0,4	 # movqi: move immediate
.L8090:
	l.lwz   	r8,4(r1)	 # SI load
	l.addi  	r20,r0,1	 # move immediate I
	l.sb    	14(r8),r11	    # movqi
.L8014:
	l.addi  	r14,r0,0	 # move immediate I
.L8037:
	l.lwz   	r3,4(r1)	 # SI load
	l.jal   	sqlite3PagerSetPagesize	# delay slot filled
	l.addi  	r4,r1,130
	l.sfeqi	r11,0
	l.bnf	.L8016	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r3,20(r1)	 # SI load
	l.lhz   	r15,130(r1)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L8019	# delay slot filled
	l.xori  	r13,r3,1
	l.movhi  	r18,hi(pagerStress)
	l.ori   	r18,r18,lo(pagerStress)
.L8019:
	l.lwz   	r5,4(r1)	 # SI load
	l.addi  	r17,r0,0	 # move immediate I
	l.lwz   	r3,160(r5)	 # SI load
	l.lwz   	r8,20(r1)	 # SI load
	l.sw    	0(r3),r17	 # SI store
	l.sw    	4(r3),r17	 # SI store
	l.sw    	8(r3),r17	 # SI store
	l.sw    	12(r3),r17	 # SI store
	l.sw    	40(r3),r17	 # SI store
	l.sw    	44(r3),r17	 # SI store
	l.sw    	28(r3),r13	 # SI store
	l.lwz   	r13,4(r1)	 # SI load
	l.addi  	r5,r0,80	 # move immediate I
	l.sw    	36(r3),r13	 # SI store
	l.addi  	r13,r0,100	 # move immediate I
	l.sw    	24(r3),r5	 # SI store
	l.sw    	20(r3),r15	 # SI store
	l.sw    	32(r3),r18	 # SI store
	l.sw    	16(r3),r13	 # SI store
	l.andi  	r4,r20,0xff	 # zero_extendqisi2
	l.andi  	r7,r26,1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.srli  	r11,r26,1
	l.lwz   	r17,4(r1)	 # SI load
	l.or    	r6,r4,r7
	l.ori   	r3,r3,65535
	l.xori  	r12,r7,1
	l.and   	r11,r14,r11
	l.andi  	r7,r8,0xff	 # zero_extendqisi2
	l.sw    	124(r17),r3	 # SI store
	l.xori  	r8,r6,1
	l.addi  	r3,r0,2	 # movqi: move immediate
	l.sb    	21(r17),r7	    # movqi
	l.sb    	11(r17),r4	    # movqi
	l.sb    	4(r17),r4	    # movqi
	l.sb    	18(r17),r4	    # movqi
	l.sb    	13(r17),r7	    # movqi
	l.sb    	6(r17),r12	    # movqi
	l.sb    	7(r17),r11	    # movqi
	l.sb    	12(r17),r14	    # movqi
	l.sb    	8(r17),r6	    # movqi
	l.sb    	9(r17),r8	    # movqi
	l.sb    	10(r17),r3	    # movqi
	l.sw    	112(r17),r5	 # SI store
	l.lwz   	r3,4(r1)	 # SI load
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r5,r0,-1	 # move immediate I
		l.sw    	152(r3), r4
		l.sw    	152+4(r3), r5
	l.jal   	setSectorSize
	l.nop			# nop delay slot
	l.lwz   	r7,20(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L8087	# delay slot filled
	l.lwz   	r13,4(r1)	 # SI load
	l.addi  	r11,r0,4	 # movqi: move immediate
	l.lwz   	r8,4(r1)	 # SI load
	l.sb    	5(r8),r11	    # movqi
	l.lwz   	r13,4(r1)	 # SI load
.L8087:
	l.addi  	r14,r1,24
	l.addi  	r5,r0,100	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	0(r30),r13	 # SI store
	l.jal   	memset	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r17,4(r1)	 # SI load
	l.lwz   	r5,56(r17)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L8038	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r11,8(r3)	 # SI load
	l.ori   	r3,r5,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r5,r0,100	 # move immediate I
	l.jalr  	r11	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfeqi	r11,522
	l.bf	.L8038	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L8023
	l.nop			# nop delay slot
.L8038:
	l.movhi  	r3,hi(btreeInvokeBusyHandler)
	l.lwz   	r14,0(r30)	 # SI load
	l.ori   	r3,r3,lo(btreeInvokeBusyHandler)
	l.sw    	4(r30),r16	 # SI store
	l.sw    	136(r14),r3	 # SI store
	l.movhi  	r3,hi(pageReinit)
	l.sw    	140(r14),r30	 # SI store
	l.ori   	r3,r3,lo(pageReinit)
	l.sw    	4(r2),r30	 # SI store
	l.sw    	144(r14),r3	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	8(r30),r3	 # SI store
	l.sw    	12(r30),r3	 # SI store
	l.lbz   	r4,12(r14)	 # zero_extendqisi2
	l.sb    	16(r30),r4	    # movqi
	l.lbz   	r4,40(r1)	 # zero_extendqisi2
	l.lbz   	r3,41(r1)	 # zero_extendqisi2
	l.slli  	r4,r4,8
	l.or    	r3,r4,r3
	l.addi  	r4,r3,-512
	l.andi  	r4,r4,0xffff	 # zero_extendqisi2
	l.sfgtui	r4,32256
	l.bf	.L8024	# delay slot filled
	l.sh    	20(r30),r3	 # movhi
	l.addi  	r4,r3,-1
	l.and   	r3,r4,r3
	l.sfeqi	r3,0
	l.bnf	.L8088	# delay slot filled
	l.addi  	r5,r0,0	 # movhi: move immediate
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.lbz   	r20,44(r1)	 # zero_extendqisi2
	l.addi  	r3,r1,76
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sb    	17(r30),r7	    # movqi
	l.sub   	r4,r0,r11
	l.addi  	r3,r1,88
	l.or    	r11,r4,r11
	l.srli  	r11,r11,31
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sb    	18(r30),r11	    # movqi
	l.sub   	r3,r0,r11
	l.or    	r11,r3,r11
	l.srli  	r11,r11,31
	l.sb    	19(r30),r11	    # movqi
.L8026:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3PagerSetPagesize	# delay slot filled
	l.addi  	r4,r30,20
	l.sfnei	r11,0
	l.bf	.L8023	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lhz   	r3,20(r30)	 # zero_extendqisi2
	l.sub   	r20,r3,r20
	l.sh    	22(r30),r20	 # movhi
	l.lbz   	r3,9(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L8070	# delay slot filled
	l.movhi  	r3,hi(sqlite3SharedCacheList)
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r3,r3,lo(sqlite3SharedCacheList)
	l.sw    	56(r30),r4	 # SI store
	l.lwz   	r5,0(r3)	 # SI load
	l.sw    	0(r3),r30	 # SI store
	l.sw    	60(r30),r5	 # SI store
.L7999:
	l.lbz   	r3,9(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L8070
	l.nop			# nop delay slot
	l.lwz   	r11,4(r16)	 # SI load
	l.sflesi	r11,0
	l.bf	.L8070	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r12,8(r16)	 # SI load
	l.addi  	r12,r12,4
.L8034:
	l.lwz   	r5,0(r12)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L8028	# delay slot filled
	l.addi  	r7,r7,1
	l.lbz   	r3,9(r5)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L8069
	l.nop			# nop delay slot
.L8028:
	l.sflts 	r7,r11
	l.bf	.L8034	# delay slot filled
	l.addi  	r12,r12,24
.L8070:
	l.lwz   	r4,4(r2)	 # SI load
.L8027:
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	0(r22),r2	 # SI store
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3BtreeSchema.clone.104	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L8036
	l.nop			# nop delay slot
	l.lwz   	r2,0(r22)	 # SI load
	l.lwz   	r13,8(r1)	 # SI load
	l.lwz   	r3,4(r2)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	4(r3),r4	 # SI store
	l.lwz   	r2,160(r2)	 # SI load
	l.lwz   	r18,40(r2)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L8036	# delay slot filled
	l.sw    	16(r2),r13	 # SI store
	l.movhi  	r2,hi(sqlite3Config)
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r2,r2,lo(sqlite3Config)
	l.ori   	r4,r13,0	 # move reg to reg
	l.lwz   	r2,108(r2)	 # SI load
	l.jalr  	r2	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L8036:
	l.addi	r1,r1,176
.L8082:
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L7989:
	l.j     	.L7990	# delay slot filled
	l.addi  	r30,r0,0	 # move immediate I
.L8073:
	l.ori   	r3,r3,lo(sqlite3Config)
	l.lwz   	r3,180(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L7992
	l.nop			# nop delay slot
	l.lwz   	r30,8(r24)	 # SI load
	l.addi  	r30,r30,1
	l.jal   	sqlite3Malloc	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.movhi 	r5,hi(524288)	 # move immediate M
	l.sb    	9(r2),r4	    # movqi
	l.sw    	4(r1),r11	 # SI store
	l.lwz   	r3,12(r16)	 # SI load
	l.sfnei	r11,0
	l.or    	r3,r3,r5
	l.bnf	.L8071	# delay slot filled
	l.sw    	12(r16),r3	 # SI store
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r11,36(r24)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r30,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.lwz   	r6,4(r1)	 # SI load
	l.movhi  	r3,hi(sqlite3SharedCacheList)
	l.ori   	r3,r3,lo(sqlite3SharedCacheList)
	l.lwz   	r18,0(r3)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L7994
	l.nop			# nop delay slot
.L8060:
	l.lwz   	r30,0(r18)	 # SI load
	l.lwz   	r3,4(r1)	 # SI load
	l.jal   	strcmp	# delay slot filled
	l.lwz   	r4,128(r30)	 # SI load
	l.sfnei	r11,0
	l.bf	.L7995
	l.nop			# nop delay slot
	l.lwz   	r3,0(r30)	 # SI load
	l.sfne 	r24,r3
	l.bnf	.L8077
	l.nop			# nop delay slot
.L7995:
	l.lwz   	r18,60(r18)	 # SI load
	l.sfnei	r18,0
	l.bf	.L8060
	l.nop			# nop delay slot
.L7994:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.j     	.L7992
	l.nop			# nop delay slot
.L8072:
	l.lbz   	r2,29(r16)	 # zero_extendqisi2
	l.sfeqi	r2,2
	l.bnf	.L8089	# delay slot filled
	l.andi  	r2,r20,256
	l.movhi  	r14,hi(.LC219)
	l.j     	.L8089	# delay slot filled
	l.ori   	r14,r14,lo(.LC219)
.L8054:
	l.ori   	r5,r3,0	 # move reg to reg
.L8069:
	l.lwz   	r3,24(r5)	 # SI load
	l.sfnei	r3,0
	l.bf	.L8054
	l.nop			# nop delay slot
	l.lwz   	r4,4(r2)	 # SI load
	l.lwz   	r6,4(r5)	 # SI load
	l.sfgeu 	r4,r6
	l.bf	.L8065
	l.nop			# nop delay slot
	l.sw    	24(r2),r3	 # SI store
	l.sw    	20(r2),r5	 # SI store
	l.j     	.L8027	# delay slot filled
	l.sw    	24(r5),r2	 # SI store
.L8079:
	l.lwz   	r6,4(r3)	 # SI load
	l.sfgtu 	r4,r6
	l.bnf	.L8078
	l.nop			# nop delay slot
	l.ori   	r5,r3,0	 # move reg to reg
.L8065:
	l.lwz   	r3,20(r5)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L8079
	l.nop			# nop delay slot
	l.sw    	20(r2),r3	 # SI store
	l.sw    	24(r2),r5	 # SI store
	l.j     	.L8027	# delay slot filled
	l.sw    	20(r5),r2	 # SI store
.L8044:
	l.addi  	r18,r0,7	 # move immediate I
.L8001:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.j     	.L8036	# delay slot filled
	l.sw    	0(r22),r8	 # SI store
.L8080:
	l.lwz   	r3,4(r1)	 # SI load
	l.jal   	sqlite3_free	# delay slot filled
	l.addi  	r18,r0,19	 # move immediate I
.L8071:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L8082	# delay slot filled
	l.addi	r1,r1,176
.L8078:
	l.sw    	24(r2),r5	 # SI store
	l.sw    	20(r2),r3	 # SI store
	l.sw    	24(r3),r2	 # SI store
	l.j     	.L8027	# delay slot filled
	l.sw    	20(r5),r2	 # SI store
.L8074:
	l.lwz   	r18,8(r24)	 # SI load
	l.addi  	r18,r18,1
	l.jal   	sqlite3Malloc	# delay slot filled
	l.add   	r3,r18,r18
	l.sfeqi	r11,0
	l.bf	.L8048	# delay slot filled
	l.sw    	12(r1),r11	 # SI store
	l.movhi  	r4,hi(.LC219)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC219)
	l.sfnei	r11,0
	l.bf	.L8005	# delay slot filled
	l.lwz   	r13,12(r1)	 # SI load
	l.addi  	r17,r0,1	 # move immediate I
	l.sb    	0(r13),r11	    # movqi
	l.sw    	20(r1),r17	 # SI store
.L8006:
	l.addi  	r3,r11,7
	l.lwz   	r4,8(r24)	 # SI load
	l.sfges 	r3,r4
	l.bf	.L8009	# delay slot filled
	l.addi  	r18,r0,14	 # move immediate I
	l.lwz   	r3,4(r24)	 # SI load
	l.j     	.L8003	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L8016:
	l.lwz   	r13,4(r1)	 # SI load
.L8091:
	l.lwz   	r14,56(r13)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8018
	l.nop			# nop delay slot
	l.lwz   	r11,4(r3)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r17,r0,0	 # move immediate I
	l.sw    	0(r14),r17	 # SI store
.L8018:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
.L8023:
	l.lwz   	r3,0(r30)	 # SI load
.L8083:
	l.sfnei	r3,0
	l.bnf	.L8001
	l.nop			# nop delay slot
	l.jal   	sqlite3PagerClose
	l.nop			# nop delay slot
	l.j     	.L8001
	l.nop			# nop delay slot
.L8077:
	l.lwz   	r3,4(r16)	 # SI load
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bf	.L7996	# delay slot filled
	l.add   	r4,r3,r3
	l.lwz   	r5,8(r16)	 # SI load
	l.add   	r4,r4,r3
	l.slli  	r4,r4,3
	l.add   	r4,r5,r4
	l.addi  	r4,r4,4
.L7998:
	l.lwz   	r5,0(r4)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L7997	# delay slot filled
	l.addi  	r3,r3,-1
	l.lwz   	r5,4(r5)	 # SI load
	l.sfne 	r5,r18
	l.bnf	.L8080
	l.nop			# nop delay slot
.L7997:
	l.sfgesi	r3,0
	l.bf	.L7998	# delay slot filled
	l.addi  	r4,r4,-24
.L7996:
	l.lwz   	r4,56(r18)	 # SI load
	l.sw    	4(r2),r18	 # SI store
	l.addi  	r4,r4,1
	l.lwz   	r3,4(r1)	 # SI load
	l.jal   	sqlite3_free	# delay slot filled
	l.sw    	56(r18),r4	 # SI store
	l.sfeqi	r18,0
	l.bnf	.L7999
	l.nop			# nop delay slot
	l.j     	.L7992
	l.nop			# nop delay slot
.L8024:
	l.addi  	r5,r0,0	 # movhi: move immediate
.L8088:
	l.lwz   	r20,0(r1)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L8026	# delay slot filled
	l.sh    	20(r30),r5	 # movhi
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.addi  	r20,r0,0	 # move immediate I
	l.sb    	18(r30),r6	    # movqi
	l.j     	.L8026	# delay slot filled
	l.sb    	19(r30),r6	    # movqi
.L8009:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.j     	.L8083	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
.L8076:
	l.lbz   	r3,0(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L8090	# delay slot filled
	l.addi  	r11,r0,4	 # movqi: move immediate
	l.lwz   	r5,4(r1)	 # SI load
	l.addi  	r17,r0,0	 # move immediate I
	l.lwz   	r4,128(r5)	 # SI load
	l.ori   	r6,r20,0	 # move reg to reg
	l.sw    	124(r1),r17	 # SI store
	l.lwz   	r11,24(r24)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r5,56(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r7,r1,124
	l.lwz   	r14,124(r1)	 # SI load
	l.andi  	r14,r14,1
	l.or    	r20,r11,r14
	l.sfnei	r20,0
	l.bnf	.L8081	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L8091	# delay slot filled
	l.lwz   	r13,4(r1)	 # SI load
	l.j     	.L8037	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
.L8075:
	l.lwz   	r3,12(r1)	 # SI load
	l.jal   	sqlite3_free	# delay slot filled
	l.addi  	r18,r0,7	 # move immediate I
	l.j     	.L8083	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
.L8005:
	l.lwz   	r3,12(r1)	 # SI load
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.ori   	r5,r18,0	 # move reg to reg
	l.sb    	0(r3),r4	    # movqi
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r11,36(r24)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.lwz   	r6,12(r1)	 # SI load
	l.lwz   	r5,12(r1)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
	l.lbs   	r11,0(r5)	 # extendqisi2_no_sext_mem
	l.sfeqi	r11,0
	l.bf	.L8092	# delay slot filled
	l.sfnei	r18,0
	l.addi  	r5,r5,1
.L8093:
	l.lbs   	r3,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L8093	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.lwz   	r6,12(r1)	 # SI load
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r6
	l.ori   	r7,r7,65535
	l.and   	r11,r5,r7
	l.sfnei	r18,0
.L8092:
	l.bf	.L8009
	l.nop			# nop delay slot
	l.j     	.L8006	# delay slot filled
	l.sw    	20(r1),r18	 # SI store
.L8046:
	l.ori   	r18,r28,0	 # move reg to reg
	l.sw    	12(r1),r28	 # SI store
	l.j     	.L8003	# delay slot filled
	l.sw    	20(r1),r28	 # SI store
.L8081:
	l.jal   	setSectorSize	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r6,4(r1)	 # SI load
	l.lhz   	r4,130(r1)	 # zero_extendqisi2
	l.lwz   	r3,108(r6)	 # SI load
	l.sfgeu 	r4,r3
	l.bf	.L8037	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.sfleui	r3,8192
	l.bf	.L8015	# delay slot filled
	l.addi  	r7,r0,8192	 # movhi: move immediate
	l.j     	.L8037	# delay slot filled
	l.sh    	130(r1),r7	 # movhi
.L8048:
	l.j     	.L8023	# delay slot filled
	l.addi  	r18,r0,7	 # move immediate I
.L8015:
	l.j     	.L8014	# delay slot filled
	l.sh    	130(r1),r3	 # movhi
.LFE1220:
	.size	sqlite3BtreeFactory, .-sqlite3BtreeFactory
	.section	.rodata.str1.1
.LC220:
	.string	"unable to open a temporary database file for storing temporary tables"
	.section .text
	.align	4
.proc	sqlite3OpenTempDatabase
	.type	sqlite3OpenTempDatabase, @function
sqlite3OpenTempDatabase:
.LFB914:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3122:
	l.lwz   	r16,0(r3)	 # SI load
	l.sw    	-20(r1),r2	 # SI store
.LCFI3123:
	l.lwz   	r8,8(r16)	 # SI load
	l.sw    	-16(r1),r14	 # SI store
.LCFI3124:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3125:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3126:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r3,28(r8)	 # SI load
	l.sfne 	r3,r14
.LCFI3127:
	l.bnf	.L8099	# delay slot filled
	l.addi  	r1,r1,-20
.L8095:
	l.addi	r1,r1,20
.L8101:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L8099:
	l.lbz   	r3,440(r2)	 # zero_extendqisi2
	l.sfne 	r3,r14
	l.bf	.L8095	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r6,r0,2000	 # move immediate I
	l.addi  	r7,r0,542	 # move immediate I
	l.jal   	sqlite3BtreeFactory	# delay slot filled
	l.addi  	r8,r8,28
	l.sfeq 	r11,r14
	l.bnf	.L8100	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r2,8(r16)	 # SI load
	l.lbz   	r4,32(r16)	 # zero_extendqisi2
	l.lwz   	r2,28(r2)	 # SI load
	l.lwz   	r2,4(r2)	 # SI load
	l.jal   	sqlite3PagerJournalMode	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.j     	.L8101	# delay slot filled
	l.addi	r1,r1,20
.L8100:
	l.movhi  	r4,hi(.LC220)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC220)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L8095	# delay slot filled
	l.sw    	4(r2),r18	 # SI store
.LFE914:
	.size	sqlite3OpenTempDatabase, .-sqlite3OpenTempDatabase
	.align	4
.proc	sqlite3CodeVerifySchema
	.type	sqlite3CodeVerifySchema, @function
sqlite3CodeVerifySchema:
.LFB915:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3128:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-12(r1),r14	 # SI store
.LCFI3129:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3130:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3131:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI3132:
	l.lwz   	r3,0(r3)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r2,12
	l.sfeqi	r11,0
	l.bf	.L8102
	l.nop			# nop delay slot
	l.lwz   	r5,344(r2)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L8105	# delay slot filled
	l.lwz   	r16,0(r2)	 # SI load
.L8104:
	l.sfltsi	r14,0
	l.bf	.L8102	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r3,340(r2)	 # SI load
	l.sll   	r4,r4,r14
	l.and   	r5,r4,r3
	l.sfnei	r5,0
	l.bf	.L8102	# delay slot filled
	l.add   	r5,r14,r14
	l.lwz   	r7,8(r16)	 # SI load
	l.add   	r5,r5,r14
	l.addi  	r6,r14,87
	l.slli  	r5,r5,3
	l.or    	r3,r4,r3
	l.slli  	r6,r6,2
	l.add   	r4,r7,r5
	l.sfnei	r14,1
	l.lwz   	r5,20(r4)	 # SI load
	l.add   	r6,r2,r6
	l.sw    	340(r2),r3	 # SI store
	l.lwz   	r3,0(r5)	 # SI load
	l.bnf	.L8106	# delay slot filled
	l.sw    	0(r6),r3	 # SI store
.L8102:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L8105:
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r11,r11,1
	l.j     	.L8104	# delay slot filled
	l.sw    	344(r2),r11	 # SI store
.L8106:
	l.addi	r1,r1,16
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3OpenTempDatabase	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.LFE915:
	.size	sqlite3CodeVerifySchema, .-sqlite3CodeVerifySchema
	.align	4
.proc	sqlite3BeginWriteOperation
	.type	sqlite3BeginWriteOperation, @function
sqlite3BeginWriteOperation:
.LFB916:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3133:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-16(r1),r14	 # SI store
.LCFI3134:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3135:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3136:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3137:
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI3138:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r4,r2,12
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L8107	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3CodeVerifySchema	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r3,r0,1	 # move immediate I
	l.lwz   	r4,336(r2)	 # SI load
	l.sll   	r3,r3,r14
	l.sfeqi	r18,0
	l.or    	r3,r4,r3
	l.bf	.L8107	# delay slot filled
	l.sw    	336(r2),r3	 # SI store
	l.lbz   	r2,19(r2)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L8109	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
.L8107:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L8109:
	l.addi	r1,r1,20
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,43	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3VdbeAddOp1	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.LFE916:
	.size	sqlite3BeginWriteOperation, .-sqlite3BeginWriteOperation
	.align	4
.proc	sqlite3DropTriggerPtr
	.type	sqlite3DropTriggerPtr, @function
sqlite3DropTriggerPtr:
.LFB1088:
	l.sw    	-28(r1),r2	 # SI store
.LCFI3139:
	l.sw    	-24(r1),r14	 # SI store
.LCFI3140:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3141:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3142:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3143:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3144:
	l.sw    	-8(r1),r22	 # SI store
.LCFI3145:
	l.lwz   	r7,28(r4)	 # SI load
	l.addi  	r1,r1,-32
.LCFI3146:
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r18,r3,0	 # move reg to reg
	l.sfeqi	r7,0
	l.bf	.L8111	# delay slot filled
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r8,4(r2)	 # SI load
	l.sflesi	r8,0
	l.bf	.L8112
	l.nop			# nop delay slot
	l.lwz   	r20,8(r2)	 # SI load
	l.lwz   	r2,20(r20)	 # SI load
	l.sfeq 	r7,r2
	l.bf	.L8113	# delay slot filled
	l.addi  	r5,r20,24
	l.j     	.L8114	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L8116:
	l.lwz   	r6,20(r5)	 # SI load
	l.sfeq 	r7,r6
	l.bf	.L8115	# delay slot filled
	l.addi  	r5,r5,24
.L8114:
	l.addi  	r2,r2,1
	l.sflts 	r2,r8
	l.bf	.L8116	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.add   	r16,r2,r2
	l.add   	r16,r16,r2
	l.slli  	r16,r16,3
	l.add   	r16,r20,r16
.L8115:
	l.lwz   	r3,4(r14)	 # SI load
	l.jal   	tableOfTrigger.clone.91	# delay slot filled
	l.addi  	r4,r14,32
	l.sfnei	r2,1
	l.bnf	.L8120	# delay slot filled
	l.lwz   	r16,0(r16)	 # SI load
.L8117:
	l.movhi  	r20,hi(.LC199)
	l.addi  	r4,r0,16	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r6,4(r11)	 # SI load
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r20,r20,lo(.LC199)
	l.sfnei	r11,0
	l.bnf	.L8122	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
.L8110:
	l.addi	r1,r1,32
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L8120:
	l.movhi  	r20,hi(.LC198)
	l.addi  	r4,r0,14	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r6,4(r11)	 # SI load
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r20,r20,lo(.LC198)
	l.sfnei	r11,0
	l.bf	.L8110	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
.L8122:
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L8110	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,0(r18)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r18,12
	l.sfeqi	r11,0
	l.bf	.L8110	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3OpenMasterTable	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.movhi  	r5,hi(dropTrigger.19438)
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.jal   	sqlite3VdbeAddOpList	# delay slot filled
	l.ori   	r5,r5,lo(dropTrigger.19438)
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r11,1
	l.lwz   	r5,0(r14)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.movhi  	r5,hi(.LC114)
	l.addi  	r6,r0,-2	 # move immediate I
	l.ori   	r5,r5,lo(.LC114)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r4,r22,4
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ChangeCookie	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r8,0(r14)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,61	 # move immediate I
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.lwz   	r2,72(r18)	 # SI load
	l.sfgtsi	r2,2
	l.bf	.L8110	# delay slot filled
	l.addi  	r2,r0,3	 # move immediate I
	l.j     	.L8110	# delay slot filled
	l.sw    	72(r18),r2	 # SI store
.L8111:
	l.lwz   	r3,4(r4)	 # SI load
	l.jal   	tableOfTrigger.clone.91	# delay slot filled
	l.addi  	r4,r4,32
	l.lwz   	r3,8(r2)	 # SI load
	l.movhi 	r2,hi(-24051712)	 # move immediate M
	l.ori   	r2,r2,51712
	l.add   	r3,r3,r2
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.lwz   	r16,0(r3)	 # SI load
	l.j     	.L8117	# delay slot filled
	l.ori   	r2,r2,48576
.L8112:
	l.lwz   	r20,8(r2)	 # SI load
.L8113:
	l.lwz   	r3,4(r14)	 # SI load
	l.addi  	r4,r14,32
	l.jal   	tableOfTrigger.clone.91	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L8117	# delay slot filled
	l.lwz   	r16,0(r20)	 # SI load
.LFE1088:
	.size	sqlite3DropTriggerPtr, .-sqlite3DropTriggerPtr
	.align	4
.proc	reindexTable.clone.158
	.type	reindexTable.clone.158, @function
reindexTable.clone.158:
.LFB1406:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3147:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3148:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3149:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3150:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3151:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3152:
	l.sw    	-32(r1),r14	 # SI store
.LCFI3153:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3154:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3155:
	l.ori   	r20,r4,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI3156:
	l.ori   	r22,r3,0	 # move reg to reg
	l.ori   	r26,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L8123	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
	l.movhi 	r24,hi(-1048576)	 # move immediate M
	l.ori   	r24,r24,48576
	l.sfeqi	r16,0
.L8141:
	l.bf	.L8125
	l.nop			# nop delay slot
	l.lwz   	r18,4(r20)	 # SI load
	l.sflesi	r18,0
	l.bf	.L8126
	l.nop			# nop delay slot
	l.lwz   	r14,44(r20)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeq 	r16,r3
	l.bf	.L8125	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L8127	# delay slot filled
	l.addi  	r14,r14,4
.L8128:
	l.sfgts 	r18,r2
.L8139:
	l.bnf	.L8126
	l.nop			# nop delay slot
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeq 	r16,r3
	l.bf	.L8125	# delay slot filled
	l.addi  	r14,r14,4
.L8127:
	l.sub   	r6,r0,r3
	l.or    	r6,r3,r6
	l.sfgesi	r6,0
	l.bf	.L8128	# delay slot filled
	l.addi  	r2,r2,1
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L8139	# delay slot filled
	l.sfgts 	r18,r2
.L8125:
	l.lwz   	r6,0(r26)	 # SI load
	l.lwz   	r2,0(r22)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L8130	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.lwz   	r7,4(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.sfles 	r7,r5
	l.bf	.L8140	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r2,8(r2)	 # SI load
	l.lwz   	r3,20(r2)	 # SI load
	l.sfeq 	r6,r3
	l.bf	.L8140	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.j     	.L8131	# delay slot filled
	l.addi  	r2,r2,44
.L8132:
	l.lwz   	r4,0(r2)	 # SI load
	l.sfeq 	r6,r4
	l.bf	.L8130	# delay slot filled
	l.addi  	r2,r2,24
.L8131:
	l.addi  	r5,r5,1
	l.sflts 	r5,r7
	l.bf	.L8132
	l.nop			# nop delay slot
.L8130:
	l.ori   	r3,r22,0	 # move reg to reg
.L8140:
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3RefillIndex	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
.L8126:
	l.lwz   	r20,32(r20)	 # SI load
	l.sfnei	r20,0
	l.bf	.L8141	# delay slot filled
	l.sfeqi	r16,0
.L8123:
	l.addi	r1,r1,36
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.LFE1406:
	.size	reindexTable.clone.158, .-reindexTable.clone.158
	.align	4
.proc	reindexDatabases
	.type	reindexDatabases, @function
reindexDatabases:
.LFB919:
	l.sw    	-8(r1),r22	 # SI store
.LCFI3157:
	l.lwz   	r22,0(r3)	 # SI load
	l.sw    	-24(r1),r14	 # SI store
.LCFI3158:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3159:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3160:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3161:
	l.sw    	-28(r1),r2	 # SI store
.LCFI3162:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3163:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r3,4(r22)	 # SI load
	l.addi  	r1,r1,-28
.LCFI3164:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sflesi	r3,0
	l.bf	.L8142	# delay slot filled
	l.lwz   	r18,8(r22)	 # SI load
	l.addi  	r18,r18,20
	l.addi  	r20,r0,0	 # move immediate I
.L8146:
	l.lwz   	r2,0(r18)	 # SI load
	l.lwz   	r2,12(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8144
	l.nop			# nop delay slot
.L8147:
	l.lwz   	r5,8(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,20(r5)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	reindexTable.clone.158	# delay slot filled
	l.addi  	r5,r5,72
	l.lwz   	r2,0(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L8147
	l.nop			# nop delay slot
	l.lwz   	r3,4(r22)	 # SI load
.L8144:
	l.addi  	r20,r20,1
	l.sfgts 	r3,r20
	l.bf	.L8146	# delay slot filled
	l.addi  	r18,r18,24
.L8142:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.LFE919:
	.size	reindexDatabases, .-reindexDatabases
	.align	4
.proc	sqlite3FindInIndex
	.type	sqlite3FindInIndex, @function
sqlite3FindInIndex:
.LFB773:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3165:
	l.lwz   	r22,68(r3)	 # SI load
	l.sw    	-44(r1),r2	 # SI store
.LCFI3166:
	l.lhz   	r2,2(r4)	 # zero_extendqisi2
	l.sw    	-40(r1),r14	 # SI store
.LCFI3167:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r3,r22,1
	l.sw    	-36(r1),r16	 # SI store
.LCFI3168:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3169:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3170:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3171:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3172:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3173:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3174:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3175:
	l.andi  	r2,r2,4096
	l.sw    	68(r14),r3	 # SI store
	l.addi  	r1,r1,-56
.LCFI3176:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L8158	# delay slot filled
	l.ori   	r20,r5,0	 # move reg to reg
	l.lwz   	r18,28(r4)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r2,28(r18)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L8183
	l.nop			# nop delay slot
.L8158:
	l.sfeqi	r20,0
.L8187:
	l.bf	.L8168	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,72(r14)	 # SI load
	l.addi  	r5,r5,1
	l.addi  	r18,r0,2	 # move immediate I
	l.sw    	72(r14),r5	 # SI store
	l.sw    	0(r20),r5	 # SI store
.L8169:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3CodeSubselect	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.L8170:
	l.addi	r1,r1,56
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L8168:
	l.lwz   	r2,20(r16)	 # SI load
	l.lwz   	r2,40(r2)	 # SI load
	l.sfgesi	r2,0
	l.bnf	.L8184
	l.nop			# nop delay slot
.L8175:
	l.ori   	r6,r20,0	 # move reg to reg
	l.addi  	r18,r0,2	 # move immediate I
	l.j     	.L8169	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
.L8183:
	l.lhz   	r2,6(r18)	 # zero_extendqisi2
	l.andi  	r2,r2,5
	l.sfnei	r2,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r2,16(r18)	 # SI load
	l.sfnei	r2,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r2,40(r18)	 # SI load
	l.sfnei	r2,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r2,44(r18)	 # SI load
	l.sfnei	r2,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r2,12(r18)	 # SI load
	l.sfnei	r2,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r2,8(r18)	 # SI load
	l.lhs   	r3,0(r2)	 # extendhisi2_no_sext_mem
	l.sfnei	r3,1
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r3,20(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r2,16(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r3,28(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lbz   	r2,34(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,16
	l.sfnei	r2,0
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r3,0(r18)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.sfnei	r4,1
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	4(r1),r3	 # SI store
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.sfnei	r3,151
	l.bf	.L8187	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r28,0(r14)	 # SI load
	l.lwz   	r5,4(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r14,12
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.lwz   	r24,40(r5)	 # SI load
	l.lwz   	r3,8(r18)	 # SI load
	l.lwz   	r26,16(r3)	 # SI load
	l.lwz   	r12,72(r26)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L8177	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r4,4(r28)	 # SI load
	l.sflesi	r4,0
	l.bf	.L8189	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r7,8(r28)	 # SI load
	l.lwz   	r3,20(r7)	 # SI load
	l.sfeq 	r12,r3
	l.bf	.L8153	# delay slot filled
	l.addi  	r7,r7,44
	l.j     	.L8191	# delay slot filled
	l.addi  	r2,r2,1
.L8154:
	l.lwz   	r8,0(r7)	 # SI load
	l.sfeq 	r12,r8
	l.bf	.L8153	# delay slot filled
	l.addi  	r7,r7,24
	l.addi  	r2,r2,1
.L8191:
	l.sflts 	r2,r4
	l.bf	.L8154
	l.nop			# nop delay slot
.L8153:
	l.ori   	r3,r14,0	 # move reg to reg
.L8189:
	l.jal   	sqlite3CodeVerifySchema	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r5,24(r26)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3TableLock	# delay slot filled
	l.lwz   	r7,4(r26)	 # SI load
	l.sfgesi	r24,0
	l.bnf	.L8185	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
	l.lwz   	r4,20(r16)	 # SI load
	l.jal   	sqlite3BinaryCompareCollSeq	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	comparisonAffinity	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.slli  	r6,r24,2
	l.slli  	r4,r24,4
	l.lwz   	r2,20(r26)	 # SI load
	l.lwz   	r5,16(r26)	 # SI load
	l.add   	r4,r6,r4
	l.sw    	4(r1),r4	 # SI store
	l.sub   	r4,r0,r2
	l.lwz   	r6,4(r1)	 # SI load
	l.or    	r4,r2,r4
	l.add   	r5,r5,r6
	l.sfgesi	r4,0
	l.bf	.L8158	# delay slot filled
	l.lbs   	r5,18(r5)	 # extendqisi2_no_sext_mem
	l.xori  	r4,r11,98
	l.xor   	r3,r5,r11
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.addi  	r3,r3,-1
	l.or    	r3,r3,r4
	l.sfgesi	r3,0
	l.bnf	.L8180	# delay slot filled
	l.sfeqi	r20,0
	l.j     	.L8187
	l.nop			# nop delay slot
.L8159:
	l.lwz   	r2,32(r2)	 # SI load
	l.sub   	r4,r0,r2
	l.or    	r4,r2,r4
	l.sfltsi	r4,0
	l.bnf	.L8187	# delay slot filled
	l.sfeqi	r20,0
.L8180:
	l.lwz   	r4,8(r2)	 # SI load
	l.lwz   	r4,0(r4)	 # SI load
	l.sfne 	r4,r24
	l.bf	.L8159	# delay slot filled
	l.addi  	r6,r0,-1	 # move immediate I
	l.lwz   	r3,8(r28)	 # SI load
	l.lwz   	r5,44(r2)	 # SI load
	l.lwz   	r4,20(r3)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lbz   	r4,57(r4)	 # zero_extendqisi2
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfne 	r18,r11
	l.bf	.L8159	# delay slot filled
	l.sfnei	r20,0
	l.bnf	.L8186
	l.nop			# nop delay slot
	l.lwz   	r24,72(r14)	 # SI load
.L8188:
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r24,r24,1
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3IndexKeyinfo	# delay slot filled
	l.sw    	72(r14),r24	 # SI store
	l.lwz   	r4,36(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L8161	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.lwz   	r12,4(r28)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
	l.sfles 	r12,r18
	l.bf	.L8162
	l.nop			# nop delay slot
	l.lwz   	r3,8(r28)	 # SI load
	l.lwz   	r5,20(r3)	 # SI load
	l.sfeq 	r4,r5
	l.bf	.L8162	# delay slot filled
	l.addi  	r3,r3,44
	l.j     	.L8192	# delay slot filled
	l.addi  	r18,r18,1
.L8164:
	l.lwz   	r7,0(r3)	 # SI load
	l.sfeq 	r4,r7
	l.bf	.L8162	# delay slot filled
	l.addi  	r3,r3,24
	l.addi  	r18,r18,1
.L8192:
	l.sfgts 	r12,r18
	l.bf	.L8164
	l.nop			# nop delay slot
.L8162:
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r3,144(r30)	 # SI load
	l.sll   	r4,r4,r18
	l.and   	r5,r4,r3
	l.sfnei	r5,0
	l.bnf	.L8190	# delay slot filled
	l.or    	r3,r4,r3
.L8165:
	l.addi  	r4,r0,11	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r6,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.lwz   	r6,20(r2)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.lwz   	r8,8(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,13	 # move immediate I
	l.addi  	r2,r0,-16	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.sfeqi	r20,0
	l.bf	.L8166	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r2,16(r26)	 # SI load
	l.add   	r2,r2,r3
	l.lbz   	r2,16(r2)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L8166
	l.nop			# nop delay slot
	l.lwz   	r2,72(r14)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	72(r14),r2	 # SI store
	l.sw    	0(r20),r2	 # SI store
.L8166:
	l.addi  	r18,r0,3	 # move immediate I
	l.j     	.L8170	# delay slot filled
	l.sw    	36(r16),r22	 # SI store
.L8184:
	l.lhz   	r2,2(r16)	 # zero_extendqisi2
	l.andi  	r2,r2,4096
	l.sfeqi	r2,0
	l.bnf	.L8175
	l.nop			# nop delay slot
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.j     	.L8169	# delay slot filled
	l.ori   	r18,r6,0	 # move reg to reg
.L8185:
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r20,72(r14)	 # SI load
	l.sll   	r4,r4,r2
	l.lwz   	r3,144(r30)	 # SI load
	l.addi  	r20,r20,1
	l.and   	r5,r4,r3
	l.sfnei	r5,0
	l.bf	.L8156	# delay slot filled
	l.sw    	72(r14),r20	 # SI store
	l.or    	r3,r4,r3
	l.sw    	144(r30),r3	 # SI store
.L8156:
	l.addi  	r4,r0,11	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r18,r0,1	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r26,0	 # move reg to reg
	l.jal   	sqlite3OpenTable	# delay slot filled
	l.addi  	r7,r0,13	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.j     	.L8170	# delay slot filled
	l.sw    	36(r16),r22	 # SI store
.L8161:
	l.movhi 	r18,hi(-1048576)	 # move immediate M
	l.lwz   	r3,144(r30)	 # SI load
	l.ori   	r18,r18,48576
	l.or    	r3,r4,r3
.L8190:
	l.j     	.L8165	# delay slot filled
	l.sw    	144(r30),r3	 # SI store
.L8186:
	l.lwz   	r3,4(r2)	 # SI load
	l.sfnei	r3,1
	l.bf	.L8159
	l.nop			# nop delay slot
	l.lbz   	r3,24(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L8159
	l.nop			# nop delay slot
	l.j     	.L8188	# delay slot filled
	l.lwz   	r24,72(r14)	 # SI load
.L8177:
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.j     	.L8153	# delay slot filled
	l.ori   	r2,r2,48576
.LFE773:
	.size	sqlite3FindInIndex, .-sqlite3FindInIndex
	.align	4
.proc	codeEqualityTerm
	.type	codeEqualityTerm, @function
codeEqualityTerm:
.LFB1160:
	l.sw    	-32(r1),r2	 # SI store
.LCFI3177:
	l.sw    	-28(r1),r14	 # SI store
.LCFI3178:
	l.sw    	-24(r1),r16	 # SI store
.LCFI3179:
	l.sw    	-20(r1),r18	 # SI store
.LCFI3180:
	l.sw    	-16(r1),r20	 # SI store
.LCFI3181:
	l.sw    	-12(r1),r22	 # SI store
.LCFI3182:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3183:
	l.sw    	-8(r1),r24	 # SI store
.LCFI3184:
	l.lwz   	r16,0(r4)	 # SI load
	l.ori   	r20,r4,0	 # move reg to reg
	l.lbz   	r4,0(r16)	 # zero_extendqisi2
	l.addi  	r1,r1,-32
.LCFI3185:
	l.ori   	r22,r3,0	 # move reg to reg
	l.ori   	r2,r5,0	 # move reg to reg
	l.ori   	r14,r6,0	 # move reg to reg
	l.sfnei	r4,74
	l.bnf	.L8201	# delay slot filled
	l.lwz   	r18,12(r3)	 # SI load
	l.sfnei	r4,71
	l.bnf	.L8202	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3FindInIndex	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r16,36(r16)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r4,r0,122	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r5,52(r2)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L8203
	l.nop			# nop delay slot
.L8197:
	l.addi  	r5,r5,1
	l.lwz   	r4,56(r2)	 # SI load
	l.sw    	52(r2),r5	 # SI store
	l.slli  	r5,r5,3
	l.jal   	sqlite3DbReallocOrFree	# delay slot filled
	l.lwz   	r3,0(r22)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L8198	# delay slot filled
	l.sw    	56(r2),r11	 # SI store
	l.lwz   	r22,52(r2)	 # SI load
	l.sfnei	r24,1
	l.addi  	r22,r22,-1
	l.slli  	r22,r22,3
	l.add   	r22,r11,r22
	l.bnf	.L8204	# delay slot filled
	l.sw    	0(r22),r16	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.sw    	4(r22),r11	 # SI store
.L8200:
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,71	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
.L8195:
	l.ori   	r3,r2,0	 # move reg to reg
.L8205:
	l.jal   	disableTerm	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi	r1,r1,32
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L8203:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r5,52(r2)	 # SI load
	l.j     	.L8197	# delay slot filled
	l.sw    	28(r2),r11	 # SI store
.L8204:
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,40	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.j     	.L8200	# delay slot filled
	l.sw    	4(r22),r11	 # SI store
.L8202:
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L8205	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L8198:
	l.j     	.L8195	# delay slot filled
	l.sw    	52(r2),r11	 # SI store
.L8201:
	l.lwz   	r4,24(r16)	 # SI load
	l.jal   	sqlite3ExprCodeTarget	# delay slot filled
	l.ori   	r5,r6,0	 # move reg to reg
	l.j     	.L8195	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.LFE1160:
	.size	codeEqualityTerm, .-codeEqualityTerm
	.section	.rodata.str1.1
.LC221:
	.string	"at most %d tables in a join"
.LC223:
	.string	"cannot use index: %s"
.LC224:
	.string	"TABLE %s"
.LC225:
	.string	"%s AS %s"
.LC226:
	.string	"%s WITH INDEX %s"
.LC227:
	.string	"%s VIA MULTI-INDEX UNION"
.LC228:
	.string	"%s USING PRIMARY KEY"
.LC229:
	.string	"%s VIRTUAL TABLE INDEX %d:%s"
.LC230:
	.string	"%s ORDER BY"
	.section	.rodata
	.align	4
.LC222:
	.long	1417495214
	.long	2726797102
	.section .text
	.align	4
.proc	sqlite3WhereBegin
	.type	sqlite3WhereBegin, @function
sqlite3WhereBegin:
.LFB1164:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3186:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3187:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3188:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3189:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3190:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3191:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3192:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3193:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3194:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3195:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3196:
	l.addi  	r1,r1,-388
.LCFI3197:
	l.lhs   	r8,0(r4)	 # extendhisi2_no_sext_mem
	l.sw    	96(r1),r4	 # SI store
	l.lwz   	r4,12(r3)	 # SI load
	l.sw    	32(r1),r3	 # SI store
	l.sw    	60(r1),r6	 # SI store
	l.sw    	88(r1),r7	 # SI store
	l.sw    	84(r1),r4	 # SI store
	l.sflesi	r8,64
	l.bnf	.L8419	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.slli  	r8,r8,6
	l.lwz   	r6,32(r1)	 # SI load
	l.addi  	r16,r8,32
	l.lwz   	r6,0(r6)	 # SI load
	l.addi  	r4,r16,444
	l.ori   	r3,r6,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.sw    	80(r1),r6	 # SI store
	l.lwz   	r7,80(r1)	 # SI load
	l.sw    	48(r1),r11	 # SI store
	l.lbz   	r14,30(r7)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L8209	# delay slot filled
	l.lwz   	r8,96(r1)	 # SI load
	l.lwz   	r4,32(r1)	 # SI load
	l.lhs   	r5,0(r8)	 # extendhisi2_no_sext_mem
	l.lwz   	r3,84(r1)	 # SI load
	l.sw    	8(r11),r8	 # SI store
	l.sw    	24(r11),r5	 # SI store
	l.sw    	0(r11),r4	 # SI store
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.add   	r30,r11,r16
	l.lwz   	r6,48(r1)	 # SI load
	l.lwz   	r7,88(r1)	 # SI load
	l.addi  	r26,r30,184
	l.sw    	20(r6),r11	 # SI store
	l.sw    	28(r6),r30	 # SI store
	l.sh    	4(r6),r7	 # movhi
	l.addi  	r5,r0,260	 # move immediate I
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r8,32(r1)	 # SI load
	l.addi  	r5,r30,24
	l.sw    	0(r30),r8	 # SI store
	l.sw    	20(r30),r5	 # SI store
	l.addi  	r8,r0,4	 # move immediate I
	l.movhi  	r5,hi(evalConstExpr)
	l.sw    	4(r30),r26	 # SI store
	l.ori   	r5,r5,lo(evalConstExpr)
	l.sw    	16(r30),r8	 # SI store
	l.addi  	r3,r1,312
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r11,32(r1)	 # SI load
	l.sw    	12(r30),r14	 # SI store
	l.sw    	312(r1),r5	 # SI store
	l.sw    	316(r1),r14	 # SI store
	l.jal   	sqlite3WalkExpr	# delay slot filled
	l.sw    	320(r1),r11	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	whereSplit	# delay slot filled
	l.addi  	r5,r0,67	 # move immediate I
	l.sfeqi	r2,0
	l.bf	.L8210	# delay slot filled
	l.lwz   	r3,96(r1)	 # SI load
	l.lhs   	r5,0(r3)	 # extendhisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bnf	.L8420	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r6,48(r1)	 # SI load
.L8450:
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r5,20(r6)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.addi  	r6,r0,8	 # move immediate I
.L8210:
	l.lwz   	r7,96(r1)	 # SI load
.L8470:
	l.lhs   	r12,0(r7)	 # extendhisi2_no_sext_mem
	l.sflesi	r12,0
	l.bf	.L8212	# delay slot filled
	l.addi  	r2,r7,28
	l.lwz   	r14,0(r26)	 # SI load
	l.addi  	r14,r14,1
	l.addi  	r8,r0,0	 # move immediate I
	l.slli  	r5,r14,2
	l.add   	r5,r26,r5
.L8213:
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r8,r8,1
	l.sw    	0(r5),r3	 # SI store
	l.addi  	r2,r2,52
	l.sflts 	r8,r12
	l.bf	.L8213	# delay slot filled
	l.addi  	r5,r5,4
	l.addi  	r12,r12,-1
	l.add   	r14,r14,r12
	l.sw    	0(r26),r14	 # SI store
.L8212:
	l.lwz   	r3,96(r1)	 # SI load
	l.jal   	exprAnalyzeAll	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.lwz   	r8,80(r1)	 # SI load
	l.lbz   	r2,30(r8)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L8209	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r11,96(r1)	 # SI load
	l.addi  	r3,r3,32
	l.lhs   	r19,0(r11)	 # extendhisi2_no_sext_mem
	l.sw    	92(r1),r3	 # SI store
	l.sflesi	r19,0
	l.bf	.L8355	# delay slot filled
	l.sw    	104(r1),r3	 # SI store
	l.lwz   	r4,60(r1)	 # SI load
	l.lwz   	r7,48(r1)	 # SI load
	l.sub   	r5,r0,r4
	l.addi  	r6,r0,-1	 # move immediate I
	l.or    	r5,r4,r5
	l.addi  	r7,r7,52
	l.srli  	r5,r5,31
	l.addi  	r8,r26,8
	l.ori   	r28,r2,0	 # move reg to reg
	l.sw    	56(r1),r2	 # SI store
	l.addi  	r3,r0,-1	 # move immediate I
	l.addi  	r2,r0,-1	 # move immediate I
	l.sw    	44(r1),r30	 # SI store
	l.sw    	76(r1),r6	 # SI store
	l.sw    	64(r1),r5	 # SI store
	l.sw    	52(r1),r7	 # SI store
	l.sw    	28(r1),r8	 # SI store
	l.ori   	r30,r11,0	 # move reg to reg
		l.sw    	20(r1), r2
		l.sw    	20+4(r1), r3
	l.movhi  	r5,hi(.LC222)
.L8447:
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r5,r5,lo(.LC222)
	l.sw    	284(r1),r3	 # SI store
	l.sw    	288(r1),r3	 # SI store
	l.sw    	292(r1),r3	 # SI store
	l.sw    	304(r1),r3	 # SI store
	l.sw    	308(r1),r3	 # SI store
		l.lwz   	r4, 0(r5)
		l.lwz   	r5, 4(r5)
		l.sw    	296(r1), r4
		l.sw    	296+4(r1), r5
	l.sfles 	r19,r28
	l.bf	.L8215	# delay slot filled
	l.ori   	r24,r3,0	 # move reg to reg
	l.lwz   	r6,56(r1)	 # SI load
	l.add   	r7,r28,r28
	l.sub   	r5,r0,r6
	l.add   	r7,r7,r28
	l.or    	r5,r5,r6
	l.slli  	r8,r7,4
	l.xori  	r5,r5,0xffff
	l.addi  	r18,r28,1
	l.add   	r7,r7,r8
	l.srli  	r5,r5,31
	l.add   	r7,r7,r28
	l.ori   	r20,r3,0	 # move reg to reg
	l.sw    	40(r1),r5	 # SI store
	l.add   	r5,r30,r7
	l.addi  	r7,r7,4
	l.lbz   	r5,25(r5)	 # zero_extendqisi2
	l.andi  	r5,r5,10
	l.add   	r16,r30,r7
	l.sub   	r7,r0,r5
	l.srli  	r22,r7,31
.L8406:
	l.lwz   	r12,0(r26)	 # SI load
	l.addi  	r14,r18,-1
	l.sflesi	r12,0
	l.bf	.L8218	# delay slot filled
	l.lwz   	r11,24(r16)	 # SI load
	l.lwz   	r2,4(r26)	 # SI load
	l.sfeq 	r11,r2
	l.bf	.L8421	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
	l.j     	.L8221	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
.L8226:
	l.lwz   	r2,0(r7)	 # SI load
	l.sfne 	r11,r2
	l.bnf	.L8422	# delay slot filled
	l.addi  	r7,r7,4
.L8221:
	l.addi  	r8,r8,1
	l.sflts 	r8,r12
	l.bf	.L8226
	l.nop			# nop delay slot
.L8218:
	l.sfeq 	r28,r14
.L8466:
	l.bf	.L8423
	l.nop			# nop delay slot
.L8228:
	l.sfgts 	r19,r18
	l.bnf	.L8215	# delay slot filled
	l.sfeqi	r20,0
	l.addi  	r16,r16,52
	l.addi  	r18,r18,1
	l.lbz   	r22,21(r16)	 # zero_extendqisi2
	l.andi  	r22,r22,10
	l.sub   	r22,r0,r22
	l.bf	.L8406	# delay slot filled
	l.srli  	r22,r22,31
	l.sfnei	r22,0
	l.bnf	.L8406
	l.nop			# nop delay slot
.L8215:
	l.lwz   	r6,284(r1)	 # SI load
.L8469:
	l.movhi 	r2,hi(16777216)	 # move immediate M
	l.and   	r5,r6,r2
	l.sfeqi	r5,0
	l.bf	.L8465	# delay slot filled
	l.movhi 	r5,hi(983040)	 # move immediate M
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,60(r1)	 # SI load
	l.sw    	0(r3),r4	 # SI store
.L8465:
	l.lwz   	r8,52(r1)	 # SI load
	l.and   	r7,r6,r5
	l.lwz   	r5,284(r1)	 # SI load
	l.sfeqi	r7,0
	l.sw    	-20(r8),r5	 # SI store
	l.lwz   	r5,288(r1)	 # SI load
	l.sw    	-16(r8),r5	 # SI store
	l.lwz   	r5,292(r1)	 # SI load
	l.bf	.L8237	# delay slot filled
	l.sw    	-12(r8),r5	 # SI store
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r7,68(r11)	 # SI load
	l.addi  	r5,r7,1
	l.sw    	0(r8),r7	 # SI store
	l.sw    	68(r11),r5	 # SI store
.L8238:
	l.add   	r7,r24,r24
	l.lwz   	r11,0(r26)	 # SI load
	l.add   	r7,r7,r24
	l.sflesi	r11,0
	l.slli  	r5,r7,4
	l.add   	r5,r7,r5
	l.add   	r5,r5,r24
	l.add   	r5,r30,r5
	l.bf	.L8359	# delay slot filled
	l.lwz   	r8,28(r5)	 # SI load
	l.lwz   	r5,4(r26)	 # SI load
	l.sfeq 	r8,r5
	l.bf	.L8424	# delay slot filled
	l.lwz   	r5,28(r1)	 # SI load
	l.j     	.L8242	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L8245:
	l.lwz   	r2,0(r5)	 # SI load
	l.sfne 	r8,r2
	l.bnf	.L8240	# delay slot filled
	l.addi  	r5,r5,4
.L8242:
	l.addi  	r7,r7,1
	l.sflts 	r7,r11
	l.bf	.L8245
	l.nop			# nop delay slot
	l.addi  	r7,r0,-1	 # move immediate I
	l.addi  	r8,r0,-1	 # move immediate I
		l.sw    	68(r1), r7
		l.sw    	68+4(r1), r8
.L8239:
	l.addi  	r8,r24,1
.L8456:
	l.lwz   	r3,52(r1)	 # SI load
	l.add   	r7,r8,r8
	l.sb    	20(r3),r24	    # movqi
	l.add   	r5,r7,r8
	l.slli  	r7,r5,4
	l.add   	r5,r5,r7
	l.add   	r5,r5,r8
	l.add   	r5,r30,r5
	l.lwz   	r8,0(r5)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L8246	# delay slot filled
	l.lwz   	r5,284(r1)	 # SI load
	l.movhi 	r4,hi(983040)	 # move immediate M
	l.and   	r5,r5,r4
	l.sfnei	r5,0
	l.bnf	.L8425	# delay slot filled
	l.movhi  	r4,hi(.LC223)
.L8246:
	l.lwz   	r5,56(r1)	 # SI load
	l.lwz   	r7,76(r1)	 # SI load
	l.lwz   	r8,52(r1)	 # SI load
	l.addi  	r5,r5,1
	l.and   	r7,r7,r6
	l.addi  	r8,r8,64
	l.lhs   	r19,0(r30)	 # extendhisi2_no_sext_mem
	l.sw    	56(r1),r5	 # SI store
	l.sw    	76(r1),r7	 # SI store
	l.sfles 	r19,r5
	l.bf	.L8214	# delay slot filled
	l.sw    	52(r1),r8	 # SI store
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r2,68(r1)	 # SI load
	l.lwz   	r4,72(r1)	 # SI load
	l.and   	r7,r11,r2
	l.and   	r5,r3,r4
	l.ori   	r2,r7,0	 # move reg to reg
	l.ori   	r3,r5,0	 # move reg to reg
		l.sw    	20(r1), r2
		l.sw    	20+4(r1), r3
	l.j     	.L8447	# delay slot filled
	l.movhi  	r5,hi(.LC222)
.L8422:
	l.addi  	r2,r8,-32
	l.sfltsi	r2,0
	l.bf	.L8222	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
	l.sll   	r2,r7,r2
	l.sw    	16(r1),r8	 # SI store
	l.sw    	12(r1),r2	 # SI store
.L8219:
	l.lwz   	r4,12(r1)	 # SI load
.L8449:
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r8,24(r1)	 # SI load
	l.and   	r7,r4,r5
	l.and   	r2,r6,r8
	l.or    	r2,r7,r2
	l.sfeqi	r2,0
	l.bf	.L8466	# delay slot filled
	l.sfeq 	r28,r14
	l.lwz   	r11,40(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L8229	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.lwz   	r2,64(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8229	# delay slot filled
	l.lwz   	r3,60(r1)	 # SI load
	l.lwz   	r8,0(r3)	 # SI load
.L8229:
	l.lwz   	r2,12(r16)	 # SI load
	l.lbz   	r2,34(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,16
	l.sfeqi	r2,0
	l.bf	.L8230	# delay slot filled
	l.addi  	r11,r1,256
	l.slli  	r2,r14,6
	l.lwz   	r6,48(r1)	 # SI load
	l.addi  	r7,r1,256
	l.addi  	r2,r2,92
	l.lwz   	r3,32(r1)	 # SI load
	l.add   	r2,r6,r2
	l.lwz   	r4,44(r1)	 # SI load
	l.sw    	0(r1),r7	 # SI store
	l.sw    	4(r1),r2	 # SI store
		l.lwz   	r6, 20(r1)
		l.lwz   	r7, 20+4(r1)
	l.jal   	bestVirtualIndex	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.sfeqi	r20,0
.L8448:
	l.bf	.L8467	# delay slot filled
	l.lwz   	r2,256(r1)	 # SI load
		l.lwz   	r3, 268(r1)
		l.lwz   	r4, 268+4(r1)
		l.lwz   	r5, 296(r1)
		l.lwz   	r6, 296+4(r1)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bnf	.L8468	# delay slot filled
	l.sfnei	r22,0
	l.lwz   	r2,256(r1)	 # SI load
.L8467:
	l.ori   	r24,r14,0	 # move reg to reg
	l.sw    	284(r1),r2	 # SI store
	l.lwz   	r2,260(r1)	 # SI load
	l.addi  	r20,r0,1	 # move immediate I
	l.sw    	288(r1),r2	 # SI store
	l.lwz   	r2,264(r1)	 # SI load
	l.sw    	292(r1),r2	 # SI store
	l.lwz   	r2,268(r1)	 # SI load
	l.sw    	296(r1),r2	 # SI store
	l.lwz   	r2,272(r1)	 # SI load
	l.sw    	300(r1),r2	 # SI store
	l.lwz   	r2,276(r1)	 # SI load
	l.sw    	304(r1),r2	 # SI store
	l.lwz   	r2,280(r1)	 # SI load
	l.sw    	308(r1),r2	 # SI store
	l.sfnei	r22,0
.L8468:
	l.bf	.L8469	# delay slot filled
	l.lwz   	r6,284(r1)	 # SI load
	l.j     	.L8228	# delay slot filled
	l.lhs   	r19,0(r30)	 # extendhisi2_no_sext_mem
.L8230:
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r4,44(r1)	 # SI load
	l.sw    	0(r1),r11	 # SI store
		l.lwz   	r6, 20(r1)
		l.lwz   	r7, 20+4(r1)
	l.jal   	bestBtreeIndex	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.j     	.L8448	# delay slot filled
	l.sfeqi	r20,0
.L8423:
	l.j     	.L8228	# delay slot filled
	l.ori   	r28,r18,0	 # move reg to reg
.L8222:
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r11,r0,0	 # move immediate I
	l.sll   	r8,r2,r8
	l.sw    	12(r1),r11	 # SI store
	l.j     	.L8219	# delay slot filled
	l.sw    	16(r1),r8	 # SI store
.L8421:
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,1	 # move immediate I
		l.sw    	12(r1), r3
		l.sw    	12+4(r1), r4
	l.j     	.L8449	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
.L8237:
	l.addi  	r3,r0,-1	 # move immediate I
	l.lwz   	r2,52(r1)	 # SI load
	l.j     	.L8238	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
.L8424:
	l.addi  	r7,r0,0	 # move immediate I
.L8240:
	l.addi  	r5,r7,-32
	l.sfltsi	r5,0
	l.bf	.L8243	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.sll   	r5,r4,r5
.L8244:
	l.xori  	r5,r5,0xffff
	l.xori  	r7,r7,0xffff
	l.sw    	68(r1),r5	 # SI store
	l.j     	.L8239	# delay slot filled
	l.sw    	72(r1),r7	 # SI store
.L8243:
	l.addi  	r5,r0,1	 # move immediate I
	l.sll   	r7,r5,r7
	l.j     	.L8244	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L8425:
	l.lwz   	r2,0(r8)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC223)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.L8209:
	l.lwz   	r4,48(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,80(r1)	 # SI load
	l.jal   	whereInfoFree	# delay slot filled
	l.sw    	48(r1),r5	 # SI store
.L8208:
	l.lwz   	r11,48(r1)	 # SI load
.L8452:
	l.addi	r1,r1,388
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L8420:
	l.jal   	exprIsConst	# delay slot filled
	l.addi  	r4,r0,3	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L8470	# delay slot filled
	l.lwz   	r7,96(r1)	 # SI load
	l.j     	.L8450	# delay slot filled
	l.lwz   	r6,48(r1)	 # SI load
.L8355:
	l.addi  	r5,r0,-1	 # move immediate I
	l.sw    	76(r1),r5	 # SI store
.L8214:
	l.lwz   	r6,32(r1)	 # SI load
	l.lwz   	r5,64(r6)	 # SI load
	l.sfnei	r5,0
	l.bf	.L8209	# delay slot filled
	l.lwz   	r7,80(r1)	 # SI load
	l.lbz   	r5,30(r7)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L8209	# delay slot filled
	l.lwz   	r8,76(r1)	 # SI load
	l.srli  	r2,r8,26
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
	l.bf	.L8471	# delay slot filled
	l.lwz   	r3,88(r1)	 # SI load
	l.lwz   	r11,60(r1)	 # SI load
	l.sub   	r8,r0,r11
	l.or    	r8,r11,r8
	l.sfgesi	r8,0
	l.bf	.L8471
	l.nop			# nop delay slot
	l.sw    	0(r11),r5	 # SI store
	l.lwz   	r3,88(r1)	 # SI load
.L8471:
	l.andi  	r5,r3,4
	l.sfeqi	r5,0
	l.bf	.L8472	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8472	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.movhi 	r6,hi(-8454144)	 # move immediate M
	l.lwz   	r2,32(r4)	 # SI load
	l.ori   	r6,r6,65535
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.and   	r2,r2,r6
	l.sb    	6(r4),r5	    # movqi
	l.sw    	32(r4),r2	 # SI store
	l.lwz   	r3,32(r1)	 # SI load
.L8472:
	l.jal   	sqlite3CodeVerifySchema	# delay slot filled
	l.addi  	r4,r0,-1	 # move immediate I
	l.lwz   	r7,96(r1)	 # SI load
	l.lhs   	r19,0(r7)	 # extendhisi2_no_sext_mem
	l.sflesi	r19,0
	l.bf	.L8250	# delay slot filled
	l.lwz   	r11,88(r1)	 # SI load
	l.lwz   	r28,32(r1)	 # SI load
	l.addi  	r22,r0,0	 # move immediate I
	l.andi  	r11,r11,16
	l.lbz   	r2,440(r28)	 # zero_extendqisi2
	l.lwz   	r8,48(r1)	 # SI load
	l.movhi 	r26,hi(-1048576)	 # move immediate M
	l.sw    	12(r1),r22	 # SI store
	l.sw    	40(r1),r11	 # SI store
	l.addi  	r20,r8,72
	l.addi  	r18,r8,40
	l.ori   	r26,r26,48576
	l.addi  	r30,r0,-10	 # move immediate I
	l.lwz   	r16,104(r1)	 # SI load
	l.sfnei	r2,2
	l.bnf	.L8426	# delay slot filled
	l.ori   	r22,r7,0	 # move reg to reg
.L8251:
	l.lbz   	r14,0(r20)	 # zero_extendqisi2
.L8451:
	l.add   	r2,r14,r14
	l.lwz   	r3,0(r28)	 # SI load
	l.add   	r4,r2,r14
	l.sw    	20(r1),r2	 # SI store
	l.slli  	r5,r4,4
	l.add   	r4,r4,r5
	l.add   	r4,r4,r14
	l.add   	r4,r22,r4
	l.lwz   	r24,16(r4)	 # SI load
	l.lwz   	r8,72(r24)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L8258	# delay slot filled
	l.ori   	r2,r26,0	 # move reg to reg
	l.lwz   	r11,4(r3)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.sfles 	r11,r2
	l.bf	.L8258
	l.nop			# nop delay slot
	l.lwz   	r4,8(r3)	 # SI load
	l.lwz   	r3,20(r4)	 # SI load
	l.sfeq 	r8,r3
	l.bf	.L8258
	l.nop			# nop delay slot
	l.j     	.L8259	# delay slot filled
	l.addi  	r4,r4,44
.L8260:
	l.lwz   	r7,0(r4)	 # SI load
	l.sfeq 	r8,r7
	l.bf	.L8258	# delay slot filled
	l.addi  	r4,r4,24
.L8259:
	l.addi  	r2,r2,1
	l.sflts 	r2,r11
	l.bf	.L8260
	l.nop			# nop delay slot
.L8258:
	l.lbz   	r3,34(r24)	 # zero_extendqisi2
	l.andi  	r3,r3,2
	l.sfnei	r3,0
	l.bf	.L8261
	l.nop			# nop delay slot
	l.lwz   	r6,28(r24)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L8427	# delay slot filled
	l.movhi 	r5,hi(134217728)	 # move immediate M
.L8261:
	l.lwz   	r2,12(r1)	 # SI load
.L8463:
	l.lhs   	r19,0(r22)	 # extendhisi2_no_sext_mem
	l.addi  	r2,r2,1
	l.addi  	r20,r20,64
	l.sw    	12(r1),r2	 # SI store
	l.sfles 	r19,r2
	l.bf	.L8250	# delay slot filled
	l.addi  	r18,r18,64
	l.lbz   	r2,440(r28)	 # zero_extendqisi2
	l.sfnei	r2,2
	l.bf	.L8251	# delay slot filled
	l.addi  	r16,r16,64
.L8426:
	l.lbz   	r2,0(r20)	 # zero_extendqisi2
	l.add   	r5,r2,r2
	l.movhi  	r4,hi(.LC224)
	l.add   	r5,r5,r2
	l.lwz   	r3,80(r1)	 # SI load
	l.slli  	r6,r5,4
	l.ori   	r4,r4,lo(.LC224)
	l.add   	r5,r5,r6
	l.add   	r2,r5,r2
	l.add   	r2,r22,r2
	l.lwz   	r5,8(r2)	 # SI load
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r2,12(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8252	# delay slot filled
	l.movhi  	r5,hi(.LC225)
	l.lwz   	r3,80(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC225)
	l.sw    	0(r1),r11	 # SI store
	l.jal   	sqlite3MAppendf	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
.L8252:
	l.lwz   	r2,0(r16)	 # SI load
	l.movhi 	r4,hi(983040)	 # move immediate M
	l.and   	r3,r2,r4
	l.sfeqi	r3,0
	l.bnf	.L8428	# delay slot filled
	l.movhi 	r5,hi(268435456)	 # move immediate M
	l.and   	r3,r2,r5
	l.sfeqi	r3,0
	l.bnf	.L8429	# delay slot filled
	l.andi  	r3,r2,12288
	l.sfeqi	r3,0
	l.bnf	.L8430	# delay slot filled
	l.movhi 	r6,hi(134217728)	 # move immediate M
	l.and   	r3,r2,r6
	l.sfeqi	r3,0
	l.bnf	.L8431	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
.L8254:
	l.movhi 	r7,hi(16777216)	 # move immediate M
	l.and   	r2,r2,r7
	l.sfeqi	r2,0
	l.bnf	.L8432	# delay slot filled
	l.movhi  	r5,hi(.LC230)
	l.lbz   	r6,0(r20)	 # zero_extendqisi2
.L8460:
	l.ori   	r8,r11,0	 # move reg to reg
	l.lwz   	r3,84(r1)	 # SI load
	l.addi  	r4,r0,115	 # move immediate I
	l.lwz   	r5,12(r1)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r11,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L8451	# delay slot filled
	l.lbz   	r14,0(r20)	 # zero_extendqisi2
.L8250:
	l.lwz   	r3,84(r1)	 # SI load
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r2,12(r3)	 # SI load
	l.sflesi	r19,0
	l.bf	.L8208	# delay slot filled
	l.sw    	12(r4),r2	 # SI store
	l.lwz   	r5,88(r1)	 # SI load
	l.addi  	r6,r4,72
	l.andi  	r2,r5,64
	l.addi  	r8,r4,44
	l.sub   	r5,r0,r2
	l.addi  	r11,r4,76
	l.or    	r2,r5,r2
	l.addi  	r7,r4,64
	l.xori  	r2,r2,0xffff
	l.sw    	28(r1),r6	 # SI store
	l.srli  	r2,r2,31
	l.sw    	56(r1),r8	 # SI store
	l.sw    	64(r1),r11	 # SI store
	l.lwz   	r5,48(r1)	 # SI load
	l.lwz   	r6,48(r1)	 # SI load
	l.lwz   	r8,88(r1)	 # SI load
	l.lwz   	r11,88(r1)	 # SI load
	l.addi  	r3,r4,60
	l.sw    	76(r1),r7	 # SI store
	l.sw    	164(r1),r2	 # SI store
	l.addi  	r5,r5,40
	l.addi  	r2,r4,80
	l.addi  	r6,r6,36
	l.addi  	r4,r4,56
	l.addi  	r7,r0,0	 # move immediate I
	l.andi  	r8,r8,8
	l.andi  	r11,r11,1
	l.sw    	80(r1),r2	 # SI store
	l.sw    	84(r1),r3	 # SI store
	l.addi  	r2,r0,-1	 # move immediate I
	l.addi  	r3,r0,-1	 # move immediate I
	l.sw    	124(r1),r4	 # SI store
	l.sw    	104(r1),r5	 # SI store
	l.sw    	128(r1),r6	 # SI store
	l.sw    	68(r1),r7	 # SI store
	l.sw    	144(r1),r8	 # SI store
	l.sw    	152(r1),r11	 # SI store
		l.sw    	32(r1), r2
		l.sw    	32+4(r1), r3
.L8354:
	l.lwz   	r3,28(r1)	 # SI load
	l.lwz   	r4,68(r1)	 # SI load
	l.lbz   	r18,0(r3)	 # zero_extendqisi2
	l.add   	r14,r18,r18
	l.slli  	r11,r4,6
	l.add   	r7,r14,r18
	l.lwz   	r5,48(r1)	 # SI load
	l.slli  	r4,r7,4
	l.lwz   	r30,8(r5)	 # SI load
	l.lwz   	r6,92(r1)	 # SI load
	l.add   	r4,r7,r4
	l.lwz   	r20,0(r6)	 # SI load
	l.add   	r4,r4,r18
	l.addi  	r11,r11,32
	l.movhi 	r7,hi(8388608)	 # move immediate M
	l.add   	r4,r30,r4
	l.and   	r7,r20,r7
	l.lwz   	r8,28(r5)	 # SI load
	l.add   	r11,r5,r11
	l.lwz   	r4,28(r4)	 # SI load
	l.lwz   	r22,0(r5)	 # SI load
	l.sw    	140(r1),r7	 # SI store
	l.sw    	20(r1),r8	 # SI store
	l.sw    	60(r1),r11	 # SI store
	l.sw    	12(r1),r4	 # SI store
	l.sfeqi	r7,0
	l.bf	.L8270	# delay slot filled
	l.lwz   	r28,12(r22)	 # SI load
	l.lwz   	r11,164(r1)	 # SI load
	l.sw    	140(r1),r11	 # SI store
.L8270:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,124(r1)	 # SI load
	l.lwz   	r2,84(r1)	 # SI load
	l.sw    	44(r1),r11	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	0(r2),r11	 # SI store
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	0(r4),r11	 # SI store
	l.lwz   	r5,28(r1)	 # SI load
	l.sw    	88(r1),r11	 # SI store
	l.lwz   	r6,76(r1)	 # SI load
	l.lbz   	r7,0(r5)	 # zero_extendqisi2
	l.sfeqi	r7,0
	l.bf	.L8271	# delay slot filled
	l.sw    	0(r6),r11	 # SI store
	l.add   	r12,r14,r18
	l.slli  	r7,r12,4
	l.add   	r7,r12,r7
	l.add   	r7,r7,r18
	l.add   	r7,r30,r7
	l.lbz   	r7,25(r7)	 # zero_extendqisi2
	l.andi  	r7,r7,8
	l.sfeqi	r7,0
	l.bnf	.L8433	# delay slot filled
	l.lwz   	r8,56(r1)	 # SI load
.L8271:
	l.lwz   	r11,92(r1)	 # SI load
.L8455:
	l.movhi 	r3,hi(134217728)	 # move immediate M
	l.lwz   	r13,0(r11)	 # SI load
	l.and   	r2,r13,r3
	l.sfeqi	r2,0
	l.bnf	.L8434	# delay slot filled
	l.andi  	r16,r13,4096
	l.sfeqi	r16,0
	l.bf	.L8283	# delay slot filled
	l.srli  	r7,r20,25
	l.lbz   	r7,21(r22)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L8284	# delay slot filled
	l.addi  	r7,r7,-1
	l.lwz   	r7,72(r22)	 # SI load
	l.addi  	r24,r7,1
	l.sw    	72(r22),r24	 # SI store
.L8285:
	l.addi  	r8,r0,3	 # move immediate I
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r11,r0,0	 # move immediate I
		l.lwz   	r6, 32(r1)
		l.lwz   	r7, 32+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r5,60(r1)	 # SI load
	l.jal   	codeEqualityTerm	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.lwz   	r2,84(r1)	 # SI load
	l.addi  	r4,r0,38	 # move immediate I
	l.lwz   	r14,0(r2)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r5,12(r1)	 # SI load
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,46	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3ExprCacheStore	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.addi  	r4,r0,24	 # movqi: move immediate
	l.lwz   	r3,28(r1)	 # SI load
	l.sb    	1(r3),r4	    # movqi
.L8282:
	l.lwz   	r4,20(r1)	 # SI load
.L8457:
	l.lwz   	r8,4(r4)	 # SI load
	l.lwz   	r13,0(r8)	 # SI load
	l.sflesi	r13,0
	l.bf	.L8387	# delay slot filled
	l.lwz   	r5,12(r1)	 # SI load
	l.lwz   	r12,4(r8)	 # SI load
	l.sfeq 	r5,r12
	l.bf	.L8435	# delay slot filled
	l.addi  	r8,r8,8
	l.addi  	r12,r0,0	 # move immediate I
	l.j     	.L8339	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
.L8342:
	l.lwz   	r2,0(r8)	 # SI load
	l.sfne 	r3,r2
	l.bnf	.L8337	# delay slot filled
	l.addi  	r8,r8,4
.L8339:
	l.addi  	r12,r12,1
	l.sflts 	r12,r13
	l.bf	.L8342	# delay slot filled
	l.addi  	r6,r0,-1	 # move immediate I
	l.addi  	r7,r0,-1	 # move immediate I
		l.sw    	116(r1), r6
		l.sw    	116+4(r1), r7
.L8336:
	l.lwz   	r2,36(r1)	 # SI load
.L8462:
	l.lwz   	r8,32(r1)	 # SI load
	l.lwz   	r3,120(r1)	 # SI load
	l.lwz   	r11,116(r1)	 # SI load
	l.and   	r18,r2,r3
	l.and   	r20,r8,r11
	l.lwz   	r5,20(r1)	 # SI load
	l.ori   	r2,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r16,12(r5)	 # SI load
		l.sw    	32(r1), r2
		l.sw    	32+4(r1), r3
	l.sfgtsi	r16,0
	l.bnf	.L8436	# delay slot filled
	l.lwz   	r14,20(r5)	 # SI load
	l.lwz   	r8,56(r1)	 # SI load
	l.addi  	r14,r14,18
	l.lwz   	r12,0(r8)	 # SI load
	l.lwz   	r26,88(r1)	 # SI load
	l.ori   	r13,r12,0	 # move reg to reg
	l.ori   	r30,r8,0	 # move reg to reg
.L8350:
	l.lbz   	r2,0(r14)	 # zero_extendqisi2
	l.andi  	r2,r2,6
	l.sfeqi	r2,0
	l.bnf	.L8418
	l.nop			# nop delay slot
	l.lwz   	r4,14(r14)	 # SI load
	l.lwz   	r2,18(r14)	 # SI load
	l.and   	r4,r4,r20
	l.and   	r2,r2,r18
	l.or    	r2,r4,r2
	l.sfeqi	r2,0
	l.bnf	.L8418	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r2,-18(r14)	 # SI load
	l.ori   	r5,r26,0	 # move reg to reg
	l.addi  	r6,r0,8	 # move immediate I
	l.sfeqi	r12,0
	l.bf	.L8349	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lhz   	r2,2(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
	l.bf	.L8346
	l.nop			# nop delay slot
.L8349:
	l.jal   	sqlite3ExprIfFalse
	l.nop			# nop delay slot
	l.lbz   	r2,0(r14)	 # zero_extendqisi2
	l.ori   	r2,r2,4
	l.sb    	0(r14),r2	    # movqi
	l.lwz   	r12,0(r30)	 # SI load
.L8418:
	l.ori   	r13,r12,0	 # move reg to reg
.L8346:
	l.addi  	r16,r16,-1
	l.sfgtsi	r16,0
	l.bf	.L8350	# delay slot filled
	l.addi  	r14,r14,40
.L8344:
	l.sfeqi	r13,0
	l.bnf	.L8437	# delay slot filled
	l.lwz   	r11,56(r1)	 # SI load
.L8351:
	l.lwz   	r5,68(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r5,r5,1
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.sw    	68(r1),r5	 # SI store
	l.lwz   	r6,76(r1)	 # SI load
	l.lwz   	r11,28(r1)	 # SI load
	l.lwz   	r2,92(r1)	 # SI load
	l.lwz   	r3,0(r6)	 # SI load
	l.lwz   	r7,96(r1)	 # SI load
	l.lwz   	r8,48(r1)	 # SI load
	l.addi  	r11,r11,64
	l.addi  	r2,r2,64
	l.addi  	r6,r6,64
	l.lhs   	r4,0(r7)	 # extendhisi2_no_sext_mem
	l.lwz   	r5,64(r1)	 # SI load
	l.sw    	16(r8),r3	 # SI store
	l.lwz   	r7,84(r1)	 # SI load
	l.lwz   	r3,56(r1)	 # SI load
	l.lwz   	r8,124(r1)	 # SI load
	l.sw    	28(r1),r11	 # SI store
	l.sw    	92(r1),r2	 # SI store
	l.lwz   	r11,104(r1)	 # SI load
	l.lwz   	r2,128(r1)	 # SI load
	l.sw    	76(r1),r6	 # SI store
	l.lwz   	r6,80(r1)	 # SI load
	l.addi  	r3,r3,64
	l.addi  	r5,r5,64
	l.addi  	r6,r6,64
	l.addi  	r7,r7,64
	l.addi  	r8,r8,64
	l.addi  	r11,r11,64
	l.addi  	r2,r2,64
	l.sw    	56(r1),r3	 # SI store
	l.sw    	64(r1),r5	 # SI store
	l.lwz   	r3,68(r1)	 # SI load
	l.sw    	80(r1),r6	 # SI store
	l.sw    	84(r1),r7	 # SI store
	l.sw    	124(r1),r8	 # SI store
	l.sw    	104(r1),r11	 # SI store
	l.sfgts 	r4,r3
	l.bf	.L8354	# delay slot filled
	l.sw    	128(r1),r2	 # SI store
	l.j     	.L8452	# delay slot filled
	l.lwz   	r11,48(r1)	 # SI load
.L8435:
	l.addi  	r12,r0,0	 # move immediate I
.L8337:
	l.addi  	r14,r12,-32
	l.sfltsi	r14,0
	l.bf	.L8340	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
	l.addi  	r13,r0,1	 # move immediate I
	l.addi  	r12,r0,0	 # move immediate I
	l.sll   	r13,r13,r14
.L8341:
	l.xori  	r13,r13,0xffff
	l.xori  	r12,r12,0xffff
	l.sw    	116(r1),r13	 # SI store
	l.j     	.L8336	# delay slot filled
	l.sw    	120(r1),r12	 # SI store
.L8437:
	l.lwz   	r12,12(r28)	 # SI load
	l.lwz   	r2,28(r1)	 # SI load
	l.addi  	r4,r0,48	 # move immediate I
	l.sw    	-4(r2),r12	 # SI store
	l.addi  	r5,r0,1	 # move immediate I
	l.lwz   	r6,0(r11)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r12,12(r3)	 # SI load
	l.sflesi	r12,0
	l.bf	.L8351	# delay slot filled
	l.lwz   	r14,20(r3)	 # SI load
	l.addi  	r14,r14,18
	l.j     	.L8353	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L8352:
	l.sflts 	r16,r12
.L8473:
	l.bnf	.L8351	# delay slot filled
	l.addi  	r14,r14,40
.L8353:
	l.lbz   	r2,0(r14)	 # zero_extendqisi2
	l.andi  	r2,r2,6
	l.sfnei	r2,0
	l.bf	.L8352	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r4,14(r14)	 # SI load
	l.lwz   	r2,18(r14)	 # SI load
	l.and   	r4,r4,r20
	l.and   	r2,r2,r18
	l.or    	r2,r4,r2
	l.sfnei	r2,0
	l.bf	.L8473	# delay slot filled
	l.sflts 	r16,r12
	l.lwz   	r4,-18(r14)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r5,88(r1)	 # SI load
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.addi  	r6,r0,8	 # move immediate I
	l.lbz   	r2,0(r14)	 # zero_extendqisi2
	l.ori   	r2,r2,4
	l.sb    	0(r14),r2	    # movqi
	l.lwz   	r4,20(r1)	 # SI load
	l.j     	.L8352	# delay slot filled
	l.lwz   	r12,12(r4)	 # SI load
.L8283:
	l.andi  	r15,r13,8192
	l.andi  	r7,r7,1
	l.sfeqi	r15,0
	l.bnf	.L8438	# delay slot filled
	l.sw    	40(r1),r7	 # SI store
	l.movhi 	r5,hi(196608)	 # move immediate M
	l.and   	r16,r13,r5
	l.sfeqi	r16,0
	l.bf	.L8298	# delay slot filled
	l.movhi 	r3,hi(268435456)	 # move immediate M
	l.addi  	r7,r0,54	 # move immediate I
	l.addi  	r6,r0,122	 # move immediate I
	l.sw    	236(r1),r7	 # SI store
	l.addi  	r7,r0,63	 # move immediate I
	l.addi  	r8,r0,123	 # move immediate I
	l.sw    	332(r1),r7	 # SI store
	l.addi  	r11,r0,70	 # move immediate I
	l.addi  	r7,r0,41	 # move immediate I
	l.addi  	r2,r0,109	 # move immediate I
	l.addi  	r3,r0,55	 # move immediate I
	l.addi  	r4,r0,24	 # move immediate I
	l.lwz   	r5,152(r1)	 # SI load
	l.sw    	232(r1),r6	 # SI store
	l.sw    	240(r1),r8	 # SI store
	l.sw    	244(r1),r11	 # SI store
	l.sw    	336(r1),r7	 # SI store
	l.sw    	224(r1),r15	 # SI store
	l.sw    	228(r1),r15	 # SI store
	l.sw    	248(r1),r2	 # SI store
	l.sw    	252(r1),r3	 # SI store
	l.sw    	328(r1),r4	 # SI store
	l.lwz   	r6,128(r1)	 # SI load
	l.sw    	108(r1),r5	 # SI store
	l.lwz   	r7,104(r1)	 # SI load
	l.lwz   	r26,0(r6)	 # SI load
	l.lwz   	r7,0(r7)	 # SI load
	l.lwz   	r11,28(r1)	 # SI load
	l.slli  	r12,r26,2
	l.lwz   	r8,8(r7)	 # SI load
	l.lwz   	r11,-20(r11)	 # SI load
	l.add   	r8,r8,r12
	l.sw    	100(r1),r7	 # SI store
	l.sw    	136(r1),r11	 # SI store
	l.sfeqi	r5,0
	l.bf	.L8299	# delay slot filled
	l.lwz   	r14,0(r8)	 # SI load
	l.movhi 	r2,hi(16777216)	 # move immediate M
	l.and   	r2,r13,r2
	l.sfeqi	r2,0
	l.bf	.L8299	# delay slot filled
	l.sw    	108(r1),r2	 # SI store
	l.addi  	r3,r0,1	 # move immediate I
	l.lwz   	r12,4(r7)	 # SI load
	l.sflts 	r26,r12
	l.bf	.L8299	# delay slot filled
	l.sw    	108(r1),r3	 # SI store
	l.sw    	108(r1),r15	 # SI store
.L8299:
	l.movhi 	r4,hi(1048576)	 # move immediate M
	l.and   	r8,r13,r4
	l.sfeqi	r8,0
	l.bnf	.L8439	# delay slot filled
	l.lwz   	r6,100(r1)	 # SI load
	l.lwz   	r12,108(r1)	 # SI load
	l.sw    	44(r1),r8	 # SI store
.L8301:
	l.lwz   	r7,92(r1)	 # SI load
	l.movhi 	r11,hi(2097152)	 # move immediate M
	l.lwz   	r8,0(r7)	 # SI load
	l.and   	r11,r8,r11
	l.sfeqi	r11,0
	l.bf	.L8302	# delay slot filled
	l.sw    	52(r1),r11	 # SI store
	l.lwz   	r2,100(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.ori   	r5,r14,0	 # move reg to reg
	l.sw    	0(r1),r2	 # SI store
		l.lwz   	r6, 32(r1)
		l.lwz   	r7, 32+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.addi  	r8,r0,36	 # move immediate I
	l.addi  	r12,r0,1	 # move immediate I
	l.sw    	52(r1),r11	 # SI store
.L8302:
	l.lwz   	r3,128(r1)	 # SI load
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r24,0(r3)	 # SI load
	l.lwz   	r13,72(r22)	 # SI load
	l.add   	r12,r12,r24
	l.lwz   	r4,-24(r4)	 # SI load
	l.sw    	132(r1),r12	 # SI store
	l.sw    	112(r1),r4	 # SI store
	l.add   	r8,r12,r13
	l.lwz   	r5,104(r1)	 # SI load
	l.lwz   	r14,12(r22)	 # SI load
	l.lwz   	r16,0(r5)	 # SI load
	l.sw    	72(r22),r8	 # SI store
	l.sflesi	r24,0
	l.bf	.L8303	# delay slot filled
	l.addi  	r30,r13,1
	l.addi  	r20,r0,0	 # move immediate I
	l.sw    	156(r1),r28	 # SI store
	l.sw    	160(r1),r26	 # SI store
	l.sw    	148(r1),r24	 # SI store
	l.ori   	r26,r22,0	 # move reg to reg
	l.ori   	r18,r20,0	 # move reg to reg
	l.lwz   	r22,60(r1)	 # SI load
	l.ori   	r28,r14,0	 # move reg to reg
	l.j     	.L8307	# delay slot filled
	l.ori   	r24,r16,0	 # move reg to reg
.L8306:
	l.addi  	r18,r18,1
	l.lwz   	r8,148(r1)	 # SI load
	l.sfgts 	r8,r18
	l.bnf	.L8416
	l.nop			# nop delay slot
.L8307:
	l.lwz   	r2,8(r24)	 # SI load
	l.sw    	0(r1),r24	 # SI store
	l.add   	r2,r2,r20
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r4,112(r1)	 # SI load
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r8,0(r22)	 # SI load
		l.lwz   	r6, 32(r1)
		l.lwz   	r7, 32+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.add   	r14,r30,r18
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L8416	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.jal   	codeEqualityTerm
	l.nop			# nop delay slot
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.sfeq 	r14,r11
	l.bf	.L8304	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.lwz   	r7,132(r1)	 # SI load
	l.sfnei	r7,1
	l.bnf	.L8440
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeAddOp2
	l.nop			# nop delay slot
.L8304:
	l.lhz   	r2,16(r16)	 # zero_extendqisi2
.L8454:
	l.andi  	r2,r2,129
	l.sfnei	r2,0
	l.bf	.L8306	# delay slot filled
	l.addi  	r20,r20,4
	l.add   	r5,r30,r18
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,71	 # move immediate I
	l.lwz   	r6,24(r22)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r18,r18,1
	l.lwz   	r8,148(r1)	 # SI load
	l.sfgts 	r8,r18
	l.bf	.L8307
	l.nop			# nop delay slot
.L8416:
	l.ori   	r22,r26,0	 # move reg to reg
	l.lwz   	r28,156(r1)	 # SI load
	l.lwz   	r26,160(r1)	 # SI load
.L8303:
	l.lwz   	r11,100(r1)	 # SI load
	l.lwz   	r2,84(r1)	 # SI load
	l.lwz   	r12,40(r11)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.add   	r8,r12,r26
	l.sw    	112(r1),r2	 # SI store
	l.lwz   	r3,40(r1)	 # SI load
	l.lbz   	r8,0(r8)	 # zero_extendqisi2
	l.addi  	r8,r8,-1
	l.srli  	r8,r8,31
	l.sfeq 	r3,r8
	l.bf	.L8308	# delay slot filled
	l.lwz   	r8,44(r1)	 # SI load
	l.lwz   	r4,52(r1)	 # SI load
	l.sw    	52(r1),r8	 # SI store
	l.sw    	44(r1),r4	 # SI store
.L8308:
	l.lwz   	r5,44(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L8309	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.lhz   	r8,16(r5)	 # zero_extendqisi2
	l.andi  	r8,r8,40
	l.sub   	r8,r0,r8
	l.srli  	r14,r8,31
.L8309:
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r7,52(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L8310	# delay slot filled
	l.sw    	132(r1),r6	 # SI store
	l.lhz   	r8,16(r7)	 # zero_extendqisi2
	l.andi  	r8,r8,40
	l.sub   	r8,r0,r8
	l.srli  	r8,r8,31
	l.sw    	132(r1),r8	 # SI store
.L8310:
	l.lwz   	r8,44(r1)	 # SI load
	l.srai  	r15,r26,31
	l.sub   	r13,r0,r8
	l.sfeqi	r8,0
	l.or    	r13,r8,r13
	l.sub   	r8,r15,r26
	l.or    	r8,r8,r13
	l.bf	.L8311	# delay slot filled
	l.srli  	r24,r8,31
	l.lwz   	r11,44(r1)	 # SI load
	l.add   	r16,r30,r26
	l.lwz   	r15,0(r11)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r4,24(r15)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.addi  	r18,r26,1
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,71	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,112(r1)	 # SI load
.L8312:
	l.ori   	r3,r22,0	 # move reg to reg
.L8461:
	l.ori   	r4,r30,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r6,100(r1)	 # SI load
	l.jal   	codeApplyAffinity	# delay slot filled
	l.add   	r14,r14,r14
	l.slli  	r13,r24,2
	l.lwz   	r4,40(r1)	 # SI load
	l.addi  	r11,r1,344
	l.add   	r12,r4,r13
	l.addi  	r2,r0,-14	 # move immediate I
	l.add   	r12,r12,r14
	l.sw    	0(r1),r2	 # SI store
	l.slli  	r12,r12,2
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r5,136(r1)	 # SI load
	l.add   	r12,r11,r12
	l.lwz   	r6,112(r1)	 # SI load
	l.ori   	r7,r30,0	 # move reg to reg
	l.ori   	r8,r18,0	 # move reg to reg
	l.lwz   	r4,-120(r12)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.ori   	r20,r26,0	 # move reg to reg
	l.lwz   	r3,52(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8313	# delay slot filled
	l.add   	r16,r30,r26
	l.addi  	r13,r22,112
	l.addi  	r15,r22,105
	l.j     	.L8317	# delay slot filled
	l.addi  	r14,r0,10	 # move immediate I
.L8314:
	l.addi  	r13,r13,24
	l.sfnei	r14,0
	l.bnf	.L8441	# delay slot filled
	l.addi  	r15,r15,24
.L8317:
	l.lwz   	r2,0(r13)	 # SI load
	l.sfne 	r16,r2
	l.bf	.L8314	# delay slot filled
	l.addi  	r14,r14,-1
	l.lbz   	r2,0(r15)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L8474	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lbz   	r2,21(r22)	 # zero_extendqisi2
	l.addi  	r3,r2,6
	l.addi  	r4,r2,1
	l.sfgtui	r2,7
	l.bf	.L8316	# delay slot filled
	l.slli  	r3,r3,2
	l.add   	r2,r22,r3
	l.sb    	21(r22),r4	    # movqi
	l.sw    	0(r2),r16	 # SI store
.L8316:
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sb    	0(r15),r4	    # movqi
	l.addi  	r5,r0,0	 # move immediate I
.L8474:
	l.j     	.L8314	# delay slot filled
	l.sw    	0(r13),r5	 # SI store
.L8434:
	l.lwz   	r4,104(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r24,0(r4)	 # SI load
	l.lwz   	r16,0(r24)	 # SI load
	l.lwz   	r18,16(r24)	 # SI load
	l.addi  	r5,r16,2
	l.lwz   	r20,4(r24)	 # SI load
	l.ori   	r4,r5,0	 # move reg to reg
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.sw    	40(r1),r5	 # SI store
	l.sfgtsi	r16,0
	l.bnf	.L8442	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.addi  	r14,r0,1	 # move immediate I
	l.sw    	52(r1),r24	 # SI store
	l.add   	r26,r11,r14
	l.ori   	r24,r22,0	 # move reg to reg
	l.ori   	r30,r28,0	 # move reg to reg
	l.ori   	r22,r18,0	 # move reg to reg
	l.ori   	r28,r26,0	 # move reg to reg
	l.ori   	r18,r16,0	 # move reg to reg
	l.ori   	r26,r20,0	 # move reg to reg
	l.sw    	100(r1),r11	 # SI store
	l.ori   	r16,r14,0	 # move reg to reg
	l.lwz   	r20,20(r1)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
.L8475:
	l.addi  	r14,r0,0	 # move immediate I
.L8277:
	l.lwz   	r2,0(r4)	 # SI load
	l.sfne 	r2,r16
	l.bnf	.L8443	# delay slot filled
	l.addi  	r4,r4,8
	l.addi  	r14,r14,1
	l.sfgts 	r18,r14
	l.bf	.L8277	# delay slot filled
	l.sfeq 	r18,r14
.L8453:
	l.bf	.L8415
	l.nop			# nop delay slot
	l.addi  	r16,r16,1
	l.sfges 	r18,r16
	l.bf	.L8475	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
.L8415:
	l.ori   	r20,r26,0	 # move reg to reg
	l.ori   	r14,r16,0	 # move reg to reg
	l.ori   	r26,r28,0	 # move reg to reg
	l.ori   	r16,r18,0	 # move reg to reg
	l.ori   	r28,r30,0	 # move reg to reg
	l.ori   	r18,r22,0	 # move reg to reg
	l.lwz   	r30,100(r1)	 # SI load
	l.ori   	r22,r24,0	 # move reg to reg
	l.lwz   	r24,52(r1)	 # SI load
.L8274:
	l.addi  	r4,r0,48	 # move immediate I
	l.lwz   	r5,20(r24)	 # SI load
	l.ori   	r6,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r14,-1
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r26,0	 # move reg to reg
	l.lwz   	r12,28(r24)	 # SI load
	l.lwz   	r8,24(r24)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L8278	# delay slot filled
	l.addi  	r13,r0,-2	 # move immediate I
	l.addi  	r13,r0,-11	 # move immediate I
.L8278:
	l.lwz   	r6,44(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,103	 # move immediate I
	l.lwz   	r5,12(r1)	 # SI load
	l.ori   	r7,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r13	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.sfles 	r16,r6
	l.bf	.L8279	# delay slot filled
	l.sw    	28(r24),r6	 # SI store
	l.addi  	r18,r18,4
	l.addi  	r20,r20,8
	l.ori   	r14,r6,0	 # move reg to reg
	l.lwz   	r24,20(r1)	 # SI load
	l.j     	.L8281	# delay slot filled
	l.lwz   	r26,60(r1)	 # SI load
.L8280:
	l.addi  	r18,r18,8
	l.sfgts 	r16,r14
	l.bnf	.L8279	# delay slot filled
	l.addi  	r20,r20,12
.L8281:
	l.lbz   	r2,0(r18)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L8280	# delay slot filled
	l.addi  	r14,r14,1
	l.lwz   	r2,0(r20)	 # SI load
	l.lwz   	r4,20(r24)	 # SI load
	l.slli  	r5,r2,3
	l.slli  	r2,r2,5
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r18,r18,8
	l.add   	r2,r5,r2
	l.addi  	r20,r20,12
	l.jal   	disableTerm	# delay slot filled
	l.add   	r4,r4,r2
	l.sfgts 	r16,r14
	l.bf	.L8281
	l.nop			# nop delay slot
.L8279:
	l.lwz   	r7,28(r1)	 # SI load
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.sb    	1(r7),r8	    # movqi
	l.lwz   	r2,12(r1)	 # SI load
	l.lwz   	r11,64(r1)	 # SI load
	l.lwz   	r3,80(r1)	 # SI load
	l.sw    	0(r11),r2	 # SI store
	l.lwz   	r4,40(r1)	 # SI load
	l.lwz   	r12,12(r28)	 # SI load
	l.sw    	0(r3),r12	 # SI store
	l.lwz   	r12,56(r22)	 # SI load
	l.sfles 	r4,r12
	l.bf	.L8282	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
	l.sw    	56(r22),r4	 # SI store
	l.j     	.L8282	# delay slot filled
	l.sw    	60(r22),r30	 # SI store
.L8443:
	l.add   	r4,r14,r14
	l.lwz   	r6,20(r20)	 # SI load
	l.add   	r4,r4,r14
	l.ori   	r3,r24,0	 # move reg to reg
	l.slli  	r4,r4,2
	l.add   	r5,r28,r16
	l.add   	r4,r26,r4
	l.lwz   	r4,8(r4)	 # SI load
	l.slli  	r2,r4,3
	l.slli  	r4,r4,5
	l.add   	r2,r2,r4
	l.add   	r2,r6,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
	l.j     	.L8453	# delay slot filled
	l.sfeq 	r18,r14
.L8440:
	l.ori   	r4,r30,0	 # move reg to reg
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L8454	# delay slot filled
	l.lhz   	r2,16(r16)	 # zero_extendqisi2
.L8284:
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r8,r7,6
	l.sb    	21(r22),r7	    # movqi
	l.slli  	r7,r8,2
	l.add   	r7,r22,r7
	l.j     	.L8285	# delay slot filled
	l.lwz   	r24,0(r7)	 # SI load
.L8433:
	l.lwz   	r7,72(r22)	 # SI load
	l.addi  	r7,r7,1
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	72(r22),r7	 # SI store
	l.addi  	r4,r0,48	 # move immediate I
	l.sw    	0(r8),r7	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r7,0	 # move reg to reg
	l.j     	.L8455	# delay slot filled
	l.lwz   	r11,92(r1)	 # SI load
.L8441:
	l.lwz   	r6,52(r1)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r12,0(r6)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,24(r12)	 # SI load
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.addi  	r20,r26,1
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,71	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,112(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r30,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	codeApplyAffinity	# delay slot filled
	l.lwz   	r6,100(r1)	 # SI load
.L8313:
	l.lwz   	r7,52(r1)	 # SI load
	l.sub   	r13,r0,r26
	l.sub   	r12,r0,r7
	l.or    	r13,r13,r26
	l.or    	r12,r7,r12
	l.lwz   	r8,40(r1)	 # SI load
	l.or    	r12,r13,r12
	l.addi  	r14,r8,1
	l.srli  	r12,r12,31
	l.lwz   	r13,12(r28)	 # SI load
	l.lwz   	r11,80(r1)	 # SI load
	l.mul   	r12,r12,r14
	l.slli  	r12,r12,2
	l.addi  	r2,r1,344
	l.sw    	0(r11),r13	 # SI store
	l.add   	r12,r2,r12
	l.lwz   	r12,-16(r12)	 # SI load
	l.sfeqi	r12,24
	l.bf	.L8318	# delay slot filled
	l.addi  	r11,r0,-14	 # move immediate I
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.lwz   	r5,136(r1)	 # SI load
	l.lwz   	r6,112(r1)	 # SI load
	l.ori   	r7,r30,0	 # move reg to reg
	l.ori   	r8,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r14,20(r28)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L8318	# delay slot filled
	l.lwz   	r2,40(r1)	 # SI load
	l.lwz   	r12,12(r28)	 # SI load
	l.addi  	r8,r12,-1
	l.lwz   	r3,132(r1)	 # SI load
	l.slli  	r12,r8,2
	l.slli  	r8,r8,4
	l.xor   	r13,r2,r3
	l.add   	r7,r12,r8
	l.add   	r7,r14,r7
	l.sb    	3(r7),r13	    # movqi
.L8318:
	l.lbz   	r12,21(r22)	 # zero_extendqisi2
	l.sfnei	r12,0
	l.bf	.L8319	# delay slot filled
	l.addi  	r7,r12,-1
	l.lwz   	r8,72(r22)	 # SI load
	l.addi  	r14,r8,1
	l.sw    	72(r22),r14	 # SI store
.L8320:
	l.lwz   	r4,92(r1)	 # SI load
	l.movhi 	r5,hi(3145728)	 # move immediate M
	l.lwz   	r8,0(r4)	 # SI load
	l.and   	r8,r8,r5
	l.sfeqi	r8,0
	l.bf	.L8476	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.lwz   	r5,136(r1)	 # SI load
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,71	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,88(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
.L8476:
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
	l.lwz   	r3,60(r1)	 # SI load
	l.jal   	disableTerm	# delay slot filled
	l.lwz   	r4,44(r1)	 # SI load
	l.lwz   	r3,60(r1)	 # SI load
	l.jal   	disableTerm	# delay slot filled
	l.lwz   	r4,52(r1)	 # SI load
	l.lwz   	r6,140(r1)	 # SI load
	l.sfne 	r6,r24
	l.bf	.L8477	# delay slot filled
	l.lwz   	r7,40(r1)	 # SI load
	l.lbz   	r8,21(r22)	 # zero_extendqisi2
	l.sfne 	r8,r24
	l.bf	.L8323	# delay slot filled
	l.addi  	r7,r8,-1
	l.lwz   	r8,72(r22)	 # SI load
	l.addi  	r24,r8,1
	l.sw    	72(r22),r24	 # SI store
.L8324:
	l.lwz   	r5,136(r1)	 # SI load
	l.ori   	r6,r24,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,57	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3ExprCacheStore	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,5	 # move immediate I
	l.lwz   	r5,12(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.lwz   	r7,40(r1)	 # SI load
.L8477:
	l.sfeqi	r7,0
	l.bf	.L8325	# delay slot filled
	l.addi  	r12,r0,106	 # move immediate I
	l.addi  	r12,r0,49	 # move immediate I
.L8325:
	l.lwz   	r8,28(r1)	 # SI load
	l.sb    	1(r8),r12	    # movqi
	l.lwz   	r2,136(r1)	 # SI load
	l.lwz   	r11,64(r1)	 # SI load
	l.j     	.L8282	# delay slot filled
	l.sw    	0(r11),r2	 # SI store
.L8340:
	l.addi  	r13,r0,0	 # move immediate I
	l.j     	.L8341	# delay slot filled
	l.sll   	r12,r8,r12
.L8298:
	l.and   	r13,r13,r3
	l.sfeqi	r13,0
	l.bf	.L8326	# delay slot filled
	l.movhi  	r3,hi(aStep.20566)
	l.lwz   	r7,72(r22)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r7,r7,1
	l.sw    	72(r22),r7	 # SI store
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	40(r1),r7	 # SI store
	l.add   	r13,r14,r18
	l.sw    	100(r1),r11	 # SI store
	l.slli  	r12,r13,4
	l.lwz   	r4,104(r1)	 # SI load
	l.addi  	r6,r0,1	 # movhi: move immediate
	l.add   	r12,r13,r12
	l.lwz   	r4,0(r4)	 # SI load
	l.add   	r12,r12,r18
	l.sw    	108(r1),r4	 # SI store
	l.add   	r12,r30,r12
	l.lwz   	r20,12(r4)	 # SI load
	l.addi  	r3,r1,172
	l.addi  	r5,r0,52	 # move immediate I
	l.addi  	r4,r12,4
	l.sh    	168(r1),r6	 # movhi
	l.jal   	memcpy	# delay slot filled
	l.sh    	170(r1),r6	 # movhi
	l.lwz   	r7,144(r1)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L8444	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	44(r1),r16	 # SI store
	l.sw    	52(r1),r16	 # SI store
.L8464:
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,40(r1)	 # SI load
	l.lwz   	r15,12(r20)	 # SI load
	l.sflesi	r15,0
	l.bf	.L8328	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.add   	r14,r14,r18
	l.addi  	r24,r0,0	 # move immediate I
	l.slli  	r13,r14,4
	l.ori   	r16,r24,0	 # move reg to reg
	l.add   	r13,r14,r13
	l.add   	r8,r13,r18
	l.add   	r8,r30,r8
	l.j     	.L8333	# delay slot filled
	l.addi  	r18,r8,16
.L8330:
	l.addi  	r16,r16,1
	l.sflts 	r16,r15
	l.bnf	.L8328	# delay slot filled
	l.addi  	r24,r24,40
.L8333:
	l.lwz   	r2,20(r20)	 # SI load
	l.lwz   	r11,12(r1)	 # SI load
	l.add   	r8,r2,r24
	l.lwz   	r2,8(r8)	 # SI load
	l.sfeq 	r11,r2
	l.bf	.L8329
	l.nop			# nop delay slot
	l.lhz   	r2,16(r8)	 # zero_extendqisi2
	l.sfnei	r2,512
	l.bf	.L8330
	l.nop			# nop delay slot
.L8329:
	l.lwz   	r5,0(r8)	 # SI load
	l.addi  	r7,r0,112	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r4,r1,168
	l.jal   	sqlite3WhereBegin	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.ori   	r30,r11,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.lwz   	r6,12(r1)	 # SI load
	l.sfeq 	r11,r8
	l.bf	.L8417	# delay slot filled
	l.lwz   	r7,44(r1)	 # SI load
	l.lwz   	r2,144(r1)	 # SI load
	l.sfnei	r2,0
	l.bf	.L8331
	l.nop			# nop delay slot
	l.lwz   	r2,12(r20)	 # SI load
	l.addi  	r2,r2,-1
	l.sfne 	r16,r2
	l.bf	.L8332
	l.nop			# nop delay slot
	l.addi  	r14,r0,-1	 # move immediate I
.L8332:
	l.jal   	sqlite3ExprCodeGetColumn	# delay slot filled
	l.lwz   	r4,0(r18)	 # SI load
	l.lwz   	r2,12(r28)	 # SI load
	l.ori   	r7,r11,0	 # move reg to reg
	l.ori   	r8,r14,0	 # move reg to reg
	l.addi  	r11,r0,-14	 # move immediate I
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,113	 # move immediate I
	l.lwz   	r5,52(r1)	 # SI load
	l.addi  	r6,r2,2
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
.L8331:
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,47	 # move immediate I
	l.lwz   	r5,40(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,100(r1)	 # SI load
	l.jal   	sqlite3WhereEnd	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
.L8417:
	l.j     	.L8330	# delay slot filled
	l.lwz   	r15,12(r20)	 # SI load
.L8438:
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r8,r0,36	 # move immediate I
		l.lwz   	r6, 32(r1)
		l.lwz   	r7, 32+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.addi  	r5,r0,-1	 # move immediate I
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r8,r0,24	 # move immediate I
	l.sw    	0(r1),r16	 # SI store
		l.lwz   	r6, 32(r1)
		l.lwz   	r7, 32+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r5,40(r1)	 # SI load
	l.sfnei	r5,0
	l.bf	.L8287	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r20,r18,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
.L8287:
	l.sfeqi	r20,0
	l.bf	.L8288	# delay slot filled
	l.addi  	r6,r0,123	 # movqi: move immediate
	l.addi  	r7,r0,55	 # movqi: move immediate
	l.addi  	r8,r0,70	 # movqi: move immediate
	l.addi  	r11,r0,109	 # movqi: move immediate
	l.sb    	328(r1),r6	    # movqi
	l.sb    	329(r1),r7	    # movqi
	l.sb    	330(r1),r8	    # movqi
	l.sb    	331(r1),r11	    # movqi
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r14,0(r20)	 # SI load
	l.addi  	r5,r1,340
	l.lwz   	r4,24(r14)	 # SI load
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.addi  	r2,r1,253
	l.lbz   	r8,0(r14)	 # zero_extendqisi2
	l.add   	r8,r2,r8
	l.lwz   	r6,44(r1)	 # SI load
	l.lbz   	r4,0(r8)	 # zero_extendqisi2
	l.ori   	r7,r11,0	 # move reg to reg
	l.lwz   	r5,12(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.lwz   	r4,340(r1)	 # SI load
	l.lwz   	r3,60(r1)	 # SI load
	l.jal   	disableTerm	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.sfeqi	r18,0
.L8459:
	l.bf	.L8370	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r8,72(r22)	 # SI load
	l.lwz   	r14,0(r18)	 # SI load
	l.addi  	r16,r8,1
	l.sw    	72(r22),r16	 # SI store
	l.lwz   	r4,24(r14)	 # SI load
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.lbz   	r13,0(r14)	 # zero_extendqisi2
	l.xori  	r8,r13,75
	l.addi  	r8,r8,-1
	l.sfltsi	r8,0
	l.bf	.L8478	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.xori  	r7,r13,77
	l.addi  	r7,r7,-1
	l.sfgesi	r7,0
	l.bf	.L8292	# delay slot filled
	l.lwz   	r5,40(r1)	 # SI load
	l.lwz   	r4,40(r1)	 # SI load
.L8478:
	l.sfeqi	r4,0
	l.bf	.L8294	# delay slot filled
	l.addi  	r14,r0,78	 # move immediate I
	l.addi  	r14,r0,76	 # move immediate I
.L8294:
	l.lwz   	r3,60(r1)	 # SI load
	l.jal   	disableTerm	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
.L8291:
	l.lwz   	r6,40(r1)	 # SI load
	l.lwz   	r15,12(r28)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L8295	# delay slot filled
	l.addi  	r13,r0,106	 # move immediate I
	l.addi  	r13,r0,49	 # move immediate I
.L8295:
	l.sub   	r8,r0,r20
	l.sub   	r12,r0,r18
	l.or    	r7,r20,r8
	l.or    	r12,r18,r12
	l.lwz   	r8,28(r1)	 # SI load
	l.or    	r7,r7,r12
	l.sb    	1(r8),r13	    # movqi
	l.xori  	r7,r7,0xffff
	l.lwz   	r2,12(r1)	 # SI load
	l.srli  	r12,r7,31
	l.lwz   	r11,64(r1)	 # SI load
	l.lwz   	r3,80(r1)	 # SI load
	l.sw    	0(r11),r2	 # SI store
	l.sw    	0(r3),r15	 # SI store
	l.sb    	2(r8),r12	    # movqi
	l.sfeqi	r14,24
	l.bf	.L8282	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
	l.lbz   	r7,21(r22)	 # zero_extendqisi2
	l.sfne 	r7,r24
	l.bf	.L8296
	l.nop			# nop delay slot
	l.lwz   	r7,72(r22)	 # SI load
	l.addi  	r24,r7,1
	l.sw    	72(r22),r24	 # SI store
.L8297:
	l.lwz   	r5,12(r1)	 # SI load
	l.ori   	r6,r24,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,40	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3ExprCacheStore	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r6,44(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r24,0	 # move reg to reg
	l.lwz   	r14,20(r28)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L8282	# delay slot filled
	l.addi  	r4,r0,107	 # movqi: move immediate
	l.lwz   	r12,12(r28)	 # SI load
	l.addi  	r12,r12,-1
	l.slli  	r13,r12,2
	l.slli  	r12,r12,4
	l.add   	r8,r13,r12
	l.add   	r8,r14,r8
	l.j     	.L8282	# delay slot filled
	l.sb    	3(r8),r4	    # movqi
.L8359:
	l.addi  	r2,r0,-1	 # move immediate I
	l.addi  	r3,r0,-1	 # move immediate I
		l.sw    	68(r1), r2
		l.sw    	68+4(r1), r3
	l.j     	.L8456	# delay slot filled
	l.addi  	r8,r24,1
.L8326:
	l.lwz   	r11,40(r1)	 # SI load
	l.ori   	r3,r3,lo(aStep.20566)
	l.movhi  	r2,hi(aStart.20567)
	l.add   	r7,r11,r3
	l.lwz   	r5,28(r1)	 # SI load
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.ori   	r2,r2,lo(aStart.20567)
	l.sb    	1(r5),r7	    # movqi
	l.add   	r8,r11,r2
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r6,64(r1)	 # SI load
	l.lbz   	r4,0(r8)	 # zero_extendqisi2
	l.sw    	0(r6),r7	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r5,r7,0	 # move reg to reg
	l.lwz   	r6,44(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r24,r13,0	 # move reg to reg
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.addi  	r8,r11,1
	l.lwz   	r11,28(r1)	 # SI load
	l.sb    	2(r11),r2	    # movqi
	l.lwz   	r3,80(r1)	 # SI load
	l.j     	.L8282	# delay slot filled
	l.sw    	0(r3),r8	 # SI store
.L8328:
	l.sfltsi	r26,0
	l.bf	.L8334	# delay slot filled
	l.lwz   	r14,12(r28)	 # SI load
	l.sfges 	r26,r14
	l.bf	.L8479	# delay slot filled
	l.lwz   	r2,124(r1)	 # SI load
	l.lwz   	r13,20(r28)	 # SI load
	l.sfeqi	r13,0
	l.bf	.L8479	# delay slot filled
	l.slli  	r8,r26,2
	l.slli  	r12,r26,4
	l.add   	r8,r8,r12
	l.add   	r8,r13,r8
	l.sw    	4(r8),r14	 # SI store
.L8334:
	l.lwz   	r2,124(r1)	 # SI load
.L8479:
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,0(r2)	 # SI load
	l.lwz   	r8,32(r28)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L8335	# delay slot filled
	l.lwz   	r12,12(r28)	 # SI load
	l.lwz   	r3,100(r1)	 # SI load
	l.xori  	r7,r3,0xffff
	l.slli  	r7,r7,2
	l.add   	r7,r8,r7
	l.sw    	0(r7),r12	 # SI store
.L8335:
	l.lwz   	r4,28(r1)	 # SI load
	l.addi  	r5,r0,25	 # movqi: move immediate
	l.addi  	r24,r0,0	 # move immediate I
	l.sb    	1(r4),r5	    # movqi
	l.lwz   	r7,40(r1)	 # SI load
	l.lwz   	r6,64(r1)	 # SI load
	l.lwz   	r3,60(r1)	 # SI load
	l.sw    	0(r6),r7	 # SI store
	l.jal   	disableTerm	# delay slot filled
	l.lwz   	r4,108(r1)	 # SI load
	l.j     	.L8457	# delay slot filled
	l.lwz   	r4,20(r1)	 # SI load
.L8436:
	l.lwz   	r7,56(r1)	 # SI load
	l.j     	.L8344	# delay slot filled
	l.lwz   	r13,0(r7)	 # SI load
.L8319:
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r8,r7,6
	l.sb    	21(r22),r7	    # movqi
	l.slli  	r7,r8,2
	l.add   	r7,r22,r7
	l.j     	.L8320	# delay slot filled
	l.lwz   	r14,0(r7)	 # SI load
.L8427:
	l.lwz   	r3,0(r16)	 # SI load
	l.and   	r4,r3,r5
	l.sfeqi	r4,0
	l.bnf	.L8445	# delay slot filled
	l.movhi 	r8,hi(8388608)	 # move immediate M
	l.and   	r3,r3,r8
	l.sfnei	r3,0
	l.bf	.L8264	# delay slot filled
	l.lwz   	r11,40(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L8480	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,48(r1)	 # SI load
	l.lbz   	r3,6(r4)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L8446	# delay slot filled
	l.addi  	r7,r0,13	 # move immediate I
.L8265:
	l.lwz   	r5,20(r1)	 # SI load
	l.ori   	r6,r24,0	 # move reg to reg
	l.add   	r4,r5,r14
	l.ori   	r3,r28,0	 # move reg to reg
	l.slli  	r8,r4,4
	l.ori   	r5,r2,0	 # move reg to reg
	l.add   	r4,r4,r8
	l.add   	r4,r4,r14
	l.add   	r4,r22,r4
	l.sw    	28(r1),r4	 # SI store
	l.jal   	sqlite3OpenTable	# delay slot filled
	l.lwz   	r4,28(r4)	 # SI load
	l.lwz   	r6,48(r1)	 # SI load
	l.lbz   	r5,6(r6)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L8458	# delay slot filled
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r3,12(r24)	 # SI load
	l.sfgtsi	r3,63
	l.bf	.L8458	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
	l.addi  	r4,r7,40
	l.lwz   	r3,0(r4)	 # SI load
	l.j     	.L8266	# delay slot filled
	l.lwz   	r4,4(r4)	 # SI load
.L8267:
	l.addi  	r5,r5,1
.L8266:
	l.slli  	r8,r3,31
	l.srli  	r7,r4,1
	l.or    	r6,r3,r4
	l.srli  	r3,r3,1
	l.sfnei	r6,0
	l.bf	.L8267	# delay slot filled
	l.or    	r4,r8,r7
	l.lwz   	r8,84(r1)	 # SI load
	l.addi  	r6,r0,-14	 # move immediate I
	l.lwz   	r4,12(r8)	 # SI load
	l.ori   	r3,r8,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r4,r4,-1
	l.j     	.L8458	# delay slot filled
	l.lwz   	r11,20(r1)	 # SI load
.L8323:
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r8,r7,6
	l.sb    	21(r22),r7	    # movqi
	l.slli  	r7,r8,2
	l.add   	r7,r22,r7
	l.j     	.L8324	# delay slot filled
	l.lwz   	r24,0(r7)	 # SI load
.L8419:
	l.movhi  	r4,hi(.LC221)
	l.addi  	r2,r0,64	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r4,r4,lo(.LC221)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	48(r1),r5	 # SI store
	l.j     	.L8452	# delay slot filled
	l.lwz   	r11,48(r1)	 # SI load
.L8288:
	l.lwz   	r3,40(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8290	# delay slot filled
	l.addi  	r8,r0,122	 # move immediate I
	l.addi  	r8,r0,54	 # move immediate I
.L8290:
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r8,0	 # move reg to reg
	l.lwz   	r5,12(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
	l.j     	.L8459	# delay slot filled
	l.sfeqi	r18,0
.L8292:
	l.sfeqi	r5,0
	l.bf	.L8294	# delay slot filled
	l.addi  	r14,r0,75	 # move immediate I
	l.j     	.L8294	# delay slot filled
	l.addi  	r14,r0,77	 # move immediate I
.L8370:
	l.ori   	r16,r18,0	 # move reg to reg
	l.j     	.L8291	# delay slot filled
	l.addi  	r14,r0,24	 # move immediate I
.L8432:
	l.lwz   	r3,80(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC230)
	l.jal   	sqlite3MAppendf	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L8460	# delay slot filled
	l.lbz   	r6,0(r20)	 # zero_extendqisi2
.L8430:
	l.movhi  	r5,hi(.LC228)
	l.lwz   	r3,80(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC228)
	l.jal   	sqlite3MAppendf	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L8254	# delay slot filled
	l.lwz   	r2,0(r16)	 # SI load
.L8429:
	l.movhi  	r5,hi(.LC227)
	l.lwz   	r3,80(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC227)
	l.jal   	sqlite3MAppendf	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L8254	# delay slot filled
	l.lwz   	r2,0(r16)	 # SI load
.L8428:
	l.sw    	0(r1),r11	 # SI store
	l.movhi  	r5,hi(.LC226)
	l.lwz   	r2,0(r18)	 # SI load
	l.lwz   	r3,80(r1)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC226)
	l.jal   	sqlite3MAppendf	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
	l.j     	.L8254	# delay slot filled
	l.lwz   	r2,0(r16)	 # SI load
.L8296:
	l.addi  	r7,r7,-1
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r8,r7,6
	l.sb    	21(r22),r7	    # movqi
	l.slli  	r7,r8,2
	l.add   	r7,r22,r7
	l.j     	.L8297	# delay slot filled
	l.lwz   	r24,0(r7)	 # SI load
.L8311:
	l.lwz   	r2,108(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8312	# delay slot filled
	l.ori   	r18,r26,0	 # move reg to reg
	l.lwz   	r5,44(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.add   	r6,r30,r26
	l.addi  	r18,r26,1
	l.addi  	r24,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.j     	.L8461	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L8439:
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.ori   	r5,r14,0	 # move reg to reg
	l.sw    	0(r1),r6	 # SI store
		l.lwz   	r6, 32(r1)
		l.lwz   	r7, 32+4(r1)
	l.jal   	findTerm	# delay slot filled
	l.addi  	r8,r0,24	 # move immediate I
	l.addi  	r12,r0,1	 # move immediate I
	l.j     	.L8301	# delay slot filled
	l.sw    	44(r1),r11	 # SI store
.L8387:
	l.addi  	r7,r0,-1	 # move immediate I
	l.addi  	r8,r0,-1	 # move immediate I
		l.sw    	116(r1), r7
		l.sw    	116+4(r1), r8
	l.j     	.L8462	# delay slot filled
	l.lwz   	r2,36(r1)	 # SI load
.L8264:
	l.ori   	r3,r28,0	 # move reg to reg
.L8480:
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r5,24(r24)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3TableLock	# delay slot filled
	l.lwz   	r7,4(r24)	 # SI load
	l.lwz   	r11,20(r1)	 # SI load
.L8458:
	l.lwz   	r4,0(r16)	 # SI load
	l.add   	r3,r11,r14
	l.movhi 	r6,hi(983040)	 # move immediate M
	l.slli  	r5,r3,4
	l.and   	r4,r4,r6
	l.add   	r3,r3,r5
	l.sfeqi	r4,0
	l.add   	r3,r3,r14
	l.add   	r3,r22,r3
	l.lwz   	r3,28(r3)	 # SI load
	l.bf	.L8268	# delay slot filled
	l.sw    	16(r16),r3	 # SI store
	l.lwz   	r14,0(r18)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3IndexKeyinfo	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r5,20(r16)	 # SI load
	l.lwz   	r6,20(r14)	 # SI load
	l.ori   	r8,r11,0	 # move reg to reg
	l.lwz   	r3,84(r1)	 # SI load
	l.addi  	r11,r0,-16	 # move immediate I
	l.addi  	r4,r0,13	 # move immediate I
	l.ori   	r7,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
.L8268:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3CodeVerifySchema	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L8463	# delay slot filled
	l.lwz   	r2,12(r1)	 # SI load
.L8445:
	l.lwz   	r7,20(r1)	 # SI load
	l.lwz   	r8,56(r24)	 # SI load
	l.add   	r3,r7,r14
	l.sw    	0(r1),r30	 # SI store
	l.slli  	r5,r3,4
	l.addi  	r4,r0,32	 # move immediate I
	l.ori   	r7,r6,0	 # move reg to reg
	l.add   	r5,r3,r5
	l.lwz   	r3,84(r1)	 # SI load
	l.add   	r5,r5,r14
	l.add   	r5,r22,r5
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.lwz   	r5,28(r5)	 # SI load
	l.j     	.L8458	# delay slot filled
	l.lwz   	r11,20(r1)	 # SI load
.L8431:
	l.lwz   	r2,0(r18)	 # SI load
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r3,80(r1)	 # SI load
	l.lwz   	r5,20(r2)	 # SI load
	l.sw    	4(r1),r5	 # SI store
	l.movhi  	r5,hi(.LC229)
	l.lwz   	r2,24(r2)	 # SI load
	l.ori   	r5,r5,lo(.LC229)
	l.jal   	sqlite3MAppendf	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
	l.j     	.L8254	# delay slot filled
	l.lwz   	r2,0(r16)	 # SI load
.L8444:
	l.lwz   	r12,72(r22)	 # SI load
	l.addi  	r8,r12,1
	l.addi  	r12,r12,2
	l.addi  	r4,r0,119	 # move immediate I
	l.sw    	72(r22),r12	 # SI store
	l.ori   	r5,r7,0	 # move reg to reg
	l.ori   	r6,r8,0	 # move reg to reg
	l.sw    	52(r1),r8	 # SI store
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	44(r1),r12	 # SI store
	l.j     	.L8464	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
.L8446:
	l.j     	.L8265	# delay slot filled
	l.addi  	r7,r0,10	 # move immediate I
.L8442:
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L8274	# delay slot filled
	l.add   	r26,r11,r14
.LFE1164:
	.size	sqlite3WhereBegin, .-sqlite3WhereBegin
	.section	.rodata.str1.1
.LC231:
	.string	"UNION"
.LC232:
	.string	"too many terms in compound SELECT"
.LC233:
	.string	"ORDER BY clause should come after %s not before"
.LC234:
	.string	"LIMIT clause should come after %s not before"
.LC235:
	.string	"SELECTs to the left and right of %s do not have the same number of result columns"
.LC236:
	.string	"only a single result allowed for a SELECT that is part of an expression"
.LC237:
	.string	"min"
.LC238:
	.string	"max"
	.section .text
	.align	4
.proc	sqlite3Select
	.type	sqlite3Select, @function
sqlite3Select:
.LFB1072:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3198:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3199:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3200:
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI3201:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3202:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3203:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3204:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3205:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3206:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3207:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3208:
	l.addi  	r1,r1,-284
.LCFI3209:
	l.ori   	r28,r3,0	 # move reg to reg
	l.sw    	20(r1),r2	 # SI store
	l.sw    	24(r1),r5	 # SI store
	l.ori   	r26,r4,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L8482	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.lwz   	r4,20(r1)	 # SI load
	l.lbz   	r6,30(r4)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L8482
	l.nop			# nop delay slot
	l.lwz   	r6,64(r3)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L8762	# delay slot filled
	l.ori   	r5,r6,0	 # move reg to reg
.L8482:
	l.addi	r1,r1,284
.L8809:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L8762:
	l.addi  	r4,r0,21	 # move immediate I
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L8482	# delay slot filled
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r6,24(r26)	 # SI load
	l.lbz   	r2,0(r5)	 # zero_extendqisi2
	l.sw    	96(r1),r11	 # SI store
	l.sw    	100(r1),r11	 # SI store
	l.sw    	104(r1),r11	 # SI store
	l.sw    	108(r1),r11	 # SI store
	l.sw    	112(r1),r11	 # SI store
	l.sw    	116(r1),r11	 # SI store
	l.sw    	120(r1),r11	 # SI store
	l.sw    	124(r1),r11	 # SI store
	l.sw    	128(r1),r11	 # SI store
	l.sw    	132(r1),r11	 # SI store
	l.sw    	136(r1),r11	 # SI store
	l.sfgtui	r2,4
	l.bf	.L8483	# delay slot filled
	l.sw    	236(r1),r6	 # SI store
	l.lhz   	r2,6(r26)	 # zero_extendqisi2
	l.addi  	r6,r0,-2	 # move immediate I
	l.sw    	24(r26),r11	 # SI store
	l.and   	r2,r2,r6
	l.sh    	6(r26),r2	 # movhi
.L8483:
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3SelectPrep	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r7,8(r26)	 # SI load
	l.lwz   	r6,64(r28)	 # SI load
	l.sw    	28(r1),r7	 # SI store
	l.sfnei	r6,0
	l.bf	.L8484	# delay slot filled
	l.lwz   	r2,0(r26)	 # SI load
	l.lwz   	r8,20(r1)	 # SI load
	l.lbz   	r6,30(r8)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L8484	# delay slot filled
	l.sfeqi	r2,0
	l.lwz   	r3,236(r1)	 # SI load
	l.lhz   	r16,6(r26)	 # zero_extendqisi2
	l.bf	.L8484	# delay slot filled
	l.sw    	24(r26),r3	 # SI store
	l.lwz   	r11,24(r1)	 # SI load
	l.lbz   	r2,0(r11)	 # zero_extendqisi2
	l.sfgtui	r2,4
	l.bf	.L8828	# delay slot filled
	l.addi  	r2,r28,12
	l.sw    	236(r1),r6	 # SI store
.L8828:
	l.lwz   	r3,0(r28)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.sw    	44(r1),r2	 # SI store
	l.sfeqi	r11,0
	l.bf	.L8484	# delay slot filled
	l.sw    	32(r1),r11	 # SI store
	l.lwz   	r14,28(r26)	 # SI load
	l.sfnei	r14,0
	l.bf	.L8486	# delay slot filled
	l.srli  	r16,r16,2
	l.lwz   	r3,28(r1)	 # SI load
	l.andi  	r16,r16,1
	l.lhs   	r2,0(r3)	 # extendhisi2_no_sext_mem
	l.sflesi	r2,0
	l.bf	.L8487	# delay slot filled
	l.sw    	36(r1),r16	 # SI store
	l.ori   	r2,r14,0	 # move reg to reg
	l.j     	.L8533	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
.L8741:
	l.lhs   	r5,0(r18)	 # extendhisi2_no_sext_mem
	l.addi  	r2,r2,1
	l.sfgts 	r5,r2
	l.bnf	.L8763
	l.nop			# nop delay slot
.L8533:
	l.add   	r14,r2,r2
	l.add   	r5,r14,r2
	l.slli  	r20,r5,4
	l.add   	r5,r5,r20
	l.add   	r20,r5,r2
	l.add   	r6,r18,r20
	l.lwz   	r16,20(r6)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L8741
	l.nop			# nop delay slot
	l.lbz   	r5,24(r6)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L8741	# delay slot filled
	l.addi  	r4,r1,224
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r22,512(r28)	 # SI load
	l.jal   	heightOfSelect	# delay slot filled
	l.sw    	224(r1),r5	 # SI store
	l.lhz   	r6,6(r16)	 # zero_extendqisi2
	l.lwz   	r5,224(r1)	 # SI load
	l.srli  	r6,r6,2
	l.add   	r5,r5,r22
	l.lwz   	r22,8(r26)	 # SI load
	l.andi  	r6,r6,1
	l.add   	r20,r22,r20
	l.sw    	28(r1),r6	 # SI store
	l.lwz   	r4,36(r1)	 # SI load
	l.sw    	512(r28),r5	 # SI store
	l.lwz   	r5,28(r20)	 # SI load
	l.andi  	r6,r4,0xff	 # zero_extendqisi2
	l.lwz   	r7,28(r1)	 # SI load
	l.sw    	40(r1),r5	 # SI store
	l.lwz   	r24,488(r28)	 # SI load
	l.lwz   	r30,0(r28)	 # SI load
	l.lwz   	r20,20(r20)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L8764	# delay slot filled
	l.andi  	r8,r7,0xff	 # zero_extendqisi2
	l.lwz   	r11,28(r1)	 # SI load
.L8833:
	l.sfeqi	r11,0
	l.bf	.L8491
	l.nop			# nop delay slot
	l.lhs   	r4,0(r22)	 # extendhisi2_no_sext_mem
	l.sfgtsi	r4,1
	l.bnf	.L8491
	l.nop			# nop delay slot
.L8489:
	l.add   	r14,r14,r2
.L8810:
	l.addi  	r11,r0,0	 # move immediate I
	l.slli  	r6,r14,4
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r7,r0,9	 # movqi: move immediate
	l.add   	r6,r14,r6
	l.addi  	r8,r0,0	 # movqi: move immediate
	l.add   	r6,r6,r2
	l.ori   	r4,r16,0	 # move reg to reg
	l.add   	r18,r18,r6
	l.addi  	r5,r1,208
	l.lwz   	r6,28(r18)	 # SI load
	l.sb    	208(r1),r7	    # movqi
	l.sw    	212(r1),r6	 # SI store
	l.sb    	209(r1),r8	    # movqi
	l.sw    	216(r1),r11	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	220(r1),r11	 # SI store
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	24(r18),r3	    # movqi
.L8532:
	l.lwz   	r5,64(r28)	 # SI load
	l.sfnei	r5,0
	l.bf	.L8484
	l.nop			# nop delay slot
	l.lwz   	r6,20(r1)	 # SI load
	l.lbz   	r5,30(r6)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L8484
	l.nop			# nop delay slot
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r4,r1,224
	l.lwz   	r14,512(r28)	 # SI load
	l.jal   	heightOfSelect	# delay slot filled
	l.sw    	224(r1),r5	 # SI store
	l.lwz   	r5,224(r1)	 # SI load
	l.lwz   	r18,8(r26)	 # SI load
	l.sub   	r5,r14,r5
	l.lwz   	r7,24(r1)	 # SI load
	l.sw    	512(r28),r5	 # SI store
	l.lbz   	r5,0(r7)	 # zero_extendqisi2
	l.sfleui	r5,4
	l.bnf	.L8744
	l.nop			# nop delay slot
	l.lwz   	r14,28(r26)	 # SI load
.L8488:
	l.sfnei	r14,0
	l.bnf	.L8741
	l.nop			# nop delay slot
.L8486:
	l.lwz   	r2,16(r26)	 # SI load
	l.lwz   	r8,36(r26)	 # SI load
	l.sfnei	r8,0
	l.bnf	.L8765	# delay slot filled
	l.sw    	232(r1),r2	 # SI store
.L8534:
	l.lwz   	r2,24(r1)	 # SI load
	l.lwz   	r20,0(r28)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.lwz   	r5,4(r2)	 # SI load
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r2,12(r2)	 # SI load
	l.sw    	208(r1),r6	 # SI store
	l.sw    	212(r1),r5	 # SI store
	l.sw    	216(r1),r3	 # SI store
	l.sw    	220(r1),r2	 # SI store
	l.lwz   	r2,24(r14)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8537	# delay slot filled
	l.movhi  	r2,hi(.LC231)
	l.lbz   	r3,4(r26)	 # zero_extendqisi2
	l.addi  	r3,r3,-113
	l.sfgtui	r3,2
	l.bf	.L8538	# delay slot filled
	l.ori   	r2,r2,lo(.LC231)
	l.slli  	r2,r3,2
	l.movhi  	r3,hi(CSWTCH.1802)
	l.ori   	r3,r3,lo(CSWTCH.1802)
	l.add   	r2,r2,r3
	l.lwz   	r2,0(r2)	 # SI load
.L8538:
	l.movhi  	r4,hi(.LC233)
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC233)
	l.addi  	r18,r0,0	 # move immediate I
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L8539:
	l.lwz   	r3,216(r1)	 # SI load
.L8823:
	l.lwz   	r5,24(r1)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.sw    	8(r5),r3	 # SI store
	l.lwz   	r3,220(r1)	 # SI load
	l.sw    	12(r5),r3	 # SI store
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.j     	.L8809	# delay slot filled
	l.addi	r1,r1,284
.L8769:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC236)
.L8484:
	l.addi  	r2,r0,1	 # move immediate I
.L8679:
	l.lwz   	r4,112(r1)	 # SI load
.L8811:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,128(r1)	 # SI load
	l.j     	.L8809	# delay slot filled
	l.addi	r1,r1,284
.L8744:
	l.lwz   	r3,24(r26)	 # SI load
	l.lwz   	r14,28(r26)	 # SI load
	l.j     	.L8488	# delay slot filled
	l.sw    	236(r1),r3	 # SI store
.L8491:
	l.lwz   	r7,40(r20)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L8492	# delay slot filled
	l.lwz   	r4,8(r20)	 # SI load
	l.lwz   	r11,40(r26)	 # SI load
	l.sfnei	r11,0
	l.bf	.L8489
	l.nop			# nop delay slot
.L8492:
	l.lwz   	r3,44(r20)	 # SI load
	l.sfnei	r3,0
	l.bf	.L8489
	l.nop			# nop delay slot
	l.lwz   	r3,36(r26)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8493	# delay slot filled
	l.sfeqi	r7,0
	l.bf	.L8493
	l.nop			# nop delay slot
	l.lwz   	r3,24(r20)	 # SI load
	l.sfnei	r3,0
	l.bf	.L8489
	l.nop			# nop delay slot
.L8493:
	l.lhs   	r3,0(r4)	 # extendhisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L8489
	l.nop			# nop delay slot
	l.lhz   	r3,6(r20)	 # zero_extendqisi2
	l.andi  	r3,r3,1
	l.sfnei	r3,0
	l.bf	.L8829	# delay slot filled
	l.sfnei	r6,0
	l.sfeqi	r7,0
	l.bf	.L8495	# delay slot filled
	l.sfnei	r6,0
.L8829:
	l.bf	.L8489
	l.nop			# nop delay slot
	l.lhs   	r4,0(r22)	 # extendhisi2_no_sext_mem
	l.sfgtsi	r4,1
	l.bnf	.L8766	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
.L8496:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L8489
	l.nop			# nop delay slot
.L8495:
	l.lhz   	r3,6(r26)	 # zero_extendqisi2
	l.sfeqi	r8,0
	l.bnf	.L8767	# delay slot filled
	l.andi  	r3,r3,1
.L8727:
	l.lwz   	r8,24(r26)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L8830	# delay slot filled
	l.lwz   	r4,36(r1)	 # SI load
	l.lwz   	r4,24(r20)	 # SI load
	l.sfnei	r4,0
	l.bf	.L8489	# delay slot filled
	l.lwz   	r4,36(r1)	 # SI load
.L8830:
	l.sfeqi	r4,0
	l.bf	.L8831	# delay slot filled
	l.sfeqi	r7,0
	l.lwz   	r4,24(r20)	 # SI load
	l.sfnei	r4,0
	l.bf	.L8489	# delay slot filled
	l.sfeqi	r7,0
.L8831:
	l.bf	.L8832	# delay slot filled
	l.add   	r4,r14,r2
	l.lwz   	r4,12(r26)	 # SI load
	l.sfnei	r4,0
	l.bf	.L8489	# delay slot filled
	l.add   	r4,r14,r2
.L8832:
	l.slli  	r6,r4,4
	l.add   	r4,r4,r6
	l.add   	r4,r4,r2
	l.add   	r4,r22,r4
	l.lbz   	r4,25(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,32
	l.sfnei	r4,0
	l.bf	.L8489
	l.nop			# nop delay slot
	l.lwz   	r4,28(r20)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L8501
	l.nop			# nop delay slot
	l.lwz   	r4,24(r20)	 # SI load
	l.sfnei	r4,0
	l.bf	.L8489	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
	l.sfnei	r5,0
	l.bf	.L8489	# delay slot filled
	l.sfnei	r3,0
	l.bf	.L8489
	l.nop			# nop delay slot
	l.lhs   	r3,0(r22)	 # extendhisi2_no_sext_mem
	l.sfnei	r3,1
	l.bf	.L8489	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.sfnei	r4,0
.L8854:
	l.bnf	.L8768	# delay slot filled
	l.sfeqi	r8,0
	l.lhz   	r3,6(r4)	 # zero_extendqisi2
	l.andi  	r3,r3,5
	l.sfnei	r3,0
	l.bf	.L8489
	l.nop			# nop delay slot
	l.lwz   	r3,28(r4)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8503
	l.nop			# nop delay slot
	l.lbz   	r5,4(r4)	 # zero_extendqisi2
	l.sfnei	r5,113
	l.bf	.L8489
	l.nop			# nop delay slot
.L8503:
	l.lwz   	r4,8(r4)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L8489
	l.nop			# nop delay slot
	l.lhs   	r4,0(r4)	 # extendhisi2_no_sext_mem
	l.sfnei	r4,1
	l.bf	.L8489	# delay slot filled
	l.ori   	r4,r3,0	 # move reg to reg
	l.j     	.L8854	# delay slot filled
	l.sfnei	r4,0
.L8764:
	l.sfnei	r8,0
	l.bnf	.L8833	# delay slot filled
	l.lwz   	r11,28(r1)	 # SI load
	l.j     	.L8810	# delay slot filled
	l.add   	r14,r14,r2
.L8763:
	l.sw    	28(r1),r18	 # SI store
.L8487:
	l.lwz   	r4,0(r26)	 # SI load
	l.lwz   	r2,16(r26)	 # SI load
	l.lwz   	r5,20(r26)	 # SI load
	l.lhz   	r6,6(r26)	 # zero_extendqisi2
	l.lwz   	r3,0(r4)	 # SI load
	l.lwz   	r8,24(r1)	 # SI load
	l.sw    	40(r1),r4	 # SI store
	l.sw    	232(r1),r2	 # SI store
	l.sw    	44(r1),r5	 # SI store
	l.lwz   	r22,12(r26)	 # SI load
	l.andi  	r20,r6,1
	l.sfgtsi	r3,1
	l.bnf	.L8607	# delay slot filled
	l.lbz   	r7,0(r8)	 # zero_extendqisi2
	l.addi  	r7,r7,-6
	l.sfgtui	r7,1
	l.bnf	.L8769	# delay slot filled
	l.movhi  	r4,hi(.LC236)
.L8607:
	l.andi  	r6,r6,5
	l.sfnei	r6,1
	l.bnf	.L8770	# delay slot filled
	l.sfnei	r2,0
.L8608:
	l.lwz   	r2,236(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8609	# delay slot filled
	l.addi  	r18,r0,-1	 # move immediate I
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r5,r2,12
	l.jal   	keyInfoFromExprList.clone.134	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r8,236(r1)	 # SI load
	l.lwz   	r2,68(r28)	 # SI load
	l.lwz   	r6,0(r8)	 # SI load
	l.addi  	r7,r2,1
	l.sw    	8(r8),r2	 # SI store
	l.sw    	68(r28),r7	 # SI store
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,118	 # move immediate I
	l.addi  	r6,r6,2
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r8,r11,0	 # move reg to reg
	l.addi  	r2,r0,-16	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r18,r11,0	 # move reg to reg
	l.sw    	64(r26),r11	 # SI store
.L8609:
	l.lwz   	r8,24(r1)	 # SI load
	l.lbz   	r2,0(r8)	 # zero_extendqisi2
	l.sfnei	r2,9
	l.bnf	.L8771	# delay slot filled
	l.lwz   	r11,40(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
.L8814:
	l.addi  	r2,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	48(r1),r2	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	computeLimitRegisters	# delay slot filled
	l.sw    	80(r1),r11	 # SI store
	l.sfeqi	r20,0
	l.bf	.L8834	# delay slot filled
	l.lwz   	r4,36(r1)	 # SI load
	l.lwz   	r3,68(r28)	 # SI load
	l.lwz   	r2,0(r26)	 # SI load
	l.addi  	r7,r3,1
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r5,r2,12
	l.sw    	48(r1),r3	 # SI store
	l.sw    	68(r28),r7	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	keyInfoFromExprList.clone.134	# delay slot filled
	l.addi  	r2,r0,-16	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,118	 # move immediate I
	l.lwz   	r5,48(r1)	 # SI load
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r4,36(r1)	 # SI load
.L8834:
	l.sfnei	r4,0
	l.bnf	.L8772	# delay slot filled
	l.lwz   	r2,232(r1)	 # SI load
	l.sfeqi	r2,0
.L8837:
	l.bf	.L8835	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r7,0(r26)	 # SI load
	l.lwz   	r6,0(r7)	 # SI load
	l.sflesi	r6,0
	l.bf	.L8616	# delay slot filled
	l.lwz   	r7,12(r7)	 # SI load
	l.addi  	r7,r7,12
	l.addi  	r8,r0,0	 # movhi: move immediate
.L8852:
	l.addi  	r6,r6,-1
	l.sh    	0(r7),r8	 # movhi
	l.sfnei	r6,0
	l.bf	.L8852	# delay slot filled
	l.addi  	r7,r7,16
.L8616:
	l.lwz   	r6,0(r2)	 # SI load
	l.sflesi	r6,0
	l.bf	.L8615	# delay slot filled
	l.lwz   	r2,12(r2)	 # SI load
	l.addi  	r2,r2,12
	l.addi  	r11,r0,0	 # movhi: move immediate
.L8853:
	l.addi  	r6,r6,-1
	l.sh    	0(r2),r11	 # movhi
	l.sfnei	r6,0
	l.bf	.L8853	# delay slot filled
	l.addi  	r2,r2,16
.L8615:
	l.lwz   	r3,32(r1)	 # SI load
.L8835:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.addi  	r2,r1,140
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,36	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r3,28(r1)	 # SI load
	l.addi  	r4,r1,96
	l.lwz   	r7,232(r1)	 # SI load
	l.sw    	140(r1),r28	 # SI store
	l.sw    	144(r1),r3	 # SI store
	l.sw    	168(r1),r4	 # SI store
	l.sfeqi	r7,0
	l.bf	.L8619	# delay slot filled
	l.ori   	r8,r7,0	 # move reg to reg
	l.lwz   	r3,0(r7)	 # SI load
	l.addi  	r8,r3,1
.L8619:
	l.lwz   	r4,40(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	108(r1),r8	 # SI store
	l.jal   	sqlite3ExprAnalyzeAggList	# delay slot filled
	l.sw    	104(r1),r7	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprAnalyzeAggList	# delay slot filled
	l.lwz   	r4,236(r1)	 # SI load
	l.lwz   	r5,44(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L8620	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprAnalyzeAggregates	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
.L8620:
	l.lwz   	r3,116(r1)	 # SI load
	l.sw    	124(r1),r3	 # SI store
	l.lwz   	r3,132(r1)	 # SI load
	l.sflesi	r3,0
	l.bf	.L8836	# delay slot filled
	l.lwz   	r6,20(r1)	 # SI load
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r18,r16,0	 # move reg to reg
.L8622:
	l.lwz   	r4,128(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.add   	r4,r4,r16
	l.addi  	r18,r18,1
	l.lwz   	r4,0(r4)	 # SI load
	l.addi  	r16,r16,16
	l.jal   	sqlite3ExprAnalyzeAggList	# delay slot filled
	l.lwz   	r4,28(r4)	 # SI load
	l.lwz   	r3,132(r1)	 # SI load
	l.sfgts 	r3,r18
	l.bf	.L8622	# delay slot filled
	l.lwz   	r6,20(r1)	 # SI load
.L8836:
	l.lbz   	r14,30(r6)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L8679	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.lwz   	r2,232(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8623	# delay slot filled
	l.addi  	r5,r2,12
	l.lwz   	r7,68(r28)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r12,r7,1
	l.sw    	68(r28),r12	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	keyInfoFromExprList.clone.134	# delay slot filled
	l.sw    	100(r1),r7	 # SI store
	l.addi  	r4,r0,118	 # move immediate I
	l.lwz   	r5,100(r1)	 # SI load
	l.lwz   	r6,108(r1)	 # SI load
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r2,r0,-16	 # move immediate I
	l.sw    	84(r1),r11	 # SI store
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r2,72(r28)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r7,r2,3
	l.addi  	r8,r2,1
	l.sw    	72(r28),r7	 # SI store
	l.addi  	r2,r2,2
	l.sw    	52(r1),r8	 # SI store
	l.sw    	36(r1),r7	 # SI store
	l.sw    	92(r1),r11	 # SI store
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	60(r1),r2	 # SI store
	l.lwz   	r7,72(r28)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r7,r7,1
	l.sw    	64(r1),r11	 # SI store
	l.sw    	72(r28),r7	 # SI store
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	56(r1),r7	 # SI store
	l.lwz   	r3,232(r1)	 # SI load
	l.sw    	68(r1),r11	 # SI store
	l.lwz   	r13,0(r3)	 # SI load
	l.lwz   	r11,72(r28)	 # SI load
	l.addi  	r4,r0,48	 # move immediate I
	l.add   	r12,r13,r11
	l.ori   	r5,r14,0	 # move reg to reg
	l.add   	r7,r12,r13
	l.lwz   	r6,60(r1)	 # SI load
	l.addi  	r12,r12,1
	l.sw    	72(r28),r7	 # SI store
	l.lwz   	r3,32(r1)	 # SI load
	l.sw    	72(r1),r12	 # SI store
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	88(r1),r11	 # SI store
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,52(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r6,68(r1)	 # SI load
	l.addi  	r4,r0,47	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,28(r1)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r6,r1,232
	l.jal   	sqlite3WhereBegin	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L8484	# delay slot filled
	l.sw    	76(r1),r11	 # SI store
	l.lwz   	r2,232(r1)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L8773	# delay slot filled
	l.lwz   	r7,112(r1)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r18,r2,1
	l.lwz   	r19,116(r1)	 # SI load
	l.addi  	r7,r7,12
	l.ori   	r17,r18,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
.L8626:
	l.sflts 	r14,r19
	l.bnf	.L8774	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r3,0(r7)	 # SI load
	l.sfgts 	r17,r3
	l.bf	.L8627
	l.nop			# nop delay slot
	l.addi  	r4,r4,1
	l.addi  	r17,r17,1
.L8627:
	l.addi  	r14,r14,1
	l.j     	.L8626	# delay slot filled
	l.addi  	r7,r7,24
.L8765:
	l.ori   	r2,r26,0	 # move reg to reg
	l.j     	.L8535	# delay slot filled
	l.ori   	r11,r8,0	 # move reg to reg
.L8689:
	l.ori   	r11,r2,0	 # move reg to reg
	l.ori   	r2,r6,0	 # move reg to reg
.L8535:
	l.lwz   	r6,28(r2)	 # SI load
	l.sw    	36(r2),r26	 # SI store
	l.sw    	32(r2),r11	 # SI store
	l.sfnei	r6,0
	l.bf	.L8689	# delay slot filled
	l.addi  	r8,r8,1
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r2,96(r11)	 # SI load
	l.sflts 	r2,r8
	l.bf	.L8536	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.ori   	r3,r6,0	  # movqi: move reg to reg
.L8536:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L8534	# delay slot filled
	l.sub   	r3,r0,r2
	l.or    	r2,r3,r2
	l.sfgesi	r2,0
	l.bf	.L8534	# delay slot filled
	l.movhi  	r4,hi(.LC232)
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC232)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L8809	# delay slot filled
	l.addi	r1,r1,284
.L8537:
	l.lwz   	r2,40(r14)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8540	# delay slot filled
	l.movhi  	r2,hi(.LC231)
	l.lbz   	r3,4(r26)	 # zero_extendqisi2
	l.addi  	r3,r3,-113
	l.sfgtui	r3,2
	l.bf	.L8541	# delay slot filled
	l.ori   	r2,r2,lo(.LC231)
	l.movhi  	r4,hi(CSWTCH.1802)
	l.slli  	r2,r3,2
	l.ori   	r4,r4,lo(CSWTCH.1802)
	l.add   	r2,r2,r4
	l.lwz   	r2,0(r2)	 # SI load
.L8541:
	l.movhi  	r4,hi(.LC234)
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC234)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.j     	.L8539	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L8772:
	l.sub   	r7,r0,r2
	l.or    	r7,r2,r7
	l.sfltsi	r7,0
	l.bf	.L8837	# delay slot filled
	l.sfeqi	r2,0
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,28(r1)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r6,r1,236
	l.jal   	sqlite3WhereBegin	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L8484	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfltsi	r18,0
	l.bf	.L8613	# delay slot filled
	l.lwz   	r6,236(r1)	 # SI load
	l.sfnei	r6,0
	l.bf	.L8838	# delay slot filled
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeToNoop	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r7,r0,-1	 # move immediate I
	l.lwz   	r6,236(r1)	 # SI load
	l.sw    	64(r26),r7	 # SI store
.L8613:
	l.lwz   	r5,24(r1)	 # SI load
.L8838:
	l.addi  	r7,r0,-1	 # move immediate I
	l.sw    	0(r1),r6	 # SI store
	l.sw    	4(r1),r7	 # SI store
	l.sw    	8(r1),r5	 # SI store
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r8,16(r2)	 # SI load
	l.lwz   	r5,40(r1)	 # SI load
	l.sw    	12(r1),r8	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r12,20(r2)	 # SI load
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r6,r5,12
	l.ori   	r8,r7,0	 # move reg to reg
	l.jal   	selectInnerLoop.clone.162	# delay slot filled
	l.sw    	16(r1),r12	 # SI store
	l.jal   	sqlite3WhereEnd	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L8614:
	l.lwz   	r2,236(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8776	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r5,40(r1)	 # SI load
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.lwz   	r22,0(r5)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	36(r1),r11	 # SI store
	l.lwz   	r6,24(r1)	 # SI load
	l.sw    	44(r1),r11	 # SI store
	l.lbz   	r14,0(r6)	 # zero_extendqisi2
	l.xori  	r6,r14,5
	l.xori  	r2,r14,10
	l.sub   	r8,r0,r6
	l.sub   	r7,r0,r2
	l.or    	r6,r8,r6
	l.or    	r2,r7,r2
	l.xori  	r6,r6,0xffff
	l.xori  	r24,r2,0xffff
	l.srli  	r6,r6,31
	l.srli  	r24,r24,31
	l.lwz   	r7,24(r26)	 # SI load
	l.lwz   	r8,24(r1)	 # SI load
	l.or    	r24,r6,r24
	l.sw    	48(r1),r7	 # SI store
	l.sw    	56(r1),r6	 # SI store
	l.lwz   	r20,4(r8)	 # SI load
	l.lwz   	r30,8(r7)	 # SI load
	l.sfeqi	r24,0
	l.bnf	.L8777	# delay slot filled
	l.ori   	r18,r24,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
.L8815:
	l.addi  	r4,r0,18	 # move immediate I
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,36(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r11,r11,1
	l.addi  	r4,r26,52
	l.lwz   	r5,44(r1)	 # SI load
	l.jal   	codeOffset.clone.141	# delay slot filled
	l.sw    	52(r1),r11	 # SI store
	l.lbz   	r2,21(r28)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L8663	# delay slot filled
	l.addi  	r2,r2,-1
	l.lwz   	r16,72(r28)	 # SI load
	l.addi  	r16,r16,1
	l.sw    	72(r28),r16	 # SI store
.L8750:
	l.lwz   	r2,72(r28)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	72(r28),r2	 # SI store
.L8666:
	l.lwz   	r11,48(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r7,0(r11)	 # SI load
	l.addi  	r4,r0,3	 # move immediate I
	l.addi  	r6,r7,1
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.addi  	r7,r14,-5
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.sfgtui	r7,5
	l.bf	.L8816	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.movhi  	r3,hi(.L8672)
	l.slli  	r7,r7,2
	l.ori   	r3,r3,lo(.L8672)
	l.add   	r7,r7,r3
	l.lwz   	r7,0(r7)	 # SI load
	l.jr    	r7
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L8672:
	.word	.L8668
	.word	.L8669
	.word	.L8670
	.word	.L8671
	.word	.L8671
	.word	.L8668
	.section .text
.L8770:
	l.bf	.L8608	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r4,40(r1)	 # SI load
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.ori   	r20,r2,0	 # move reg to reg
	l.lhz   	r6,6(r26)	 # zero_extendqisi2
	l.addi  	r7,r0,-2	 # move immediate I
	l.sw    	16(r26),r11	 # SI store
	l.and   	r6,r6,r7
	l.sw    	232(r1),r11	 # SI store
	l.j     	.L8608	# delay slot filled
	l.sh    	6(r26),r6	 # movhi
.L8668:
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,110	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.j     	.L8673	# delay slot filled
	l.lwz   	r14,24(r1)	 # SI load
.L8674:
	l.lwz   	r7,8(r14)	 # SI load
	l.add   	r7,r20,r7
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r20,r20,1
.L8673:
	l.sfgts 	r22,r20
	l.bf	.L8674	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r6,56(r1)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L8778	# delay slot filled
	l.lwz   	r11,24(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,60	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,4(r11)	 # SI load
.L8667:
	l.ori   	r3,r28,0	 # move reg to reg
.L8816:
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r2,32(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8676	# delay slot filled
	l.lwz   	r7,12(r3)	 # SI load
	l.lwz   	r4,44(r1)	 # SI load
	l.xori  	r8,r4,0xffff
	l.slli  	r8,r8,2
	l.add   	r2,r2,r8
	l.sw    	0(r2),r7	 # SI store
.L8676:
	l.ori   	r5,r30,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,106	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,52(r1)	 # SI load
	l.lwz   	r5,32(r1)	 # SI load
	l.lwz   	r2,32(r5)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8677	# delay slot filled
	l.lwz   	r8,12(r5)	 # SI load
	l.lwz   	r6,36(r1)	 # SI load
	l.xori  	r7,r6,0xffff
	l.slli  	r7,r7,2
	l.add   	r7,r2,r7
	l.sw    	0(r7),r8	 # SI store
.L8677:
	l.sfeqi	r24,0
	l.bnf	.L8779	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
.L8661:
	l.lwz   	r8,32(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8678	# delay slot filled
	l.lwz   	r3,12(r8)	 # SI load
	l.lwz   	r11,80(r1)	 # SI load
	l.xori  	r6,r11,0xffff
	l.slli  	r6,r6,2
	l.add   	r2,r2,r6
	l.sw    	0(r2),r3	 # SI store
.L8678:
	l.lwz   	r3,24(r1)	 # SI load
	l.lbz   	r2,0(r3)	 # zero_extendqisi2
	l.sfeqi	r2,5
	l.bf	.L8682	# delay slot filled
	l.lwz   	r5,40(r1)	 # SI load
	l.j     	.L8679	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L8682:
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,28(r1)	 # SI load
	l.addi  	r6,r5,12
	l.jal   	generateColumnNames.clone.131	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L8811	# delay slot filled
	l.lwz   	r4,112(r1)	 # SI load
.L8779:
	l.addi  	r4,r0,33	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r7,32(r1)	 # SI load
	l.j     	.L8661	# delay slot filled
	l.lwz   	r2,32(r7)	 # SI load
.L8623:
	l.lwz   	r2,12(r26)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L8748	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r2,0(r26)	 # SI load
.L8841:
	l.lwz   	r3,0(r2)	 # SI load
	l.sfnei	r3,1
.L8840:
	l.bnf	.L8780	# delay slot filled
	l.sw    	228(r1),r5	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
.L8839:
	l.ori   	r14,r2,0	 # move reg to reg
.L8656:
	l.ori   	r3,r28,0	 # move reg to reg
.L8843:
	l.jal   	resetAccumulator	# delay slot filled
	l.addi  	r4,r1,96
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,28(r1)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r6,r1,228
	l.jal   	sqlite3WhereBegin	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L8781	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r1,96
	l.jal   	updateAccumulator	# delay slot filled
	l.sub   	r2,r0,r2
	l.sfgesi	r2,0
	l.bnf	.L8782	# delay slot filled
	l.lwz   	r7,228(r1)	 # SI load
.L8659:
	l.jal   	sqlite3WhereEnd	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,12(r28)	 # SI load
	l.lwz   	r4,128(r1)	 # SI load
	l.jal   	finalizeAggFunctions.clone.137	# delay slot filled
	l.addi  	r5,r1,132
	l.addi  	r2,r0,0	 # move immediate I
.L8812:
	l.lwz   	r3,44(r1)	 # SI load
	l.sfeq 	r3,r2
	l.bf	.L8660	# delay slot filled
	l.sw    	236(r1),r2	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,44(r1)	 # SI load
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.addi  	r6,r0,8	 # move immediate I
.L8660:
	l.lwz   	r2,0(r26)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r6,r2,12
	l.lwz   	r11,24(r1)	 # SI load
	l.ori   	r8,r7,0	 # move reg to reg
	l.addi  	r2,r0,-1	 # move immediate I
	l.sw    	0(r1),r7	 # SI store
	l.sw    	4(r1),r2	 # SI store
	l.sw    	8(r1),r11	 # SI store
	l.sw    	12(r1),r30	 # SI store
	l.jal   	selectInnerLoop.clone.162	# delay slot filled
	l.sw    	16(r1),r30	 # SI store
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
.L8819:
	l.lwz   	r2,32(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8614	# delay slot filled
	l.lwz   	r7,12(r3)	 # SI load
	l.xori  	r8,r30,0xffff
	l.slli  	r8,r8,2
	l.add   	r2,r2,r8
	l.j     	.L8614	# delay slot filled
	l.sw    	0(r2),r7	 # SI store
.L8782:
	l.sub   	r2,r0,r7
	l.or    	r2,r7,r2
	l.sfltsi	r2,0
	l.bf	.L8659	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,20(r16)	 # SI load
	l.j     	.L8659
	l.nop			# nop delay slot
.L8781:
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L8679	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L8780:
	l.lwz   	r2,12(r2)	 # SI load
	l.lwz   	r7,0(r2)	 # SI load
	l.lhz   	r2,2(r7)	 # zero_extendqisi2
	l.andi  	r2,r2,4096
	l.sfne 	r2,r5
	l.bf	.L8839	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r16,28(r7)	 # SI load
	l.sub   	r2,r0,r16
	l.or    	r2,r16,r2
	l.sfges 	r2,r5
	l.bf	.L8839	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lbz   	r18,0(r7)	 # zero_extendqisi2
	l.xori  	r18,r18,152
	l.sub   	r18,r0,r18
	l.srli  	r18,r18,31
	l.sfne 	r18,r5
	l.bf	.L8656	# delay slot filled
	l.ori   	r14,r2,0	 # move reg to reg
	l.lwz   	r2,0(r16)	 # SI load
	l.sfnei	r2,1
	l.bnf	.L8783
	l.nop			# nop delay slot
.L8722:
	l.ori   	r2,r18,0	 # move reg to reg
	l.j     	.L8656	# delay slot filled
	l.ori   	r14,r18,0	 # move reg to reg
.L8748:
	l.lwz   	r2,0(r26)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.sfnei	r3,1
	l.bf	.L8840
	l.nop			# nop delay slot
	l.lwz   	r7,8(r26)	 # SI load
	l.lhs   	r12,0(r7)	 # extendhisi2_no_sext_mem
	l.sfnei	r12,1
	l.bf	.L8840	# delay slot filled
	l.sfnei	r3,1
	l.lwz   	r3,20(r7)	 # SI load
	l.sfnei	r3,0
	l.bf	.L8841
	l.nop			# nop delay slot
	l.lwz   	r18,16(r7)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.lbz   	r12,34(r18)	 # zero_extendqisi2
	l.andi  	r12,r12,16
	l.sfnei	r12,0
	l.bf	.L8841	# delay slot filled
	l.lwz   	r7,0(r3)	 # SI load
	l.lbz   	r12,0(r7)	 # zero_extendqisi2
	l.sfnei	r12,152
	l.bf	.L8841	# delay slot filled
	l.lwz   	r3,128(r1)	 # SI load
	l.lwz   	r12,4(r3)	 # SI load
	l.lbz   	r12,3(r12)	 # zero_extendqisi2
	l.andi  	r12,r12,32
	l.sfeqi	r12,0
	l.bf	.L8841
	l.nop			# nop delay slot
	l.lhz   	r7,2(r7)	 # zero_extendqisi2
	l.andi  	r7,r7,16
	l.sfnei	r7,0
	l.bf	.L8841
	l.nop			# nop delay slot
	l.lwz   	r8,72(r18)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L8714	# delay slot filled
	l.lwz   	r7,0(r28)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r12,4(r7)	 # SI load
	l.j     	.L8648	# delay slot filled
	l.ori   	r16,r2,0	 # move reg to reg
.L8649:
	l.lwz   	r3,8(r7)	 # SI load
	l.add   	r3,r3,r2
	l.lwz   	r3,20(r3)	 # SI load
	l.sfeq 	r8,r3
	l.bf	.L8647	# delay slot filled
	l.addi  	r2,r2,24
	l.addi  	r16,r16,1
.L8648:
	l.sflts 	r16,r12
	l.bf	.L8649
	l.nop			# nop delay slot
.L8647:
	l.lwz   	r20,68(r28)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r2,r20,1
	l.ori   	r4,r16,0	 # move reg to reg
	l.sw    	68(r28),r2	 # SI store
	l.jal   	sqlite3CodeVerifySchema	# delay slot filled
	l.lwz   	r14,24(r18)	 # SI load
	l.lwz   	r7,4(r18)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r5,24(r18)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3TableLock	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r7,20(r18)	 # SI load
.L8650:
	l.sfnei	r7,0
	l.bnf	.L8784	# delay slot filled
	l.sfeqi	r2,0
	l.bf	.L8716
	l.nop			# nop delay slot
	l.lwz   	r4,4(r7)	 # SI load
	l.lwz   	r3,4(r2)	 # SI load
	l.sflts 	r4,r3
	l.bnf	.L8651
	l.nop			# nop delay slot
.L8716:
	l.ori   	r2,r7,0	 # move reg to reg
.L8651:
	l.j     	.L8650	# delay slot filled
	l.lwz   	r7,32(r7)	 # SI load
.L8783:
	l.lwz   	r3,12(r16)	 # SI load
	l.lwz   	r12,0(r3)	 # SI load
	l.lbz   	r12,0(r12)	 # zero_extendqisi2
	l.sfnei	r12,153
	l.bf	.L8722	# delay slot filled
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r20,8(r7)	 # SI load
	l.ori   	r6,r6,65535
	l.and   	r20,r20,r6
	l.sfnei	r20,3
	l.bf	.L8722	# delay slot filled
	l.movhi  	r4,hi(.LC237)
	l.lwz   	r24,4(r7)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC237)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L8842	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.movhi  	r4,hi(.LC238)
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC238)
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L8722	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
.L8842:
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	228(r1),r11	 # SI store
	l.sfnei	r11,0
	l.bnf	.L8656	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r8,20(r1)	 # SI load
	l.lbz   	r7,30(r8)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L8843	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.xori  	r7,r2,1
	l.lwz   	r3,12(r14)	 # SI load
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r11,r0,-105	 # movqi: move immediate
	l.sub   	r7,r0,r7
	l.srli  	r7,r7,31
	l.sb    	8(r3),r7	    # movqi
	l.lwz   	r3,12(r14)	 # SI load
	l.lwz   	r7,0(r3)	 # SI load
	l.j     	.L8656	# delay slot filled
	l.sb    	0(r7),r11	    # movqi
.L8784:
	l.bf	.L8844	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r3,4(r2)	 # SI load
	l.lwz   	r7,12(r18)	 # SI load
	l.sfges 	r3,r7
	l.bnf	.L8785	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
.L8844:
	l.addi  	r4,r0,13	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
.L8654:
	l.lwz   	r2,128(r1)	 # SI load
.L8813:
	l.ori   	r5,r20,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,107	 # move immediate I
	l.lwz   	r6,8(r2)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.j     	.L8812	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L8714:
	l.movhi 	r16,hi(-1048576)	 # move immediate M
	l.j     	.L8647	# delay slot filled
	l.ori   	r16,r16,48576
.L8785:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3IndexKeyinfo	# delay slot filled
	l.lwz   	r14,20(r2)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,13	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L8654	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,-1	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-16	 # move immediate I
	l.j     	.L8813	# delay slot filled
	l.lwz   	r2,128(r1)	 # SI load
.L8771:
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,118	 # move immediate I
	l.lwz   	r5,4(r8)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,0(r11)	 # SI load
	l.j     	.L8814	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
.L8663:
	l.andi  	r7,r2,0xff	 # zero_extendqisi2
	l.addi  	r8,r7,6
	l.ori   	r2,r7,0	 # move reg to reg
	l.slli  	r8,r8,2
	l.sb    	21(r28),r7	    # movqi
	l.sfnei	r7,0
	l.add   	r7,r28,r8
	l.bnf	.L8750	# delay slot filled
	l.lwz   	r16,0(r7)	 # SI load
	l.addi  	r2,r2,-1
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.addi  	r7,r2,6
	l.sb    	21(r28),r2	    # movqi
	l.slli  	r2,r7,2
	l.add   	r2,r28,r2
	l.j     	.L8666	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L8777:
	l.lwz   	r18,68(r28)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r2,r18,1
	l.addi  	r4,r0,117	 # move immediate I
	l.sw    	68(r28),r2	 # SI store
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.j     	.L8815	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
.L8776:
	l.lwz   	r4,32(r1)	 # SI load
	l.j     	.L8661	# delay slot filled
	l.lwz   	r2,32(r4)	 # SI load
.L8670:
	l.addi  	r22,r0,1	 # move immediate I
	l.ori   	r7,r2,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.addi  	r8,r26,5
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r4,r0,79	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r22	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,108	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.j     	.L8816	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
.L8669:
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeMove	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.j     	.L8816	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
.L8671:
	l.addi  	r4,r0,26	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,110	 # move immediate I
	l.ori   	r7,r2,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.lwz   	r4,32(r1)	 # SI load
	l.lwz   	r7,20(r4)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L8667	# delay slot filled
	l.addi  	r5,r0,8	 # movqi: move immediate
	l.lwz   	r8,12(r4)	 # SI load
	l.addi  	r8,r8,-1
	l.slli  	r12,r8,2
	l.slli  	r8,r8,4
	l.add   	r8,r12,r8
	l.add   	r7,r7,r8
	l.j     	.L8667	# delay slot filled
	l.sb    	3(r7),r5	    # movqi
.L8540:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.lwz   	r4,44(r1)	 # SI load
	l.lbz   	r2,208(r1)	 # zero_extendqisi2
	l.sfnei	r2,9
	l.bf	.L8542	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r2,0(r26)	 # SI load
	l.lwz   	r5,212(r1)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,0(r2)	 # SI load
	l.addi  	r5,r0,8	 # movqi: move immediate
	l.sb    	208(r1),r5	    # movqi
.L8542:
	l.lwz   	r3,0(r26)	 # SI load
	l.lwz   	r2,0(r14)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeq 	r3,r2
	l.bf	.L8543	# delay slot filled
	l.movhi  	r2,hi(.LC231)
	l.lbz   	r3,4(r26)	 # zero_extendqisi2
	l.addi  	r3,r3,-113
	l.sfgtui	r3,2
	l.bf	.L8544	# delay slot filled
	l.ori   	r2,r2,lo(.LC231)
	l.movhi  	r6,hi(CSWTCH.1802)
	l.slli  	r2,r3,2
	l.ori   	r6,r6,lo(CSWTCH.1802)
	l.add   	r2,r2,r6
	l.lwz   	r2,0(r2)	 # SI load
.L8544:
	l.movhi  	r4,hi(.LC235)
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC235)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.j     	.L8539	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L8543:
	l.lwz   	r24,24(r26)	 # SI load
	l.sfeqi	r24,0
	l.bf	.L8545
	l.nop			# nop delay slot
	l.lwz   	r24,12(r28)	 # SI load
	l.lwz   	r30,0(r28)	 # SI load
	l.sfeqi	r24,0
	l.bf	.L8482	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	36(r1),r11	 # SI store
	l.lwz   	r2,24(r26)	 # SI load
	l.lbz   	r7,4(r26)	 # zero_extendqisi2
	l.sw    	56(r1),r11	 # SI store
	l.lwz   	r8,28(r26)	 # SI load
	l.lwz   	r11,0(r2)	 # SI load
	l.sw    	44(r1),r7	 # SI store
	l.sw    	28(r1),r8	 # SI store
	l.sfeqi	r7,113
	l.bf	.L8547	# delay slot filled
	l.sw    	20(r1),r11	 # SI store
	l.lbz   	r12,30(r30)	 # zero_extendqisi2
	l.addi  	r14,r0,1	 # move immediate I
	l.ori   	r16,r11,0	 # move reg to reg
.L8548:
	l.sfnei	r12,0
	l.bf	.L8758
	l.nop			# nop delay slot
	l.lwz   	r3,0(r26)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.sfles 	r14,r3
	l.bnf	.L8758	# delay slot filled
	l.ori   	r4,r12,0	 # move reg to reg
	l.lwz   	r5,12(r2)	 # SI load
	l.addi  	r5,r5,10
.L8549:
	l.sflts 	r4,r16
	l.bnf	.L8786	# delay slot filled
	l.sfne 	r4,r16
	l.lhz   	r3,0(r5)	 # zero_extendqisi2
	l.sfeq 	r3,r14
	l.bf	.L8550	# delay slot filled
	l.addi  	r5,r5,16
	l.j     	.L8549	# delay slot filled
	l.addi  	r4,r4,1
.L8768:
	l.bf	.L8501	# delay slot filled
	l.ori   	r7,r4,0	 # move reg to reg
	l.lwz   	r3,0(r8)	 # SI load
.L8506:
	l.sflts 	r7,r3
	l.bnf	.L8845	# delay slot filled
	l.add   	r6,r14,r2
	l.lwz   	r5,12(r8)	 # SI load
	l.add   	r5,r5,r4
	l.lhz   	r5,10(r5)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L8489	# delay slot filled
	l.addi  	r4,r4,16
	l.j     	.L8506	# delay slot filled
	l.addi  	r7,r7,1
.L8774:
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r20,r11,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
	l.lwz   	r14,232(r1)	 # SI load
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r4,0(r14)	 # SI load
	l.lwz   	r5,12(r14)	 # SI load
	l.ori   	r7,r24,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeExprList.clone.160	# delay slot filled
	l.ori   	r22,r24,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,6	 # move immediate I
	l.lwz   	r5,100(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.add   	r6,r20,r2
	l.lwz   	r15,116(r1)	 # SI load
.L8629:
	l.sflts 	r22,r15
	l.bnf	.L8787	# delay slot filled
	l.lwz   	r2,112(r1)	 # SI load
	l.add   	r2,r2,r24
	l.lwz   	r4,12(r2)	 # SI load
	l.sfgts 	r18,r4
	l.bnf	.L8788	# delay slot filled
	l.add   	r14,r18,r20
.L8630:
	l.addi  	r22,r22,1
	l.j     	.L8629	# delay slot filled
	l.addi  	r24,r24,24
.L8788:
	l.lwz   	r5,8(r2)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r6,4(r2)	 # SI load
	l.ori   	r7,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeGetColumn	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.sfeq 	r14,r11
	l.bf	.L8631	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,9	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
.L8631:
	l.addi  	r18,r18,1
	l.j     	.L8630	# delay slot filled
	l.lwz   	r15,116(r1)	 # SI load
.L8787:
	l.lbz   	r7,21(r28)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L8633	# delay slot filled
	l.addi  	r7,r7,-1
	l.lwz   	r7,72(r28)	 # SI load
	l.addi  	r14,r7,1
	l.sw    	72(r28),r14	 # SI store
.L8634:
	l.ori   	r7,r14,0	 # move reg to reg
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r5,100(r1)	 # SI load
	l.ori   	r6,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,108	 # move immediate I
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r7,56(r28)	 # SI load
	l.sfges 	r7,r16
	l.bf	.L8846	# delay slot filled
	l.lwz   	r3,76(r1)	 # SI load
	l.sw    	56(r28),r16	 # SI store
	l.sw    	60(r28),r20	 # SI store
	l.lwz   	r3,76(r1)	 # SI load
.L8846:
	l.jal   	sqlite3WhereEnd	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,18	 # move immediate I
	l.lwz   	r5,100(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.sb    	97(r1),r4	    # movqi
.L8625:
	l.lwz   	r5,32(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r20,r0,0	 # move immediate I
	l.lwz   	r24,12(r5)	 # SI load
	l.lwz   	r22,72(r1)	 # SI load
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8817	# delay slot filled
	l.lwz   	r4,232(r1)	 # SI load
.L8790:
	l.addi  	r4,r0,3	 # move immediate I
	l.lwz   	r5,100(r1)	 # SI load
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.addi  	r18,r18,1
.L8818:
	l.addi  	r22,r22,1
	l.addi  	r20,r20,16
	l.lwz   	r4,232(r1)	 # SI load
.L8817:
	l.lwz   	r7,0(r4)	 # SI load
	l.sflts 	r18,r7
	l.bnf	.L8789	# delay slot filled
	l.sfeqi	r2,0
	l.bnf	.L8790	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.ori   	r3,r28,0	 # move reg to reg
	l.sb    	96(r1),r6	    # movqi
	l.ori   	r5,r22,0	 # move reg to reg
	l.lwz   	r4,12(r4)	 # SI load
	l.add   	r4,r4,r20
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r4,0(r4)	 # SI load
	l.j     	.L8818	# delay slot filled
	l.addi  	r18,r18,1
.L8789:
	l.lwz   	r8,88(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r16,r8,1
	l.addi  	r4,r0,95	 # move immediate I
	l.lwz   	r8,84(r1)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r6,72(r1)	 # SI load
	l.addi  	r14,r0,-6	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
	l.lwz   	r11,32(r1)	 # SI load
	l.addi  	r4,r0,132	 # move immediate I
	l.lwz   	r14,12(r11)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r7,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r5,r7,0	 # move reg to reg
	l.lwz   	r7,232(r1)	 # SI load
	l.lwz   	r4,72(r1)	 # SI load
	l.lwz   	r6,0(r7)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeMove	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,47	 # move immediate I
	l.lwz   	r5,36(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,64(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,129	 # move immediate I
	l.lwz   	r5,60(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.lwz   	r5,56(r1)	 # SI load
	l.lwz   	r6,68(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,47	 # move immediate I
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	updateAccumulator	# delay slot filled
	l.addi  	r4,r1,96
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,52(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8640
	l.nop			# nop delay slot
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,106	 # move immediate I
	l.lwz   	r5,100(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.addi  	r4,r0,47	 # move immediate I
.L8820:
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r6,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.lwz   	r6,60(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r14,12(r3)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,25	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r2,32(r1)	 # SI load
	l.lwz   	r7,32(r2)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L8642	# delay slot filled
	l.lwz   	r2,12(r2)	 # SI load
	l.lwz   	r3,64(r1)	 # SI load
	l.lwz   	r4,32(r1)	 # SI load
	l.xori  	r13,r3,0xffff
	l.slli  	r13,r13,2
	l.add   	r7,r7,r13
	l.sw    	0(r7),r2	 # SI store
	l.lwz   	r2,12(r4)	 # SI load
.L8642:
	l.addi  	r6,r2,2
	l.addi  	r4,r0,129	 # move immediate I
	l.lwz   	r5,52(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,25	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
	l.addi  	r5,r1,132
	l.lwz   	r3,12(r28)	 # SI load
	l.jal   	finalizeAggFunctions.clone.137	# delay slot filled
	l.lwz   	r4,128(r1)	 # SI load
	l.lwz   	r5,44(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L8791	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r2,r2,1
	l.lwz   	r4,44(r1)	 # SI load
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.addi  	r6,r0,8	 # move immediate I
.L8643:
	l.lwz   	r8,0(r26)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r11,48(r1)	 # SI load
	l.ori   	r5,r8,0	 # move reg to reg
	l.addi  	r6,r8,12
	l.lwz   	r13,236(r1)	 # SI load
	l.ori   	r8,r7,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	4(r1),r11	 # SI store
	l.lwz   	r11,24(r1)	 # SI load
	l.sw    	0(r1),r13	 # SI store
	l.sw    	8(r1),r11	 # SI store
	l.sw    	12(r1),r2	 # SI store
	l.jal   	selectInnerLoop.clone.162	# delay slot filled
	l.sw    	16(r1),r14	 # SI store
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,25	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r2,32(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8644	# delay slot filled
	l.lwz   	r7,12(r3)	 # SI load
	l.lwz   	r4,68(r1)	 # SI load
	l.xori  	r12,r4,0xffff
	l.slli  	r12,r12,2
	l.add   	r2,r2,r12
	l.sw    	0(r2),r7	 # SI store
.L8644:
	l.addi  	r4,r1,96
	l.jal   	resetAccumulator	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,25	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
	l.j     	.L8819	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
.L8791:
	l.j     	.L8643	# delay slot filled
	l.addi  	r2,r2,1
.L8640:
	l.jal   	sqlite3WhereEnd	# delay slot filled
	l.lwz   	r3,76(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r4,92(r1)	 # SI load
	l.jal   	sqlite3VdbeChangeToNoop	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L8820	# delay slot filled
	l.addi  	r4,r0,47	 # move immediate I
.L8633:
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.addi  	r14,r7,6
	l.sb    	21(r28),r7	    # movqi
	l.slli  	r7,r14,2
	l.add   	r7,r28,r7
	l.j     	.L8634	# delay slot filled
	l.lwz   	r14,0(r7)	 # SI load
.L8773:
	l.lwz   	r7,16(r26)	 # SI load
	l.j     	.L8625	# delay slot filled
	l.sw    	232(r1),r7	 # SI store
.L8778:
	l.lwz   	r7,24(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r5,8(r7)	 # SI load
	l.addi  	r4,r0,90	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r8,24(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,8(r8)	 # SI load
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.j     	.L8816	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
.L8501:
	l.add   	r6,r14,r2
.L8845:
	l.addi  	r5,r0,0	 # move immediate I
	l.slli  	r8,r6,4
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,21	 # move immediate I
	l.add   	r8,r6,r8
	l.ori   	r7,r5,0	 # move reg to reg
	l.add   	r8,r8,r2
	l.ori   	r6,r5,0	 # move reg to reg
	l.add   	r8,r22,r8
	l.lwz   	r8,8(r8)	 # SI load
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.sw    	488(r28),r8	 # SI store
	l.sw    	488(r28),r24	 # SI store
	l.lwz   	r16,28(r20)	 # SI load
.L8508:
	l.sfnei	r16,0
	l.bnf	.L8792	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r20,24(r26)	 # SI load
	l.lwz   	r24,40(r26)	 # SI load
	l.lwz   	r18,28(r26)	 # SI load
	l.sw    	24(r26),r6	 # SI store
	l.sw    	8(r26),r6	 # SI store
	l.sw    	28(r26),r6	 # SI store
	l.sw    	40(r26),r6	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.ori   	r5,r6,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.addi  	r7,r0,113	 # movqi: move immediate
	l.sw    	40(r26),r24	 # SI store
	l.sw    	24(r26),r20	 # SI store
	l.sw    	8(r26),r22	 # SI store
	l.sb    	4(r26),r7	    # movqi
	l.sfeq 	r11,r8
	l.bf	.L8509	# delay slot filled
	l.sw    	36(r26),r8	 # SI store
	l.sw    	28(r11),r18	 # SI store
	l.sw    	36(r11),r8	 # SI store
	l.ori   	r18,r11,0	 # move reg to reg
.L8509:
	l.sw    	28(r26),r18	 # SI store
	l.lbz   	r3,30(r30)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L8510
	l.nop			# nop delay slot
	l.j     	.L8508	# delay slot filled
	l.lwz   	r16,28(r16)	 # SI load
.L8792:
	l.add   	r4,r14,r2
	l.ori   	r3,r30,0	 # move reg to reg
	l.slli  	r6,r4,4
	l.add   	r4,r4,r6
	l.add   	r18,r4,r2
	l.add   	r18,r22,r18
	l.addi  	r11,r18,4
	l.addi  	r20,r18,20
	l.lwz   	r4,0(r11)	 # SI load
	l.addi  	r5,r18,8
	l.lwz   	r6,0(r20)	 # SI load
	l.sw    	48(r1),r11	 # SI store
	l.sw    	52(r1),r5	 # SI store
	l.jal   	sqlite3DbFree	# delay slot filled
	l.sw    	56(r1),r6	 # SI store
	l.lwz   	r7,52(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,0(r7)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r24,r18,12
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,0(r24)	 # SI load
	l.lwz   	r8,48(r1)	 # SI load
	l.lwz   	r11,52(r1)	 # SI load
	l.lwz   	r7,16(r18)	 # SI load
	l.sw    	0(r8),r16	 # SI store
	l.sw    	0(r11),r16	 # SI store
	l.sw    	0(r24),r16	 # SI store
	l.sfeqi	r7,0
	l.bf	.L8512	# delay slot filled
	l.sw    	0(r20),r16	 # SI store
	l.lhz   	r3,32(r7)	 # zero_extendqisi2
	l.sfnei	r3,1
	l.bnf	.L8793	# delay slot filled
	l.addi  	r3,r3,-1
	l.sh    	32(r7),r3	 # movhi
.L8514:
	l.add   	r3,r14,r2
	l.addi  	r4,r0,0	 # move immediate I
	l.slli  	r6,r3,4
	l.add   	r3,r3,r6
	l.add   	r3,r3,r2
	l.add   	r3,r22,r3
	l.sw    	16(r3),r4	 # SI store
.L8512:
	l.add   	r14,r14,r2
	l.addi  	r5,r2,1
	l.slli  	r3,r14,4
	l.lwz   	r16,56(r1)	 # SI load
	l.ori   	r20,r26,0	 # move reg to reg
	l.add   	r14,r14,r3
	l.sw    	64(r1),r5	 # SI store
	l.add   	r2,r14,r2
	l.lwz   	r24,40(r1)	 # SI load
	l.add   	r22,r22,r2
	l.addi  	r6,r2,4
	l.addi  	r22,r22,24
	l.sw    	48(r1),r2	 # SI store
	l.sw    	60(r1),r22	 # SI store
	l.sw    	68(r1),r6	 # SI store
	l.ori   	r22,r16,0	 # move reg to reg
	l.sw    	72(r1),r28	 # SI store
	l.sw    	76(r1),r26	 # SI store
.L8531:
	l.lwz   	r2,8(r22)	 # SI load
	l.lwz   	r14,8(r20)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L8515	# delay slot filled
	l.lhs   	r18,0(r2)	 # extendhisi2_no_sext_mem
	l.lwz   	r7,60(r1)	 # SI load
	l.lbz   	r7,1(r7)	 # zero_extendqisi2
	l.sw    	40(r1),r7	 # SI store
.L8516:
	l.sflesi	r18,1
	l.bf	.L8518	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r5,r18,-1
	l.jal   	sqlite3SrcListEnlarge	# delay slot filled
	l.lwz   	r6,64(r1)	 # SI load
	l.sw    	8(r20),r11	 # SI store
	l.lbz   	r7,30(r30)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L8517	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L8518:
	l.addi  	r2,r2,4
	l.addi  	r16,r0,0	 # move immediate I
	l.lwz   	r11,68(r1)	 # SI load
	l.sw    	52(r1),r2	 # SI store
	l.ori   	r28,r2,0	 # move reg to reg
	l.add   	r26,r14,r11
	l.ori   	r2,r16,0	 # move reg to reg
	l.sfgts 	r18,r2
.L8821:
	l.bnf	.L8794	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.addi  	r5,r0,52	 # move immediate I
	l.jal   	memcpy	# delay slot filled
	l.addi  	r2,r2,1
	l.lwz   	r4,52(r1)	 # SI load
	l.addi  	r5,r0,52	 # move immediate I
	l.add   	r3,r4,r16
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r28,r28,r5
	l.add   	r16,r16,r5
	l.jal   	memset	# delay slot filled
	l.add   	r26,r26,r5
	l.j     	.L8821	# delay slot filled
	l.sfgts 	r18,r2
.L8515:
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.jal   	sqlite3SrcListAppend	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.sw    	8(r20),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L8517	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.j     	.L8516	# delay slot filled
	l.sw    	40(r1),r8	 # SI store
.L8794:
	l.lwz   	r5,48(r1)	 # SI load
	l.lwz   	r6,40(r1)	 # SI load
	l.add   	r2,r14,r5
	l.addi  	r14,r0,0	 # move immediate I
	l.sb    	25(r2),r6	    # movqi
	l.ori   	r18,r14,0	 # move reg to reg
	l.lwz   	r2,0(r20)	 # SI load
	l.lwz   	r7,0(r2)	 # SI load
.L8521:
	l.sflts 	r18,r7
	l.bnf	.L8795	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r16,12(r2)	 # SI load
	l.add   	r16,r16,r14
	l.lwz   	r4,4(r16)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L8796
	l.nop			# nop delay slot
.L8522:
	l.addi  	r18,r18,1
	l.j     	.L8521	# delay slot filled
	l.addi  	r14,r14,16
.L8793:
	l.lwz   	r3,516(r28)	 # SI load
	l.sw    	76(r7),r3	 # SI store
	l.j     	.L8514	# delay slot filled
	l.sw    	516(r28),r7	 # SI store
.L8795:
	l.lwz   	r4,0(r20)	 # SI load
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	substExprList	# delay slot filled
	l.lwz   	r6,0(r22)	 # SI load
	l.lwz   	r8,36(r1)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L8524	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.lwz   	r4,16(r20)	 # SI load
	l.lwz   	r6,0(r22)	 # SI load
	l.jal   	substExprList	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,20(r20)	 # SI load
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	substExpr	# delay slot filled
	l.lwz   	r6,0(r22)	 # SI load
.L8524:
	l.lwz   	r2,24(r22)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8525	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	24(r20),r2	 # SI store
	l.sw    	24(r22),r11	 # SI store
.L8526:
	l.lwz   	r2,12(r22)	 # SI load
.L8822:
	l.sfeqi	r2,0
	l.bf	.L8527	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r2,r11,0	 # move reg to reg
.L8527:
	l.lwz   	r3,28(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8528	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r7,12(r20)	 # SI load
	l.lwz   	r6,0(r22)	 # SI load
	l.ori   	r4,r7,0	 # move reg to reg
	l.sw    	20(r20),r7	 # SI store
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	substExpr	# delay slot filled
	l.sw    	12(r20),r2	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,20(r22)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.lwz   	r2,20(r20)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprAnd	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.sw    	20(r20),r11	 # SI store
	l.lwz   	r4,16(r22)	 # SI load
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	16(r20),r11	 # SI store
.L8529:
	l.lhz   	r7,6(r22)	 # zero_extendqisi2
	l.lhz   	r4,6(r20)	 # zero_extendqisi2
	l.andi  	r7,r7,1
	l.lwz   	r2,40(r22)	 # SI load
	l.or    	r4,r7,r4
	l.sfeqi	r2,0
	l.bf	.L8530	# delay slot filled
	l.sh    	6(r20),r4	 # movhi
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	40(r20),r2	 # SI store
	l.sw    	40(r22),r4	 # SI store
.L8530:
	l.lwz   	r20,28(r20)	 # SI load
	l.sfnei	r20,0
	l.bf	.L8531	# delay slot filled
	l.lwz   	r22,28(r22)	 # SI load
.L8517:
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,56(r1)	 # SI load
	l.lwz   	r28,72(r1)	 # SI load
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r26,76(r1)	 # SI load
.L8510:
	l.lwz   	r2,28(r1)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L8760	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lhz   	r2,6(r26)	 # zero_extendqisi2
	l.ori   	r2,r2,4
	l.sw    	36(r1),r4	 # SI store
	l.sh    	6(r26),r2	 # movhi
.L8760:
	l.j     	.L8532	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
.L8796:
	l.lwz   	r5,0(r16)	 # SI load
	l.lwz   	r4,12(r5)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L8522	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r5)	 # SI load
	l.ori   	r7,r7,65535
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.and   	r5,r5,r7
	l.lwz   	r7,0(r2)	 # SI load
	l.j     	.L8522	# delay slot filled
	l.sw    	4(r16),r11	 # SI store
.L8528:
	l.lwz   	r4,12(r20)	 # SI load
	l.ori   	r5,r24,0	 # move reg to reg
	l.lwz   	r6,0(r22)	 # SI load
	l.jal   	substExpr	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,12(r20)	 # SI load
	l.jal   	sqlite3ExprAnd	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.j     	.L8529	# delay slot filled
	l.sw    	12(r20),r11	 # SI store
.L8525:
	l.lwz   	r4,24(r20)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L8526	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	substExprList	# delay slot filled
	l.lwz   	r6,0(r22)	 # SI load
	l.j     	.L8822	# delay slot filled
	l.lwz   	r2,12(r22)	 # SI load
.L8786:
	l.bnf	.L8797	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L8550:
	l.j     	.L8548	# delay slot filled
	l.addi  	r14,r14,1
.L8797:
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r4,r0,129	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L8694	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.lhz   	r3,2(r11)	 # zero_extendqisi2
	l.ori   	r3,r3,2048
	l.ori   	r4,r2,0	 # move reg to reg
	l.sh    	2(r11),r3	 # movhi
	l.sw    	36(r11),r14	 # SI store
	l.lwz   	r3,0(r28)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r3,r16,4
	l.lwz   	r4,12(r11)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.add   	r3,r4,r3
	l.addi  	r16,r16,1
	l.sh    	10(r3),r14	 # movhi
	l.j     	.L8550	# delay slot filled
	l.lbz   	r12,30(r30)	 # zero_extendqisi2
.L8758:
	l.sw    	20(r1),r16	 # SI store
.L8547:
	l.lwz   	r3,20(r1)	 # SI load
	l.slli  	r14,r3,2
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sw    	52(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L8553	# delay slot filled
	l.sw    	32(r1),r11	 # SI store
	l.lwz   	r12,12(r2)	 # SI load
	l.ori   	r22,r11,0	 # move reg to reg
	l.addi  	r15,r12,10
	l.ori   	r13,r11,0	 # move reg to reg
	l.addi  	r12,r0,0	 # move immediate I
.L8554:
	l.lwz   	r4,20(r1)	 # SI load
	l.sfgts 	r4,r12
	l.bnf	.L8798	# delay slot filled
	l.addi  	r12,r12,1
	l.lhz   	r3,0(r15)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.sw    	0(r13),r3	 # SI store
	l.addi  	r15,r15,16
	l.j     	.L8554	# delay slot filled
	l.addi  	r13,r13,4
.L8766:
	l.j     	.L8496	# delay slot filled
	l.ori   	r3,r6,0	  # movqi: move reg to reg
.L8767:
	l.sfnei	r3,0
	l.bnf	.L8727
	l.nop			# nop delay slot
	l.j     	.L8810	# delay slot filled
	l.add   	r14,r14,r2
.L8694:
	l.j     	.L8482	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
.L8545:
	l.lbz   	r2,4(r26)	 # zero_extendqisi2
	l.sfeqi	r2,113
	l.bf	.L8581	# delay slot filled
	l.sfgtui	r2,113
	l.bf	.L8583	# delay slot filled
	l.sfeqi	r2,114
	l.sfeqi	r2,112
	l.bf	.L8847	# delay slot filled
	l.lbz   	r2,208(r1)	 # zero_extendqisi2
	l.addi  	r18,r0,0	 # move immediate I
.L8579:
	l.lhz   	r2,6(r26)	 # zero_extendqisi2
.L8824:
	l.andi  	r2,r2,8
	l.sfeqi	r2,0
	l.bf	.L8823	# delay slot filled
	l.lwz   	r3,216(r1)	 # SI load
	l.lwz   	r2,0(r26)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r22,0(r2)	 # SI load
	l.addi  	r2,r0,7	 # move immediate I
	l.slli  	r4,r22,2
	l.add   	r4,r4,r22
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r4,16
	l.sfeqi	r11,0
	l.bf	.L8539	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r2,8(r20)	 # SI load
	l.addi  	r24,r11,12
	l.lwz   	r3,20(r2)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.lbz   	r3,57(r3)	 # zero_extendqisi2
	l.sh    	6(r11),r22	 # movhi
	l.sb    	4(r11),r3	    # movqi
.L8599:
	l.sfgts 	r22,r2
	l.bnf	.L8799	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.lwz   	r5,28(r26)	 # SI load
	l.jal   	multiSelectCollSeq.clone.133	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L8600	# delay slot filled
	l.sw    	0(r24),r11	 # SI store
	l.lwz   	r4,44(r20)	 # SI load
	l.sw    	0(r24),r4	 # SI store
.L8600:
	l.addi  	r2,r2,1
	l.j     	.L8599	# delay slot filled
	l.addi  	r24,r24,4
.L8799:
	l.sub   	r30,r0,r16
	l.addi  	r28,r0,-1	 # move immediate I
	l.or    	r30,r16,r30
	l.srli  	r30,r30,31
.L8733:
	l.addi  	r2,r26,56
	l.addi  	r24,r0,2	 # move immediate I
.L8605:
	l.lwz   	r4,0(r2)	 # SI load
	l.sfltsi	r4,0
	l.bf	.L8603	# delay slot filled
	l.sfeqi	r30,0
	l.bf	.L8848	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,12(r16)	 # SI load
	l.sfges 	r4,r3
	l.bf	.L8848	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8604	# delay slot filled
	l.slli  	r7,r4,2
	l.slli  	r6,r4,4
	l.add   	r6,r7,r6
	l.add   	r3,r3,r6
	l.sw    	8(r3),r22	 # SI store
.L8604:
	l.ori   	r3,r16,0	 # move reg to reg
.L8848:
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r6,r0,-6	 # move immediate I
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r24,r24,-1
	l.sw    	0(r2),r28	 # SI store
	l.sfnei	r24,0
	l.bf	.L8605	# delay slot filled
	l.addi  	r2,r2,4
.L8603:
	l.lwz   	r26,28(r26)	 # SI load
	l.sfnei	r26,0
	l.bf	.L8733	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r2,r26,0	 # move reg to reg
	l.j     	.L8823	# delay slot filled
	l.lwz   	r3,216(r1)	 # SI load
.L8580:
	l.lbz   	r2,208(r1)	 # zero_extendqisi2
.L8847:
	l.sfnei	r2,1
	l.bf	.L8585
	l.nop			# nop delay slot
	l.lwz   	r2,40(r26)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L8800
	l.nop			# nop delay slot
.L8585:
	l.lwz   	r22,68(r28)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r2,r22,1
	l.addi  	r4,r0,118	 # move immediate I
	l.sw    	68(r28),r2	 # SI store
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r2,36(r26)	 # SI load
	l.sw    	56(r26),r11	 # SI store
	l.lhz   	r3,6(r2)	 # zero_extendqisi2
	l.ori   	r3,r3,8
	l.sh    	6(r2),r3	 # movhi
	l.addi  	r24,r1,192
.L8855:
	l.addi  	r8,r0,0	 # move immediate I
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.addi  	r18,r0,0	 # move immediate I
	l.sb    	192(r1),r6	    # movqi
	l.sw    	196(r1),r22	 # SI store
	l.sb    	193(r1),r7	    # movqi
	l.sw    	200(r1),r8	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	204(r1),r8	 # SI store
	l.sfne 	r11,r18
	l.bf	.L8539	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbz   	r3,4(r26)	 # zero_extendqisi2
	l.sfnei	r3,114
	l.bf	.L8587	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r2,r0,2	 # move immediate I
.L8587:
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.lwz   	r11,40(r26)	 # SI load
	l.lwz   	r30,44(r26)	 # SI load
	l.ori   	r4,r26,0	 # move reg to reg
	l.sw    	28(r26),r3	 # SI store
	l.sw    	40(r26),r3	 # SI store
	l.sw    	44(r26),r3	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.sb    	192(r1),r2	    # movqi
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	20(r1),r11	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,24(r26)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r18,28(r26)	 # SI load
	l.sw    	24(r26),r4	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
	l.sw    	28(r26),r14	 # SI store
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,40(r26)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,20(r1)	 # SI load
	l.sw    	44(r26),r30	 # SI store
	l.sw    	40(r26),r5	 # SI store
	l.sw    	48(r26),r6	 # SI store
	l.sfne 	r2,r6
	l.bf	.L8539	# delay slot filled
	l.sw    	52(r26),r6	 # SI store
	l.lbz   	r2,208(r1)	 # zero_extendqisi2
	l.sfnei	r2,1
	l.bnf	.L8801	# delay slot filled
	l.sfnei	r2,5
	l.bnf	.L8802	# delay slot filled
	l.ori   	r2,r26,0	 # move reg to reg
.L8589:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	computeLimitRegisters	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,122	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r3,r0,-1	 # move immediate I
	l.lwz   	r5,0(r26)	 # SI load
	l.lwz   	r24,12(r16)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.sw    	4(r1),r3	 # SI store
	l.addi  	r3,r1,208
	l.sw    	0(r1),r7	 # SI store
	l.sw    	8(r1),r3	 # SI store
	l.sw    	12(r1),r14	 # SI store
	l.sw    	16(r1),r2	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r6,r5,12
	l.ori   	r7,r22,0	 # move reg to reg
	l.jal   	selectInnerLoop.clone.162	# delay slot filled
	l.lwz   	r8,0(r5)	 # SI load
	l.lwz   	r3,32(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8591	# delay slot filled
	l.lwz   	r4,12(r16)	 # SI load
	l.xori  	r5,r14,0xffff
	l.slli  	r5,r5,2
	l.add   	r3,r3,r5
	l.sw    	0(r3),r4	 # SI store
.L8591:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,106	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.lwz   	r3,32(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8761	# delay slot filled
	l.lwz   	r4,12(r16)	 # SI load
	l.xori  	r2,r2,0xffff
	l.slli  	r2,r2,2
	l.add   	r3,r3,r2
	l.sw    	0(r3),r4	 # SI store
.L8761:
	l.ori   	r3,r16,0	 # move reg to reg
.L8825:
	l.addi  	r4,r0,33	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L8824	# delay slot filled
	l.lhz   	r2,6(r26)	 # zero_extendqisi2
.L8802:
.L8590:
	l.lwz   	r4,28(r2)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L8803	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.j     	.L8590	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
.L8801:
	l.lwz   	r2,212(r1)	 # SI load
	l.sfne 	r22,r2
	l.bf	.L8589
	l.nop			# nop delay slot
	l.j     	.L8824	# delay slot filled
	l.lhz   	r2,6(r26)	 # zero_extendqisi2
.L8800:
	l.lwz   	r2,44(r26)	 # SI load
	l.sfnei	r2,0
	l.bf	.L8585	# delay slot filled
	l.lwz   	r22,212(r1)	 # SI load
	l.j     	.L8855	# delay slot filled
	l.addi  	r24,r1,192
.L8803:
	l.lwz   	r5,0(r2)	 # SI load
	l.jal   	generateColumnNames.clone.131	# delay slot filled
	l.addi  	r6,r5,12
	l.j     	.L8589
	l.nop			# nop delay slot
.L8583:
	l.bf	.L8580	# delay slot filled
	l.sfeqi	r2,115
	l.bnf	.L8579	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.lwz   	r22,68(r28)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r2,r22,2
	l.addi  	r4,r0,118	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r6,r24,0	 # move reg to reg
	l.sw    	68(r28),r2	 # SI store
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r30,r22,1
	l.lwz   	r2,36(r26)	 # SI load
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.lhz   	r4,6(r2)	 # zero_extendqisi2
	l.ori   	r4,r4,8
	l.sw    	56(r26),r11	 # SI store
	l.sh    	6(r2),r4	 # movhi
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r5,r1,192
	l.sb    	192(r1),r8	    # movqi
	l.sw    	196(r1),r22	 # SI store
	l.sb    	193(r1),r24	    # movqi
	l.sw    	200(r1),r24	 # SI store
	l.sw    	204(r1),r24	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.ori   	r18,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L8539	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r6,r24,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r5,r30,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r2,40(r26)	 # SI load
	l.lwz   	r24,44(r26)	 # SI load
	l.sw    	28(r26),r18	 # SI store
	l.sw    	40(r26),r18	 # SI store
	l.sw    	44(r26),r18	 # SI store
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r5,r1,192
	l.sw    	60(r26),r11	 # SI store
	l.sw    	20(r1),r2	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	196(r1),r30	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r18,28(r26)	 # SI load
	l.lwz   	r4,40(r26)	 # SI load
	l.sw    	28(r26),r14	 # SI store
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,20(r1)	 # SI load
	l.sw    	44(r26),r24	 # SI store
	l.sfnei	r2,0
	l.bf	.L8539	# delay slot filled
	l.sw    	40(r26),r3	 # SI store
	l.lbz   	r2,208(r1)	 # zero_extendqisi2
	l.sfnei	r2,5
	l.bnf	.L8804	# delay slot filled
	l.ori   	r2,r26,0	 # move reg to reg
.L8593:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	computeLimitRegisters	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,122	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.lbz   	r2,21(r28)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L8595
	l.nop			# nop delay slot
	l.lwz   	r2,72(r28)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	72(r28),r2	 # SI store
.L8596:
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r4,r0,8	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r2,0	 # move reg to reg
	l.ori   	r5,r30,0	 # move reg to reg
	l.ori   	r6,r24,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,36	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.sw    	20(r1),r11	 # SI store
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
	l.lwz   	r5,0(r26)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	4(r1),r2	 # SI store
	l.addi  	r2,r1,208
	l.sw    	0(r1),r4	 # SI store
	l.sw    	8(r1),r2	 # SI store
	l.sw    	12(r1),r24	 # SI store
	l.sw    	16(r1),r14	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r6,r5,12
	l.ori   	r7,r22,0	 # move reg to reg
	l.jal   	selectInnerLoop.clone.162	# delay slot filled
	l.lwz   	r8,0(r5)	 # SI load
	l.lwz   	r2,32(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8597	# delay slot filled
	l.lwz   	r3,12(r16)	 # SI load
	l.xori  	r4,r24,0xffff
	l.slli  	r4,r4,2
	l.add   	r2,r2,r4
	l.sw    	0(r2),r3	 # SI store
.L8597:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,106	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,20(r1)	 # SI load
	l.lwz   	r2,32(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8598	# delay slot filled
	l.lwz   	r3,12(r16)	 # SI load
	l.xori  	r4,r14,0xffff
	l.slli  	r4,r4,2
	l.add   	r2,r2,r4
	l.sw    	0(r2),r3	 # SI store
.L8598:
	l.ori   	r5,r30,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L8825	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L8595:
	l.addi  	r2,r2,-1
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.addi  	r3,r2,6
	l.sb    	21(r28),r2	    # movqi
	l.slli  	r2,r3,2
	l.add   	r2,r28,r2
	l.j     	.L8596	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L8804:
.L8594:
	l.lwz   	r4,28(r2)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L8805	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.j     	.L8594	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
.L8581:
	l.lwz   	r3,40(r26)	 # SI load
	l.lwz   	r2,44(r26)	 # SI load
	l.addi  	r30,r1,208
	l.sw    	40(r14),r3	 # SI store
	l.sw    	44(r14),r2	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3Select	# delay slot filled
	l.ori   	r18,r24,0	 # move reg to reg
	l.sw    	40(r26),r24	 # SI store
	l.sw    	44(r26),r24	 # SI store
	l.sfnei	r11,0
	l.bf	.L8539	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,48(r14)	 # SI load
	l.lwz   	r4,52(r14)	 # SI load
	l.sw    	28(r26),r11	 # SI store
	l.sw    	48(r26),r3	 # SI store
	l.sw    	52(r26),r4	 # SI store
	l.sfeqi	r3,0
	l.bf	.L8584	# delay slot filled
	l.ori   	r22,r3,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,126	 # move immediate I
	l.ori   	r22,r11,0	 # move reg to reg
.L8584:
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3Select	# delay slot filled
	l.ori   	r5,r30,0	 # move reg to reg
	l.lwz   	r18,28(r26)	 # SI load
	l.sw    	28(r26),r14	 # SI store
	l.sfnei	r11,0
	l.bf	.L8539	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bf	.L8579	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.j     	.L8824	# delay slot filled
	l.lhz   	r2,6(r26)	 # zero_extendqisi2
.L8805:
	l.lwz   	r5,0(r2)	 # SI load
	l.jal   	generateColumnNames.clone.131	# delay slot filled
	l.addi  	r6,r5,12
	l.j     	.L8593
	l.nop			# nop delay slot
.L8798:
	l.add   	r12,r14,r4
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r12,16
	l.sfeqi	r11,0
	l.bf	.L8553	# delay slot filled
	l.sw    	32(r1),r11	 # SI store
	l.addi  	r20,r11,12
	l.lwz   	r12,8(r30)	 # SI load
	l.add   	r14,r20,r14
	l.lwz   	r5,20(r1)	 # SI load
	l.sw    	8(r11),r14	 # SI store
	l.lwz   	r12,20(r12)	 # SI load
	l.sh    	6(r11),r5	 # movhi
	l.addi  	r14,r0,0	 # move immediate I
	l.lbz   	r12,57(r12)	 # zero_extendqisi2
	l.ori   	r18,r14,0	 # move reg to reg
	l.sb    	4(r11),r12	    # movqi
.L8556:
	l.lwz   	r7,20(r1)	 # SI load
	l.sfgts 	r7,r18
	l.bnf	.L8553
	l.nop			# nop delay slot
	l.lwz   	r5,12(r2)	 # SI load
	l.add   	r4,r5,r14
	l.lwz   	r16,0(r4)	 # SI load
	l.lhz   	r4,2(r16)	 # zero_extendqisi2
	l.andi  	r4,r4,256
	l.sfeqi	r4,0
	l.bf	.L8557	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.lwz   	r11,32(r16)	 # SI load
.L8558:
	l.lwz   	r6,32(r1)	 # SI load
	l.add   	r5,r5,r14
	l.sw    	0(r20),r11	 # SI store
	l.lwz   	r4,8(r6)	 # SI load
	l.lbz   	r5,8(r5)	 # zero_extendqisi2
	l.add   	r4,r4,r18
	l.addi  	r20,r20,4
	l.addi  	r18,r18,1
	l.sb    	0(r4),r5	    # movqi
	l.addi  	r14,r14,16
	l.j     	.L8556	# delay slot filled
	l.addi  	r22,r22,4
.L8553:
	l.sw    	24(r26),r2	 # SI store
	l.lwz   	r3,0(r28)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r8,28(r1)	 # SI load
	l.sw    	24(r8),r11	 # SI store
	l.lwz   	r11,44(r1)	 # SI load
	l.sfeqi	r11,113
	l.bf	.L8696	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r12,0(r26)	 # SI load
	l.lwz   	r14,0(r12)	 # SI load
	l.addi  	r4,r14,1
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.slli  	r18,r14,2
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	48(r1),r11	 # SI store
	l.add   	r12,r18,r14
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r12,16
	l.sfeqi	r11,0
	l.bf	.L8560	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.addi  	r16,r11,12
	l.lwz   	r12,8(r30)	 # SI load
	l.add   	r18,r16,r18
	l.lwz   	r12,20(r12)	 # SI load
	l.sh    	6(r11),r14	 # movhi
	l.sw    	8(r11),r18	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
	l.lbz   	r12,57(r12)	 # zero_extendqisi2
	l.sb    	4(r11),r12	    # movqi
.L8561:
	l.sfgts 	r14,r2
	l.bnf	.L8560	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	multiSelectCollSeq.clone.133	# delay slot filled
	l.lwz   	r5,28(r26)	 # SI load
	l.lwz   	r4,8(r20)	 # SI load
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.add   	r4,r4,r2
	l.sw    	0(r16),r11	 # SI store
	l.sb    	0(r4),r3	    # movqi
	l.addi  	r16,r16,4
	l.j     	.L8561	# delay slot filled
	l.addi  	r2,r2,1
.L8557:
	l.lwz   	r5,28(r26)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	multiSelectCollSeq.clone.133	# delay slot filled
	l.lwz   	r6,0(r22)	 # SI load
	l.lhz   	r4,2(r16)	 # zero_extendqisi2
	l.ori   	r4,r4,256
	l.sw    	32(r16),r11	 # SI store
	l.sh    	2(r16),r4	 # movhi
	l.j     	.L8558	# delay slot filled
	l.lwz   	r5,12(r2)	 # SI load
.L8696:
	l.addi  	r20,r0,0	 # move immediate I
	l.sw    	48(r1),r20	 # SI store
.L8560:
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r5,28(r1)	 # SI load
	l.movhi  	r6,hi(.LC107)
	l.sw    	36(r5),r4	 # SI store
	l.sw    	28(r26),r4	 # SI store
	l.ori   	r6,r6,lo(.LC107)
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3ResolveOrderGroupBy.clone.118	# delay slot filled
	l.lwz   	r5,24(r26)	 # SI load
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r12,28(r6)	 # SI load
	l.sfnei	r12,0
	l.bf	.L8849	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r6,0	 # move reg to reg
	l.lwz   	r5,24(r6)	 # SI load
	l.movhi  	r6,hi(.LC107)
	l.jal   	sqlite3ResolveOrderGroupBy.clone.118	# delay slot filled
	l.ori   	r6,r6,lo(.LC107)
	l.ori   	r3,r28,0	 # move reg to reg
.L8849:
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	computeLimitRegisters	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r7,44(r1)	 # SI load
	l.lwz   	r2,48(r26)	 # SI load
	l.xori  	r12,r7,113
	l.sub   	r13,r0,r12
	l.or    	r12,r13,r12
	l.xori  	r12,r12,0xffff
	l.srli  	r12,r12,31
	l.sfeqi	r12,0
	l.bf	.L8697	# delay slot filled
	l.sw    	72(r1),r12	 # SI store
	l.sub   	r12,r0,r2
	l.or    	r12,r12,r2
	l.sfgesi	r12,0
	l.bf	.L8850	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.lwz   	r14,72(r28)	 # SI load
	l.lwz   	r12,52(r26)	 # SI load
	l.addi  	r16,r14,2
	l.sfeqi	r12,0
	l.sw    	72(r28),r16	 # SI store
	l.bf	.L8565	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r2,r12,1
.L8565:
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,20	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,20	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
.L8564:
	l.lwz   	r8,44(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r8,r8,-112
	l.lwz   	r4,40(r26)	 # SI load
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.sw    	80(r1),r8	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,44(r26)	 # SI load
	l.sw    	40(r26),r11	 # SI store
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.sw    	76(r1),r11	 # SI store
	l.lwz   	r2,72(r28)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r2,6
	l.addi  	r6,r2,3
	l.sw    	68(r1),r4	 # SI store
	l.addi  	r5,r2,1
	l.sw    	60(r1),r6	 # SI store
	l.lwz   	r7,68(r1)	 # SI load
	l.sw    	44(r26),r3	 # SI store
	l.addi  	r8,r2,4
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r11,r0,10	 # movqi: move immediate
	l.sw    	40(r1),r5	 # SI store
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.sw    	72(r28),r7	 # SI store
	l.sw    	196(r1),r5	 # SI store
	l.lwz   	r7,60(r1)	 # SI load
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.sw    	64(r1),r8	 # SI store
	l.sw    	180(r1),r7	 # SI store
	l.sw    	200(r1),r6	 # SI store
	l.sw    	204(r1),r6	 # SI store
	l.sw    	184(r1),r6	 # SI store
	l.sw    	188(r1),r6	 # SI store
	l.sb    	193(r1),r5	    # movqi
	l.sb    	177(r1),r5	    # movqi
	l.sb    	192(r1),r11	    # movqi
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.sb    	176(r1),r11	    # movqi
	l.lwz   	r3,12(r24)	 # SI load
	l.lwz   	r4,28(r1)	 # SI load
	l.sw    	88(r1),r3	 # SI store
	l.sw    	48(r4),r14	 # SI store
	l.addi  	r5,r1,192
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r22,r2,2
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	84(r1),r11	 # SI store
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r2,r2,5
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,60	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,40(r1)	 # SI load
	l.lwz   	r4,12(r24)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r14,52(r26)	 # SI load
	l.lwz   	r18,48(r26)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	92(r1),r4	 # SI store
	l.addi  	r5,r1,176
	l.ori   	r4,r26,0	 # move reg to reg
	l.sw    	52(r26),r6	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	48(r26),r16	 # SI store
	l.lwz   	r6,64(r1)	 # SI load
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.sw    	52(r26),r14	 # SI store
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	48(r26),r18	 # SI store
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,60	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,60(r1)	 # SI load
	l.lwz   	r11,48(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	0(r1),r11	 # SI store
	l.addi  	r13,r0,-16	 # move immediate I
	l.lwz   	r11,36(r1)	 # SI load
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r5,r1,200
	l.addi  	r6,r1,204
	l.lwz   	r7,24(r1)	 # SI load
	l.ori   	r8,r2,0	 # move reg to reg
	l.sw    	4(r1),r20	 # SI store
	l.sw    	8(r1),r13	 # SI store
	l.jal   	generateOutputSubroutine.clone.142	# delay slot filled
	l.sw    	12(r1),r11	 # SI store
	l.lwz   	r3,80(r1)	 # SI load
	l.sfgtui	r3,1
	l.bf	.L8566	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r11,48(r1)	 # SI load
	l.addi  	r13,r0,-17	 # move immediate I
	l.sw    	0(r1),r11	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r11,36(r1)	 # SI load
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r5,r1,184
	l.addi  	r6,r1,188
	l.lwz   	r7,24(r1)	 # SI load
	l.lwz   	r8,68(r1)	 # SI load
	l.sw    	4(r1),r20	 # SI store
	l.sw    	8(r1),r13	 # SI store
	l.jal   	generateOutputSubroutine.clone.142	# delay slot filled
	l.sw    	12(r1),r11	 # SI store
	l.sw    	76(r1),r11	 # SI store
.L8566:
	l.lwz   	r3,44(r1)	 # SI load
	l.addi  	r12,r3,-114
	l.sfgtui	r12,1
	l.bnf	.L8806	# delay slot filled
	l.addi  	r4,r0,11	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.lwz   	r6,36(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r6,76(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,47	 # move immediate I
	l.lwz   	r5,68(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,60	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,60(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
.L8568:
	l.lwz   	r4,44(r1)	 # SI load
	l.sfeqi	r4,115
	l.bf	.L8569	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r4,r0,11	 # move immediate I
	l.lwz   	r6,36(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,47	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,60	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,40(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,47	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,60	 # move immediate I
	l.lwz   	r5,40(r1)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,11	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
	l.lwz   	r5,72(r1)	 # SI load
	l.sfnei	r5,0
	l.bf	.L8570	# delay slot filled
	l.addi  	r4,r0,60	 # move immediate I
	l.lwz   	r5,40(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,11	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.lwz   	r5,72(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
.L8570:
	l.lwz   	r6,80(r1)	 # SI load
.L8826:
	l.sfgtui	r6,1
	l.bf	.L8571	# delay slot filled
	l.lwz   	r14,12(r24)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,47	 # move immediate I
	l.lwz   	r5,68(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,76(r1)	 # SI load
.L8571:
	l.addi  	r4,r0,60	 # move immediate I
	l.lwz   	r5,60(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,11	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r6,56(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,84(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,64(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,47	 # move immediate I
	l.lwz   	r5,40(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,88(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,47	 # move immediate I
	l.lwz   	r5,60(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,92(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,11	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,11	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r12,32(r24)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L8572	# delay slot filled
	l.lwz   	r13,12(r24)	 # SI load
	l.lwz   	r7,56(r1)	 # SI load
	l.xori  	r15,r7,0xffff
	l.slli  	r15,r15,2
	l.add   	r12,r12,r15
	l.sw    	0(r12),r13	 # SI store
.L8572:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r12,r0,-15	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,133	 # move immediate I
	l.lwz   	r8,52(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r12	 # SI store
	l.lwz   	r8,32(r1)	 # SI load
	l.addi  	r12,r0,-16	 # move immediate I
	l.addi  	r4,r0,95	 # move immediate I
	l.lwz   	r5,200(r1)	 # SI load
	l.lwz   	r6,184(r1)	 # SI load
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r12	 # SI store
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,132	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.lwz   	r8,48(r1)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L8573
	l.nop			# nop delay slot
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r7,56(r28)	 # SI load
	l.addi  	r2,r11,1
	l.sfles 	r2,r7
	l.bf	.L8573
	l.nop			# nop delay slot
	l.sw    	56(r28),r2	 # SI store
	l.sw    	60(r28),r8	 # SI store
.L8573:
	l.lwz   	r2,32(r24)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L8574	# delay slot filled
	l.lwz   	r7,12(r24)	 # SI load
	l.lwz   	r3,36(r1)	 # SI load
	l.xori  	r5,r3,0xffff
	l.slli  	r5,r5,2
	l.add   	r2,r2,r5
	l.sw    	0(r2),r7	 # SI store
.L8574:
	l.lwz   	r4,24(r1)	 # SI load
	l.lbz   	r2,0(r4)	 # zero_extendqisi2
	l.sfnei	r2,5
	l.bnf	.L8807	# delay slot filled
	l.lwz   	r5,28(r1)	 # SI load
	l.lwz   	r2,28(r26)	 # SI load
.L8827:
	l.sfeqi	r2,0
	l.bf	.L8851	# delay slot filled
	l.lwz   	r5,28(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r5,28(r1)	 # SI load
.L8851:
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L8482	# delay slot filled
	l.sw    	28(r26),r5	 # SI store
.L8807:
.L8576:
	l.lwz   	r2,28(r5)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L8808	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.j     	.L8576	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
.L8569:
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,47	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r20,r18,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r5,40(r1)	 # SI load
	l.addi  	r4,r0,60	 # move immediate I
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r2,r11,1
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,11	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
	l.j     	.L8826	# delay slot filled
	l.lwz   	r6,80(r1)	 # SI load
.L8697:
	l.addi  	r16,r0,0	 # move immediate I
.L8850:
	l.j     	.L8564	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
.L8806:
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,36(r1)	 # SI load
	l.j     	.L8568	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L8808:
	l.lwz   	r5,0(r5)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	generateColumnNames.clone.131	# delay slot filled
	l.addi  	r6,r5,12
	l.j     	.L8827	# delay slot filled
	l.lwz   	r2,28(r26)	 # SI load
.LFE1072:
	.size	sqlite3Select, .-sqlite3Select
	.align	4
.proc	sqlite3CodeSubselect
	.type	sqlite3CodeSubselect, @function
sqlite3CodeSubselect:
.LFB774:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3210:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-40(r1),r14	 # SI store
.LCFI3211:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3212:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3213:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3214:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3215:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3216:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3217:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3218:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3219:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3220:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-92
.LCFI3221:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r4,r2,12
	l.ori   	r18,r5,0	 # move reg to reg
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r30,r6,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L8856	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r4,84(r2)	 # SI load
	l.lhz   	r3,2(r16)	 # zero_extendqisi2
	l.addi  	r4,r4,1
	l.andi  	r3,r3,32
	l.addi  	r26,r0,0	 # move immediate I
	l.sfne 	r3,r26
	l.bnf	.L8881	# delay slot filled
	l.sw    	84(r2),r4	 # SI store
.L8858:
	l.lbz   	r3,0(r16)	 # zero_extendqisi2
	l.sfeqi	r3,70
	l.bf	.L8861	# delay slot filled
	l.sfeqi	r3,116
	l.bf	.L8860	# delay slot filled
	l.sfeqi	r3,20
	l.bf	.L8860
	l.nop			# nop delay slot
.L8859:
	l.sfeqi	r26,0
.L8889:
	l.bnf	.L8892	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L8877:
	l.jal   	sqlite3ExprCachePop.clone.179	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L8856:
	l.addi	r1,r1,92
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L8881:
	l.lwz   	r3,484(r2)	 # SI load
	l.sfne 	r3,r26
	l.bf	.L8858	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r20,72(r2)	 # SI load
	l.addi  	r4,r0,11	 # move immediate I
	l.addi  	r20,r20,1
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.sw    	72(r2),r20	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.j     	.L8858	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
.L8860:
	l.lwz   	r6,72(r2)	 # SI load
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.addi  	r6,r6,1
	l.lwz   	r18,28(r16)	 # SI load
	l.sb    	13(r1),r4	    # movqi
	l.sw    	72(r2),r6	 # SI store
	l.addi  	r7,r0,0	 # move immediate I
	l.lbz   	r3,0(r16)	 # zero_extendqisi2
	l.sw    	16(r1),r6	 # SI store
	l.sw    	20(r1),r7	 # SI store
	l.sfnei	r3,116
	l.bnf	.L8883	# delay slot filled
	l.sw    	24(r1),r7	 # SI store
	l.addi  	r7,r0,3	 # movqi: move immediate
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sb    	12(r1),r7	    # movqi
	l.lwz   	r4,40(r18)	 # SI load
.L8891:
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.movhi  	r7,hi(one.14549)
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,129	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r7,lo(one.14549)
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	40(r18),r11	 # SI store
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3Select	# delay slot filled
	l.addi  	r5,r1,12
	l.sfnei	r11,0
	l.bf	.L8856	# delay slot filled
	l.sfeqi	r26,0
	l.lwz   	r3,16(r1)	 # SI load
	l.bf	.L8877	# delay slot filled
	l.sw    	40(r16),r3	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
.L8892:
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.addi  	r4,r26,-1
	l.j     	.L8877
	l.nop			# nop delay slot
.L8861:
	l.sfeqi	r18,0
	l.bnf	.L8884	# delay slot filled
	l.lwz   	r20,20(r16)	 # SI load
.L8862:
	l.jal   	sqlite3ExprAffinity	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sub   	r6,r0,r30
	l.lwz   	r5,68(r2)	 # SI load
	l.or    	r6,r6,r30
	l.addi  	r3,r5,1
	l.xori  	r6,r6,0xffff
	l.sw    	36(r16),r5	 # SI store
	l.srli  	r6,r6,31
	l.sw    	68(r2),r3	 # SI store
	l.addi  	r4,r0,118	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sb    	47(r1),r11	    # movqi
	l.addi  	r4,r0,0	 # move immediate I
	l.lhz   	r3,2(r16)	 # zero_extendqisi2
	l.addi  	r6,r0,1	 # movhi: move immediate
	l.sw    	32(r1),r4	 # SI store
	l.andi  	r3,r3,4096
	l.sw    	8(r1),r11	 # SI store
	l.sw    	28(r1),r4	 # SI store
	l.sw    	36(r1),r4	 # SI store
	l.sw    	40(r1),r4	 # SI store
	l.sfeq 	r3,r4
	l.bnf	.L8885	# delay slot filled
	l.sh    	34(r1),r6	 # movhi
	l.lwz   	r18,28(r16)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L8864	# delay slot filled
	l.lbs   	r3,47(r1)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L8893	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r3,r0,98	 # movqi: move immediate
	l.sb    	47(r1),r3	    # movqi
	l.ori   	r3,r2,0	 # move reg to reg
.L8893:
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.lwz   	r4,20(r16)	 # SI load
	l.lbz   	r3,21(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L8866	# delay slot filled
	l.sw    	40(r1),r11	 # SI store
	l.lwz   	r22,72(r2)	 # SI load
	l.addi  	r22,r22,1
	l.sw    	4(r1),r22	 # SI store
	l.sw    	72(r2),r22	 # SI store
.L8867:
	l.addi  	r22,r22,1
	l.sw    	72(r2),r22	 # SI store
.L8869:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r20,0(r18)	 # SI load
	l.sflesi	r20,0
	l.bf	.L8870	# delay slot filled
	l.lwz   	r24,12(r18)	 # SI load
	l.j     	.L8880	# delay slot filled
	l.addi  	r28,r0,1	 # move immediate I
.L8887:
	l.lwz   	r6,12(r14)	 # SI load
	l.addi  	r4,r0,38	 # move immediate I
	l.addi  	r6,r6,2
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r20,r20,-1
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,110	 # move immediate I
	l.lwz   	r5,36(r16)	 # SI load
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r24,r24,16
	l.sflesi	r20,0
	l.bf	.L8894	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L8880:
	l.sfeqi	r26,0
.L8895:
	l.bnf	.L8886	# delay slot filled
	l.lwz   	r18,0(r24)	 # SI load
.L8871:
	l.ori   	r4,r18,0	 # move reg to reg
.L8890:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeTarget	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
	l.ori   	r6,r28,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r7,r22,0	 # move reg to reg
	l.addi  	r8,r1,47
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.sfeqi	r30,0
	l.bnf	.L8887	# delay slot filled
	l.addi  	r4,r0,79	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r28	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.addi  	r20,r20,-1
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,108	 # move immediate I
	l.lwz   	r5,36(r16)	 # SI load
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r24,r24,16
	l.sflesi	r20,0
	l.bnf	.L8895	# delay slot filled
	l.sfeqi	r26,0
.L8870:
	l.ori   	r3,r2,0	 # move reg to reg
.L8894:
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.lwz   	r4,4(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
.L8864:
	l.sfnei	r30,0
.L8896:
	l.bf	.L8859	# delay slot filled
	l.lwz   	r4,8(r1)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r1,28
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-6	 # move immediate I
	l.j     	.L8889	# delay slot filled
	l.sfeqi	r26,0
.L8886:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	exprIsConst	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L8871	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r26,-1
	l.addi  	r5,r0,2	 # move immediate I
	l.jal   	sqlite3VdbeChangeToNoop	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.j     	.L8890	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
.L8866:
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r4,r4,2
	l.sfnei	r3,0
	l.add   	r4,r2,r4
	l.lwz   	r4,0(r4)	 # SI load
	l.bnf	.L8888	# delay slot filled
	l.sw    	4(r1),r4	 # SI store
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r2,r3
	l.j     	.L8869	# delay slot filled
	l.lwz   	r22,0(r3)	 # SI load
.L8885:
	l.addi  	r7,r0,7	 # movqi: move immediate
	l.lwz   	r6,36(r16)	 # SI load
	l.sb    	12(r1),r7	    # movqi
	l.lbz   	r7,47(r1)	 # zero_extendqisi2
	l.sw    	16(r1),r6	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r4,28(r16)	 # SI load
	l.addi  	r5,r1,12
	l.sw    	20(r1),r6	 # SI store
	l.sw    	24(r1),r6	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sb    	13(r1),r7	    # movqi
	l.sfnei	r11,0
	l.bf	.L8856
	l.nop			# nop delay slot
	l.lwz   	r3,28(r16)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8896	# delay slot filled
	l.sfnei	r30,0
	l.lwz   	r4,0(r3)	 # SI load
	l.sflesi	r4,0
	l.bf	.L8896	# delay slot filled
	l.sfnei	r30,0
	l.lwz   	r5,12(r3)	 # SI load
	l.lwz   	r4,20(r16)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3BinaryCompareCollSeq	# delay slot filled
	l.lwz   	r5,0(r5)	 # SI load
	l.j     	.L8864	# delay slot filled
	l.sw    	40(r1),r11	 # SI store
.L8884:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.j     	.L8862
	l.nop			# nop delay slot
.L8883:
	l.ori   	r5,r7,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r7,r0,6	 # movqi: move immediate
	l.addi  	r4,r0,119	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sb    	12(r1),r7	    # movqi
	l.j     	.L8891	# delay slot filled
	l.lwz   	r4,40(r18)	 # SI load
.L8888:
	l.j     	.L8867	# delay slot filled
	l.lwz   	r22,72(r2)	 # SI load
.LFE774:
	.size	sqlite3CodeSubselect, .-sqlite3CodeSubselect
	.section	.rodata.str1.1
.LC239:
	.string	"misuse of aggregate: %T"
.LC240:
	.string	"RAISE() may only be used within a trigger-program"
	.section .text
	.align	4
.proc	sqlite3ExprCodeTarget
	.type	sqlite3ExprCodeTarget, @function
sqlite3ExprCodeTarget:
.LFB791:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3222:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3223:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-36(r1),r16	 # SI store
.LCFI3224:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	-32(r1),r18	 # SI store
.LCFI3225:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3226:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3227:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3228:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3229:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3230:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3231:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3232:
	l.addi  	r1,r1,-212
.LCFI3233:
	l.lwz   	r14,12(r2)	 # SI load
	l.sw    	160(r1),r3	 # SI store
	l.sw    	156(r1),r3	 # SI store
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.lwz   	r26,0(r2)	 # SI load
	l.sfeq 	r14,r3
	l.bf	.L8898	# delay slot filled
	l.ori   	r18,r14,0	 # move reg to reg
	l.sfeq 	r4,r3
	l.bf	.L8899
	l.nop			# nop delay slot
	l.lbz   	r22,0(r4)	 # zero_extendqisi2
	l.addi  	r4,r22,-19
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.sfgtui	r4,135
	l.bnf	.L8993	# delay slot filled
	l.movhi  	r5,hi(.L8924)
.L8974:
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L8912:
	l.lwz   	r4,20(r16)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeTarget	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.lwz   	r4,160(r1)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
.L8900:
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.lwz   	r4,156(r1)	 # SI load
.L8898:
	l.addi	r1,r1,212
.L9007:
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L8993:
	l.slli  	r4,r4,2
	l.ori   	r5,r5,lo(.L8924)
	l.add   	r4,r4,r5
	l.lwz   	r3,0(r4)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L8924:
	.word	.L8901
	.word	.L8902
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8912
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8904
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8905
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8906
	.word	.L8906
	.word	.L8974
	.word	.L8907
	.word	.L8908
	.word	.L8909
	.word	.L8909
	.word	.L8910
	.word	.L8910
	.word	.L8910
	.word	.L8910
	.word	.L8910
	.word	.L8910
	.word	.L8974
	.word	.L8906
	.word	.L8906
	.word	.L8906
	.word	.L8906
	.word	.L8906
	.word	.L8906
	.word	.L8906
	.word	.L8906
	.word	.L8906
	.word	.L8906
	.word	.L8974
	.word	.L8911
	.word	.L8912
	.word	.L8901
	.word	.L8913
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8899
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8902
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8914
	.word	.L8915
	.word	.L8916
	.word	.L8917
	.word	.L8918
	.word	.L8919
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8974
	.word	.L8920
	.word	.L8921
	.word	.L8922
	.word	.L8923
	.word	.L8920
	.section .text
.L8921:
	l.lwz   	r6,36(r16)	 # SI load
	l.sfgesi	r6,0
	l.bnf	.L8994	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.lhz   	r8,2(r16)	 # zero_extendqisi2
	l.lwz   	r4,56(r16)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,40(r16)	 # SI load
	l.jal   	sqlite3ExprCodeGetColumn	# delay slot filled
	l.andi  	r8,r8,512
	l.lwz   	r4,160(r1)	 # SI load
	l.j     	.L8900	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L8920:
	l.lhz   	r24,2(r16)	 # zero_extendqisi2
	l.lwz   	r3,8(r26)	 # SI load
	l.andi  	r24,r24,49152
	l.lwz   	r3,20(r3)	 # SI load
	l.sfnei	r24,0
	l.bf	.L8935	# delay slot filled
	l.lbz   	r7,57(r3)	 # zero_extendqisi2
	l.lwz   	r22,28(r16)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L8935	# delay slot filled
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r28,0(r22)	 # SI load
	l.lwz   	r5,8(r16)	 # SI load
	l.ori   	r4,r4,65535
	l.ori   	r6,r28,0	 # move reg to reg
	l.and   	r5,r5,r4
	l.ori   	r8,r24,0	 # move reg to reg
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r4,4(r16)	 # SI load
	l.andi  	r11,r28,0xff	 # zero_extendqisi2
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.sw    	12(r1),r11	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.lwz   	r4,0(r22)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,12(r22)	 # SI load
	l.ori   	r6,r11,0	 # move reg to reg
	l.addi  	r7,r0,1	 # move immediate I
	l.jal   	sqlite3ExprCodeExprList.clone.160	# delay slot filled
	l.sw    	152(r1),r11	 # SI store
	l.sflesi	r28,1
	l.bf	.L8936	# delay slot filled
	l.sfnei	r28,1
	l.lhz   	r3,2(r16)	 # zero_extendqisi2
	l.andi  	r3,r3,128
	l.sfeqi	r3,0
	l.bnf	.L8995	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
.L8937:
	l.lwz   	r6,12(r22)	 # SI load
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r4,8(r1)	 # SI load
	l.ori   	r5,r28,0	 # move reg to reg
	l.jal   	sqlite3VtabOverloadFunction	# delay slot filled
	l.lwz   	r6,0(r6)	 # SI load
	l.sw    	8(r1),r11	 # SI store
.L8938:
	l.srai  	r24,r28,31
	l.sub   	r24,r24,r28
	l.srli  	r24,r24,31
	l.sfeqi	r24,0
	l.bf	.L8976	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r24,r16,0	 # move reg to reg
	l.ori   	r18,r16,0	 # move reg to reg
	l.j     	.L8942	# delay slot filled
	l.ori   	r30,r16,0	 # move reg to reg
.L8941:
	l.addi  	r18,r18,1
	l.addi  	r16,r16,16
	l.sflesi	r18,31
	l.bf	.L8944	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L8944:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L8939	# delay slot filled
	l.sfgts 	r28,r18
	l.bf	.L8945	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L8945:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L9008	# delay slot filled
	l.lwz   	r6,8(r1)	 # SI load
.L8942:
	l.lwz   	r3,12(r22)	 # SI load
	l.addi  	r4,r0,1	 # move immediate I
	l.add   	r3,r3,r16
	l.jal   	exprIsConst	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L9009	# delay slot filled
	l.sub   	r3,r0,r24
	l.addi  	r4,r0,1	 # move immediate I
	l.sll   	r3,r4,r18
	l.or    	r30,r30,r3
	l.sub   	r3,r0,r24
.L9009:
	l.or    	r3,r24,r3
	l.sfltsi	r3,0
	l.bf	.L8941	# delay slot filled
	l.lwz   	r5,8(r1)	 # SI load
	l.lbz   	r3,3(r5)	 # zero_extendqisi2
	l.srli  	r3,r3,3
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L8941	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,12(r22)	 # SI load
	l.add   	r4,r4,r16
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.lwz   	r4,0(r4)	 # SI load
	l.j     	.L8941	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
.L8902:
	l.lwz   	r18,40(r16)	 # SI load
	l.sfnei	r18,0
	l.bnf	.L8996	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8923:
	l.lwz   	r3,48(r16)	 # SI load
	l.lwz   	r5,44(r16)	 # SI load
	l.add   	r6,r3,r3
	l.lbz   	r4,0(r5)	 # zero_extendqisi2
	l.add   	r3,r6,r3
	l.lwz   	r6,16(r5)	 # SI load
	l.slli  	r3,r3,3
	l.sfnei	r4,0
	l.bf	.L8925	# delay slot filled
	l.add   	r6,r6,r3
	l.j     	.L8900	# delay slot filled
	l.lwz   	r18,16(r6)	 # SI load
.L8904:
	l.lwz   	r4,20(r16)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeTarget	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r3,r16,4
	l.jal   	sqlite3AffinityType	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfeq 	r18,r20
	l.bf	.L8929	# delay slot filled
	l.addi  	r16,r11,44
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
.L8929:
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8905:
	l.lwz   	r18,484(r2)	 # SI load
	l.sfnei	r18,0
	l.bnf	.L8997	# delay slot filled
	l.movhi  	r4,hi(.LC240)
	l.lbs   	r6,1(r16)	 # extendqisi2_no_sext_mem
	l.sfeqi	r6,4
	l.bf	.L8972	# delay slot filled
	l.addi  	r5,r0,19	 # move immediate I
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r11,8(r16)	 # SI load
	l.ori   	r4,r4,65535
	l.lwz   	r8,4(r16)	 # SI load
	l.and   	r11,r11,r4
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,39	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8899:
	l.addi  	r4,r0,119	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8901:
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,20(r16)	 # SI load
	l.addi  	r5,r1,160
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	152(r1),r11	 # SI store
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8906:
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,20(r16)	 # SI load
	l.addi  	r5,r1,160
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,24(r16)	 # SI load
	l.addi  	r5,r1,156
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.sw    	152(r1),r11	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
.L8990:
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r6,152(r1)	 # SI load
	l.ori   	r7,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.sw    	148(r1),r11	 # SI store
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8907:
	l.lwz   	r3,28(r16)	 # SI load
	l.lwz   	r24,20(r16)	 # SI load
	l.lwz   	r18,12(r3)	 # SI load
	l.addi  	r30,r1,156
	l.lwz   	r28,0(r18)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.addi  	r5,r1,152
	l.addi  	r6,r1,160
	l.ori   	r7,r28,0	 # move reg to reg
	l.addi  	r8,r1,148
	l.jal   	codeCompareOperands	# delay slot filled
	l.sw    	0(r1),r30	 # SI store
	l.lbz   	r3,21(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L8958
	l.nop			# nop delay slot
	l.lwz   	r22,72(r2)	 # SI load
	l.addi  	r16,r22,1
	l.ori   	r22,r16,0	 # move reg to reg
	l.sw    	72(r2),r16	 # SI store
.L8959:
	l.addi  	r22,r22,1
	l.sw    	72(r2),r22	 # SI store
.L8961:
	l.addi  	r6,r0,78	 # move immediate I
	l.lwz   	r7,152(r1)	 # SI load
	l.lwz   	r8,148(r1)	 # SI load
	l.ori   	r5,r28,0	 # move reg to reg
	l.addi  	r26,r0,16	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.sw    	0(r1),r16	 # SI store
	l.jal   	codeCompare	# delay slot filled
	l.sw    	4(r1),r26	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,156(r1)	 # SI load
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.lwz   	r28,16(r18)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.addi  	r6,r0,76	 # move immediate I
	l.lwz   	r7,152(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	148(r1),r11	 # SI store
	l.sw    	0(r1),r22	 # SI store
	l.jal   	codeCompare	# delay slot filled
	l.sw    	4(r1),r26	 # SI store
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r7,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,67	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8908:
	l.addi  	r11,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r5,r1,144
	l.jal   	sqlite3FindInIndex	# delay slot filled
	l.sw    	144(r1),r11	 # SI store
	l.lwz   	r18,144(r1)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L8952	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.lwz   	r18,72(r2)	 # SI load
	l.addi  	r18,r18,1
	l.sw    	72(r2),r18	 # SI store
.L8952:
	l.jal   	comparisonAffinity	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,84(r2)	 # SI load
	l.lwz   	r4,20(r16)	 # SI load
	l.addi  	r3,r3,1
	l.ori   	r5,r20,0	 # move reg to reg
	l.sw    	84(r2),r3	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.sb    	167(r1),r11	    # movqi
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,71	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfnei	r22,1
	l.bnf	.L8998	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lbz   	r3,21(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L8955	# delay slot filled
	l.addi  	r3,r3,-1
	l.lwz   	r12,72(r2)	 # SI load
	l.addi  	r12,r12,1
	l.sw    	72(r2),r12	 # SI store
.L8956:
	l.addi  	r22,r0,1	 # move immediate I
	l.ori   	r7,r12,0	 # move reg to reg
	l.addi  	r8,r1,167
	l.ori   	r6,r22,0	 # move reg to reg
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	156(r1),r12	 # SI store
	l.sw    	148(r1),r12	 # SI store
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r22	 # SI store
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,128	 # move immediate I
	l.lwz   	r5,36(r16)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r7,148(r1)	 # SI load
	l.sfnei	r18,0
	l.bf	.L8957	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
.L9005:
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprCachePop.clone.179	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8909:
	l.ori   	r6,r20,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.lwz   	r4,20(r16)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.addi  	r5,r1,160
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.sw    	152(r1),r11	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r6,r0,-1	 # move immediate I
	l.addi  	r4,r0,42	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8910:
	l.lwz   	r4,20(r16)	 # SI load
	l.lwz   	r7,24(r16)	 # SI load
	l.addi  	r11,r1,156
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r5,r1,152
	l.addi  	r6,r1,160
	l.addi  	r8,r1,148
	l.jal   	codeCompareOperands	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r4,20(r16)	 # SI load
	l.lwz   	r5,24(r16)	 # SI load
	l.addi  	r11,r0,16	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r7,152(r1)	 # SI load
	l.lwz   	r8,148(r1)	 # SI load
	l.sw    	0(r1),r20	 # SI store
	l.jal   	codeCompare	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8911:
	l.lwz   	r4,20(r16)	 # SI load
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.sfnei	r3,130
	l.bnf	.L8999	# delay slot filled
	l.sfnei	r3,129
	l.bnf	.L9000	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lbz   	r3,21(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L8932
	l.nop			# nop delay slot
	l.lwz   	r7,72(r2)	 # SI load
	l.addi  	r7,r7,1
	l.sw    	72(r2),r7	 # SI store
.L8933:
	l.ori   	r6,r7,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	152(r1),r7	 # SI store
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	160(r1),r7	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,20(r16)	 # SI load
	l.addi  	r5,r1,156
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L8990	# delay slot filled
	l.addi  	r4,r0,85	 # move immediate I
.L8914:
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	codeInteger	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8915:
	l.lwz   	r4,4(r16)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	codeReal.clone.139	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8913:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r11,8(r16)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r6,65535
	l.lwz   	r8,4(r16)	 # SI load
	l.and   	r11,r11,r6
	l.addi  	r4,r0,94	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8922:
	l.lwz   	r3,44(r16)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L9001
	l.nop			# nop delay slot
	l.lwz   	r4,48(r16)	 # SI load
	l.lwz   	r5,32(r3)	 # SI load
	l.slli  	r3,r4,4
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r3,r5,r3
	l.j     	.L8900	# delay slot filled
	l.lwz   	r18,8(r3)	 # SI load
.L8916:
	l.movhi 	r8,hi(1073676288)	 # move immediate M
	l.lwz   	r3,8(r16)	 # SI load
	l.ori   	r8,r8,65535
	l.lwz   	r4,4(r16)	 # SI load
	l.and   	r16,r3,r8
	l.addi  	r4,r4,2
	l.addi  	r16,r16,-3
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3HexToBlob	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.srli  	r5,r16,31
	l.addi  	r4,r0,121	 # move immediate I
	l.ori   	r8,r11,0	 # move reg to reg
	l.add   	r5,r5,r16
	l.addi  	r11,r0,-1	 # move immediate I
	l.srai  	r5,r5,1
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8918:
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r3,8(r16)	 # SI load
	l.ori   	r11,r11,65535
	l.and   	r3,r3,r11
	l.sfgtsi	r3,1
	l.bnf	.L8984
	l.nop			# nop delay slot
.L8988:
	l.lwz   	r5,36(r16)	 # SI load
.L8927:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.addi  	r4,r0,27	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.lwz   	r6,8(r16)	 # SI load
	l.ori   	r3,r3,65535
	l.and   	r6,r6,r3
	l.sfgtsi	r6,1
	l.bnf	.L8992	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.lwz   	r5,4(r16)	 # SI load
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8984:
	l.lwz   	r3,12(r14)	 # SI load
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bf	.L8988	# delay slot filled
	l.slli  	r4,r3,2
	l.slli  	r3,r3,4
	l.lwz   	r5,20(r14)	 # SI load
	l.add   	r3,r4,r3
	l.add   	r3,r5,r3
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sfnei	r4,27
	l.bf	.L8988
	l.nop			# nop delay slot
	l.lwz   	r6,12(r3)	 # SI load
	l.lwz   	r4,4(r3)	 # SI load
	l.lwz   	r5,36(r16)	 # SI load
	l.add   	r4,r6,r4
	l.sfne 	r4,r5
	l.bf	.L8927
	l.nop			# nop delay slot
	l.lwz   	r18,8(r3)	 # SI load
	l.add   	r18,r6,r18
	l.sfne 	r18,r20
	l.bf	.L8927
	l.nop			# nop delay slot
	l.lwz   	r4,16(r3)	 # SI load
	l.sfnei	r4,0
	l.bf	.L8927	# delay slot filled
	l.addi  	r6,r6,1
	l.j     	.L8900	# delay slot filled
	l.sw    	12(r3),r6	 # SI store
.L8919:
	l.lwz   	r4,28(r16)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r18,12(r4)	 # SI load
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.lwz   	r30,0(r4)	 # SI load
	l.lwz   	r26,20(r16)	 # SI load
	l.sw    	8(r1),r11	 # SI store
	l.sfeqi	r26,0
	l.bf	.L8962	# delay slot filled
	l.ori   	r28,r26,0	 # move reg to reg
	l.addi  	r22,r1,16
	l.addi  	r5,r0,64	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r28,r1,80
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.addi  	r5,r1,160
	l.addi  	r3,r0,-124	 # movqi: move immediate
	l.addi  	r4,r0,74	 # movqi: move immediate
	l.sb    	16(r1),r3	    # movqi
	l.sw    	52(r1),r11	 # SI store
	l.sb    	80(r1),r4	    # movqi
	l.sw    	100(r1),r22	 # SI store
.L8962:
	l.sflesi	r30,0
	l.bf	.L8963	# delay slot filled
	l.addi  	r22,r0,0	 # move immediate I
	l.j     	.L9011	# delay slot filled
	l.lwz   	r3,84(r2)	 # SI load
.L9002:
	l.lwz   	r3,0(r18)	 # SI load
	l.sw    	104(r1),r3	 # SI store
.L8965:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r6,r0,8	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,16(r18)	 # SI load
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,8(r1)	 # SI load
	l.jal   	sqlite3ExprCachePop.clone.179	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,32(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8966	# delay slot filled
	l.lwz   	r4,12(r14)	 # SI load
	l.xori  	r24,r24,0xffff
	l.slli  	r24,r24,2
	l.add   	r3,r3,r24
	l.sw    	0(r3),r4	 # SI store
.L8966:
	l.addi  	r22,r22,2
	l.sfgts 	r30,r22
	l.bnf	.L8963	# delay slot filled
	l.addi  	r18,r18,32
	l.lwz   	r3,84(r2)	 # SI load
.L9011:
	l.sfeqi	r26,0
	l.addi  	r3,r3,1
	l.bnf	.L9002	# delay slot filled
	l.sw    	84(r2),r3	 # SI store
	l.j     	.L8965	# delay slot filled
	l.lwz   	r28,0(r18)	 # SI load
.L8917:
	l.lwz   	r18,36(r16)	 # SI load
	l.j     	.L8900	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L8996:
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3CodeSubselect	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,160(r1)	 # SI load
	l.j     	.L8900	# delay slot filled
	l.lwz   	r18,40(r16)	 # SI load
.L8936:
	l.bnf	.L8937
	l.nop			# nop delay slot
.L8976:
	l.ori   	r30,r24,0	 # move reg to reg
.L8939:
	l.lwz   	r6,8(r1)	 # SI load
.L9008:
	l.lbz   	r3,3(r6)	 # zero_extendqisi2
	l.andi  	r3,r3,8
	l.sfeqi	r3,0
	l.bf	.L9010	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r24,0
	l.bnf	.L9003
	l.nop			# nop delay slot
.L8947:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r11,r0,-4	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,12	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r8,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
.L9010:
	l.addi  	r11,r0,-5	 # move immediate I
	l.addi  	r4,r0,22	 # move immediate I
	l.ori   	r5,r30,0	 # move reg to reg
	l.lwz   	r6,152(r1)	 # SI load
	l.ori   	r7,r20,0	 # move reg to reg
	l.lwz   	r8,8(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r3,20(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L8948	# delay slot filled
	l.lwz   	r8,12(r1)	 # SI load
	l.lwz   	r4,12(r14)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.sb    	3(r3),r8	    # movqi
.L8948:
	l.sfnei	r28,0
	l.bf	.L8949
	l.nop			# nop delay slot
	l.lwz   	r4,152(r1)	 # SI load
.L8950:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8963:
	l.lwz   	r5,24(r16)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L8968
	l.nop			# nop delay slot
	l.lwz   	r6,84(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r6,r6,1
	l.ori   	r4,r5,0	 # move reg to reg
	l.sw    	84(r2),r6	 # SI store
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3ExprCachePop.clone.179	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,32(r14)	 # SI load
.L9006:
	l.sfnei	r3,0
	l.bnf	.L8992	# delay slot filled
	l.lwz   	r4,12(r14)	 # SI load
	l.lwz   	r6,8(r1)	 # SI load
	l.ori   	r18,r20,0	 # move reg to reg
	l.xori  	r5,r6,0xffff
	l.slli  	r5,r5,2
	l.add   	r3,r3,r5
	l.sw    	0(r3),r4	 # SI store
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8994:
	l.lwz   	r18,80(r2)	 # SI load
	l.lwz   	r3,40(r16)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L8900	# delay slot filled
	l.add   	r18,r18,r3
.L8992:
	l.lwz   	r4,160(r1)	 # SI load
	l.j     	.L8900	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
.L8925:
	l.lbz   	r3,1(r5)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L8921	# delay slot filled
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,4(r5)	 # SI load
	l.lwz   	r6,12(r6)	 # SI load
	l.ori   	r7,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8949:
	l.lwz   	r3,56(r2)	 # SI load
	l.sfges 	r3,r28
	l.bf	.L8950	# delay slot filled
	l.lwz   	r4,152(r1)	 # SI load
	l.sw    	56(r2),r28	 # SI store
	l.j     	.L8950	# delay slot filled
	l.sw    	60(r2),r4	 # SI store
.L8958:
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r4,r4,2
	l.sfnei	r3,0
	l.add   	r4,r2,r4
	l.bnf	.L9004	# delay slot filled
	l.lwz   	r16,0(r4)	 # SI load
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r2,r3
	l.j     	.L8961	# delay slot filled
	l.lwz   	r22,0(r3)	 # SI load
.L8935:
	l.movhi 	r8,hi(1073676288)	 # move immediate M
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,8(r16)	 # SI load
	l.ori   	r8,r8,65535
	l.ori   	r3,r26,0	 # move reg to reg
	l.and   	r5,r5,r8
	l.lwz   	r4,4(r16)	 # SI load
	l.ori   	r8,r6,0	 # move reg to reg
	l.ori   	r28,r6,0	 # move reg to reg
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.sw    	12(r1),r6	 # SI store
	l.lwz   	r24,12(r1)	 # SI load
	l.sw    	8(r1),r11	 # SI store
	l.sw    	152(r1),r28	 # SI store
	l.j     	.L8939	# delay slot filled
	l.ori   	r30,r24,0	 # move reg to reg
.L8957:
	l.lwz   	r5,144(r1)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,72	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.movhi  	r8,hi(nullRecord.14792)
	l.lwz   	r6,144(r1)	 # SI load
	l.ori   	r8,r8,lo(nullRecord.14792)
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,121	 # move immediate I
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r11,r0,-2	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r7,144(r1)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,36(r16)	 # SI load
	l.addi  	r4,r0,128	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,20	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.j     	.L9005	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L8955:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r2,r3
	l.j     	.L8956	# delay slot filled
	l.lwz   	r12,0(r3)	 # SI load
.L8932:
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r2,r3
	l.j     	.L8933	# delay slot filled
	l.lwz   	r7,0(r3)	 # SI load
.L8972:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r4,r0,105	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.lwz   	r6,484(r2)	 # SI load
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,24(r6)	 # SI load
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8995:
	l.lwz   	r6,12(r22)	 # SI load
	l.lwz   	r4,8(r1)	 # SI load
	l.ori   	r5,r28,0	 # move reg to reg
	l.jal   	sqlite3VtabOverloadFunction	# delay slot filled
	l.lwz   	r6,16(r6)	 # SI load
	l.j     	.L8938	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
.L8968:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.j     	.L9006	# delay slot filled
	l.lwz   	r3,32(r14)	 # SI load
.L8998:
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,38	 # move immediate I
	l.ori   	r7,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,36(r16)	 # SI load
	l.addi  	r4,r0,46	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.j     	.L9005	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L8999:
	l.lwz   	r4,4(r4)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	codeReal.clone.139	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L9000:
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	codeInteger	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L9003:
	l.j     	.L8947	# delay slot filled
	l.lwz   	r24,44(r26)	 # SI load
.L9001:
	l.movhi  	r4,hi(.LC239)
	l.addi  	r16,r16,12
	l.ori   	r4,r4,lo(.LC239)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.ori   	r18,r20,0	 # move reg to reg
	l.j     	.L8900	# delay slot filled
	l.lwz   	r4,160(r1)	 # SI load
.L8997:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC240)
	l.j     	.L9007	# delay slot filled
	l.addi	r1,r1,212
.L9004:
	l.j     	.L8959	# delay slot filled
	l.lwz   	r22,72(r2)	 # SI load
.LFE791:
	.size	sqlite3ExprCodeTarget, .-sqlite3ExprCodeTarget
	.align	4
.proc	sqlite3ExprCodeTemp
	.type	sqlite3ExprCodeTemp, @function
sqlite3ExprCodeTemp:
.LFB792:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3234:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3235:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3236:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3237:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3238:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,21(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-20
.LCFI3239:
	l.sfnei	r3,0
	l.bf	.L9013	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
	l.lwz   	r14,72(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r14,r14,1
	l.sw    	72(r2),r14	 # SI store
	l.jal   	sqlite3ExprCodeTarget	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfne 	r11,r14
	l.bnf	.L9017	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L9015:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	0(r18),r2	 # SI store
	l.addi	r1,r1,20
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L9013:
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r5,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r5,2
	l.add   	r3,r2,r3
	l.lwz   	r14,0(r3)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeTarget	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfne 	r11,r14
	l.bf	.L9015	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L9017:
	l.sw    	0(r18),r14	 # SI store
	l.addi	r1,r1,20
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE792:
	.size	sqlite3ExprCodeTemp, .-sqlite3ExprCodeTemp
	.align	4
.proc	codeCompareOperands
	.type	codeCompareOperands, @function
codeCompareOperands:
.LFB732:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3240:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3241:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3242:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3243:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3244:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.addi  	r1,r1,-20
.LCFI3245:
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r2,r7,0	 # move reg to reg
	l.sfnei	r3,92
	l.bf	.L9019	# delay slot filled
	l.ori   	r16,r8,0	 # move reg to reg
.L9024:
	l.lwz   	r4,20(r4)	 # SI load
	l.lbz   	r7,0(r4)	 # zero_extendqisi2
	l.sfeqi	r7,92
	l.bf	.L9024
	l.nop			# nop delay slot
.L9019:
	l.lhz   	r5,2(r4)	 # zero_extendqisi2
	l.ori   	r5,r5,512
	l.ori   	r3,r14,0	 # move reg to reg
	l.sh    	2(r4),r5	 # movhi
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.ori   	r5,r6,0	 # move reg to reg
	l.sw    	0(r18),r11	 # SI store
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.sfnei	r3,92
	l.bf	.L9021
	l.nop			# nop delay slot
.L9023:
	l.lwz   	r2,20(r2)	 # SI load
	l.lbz   	r4,0(r2)	 # zero_extendqisi2
	l.sfeqi	r4,92
	l.bf	.L9023
	l.nop			# nop delay slot
.L9021:
	l.lhz   	r4,2(r2)	 # zero_extendqisi2
	l.ori   	r4,r4,512
	l.ori   	r3,r14,0	 # move reg to reg
	l.sh    	2(r2),r4	 # movhi
	l.lwz   	r5,20(r1)	 # SI load
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.sw    	0(r16),r11	 # SI store
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE732:
	.size	codeCompareOperands, .-codeCompareOperands
	.align	4
.proc	sqlite3ExprIfFalse
	.type	sqlite3ExprIfFalse, @function
sqlite3ExprIfFalse:
.LFB800:
	l.sw    	-28(r1),r2	 # SI store
.LCFI3246:
	l.sw    	-24(r1),r14	 # SI store
.LCFI3247:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3248:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3249:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3250:
	l.ori   	r2,r4,0	 # move reg to reg
	l.ori   	r14,r3,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI3251:
	l.sub   	r3,r0,r4
	l.sw    	-8(r1),r22	 # SI store
.LCFI3252:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-308
.LCFI3253:
	l.or    	r3,r2,r3
	l.sw    	276(r1),r4	 # SI store
	l.sw    	272(r1),r4	 # SI store
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.sfges 	r3,r4
	l.bf	.L9027	# delay slot filled
	l.lwz   	r20,12(r14)	 # SI load
	l.sub   	r3,r0,r20
	l.or    	r3,r20,r3
	l.sfges 	r3,r4
	l.bf	.L9027
	l.nop			# nop delay slot
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.addi  	r4,r3,1
	l.addi  	r3,r3,-19
	l.xori  	r4,r4,1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfgtui	r3,59
	l.bnf	.L9039	# delay slot filled
	l.addi  	r22,r4,-1
.L9029:
	l.ori   	r4,r2,0	 # move reg to reg
	l.sub   	r2,r0,r16
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r1,276
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.or    	r16,r2,r16
	l.srli  	r7,r16,31
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,68	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.sw    	268(r1),r11	 # SI store
	l.lwz   	r4,276(r1)	 # SI load
.L9040:
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.lwz   	r4,272(r1)	 # SI load
.L9027:
	l.addi	r1,r1,308
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L9039:
	l.movhi  	r5,hi(.L9036)
	l.slli  	r3,r3,2
	l.ori   	r5,r5,lo(.L9036)
	l.add   	r3,r3,r5
	l.lwz   	r3,0(r3)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L9036:
	.word	.L9030
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9029
	.word	.L9031
	.word	.L9032
	.word	.L9029
	.word	.L9033
	.word	.L9029
	.word	.L9034
	.word	.L9034
	.word	.L9035
	.word	.L9035
	.word	.L9035
	.word	.L9035
	.word	.L9035
	.word	.L9035
	.section .text
.L9035:
	l.lwz   	r4,20(r2)	 # SI load
	l.lwz   	r7,24(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r1,268
	l.addi  	r6,r1,276
	l.addi  	r8,r1,264
	l.addi  	r11,r1,272
	l.jal   	codeCompareOperands	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r4,20(r2)	 # SI load
	l.lwz   	r5,24(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r7,268(r1)	 # SI load
	l.lwz   	r8,264(r1)	 # SI load
	l.sw    	0(r1),r18	 # SI store
	l.jal   	codeCompare	# delay slot filled
	l.sw    	4(r1),r16	 # SI store
	l.j     	.L9040	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9034:
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,20(r2)	 # SI load
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.addi  	r5,r1,276
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	268(r1),r11	 # SI store
	l.j     	.L9040	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9033:
	l.addi  	r20,r1,8
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,64	 # move immediate I
	l.addi  	r3,r0,67	 # movqi: move immediate
	l.addi  	r4,r0,78	 # movqi: move immediate
	l.sb    	200(r1),r3	    # movqi
	l.sb    	136(r1),r4	    # movqi
	l.lwz   	r2,28(r2)	 # SI load
	l.addi  	r5,r0,76	 # movqi: move immediate
	l.lwz   	r2,12(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r7,0(r2)	 # SI load
	l.sb    	72(r1),r5	    # movqi
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r6,16(r2)	 # SI load
	l.addi  	r2,r1,136
	l.addi  	r5,r1,276
	l.sw    	220(r1),r2	 # SI store
	l.addi  	r2,r1,72
	l.sw    	96(r1),r6	 # SI store
	l.sw    	224(r1),r2	 # SI store
	l.sw    	156(r1),r20	 # SI store
	l.sw    	160(r1),r7	 # SI store
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.sw    	92(r1),r20	 # SI store
	l.addi  	r2,r0,-124	 # movqi: move immediate
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r1,200
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.sw    	44(r1),r11	 # SI store
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.sb    	8(r1),r2	    # movqi
	l.j     	.L9040	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9032:
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.j     	.L9040	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9031:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r3,84(r14)	 # SI load
	l.lwz   	r4,20(r2)	 # SI load
	l.addi  	r3,r3,1
	l.ori   	r5,r11,0	 # move reg to reg
	l.xori  	r6,r16,8
	l.sw    	84(r14),r3	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprIfTrue	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.lwz   	r2,32(r20)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9038	# delay slot filled
	l.lwz   	r3,12(r20)	 # SI load
	l.xori  	r22,r22,0xffff
	l.slli  	r22,r22,2
	l.add   	r2,r2,r22
	l.sw    	0(r2),r3	 # SI store
.L9038:
	l.jal   	sqlite3ExprCachePop.clone.179	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L9040	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9030:
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,20(r2)	 # SI load
	l.jal   	sqlite3ExprIfTrue	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.j     	.L9040	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.LFE800:
	.size	sqlite3ExprIfFalse, .-sqlite3ExprIfFalse
	.align	4
.proc	sqlite3ExprIfTrue
	.type	sqlite3ExprIfTrue, @function
sqlite3ExprIfTrue:
.LFB799:
	l.sw    	-28(r1),r2	 # SI store
.LCFI3254:
	l.sw    	-24(r1),r14	 # SI store
.LCFI3255:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3256:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3257:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3258:
	l.ori   	r2,r4,0	 # move reg to reg
	l.ori   	r14,r3,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI3259:
	l.sub   	r3,r0,r4
	l.sw    	-8(r1),r22	 # SI store
.LCFI3260:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-308
.LCFI3261:
	l.or    	r3,r2,r3
	l.sw    	276(r1),r4	 # SI store
	l.sw    	272(r1),r4	 # SI store
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.sfges 	r3,r4
	l.bf	.L9041	# delay slot filled
	l.lwz   	r20,12(r14)	 # SI load
	l.sub   	r3,r0,r20
	l.or    	r3,r20,r3
	l.sfges 	r3,r4
	l.bf	.L9041
	l.nop			# nop delay slot
	l.lbz   	r22,0(r2)	 # zero_extendqisi2
	l.addi  	r3,r22,-19
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfgtui	r3,59
	l.bnf	.L9053	# delay slot filled
	l.movhi  	r5,hi(.L9050)
.L9043:
	l.ori   	r4,r2,0	 # move reg to reg
	l.sub   	r2,r0,r16
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r1,276
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.or    	r16,r2,r16
	l.srli  	r7,r16,31
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,11	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.sw    	268(r1),r11	 # SI store
	l.lwz   	r4,276(r1)	 # SI load
.L9054:
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.lwz   	r4,272(r1)	 # SI load
.L9041:
	l.addi	r1,r1,308
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L9053:
	l.slli  	r3,r3,2
	l.ori   	r5,r5,lo(.L9050)
	l.add   	r3,r3,r5
	l.lwz   	r3,0(r3)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L9050:
	.word	.L9044
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9043
	.word	.L9045
	.word	.L9046
	.word	.L9043
	.word	.L9047
	.word	.L9043
	.word	.L9048
	.word	.L9048
	.word	.L9049
	.word	.L9049
	.word	.L9049
	.word	.L9049
	.word	.L9049
	.word	.L9049
	.section .text
.L9049:
	l.lwz   	r4,20(r2)	 # SI load
	l.lwz   	r7,24(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r1,268
	l.addi  	r6,r1,276
	l.addi  	r8,r1,264
	l.addi  	r11,r1,272
	l.jal   	codeCompareOperands	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r4,20(r2)	 # SI load
	l.lwz   	r5,24(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r7,268(r1)	 # SI load
	l.lwz   	r8,264(r1)	 # SI load
	l.sw    	0(r1),r18	 # SI store
	l.jal   	codeCompare	# delay slot filled
	l.sw    	4(r1),r16	 # SI store
	l.j     	.L9054	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9048:
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,20(r2)	 # SI load
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.addi  	r5,r1,276
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	268(r1),r11	 # SI store
	l.j     	.L9054	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9047:
	l.addi  	r20,r1,8
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,64	 # move immediate I
	l.addi  	r3,r0,67	 # movqi: move immediate
	l.addi  	r4,r0,78	 # movqi: move immediate
	l.sb    	200(r1),r3	    # movqi
	l.sb    	136(r1),r4	    # movqi
	l.lwz   	r2,28(r2)	 # SI load
	l.addi  	r5,r0,76	 # movqi: move immediate
	l.lwz   	r2,12(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r7,0(r2)	 # SI load
	l.sb    	72(r1),r5	    # movqi
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r6,16(r2)	 # SI load
	l.addi  	r2,r1,136
	l.addi  	r5,r1,276
	l.sw    	220(r1),r2	 # SI store
	l.addi  	r2,r1,72
	l.sw    	96(r1),r6	 # SI store
	l.sw    	224(r1),r2	 # SI store
	l.sw    	156(r1),r20	 # SI store
	l.sw    	160(r1),r7	 # SI store
	l.jal   	sqlite3ExprCodeTemp	# delay slot filled
	l.sw    	92(r1),r20	 # SI store
	l.addi  	r2,r0,-124	 # movqi: move immediate
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r1,200
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.sw    	44(r1),r11	 # SI store
	l.jal   	sqlite3ExprIfTrue	# delay slot filled
	l.sb    	8(r1),r2	    # movqi
	l.j     	.L9054	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9046:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r3,84(r14)	 # SI load
	l.lwz   	r4,20(r2)	 # SI load
	l.addi  	r3,r3,1
	l.ori   	r5,r11,0	 # move reg to reg
	l.xori  	r6,r16,8
	l.sw    	84(r14),r3	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprIfTrue	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.lwz   	r2,32(r20)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9051	# delay slot filled
	l.lwz   	r3,12(r20)	 # SI load
	l.xori  	r22,r22,0xffff
	l.slli  	r22,r22,2
	l.add   	r2,r2,r22
	l.sw    	0(r2),r3	 # SI store
.L9051:
	l.jal   	sqlite3ExprCachePop.clone.179	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L9054	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9045:
	l.lwz   	r4,20(r2)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprIfTrue	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprIfTrue	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.j     	.L9054	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.L9044:
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,20(r2)	 # SI load
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.j     	.L9054	# delay slot filled
	l.lwz   	r4,276(r1)	 # SI load
.LFE799:
	.size	sqlite3ExprIfTrue, .-sqlite3ExprIfTrue
	.align	4
.proc	sqlite3ExprCode
	.type	sqlite3ExprCode, @function
sqlite3ExprCode:
.LFB793:
	l.sw    	-12(r1),r2	 # SI store
.LCFI3262:
	l.sw    	-8(r1),r14	 # SI store
.LCFI3263:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3264:
	l.ori   	r2,r5,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI3265:
	l.jal   	sqlite3ExprCodeTarget	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeq 	r11,r2
	l.bf	.L9056
	l.nop			# nop delay slot
	l.lwz   	r3,12(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9056	# delay slot filled
	l.addi  	r4,r0,9	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L9056:
	l.addi	r1,r1,12
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE793:
	.size	sqlite3ExprCode, .-sqlite3ExprCode
	.align	4
.proc	computeLimitRegisters
	.type	computeLimitRegisters, @function
computeLimitRegisters:
.LFB1051:
	l.sw    	-24(r1),r2	 # SI store
.LCFI3266:
	l.sw    	-20(r1),r14	 # SI store
.LCFI3267:
	l.sw    	-16(r1),r16	 # SI store
.LCFI3268:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3269:
	l.sw    	-12(r1),r18	 # SI store
.LCFI3270:
	l.sw    	-8(r1),r20	 # SI store
.LCFI3271:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r4,48(r4)	 # SI load
	l.addi  	r1,r1,-24
.LCFI3272:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfnei	r4,0
	l.bnf	.L9062	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
.L9057:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L9062:
	l.jal   	sqlite3ExprCacheClear
	l.nop			# nop delay slot
	l.lwz   	r20,40(r2)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L9059	# delay slot filled
	l.addi  	r4,r14,12
	l.lwz   	r20,72(r14)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r20,r20,1
	l.sw    	72(r14),r20	 # SI store
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.sw    	48(r2),r20	 # SI store
	l.sfeqi	r11,0
	l.bf	.L9057	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r4,40(r2)	 # SI load
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,38	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,126	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
.L9059:
	l.lwz   	r3,44(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9057
	l.nop			# nop delay slot
	l.lwz   	r3,72(r14)	 # SI load
	l.lwz   	r4,40(r2)	 # SI load
	l.addi  	r18,r3,1
	l.sfeqi	r4,0
	l.sw    	72(r14),r18	 # SI store
	l.bf	.L9060	# delay slot filled
	l.sw    	52(r2),r18	 # SI store
	l.addi  	r3,r3,2
	l.sw    	72(r14),r3	 # SI store
.L9060:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r14,12
	l.sfeqi	r11,0
	l.bf	.L9057	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r4,44(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,38	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,129	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r2,40(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9057	# delay slot filled
	l.addi  	r2,r18,1
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r2,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,84	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,129	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi	r1,r1,24
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3VdbeJumpHere	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.LFE1051:
	.size	computeLimitRegisters, .-computeLimitRegisters
	.align	4
.proc	sqlite3ExprCodeAndCache
	.type	sqlite3ExprCodeAndCache, @function
sqlite3ExprCodeAndCache:
.LFB794:
	l.sw    	-24(r1),r2	 # SI store
.LCFI3273:
	l.sw    	-20(r1),r14	 # SI store
.LCFI3274:
	l.sw    	-16(r1),r16	 # SI store
.LCFI3275:
	l.sw    	-8(r1),r20	 # SI store
.LCFI3276:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3277:
	l.sw    	-12(r1),r18	 # SI store
.LCFI3278:
	l.addi  	r1,r1,-24
.LCFI3279:
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r2,r3,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r20,12(r3)	 # SI load
	l.lbz   	r4,0(r16)	 # zero_extendqisi2
	l.sfeqi	r4,132
	l.bf	.L9064	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r18,72(r2)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r18,r18,1
	l.addi  	r4,r0,20	 # move immediate I
	l.sw    	72(r2),r18	 # SI store
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r2,r0,-124	 # movqi: move immediate
	l.sw    	36(r16),r18	 # SI store
	l.sb    	0(r16),r2	    # movqi
.L9064:
	l.addi	r1,r1,24
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE794:
	.size	sqlite3ExprCodeAndCache, .-sqlite3ExprCodeAndCache
	.section	.rodata.str1.1
.LC241:
	.string	"columns "
.LC242:
	.string	"column "
.LC243:
	.string	", "
.LC244:
	.string	" are not unique"
.LC245:
	.string	" is not unique"
.LC246:
	.string	"%s.%s may not be NULL"
.LC247:
	.string	"PRIMARY KEY must be unique"
	.section .text
	.align	4
.proc	sqlite3GenerateConstraintChecks
	.type	sqlite3GenerateConstraintChecks, @function
sqlite3GenerateConstraintChecks:
.LFB989:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3280:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3281:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3282:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3283:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3284:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3285:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3286:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3287:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3288:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3289:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3290:
	l.addi  	r1,r1,-120
.LCFI3291:
	l.ori   	r20,r8,0	 # move reg to reg
	l.lwz   	r26,120(r1)	 # SI load
	l.sub   	r2,r0,r8
	l.sub   	r8,r0,r26
	l.ori   	r28,r3,0	 # move reg to reg
	l.or    	r2,r2,r20
	l.or    	r3,r8,r26
	l.ori   	r22,r4,0	 # move reg to reg
	l.and   	r2,r2,r3
	l.addi  	r4,r28,12
	l.srli  	r2,r2,31
	l.lwz   	r3,0(r28)	 # SI load
	l.sw    	12(r1),r6	 # SI store
	l.sw    	16(r1),r2	 # SI store
	l.sw    	32(r1),r5	 # SI store
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.sw    	8(r1),r7	 # SI store
	l.lwz   	r2,12(r1)	 # SI load
	l.lwz   	r18,12(r22)	 # SI load
	l.addi  	r2,r2,1
	l.ori   	r24,r11,0	 # move reg to reg
	l.sflesi	r18,0
	l.bf	.L9066	# delay slot filled
	l.sw    	24(r1),r2	 # SI store
	l.addi  	r14,r0,0	 # move immediate I
	l.ori   	r16,r2,0	 # move reg to reg
	l.sw    	20(r1),r26	 # SI store
	l.ori   	r2,r14,0	 # move reg to reg
	l.ori   	r26,r20,0	 # move reg to reg
	l.j     	.L9073	# delay slot filled
	l.lwz   	r30,124(r1)	 # SI load
.L9108:
	l.ori   	r6,r30,0	 # move reg to reg
	l.sfnei	r6,5
.L9152:
	l.bnf	.L9132	# delay slot filled
	l.sfltsi	r6,1
	l.bf	.L9071	# delay slot filled
	l.sflesi	r6,3
	l.bf	.L9151	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.sfeqi	r6,4
	l.bf	.L9133	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L9071:
	l.ori   	r3,r24,0	 # move reg to reg
.L9154:
	l.addi  	r4,r0,72	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r4,16(r22)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.add   	r4,r4,r14
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r4,4(r4)	 # SI load
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
.L9067:
	l.addi  	r2,r2,1
.L9146:
	l.addi  	r14,r14,20
	l.sfgts 	r18,r2
	l.bnf	.L9134	# delay slot filled
	l.addi  	r16,r16,1
.L9073:
	l.lwz   	r4,8(r22)	 # SI load
	l.sfeq 	r4,r2
	l.bf	.L9067
	l.nop			# nop delay slot
	l.lwz   	r4,16(r22)	 # SI load
	l.add   	r4,r4,r14
	l.lbz   	r6,16(r4)	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bf	.L9067	# delay slot filled
	l.sfnei	r30,99
	l.bf	.L9108	# delay slot filled
	l.sfeqi	r6,99
	l.bnf	.L9152	# delay slot filled
	l.sfnei	r6,5
	l.addi  	r6,r0,2	 # move immediate I
.L9069:
	l.ori   	r7,r16,0	 # move reg to reg
.L9151:
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r5,r0,19	 # move immediate I
	l.addi  	r4,r0,116	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r2,r2,1
	l.lwz   	r3,4(r22)	 # SI load
	l.lwz   	r4,16(r22)	 # SI load
	l.sw    	0(r1),r3	 # SI store
	l.add   	r4,r4,r14
	l.lwz   	r3,0(r28)	 # SI load
	l.lwz   	r5,0(r4)	 # SI load
	l.movhi  	r4,hi(.LC246)
	l.sw    	4(r1),r5	 # SI store
	l.ori   	r4,r4,lo(.LC246)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.addi  	r14,r14,20
	l.addi  	r4,r0,-1	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r4,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r16,r16,1
	l.sfgts 	r18,r2
	l.bf	.L9073
	l.nop			# nop delay slot
.L9134:
	l.ori   	r20,r26,0	 # move reg to reg
	l.lwz   	r26,20(r1)	 # SI load
.L9066:
	l.lwz   	r2,44(r22)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9153	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r2,0(r28)	 # SI load
	l.lwz   	r2,12(r2)	 # SI load
	l.andi  	r2,r2,8192
	l.sfnei	r2,0
	l.bnf	.L9135
	l.nop			# nop delay slot
.L9074:
	l.sfeqi	r20,0
.L9153:
	l.bf	.L9077	# delay slot filled
	l.sw    	20(r1),r20	 # SI store
	l.lwz   	r2,124(r1)	 # SI load
	l.sfnei	r2,99
	l.bnf	.L9136	# delay slot filled
	l.lbz   	r3,35(r22)	 # zero_extendqisi2
.L9078:
	l.sfnei	r2,5
	l.bnf	.L9137
	l.nop			# nop delay slot
.L9079:
	l.sfeqi	r26,0
	l.bnf	.L9138	# delay slot filled
	l.ori   	r16,r26,0	 # move reg to reg
.L9081:
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,46	 # move immediate I
	l.lwz   	r5,32(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.sfeqi	r2,4
	l.bf	.L9084	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfgtsi	r2,4
	l.bf	.L9086	# delay slot filled
	l.sfeqi	r2,5
	l.sfltsi	r2,1
	l.bf	.L9118
	l.nop			# nop delay slot
.L9082:
	l.movhi  	r8,hi(.LC247)
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r2,r0,-2	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,39	 # move immediate I
	l.addi  	r5,r0,19	 # move immediate I
	l.ori   	r8,r8,lo(.LC247)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	20(r1),r7	 # SI store
	l.ori   	r3,r24,0	 # move reg to reg
.L9149:
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfeqi	r26,0
	l.bf	.L9077	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.L9077:
	l.lwz   	r18,20(r22)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L9080	# delay slot filled
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r2,12(r1)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.addi  	r11,r11,1
	l.sub   	r2,r2,r3
	l.addi  	r4,r22,4
	l.addi  	r5,r22,20
	l.lwz   	r30,8(r1)	 # SI load
	l.sw    	36(r1),r2	 # SI store
	l.sw    	8(r1),r11	 # SI store
	l.sw    	40(r1),r4	 # SI store
	l.j     	.L9106	# delay slot filled
	l.sw    	44(r1),r5	 # SI store
.L9088:
	l.lwz   	r2,8(r1)	 # SI load
.L9148:
	l.lwz   	r18,32(r18)	 # SI load
	l.addi  	r2,r2,1
	l.addi  	r30,r30,4
	l.sfnei	r18,0
	l.bnf	.L9080	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
.L9106:
	l.lwz   	r2,0(r30)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9148	# delay slot filled
	l.lwz   	r2,8(r1)	 # SI load
	l.lwz   	r2,4(r18)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r2,1
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.lwz   	r2,4(r18)	 # SI load
	l.sfles 	r2,r16
	l.bf	.L9089	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.sw    	16(r1),r28	 # SI store
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r20,r16,0	 # move reg to reg
	l.ori   	r28,r11,0	 # move reg to reg
	l.j     	.L9092	# delay slot filled
	l.lwz   	r26,24(r1)	 # SI load
.L9090:
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r2,4(r18)	 # SI load
	l.addi  	r20,r20,4
	l.sfgts 	r2,r16
	l.bnf	.L9139	# delay slot filled
	l.addi  	r14,r14,1
.L9092:
	l.lwz   	r2,8(r18)	 # SI load
	l.lwz   	r7,8(r22)	 # SI load
	l.add   	r2,r2,r20
	l.ori   	r6,r14,0	 # move reg to reg
	l.lwz   	r2,0(r2)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.sfne 	r7,r2
	l.bf	.L9090	# delay slot filled
	l.add   	r5,r2,r26
	l.lwz   	r5,12(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r2,4(r18)	 # SI load
	l.addi  	r20,r20,4
	l.sfgts 	r2,r16
	l.bf	.L9092	# delay slot filled
	l.addi  	r14,r14,1
.L9139:
	l.ori   	r26,r28,0	 # move reg to reg
	l.lwz   	r28,16(r1)	 # SI load
.L9089:
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.lwz   	r5,12(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.add   	r6,r16,r26
	l.lwz   	r2,4(r18)	 # SI load
	l.ori   	r5,r26,0	 # move reg to reg
	l.addi  	r6,r2,1
	l.lwz   	r7,0(r30)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3IndexAffinityStr	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r2,4(r18)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.addi  	r5,r2,1
	l.lbz   	r14,24(r18)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L9093	# delay slot filled
	l.lwz   	r8,124(r1)	 # SI load
	l.lwz   	r2,4(r18)	 # SI load
	l.lwz   	r3,56(r28)	 # SI load
	l.addi  	r2,r2,1
	l.sfles 	r2,r3
	l.bf	.L9088
	l.nop			# nop delay slot
	l.sw    	56(r28),r2	 # SI store
	l.lwz   	r2,8(r1)	 # SI load
	l.lwz   	r18,32(r18)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	60(r28),r26	 # SI store
	l.sw    	8(r1),r2	 # SI store
	l.sfnei	r18,0
	l.bf	.L9106	# delay slot filled
	l.addi  	r30,r30,4
.L9080:
	l.lwz   	r3,132(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9065	# delay slot filled
	l.lwz   	r4,20(r1)	 # SI load
	l.sw    	0(r3),r4	 # SI store
.L9065:
	l.addi	r1,r1,120
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9133:
	l.addi  	r4,r0,71	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,128(r1)	 # SI load
	l.j     	.L9146	# delay slot filled
	l.addi  	r2,r2,1
.L9132:
	l.lwz   	r3,4(r4)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L9154	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.j     	.L9069	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
.L9093:
	l.sfnei	r8,99
	l.bnf	.L9140	# delay slot filled
	l.sfeqi	r14,99
	l.lwz   	r14,124(r1)	 # SI load
	l.lwz   	r11,20(r1)	 # SI load
.L9155:
	l.sfeqi	r11,0
	l.bf	.L9095	# delay slot filled
	l.sfeqi	r14,4
	l.bf	.L9122	# delay slot filled
	l.sfeqi	r14,3
	l.bf	.L9141
	l.nop			# nop delay slot
.L9095:
	l.lbz   	r2,21(r28)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L9096
	l.nop			# nop delay slot
	l.lwz   	r2,72(r28)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	16(r1),r2	 # SI store
	l.sw    	72(r28),r2	 # SI store
.L9097:
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r2,r0,-14	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,35	 # move immediate I
	l.lwz   	r5,8(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r7,16(r1)	 # SI load
	l.ori   	r8,r26,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r2,4(r18)	 # SI load
	l.lwz   	r3,56(r28)	 # SI load
	l.addi  	r2,r2,1
	l.sfles 	r2,r3
	l.bf	.L9098	# delay slot filled
	l.sw    	28(r1),r11	 # SI store
	l.sw    	56(r28),r2	 # SI store
	l.sw    	60(r28),r26	 # SI store
.L9098:
	l.sfltsi	r14,1
	l.bf	.L9099	# delay slot filled
	l.sflesi	r14,3
	l.bnf	.L9142	# delay slot filled
	l.sfeqi	r14,4
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	74(r1),r4	    # movqi
	l.sb    	72(r1),r4	    # movqi
	l.sb    	73(r1),r3	    # movqi
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,0(r28)	 # SI load
	l.addi  	r8,r0,200	 # move immediate I
	l.lwz   	r2,4(r18)	 # SI load
	l.movhi  	r4,hi(.LC241)
	l.sw    	52(r1),r5	 # SI store
	l.sw    	56(r1),r5	 # SI store
	l.sw    	60(r1),r5	 # SI store
	l.sw    	64(r1),r5	 # SI store
	l.sw    	68(r1),r8	 # SI store
	l.sw    	48(r1),r3	 # SI store
	l.sfgtsi	r2,1
	l.bnf	.L9143	# delay slot filled
	l.ori   	r4,r4,lo(.LC241)
.L9102:
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r20,r16,0	 # move reg to reg
.L9104:
	l.lwz   	r3,8(r18)	 # SI load
	l.lwz   	r7,16(r22)	 # SI load
	l.add   	r3,r3,r16
	l.addi  	r5,r0,-1	 # move immediate I
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r20,r20,1
	l.slli  	r6,r3,4
	l.slli  	r2,r3,2
	l.addi  	r3,r1,48
	l.addi  	r16,r16,4
	l.add   	r2,r2,r6
	l.add   	r2,r7,r2
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r3,r1,48
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
	l.movhi  	r4,hi(.LC243)
	l.lwz   	r2,4(r18)	 # SI load
	l.sfgts 	r2,r20
	l.bf	.L9104	# delay slot filled
	l.ori   	r4,r4,lo(.LC243)
	l.movhi  	r3,hi(.LC245)
	l.sflesi	r2,1
	l.bf	.L9103	# delay slot filled
	l.ori   	r3,r3,lo(.LC245)
	l.movhi  	r3,hi(.LC244)
	l.ori   	r3,r3,lo(.LC244)
.L9103:
	l.ori   	r4,r3,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3StrAccumAppend	# delay slot filled
	l.addi  	r3,r1,48
	l.jal   	sqlite3StrAccumFinish	# delay slot filled
	l.addi  	r3,r1,48
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r4,r0,39	 # move immediate I
	l.addi  	r5,r0,19	 # move immediate I
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r7	 # SI store
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L9147	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L9096:
	l.addi  	r2,r2,-1
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.addi  	r3,r2,6
	l.sb    	21(r28),r2	    # movqi
	l.slli  	r2,r3,2
	l.add   	r2,r28,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.j     	.L9097	# delay slot filled
	l.sw    	16(r1),r2	 # SI store
.L9142:
	l.bf	.L9144	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L9099:
	l.addi  	r11,r0,1	 # move immediate I
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,40(r1)	 # SI load
	l.lwz   	r5,44(r1)	 # SI load
	l.lwz   	r6,32(r1)	 # SI load
	l.lwz   	r7,16(r1)	 # SI load
	l.addi  	r8,r0,0	 # move immediate I
	l.jal   	sqlite3GenerateRowDelete.clone.144	# delay slot filled
	l.sw    	20(r1),r11	 # SI store
	l.ori   	r3,r24,0	 # move reg to reg
.L9147:
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
	l.j     	.L9148	# delay slot filled
	l.lwz   	r2,8(r1)	 # SI load
.L9144:
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,128(r1)	 # SI load
	l.j     	.L9147	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L9140:
	l.bnf	.L9155	# delay slot filled
	l.lwz   	r11,20(r1)	 # SI load
	l.j     	.L9155	# delay slot filled
	l.addi  	r14,r0,2	 # move immediate I
.L9135:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,44(r22)	 # SI load
	l.sw    	80(r28),r3	 # SI store
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r6,r0,8	 # move immediate I
	l.jal   	sqlite3ExprIfTrue	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r4,124(r1)	 # SI load
	l.sfeqi	r4,99
	l.bf	.L9111	# delay slot filled
	l.sfnei	r4,4
	l.bnf	.L9145	# delay slot filled
	l.ori   	r7,r4,0	 # move reg to reg
.L9075:
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,39	 # move immediate I
	l.addi  	r5,r0,19	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r7,0	 # move reg to reg
	l.lwz   	r2,32(r24)	 # SI load
.L9150:
	l.sfeqi	r2,0
	l.bf	.L9074	# delay slot filled
	l.lwz   	r3,12(r24)	 # SI load
	l.xori  	r4,r14,0xffff
	l.slli  	r4,r4,2
	l.add   	r2,r2,r4
	l.j     	.L9074	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
.L9122:
	l.j     	.L9095	# delay slot filled
	l.addi  	r14,r0,5	 # move immediate I
.L9086:
	l.bf	.L9085	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
.L9118:
	l.j     	.L9082	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
.L9141:
	l.j     	.L9095	# delay slot filled
	l.addi  	r14,r0,2	 # move immediate I
.L9136:
	l.sfeqi	r3,99
	l.bnf	.L9078	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.j     	.L9079	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
.L9143:
	l.movhi  	r3,hi(.LC245)
	l.sfles 	r2,r5
	l.bf	.L9103	# delay slot filled
	l.ori   	r3,r3,lo(.LC245)
	l.movhi  	r4,hi(.LC242)
	l.j     	.L9102	# delay slot filled
	l.ori   	r4,r4,lo(.LC242)
.L9111:
	l.j     	.L9075	# delay slot filled
	l.addi  	r7,r0,2	 # move immediate I
.L9085:
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,20(r22)	 # SI load
	l.lwz   	r5,32(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3GenerateRowIndexDelete.clone.143	# delay slot filled
	l.sw    	20(r1),r8	 # SI store
	l.j     	.L9149	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L9137:
	l.lwz   	r5,20(r22)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L9080	# delay slot filled
	l.sw    	20(r1),r5	 # SI store
	l.sfeqi	r26,0
	l.bf	.L9081	# delay slot filled
	l.ori   	r16,r26,0	 # move reg to reg
.L9138:
	l.lwz   	r5,12(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,74	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r7,r5,-1
	l.j     	.L9081	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L9084:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.lwz   	r6,128(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	20(r1),r5	 # SI store
	l.j     	.L9149	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L9145:
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,128(r1)	 # SI load
	l.j     	.L9150	# delay slot filled
	l.lwz   	r2,32(r24)	 # SI load
.LFE989:
	.size	sqlite3GenerateConstraintChecks, .-sqlite3GenerateConstraintChecks
	.align	4
.proc	codeAttach
	.type	codeAttach, @function
codeAttach:
.LFB831:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3292:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3293:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3294:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3295:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3296:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3297:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3298:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3299:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3300:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3301:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3302:
	l.addi  	r1,r1,-80
.LCFI3303:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r26,r5,0	 # move reg to reg
	l.ori   	r18,r7,0	 # move reg to reg
	l.ori   	r20,r8,0	 # move reg to reg
	l.lwz   	r24,80(r1)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L9157	# delay slot filled
	l.lwz   	r16,0(r3)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.addi  	r4,r6,12
	l.sfeqi	r11,0
	l.bf	.L9158	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.sfnei	r28,0
	l.bf	.L9163	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L9157:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r1,0	 # move reg to reg
	l.sw    	4(r1),r5	 # SI store
	l.sw    	8(r1),r5	 # SI store
	l.sw    	12(r1),r5	 # SI store
	l.sw    	16(r1),r5	 # SI store
	l.sw    	20(r1),r5	 # SI store
	l.sw    	24(r1),r5	 # SI store
	l.sw    	28(r1),r5	 # SI store
	l.sw    	32(r1),r5	 # SI store
	l.jal   	resolveAttachExpr	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
	l.sfnei	r11,0
	l.bnf	.L9162	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
.L9159:
	l.lwz   	r2,64(r14)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	64(r14),r2	 # SI store
.L9158:
	l.ori   	r3,r16,0	 # move reg to reg
.L9163:
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.addi	r1,r1,80
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9162:
	l.jal   	resolveAttachExpr	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9159	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	resolveAttachExpr	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L9159	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.addi  	r4,r14,12
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.addi  	r5,r30,1
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.addi  	r5,r30,2
	l.sfeqi	r2,0
	l.bf	.L9158	# delay slot filled
	l.addi  	r7,r30,3
	l.lhs   	r6,0(r26)	 # extendhisi2_no_sext_mem
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.addi  	r4,r0,22	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.sub   	r6,r7,r6
	l.lwz   	r3,20(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9161	# delay slot filled
	l.lhs   	r5,0(r26)	 # extendhisi2_no_sext_mem
	l.lwz   	r4,12(r2)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r6,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r6,r4
	l.add   	r3,r3,r4
	l.sb    	3(r3),r5	    # movqi
.L9161:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r26,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r6,r0,-5	 # move immediate I
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.xori  	r22,r22,24
	l.sub   	r5,r0,r22
	l.ori   	r3,r2,0	 # move reg to reg
	l.or    	r22,r5,r22
	l.addi  	r4,r0,14	 # move immediate I
	l.xori  	r5,r22,0xffff
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.srli  	r5,r5,31
	l.j     	.L9163	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.LFE831:
	.size	codeAttach, .-codeAttach
	.align	4
.proc	sqlite3ExprCodeExprList.clone.160
	.type	sqlite3ExprCodeExprList.clone.160, @function
sqlite3ExprCodeExprList.clone.160:
.LFB1408:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3304:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3305:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3306:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3307:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3308:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3309:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3310:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3311:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3312:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3313:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3314:
	l.ori   	r20,r4,0	 # move reg to reg
	l.addi  	r1,r1,-44
.LCFI3315:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r26,r6,0	 # move reg to reg
	l.sflesi	r4,0
	l.bf	.L9165	# delay slot filled
	l.ori   	r24,r7,0	 # move reg to reg
	l.ori   	r2,r5,0	 # move reg to reg
	l.ori   	r14,r6,0	 # move reg to reg
	l.addi  	r16,r0,0	 # move immediate I
	l.addi  	r28,r3,12
	l.j     	.L9169	# delay slot filled
	l.add   	r30,r6,r4
.L9172:
	l.lwz   	r4,0(r2)	 # SI load
	l.jal   	sqlite3ExprCodeTarget	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r3,0(r18)	 # SI load
	l.ori   	r4,r28,0	 # move reg to reg
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.sfeq 	r22,r14
	l.bf	.L9167	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
.L9167:
	l.sfeqi	r24,0
.L9173:
	l.bf	.L9168
	l.nop			# nop delay slot
	l.lwz   	r5,12(r18)	 # SI load
	l.lwz   	r3,12(r5)	 # SI load
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bf	.L9168	# delay slot filled
	l.slli  	r6,r3,2
	l.slli  	r3,r3,4
	l.lwz   	r4,20(r5)	 # SI load
	l.add   	r3,r6,r3
	l.add   	r3,r4,r3
	l.sfeqi	r3,0
	l.bf	.L9168
	l.nop			# nop delay slot
	l.lbz   	r5,0(r3)	 # zero_extendqisi2
	l.sfnei	r5,9
	l.bnf	.L9171
	l.nop			# nop delay slot
.L9168:
	l.addi  	r16,r16,1
	l.addi  	r2,r2,16
	l.sflts 	r16,r20
	l.bnf	.L9165	# delay slot filled
	l.addi  	r14,r14,1
.L9169:
	l.lhz   	r3,12(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L9172	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,0(r2)	 # SI load
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.j     	.L9173	# delay slot filled
	l.sfeqi	r24,0
.L9171:
	l.lwz   	r4,4(r3)	 # SI load
	l.sfgts 	r26,r4
	l.bf	.L9168	# delay slot filled
	l.sfges 	r4,r30
	l.bf	.L9168	# delay slot filled
	l.addi  	r4,r0,20	 # movqi: move immediate
	l.addi  	r16,r16,1
	l.sb    	0(r3),r4	    # movqi
	l.addi  	r2,r2,16
	l.sflts 	r16,r20
	l.bf	.L9169	# delay slot filled
	l.addi  	r14,r14,1
.L9165:
	l.addi	r1,r1,44
	l.ori   	r11,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.LFE1408:
	.size	sqlite3ExprCodeExprList.clone.160, .-sqlite3ExprCodeExprList.clone.160
	.align	4
.proc	pushOntoSorter.clone.161
	.type	pushOntoSorter.clone.161, @function
pushOntoSorter.clone.161:
.LFB1409:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3316:
	l.lwz   	r24,0(r4)	 # SI load
	l.sw    	-28(r1),r20	 # SI store
.LCFI3317:
	l.addi  	r20,r24,2
	l.sw    	-44(r1),r2	 # SI store
.LCFI3318:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3319:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3320:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3321:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3322:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3323:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3324:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3325:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3326:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-44
.LCFI3327:
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r14,12(r3)	 # SI load
	l.ori   	r26,r5,0	 # move reg to reg
	l.ori   	r30,r6,0	 # move reg to reg
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.ori   	r28,r7,0	 # move reg to reg
	l.lbz   	r3,21(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L9175	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r22,72(r2)	 # SI load
	l.addi  	r22,r22,1
	l.sw    	72(r2),r22	 # SI store
.L9176:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.add   	r24,r18,r24
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,0(r16)	 # SI load
	l.lwz   	r5,12(r16)	 # SI load
	l.jal   	sqlite3ExprCodeExprList.clone.160	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.lwz   	r5,8(r16)	 # SI load
	l.ori   	r6,r24,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,6	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.addi  	r5,r24,1
	l.jal   	sqlite3ExprCodeMove	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r22,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,8(r16)	 # SI load
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,108	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.lwz   	r3,56(r2)	 # SI load
	l.sfles 	r20,r3
	l.bf	.L9177
	l.nop			# nop delay slot
	l.sw    	56(r2),r20	 # SI store
	l.sw    	60(r2),r18	 # SI store
.L9177:
	l.lwz   	r2,0(r26)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9174
	l.nop			# nop delay slot
	l.lwz   	r3,0(r30)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L9180
	l.nop			# nop delay slot
.L9179:
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r4,r0,126	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r6,r0,-1	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,42	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,54	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,8(r16)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,8(r16)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,91	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	0(r26),r2	 # SI store
.L9174:
	l.addi	r1,r1,44
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9175:
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r2),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r2,r3
	l.j     	.L9176	# delay slot filled
	l.lwz   	r22,0(r3)	 # SI load
.L9180:
	l.j     	.L9179	# delay slot filled
	l.addi  	r2,r3,1
.LFE1409:
	.size	pushOntoSorter.clone.161, .-pushOntoSorter.clone.161
	.align	4
.proc	selectInnerLoop.clone.162
	.type	selectInnerLoop.clone.162, @function
selectInnerLoop.clone.162:
.LFB1410:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3328:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3329:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3330:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3331:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3332:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3333:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3334:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3335:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3336:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3337:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3338:
	l.addi  	r1,r1,-84
.LCFI3339:
	l.lwz   	r14,12(r3)	 # SI load
	l.lwz   	r22,92(r1)	 # SI load
	l.sw    	8(r1),r5	 # SI store
	l.lbz   	r5,0(r22)	 # zero_extendqisi2
	l.ori   	r20,r3,0	 # move reg to reg
	l.ori   	r30,r4,0	 # move reg to reg
	l.sw    	36(r1),r6	 # SI store
	l.lwz   	r2,88(r1)	 # SI load
	l.lwz   	r3,96(r1)	 # SI load
	l.lwz   	r4,100(r1)	 # SI load
	l.lwz   	r6,4(r22)	 # SI load
	l.sw    	12(r1),r2	 # SI store
	l.sw    	20(r1),r3	 # SI store
	l.sw    	32(r1),r4	 # SI store
	l.sw    	16(r1),r5	 # SI store
	l.sw    	28(r1),r6	 # SI store
	l.ori   	r24,r7,0	 # move reg to reg
	l.ori   	r18,r8,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L9181	# delay slot filled
	l.lwz   	r26,84(r1)	 # SI load
	l.sub   	r2,r0,r26
	l.lwz   	r4,12(r1)	 # SI load
	l.or    	r2,r26,r2
	l.xori  	r3,r4,0xffff
	l.xori  	r2,r2,0xffff
	l.srli  	r3,r3,31
	l.srli  	r2,r2,31
	l.sw    	4(r1),r3	 # SI store
	l.sfnei	r3,0
	l.bnf	.L9222	# delay slot filled
	l.sw    	24(r1),r2	 # SI store
	l.sfgtsi	r18,0
.L9243:
	l.bnf	.L9223	# delay slot filled
	l.ori   	r28,r18,0	 # move reg to reg
.L9184:
	l.lwz   	r16,8(r22)	 # SI load
	l.sfnei	r16,0
	l.bnf	.L9224	# delay slot filled
	l.sflesi	r18,0
	l.bf	.L9239	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
.L9229:
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r6,r2,0	 # move reg to reg
.L9240:
	l.add   	r7,r2,r16
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r2,r2,1
	l.sfgts 	r18,r2
	l.bf	.L9240	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r2,4(r1)	 # SI load
.L9242:
	l.sfeqi	r2,0
	l.bnf	.L9241	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L9189:
	l.lwz   	r4,8(r1)	 # SI load
.L9234:
	l.lwz   	r2,0(r4)	 # SI load
	l.sflesi	r2,1
	l.bf	.L9190	# delay slot filled
	l.lbz   	r3,0(r22)	 # zero_extendqisi2
	l.addi  	r3,r3,-6
	l.sfgtui	r3,1
	l.bnf	.L9226	# delay slot filled
	l.movhi  	r4,hi(.LC236)
.L9190:
	l.lwz   	r5,16(r1)	 # SI load
	l.sfgtui	r5,10
	l.bnf	.L9227	# delay slot filled
	l.movhi  	r6,hi(.L9199)
.L9191:
	l.lwz   	r5,48(r30)	 # SI load
.L9237:
	l.sfeqi	r5,0
	l.bnf	.L9228	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L9181:
	l.addi	r1,r1,84
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9224:
	l.lwz   	r2,72(r20)	 # SI load
	l.sw    	12(r22),r28	 # SI store
	l.addi  	r16,r2,1
	l.add   	r2,r28,r2
	l.sw    	8(r22),r16	 # SI store
	l.bnf	.L9229	# delay slot filled
	l.sw    	72(r20),r2	 # SI store
	l.lwz   	r6,16(r1)	 # SI load
.L9239:
	l.sfeqi	r6,3
	l.bf	.L9242	# delay slot filled
	l.lwz   	r2,4(r1)	 # SI load
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r5,8(r1)	 # SI load
	l.xori  	r2,r3,5
	l.lwz   	r6,36(r1)	 # SI load
	l.sub   	r7,r0,r2
	l.lwz   	r4,0(r5)	 # SI load
	l.or    	r2,r7,r2
	l.lwz   	r5,0(r6)	 # SI load
	l.xori  	r7,r2,0xffff
	l.ori   	r3,r20,0	 # move reg to reg
	l.srli  	r7,r7,31
	l.jal   	sqlite3ExprCodeExprList.clone.160	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.lwz   	r2,4(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9234	# delay slot filled
	l.lwz   	r4,8(r1)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
.L9241:
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r5,20(r1)	 # SI load
	l.ori   	r6,r28,0	 # move reg to reg
	l.jal   	codeDistinct	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9189	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r30,52
	l.jal   	codeOffset.clone.141	# delay slot filled
	l.lwz   	r5,20(r1)	 # SI load
	l.j     	.L9234	# delay slot filled
	l.lwz   	r4,8(r1)	 # SI load
.L9228:
	l.addi  	r4,r0,42	 # move immediate I
.L9244:
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,-1	 # move immediate I
	l.lwz   	r5,48(r30)	 # SI load
	l.lwz   	r6,32(r1)	 # SI load
	l.addi	r1,r1,84
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,126	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3VdbeAddOp2	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L9222:
	l.sfeqi	r2,0
	l.bf	.L9243	# delay slot filled
	l.sfgtsi	r18,0
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r30,52
	l.lwz   	r5,20(r1)	 # SI load
	l.jal   	codeOffset.clone.141	# delay slot filled
	l.ori   	r28,r18,0	 # move reg to reg
	l.sfgtsi	r18,0
	l.bf	.L9184
	l.nop			# nop delay slot
.L9223:
	l.lwz   	r5,8(r1)	 # SI load
	l.j     	.L9184	# delay slot filled
	l.lwz   	r28,0(r5)	 # SI load
.L9227:
	l.slli  	r2,r5,2
	l.ori   	r6,r6,lo(.L9199)
	l.add   	r2,r2,r6
	l.lwz   	r2,0(r2)	 # SI load
	l.jr    	r2
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L9199:
	.word	.L9191
	.word	.L9192
	.word	.L9193
	.word	.L9194
	.word	.L9191
	.word	.L9195
	.word	.L9196
	.word	.L9197
	.word	.L9198
	.word	.L9198
	.word	.L9195
	.section .text
.L9198:
	l.lbz   	r2,21(r20)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L9230
	l.nop			# nop delay slot
	l.addi  	r2,r2,-1
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.addi  	r3,r2,6
	l.sb    	21(r20),r2	    # movqi
	l.slli  	r2,r3,2
	l.add   	r2,r20,r2
	l.lwz   	r2,0(r2)	 # SI load
.L9203:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r28,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.sfeqi	r26,0
	l.bf	.L9204	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r5,r30,48
	l.addi  	r6,r30,52
	l.jal   	pushOntoSorter.clone.161	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.j     	.L9235	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L9197:
	l.lwz   	r5,36(r1)	 # SI load
	l.lbs   	r4,1(r22)	 # extendqisi2_no_sext_mem
	l.lwz   	r2,0(r5)	 # SI load
	l.jal   	sqlite3CompareAffinity	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r26,0
	l.bf	.L9209	# delay slot filled
	l.sb    	5(r30),r11	    # movqi
.L9221:
	l.addi  	r5,r30,48
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r6,r30,52
	l.jal   	pushOntoSorter.clone.161	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.lwz   	r5,48(r30)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L9181	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L9244	# delay slot filled
	l.addi  	r4,r0,42	 # move immediate I
.L9196:
	l.sfeqi	r26,0
	l.bnf	.L9221	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r5,28(r1)	 # SI load
	l.jal   	sqlite3ExprCodeMove	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.j     	.L9237	# delay slot filled
	l.lwz   	r5,48(r30)	 # SI load
.L9195:
	l.sfeqi	r26,0
	l.bf	.L9213	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.lbz   	r2,21(r20)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L9231
	l.nop			# nop delay slot
	l.addi  	r2,r2,-1
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.addi  	r3,r2,6
	l.sb    	21(r20),r2	    # movqi
	l.slli  	r2,r3,2
	l.add   	r2,r20,r2
	l.lwz   	r2,0(r2)	 # SI load
.L9215:
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r28,0	 # move reg to reg
	l.ori   	r7,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r5,r30,48
	l.addi  	r6,r30,52
	l.jal   	pushOntoSorter.clone.161	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L9237	# delay slot filled
	l.lwz   	r5,48(r30)	 # SI load
.L9194:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,28(r1)	 # SI load
	l.j     	.L9237	# delay slot filled
	l.lwz   	r5,48(r30)	 # SI load
.L9193:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,64	 # move immediate I
	l.lwz   	r5,28(r1)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r28,0	 # move reg to reg
	l.j     	.L9237	# delay slot filled
	l.lwz   	r5,48(r30)	 # SI load
.L9192:
	l.lbz   	r2,21(r20)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L9232
	l.nop			# nop delay slot
	l.addi  	r2,r2,-1
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.addi  	r3,r2,6
	l.sb    	21(r20),r2	    # movqi
	l.slli  	r2,r3,2
	l.add   	r2,r20,r2
	l.lwz   	r2,0(r2)	 # SI load
.L9201:
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r28,0	 # move reg to reg
	l.ori   	r7,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,79	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
.L9238:
	l.lwz   	r5,28(r1)	 # SI load
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,108	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
.L9235:
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r5,48(r30)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L9181	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L9244	# delay slot filled
	l.addi  	r4,r0,42	 # move immediate I
.L9226:
	l.addi	r1,r1,84
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC236)
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3ErrorMsg	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L9232:
	l.lwz   	r2,72(r20)	 # SI load
	l.addi  	r2,r2,1
	l.j     	.L9201	# delay slot filled
	l.sw    	72(r20),r2	 # SI store
.L9230:
	l.lwz   	r2,72(r20)	 # SI load
	l.addi  	r2,r2,1
	l.j     	.L9203	# delay slot filled
	l.sw    	72(r20),r2	 # SI store
.L9231:
	l.lwz   	r2,72(r20)	 # SI load
	l.addi  	r2,r2,1
	l.j     	.L9215	# delay slot filled
	l.sw    	72(r20),r2	 # SI store
.L9209:
	l.lbz   	r2,21(r20)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L9210
	l.nop			# nop delay slot
	l.lwz   	r2,72(r20)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	72(r20),r2	 # SI store
.L9211:
	l.addi  	r18,r0,1	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r7,r2,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r8,r30,5
	l.addi  	r4,r0,79	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.j     	.L9238	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L9204:
	l.lbz   	r3,21(r20)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L9206	# delay slot filled
	l.addi  	r3,r3,-1
	l.lwz   	r16,72(r20)	 # SI load
	l.addi  	r16,r16,1
	l.sw    	72(r20),r16	 # SI store
.L9207:
	l.addi  	r4,r0,26	 # move immediate I
	l.lwz   	r5,28(r1)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,110	 # move immediate I
	l.lwz   	r5,28(r1)	 # SI load
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.lwz   	r3,20(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9208
	l.nop			# nop delay slot
	l.lwz   	r4,12(r14)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.addi  	r4,r0,8	 # movqi: move immediate
	l.sb    	3(r3),r4	    # movqi
.L9208:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L9235	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L9206:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r20),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r20,r3
	l.j     	.L9207	# delay slot filled
	l.lwz   	r16,0(r3)	 # SI load
.L9213:
	l.sfnei	r6,10
	l.bnf	.L9233	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.ori   	r5,r28,0	 # move reg to reg
	l.j     	.L9237	# delay slot filled
	l.lwz   	r5,48(r30)	 # SI load
.L9210:
	l.addi  	r2,r2,-1
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.addi  	r3,r2,6
	l.sb    	21(r20),r2	    # movqi
	l.slli  	r2,r3,2
	l.add   	r2,r20,r2
	l.j     	.L9211	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L9233:
	l.addi  	r4,r0,60	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,4(r22)	 # SI load
	l.j     	.L9237	# delay slot filled
	l.lwz   	r5,48(r30)	 # SI load
.LFE1410:
	.size	selectInnerLoop.clone.162, .-selectInnerLoop.clone.162
	.align	4
.proc	updateAccumulator
	.type	updateAccumulator, @function
updateAccumulator:
.LFB1071:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3340:
	l.ori   	r24,r4,0	 # move reg to reg
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sw    	-44(r1),r2	 # SI store
.LCFI3341:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3342:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3343:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3344:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3345:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3346:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3347:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3348:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3349:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3350:
	l.lwz   	r20,12(r3)	 # SI load
	l.addi  	r1,r1,-56
.LCFI3351:
	l.sb    	0(r24),r4	    # movqi
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,36(r24)	 # SI load
	l.sflesi	r3,0
	l.bf	.L9246	# delay slot filled
	l.lwz   	r28,32(r24)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r22,r28,4
	l.sw    	4(r1),r5	 # SI store
	l.addi  	r28,r28,12
.L9259:
	l.lwz   	r3,-4(r22)	 # SI load
	l.lwz   	r14,28(r3)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L9262	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r18,0(r14)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.andi  	r11,r18,0xff	 # zero_extendqisi2
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,0(r14)	 # SI load
	l.lwz   	r5,12(r14)	 # SI load
	l.ori   	r6,r11,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3ExprCodeExprList.clone.160	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
.L9247:
	l.lwz   	r3,0(r28)	 # SI load
	l.addi  	r30,r0,0	 # move immediate I
	l.sflts 	r3,r30
	l.bf	.L9248
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,0(r28)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r26,0	 # move reg to reg
	l.jal   	codeDistinct	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L9248:
	l.lwz   	r8,0(r22)	 # SI load
	l.lbz   	r3,3(r8)	 # zero_extendqisi2
	l.andi  	r3,r3,8
	l.sfeqi	r3,0
	l.bf	.L9249	# delay slot filled
	l.sflesi	r18,0
	l.bf	.L9250	# delay slot filled
	l.lwz   	r14,12(r14)	 # SI load
	l.j     	.L9251	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L9268:
	l.bnf	.L9269	# delay slot filled
	l.sfnei	r11,0
.L9251:
	l.lwz   	r4,0(r14)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCollSeq	# delay slot filled
	l.addi  	r16,r16,1
	l.sub   	r8,r0,r11
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sfgts 	r18,r16
	l.or    	r8,r11,r8
	l.bf	.L9253	# delay slot filled
	l.addi  	r14,r14,16
	l.addi  	r3,r0,0	 # movqi: move immediate
.L9253:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L9268	# delay slot filled
	l.sfgesi	r8,0
	l.sfnei	r11,0
.L9269:
	l.bnf	.L9250
	l.nop			# nop delay slot
.L9254:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r8,r11,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r11,r0,-4	 # move immediate I
	l.addi  	r4,r0,12	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r8,0(r22)	 # SI load
.L9249:
	l.lwz   	r7,4(r22)	 # SI load
	l.addi  	r11,r0,-5	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,100	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r26,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.sfeqi	r20,0
	l.bf	.L9255
	l.nop			# nop delay slot
	l.lwz   	r3,20(r20)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9255
	l.nop			# nop delay slot
	l.lwz   	r4,12(r20)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.lwz   	r4,8(r1)	 # SI load
	l.sb    	3(r3),r4	    # movqi
.L9255:
	l.lwz   	r3,56(r2)	 # SI load
	l.sfles 	r18,r3
	l.bf	.L9270	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	56(r2),r18	 # SI store
	l.sw    	60(r2),r26	 # SI store
.L9270:
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.sfeqi	r30,0
	l.bf	.L9271	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
	l.lwz   	r3,32(r20)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9258	# delay slot filled
	l.lwz   	r4,12(r20)	 # SI load
	l.xori  	r30,r30,0xffff
	l.slli  	r30,r30,2
	l.add   	r3,r3,r30
	l.sw    	0(r3),r4	 # SI store
.L9258:
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,4(r1)	 # SI load
.L9271:
	l.lwz   	r3,36(r24)	 # SI load
	l.addi  	r5,r5,1
	l.addi  	r22,r22,16
	l.sw    	4(r1),r5	 # SI store
	l.sfgts 	r3,r5
	l.bf	.L9259	# delay slot filled
	l.addi  	r28,r28,16
.L9246:
	l.lwz   	r3,28(r24)	 # SI load
	l.sflesi	r3,0
	l.bf	.L9260	# delay slot filled
	l.lwz   	r14,16(r24)	 # SI load
	l.addi  	r14,r14,20
	l.addi  	r16,r0,0	 # move immediate I
.L9261:
	l.lwz   	r4,0(r14)	 # SI load
	l.lwz   	r5,-4(r14)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.addi  	r16,r16,1
	l.lwz   	r3,28(r24)	 # SI load
	l.sfgts 	r3,r16
	l.bf	.L9261	# delay slot filled
	l.addi  	r14,r14,24
.L9260:
	l.addi  	r11,r0,0	 # movqi: move immediate
	l.ori   	r3,r2,0	 # move reg to reg
	l.sb    	0(r24),r11	    # movqi
	l.addi	r1,r1,56
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3ExprCacheClear	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L9262:
	l.sw    	8(r1),r14	 # SI store
	l.ori   	r26,r14,0	 # move reg to reg
	l.j     	.L9247	# delay slot filled
	l.ori   	r18,r14,0	 # move reg to reg
.L9250:
	l.lwz   	r3,0(r2)	 # SI load
	l.j     	.L9254	# delay slot filled
	l.lwz   	r11,44(r3)	 # SI load
.LFE1071:
	.size	updateAccumulator, .-updateAccumulator
	.align	4
.proc	evalConstExpr
	.type	evalConstExpr, @function
evalConstExpr:
.LFB796:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3352:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3353:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3354:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3355:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3356:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.addi  	r1,r1,-20
.LCFI3357:
	l.sfeqi	r4,150
	l.bf	.L9275	# delay slot filled
	l.lwz   	r14,8(r3)	 # SI load
	l.sfgtui	r4,150
	l.bf	.L9276	# delay slot filled
	l.sfeqi	r4,152
	l.sfeqi	r4,132
	l.bf	.L9274	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L9273:
	l.ori   	r3,r2,0	 # move reg to reg
.L9294:
	l.jal   	exprIsConst	# delay slot filled
	l.addi  	r4,r0,3	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L9274
	l.nop			# nop delay slot
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,1024
	l.sfeqi	r3,0
	l.bf	.L9279
	l.nop			# nop delay slot
	l.lbz   	r5,0(r2)	 # zero_extendqisi2
	l.sfnei	r5,92
	l.bf	.L9280	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L9281:
	l.lwz   	r4,20(r4)	 # SI load
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.sfeqi	r5,92
	l.bf	.L9281
	l.nop			# nop delay slot
.L9280:
	l.addi  	r5,r5,-91
	l.andi  	r5,r5,0xff	 # zero_extendqisi2
	l.sfgtui	r5,42
	l.bf	.L9279	# delay slot filled
	l.movhi  	r3,hi(.L9283)
	l.slli  	r5,r5,2
	l.ori   	r3,r3,lo(.L9283)
	l.add   	r5,r5,r3
	l.lwz   	r3,0(r5)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L9283:
	.word	.L9282
	.word	.L9279
	.word	.L9279
	.word	.L9289
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9289
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9279
	.word	.L9289
	.word	.L9289
	.word	.L9289
	.word	.L9279
	.word	.L9289
	.section .text
.L9276:
	l.bf	.L9275	# delay slot filled
	l.sfeqi	r4,154
	l.bnf	.L9294	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L9275:
	l.lwz   	r3,28(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9273
	l.nop			# nop delay slot
	l.lwz   	r6,0(r3)	 # SI load
	l.sflesi	r6,0
	l.bnf	.L9292	# delay slot filled
	l.lwz   	r7,12(r3)	 # SI load
	l.j     	.L9294	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L9293:
.L9292:
	l.lwz   	r5,0(r7)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L9277
	l.nop			# nop delay slot
	l.lhz   	r4,2(r5)	 # zero_extendqisi2
	l.ori   	r4,r4,1024
	l.sh    	2(r5),r4	 # movhi
.L9277:
	l.addi  	r6,r6,-1
	l.sfeqi	r6,0
	l.bnf	.L9293	# delay slot filled
	l.addi  	r7,r7,16
	l.j     	.L9294	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L9282:
	l.lwz   	r3,20(r4)	 # SI load
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.addi  	r3,r3,127
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfleui	r3,1
	l.bf	.L9274	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L9279:
	l.lwz   	r16,72(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r16,r16,1
	l.ori   	r4,r2,0	 # move reg to reg
	l.sw    	72(r14),r16	 # SI store
	l.jal   	sqlite3ExprCodeTarget	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.sfne 	r16,r11
	l.bnf	.L9285	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.L9285:
	l.addi  	r3,r0,-124	 # movqi: move immediate
	l.sw    	36(r2),r18	 # SI store
	l.sb    	0(r2),r3	    # movqi
	l.addi  	r11,r0,1	 # move immediate I
.L9274:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L9289:
	l.j     	.L9274	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE796:
	.size	evalConstExpr, .-evalConstExpr
	.align	4
.proc	sqlite3MaterializeView.clone.163
	.type	sqlite3MaterializeView.clone.163, @function
sqlite3MaterializeView.clone.163:
.LFB1411:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3358:
	l.lwz   	r16,0(r3)	 # SI load
	l.sw    	-28(r1),r2	 # SI store
.LCFI3359:
	l.sw    	-24(r1),r14	 # SI store
.LCFI3360:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3361:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3362:
	l.sw    	-8(r1),r22	 # SI store
.LCFI3363:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3364:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-68
.LCFI3365:
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r5,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r18,r6,0	 # move reg to reg
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.ori   	r20,r7,0	 # move reg to reg
	l.sfeqi	r18,0
	l.bf	.L9296	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,0(r22)	 # SI load
	l.sw    	32(r1),r3	 # SI store
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L9297	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r5,r3,0	 # move reg to reg
	l.addi  	r5,r5,1
.L9301:
	l.lbs   	r12,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r12,0
	l.bf	.L9301	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.sub   	r5,r5,r3
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.ori   	r3,r3,65535
	l.and   	r5,r5,r3
.L9297:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r7,36(r1)	 # SI load
	l.ori   	r6,r6,65535
	l.addi  	r4,r0,0	 # move immediate I
	l.and   	r3,r5,r6
	l.movhi 	r5,hi(-2147483648)	 # move immediate M
	l.ori   	r6,r4,0	 # move reg to reg
	l.and   	r7,r7,r5
	l.ori   	r8,r2,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.or    	r2,r7,r3
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r7,r1,32
	l.sw    	36(r1),r2	 # SI store
	l.sw    	0(r1),r4	 # SI store
	l.jal   	sqlite3SrcListAppendFromTerm.clone.147	# delay slot filled
	l.sw    	4(r1),r4	 # SI store
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.ori   	r8,r4,0	 # move reg to reg
	l.sw    	0(r1),r4	 # SI store
	l.sw    	4(r1),r4	 # SI store
	l.sw    	8(r1),r4	 # SI store
	l.jal   	sqlite3SelectNew.clone.150	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
	l.ori   	r2,r11,0	 # move reg to reg
.L9296:
	l.addi  	r6,r0,9	 # movqi: move immediate
	l.ori   	r3,r14,0	 # move reg to reg
	l.sb    	16(r1),r6	    # movqi
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r5,r1,16
	l.sb    	17(r1),r6	    # movqi
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	20(r1),r20	 # SI store
	l.sw    	24(r1),r6	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	28(r1),r6	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi	r1,r1,68
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.LFE1411:
	.size	sqlite3MaterializeView.clone.163, .-sqlite3MaterializeView.clone.163
	.section	.rodata.str1.1
.LC248:
	.string	"unknown database %s"
	.section .text
	.align	4
.proc	findBtree
	.type	findBtree, @function
findBtree:
.LFB498:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3366:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sw    	-20(r1),r2	 # SI store
.LCFI3367:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3368:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3369:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3370:
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r1,r1,-544
.LCFI3371:
	l.ori   	r4,r5,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3FindDbName	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfnei	r11,1
	l.bnf	.L9306	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfgesi	r11,0
	l.bnf	.L9307	# delay slot filled
	l.movhi  	r5,hi(.LC248)
	l.add   	r4,r2,r2
.L9308:
	l.lwz   	r3,8(r14)	 # SI load
	l.add   	r2,r4,r2
	l.slli  	r2,r2,3
	l.add   	r2,r3,r2
	l.lwz   	r11,4(r2)	 # SI load
.L9305:
	l.addi	r1,r1,544
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L9306:
	l.addi  	r16,r1,4
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,520	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3OpenTempDatabase	# delay slot filled
	l.sw    	4(r1),r14	 # SI store
	l.sfeqi	r11,0
	l.bf	.L9308	# delay slot filled
	l.add   	r4,r2,r2
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.movhi  	r5,hi(.LC78)
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,8(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC78)
	l.sw    	12(r1),r2	 # SI store
	l.sw    	68(r1),r2	 # SI store
	l.jal   	sqlite3Error	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.j     	.L9305	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
.L9307:
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r5,lo(.LC248)
	l.jal   	sqlite3Error	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.j     	.L9305	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE498:
	.size	findBtree, .-findBtree
	.section	.rodata.str1.1
.LC249:
	.string	"source and destination must be distinct"
	.section .text
	.align	4
.proc	sqlite3_backup_init
	.global sqlite3_backup_init
	.type	sqlite3_backup_init, @function
sqlite3_backup_init:
.LFB499:
	l.sw    	-20(r1),r14	 # SI store
.LCFI3372:
	l.sw    	-16(r1),r16	 # SI store
.LCFI3373:
	l.sw    	-12(r1),r18	 # SI store
.LCFI3374:
	l.sw    	-8(r1),r20	 # SI store
.LCFI3375:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3376:
	l.sw    	-24(r1),r2	 # SI store
.LCFI3377:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI3378:
	l.ori   	r16,r5,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.sfne 	r5,r3
	l.bnf	.L9317	# delay slot filled
	l.ori   	r18,r6,0	 # move reg to reg
	l.jal   	sqlite3_malloc	# delay slot filled
	l.addi  	r3,r0,44	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L9318	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	0(r11),r6	 # SI store
	l.sw    	4(r11),r6	 # SI store
	l.sw    	8(r11),r6	 # SI store
	l.sw    	12(r11),r6	 # SI store
	l.sw    	16(r11),r6	 # SI store
	l.sw    	20(r11),r6	 # SI store
	l.sw    	24(r11),r6	 # SI store
	l.sw    	28(r11),r6	 # SI store
	l.sw    	32(r11),r6	 # SI store
	l.sw    	36(r11),r6	 # SI store
	l.sw    	40(r11),r6	 # SI store
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	findBtree	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	24(r2),r11	 # SI store
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	findBtree	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r3,r0,1	 # move immediate I
	l.lwz   	r6,24(r2)	 # SI load
	l.sw    	4(r2),r11	 # SI store
	l.sw    	0(r2),r14	 # SI store
	l.sw    	20(r2),r16	 # SI store
	l.sfeqi	r6,0
	l.bf	.L9314	# delay slot filled
	l.sw    	16(r2),r3	 # SI store
	l.sfnei	r11,0
	l.bnf	.L9320	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,4(r6)	 # SI load
	l.lwz   	r8,0(r6)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.lwz   	r4,16(r6)	 # SI load
	l.lwz   	r7,164(r3)	 # SI load
	l.sw    	4(r5),r8	 # SI store
	l.sw    	40(r2),r7	 # SI store
	l.addi  	r4,r4,1
	l.sw    	164(r3),r2	 # SI store
	l.sw    	16(r6),r4	 # SI store
	l.addi	r1,r1,24
.L9319:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L9317:
	l.movhi  	r5,hi(.LC249)
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r5,lo(.LC249)
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L9319	# delay slot filled
	l.addi	r1,r1,24
.L9318:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,7	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.j     	.L9319	# delay slot filled
	l.addi	r1,r1,24
.L9314:
	l.ori   	r3,r2,0	 # move reg to reg
.L9320:
	l.jal   	sqlite3_free	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L9319	# delay slot filled
	l.addi	r1,r1,24
.LFE499:
	.size	sqlite3_backup_init, .-sqlite3_backup_init
	.align	4
.proc	pager_write_pagelist
	.type	pager_write_pagelist, @function
pager_write_pagelist:
.LFB312:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3379:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3380:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3381:
	l.sw    	-32(r1),r14	 # SI store
.LCFI3382:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3383:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3384:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3385:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3386:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3387:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI3388:
	l.sfeqi	r3,0
	l.bf	.L9322	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.lwz   	r14,16(r3)	 # SI load
	l.addi  	r4,r0,4	 # move immediate I
	l.jal   	pager_wait_on_lock	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,56(r14)	 # SI load
	l.lwz   	r4,0(r5)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L9334	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L9323:
	l.sub   	r3,r0,r16
	l.or    	r3,r3,r16
	l.sfltsi	r3,0
	l.bf	.L9322
	l.nop			# nop delay slot
	l.j     	.L9332	# delay slot filled
	l.addi  	r26,r14,92
.L9331:
	l.addi  	r4,r0,1	 # move immediate I
.L9338:
	l.addi  	r16,r0,0	 # move immediate I
	l.sfeqi	r4,0
	l.bf	.L9322	# delay slot filled
	l.lwz   	r2,8(r2)	 # SI load
.L9336:
	l.sub   	r4,r0,r2
	l.or    	r4,r2,r4
	l.sfltsi	r4,0
	l.bnf	.L9322
	l.nop			# nop delay slot
.L9332:
	l.lwz   	r18,12(r2)	 # SI load
	l.lwz   	r4,24(r14)	 # SI load
	l.sfgtu 	r18,r4
	l.bf	.L9338	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lhz   	r4,20(r2)	 # zero_extendqisi2
	l.andi  	r4,r4,32
	l.sfnei	r4,0
	l.bf	.L9331	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r16,120(r14)	 # SI load
	l.lwz   	r24,56(r14)	 # SI load
	l.srai  	r5,r16,31
	l.ori   	r6,r16,0	 # move reg to reg
	l.addi  	r4,r18,-1
	l.lwz   	r20,0(r2)	 # SI load
	l.jal   	__muldi3	# delay slot filled
	l.lwz   	r22,0(r24)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r8,12(r22)	 # SI load
		l.or    	r6, r11, r0
		l.or    	r7, r12, r0
	l.jalr  	r8	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.sfnei	r18,1
	l.bnf	.L9335	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,32(r14)	 # SI load
.L9337:
	l.sfleu 	r18,r3
	l.bf	.L9339	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sw    	32(r14),r18	 # SI store
.L9339:
	l.lwz   	r3,164(r14)	 # SI load
	l.jal   	sqlite3BackupUpdate	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sub   	r4,r0,r16
	l.or    	r4,r4,r16
	l.xori  	r4,r4,0xffff
	l.srli  	r4,r4,31
	l.sfeqi	r4,0
	l.bnf	.L9336	# delay slot filled
	l.lwz   	r2,8(r2)	 # SI load
.L9322:
	l.addi	r1,r1,36
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L9335:
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r4,r20,24
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.j     	.L9337	# delay slot filled
	l.lwz   	r3,32(r14)	 # SI load
.L9334:
	l.lwz   	r3,0(r14)	 # SI load
	l.lwz   	r6,116(r14)	 # SI load
	l.lwz   	r11,24(r3)	 # SI load
	l.ori   	r6,r6,30
	l.jalr  	r11	# delay slot filled
	l.ori   	r7,r4,0	 # move reg to reg
	l.j     	.L9323	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.LFE312:
	.size	pager_write_pagelist, .-pager_write_pagelist
	.align	4
.proc	copyPayload
	.type	copyPayload, @function
copyPayload:
.LFB435:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3389:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3390:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3391:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3392:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3393:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI3394:
	l.ori   	r16,r4,0	 # move reg to reg
	l.sfeqi	r6,0
	l.bf	.L9341	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L9343	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L9341:
	l.ori   	r3,r4,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L9343:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE435:
	.size	copyPayload, .-copyPayload
	.align	4
.proc	accessPayload
	.type	accessPayload, @function
accessPayload:
.LFB436:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3395:
	l.lhs   	r2,88(r3)	 # extendhisi2_no_sext_mem
	l.sw    	-36(r1),r16	 # SI store
.LCFI3396:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r4,r2,23
	l.sw    	-40(r1),r14	 # SI store
.LCFI3397:
	l.slli  	r4,r4,2
	l.ori   	r14,r3,0	 # move reg to reg
	l.sw    	-32(r1),r18	 # SI store
.LCFI3398:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3399:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3400:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3401:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3402:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3403:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3404:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3405:
	l.addi  	r1,r1,-60
.LCFI3406:
	l.lhz   	r3,58(r3)	 # zero_extendqisi2
	l.add   	r4,r14,r4
	l.sw    	0(r1),r8	 # SI store
	l.ori   	r18,r5,0	 # move reg to reg
	l.ori   	r28,r6,0	 # move reg to reg
	l.ori   	r22,r7,0	 # move reg to reg
	l.lwz   	r20,0(r4)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L9374	# delay slot filled
	l.lwz   	r24,4(r14)	 # SI load
.L9345:
	l.lbz   	r3,2(r20)	 # zero_extendqisi2
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r30,32(r14)	 # SI load
	l.sfne 	r3,r2
	l.bf	.L9346	# delay slot filled
	l.lhz   	r5,52(r14)	 # zero_extendqisi2
	l.lwz   	r2,40(r14)	 # SI load
.L9346:
	l.sfeqi	r22,0
	l.bf	.L9347
	l.nop			# nop delay slot
	l.add   	r16,r16,r2
.L9347:
	l.lwz   	r4,44(r14)	 # SI load
	l.add   	r3,r16,r18
	l.add   	r4,r2,r4
	l.sfgtu 	r3,r4
	l.bf	.L9348	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
	l.lhz   	r4,54(r14)	 # zero_extendqisi2
	l.lhz   	r7,22(r24)	 # zero_extendqisi2
	l.add   	r30,r30,r5
	l.lwz   	r5,64(r20)	 # SI load
	l.add   	r6,r30,r4
	l.add   	r5,r5,r7
	l.sfgtu 	r6,r5
	l.bf	.L9348	# delay slot filled
	l.sfgeu 	r16,r4
	l.bf	.L9349	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sfgtu 	r3,r4
	l.bnf	.L9375	# delay slot filled
	l.sub   	r22,r4,r16
.L9351:
	l.ori   	r4,r28,0	 # move reg to reg
	l.add   	r3,r30,r16
	l.ori   	r5,r22,0	 # move reg to reg
	l.lwz   	r6,0(r1)	 # SI load
	l.lwz   	r7,68(r20)	 # SI load
	l.jal   	copyPayload	# delay slot filled
	l.add   	r28,r28,r22
	l.sub   	r4,r0,r11
	l.ori   	r2,r11,0	 # move reg to reg
	l.or    	r4,r4,r11
	l.sub   	r18,r18,r22
	l.xori  	r4,r4,0xffff
	l.addi  	r16,r0,0	 # move immediate I
	l.srli  	r4,r4,31
.L9352:
	l.sub   	r26,r0,r18
	l.or    	r3,r26,r18
	l.sfgesi	r3,0
	l.bf	.L9348	# delay slot filled
	l.sfeqi	r4,0
	l.bf	.L9348
	l.nop			# nop delay slot
	l.lhz   	r2,54(r14)	 # zero_extendqisi2
	l.add   	r3,r30,r2
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.lhz   	r22,22(r24)	 # zero_extendqisi2
	l.lbz   	r3,80(r14)	 # zero_extendqisi2
	l.sw    	12(r1),r11	 # SI store
	l.sfeqi	r3,0
	l.bnf	.L9376	# delay slot filled
	l.addi  	r22,r22,-4
	l.lwz   	r30,84(r14)	 # SI load
.L9356:
	l.sfeqi	r30,0
	l.bf	.L9380	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L9367:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.slli  	r2,r11,2
	l.add   	r30,r30,r2
	l.lwz   	r2,0(r30)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L9377	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r7,12(r1)	 # SI load
.L9380:
	l.sfeqi	r7,0
	l.bnf	.L9378	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
.L9348:
	l.addi	r1,r1,60
.L9379:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9374:
	l.addi  	r2,r2,86
	l.ori   	r3,r20,0	 # move reg to reg
	l.add   	r2,r2,r2
	l.addi  	r5,r14,32
	l.add   	r2,r14,r2
	l.lhz   	r4,0(r2)	 # zero_extendqisi2
	l.jal   	sqlite3BtreeParseCell	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.j     	.L9345	# delay slot filled
	l.sb    	62(r14),r2	    # movqi
.L9349:
	l.sub   	r16,r16,r4
	l.j     	.L9352	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L9376:
	l.lwz   	r30,84(r14)	 # SI load
	l.sfnei	r30,0
	l.bf	.L9367	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.lwz   	r3,48(r14)	 # SI load
	l.addi  	r3,r3,-1
	l.sub   	r2,r3,r2
	l.jal   	__udivsi3	# delay slot filled
	l.add   	r3,r2,r22
	l.slli  	r3,r11,2
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sw    	84(r14),r11	 # SI store
	l.sfeqi	r2,0
	l.bf	.L9356	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L9367	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
	l.j     	.L9379	# delay slot filled
	l.addi	r1,r1,60
.L9375:
	l.j     	.L9351	# delay slot filled
	l.ori   	r22,r18,0	 # move reg to reg
.L9377:
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r20,r11,0	 # move reg to reg
	l.jal   	__umodsi3	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
	l.ori   	r7,r2,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
.L9358:
	l.slli  	r20,r20,2
	l.addi  	r30,r1,12
.L9366:
	l.lwz   	r2,84(r14)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9359	# delay slot filled
	l.add   	r3,r2,r20
	l.sw    	0(r3),r7	 # SI store
.L9359:
	l.sfltu 	r16,r22
	l.bf	.L9360	# delay slot filled
	l.sfeqi	r2,0
	l.bf	.L9381	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.add   	r2,r2,r20
	l.lwz   	r2,4(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9382	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.sw    	12(r1),r2	 # SI store
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r2,r0,0	 # move immediate I
.L9362:
	l.sub   	r16,r16,r22
.L9363:
	l.or    	r3,r26,r18
	l.sfgesi	r3,0
	l.bf	.L9348	# delay slot filled
	l.sfeqi	r7,0
	l.bf	.L9348
	l.nop			# nop delay slot
	l.lwz   	r7,12(r1)	 # SI load
	l.sfnei	r7,0
	l.bf	.L9366	# delay slot filled
	l.addi  	r20,r20,4
	l.j     	.L9348	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
.L9381:
	l.lwz   	r4,12(r1)	 # SI load
.L9382:
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	getOverflowPage	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.sub   	r7,r0,r11
	l.ori   	r2,r11,0	 # move reg to reg
	l.or    	r7,r7,r11
	l.xori  	r7,r7,0xffff
	l.j     	.L9362	# delay slot filled
	l.srli  	r7,r7,31
.L9360:
	l.lwz   	r3,0(r24)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r5,r1,8
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L9348	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r2,8(r1)	 # SI load
	l.sub   	r26,r22,r16
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sw    	4(r1),r3	 # SI store
	l.add   	r3,r18,r16
	l.sfltu 	r22,r3
	l.bf	.L9365	# delay slot filled
	l.sw    	12(r1),r11	 # SI store
	l.ori   	r26,r18,0	 # move reg to reg
.L9365:
	l.lwz   	r5,4(r1)	 # SI load
	l.addi  	r3,r16,4
	l.ori   	r7,r2,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.add   	r3,r5,r3
	l.lwz   	r6,0(r1)	 # SI load
	l.ori   	r5,r26,0	 # move reg to reg
	l.jal   	copyPayload	# delay slot filled
	l.sub   	r18,r18,r26
	l.lwz   	r3,8(r1)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sub   	r7,r0,r2
	l.add   	r28,r28,r26
	l.or    	r7,r7,r2
	l.addi  	r16,r0,0	 # move immediate I
	l.xori  	r7,r7,0xffff
	l.sub   	r26,r0,r18
	l.j     	.L9363	# delay slot filled
	l.srli  	r7,r7,31
.L9378:
	l.j     	.L9358	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
.LFE436:
	.size	accessPayload, .-accessPayload
	.align	4
.proc	sqlite3BtreeMovetoUnpacked
	.type	sqlite3BtreeMovetoUnpacked, @function
sqlite3BtreeMovetoUnpacked:
.LFB449:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3407:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3408:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3409:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3410:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3411:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3412:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3413:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3414:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3415:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3416:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3417:
	l.addi  	r1,r1,-80
.LCFI3418:
	l.lbz   	r2,63(r3)	 # zero_extendqisi2
	l.sw    	4(r1),r6	 # SI store
	l.sw    	12(r1),r7	 # SI store
	l.sw    	16(r1),r8	 # SI store
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r28,r4,0	 # move reg to reg
	l.sfnei	r2,1
	l.bnf	.L9427	# delay slot filled
	l.ori   	r26,r5,0	 # move reg to reg
.L9384:
	l.jal   	moveToRoot	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9386	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.lbz   	r2,63(r14)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L9428	# delay slot filled
	l.sub   	r2,r0,r28
	l.addi  	r3,r14,32
	l.or    	r2,r28,r2
	l.sw    	0(r1),r3	 # SI store
	l.xori  	r2,r2,0xffff
	l.srli  	r2,r2,31
	l.sw    	20(r1),r2	 # SI store
.L9413:
	l.lhs   	r3,88(r14)	 # extendhisi2_no_sext_mem
	l.addi  	r2,r3,23
	l.lwz   	r4,20(r1)	 # SI load
	l.slli  	r2,r2,2
	l.sfeqi	r4,0
	l.add   	r2,r14,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.bnf	.L9429	# delay slot filled
	l.lhz   	r22,16(r2)	 # zero_extendqisi2
	l.addi  	r22,r22,-1
.L9443:
	l.sfeqi	r22,-1
	l.bf	.L9415	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L9390	# delay slot filled
	l.srai  	r18,r22,1
	l.addi  	r3,r3,86
	l.andi  	r18,r22,0xffff	 # zero_extendqisi2
	l.add   	r3,r3,r3
	l.add   	r3,r14,r3
	l.sh    	0(r3),r18	 # movhi
.L9392:
	l.addi  	r20,r0,0	 # move immediate I
.L9391:
	l.lhz   	r3,12(r2)	 # zero_extendqisi2
	l.add   	r12,r18,r18
	l.lwz   	r13,64(r2)	 # SI load
	l.add   	r3,r12,r3
	l.addi  	r4,r0,0	 # movhi: move immediate
	l.add   	r3,r13,r3
	l.sh    	58(r14),r4	 # movhi
	l.lhz   	r15,18(r2)	 # zero_extendqisi2
	l.lbz   	r16,0(r3)	 # zero_extendqisi2
	l.lbz   	r3,1(r3)	 # zero_extendqisi2
	l.slli  	r16,r16,8
	l.lbz   	r12,6(r2)	 # zero_extendqisi2
	l.or    	r16,r3,r16
	l.lbz   	r3,2(r2)	 # zero_extendqisi2
	l.and   	r16,r16,r15
	l.sfeqi	r3,0
	l.add   	r16,r16,r12
	l.bf	.L9393	# delay slot filled
	l.add   	r16,r13,r16
	l.lbz   	r3,4(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L9439	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lbs   	r3,0(r16)	 # extendqisi2_no_sext_mem
	l.sfltsi	r3,0
	l.bf	.L9395	# delay slot filled
	l.lbz   	r12,0(r16)	 # zero_extendqisi2
	l.sw    	32(r1),r12	 # SI store
	l.addi  	r3,r0,1	 # move immediate I
.L9396:
	l.add   	r16,r16,r3
	l.ori   	r3,r16,0	 # move reg to reg
.L9439:
	l.jal   	sqlite3GetVarint	# delay slot filled
	l.addi  	r4,r1,24
	l.lwz   	r3,24(r1)	 # SI load
	l.sfne 	r3,r26
	l.bnf	.L9430	# delay slot filled
	l.lwz   	r12,28(r1)	 # SI load
.L9423:
	l.sfgts 	r26,r3
	l.bf	.L9397	# delay slot filled
	l.addi  	r16,r0,-1	 # move immediate I
	l.sfne 	r26,r3
	l.bf	.L9397	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
	l.lwz   	r4,4(r1)	 # SI load
	l.sfgtu 	r4,r12
	l.bf	.L9397	# delay slot filled
	l.addi  	r16,r0,-1	 # move immediate I
	l.addi  	r16,r0,1	 # move immediate I
.L9397:
	l.addi  	r4,r0,1	 # movqi: move immediate
.L9438:
	l.sw    	36(r14),r3	 # SI store
	l.sb    	62(r14),r4	    # movqi
	l.sw    	40(r14),r12	 # SI store
.L9400:
	l.sfnei	r16,0
.L9441:
	l.bnf	.L9431	# delay slot filled
	l.sfgesi	r16,0
	l.bnf	.L9432
	l.nop			# nop delay slot
	l.addi  	r22,r18,-1
	l.sfgts 	r20,r22
	l.bf	.L9408
	l.nop			# nop delay slot
.L9436:
	l.lhs   	r3,88(r14)	 # extendhisi2_no_sext_mem
	l.add   	r18,r22,r20
	l.addi  	r3,r3,86
	l.srai  	r18,r18,1
	l.add   	r3,r3,r3
	l.andi  	r18,r18,0xffff	 # zero_extendqisi2
	l.add   	r3,r14,r3
	l.j     	.L9391	# delay slot filled
	l.sh    	0(r3),r18	 # movhi
.L9431:
	l.lbz   	r3,2(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L9440	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.lbz   	r3,3(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L9404	# delay slot filled
	l.ori   	r20,r18,0	 # move reg to reg
.L9405:
	l.lhz   	r3,16(r2)	 # zero_extendqisi2
	l.sfgts 	r3,r20
	l.bnf	.L9433	# delay slot filled
	l.add   	r5,r20,r20
	l.lhz   	r4,12(r2)	 # zero_extendqisi2
	l.lwz   	r3,64(r2)	 # SI load
	l.add   	r5,r5,r4
	l.lhz   	r4,18(r2)	 # zero_extendqisi2
	l.add   	r2,r3,r5
	l.lbz   	r6,0(r2)	 # zero_extendqisi2
	l.lbz   	r5,1(r2)	 # zero_extendqisi2
	l.slli  	r2,r6,8
	l.or    	r2,r5,r2
	l.and   	r2,r2,r4
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r3,r2
	l.ori   	r4,r11,0	 # move reg to reg
.L9411:
	l.sfnei	r4,0
	l.bnf	.L9409	# delay slot filled
	l.addi  	r3,r0,0	 # movhi: move immediate
	l.lhs   	r2,88(r14)	 # extendhisi2_no_sext_mem
	l.addi  	r2,r2,86
	l.add   	r2,r2,r2
	l.sh    	58(r14),r3	 # movhi
	l.add   	r2,r14,r2
	l.sb    	62(r14),r3	    # movqi
	l.sh    	0(r2),r20	 # movhi
	l.jal   	moveToChild	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L9413
	l.nop			# nop delay slot
	l.sw    	8(r1),r11	 # SI store
.L9386:
	l.lwz   	r11,8(r1)	 # SI load
.L9442:
	l.addi	r1,r1,80
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9428:
	l.addi  	r2,r0,-1	 # move immediate I
	l.lwz   	r4,16(r1)	 # SI load
	l.j     	.L9386	# delay slot filled
	l.sw    	0(r4),r2	 # SI store
.L9393:
	l.lbz   	r3,0(r16)	 # zero_extendqisi2
	l.andi  	r13,r3,128
	l.sfnei	r13,0
	l.bf	.L9401
	l.nop			# nop delay slot
	l.lhz   	r13,8(r2)	 # zero_extendqisi2
	l.sfgts 	r3,r13
	l.bnf	.L9434	# delay slot filled
	l.addi  	r4,r16,1
.L9401:
	l.lbs   	r13,1(r16)	 # extendqisi2_no_sext_mem
	l.sfltsi	r13,0
	l.bf	.L9402	# delay slot filled
	l.lbz   	r15,1(r16)	 # zero_extendqisi2
	l.andi  	r3,r3,127
	l.lhz   	r13,8(r2)	 # zero_extendqisi2
	l.slli  	r3,r3,7
	l.add   	r3,r3,r15
	l.sfgts 	r3,r13
	l.bnf	.L9435	# delay slot filled
	l.addi  	r4,r16,2
.L9402:
	l.sub   	r4,r16,r12
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3BtreeParseCellPtr	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
	l.lwz   	r16,40(r14)	 # SI load
	l.jal   	sqlite3Malloc	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L9418	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.ori   	r8,r4,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	accessPayload	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.jal   	sqlite3VdbeRecordCompare	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfnei	r30,0
	l.bnf	.L9441	# delay slot filled
	l.sfnei	r16,0
	l.j     	.L9386	# delay slot filled
	l.sw    	8(r1),r30	 # SI store
.L9432:
	l.addi  	r20,r18,1
	l.sfgts 	r20,r22
	l.bnf	.L9436
	l.nop			# nop delay slot
.L9408:
	l.lbz   	r3,3(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L9405
	l.nop			# nop delay slot
.L9409:
	l.lwz   	r4,16(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L9442	# delay slot filled
	l.lwz   	r11,8(r1)	 # SI load
	l.j     	.L9386	# delay slot filled
	l.sw    	0(r4),r16	 # SI store
.L9430:
	l.lwz   	r4,4(r1)	 # SI load
	l.sfne 	r12,r4
	l.bf	.L9423	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L9438	# delay slot filled
	l.addi  	r4,r0,1	 # movqi: move immediate
.L9435:
	l.jal   	sqlite3VdbeRecordCompare	# delay slot filled
	l.ori   	r5,r28,0	 # move reg to reg
	l.j     	.L9400	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L9434:
	l.jal   	sqlite3VdbeRecordCompare	# delay slot filled
	l.ori   	r5,r28,0	 # move reg to reg
	l.j     	.L9400	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L9427:
	l.lbz   	r2,62(r3)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L9384
	l.nop			# nop delay slot
	l.lwz   	r2,92(r3)	 # SI load
	l.lbz   	r2,2(r2)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L9384
	l.nop			# nop delay slot
	l.lwz   	r2,36(r3)	 # SI load
	l.sfne 	r2,r5
	l.bnf	.L9437	# delay slot filled
	l.lwz   	r4,40(r3)	 # SI load
.L9385:
	l.lbz   	r3,61(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L9384	# delay slot filled
	l.sfgts 	r26,r2
	l.bf	.L9421	# delay slot filled
	l.sfne 	r26,r2
	l.bf	.L9384	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.sfgtu 	r3,r4
	l.bnf	.L9384
	l.nop			# nop delay slot
.L9421:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r2,r0,-1	 # move immediate I
	l.lwz   	r3,16(r1)	 # SI load
	l.sw    	8(r1),r4	 # SI store
	l.j     	.L9386	# delay slot filled
	l.sw    	0(r3),r2	 # SI store
.L9395:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.addi  	r4,r1,32
	l.j     	.L9396	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
.L9390:
	l.addi  	r3,r3,86
	l.add   	r3,r3,r3
	l.andi  	r18,r18,0xffff	 # zero_extendqisi2
	l.add   	r3,r14,r3
	l.j     	.L9392	# delay slot filled
	l.sh    	0(r3),r18	 # movhi
.L9433:
	l.lbz   	r4,5(r2)	 # zero_extendqisi2
	l.lwz   	r3,64(r2)	 # SI load
	l.addi  	r2,r4,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r3,r2
	l.j     	.L9411	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
.L9418:
	l.addi  	r3,r0,7	 # move immediate I
	l.j     	.L9386	# delay slot filled
	l.sw    	8(r1),r3	 # SI store
.L9437:
	l.sfne 	r4,r6
	l.bf	.L9385
	l.nop			# nop delay slot
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	0(r8),r2	 # SI store
	l.j     	.L9386	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
.L9415:
	l.addi  	r2,r0,11	 # move immediate I
	l.j     	.L9386	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
.L9429:
	l.lbz   	r4,2(r2)	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.sfltsi	r4,0
	l.bnf	.L9443	# delay slot filled
	l.addi  	r22,r22,-1
	l.addi  	r4,r0,11	 # move immediate I
	l.j     	.L9386	# delay slot filled
	l.sw    	8(r1),r4	 # SI store
.L9404:
	l.addi  	r3,r0,0	 # move immediate I
.L9440:
	l.lwz   	r2,16(r1)	 # SI load
	l.j     	.L9386	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
.LFE449:
	.size	sqlite3BtreeMovetoUnpacked, .-sqlite3BtreeMovetoUnpacked
	.align	4
.proc	sqlite3BtreeMoveto
	.type	sqlite3BtreeMoveto, @function
sqlite3BtreeMoveto:
.LFB450:
	l.sw    	-32(r1),r2	 # SI store
.LCFI3419:
	l.sw    	-24(r1),r16	 # SI store
.LCFI3420:
	l.sw    	-20(r1),r18	 # SI store
.LCFI3421:
	l.sw    	-16(r1),r20	 # SI store
.LCFI3422:
	l.sw    	-12(r1),r22	 # SI store
.LCFI3423:
	l.sw    	-8(r1),r24	 # SI store
.LCFI3424:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3425:
	l.sw    	-28(r1),r14	 # SI store
.LCFI3426:
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r1,r1,-184
.LCFI3427:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r24,r5,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.ori   	r22,r7,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L9445	# delay slot filled
	l.ori   	r20,r8,0	 # move reg to reg
	l.ori   	r4,r6,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r3,16(r3)	 # SI load
	l.ori   	r6,r1,0	 # move reg to reg
	l.addi  	r7,r0,150	 # move immediate I
	l.jal   	sqlite3VdbeRecordUnpack	# delay slot filled
	l.addi  	r14,r0,7	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L9446	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.ori   	r7,r22,0	 # move reg to reg
	l.jal   	sqlite3BtreeMovetoUnpacked	# delay slot filled
	l.ori   	r8,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeDeleteUnpackedRecord	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L9446:
	l.addi	r1,r1,184
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L9445:
	l.jal   	sqlite3BtreeMovetoUnpacked
	l.nop			# nop delay slot
	l.j     	.L9446	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.LFE450:
	.size	sqlite3BtreeMoveto, .-sqlite3BtreeMoveto
	.align	4
.proc	sqlite3BtreeRestoreCursorPosition
	.type	sqlite3BtreeRestoreCursorPosition, @function
sqlite3BtreeRestoreCursorPosition:
.LFB367:
	l.sw    	-12(r1),r2	 # SI store
.LCFI3428:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3429:
	l.sw    	-8(r1),r14	 # SI store
.LCFI3430:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r4,63(r3)	 # zero_extendqisi2
	l.sfnei	r4,3
.LCFI3431:
	l.bnf	.L9451	# delay slot filled
	l.addi  	r1,r1,-12
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.addi  	r7,r0,0	 # move immediate I
	l.sb    	63(r3),r4	    # movqi
	l.addi  	r8,r3,76
		l.lwz   	r5, 68(r3)
		l.lwz   	r6, 68+4(r3)
	l.jal   	sqlite3BtreeMoveto	# delay slot filled
	l.lwz   	r4,64(r3)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L9452	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9452:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,64(r2)	 # SI load
	l.sw    	64(r2),r14	 # SI store
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9451:
	l.lwz   	r14,76(r3)	 # SI load
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE367:
	.size	sqlite3BtreeRestoreCursorPosition, .-sqlite3BtreeRestoreCursorPosition
	.align	4
.proc	sqlite3BtreeKeySize
	.type	sqlite3BtreeKeySize, @function
sqlite3BtreeKeySize:
.LFB432:
	l.sw    	-12(r1),r2	 # SI store
.LCFI3432:
	l.sw    	-8(r1),r14	 # SI store
.LCFI3433:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3434:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r11,63(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-12
.LCFI3435:
	l.sfleui	r11,1
	l.bf	.L9454	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.jal   	sqlite3BtreeRestoreCursorPosition
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L9458
	l.nop			# nop delay slot
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9458:
	l.lbz   	r11,63(r2)	 # zero_extendqisi2
.L9454:
	l.sfnei	r11,0
	l.bnf	.L9459	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.lhz   	r3,58(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L9460	# delay slot filled
	l.addi  	r5,r2,32
.L9457:
		l.lwz   	r3, 36(r2)
		l.lwz   	r4, 36+4(r2)
		l.sw    	0(r14), r3
		l.sw    	4(r14), r4
	l.addi	r1,r1,12
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9459:
	l.addi  	r2,r0,0	 # move immediate I
		l.sw    	0(r14), r2
		l.sw    	4(r14), r3
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9460:
	l.lhs   	r3,88(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r6,r3,23
	l.addi  	r3,r3,86
	l.slli  	r6,r6,2
	l.add   	r3,r3,r3
	l.add   	r3,r2,r3
	l.add   	r6,r2,r6
	l.lhz   	r4,0(r3)	 # zero_extendqisi2
	l.jal   	sqlite3BtreeParseCell	# delay slot filled
	l.lwz   	r3,0(r6)	 # SI load
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.j     	.L9457	# delay slot filled
	l.sb    	62(r2),r3	    # movqi
.LFE432:
	.size	sqlite3BtreeKeySize, .-sqlite3BtreeKeySize
	.align	4
.proc	sqlite3BtreeNext
	.type	sqlite3BtreeNext, @function
sqlite3BtreeNext:
.LFB453:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3436:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3437:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3438:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3439:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI3440:
	l.ori   	r14,r4,0	 # move reg to reg
.L9470:
	l.lbz   	r11,63(r2)	 # zero_extendqisi2
	l.sfleui	r11,1
	l.bf	.L9479	# delay slot filled
	l.sfnei	r11,0
	l.jal   	sqlite3BtreeRestoreCursorPosition	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9463
	l.nop			# nop delay slot
	l.lbz   	r11,63(r2)	 # zero_extendqisi2
	l.sfnei	r11,0
.L9479:
	l.bnf	.L9475
	l.nop			# nop delay slot
	l.lwz   	r3,76(r2)	 # SI load
	l.sflesi	r3,0
	l.bnf	.L9476	# delay slot filled
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.lhs   	r3,88(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r8,r3,86
	l.addi  	r5,r3,23
	l.add   	r8,r8,r8
	l.slli  	r4,r5,2
	l.add   	r8,r2,r8
	l.lhz   	r7,0(r8)	 # zero_extendqisi2
	l.addi  	r7,r7,1
	l.add   	r4,r2,r4
	l.andi  	r7,r7,0xffff	 # zero_extendqisi2
	l.sb    	62(r2),r6	    # movqi
	l.sh    	0(r8),r7	 # movhi
	l.lwz   	r6,0(r4)	 # SI load
	l.addi  	r8,r0,0	 # move immediate I
	l.lhz   	r4,16(r6)	 # zero_extendqisi2
	l.sw    	76(r2),r8	 # SI store
	l.sflts 	r7,r4
	l.bf	.L9466	# delay slot filled
	l.sh    	58(r2),r8	 # movhi
	l.lbz   	r16,3(r6)	 # zero_extendqisi2
	l.sfnei	r16,0
	l.bnf	.L9477	# delay slot filled
	l.sfnei	r3,0
.L9480:
	l.bnf	.L9478	# delay slot filled
	l.slli  	r5,r5,2
	l.add   	r5,r2,r5
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,0(r5)	 # SI load
	l.lhz   	r3,88(r2)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.addi  	r6,r0,0	 # movhi: move immediate
	l.slli  	r3,r3,16
	l.sh    	58(r2),r6	 # movhi
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.srai  	r3,r3,16
	l.sb    	62(r2),r4	    # movqi
	l.addi  	r5,r3,23
	l.addi  	r6,r3,86
	l.slli  	r7,r5,2
	l.add   	r6,r6,r6
	l.sh    	88(r2),r3	 # movhi
	l.add   	r7,r2,r7
	l.add   	r6,r2,r6
	l.lwz   	r7,0(r7)	 # SI load
	l.lhz   	r8,0(r6)	 # zero_extendqisi2
	l.lhz   	r6,16(r7)	 # zero_extendqisi2
	l.sfgeu 	r8,r6
	l.bf	.L9480	# delay slot filled
	l.sfnei	r3,0
	l.addi  	r8,r0,0	 # move immediate I
	l.sw    	0(r14),r8	 # SI store
	l.lbz   	r11,2(r7)	 # zero_extendqisi2
	l.sfne 	r11,r8
	l.bf	.L9470
	l.nop			# nop delay slot
.L9463:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9478:
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r11,r3,0	 # move reg to reg
	l.sw    	0(r14),r4	 # SI store
	l.sb    	63(r2),r3	    # movqi
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9475:
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L9463	# delay slot filled
	l.sw    	0(r14),r2	 # SI store
.L9476:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	76(r2),r3	 # SI store
	l.sw    	0(r14),r3	 # SI store
	l.j     	.L9463	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
.L9466:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r14),r3	 # SI store
	l.ori   	r11,r3,0	 # move reg to reg
	l.lbz   	r3,3(r6)	 # zero_extendqisi2
	l.sfne 	r3,r11
	l.bf	.L9463
	l.nop			# nop delay slot
	l.addi	r1,r1,16
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	moveToLeftmost	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L9477:
	l.lbz   	r3,5(r6)	 # zero_extendqisi2
	l.lwz   	r4,64(r6)	 # SI load
	l.addi  	r3,r3,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r4,r3
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	moveToChild	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9463
	l.nop			# nop delay slot
	l.jal   	moveToLeftmost	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L9463	# delay slot filled
	l.sw    	0(r14),r16	 # SI store
.LFE453:
	.size	sqlite3BtreeNext, .-sqlite3BtreeNext
	.align	4
.proc	sqlite3BtreePrevious
	.type	sqlite3BtreePrevious, @function
sqlite3BtreePrevious:
.LFB454:
	l.sw    	-12(r1),r2	 # SI store
.LCFI3441:
	l.sw    	-8(r1),r14	 # SI store
.LCFI3442:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3443:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r11,63(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-12
.LCFI3444:
	l.sfleui	r11,1
	l.bf	.L9482	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.jal   	sqlite3BtreeRestoreCursorPosition
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L9495
	l.nop			# nop delay slot
.L9483:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9495:
	l.lbz   	r11,63(r2)	 # zero_extendqisi2
.L9482:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sfnei	r11,0
	l.bnf	.L9496	# delay slot filled
	l.sb    	61(r2),r3	    # movqi
	l.lwz   	r3,76(r2)	 # SI load
	l.sfgesi	r3,0
	l.bnf	.L9497	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lhs   	r4,88(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r3,r4,23
	l.slli  	r3,r3,2
	l.sw    	76(r2),r5	 # SI store
	l.add   	r3,r2,r3
	l.lwz   	r3,0(r3)	 # SI load
	l.lbz   	r5,3(r3)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L9486	# delay slot filled
	l.ori   	r6,r4,0	 # move reg to reg
	l.addi  	r5,r4,86
	l.add   	r5,r5,r5
	l.add   	r5,r2,r5
	l.lhz   	r5,0(r5)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L9487	# delay slot filled
	l.sfeqi	r4,0
	l.bnf	.L9494
	l.nop			# nop delay slot
	l.addi  	r3,r0,0	 # movqi: move immediate
.L9500:
	l.addi  	r11,r0,0	 # move immediate I
	l.sb    	63(r2),r3	    # movqi
	l.addi  	r2,r0,1	 # move immediate I
	l.sw    	0(r14),r2	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9491:
	l.sfeqi	r3,0
	l.bf	.L9500	# delay slot filled
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.lwz   	r3,0(r7)	 # SI load
.L9494:
	l.jal   	releasePage
	l.nop			# nop delay slot
	l.lhz   	r3,88(r2)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.slli  	r3,r3,16
	l.sb    	62(r2),r5	    # movqi
	l.addi  	r4,r0,0	 # movhi: move immediate
	l.srai  	r3,r3,16
	l.sh    	58(r2),r4	 # movhi
	l.addi  	r5,r3,86
	l.addi  	r7,r3,23
	l.add   	r5,r5,r5
	l.slli  	r7,r7,2
	l.add   	r5,r2,r5
	l.sh    	88(r2),r3	 # movhi
	l.lhz   	r5,0(r5)	 # zero_extendqisi2
	l.ori   	r6,r3,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L9491	# delay slot filled
	l.add   	r7,r2,r7
	l.lwz   	r3,0(r7)	 # SI load
.L9487:
	l.addi  	r6,r6,86
	l.addi  	r4,r0,0	 # movhi: move immediate
	l.add   	r6,r6,r6
	l.addi  	r5,r5,-1
	l.add   	r6,r2,r6
	l.sh    	58(r2),r4	 # movhi
	l.sb    	62(r2),r4	    # movqi
	l.sh    	0(r6),r5	 # movhi
	l.lbz   	r11,2(r3)	 # zero_extendqisi2
	l.sfeqi	r11,0
	l.bf	.L9499	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lbz   	r3,3(r3)	 # zero_extendqisi2
	l.addi  	r11,r0,0	 # move immediate I
	l.sfne 	r3,r11
	l.bnf	.L9498	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L9499:
	l.sw    	0(r14),r5	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9496:
	l.addi  	r2,r0,1	 # move immediate I
	l.sw    	0(r14),r2	 # SI store
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9486:
	l.addi  	r4,r4,86
	l.lhz   	r7,12(r3)	 # zero_extendqisi2
	l.add   	r4,r4,r4
	l.lwz   	r5,64(r3)	 # SI load
	l.add   	r4,r2,r4
	l.lhz   	r6,18(r3)	 # zero_extendqisi2
	l.lhz   	r4,0(r4)	 # zero_extendqisi2
	l.add   	r4,r4,r4
	l.add   	r3,r4,r7
	l.add   	r3,r5,r3
	l.lbz   	r7,0(r3)	 # zero_extendqisi2
	l.lbz   	r4,1(r3)	 # zero_extendqisi2
	l.slli  	r3,r7,8
	l.or    	r3,r4,r3
	l.and   	r3,r3,r6
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r5,r3
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	moveToChild	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9483
	l.nop			# nop delay slot
	l.jal   	moveToRightmost	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L9499	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L9497:
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	76(r2),r4	 # SI store
	l.sw    	0(r14),r4	 # SI store
	l.j     	.L9483	# delay slot filled
	l.ori   	r11,r4,0	 # move reg to reg
.L9498:
	l.jal   	sqlite3BtreePrevious	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L9499	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.LFE454:
	.size	sqlite3BtreePrevious, .-sqlite3BtreePrevious
	.align	4
.proc	sqlite3VdbeCursorMoveto
	.type	sqlite3VdbeCursorMoveto, @function
sqlite3VdbeCursorMoveto:
.LFB590:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3445:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3446:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3447:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3448:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lbz   	r2,28(r3)	 # zero_extendqisi2
	l.sfeqi	r2,0
.LCFI3449:
	l.bnf	.L9511	# delay slot filled
	l.addi  	r1,r1,-20
	l.lwz   	r16,0(r3)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L9503	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
	l.lbz   	r2,63(r16)	 # zero_extendqisi2
	l.sfleui	r2,1
	l.bf	.L9516	# delay slot filled
	l.sfnei	r2,1
	l.jal   	sqlite3BtreeRestoreCursorPosition	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L9512	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L9503:
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9512:
	l.lbz   	r2,63(r16)	 # zero_extendqisi2
	l.sfnei	r2,1
.L9516:
	l.bnf	.L9513	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,1	 # movqi: move immediate
.L9518:
	l.sw    	88(r14),r4	 # SI store
	l.sb    	20(r14),r5	    # movqi
	l.addi	r1,r1,20
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r14,-12(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9511:
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,0(r3)	 # SI load
	l.ori   	r7,r4,0	 # move reg to reg
		l.lwz   	r5, 32(r14)
		l.lwz   	r6, 32+4(r14)
	l.jal   	sqlite3BtreeMovetoUnpacked	# delay slot filled
	l.ori   	r8,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9503	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
		l.lwz   	r4, 32(r14)
		l.lwz   	r5, 32+4(r14)
		l.sw    	8(r14), r4
		l.sw    	8+4(r14), r5
	l.sub   	r4,r0,r3
	l.sfgesi	r3,0
	l.or    	r3,r4,r3
	l.xori  	r3,r3,0xffff
	l.srli  	r3,r3,31
	l.bnf	.L9514	# delay slot filled
	l.sb    	17(r14),r3	    # movqi
	l.addi  	r5,r0,0	 # movqi: move immediate
.L9517:
	l.addi  	r3,r0,0	 # move immediate I
	l.sb    	28(r14),r5	    # movqi
	l.sw    	88(r14),r3	 # SI store
	l.addi	r1,r1,20
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9513:
	l.lwz   	r2,76(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9503	# delay slot filled
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.j     	.L9518
	l.nop			# nop delay slot
.L9514:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3BtreeNext	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L9517	# delay slot filled
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.j     	.L9503	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.LFE590:
	.size	sqlite3VdbeCursorMoveto, .-sqlite3VdbeCursorMoveto
	.align	4
.proc	sqlite3BtreeKey
	.type	sqlite3BtreeKey, @function
sqlite3BtreeKey:
.LFB437:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3450:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3451:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3452:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3453:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3454:
	l.ori   	r18,r4,0	 # move reg to reg
	l.lbz   	r4,63(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-20
.LCFI3455:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfleui	r4,1
	l.bf	.L9520	# delay slot filled
	l.ori   	r14,r6,0	 # move reg to reg
	l.jal   	sqlite3BtreeRestoreCursorPosition
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L9520
	l.nop			# nop delay slot
.L9521:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L9520:
	l.lwz   	r3,92(r2)	 # SI load
	l.lbz   	r7,2(r3)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L9521	# delay slot filled
	l.addi  	r11,r0,11	 # move immediate I
	l.addi	r1,r1,20
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r8,r7,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	accessPayload	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.LFE437:
	.size	sqlite3BtreeKey, .-sqlite3BtreeKey
	.align	4
.proc	saveCursorPosition
	.type	saveCursorPosition, @function
saveCursorPosition:
.LFB364:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3456:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3457:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3458:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3459:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3460:
	l.addi  	r4,r3,68
	l.addi  	r1,r1,-20
.LCFI3461:
	l.jal   	sqlite3BtreeKeySize	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9527	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r2,92(r16)	 # SI load
	l.lbz   	r2,2(r2)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L9532
	l.nop			# nop delay slot
.L9525:
	l.lhs   	r2,88(r16)	 # extendhisi2_no_sext_mem
	l.sfltsi	r2,0
	l.bf	.L9529	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.addi  	r2,r16,92
.L9528:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r4,r0,0	 # move immediate I
	l.lhs   	r3,88(r16)	 # extendhisi2_no_sext_mem
	l.sw    	0(r2),r4	 # SI store
	l.sfges 	r3,r14
	l.bf	.L9528	# delay slot filled
	l.addi  	r2,r2,4
.L9529:
	l.addi  	r2,r0,-1	 # movhi: move immediate
	l.addi  	r4,r0,2	 # movqi: move immediate
	l.sh    	88(r16),r2	 # movhi
	l.sb    	63(r16),r4	    # movqi
.L9527:
	l.lwz   	r3,84(r16)	 # SI load
.L9533:
	l.jal   	sqlite3_free	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	84(r16),r2	 # SI store
	l.addi	r1,r1,20
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L9532:
	l.jal   	sqlite3Malloc	# delay slot filled
	l.lwz   	r3,72(r16)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L9530	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r5,72(r16)	 # SI load
	l.jal   	sqlite3BtreeKey	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9526	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L9525	# delay slot filled
	l.sw    	64(r16),r2	 # SI store
.L9530:
	l.j     	.L9527	# delay slot filled
	l.addi  	r18,r0,7	 # move immediate I
.L9526:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L9533	# delay slot filled
	l.lwz   	r3,84(r16)	 # SI load
.LFE364:
	.size	saveCursorPosition, .-saveCursorPosition
	.align	4
.proc	saveAllCursors.clone.165
	.type	saveAllCursors.clone.165, @function
saveAllCursors.clone.165:
.LFB1413:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3462:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3463:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3464:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3465:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI3466:
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bnf	.L9540	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
	l.j     	.L9544	# delay slot filled
	l.addi	r1,r1,16
.L9543:
	l.lwz   	r3,20(r2)	 # SI load
	l.sfne 	r14,r3
	l.bnf	.L9537
	l.nop			# nop delay slot
.L9536:
	l.lwz   	r2,8(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L9542	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
.L9540:
	l.sfeq 	r2,r16
	l.bf	.L9536	# delay slot filled
	l.sfeqi	r14,0
	l.bnf	.L9543
	l.nop			# nop delay slot
.L9537:
	l.lbz   	r3,63(r2)	 # zero_extendqisi2
	l.sfnei	r3,1
	l.bf	.L9536
	l.nop			# nop delay slot
	l.jal   	saveCursorPosition	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L9536
	l.nop			# nop delay slot
	l.addi	r1,r1,16
.L9544:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9542:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE1413:
	.size	saveAllCursors.clone.165, .-saveAllCursors.clone.165
	.align	4
.proc	sqlite3BtreeRollback
	.type	sqlite3BtreeRollback, @function
sqlite3BtreeRollback:
.LFB421:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3467:
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r2,4(r3)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	-12(r1),r14	 # SI store
.LCFI3468:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3469:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3470:
	l.sw    	4(r2),r5	 # SI store
	l.addi  	r1,r1,-20
.LCFI3471:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.jal   	saveAllCursors.clone.165	# delay slot filled
	l.lwz   	r3,8(r2)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L9552	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lbz   	r3,8(r14)	 # zero_extendqisi2
	l.sfnei	r3,2
	l.bnf	.L9553
	l.nop			# nop delay slot
.L9547:
	l.sfeqi	r3,0
.L9557:
	l.bnf	.L9554
	l.nop			# nop delay slot
.L9550:
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.lwz   	r3,52(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	52(r2),r3	 # SI store
	l.sb    	8(r14),r3	    # movqi
	l.jal   	unlockBtreeIfUnused	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi	r1,r1,20
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9554:
	l.jal   	clearAllSharedCacheTableLocks	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r3,36(r2)	 # SI load
	l.addi  	r3,r3,-1
	l.sfnei	r3,0
	l.bf	.L9550	# delay slot filled
	l.sw    	36(r2),r3	 # SI store
	l.j     	.L9550	# delay slot filled
	l.sb    	32(r2),r3	    # movqi
.L9552:
	l.lwz   	r3,0(r14)	 # SI load
	l.lwz   	r4,4(r14)	 # SI load
	l.jal   	sqlite3BtreeTripAllCursors.clone.157	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.lbz   	r3,8(r14)	 # zero_extendqisi2
	l.sfnei	r3,2
	l.bf	.L9557	# delay slot filled
	l.sfeqi	r3,0
.L9553:
	l.jal   	sqlite3PagerRollback	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L9558	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r16,r11,0	 # move reg to reg
.L9558:
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L9555
	l.nop			# nop delay slot
	l.addi  	r3,r0,1	 # movqi: move immediate
.L9556:
	l.sb    	32(r2),r3	    # movqi
	l.j     	.L9547	# delay slot filled
	l.lbz   	r3,8(r14)	 # zero_extendqisi2
.L9555:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.j     	.L9556	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
.LFE421:
	.size	sqlite3BtreeRollback, .-sqlite3BtreeRollback
	.align	4
.proc	sqlite3BtreeClose
	.type	sqlite3BtreeClose, @function
sqlite3BtreeClose:
.LFB396:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3472:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3473:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r16,4(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI3474:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3475:
	l.lwz   	r4,8(r16)	 # SI load
	l.sw    	4(r16),r3	 # SI store
	l.sfeqi	r4,0
.LCFI3476:
	l.bf	.L9560	# delay slot filled
	l.addi  	r1,r1,-16
.L9579:
	l.lwz   	r3,0(r4)	 # SI load
	l.sfne 	r3,r2
	l.bnf	.L9581	# delay slot filled
	l.lwz   	r14,8(r4)	 # SI load
	l.sfnei	r14,0
.L9586:
	l.bf	.L9579	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
.L9560:
	l.jal   	sqlite3BtreeRollback	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,9(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L9563
	l.nop			# nop delay slot
	l.lwz   	r3,56(r16)	 # SI load
	l.addi  	r3,r3,-1
	l.sfgtsi	r3,0
	l.bnf	.L9582	# delay slot filled
	l.sw    	56(r16),r3	 # SI store
	l.lwz   	r3,24(r2)	 # SI load
.L9587:
	l.sfeqi	r3,0
	l.bf	.L9573
	l.nop			# nop delay slot
	l.lwz   	r4,20(r2)	 # SI load
	l.sw    	20(r3),r4	 # SI store
.L9573:
	l.lwz   	r4,20(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L9574
	l.nop			# nop delay slot
	l.sw    	24(r4),r3	 # SI store
.L9574:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi	r1,r1,16
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9581:
	l.jal   	sqlite3BtreeCloseCursor	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.j     	.L9586	# delay slot filled
	l.sfnei	r14,0
.L9583:
	l.lwz   	r4,60(r16)	 # SI load
	l.sw    	0(r3),r4	 # SI store
.L9563:
	l.jal   	sqlite3PagerClose	# delay slot filled
	l.lwz   	r3,0(r16)	 # SI load
	l.lwz   	r4,44(r16)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L9580
	l.nop			# nop delay slot
	l.lwz   	r3,40(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9572
	l.nop			# nop delay slot
	l.jalr  	r4
	l.nop			# nop delay slot
.L9580:
	l.lwz   	r3,40(r16)	 # SI load
.L9572:
	l.jal   	sqlite3_free
	l.nop			# nop delay slot
	l.jal   	pcache1Free	# delay slot filled
	l.lwz   	r3,76(r16)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3_free	# delay slot filled
	l.sw    	76(r16),r4	 # SI store
	l.j     	.L9587	# delay slot filled
	l.lwz   	r3,24(r2)	 # SI load
.L9582:
	l.movhi  	r3,hi(sqlite3SharedCacheList)
	l.ori   	r3,r3,lo(sqlite3SharedCacheList)
	l.lwz   	r4,0(r3)	 # SI load
	l.sfne 	r16,r4
	l.bnf	.L9583	# delay slot filled
	l.sfeqi	r4,0
	l.bf	.L9563
	l.nop			# nop delay slot
	l.lwz   	r3,60(r4)	 # SI load
	l.sfne 	r16,r3
	l.bf	.L9588	# delay slot filled
	l.sfnei	r3,0
	l.j     	.L9585	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
.L9570:
	l.lwz   	r4,60(r3)	 # SI load
	l.sfne 	r16,r4
	l.bnf	.L9568	# delay slot filled
	l.sfnei	r4,0
	l.ori   	r3,r4,0	 # move reg to reg
.L9588:
	l.bf	.L9570
	l.nop			# nop delay slot
	l.j     	.L9563
	l.nop			# nop delay slot
.L9585:
.L9568:
	l.lwz   	r4,60(r16)	 # SI load
	l.j     	.L9563	# delay slot filled
	l.sw    	60(r3),r4	 # SI store
.LFE396:
	.size	sqlite3BtreeClose, .-sqlite3BtreeClose
	.align	4
.proc	sqlite3VdbeFreeCursor.clone.166
	.type	sqlite3VdbeFreeCursor.clone.166, @function
sqlite3VdbeFreeCursor.clone.166:
.LFB1414:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3477:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3478:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3479:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3480:
	l.ori   	r2,r5,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI3481:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L9589	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.lwz   	r5,40(r5)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L9591
	l.nop			# nop delay slot
	l.jal   	sqlite3BtreeClose	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
.L9592:
	l.lwz   	r5,76(r2)	 # SI load
.L9595:
	l.sfeqi	r5,0
	l.bf	.L9593	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.lwz   	r4,80(r2)	 # SI load
	l.sb    	0(r14),r3	    # movqi
	l.lwz   	r11,28(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sb    	0(r14),r3	    # movqi
.L9593:
	l.lbz   	r4,22(r2)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L9594
	l.nop			# nop delay slot
.L9589:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9594:
	l.lwz   	r3,0(r16)	 # SI load
	l.lwz   	r4,48(r2)	 # SI load
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L9591:
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9592
	l.nop			# nop delay slot
	l.jal   	sqlite3BtreeCloseCursor
	l.nop			# nop delay slot
	l.j     	.L9595	# delay slot filled
	l.lwz   	r5,76(r2)	 # SI load
.LFE1414:
	.size	sqlite3VdbeFreeCursor.clone.166, .-sqlite3VdbeFreeCursor.clone.166
	.align	4
.proc	closeAllCursorsExceptActiveVtabs
	.type	closeAllCursorsExceptActiveVtabs, @function
closeAllCursorsExceptActiveVtabs:
.LFB576:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3482:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3483:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3484:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3485:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3486:
	l.ori   	r16,r3,0	 # move reg to reg
	l.lwz   	r3,48(r3)	 # SI load
	l.sfeqi	r3,0
.LCFI3487:
	l.bf	.L9596	# delay slot filled
	l.addi  	r1,r1,-20
	l.lwz   	r6,44(r16)	 # SI load
	l.sflesi	r6,0
	l.bf	.L9596	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r18,r16,128
	l.j     	.L9600	# delay slot filled
	l.ori   	r14,r2,0	 # move reg to reg
.L9601:
	l.lwz   	r7,76(r5)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L9599
	l.nop			# nop delay slot
.L9598:
	l.sfles 	r6,r14
	l.bf	.L9596	# delay slot filled
	l.addi  	r2,r2,4
.L9600:
	l.add   	r5,r3,r2
	l.lwz   	r5,0(r5)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L9598	# delay slot filled
	l.addi  	r14,r14,1
	l.lbz   	r7,128(r16)	 # zero_extendqisi2
	l.sfeqi	r7,0
	l.bnf	.L9601
	l.nop			# nop delay slot
.L9599:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeFreeCursor.clone.166	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r3,48(r16)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r5,r3,r2
	l.lwz   	r6,44(r16)	 # SI load
	l.sw    	0(r5),r4	 # SI store
	l.sfles 	r6,r14
	l.bnf	.L9600	# delay slot filled
	l.addi  	r2,r2,4
.L9596:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE576:
	.size	closeAllCursorsExceptActiveVtabs, .-closeAllCursorsExceptActiveVtabs
	.align	4
.proc	allocateCursor
	.type	allocateCursor, @function
allocateCursor:
.LFB686:
	l.sw    	-40(r1),r2	 # SI store
.LCFI3488:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,72(r3)	 # SI load
	l.sw    	-20(r1),r22	 # SI store
.LCFI3489:
	l.sub   	r3,r3,r4
	l.ori   	r22,r7,0	 # move reg to reg
	l.slli  	r7,r3,4
	l.slli  	r3,r3,8
	l.sw    	-28(r1),r18	 # SI store
.LCFI3490:
	l.sw    	-24(r1),r20	 # SI store
.LCFI3491:
	l.sw    	-8(r1),r28	 # SI store
.LCFI3492:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3493:
	l.sw    	-36(r1),r14	 # SI store
.LCFI3494:
	l.sw    	-32(r1),r16	 # SI store
.LCFI3495:
	l.sw    	-16(r1),r24	 # SI store
.LCFI3496:
	l.sw    	-12(r1),r26	 # SI store
.LCFI3497:
	l.lwz   	r18,76(r2)	 # SI load
	l.sub   	r3,r3,r7
	l.addi  	r1,r1,-40
.LCFI3498:
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r28,r6,0	 # move reg to reg
	l.addi  	r8,r0,108	 # move immediate I
	l.sfeqi	r22,0
	l.bf	.L9603	# delay slot filled
	l.add   	r18,r18,r3
	l.addi  	r8,r0,320	 # move immediate I
.L9603:
	l.slli  	r16,r4,2
	l.lwz   	r3,48(r2)	 # SI load
	l.slli  	r26,r20,3
	l.add   	r3,r3,r16
	l.lwz   	r5,0(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L9604	# delay slot filled
	l.add   	r24,r8,r26
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeFreeCursor.clone.166	# delay slot filled
	l.addi  	r4,r2,128
	l.lwz   	r3,48(r2)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r3,r3,r16
	l.sw    	0(r3),r4	 # SI store
.L9604:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r14,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfne 	r11,r14
	l.bnf	.L9609
	l.nop			# nop delay slot
.L9605:
	l.addi	r1,r1,40
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L9609:
	l.lwz   	r4,48(r2)	 # SI load
	l.lwz   	r14,20(r18)	 # SI load
	l.add   	r16,r4,r16
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	0(r16),r14	 # SI store
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.sw    	4(r14),r28	 # SI store
	l.sfeqi	r20,0
	l.bnf	.L9610	# delay slot filled
	l.sw    	64(r14),r20	 # SI store
.L9606:
	l.sfeqi	r22,0
	l.bf	.L9605	# delay slot filled
	l.addi  	r26,r26,108
	l.lwz   	r2,20(r18)	 # SI load
	l.add   	r26,r2,r26
	l.j     	.L9605	# delay slot filled
	l.sw    	0(r14),r26	 # SI store
.L9610:
	l.lwz   	r2,20(r18)	 # SI load
	l.addi  	r2,r2,108
	l.j     	.L9606	# delay slot filled
	l.sw    	96(r14),r2	 # SI store
.LFE686:
	.size	allocateCursor, .-allocateCursor
	.section	.rodata.str1.1
.LC250:
	.string	"temporary storage cannot be changed from within a transaction"
	.section .text
	.align	4
.proc	invalidateTempStorage
	.type	invalidateTempStorage, @function
invalidateTempStorage:
.LFB1004:
	l.sw    	-12(r1),r2	 # SI store
.LCFI3499:
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI3500:
	l.lwz   	r4,8(r2)	 # SI load
	l.sw    	-8(r1),r14	 # SI store
.LCFI3501:
	l.lwz   	r11,28(r4)	 # SI load
	l.sfeqi	r11,0
.LCFI3502:
	l.bf	.L9612	# delay slot filled
	l.addi  	r1,r1,-12
	l.lbz   	r4,28(r2)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L9613
	l.nop			# nop delay slot
	l.lbz   	r14,8(r11)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L9614
	l.nop			# nop delay slot
.L9613:
	l.movhi  	r4,hi(.LC250)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC250)
	l.addi  	r11,r0,1	 # move immediate I
.L9612:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9614:
	l.jal   	sqlite3BtreeClose	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r4,8(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	28(r4),r14	 # SI store
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1004:
	.size	invalidateTempStorage, .-invalidateTempStorage
	.section	.rodata.str1.1
.LC251:
	.string	"cannot detach database %s"
.LC252:
	.string	"cannot DETACH database within transaction"
.LC253:
	.string	"database %s is locked"
.LC254:
	.string	"no such database: %s"
	.section .text
	.align	4
.proc	detachFunc
	.type	detachFunc, @function
detachFunc:
.LFB830:
	l.sw    	-20(r1),r18	 # SI store
.LCFI3503:
	l.sw    	-12(r1),r22	 # SI store
.LCFI3504:
	l.sw    	-8(r1),r24	 # SI store
.LCFI3505:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3506:
	l.sw    	-32(r1),r2	 # SI store
.LCFI3507:
	l.sw    	-28(r1),r14	 # SI store
.LCFI3508:
	l.sw    	-24(r1),r16	 # SI store
.LCFI3509:
	l.sw    	-16(r1),r20	 # SI store
.LCFI3510:
	l.ori   	r24,r3,0	 # move reg to reg
	l.addi  	r1,r1,-164
.LCFI3511:
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r3,0(r5)	 # SI load
	l.lwz   	r22,24(r24)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L9630	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L9617:
	l.lwz   	r20,4(r22)	 # SI load
	l.sflesi	r20,0
	l.bf	.L9618	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r2,8(r22)	 # SI load
.L9621:
	l.lwz   	r16,4(r2)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L9619	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L9620	# delay slot filled
	l.sfgtsi	r14,1
.L9619:
	l.addi  	r14,r14,1
	l.sflts 	r14,r20
	l.bf	.L9621	# delay slot filled
	l.addi  	r2,r2,24
.L9618:
	l.addi  	r2,r1,4
	l.movhi  	r5,hi(.LC254)
	l.addi  	r3,r0,128	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC254)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
.L9623:
	l.ori   	r3,r24,0	 # move reg to reg
.L9633:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3_result_error	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi	r1,r1,164
.L9634:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L9620:
	l.bnf	.L9631	# delay slot filled
	l.movhi  	r5,hi(.LC251)
	l.lbz   	r3,28(r22)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L9632	# delay slot filled
	l.movhi  	r5,hi(.LC252)
	l.lbz   	r3,8(r16)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L9625
	l.nop			# nop delay slot
	l.lwz   	r14,16(r16)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L9626
	l.nop			# nop delay slot
.L9625:
	l.addi  	r2,r1,4
	l.movhi  	r5,hi(.LC253)
	l.addi  	r3,r0,128	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC253)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.j     	.L9633	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L9632:
	l.addi  	r2,r1,4
	l.addi  	r3,r0,128	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r5,lo(.LC252)
	l.j     	.L9633	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L9630:
	l.movhi  	r18,hi(.LC15)
	l.j     	.L9617	# delay slot filled
	l.ori   	r18,r18,lo(.LC15)
.L9631:
	l.addi  	r2,r1,4
	l.addi  	r3,r0,128	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC251)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.j     	.L9633	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L9626:
	l.jal   	sqlite3BtreeClose	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.sw    	4(r2),r14	 # SI store
	l.sw    	20(r2),r14	 # SI store
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L9634	# delay slot filled
	l.addi	r1,r1,164
.LFE830:
	.size	detachFunc, .-detachFunc
	.align	4
.proc	sqlite3RollbackAll
	.type	sqlite3RollbackAll, @function
sqlite3RollbackAll:
.LFB1202:
	l.sw    	-8(r1),r20	 # SI store
.LCFI3512:
	l.movhi  	r20,hi(sqlite3Hooks)
	l.sw    	-24(r1),r2	 # SI store
.LCFI3513:
	l.ori   	r20,r20,lo(sqlite3Hooks)
	l.sw    	-4(r1),r9	 # SI store
.LCFI3514:
	l.sw    	-20(r1),r14	 # SI store
.LCFI3515:
	l.sw    	-16(r1),r16	 # SI store
.LCFI3516:
	l.sw    	-12(r1),r18	 # SI store
.LCFI3517:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,0(r20)	 # SI load
	l.sfeqi	r3,0
.LCFI3518:
	l.bf	.L9636	# delay slot filled
	l.addi  	r1,r1,-24
	l.jalr  	r3
	l.nop			# nop delay slot
.L9636:
	l.lwz   	r5,4(r2)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
	l.sfles 	r5,r18
	l.bf	.L9637	# delay slot filled
	l.ori   	r14,r18,0	 # move reg to reg
	l.j     	.L9640	# delay slot filled
	l.ori   	r16,r18,0	 # move reg to reg
.L9639:
	l.jal   	sqlite3BtreeRollback
	l.nop			# nop delay slot
	l.lwz   	r3,8(r2)	 # SI load
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.add   	r3,r3,r14
	l.sb    	8(r3),r4	    # movqi
	l.lwz   	r5,4(r2)	 # SI load
.L9638:
	l.sfgts 	r5,r16
	l.bnf	.L9637	# delay slot filled
	l.addi  	r14,r14,24
.L9640:
	l.lwz   	r3,8(r2)	 # SI load
	l.addi  	r16,r16,1
	l.add   	r3,r3,r14
	l.lwz   	r4,4(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L9638	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.lbz   	r4,8(r4)	 # zero_extendqisi2
	l.sfnei	r4,2
	l.bf	.L9639
	l.nop			# nop delay slot
	l.j     	.L9639	# delay slot filled
	l.addi  	r18,r0,1	 # move immediate I
.L9637:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	callFinaliser	# delay slot filled
	l.addi  	r4,r0,68	 # move immediate I
	l.lwz   	r3,4(r20)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9641
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
.L9641:
	l.lwz   	r3,12(r2)	 # SI load
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bf	.L9642
	l.nop			# nop delay slot
	l.lwz   	r3,140(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9643	# delay slot filled
	l.addi  	r4,r0,1	 # movqi: move immediate
.L9651:
	l.sb    	126(r3),r4	    # movqi
	l.lwz   	r3,8(r3)	 # SI load
	l.sfnei	r3,0
	l.bf	.L9651
	l.nop			# nop delay slot
.L9643:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L9642:
	l.lwz   	r4,180(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L9635	# delay slot filled
	l.sfnei	r18,0
	l.bf	.L9646
	l.nop			# nop delay slot
	l.lbz   	r3,28(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L9635
	l.nop			# nop delay slot
.L9646:
	l.lwz   	r3,176(r2)	 # SI load
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr	r4	# delay slot filled	# sibcall Rsc
	l.lwz   	r20,-8(r1)	 # SI load
.L9635:
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.LFE1202:
	.size	sqlite3RollbackAll, .-sqlite3RollbackAll
	.align	4
.proc	sqlite3_backup_finish
	.global sqlite3_backup_finish
	.type	sqlite3_backup_finish, @function
sqlite3_backup_finish:
.LFB504:
	l.sw    	-12(r1),r2	 # SI store
.LCFI3519:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,24(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI3520:
	l.lwz   	r4,4(r3)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.sw    	-8(r1),r14	 # SI store
.LCFI3521:
	l.lwz   	r6,0(r2)	 # SI load
	l.sw    	4(r4),r5	 # SI store
	l.sfeqi	r6,0
.LCFI3522:
	l.bf	.L9653	# delay slot filled
	l.addi  	r1,r1,-12
	l.lwz   	r5,0(r4)	 # SI load
	l.lwz   	r4,164(r5)	 # SI load
	l.sfne 	r2,r4
	l.bnf	.L9655	# delay slot filled
	l.addi  	r5,r5,164
.L9660:
	l.addi  	r5,r4,40
	l.lwz   	r4,40(r4)	 # SI load
	l.sfne 	r2,r4
	l.bf	.L9660
	l.nop			# nop delay slot
.L9655:
	l.lwz   	r4,16(r3)	 # SI load
	l.lwz   	r6,40(r2)	 # SI load
	l.addi  	r4,r4,-1
	l.sw    	0(r5),r6	 # SI store
	l.sw    	16(r3),r4	 # SI store
.L9653:
	l.jal   	sqlite3BtreeRollback	# delay slot filled
	l.lwz   	r3,4(r2)	 # SI load
	l.lwz   	r14,28(r2)	 # SI load
	l.sfeqi	r14,101
	l.bf	.L9663
	l.nop			# nop delay slot
.L9657:
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9658
	l.nop			# nop delay slot
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L9658:
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L9663:
	l.j     	.L9657	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.LFE504:
	.size	sqlite3_backup_finish, .-sqlite3_backup_finish
	.align	4
.proc	sqlite3BtreePutData
	.type	sqlite3BtreePutData, @function
sqlite3BtreePutData:
.LFB496:
	l.sw    	-24(r1),r2	 # SI store
.LCFI3523:
	l.sw    	-16(r1),r16	 # SI store
.LCFI3524:
	l.sw    	-12(r1),r18	 # SI store
.LCFI3525:
	l.sw    	-8(r1),r20	 # SI store
.LCFI3526:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3527:
	l.sw    	-20(r1),r14	 # SI store
.LCFI3528:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r14,63(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-24
.LCFI3529:
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfleui	r14,1
	l.bf	.L9665	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
	l.jal   	sqlite3BtreeRestoreCursorPosition
	l.nop			# nop delay slot
	l.lbz   	r14,63(r2)	 # zero_extendqisi2
.L9665:
	l.sfnei	r14,1
	l.bnf	.L9671	# delay slot filled
	l.addi  	r3,r0,4	 # move immediate I
.L9666:
	l.addi	r1,r1,24
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L9671:
	l.lbz   	r4,60(r2)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L9666	# delay slot filled
	l.addi  	r3,r0,8	 # move immediate I
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r5,20(r2)	 # SI load
	l.lwz   	r3,0(r4)	 # SI load
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r4,4(r4)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	checkForReadConflicts.clone.57	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L9666	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lbz   	r3,63(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L9669
	l.nop			# nop delay slot
	l.lhs   	r4,88(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r4,r4,23
	l.slli  	r4,r4,2
	l.add   	r4,r2,r4
	l.lwz   	r4,0(r4)	 # SI load
	l.lbz   	r4,2(r4)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L9666	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi	r1,r1,24
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.ori   	r8,r14,0	 # move reg to reg
	l.ori   	r7,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	accessPayload	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L9669:
	l.j     	.L9666	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.LFE496:
	.size	sqlite3BtreePutData, .-sqlite3BtreePutData
	.align	4
.proc	sqlite3BtreeData
	.type	sqlite3BtreeData, @function
sqlite3BtreeData:
.LFB438:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3530:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3531:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3532:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3533:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3534:
	l.ori   	r16,r4,0	 # move reg to reg
	l.lbz   	r4,63(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-20
.LCFI3535:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r14,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L9675	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
	l.sfleui	r4,1
	l.bf	.L9674
	l.nop			# nop delay slot
	l.jal   	sqlite3BtreeRestoreCursorPosition
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L9674
	l.nop			# nop delay slot
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L9675:
	l.addi	r1,r1,20
	l.addi  	r11,r0,4	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L9674:
	l.addi	r1,r1,20
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	accessPayload	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.LFE438:
	.size	sqlite3BtreeData, .-sqlite3BtreeData
	.align	4
.proc	sqlite3VdbeMemFromBtree
	.type	sqlite3VdbeMemFromBtree, @function
sqlite3VdbeMemFromBtree:
.LFB537:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3536:
	l.sw    	-32(r1),r14	 # SI store
.LCFI3537:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3538:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3539:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3540:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3541:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3542:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3543:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3544:
	l.ori   	r20,r6,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI3545:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfeqi	r6,0
	l.bf	.L9677	# delay slot filled
	l.ori   	r2,r7,0	 # move reg to reg
	l.lbz   	r16,63(r3)	 # zero_extendqisi2
	l.sfnei	r16,1
	l.bnf	.L9695	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
	l.add   	r4,r18,r22
	l.ori   	r3,r24,0	 # move reg to reg
	l.sfgts 	r4,r3
	l.bnf	.L9696
	l.nop			# nop delay slot
.L9686:
	l.ori   	r3,r2,0	 # move reg to reg
.L9702:
	l.addi  	r4,r18,2
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L9688	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi  	r4,r0,1552	 # movhi: move immediate
	l.addi  	r3,r0,4	 # movqi: move immediate
	l.sh    	28(r2),r4	 # movhi
	l.sb    	31(r2),r11	    # movqi
	l.sfeqi	r20,0
	l.bnf	.L9697	# delay slot filled
	l.sb    	30(r2),r3	    # movqi
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3BtreeData	# delay slot filled
	l.lwz   	r6,20(r2)	 # SI load
	l.ori   	r16,r11,0	 # move reg to reg
.L9690:
	l.lwz   	r3,20(r2)	 # SI load
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.add   	r3,r3,r18
	l.sfeqi	r16,0
	l.sb    	0(r3),r4	    # movqi
	l.lwz   	r3,20(r2)	 # SI load
	l.add   	r3,r3,r18
	l.bf	.L9688	# delay slot filled
	l.sb    	1(r3),r4	    # movqi
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L9701	# delay slot filled
	l.sw    	24(r2),r18	 # SI store
.L9677:
	l.lbz   	r16,63(r3)	 # zero_extendqisi2
	l.sfnei	r16,1
	l.bnf	.L9698	# delay slot filled
	l.ori   	r24,r6,0	 # move reg to reg
	l.ori   	r3,r6,0	 # move reg to reg
.L9682:
	l.add   	r4,r18,r22
	l.sfgts 	r4,r3
	l.bf	.L9702	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L9696:
	l.lhz   	r3,28(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,1024
	l.sfeqi	r3,0
	l.bf	.L9703	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,32(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9686	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L9703:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.add   	r22,r24,r22
	l.addi  	r3,r0,4112	 # movhi: move immediate
	l.addi  	r16,r0,0	 # move immediate I
	l.sh    	28(r2),r3	 # movhi
	l.sw    	20(r2),r22	 # SI store
.L9688:
	l.sw    	24(r2),r18	 # SI store
.L9701:
	l.addi	r1,r1,36
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L9695:
	l.lhs   	r3,88(r3)	 # extendhisi2_no_sext_mem
	l.addi  	r4,r3,23
	l.lhz   	r5,58(r14)	 # zero_extendqisi2
	l.slli  	r4,r4,2
	l.sfnei	r5,0
	l.add   	r4,r14,r4
	l.bnf	.L9699	# delay slot filled
	l.lwz   	r26,0(r4)	 # SI load
.L9679:
	l.lhz   	r5,52(r14)	 # zero_extendqisi2
	l.lbz   	r4,2(r26)	 # zero_extendqisi2
	l.lwz   	r24,32(r14)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sfne 	r4,r3
	l.bf	.L9682	# delay slot filled
	l.add   	r24,r24,r5
	l.lhz   	r3,54(r14)	 # zero_extendqisi2
	l.lwz   	r4,40(r14)	 # SI load
	l.sfleu 	r3,r4
	l.bf	.L9682
	l.nop			# nop delay slot
	l.j     	.L9682	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
.L9698:
	l.lhs   	r3,88(r3)	 # extendhisi2_no_sext_mem
	l.addi  	r4,r3,23
	l.lhz   	r5,58(r14)	 # zero_extendqisi2
	l.slli  	r4,r4,2
	l.sfnei	r5,0
	l.add   	r4,r14,r4
	l.bnf	.L9700	# delay slot filled
	l.lwz   	r26,0(r4)	 # SI load
.L9684:
	l.lhz   	r5,52(r14)	 # zero_extendqisi2
	l.lbz   	r4,2(r26)	 # zero_extendqisi2
	l.lwz   	r24,32(r14)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sfne 	r4,r3
	l.bf	.L9685	# delay slot filled
	l.add   	r24,r24,r5
	l.lwz   	r3,40(r14)	 # SI load
.L9685:
	l.lhz   	r4,54(r14)	 # zero_extendqisi2
	l.add   	r24,r24,r3
	l.j     	.L9682	# delay slot filled
	l.sub   	r3,r4,r3
.L9697:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3BtreeKey	# delay slot filled
	l.lwz   	r6,20(r2)	 # SI load
	l.j     	.L9690	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L9699:
	l.addi  	r4,r3,86
	l.addi  	r5,r14,32
	l.add   	r4,r4,r4
	l.ori   	r3,r26,0	 # move reg to reg
	l.add   	r4,r14,r4
	l.jal   	sqlite3BtreeParseCell	# delay slot filled
	l.lhz   	r4,0(r4)	 # zero_extendqisi2
	l.j     	.L9679	# delay slot filled
	l.sb    	62(r14),r16	    # movqi
.L9700:
	l.addi  	r4,r3,86
	l.addi  	r5,r14,32
	l.add   	r4,r4,r4
	l.ori   	r3,r26,0	 # move reg to reg
	l.add   	r4,r14,r4
	l.jal   	sqlite3BtreeParseCell	# delay slot filled
	l.lhz   	r4,0(r4)	 # zero_extendqisi2
	l.j     	.L9684	# delay slot filled
	l.sb    	62(r14),r16	    # movqi
.LFE537:
	.size	sqlite3VdbeMemFromBtree, .-sqlite3VdbeMemFromBtree
	.align	4
.proc	allocateBtreePage
	.type	allocateBtreePage, @function
allocateBtreePage:
.LFB455:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3546:
	l.lwz   	r26,12(r3)	 # SI load
	l.sw    	-32(r1),r18	 # SI store
.LCFI3547:
	l.ori   	r18,r3,0	 # move reg to reg
	l.lwz   	r3,64(r26)	 # SI load
	l.sw    	-44(r1),r2	 # SI store
.LCFI3548:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3549:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3550:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3551:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3552:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3553:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3554:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3555:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3556:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r1,r1,-72
.LCFI3557:
	l.addi  	r3,r3,36
	l.sw    	12(r1),r4	 # SI store
	l.sw    	16(r1),r5	 # SI store
	l.ori   	r22,r6,0	 # move reg to reg
	l.ori   	r24,r7,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sw    	24(r1),r2	 # SI store
	l.sfles 	r11,r2
	l.bf	.L9705	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeq 	r24,r2
	l.bnf	.L9753
	l.nop			# nop delay slot
.L9706:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r26)	 # SI load
	l.sfnei	r11,0
	l.bf	.L9707	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r11,r14,-1
	l.lwz   	r2,64(r26)	 # SI load
	l.srli  	r5,r11,24
	l.srli  	r4,r11,16
	l.srli  	r3,r11,8
	l.addi  	r2,r2,36
	l.sb    	0(r2),r5	    # movqi
	l.sb    	1(r2),r4	    # movqi
	l.sb    	2(r2),r3	    # movqi
	l.sb    	3(r2),r11	    # movqi
	l.lwz   	r20,24(r1)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L9708
	l.nop			# nop delay slot
.L9762:
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.lwz   	r3,64(r20)	 # SI load
	l.ori   	r28,r11,0	 # move reg to reg
.L9709:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.addi  	r5,r1,24
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L9754	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r16,24(r1)	 # SI load
	l.lwz   	r30,64(r16)	 # SI load
	l.addi  	r5,r30,4
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.sub   	r2,r0,r11
	l.addi  	r3,r24,-1
	l.or    	r2,r2,r11
	l.srli  	r3,r3,31
	l.xori  	r2,r2,0xffff
	l.ori   	r14,r11,0	 # move reg to reg
	l.srli  	r2,r2,31
	l.sw    	8(r1),r3	 # SI store
	l.sfeqi	r2,0
	l.bnf	.L9755	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
.L9712:
	l.lhz   	r2,22(r18)	 # zero_extendqisi2
	l.srli  	r2,r2,2
	l.addi  	r2,r2,-1
	l.sfges 	r14,r2
	l.bf	.L9744	# delay slot filled
	l.xor   	r28,r22,r28
	l.sub   	r2,r0,r28
	l.or    	r28,r2,r28
	l.sfltsi	r28,0
	l.bf	.L9715	# delay slot filled
	l.sfeqi	r24,0
	l.bf	.L9715	# delay slot filled
	l.lwz   	r2,12(r1)	 # SI load
	l.lwz   	r3,68(r16)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.sw    	0(r2),r16	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L9751	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,4(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9717	# delay slot filled
	l.sfnei	r20,0
	l.bnf	.L9756	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
	l.lwz   	r3,64(r20)	 # SI load
	l.lwz   	r4,64(r4)	 # SI load
	l.lbz   	r6,0(r4)	 # zero_extendqisi2
	l.sb    	0(r3),r6	    # movqi
	l.lbz   	r5,1(r4)	 # zero_extendqisi2
	l.sb    	1(r3),r5	    # movqi
	l.lbz   	r6,2(r4)	 # zero_extendqisi2
	l.sb    	2(r3),r6	    # movqi
	l.lbz   	r4,3(r4)	 # zero_extendqisi2
	l.sb    	3(r3),r4	    # movqi
.L9719:
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	24(r1),r6	 # SI store
.L9714:
.L9734:
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.sfnei	r2,0
	l.bf	.L9707	# delay slot filled
	l.lwz   	r5,12(r1)	 # SI load
.L9769:
	l.lwz   	r3,0(r5)	 # SI load
	l.lwz   	r2,68(r3)	 # SI load
	l.lhs   	r2,22(r2)	 # extendhisi2_no_sext_mem
	l.sflesi	r2,1
	l.bf	.L9739	# delay slot filled
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.jal   	releasePage	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
.L9707:
	l.addi	r1,r1,72
.L9770:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9715:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r16)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L9751	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r22,0
	l.bnf	.L9757	# delay slot filled
	l.addi  	r16,r30,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sflesi	r14,1
	l.bf	.L9726	# delay slot filled
	l.sub   	r28,r11,r22
	l.addi  	r24,r30,12
	l.srai  	r3,r28,31
	l.addi  	r16,r0,1	 # move immediate I
	l.xor   	r28,r3,r28
	l.sub   	r28,r28,r3
	l.ori   	r3,r24,0	 # move reg to reg
.L9771:
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r24,r24,4
	l.sub   	r7,r11,r22
	l.srai  	r6,r7,31
	l.xor   	r7,r6,r7
	l.sub   	r7,r7,r6
	l.sflts 	r7,r28
	l.bnf	.L9727
	l.nop			# nop delay slot
	l.ori   	r2,r16,0	 # move reg to reg
	l.ori   	r28,r7,0	 # move reg to reg
.L9727:
	l.addi  	r16,r16,1
	l.sfne 	r14,r16
	l.bf	.L9771	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r16,r2,2
	l.slli  	r16,r16,2
	l.add   	r16,r30,r16
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.xor   	r3,r22,r11
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bnf	.L9772	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
.L9749:
	l.lwz   	r4,16(r1)	 # SI load
	l.lwz   	r3,0(r18)	 # SI load
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.sw    	0(r4),r11	 # SI store
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.sfgeu 	r11,r3
	l.bnf	.L9759	# delay slot filled
	l.addi  	r3,r14,-1
	l.sfles 	r3,r2
	l.bnf	.L9760
	l.nop			# nop delay slot
.L9732:
	l.srli  	r4,r3,16
	l.srli  	r2,r3,8
	l.srli  	r5,r3,24
	l.lwz   	r6,0(r1)	 # SI load
	l.sb    	0(r6),r5	    # movqi
	l.sb    	1(r6),r4	    # movqi
	l.sb    	2(r6),r2	    # movqi
	l.sb    	3(r6),r3	    # movqi
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r3,52(r18)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9733	# delay slot filled
	l.lwz   	r2,0(r4)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.sfgtu 	r2,r4
	l.bnf	.L9761	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L9733:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.lwz   	r5,12(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L9714	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r5,12(r1)	 # SI load
	l.lwz   	r2,0(r5)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L9714	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r6,12(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,0(r6)	 # SI load
	l.j     	.L9714
	l.nop			# nop delay slot
.L9755:
	l.sfeqi	r3,0
	l.bf	.L9712
	l.nop			# nop delay slot
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r16)	 # SI load
	l.sfnei	r11,0
	l.bf	.L9751	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.lwz   	r3,64(r26)	 # SI load
	l.lwz   	r4,64(r4)	 # SI load
	l.sw    	0(r6),r28	 # SI store
	l.addi  	r3,r3,32
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.sb    	0(r3),r5	    # movqi
	l.lbz   	r6,1(r4)	 # zero_extendqisi2
	l.sb    	1(r3),r6	    # movqi
	l.lbz   	r5,2(r4)	 # zero_extendqisi2
	l.sb    	2(r3),r5	    # movqi
	l.lbz   	r4,3(r4)	 # zero_extendqisi2
	l.sb    	3(r3),r4	    # movqi
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r6,12(r1)	 # SI load
	l.sw    	24(r1),r11	 # SI store
	l.j     	.L9714	# delay slot filled
	l.sw    	0(r6),r3	 # SI store
.L9757:
	l.ori   	r2,r22,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L9726:
	l.xor   	r3,r22,r11
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L9749	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
.L9772:
	l.sfeqi	r3,0
	l.bnf	.L9749	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.addi  	r24,r0,1	 # move immediate I
	l.lwz   	r20,24(r1)	 # SI load
	l.sfeqi	r20,0
	l.bnf	.L9762
	l.nop			# nop delay slot
.L9708:
	l.lwz   	r3,64(r26)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r3,r3,32
	l.j     	.L9709	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
.L9753:
	l.lwz   	r3,0(r18)	 # SI load
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.ori   	r24,r2,0	 # move reg to reg
	l.sfltu 	r11,r22
	l.bf	.L9706	# delay slot filled
	l.ori   	r8,r2,0	 # move reg to reg
	l.lhz   	r4,20(r18)	 # zero_extendqisi2
	l.lhz   	r5,22(r18)	 # zero_extendqisi2
	l.lwz   	r3,0(r18)	 # SI load
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	ptrmapGet.clone.156	# delay slot filled
	l.addi  	r7,r1,20
	l.sfne 	r11,r24
	l.bf	.L9707	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbz   	r24,20(r1)	 # zero_extendqisi2
	l.xori  	r24,r24,2
	l.lwz   	r3,16(r1)	 # SI load
	l.addi  	r24,r24,-1
	l.sw    	0(r3),r22	 # SI store
	l.j     	.L9706	# delay slot filled
	l.srli  	r24,r24,31
.L9717:
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r3,64(r3)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r3,r3,8
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r1,20
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L9752	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r3)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L9763	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r4,64(r4)	 # SI load
	l.lwz   	r3,64(r3)	 # SI load
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.sb    	0(r3),r5	    # movqi
	l.addi  	r14,r14,-1
	l.lbz   	r6,1(r4)	 # zero_extendqisi2
	l.sb    	1(r3),r6	    # movqi
	l.srli  	r8,r14,24
	l.lbz   	r5,2(r4)	 # zero_extendqisi2
	l.sb    	2(r3),r5	    # movqi
	l.srli  	r7,r14,16
	l.lbz   	r4,3(r4)	 # zero_extendqisi2
	l.sb    	3(r3),r4	    # movqi
	l.srli  	r6,r14,8
	l.lwz   	r3,20(r1)	 # SI load
	l.slli  	r5,r14,2
	l.lwz   	r3,64(r3)	 # SI load
	l.addi  	r3,r3,4
	l.sb    	0(r3),r8	    # movqi
	l.sb    	1(r3),r7	    # movqi
	l.sb    	2(r3),r6	    # movqi
	l.sb    	3(r3),r14	    # movqi
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.lwz   	r3,64(r3)	 # SI load
	l.lwz   	r4,64(r4)	 # SI load
	l.addi  	r3,r3,8
	l.jal   	memcpy	# delay slot filled
	l.addi  	r4,r4,12
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.sfnei	r20,0
	l.bnf	.L9764	# delay slot filled
	l.srli  	r6,r16,24
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r20)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L9752	# delay slot filled
	l.srli  	r6,r16,24
	l.srli  	r5,r16,16
	l.srli  	r4,r16,8
	l.lwz   	r3,64(r20)	 # SI load
	l.sb    	0(r3),r6	    # movqi
	l.sb    	1(r3),r5	    # movqi
	l.sb    	2(r3),r4	    # movqi
	l.j     	.L9719	# delay slot filled
	l.sb    	3(r3),r16	    # movqi
.L9739:
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L9707	# delay slot filled
	l.sb    	0(r3),r6	    # movqi
.L9764:
	l.lwz   	r3,64(r26)	 # SI load
	l.srli  	r5,r16,16
	l.srli  	r4,r16,8
	l.addi  	r3,r3,32
	l.sb    	0(r3),r6	    # movqi
	l.sb    	1(r3),r5	    # movqi
	l.sb    	2(r3),r4	    # movqi
	l.j     	.L9719	# delay slot filled
	l.sb    	3(r3),r16	    # movqi
.L9760:
	l.addi  	r2,r14,1
	l.slli  	r2,r2,2
	l.add   	r30,r30,r2
	l.lbz   	r6,0(r30)	 # zero_extendqisi2
	l.sb    	0(r16),r6	    # movqi
	l.lbz   	r2,1(r30)	 # zero_extendqisi2
	l.sb    	1(r16),r2	    # movqi
	l.lbz   	r4,2(r30)	 # zero_extendqisi2
	l.sb    	2(r16),r4	    # movqi
	l.lbz   	r30,3(r30)	 # zero_extendqisi2
	l.j     	.L9732	# delay slot filled
	l.sb    	3(r16),r30	    # movqi
.L9761:
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.sub   	r3,r0,r11
	l.or    	r11,r3,r11
	l.xori  	r6,r11,0xffff
	l.j     	.L9733	# delay slot filled
	l.srli  	r6,r6,31
.L9705:
	l.lwz   	r3,0(r18)	 # SI load
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.movhi  	r20,hi(sqlite3PendingByte)
	l.lwz   	r3,16(r1)	 # SI load
	l.addi  	r2,r11,1
	l.lhz   	r4,20(r18)	 # zero_extendqisi2
	l.ori   	r20,r20,lo(sqlite3PendingByte)
	l.sw    	0(r3),r2	 # SI store
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r20)	 # SI load
	l.addi  	r14,r11,1
	l.sfne 	r2,r14
	l.bnf	.L9765	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
.L9735:
	l.lbz   	r3,18(r18)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L9773	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lhz   	r3,22(r18)	 # zero_extendqisi2
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.andi  	r11,r11,0xffff	 # zero_extendqisi2
	l.addi  	r3,r2,-2
	l.addi  	r16,r11,1
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.mul   	r11,r11,r16
	l.addi  	r3,r11,2
	l.sfne 	r14,r3
	l.bnf	.L9766
	l.nop			# nop delay slot
.L9737:
	l.sfne 	r3,r2
	l.bnf	.L9767	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L9736:
	l.ori   	r4,r2,0	 # move reg to reg
.L9773:
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r5,12(r1)	 # SI load
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L9707	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r2)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L9768	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L9769	# delay slot filled
	l.lwz   	r5,12(r1)	 # SI load
.L9756:
	l.lwz   	r3,64(r26)	 # SI load
	l.lwz   	r4,64(r4)	 # SI load
	l.addi  	r3,r3,32
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.sb    	0(r3),r5	    # movqi
	l.lbz   	r6,1(r4)	 # zero_extendqisi2
	l.sb    	1(r3),r6	    # movqi
	l.lbz   	r5,2(r4)	 # zero_extendqisi2
	l.sb    	2(r3),r5	    # movqi
	l.lbz   	r4,3(r4)	 # zero_extendqisi2
	l.j     	.L9719	# delay slot filled
	l.sb    	3(r3),r4	    # movqi
.L9768:
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r20,r0,0	 # move immediate I
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,0(r4)	 # SI load
.L9751:
	l.lwz   	r16,24(r1)	 # SI load
.L9711:
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.j     	.L9770	# delay slot filled
	l.addi	r1,r1,72
.L9754:
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	24(r1),r4	 # SI store
	l.j     	.L9711	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
.L9765:
	l.addi  	r2,r11,2
	l.j     	.L9735	# delay slot filled
	l.sw    	0(r4),r2	 # SI store
.L9744:
	l.j     	.L9711	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
.L9766:
	l.j     	.L9737	# delay slot filled
	l.addi  	r3,r11,3
.L9767:
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r5,r1,20
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.sw    	20(r1),r6	 # SI store
	l.sfnei	r11,0
	l.bf	.L9707	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r2,20(r1)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r2)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r2,0
	l.bf	.L9707	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.lhz   	r4,20(r18)	 # zero_extendqisi2
	l.lwz   	r2,0(r5)	 # SI load
	l.addi  	r2,r2,1
	l.sw    	0(r5),r2	 # SI store
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r20)	 # SI load
	l.addi  	r3,r11,1
	l.sfne 	r2,r3
	l.bf	.L9773	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r2,r11,2
	l.lwz   	r6,16(r1)	 # SI load
	l.j     	.L9736	# delay slot filled
	l.sw    	0(r6),r2	 # SI store
.L9752:
	l.lwz   	r16,24(r1)	 # SI load
	l.j     	.L9711	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L9763:
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L9711	# delay slot filled
	l.lwz   	r16,24(r1)	 # SI load
.L9759:
	l.lwz   	r16,24(r1)	 # SI load
	l.j     	.L9711	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
.LFE455:
	.size	allocateBtreePage, .-allocateBtreePage
	.align	4
.proc	ptrmapPut
	.type	ptrmapPut, @function
ptrmapPut:
.LFB370:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3558:
	l.sw    	-32(r1),r14	 # SI store
.LCFI3559:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3560:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3561:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3562:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3563:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3564:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3565:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3566:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-40
.LCFI3567:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r20,r6,0	 # move reg to reg
	l.ori   	r24,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L9775	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
	l.lhz   	r3,22(r3)	 # zero_extendqisi2
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	__udivsi3	# delay slot filled
	l.movhi  	r2,hi(sqlite3PendingByte)
	l.andi  	r18,r11,0xffff	 # zero_extendqisi2
	l.addi  	r3,r14,-2
	l.addi  	r18,r18,1
	l.ori   	r2,r2,lo(sqlite3PendingByte)
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.mul   	r18,r11,r18
	l.lhz   	r4,20(r16)	 # zero_extendqisi2
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r18,r18,2
	l.addi  	r2,r11,1
	l.sfne 	r18,r2
	l.bnf	.L9782	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L9775	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L9784:
	l.sub   	r14,r14,r18
	l.lwz   	r16,0(r1)	 # SI load
	l.slli  	r18,r14,2
	l.lwz   	r22,0(r16)	 # SI load
	l.add   	r14,r18,r14
	l.addi  	r26,r14,-5
	l.add   	r18,r22,r26
	l.lbz   	r3,0(r18)	 # zero_extendqisi2
	l.sfne 	r3,r24
	l.bnf	.L9783	# delay slot filled
	l.addi  	r14,r14,-4
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L9779	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L9781:
	l.lwz   	r16,0(r1)	 # SI load
.L9778:
.L9785:
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L9775:
	l.addi	r1,r1,40
.L9786:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L9783:
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r22,r14
	l.sfeq 	r11,r20
	l.bf	.L9778
	l.nop			# nop delay slot
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L9779	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L9785	# delay slot filled
	l.lwz   	r16,0(r1)	 # SI load
.L9782:
	l.addi  	r18,r11,2
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L9784	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L9786	# delay slot filled
	l.addi	r1,r1,40
.L9779:
	l.addi  	r26,r26,1
	l.srli  	r5,r20,24
	l.srli  	r4,r20,16
	l.srli  	r3,r20,8
	l.add   	r22,r22,r26
	l.sb    	0(r18),r24	    # movqi
	l.sb    	0(r22),r5	    # movqi
	l.sb    	1(r22),r4	    # movqi
	l.sb    	2(r22),r3	    # movqi
	l.j     	.L9781	# delay slot filled
	l.sb    	3(r22),r20	    # movqi
.LFE370:
	.size	ptrmapPut, .-ptrmapPut
	.align	4
.proc	ptrmapPutOvflPtr
	.type	ptrmapPutOvflPtr, @function
ptrmapPutOvflPtr:
.LFB376:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3568:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3569:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3570:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3571:
	l.addi  	r1,r1,-44
.LCFI3572:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3BtreeParseCellPtr	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
	l.lbz   	r5,2(r14)	 # zero_extendqisi2
	l.lwz   	r6,12(r1)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.sfnei	r5,0
	l.bf	.L9788	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
		l.lwz   	r2, 4(r1)
		l.lwz   	r3, 4+4(r1)
.L9788:
	l.add   	r6,r3,r6
	l.sfltu 	r6,r3
	l.bf	.L9790	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
.L9790:
	l.add   	r2,r5,r2
	l.sfgtsi	r2,0
	l.bf	.L9794	# delay slot filled
	l.lhz   	r3,22(r1)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L9795	# delay slot filled
	l.sfgtu 	r6,r3
.L9793:
	l.addi	r1,r1,44
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L9795:
	l.bnf	.L9793
	l.nop			# nop delay slot
.L9794:
	l.lhz   	r3,24(r1)	 # zero_extendqisi2
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r16,r3
	l.lwz   	r3,60(r14)	 # SI load
	l.lwz   	r6,72(r14)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	ptrmapPut	# delay slot filled
	l.addi  	r5,r0,3	 # move immediate I
	l.addi	r1,r1,44
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE376:
	.size	ptrmapPutOvflPtr, .-ptrmapPutOvflPtr
	.align	4
.proc	ptrmapPutOvfl
	.type	ptrmapPutOvfl, @function
ptrmapPutOvfl:
.LFB377:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3573:
	l.sw    	-8(r1),r2	 # SI store
.LCFI3574:
	l.addi  	r1,r1,-8
.LCFI3575:
	l.jal   	findOverflowCell	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	ptrmapPutOvflPtr	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE377:
	.size	ptrmapPutOvfl, .-ptrmapPutOvfl
	.align	4
.proc	setChildPtrmaps
	.type	setChildPtrmaps, @function
setChildPtrmaps:
.LFB411:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3576:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3577:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3578:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3579:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3580:
	l.sw    	-32(r1),r14	 # SI store
.LCFI3581:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3582:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3583:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3584:
	l.addi  	r1,r1,-36
.LCFI3585:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r24,60(r3)	 # SI load
	l.lbz   	r26,0(r3)	 # zero_extendqisi2
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.lwz   	r22,72(r3)	 # SI load
	l.sfnei	r11,0
	l.bf	.L9798	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lhz   	r18,16(r2)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bf	.L9799	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L9806	# delay slot filled
	l.lhz   	r7,12(r2)	 # zero_extendqisi2
.L9800:
.L9805:
	l.bnf	.L9799
	l.nop			# nop delay slot
	l.lhz   	r7,12(r2)	 # zero_extendqisi2
.L9806:
	l.add   	r5,r14,r14
	l.lwz   	r4,64(r2)	 # SI load
	l.add   	r5,r7,r5
	l.lhz   	r7,18(r2)	 # zero_extendqisi2
	l.add   	r5,r4,r5
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r16,0(r5)	 # zero_extendqisi2
	l.lbz   	r5,1(r5)	 # zero_extendqisi2
	l.slli  	r16,r16,8
	l.addi  	r14,r14,1
	l.or    	r16,r5,r16
	l.and   	r16,r16,r7
	l.add   	r16,r4,r16
	l.jal   	ptrmapPutOvflPtr	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9803
	l.nop			# nop delay slot
	l.lbz   	r4,3(r2)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L9805	# delay slot filled
	l.sfgts 	r18,r14
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,5	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L9800	# delay slot filled
	l.sfgts 	r18,r14
.L9803:
	l.ori   	r20,r11,0	 # move reg to reg
.L9798:
	l.sb    	0(r2),r26	    # movqi
	l.addi	r1,r1,36
	l.ori   	r11,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L9799:
	l.lbz   	r3,3(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L9798
	l.nop			# nop delay slot
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.lwz   	r4,64(r2)	 # SI load
	l.addi  	r3,r3,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r4,r3
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,5	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.j     	.L9798	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
.LFE411:
	.size	setChildPtrmaps, .-setChildPtrmaps
	.align	4
.proc	fillInCell
	.type	fillInCell, @function
fillInCell:
.LFB459:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3586:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3587:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3588:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3589:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3590:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3591:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI3592:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3593:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3594:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3595:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3596:
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r1,r1,-84
.LCFI3597:
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	36(r1),r3	 # SI store
	l.lbz   	r3,3(r2)	 # zero_extendqisi2
	l.sw    	32(r1),r11	 # SI store
	l.sw    	0(r1),r8	 # SI store
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r26,r5,0	 # move reg to reg
	l.ori   	r20,r6,0	 # move reg to reg
	l.ori   	r14,r7,0	 # move reg to reg
	l.sfeq 	r3,r11
	l.bf	.L9832	# delay slot filled
	l.lwz   	r24,60(r2)	 # SI load
	l.lbz   	r4,4(r2)	 # zero_extendqisi2
	l.ori   	r3,r11,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bnf	.L9841	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
.L9833:
	l.sw    	84(r1),r4	 # SI store
	l.ori   	r16,r4,0	 # move reg to reg
.L9809:
	l.ori   	r5,r14,0	 # move reg to reg
	l.add   	r3,r18,r3
	l.jal   	sqlite3PutVarint	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.addi  	r5,r1,4
	l.jal   	sqlite3BtreeParseCellPtr	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.lbz   	r2,2(r2)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bnf	.L9842	# delay slot filled
	l.sfgtsi	r20,0
	l.bnf	.L9843	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
.L9813:
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L9834	# delay slot filled
	l.sub   	r2,r0,r26
	l.or    	r2,r26,r2
	l.sfgesi	r2,0
	l.bf	.L9834	# delay slot filled
	l.add   	r16,r16,r14
.L9811:
	l.lhz   	r2,30(r1)	 # zero_extendqisi2
	l.lwz   	r3,92(r1)	 # SI load
	l.lhz   	r20,26(r1)	 # zero_extendqisi2
	l.sw    	0(r3),r2	 # SI store
	l.sflesi	r16,0
	l.bf	.L9835	# delay slot filled
	l.lhz   	r2,28(r1)	 # zero_extendqisi2
	l.add   	r22,r28,r22
	l.addi  	r30,r0,0	 # move immediate I
	l.add   	r22,r18,r22
	l.add   	r18,r18,r2
.L9831:
	l.sfnei	r20,0
	l.bf	.L9848	# delay slot filled
	l.sfles 	r20,r16
	l.lbz   	r2,18(r24)	 # zero_extendqisi2
	l.lwz   	r28,32(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9817	# delay slot filled
	l.ori   	r2,r28,0	 # move reg to reg
	l.lhz   	r3,22(r24)	 # zero_extendqisi2
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.movhi  	r5,hi(sqlite3PendingByte)
	l.lhz   	r4,20(r24)	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3PendingByte)
	l.andi  	r11,r11,0xffff	 # zero_extendqisi2
	l.lwz   	r3,0(r5)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r20,r11,1
	l.addi  	r22,r11,1
.L9840:
	l.addi  	r2,r2,1
.L9849:
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r3,r2,-2
	l.mul   	r11,r11,r20
	l.addi  	r12,r11,2
	l.sfne 	r12,r22
	l.bnf	.L9844
	l.nop			# nop delay slot
.L9819:
	l.sfeq 	r2,r12
	l.bf	.L9840	# delay slot filled
	l.sfeq 	r2,r22
	l.bf	.L9849	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.sw    	32(r1),r2	 # SI store
.L9817:
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r4,r1,36
	l.addi  	r5,r1,32
	l.jal   	allocateBtreePage	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfltsi	r3,0
	l.bf	.L9821	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbz   	r3,18(r24)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L9850	# delay slot filled
	l.sfeqi	r2,0
	l.sfeqi	r28,0
	l.bf	.L9822	# delay slot filled
	l.addi  	r2,r0,3	 # move immediate I
	l.addi  	r2,r0,4	 # move immediate I
.L9822:
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r4,32(r1)	 # SI load
	l.jal   	ptrmapPut	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L9845	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L9823:
	l.lwz   	r2,32(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.srli  	r11,r2,24
	l.srli  	r7,r2,16
	l.srli  	r6,r2,8
	l.sb    	0(r18),r11	    # movqi
	l.sb    	3(r18),r2	    # movqi
	l.sb    	1(r18),r7	    # movqi
	l.jal   	releasePage	# delay slot filled
	l.sb    	2(r18),r6	    # movqi
	l.lwz   	r30,36(r1)	 # SI load
	l.addi  	r11,r0,0	 # movqi: move immediate
	l.lwz   	r18,64(r30)	 # SI load
	l.sb    	0(r18),r11	    # movqi
	l.sb    	1(r18),r11	    # movqi
	l.sb    	2(r18),r11	    # movqi
	l.sb    	3(r18),r11	    # movqi
	l.lwz   	r2,36(r1)	 # SI load
	l.lhz   	r20,22(r24)	 # zero_extendqisi2
	l.lwz   	r22,64(r2)	 # SI load
	l.addi  	r20,r20,-4
	l.addi  	r22,r22,4
	l.sfles 	r20,r16
.L9848:
	l.bf	.L9825	# delay slot filled
	l.ori   	r2,r20,0	 # move reg to reg
	l.ori   	r2,r16,0	 # move reg to reg
.L9825:
	l.sflesi	r14,0
	l.bf	.L9826	# delay slot filled
	l.sfles 	r2,r14
	l.bf	.L9851	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r2,r14,0	 # move reg to reg
.L9851:
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.sub   	r14,r14,r2
.L9846:
	l.sub   	r16,r16,r2
	l.sfeqi	r14,0
	l.bnf	.L9830	# delay slot filled
	l.add   	r26,r26,r2
	l.lwz   	r26,0(r1)	 # SI load
	l.lwz   	r14,84(r1)	 # SI load
.L9830:
	l.sflesi	r16,0
	l.bf	.L9815	# delay slot filled
	l.add   	r22,r22,r2
	l.j     	.L9831	# delay slot filled
	l.sub   	r20,r20,r2
.L9832:
	l.lbz   	r4,4(r2)	 # zero_extendqisi2
	l.addi  	r3,r0,4	 # move immediate I
	l.sfeqi	r4,0
	l.bf	.L9833	# delay slot filled
	l.ori   	r22,r3,0	 # move reg to reg
.L9841:
	l.lwz   	r4,84(r1)	 # SI load
	l.lwz   	r16,88(r1)	 # SI load
	l.add   	r3,r18,r3
	l.add   	r16,r16,r4
	l.srai  	r4,r16,31
	l.jal   	sqlite3PutVarint	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.add   	r22,r22,r11
	l.j     	.L9809	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L9834:
	l.addi  	r2,r0,11	 # move immediate I
	l.addi	r1,r1,84
.L9847:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9844:
	l.j     	.L9819	# delay slot filled
	l.addi  	r12,r11,3
.L9821:
	l.sfeqi	r2,0
.L9850:
	l.bf	.L9823
	l.nop			# nop delay slot
	l.j     	.L9824
	l.nop			# nop delay slot
.L9826:
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.j     	.L9846	# delay slot filled
	l.sub   	r14,r14,r2
.L9845:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
.L9824:
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.j     	.L9847	# delay slot filled
	l.addi	r1,r1,84
.L9835:
	l.addi  	r30,r0,0	 # move immediate I
.L9815:
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L9847	# delay slot filled
	l.addi	r1,r1,84
.L9842:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r14,84(r1)	 # SI load
	l.lwz   	r26,0(r1)	 # SI load
	l.j     	.L9811	# delay slot filled
	l.sw    	84(r1),r5	 # SI store
.L9843:
	l.sfnei	r20,0
	l.bf	.L9814	# delay slot filled
	l.movhi 	r11,hi(2147418112)	 # move immediate M
	l.ori   	r11,r11,65535
	l.sfgtu 	r14,r11
	l.bf	.L9813
	l.nop			# nop delay slot
.L9814:
	l.j     	.L9813	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
.LFE459:
	.size	fillInCell, .-fillInCell
	.align	4
.proc	relocatePage
	.type	relocatePage, @function
relocatePage:
.LFB413:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3598:
	l.lwz   	r2,68(r4)	 # SI load
	l.sw    	-40(r1),r14	 # SI store
.LCFI3599:
	l.lhz   	r14,20(r2)	 # zero_extendqisi2
	l.sw    	-36(r1),r16	 # SI store
.LCFI3600:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3601:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3602:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3603:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3604:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3605:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3606:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3607:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3608:
	l.addi  	r1,r1,-84
.LCFI3609:
	l.ori   	r26,r3,0	 # move reg to reg
	l.sw    	0(r1),r6	 # SI store
	l.andi  	r3,r14,2
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r16,r7,0	 # move reg to reg
	l.ori   	r24,r8,0	 # move reg to reg
	l.ori   	r22,r5,0	 # move reg to reg
	l.lwz   	r30,72(r4)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L9887	# delay slot filled
	l.lwz   	r18,0(r26)	 # SI load
.L9853:
	l.srli  	r3,r14,2
.L9901:
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L9879	# delay slot filled
	l.sub   	r3,r0,r24
	l.or    	r24,r3,r24
	l.sfltsi	r24,0
	l.bf	.L9855	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
	l.lwz   	r24,12(r2)	 # SI load
.L9855:
	l.addi  	r3,r0,-5	 # move immediate I
	l.ori   	r4,r16,0	 # move reg to reg
	l.and   	r14,r14,r3
	l.lwz   	r3,160(r18)	 # SI load
	l.jal   	pager_lookup.clone.100	# delay slot filled
	l.sh    	20(r2),r14	 # movhi
	l.sfeqi	r11,0
	l.bf	.L9856	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lhz   	r5,20(r11)	 # zero_extendqisi2
	l.lhz   	r7,20(r2)	 # zero_extendqisi2
	l.andi  	r5,r5,4
	l.or    	r5,r5,r7
	l.jal   	sqlite3PcacheDrop	# delay slot filled
	l.sh    	20(r2),r5	 # movhi
.L9856:
	l.movhi  	r5,hi(sqlite3Config)
	l.lwz   	r28,12(r2)	 # SI load
	l.lwz   	r3,24(r2)	 # SI load
	l.ori   	r5,r5,lo(sqlite3Config)
	l.lwz   	r3,40(r3)	 # SI load
	l.lwz   	r7,124(r5)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.jalr  	r7	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.lhz   	r3,20(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,6
	l.sfnei	r3,6
	l.bnf	.L9888	# delay slot filled
	l.sw    	12(r2),r16	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
.L9900:
	l.jal   	sqlite3PcacheMakeDirty	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sfeqi	r24,0
	l.bnf	.L9889	# delay slot filled
	l.sb    	15(r18),r2	    # movqi
	l.lbz   	r2,13(r18)	 # zero_extendqisi2
.L9899:
	l.sfeqi	r2,0
	l.bnf	.L9890	# delay slot filled
	l.xori  	r2,r22,1
	l.addi  	r2,r2,-1
	l.sfltsi	r2,0
	l.bf	.L9876	# delay slot filled
	l.sw    	72(r20),r16	 # SI store
.L9893:
	l.xori  	r2,r22,5
	l.addi  	r2,r2,-1
	l.sfltsi	r2,0
	l.bf	.L9876
	l.nop			# nop delay slot
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.lwz   	r3,64(r20)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L9891	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
.L9878:
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
.L9904:
	l.addi  	r5,r1,36
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L9892	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L9861:
	l.addi	r1,r1,84
.L9898:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9879:
	l.j     	.L9855	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
.L9890:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.addi  	r5,r1,32
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L9861	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.xori  	r2,r22,1
	l.addi  	r2,r2,-1
	l.sfltsi	r2,0
	l.bnf	.L9893	# delay slot filled
	l.sw    	72(r20),r16	 # SI store
.L9876:
	l.jal   	setChildPtrmaps	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9861	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r22,1
	l.bf	.L9861	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.j     	.L9904	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
.L9887:
	l.lwz   	r3,12(r2)	 # SI load
	l.jal   	subjRequiresPage.clone.12	# delay slot filled
	l.lwz   	r4,16(r2)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L9901	# delay slot filled
	l.srli  	r3,r14,2
	l.jal   	subjournalPage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9861	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L9853	# delay slot filled
	l.lhz   	r14,20(r2)	 # zero_extendqisi2
.L9889:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.addi  	r5,r1,32
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L9859	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,52(r18)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9861
	l.nop			# nop delay slot
	l.lwz   	r2,28(r18)	 # SI load
	l.sfgtu 	r24,r2
	l.bf	.L9861
	l.nop			# nop delay slot
	l.jal   	sqlite3BitvecClear	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.j     	.L9898	# delay slot filled
	l.addi	r1,r1,84
.L9892:
	l.lwz   	r2,36(r1)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r2)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L9894	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfnei	r22,4
	l.bf	.L9865	# delay slot filled
	l.lwz   	r2,36(r1)	 # SI load
	l.lwz   	r14,64(r2)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfne 	r30,r11
	l.bnf	.L9895	# delay slot filled
	l.srli  	r4,r16,24
.L9866:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.addi  	r14,r0,11	 # move immediate I
	l.j     	.L9898	# delay slot filled
	l.addi	r1,r1,84
.L9859:
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	16(r18),r3	    # movqi
	l.lwz   	r2,32(r1)	 # SI load
	l.lhz   	r4,20(r2)	 # zero_extendqisi2
	l.ori   	r4,r4,4
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3PcacheMakeDirty	# delay slot filled
	l.sh    	20(r2),r4	 # movhi
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.j     	.L9899	# delay slot filled
	l.lbz   	r2,13(r18)	 # zero_extendqisi2
.L9888:
	l.jal   	pcacheRemoveFromDirtyList	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	pcacheAddToDirtyList	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L9900	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L9891:
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,4	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L9878	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L9898	# delay slot filled
	l.addi	r1,r1,84
.L9865:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.lbz   	r28,0(r2)	 # zero_extendqisi2
	l.lhz   	r20,16(r2)	 # zero_extendqisi2
	l.sfeqi	r20,0
	l.bf	.L9868	# delay slot filled
	l.addi  	r24,r1,4
	l.j     	.L9905	# delay slot filled
	l.lhz   	r6,12(r2)	 # zero_extendqisi2
.L9869:
	l.ori   	r3,r18,0	 # move reg to reg
.L9886:
	l.jal   	sqlite3Get4byte
	l.nop			# nop delay slot
	l.sfne 	r30,r11
	l.bnf	.L9896	# delay slot filled
	l.srli  	r5,r16,24
.L9870:
	l.addi  	r14,r14,1
	l.sfgts 	r20,r14
	l.bnf	.L9902	# delay slot filled
	l.sfne 	r20,r14
	l.lhz   	r6,12(r2)	 # zero_extendqisi2
.L9905:
	l.add   	r3,r14,r14
	l.lwz   	r4,64(r2)	 # SI load
	l.add   	r3,r6,r3
	l.lhz   	r6,18(r2)	 # zero_extendqisi2
	l.add   	r3,r4,r3
	l.sfnei	r22,3
	l.lbz   	r18,0(r3)	 # zero_extendqisi2
	l.lbz   	r3,1(r3)	 # zero_extendqisi2
	l.slli  	r18,r18,8
	l.or    	r18,r3,r18
	l.and   	r18,r18,r6
	l.bf	.L9869	# delay slot filled
	l.add   	r18,r4,r18
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3BtreeParseCellPtr	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.lhz   	r3,28(r1)	 # zero_extendqisi2
	l.add   	r18,r18,r3
	l.sfeqi	r3,0
	l.bf	.L9870	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.j     	.L9886
	l.nop			# nop delay slot
.L9894:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.j     	.L9898	# delay slot filled
	l.addi	r1,r1,84
.L9896:
	l.srli  	r4,r16,16
	l.srli  	r3,r16,8
	l.sb    	0(r18),r5	    # movqi
	l.sb    	1(r18),r4	    # movqi
	l.sb    	2(r18),r3	    # movqi
	l.sb    	3(r18),r16	    # movqi
	l.sfne 	r20,r14
.L9902:
	l.bnf	.L9903	# delay slot filled
	l.sfeqi	r22,5
.L9873:
	l.sb    	0(r2),r28	    # movqi
.L9867:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	ptrmapPut	# delay slot filled
	l.lwz   	r6,0(r1)	 # SI load
	l.j     	.L9861	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L9868:
	l.sfeqi	r22,5
.L9903:
	l.bf	.L9874
	l.nop			# nop delay slot
.L9884:
	l.j     	.L9866	# delay slot filled
	l.lwz   	r2,36(r1)	 # SI load
.L9874:
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.lwz   	r14,64(r2)	 # SI load
	l.addi  	r3,r3,8
	l.add   	r14,r14,r3
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeq 	r30,r11
	l.bnf	.L9884	# delay slot filled
	l.srli  	r5,r16,24
	l.srli  	r4,r16,16
	l.srli  	r3,r16,8
	l.sb    	0(r14),r5	    # movqi
	l.sb    	1(r14),r4	    # movqi
	l.sb    	2(r14),r3	    # movqi
	l.j     	.L9873	# delay slot filled
	l.sb    	3(r14),r16	    # movqi
.L9895:
	l.srli  	r3,r16,16
	l.srli  	r2,r16,8
	l.sb    	0(r14),r4	    # movqi
	l.sb    	1(r14),r3	    # movqi
	l.sb    	2(r14),r2	    # movqi
	l.j     	.L9867	# delay slot filled
	l.sb    	3(r14),r16	    # movqi
.LFE413:
	.size	relocatePage, .-relocatePage
	.align	4
.proc	incrVacuumStep
	.type	incrVacuumStep, @function
incrVacuumStep:
.LFB414:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3610:
	l.lhz   	r22,22(r3)	 # zero_extendqisi2
	l.sw    	-4(r1),r9	 # SI store
.LCFI3611:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3612:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3613:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3614:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3615:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3616:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3617:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3618:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3619:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3620:
	l.ori   	r20,r3,0	 # move reg to reg
	l.addi  	r1,r1,-64
.LCFI3621:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r2,r5,0	 # move reg to reg
	l.andi  	r14,r11,0xffff	 # zero_extendqisi2
	l.addi  	r3,r2,-2
	l.addi  	r14,r14,1
	l.movhi  	r28,hi(sqlite3PendingByte)
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	__udivsi3	# delay slot filled
	l.lhz   	r24,20(r20)	 # zero_extendqisi2
	l.mul   	r14,r11,r14
	l.ori   	r28,r28,lo(sqlite3PendingByte)
	l.ori   	r4,r24,0	 # move reg to reg
	l.lwz   	r3,0(r28)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r14,r14,2
	l.addi  	r6,r11,1
	l.sfne 	r14,r6
	l.bnf	.L9929
	l.nop			# nop delay slot
.L9907:
	l.sfeq 	r2,r14
	l.bf	.L9908	# delay slot filled
	l.sfeq 	r2,r6
	l.bf	.L9908	# delay slot filled
	l.addi  	r16,r0,101	 # move immediate I
	l.lwz   	r3,12(r20)	 # SI load
	l.lwz   	r3,64(r3)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r3,r3,36
	l.sfeqi	r11,0
	l.bnf	.L9930	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
.L9909:
	l.addi	r1,r1,64
.L9939:
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L9930:
	l.lwz   	r3,0(r20)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r7,r1,19
	l.jal   	ptrmapGet.clone.156	# delay slot filled
	l.addi  	r8,r1,12
	l.sfnei	r11,0
	l.bf	.L9909	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lbz   	r3,19(r1)	 # zero_extendqisi2
	l.sfeqi	r3,1
	l.bf	.L9923	# delay slot filled
	l.sfnei	r3,2
	l.bf	.L9910	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.sfnei	r18,0
	l.bf	.L9909	# delay slot filled
	l.addi  	r4,r1,4
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r5,r1,8
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	allocateBtreePage	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L9909	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.j     	.L9938	# delay slot filled
	l.lhz   	r24,20(r20)	 # zero_extendqisi2
.L9937:
	l.sub   	r8,r0,r18
	l.lbz   	r5,19(r1)	 # zero_extendqisi2
	l.or    	r8,r8,r18
	l.ori   	r3,r20,0	 # move reg to reg
	l.srli  	r8,r8,31
	l.lwz   	r4,4(r1)	 # SI load
	l.lwz   	r6,12(r1)	 # SI load
	l.jal   	relocatePage	# delay slot filled
	l.lwz   	r7,8(r1)	 # SI load
	l.lwz   	r3,4(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfnei	r16,0
	l.bf	.L9909
	l.nop			# nop delay slot
.L9908:
	l.addi  	r16,r0,0	 # move immediate I
	l.sfne 	r18,r16
	l.bf	.L9909
	l.nop			# nop delay slot
	l.lhz   	r24,20(r20)	 # zero_extendqisi2
.L9938:
	l.lwz   	r26,0(r28)	 # SI load
	l.addi  	r2,r2,-3
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r14,r2,2
	l.addi  	r16,r11,1
	l.sfeq 	r16,r14
	l.bf	.L9919	# delay slot filled
	l.lhz   	r22,22(r20)	 # zero_extendqisi2
	l.ori   	r3,r22,0	 # move reg to reg
.L9941:
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.andi  	r11,r11,0xffff	 # zero_extendqisi2
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r18,r11,1
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.mul   	r11,r11,r18
	l.addi  	r6,r11,2
	l.sfne 	r16,r6
	l.bnf	.L9931	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.sfeq 	r7,r14
	l.bnf	.L9932	# delay slot filled
	l.sfne 	r16,r6
.L9943:
	l.bnf	.L9933	# delay slot filled
	l.sfne 	r6,r14
.L9942:
	l.bnf	.L9940	# delay slot filled
	l.ori   	r4,r6,0	 # move reg to reg
.L9918:
	l.addi  	r2,r2,-1
.L9936:
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r14,r2,2
	l.addi  	r16,r11,1
	l.sfeq 	r16,r14
	l.bnf	.L9941	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L9919:
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.andi  	r11,r11,0xffff	 # zero_extendqisi2
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r18,r11,1
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.mul   	r6,r11,r18
	l.addi  	r6,r6,2
	l.sfne 	r16,r6
	l.bf	.L9942	# delay slot filled
	l.sfne 	r6,r14
.L9933:
	l.addi  	r6,r6,1
	l.sfne 	r6,r14
	l.bf	.L9918	# delay slot filled
	l.ori   	r4,r6,0	 # move reg to reg
.L9940:
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L9909	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r3)	 # SI load
	l.lwz   	r3,0(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfnei	r16,0
	l.bf	.L9909	# delay slot filled
	l.addi  	r2,r2,-1
	l.lhz   	r24,20(r20)	 # zero_extendqisi2
	l.lhz   	r22,22(r20)	 # zero_extendqisi2
	l.j     	.L9936	# delay slot filled
	l.lwz   	r26,0(r28)	 # SI load
.L9931:
	l.addi  	r7,r11,3
	l.sfeq 	r7,r14
	l.bf	.L9943	# delay slot filled
	l.sfne 	r16,r6
.L9932:
	l.lwz   	r2,0(r20)	 # SI load
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L9909	# delay slot filled
	l.sw    	24(r2),r14	 # SI store
.L9929:
	l.j     	.L9907	# delay slot filled
	l.addi  	r14,r11,2
.L9910:
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r5,r1,4
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9909	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi  	r22,r1,8
	l.addi  	r6,r0,0	 # move immediate I
.L9945:
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r1,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	allocateBtreePage	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L9915	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L9944	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r3,8(r1)	 # SI load
	l.sfltu 	r18,r3
	l.bf	.L9945	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,4(r1)	 # SI load
.L9944:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r3)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L9937	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L9915:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.j     	.L9939	# delay slot filled
	l.addi	r1,r1,64
.L9923:
	l.j     	.L9909	# delay slot filled
	l.addi  	r16,r0,11	 # move immediate I
.LFE414:
	.size	incrVacuumStep, .-incrVacuumStep
	.align	4
.proc	sqlite3PagerCommitPhaseOne
	.type	sqlite3PagerCommitPhaseOne, @function
sqlite3PagerCommitPhaseOne:
.LFB332:
	l.sw    	-40(r1),r2	 # SI store
.LCFI3622:
	l.sw    	-36(r1),r14	 # SI store
.LCFI3623:
	l.sw    	-28(r1),r18	 # SI store
.LCFI3624:
	l.sw    	-24(r1),r20	 # SI store
.LCFI3625:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3626:
	l.sw    	-32(r1),r16	 # SI store
.LCFI3627:
	l.sw    	-20(r1),r22	 # SI store
.LCFI3628:
	l.sw    	-16(r1),r24	 # SI store
.LCFI3629:
	l.sw    	-12(r1),r26	 # SI store
.LCFI3630:
	l.sw    	-8(r1),r28	 # SI store
.LCFI3631:
	l.lwz   	r2,36(r3)	 # SI load
	l.addi  	r1,r1,-160
.LCFI3632:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.sfnei	r2,0
	l.bf	.L9947	# delay slot filled
	l.ori   	r20,r5,0	 # move reg to reg
	l.lbz   	r3,13(r3)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L10004
	l.nop			# nop delay slot
.L9948:
	l.lbz   	r3,14(r14)	 # zero_extendqisi2
	l.sfeqi	r3,5
	l.bf	.L9947
	l.nop			# nop delay slot
	l.lbz   	r3,15(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L9947
	l.nop			# nop delay slot
	l.lbz   	r6,18(r14)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L9951
	l.nop			# nop delay slot
	l.lwz   	r22,24(r14)	 # SI load
	l.sfeqi	r22,0
	l.bnf	.L10005	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L9952:
	l.lwz   	r2,28(r14)	 # SI load
	l.sfleu 	r2,r22
	l.bf	.L10012	# delay slot filled
	l.sfeqi	r18,0
	l.lbz   	r3,5(r14)	 # zero_extendqisi2
	l.sfeqi	r3,2
	l.bf	.L9955	# delay slot filled
	l.movhi  	r3,hi(sqlite3PendingByte)
	l.lwz   	r4,120(r14)	 # SI load
	l.ori   	r3,r3,lo(sqlite3PendingByte)
	l.addi  	r16,r22,1
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	24(r14),r2	 # SI store
	l.sfltu 	r2,r16
	l.bf	.L9956	# delay slot filled
	l.addi  	r26,r11,1
	l.addi  	r24,r1,116
.L9998:
	l.lwz   	r3,52(r14)	 # SI load
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9957	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfeq 	r16,r26
	l.bf	.L9957	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3PagerAcquire
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,116(r1)	 # SI load
	l.lwz   	r3,116(r1)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r2,0
	l.bf	.L10010	# delay slot filled
	l.sfeqi	r2,2826
	l.lwz   	r2,28(r14)	 # SI load
.L9957:
	l.addi  	r16,r16,1
	l.sfgeu 	r2,r16
	l.bf	.L9998
	l.nop			# nop delay slot
.L9956:
	l.sw    	24(r14),r22	 # SI store
.L9955:
	l.sfeqi	r18,0
.L10012:
	l.bf	.L9988
	l.nop			# nop delay slot
	l.lbz   	r22,19(r14)	 # zero_extendqisi2
	l.sfnei	r22,0
	l.bf	.L9988
	l.nop			# nop delay slot
	l.lbz   	r2,5(r14)	 # zero_extendqisi2
	l.sfeqi	r2,4
	l.bf	.L9988	# delay slot filled
	l.sfeqi	r2,2
	l.bf	.L9988	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	19(r14),r3	    # movqi
	l.lbs   	r2,0(r18)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L9990	# delay slot filled
	l.ori   	r24,r2,0	 # move reg to reg
	l.ori   	r16,r22,0	 # move reg to reg
.L9961:
	l.addi  	r16,r16,1
	l.add   	r22,r22,r2
	l.add   	r2,r18,r16
	l.lbs   	r2,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L9961	# delay slot filled
	l.ori   	r24,r16,0	 # move reg to reg
.L9960:
	l.lbz   	r2,9(r14)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L9962	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
		l.lwz   	r2, 68(r14)
		l.lwz   	r3, 68+4(r14)
		l.sw    	0(r1), r2
		l.sw    	4(r1), r3
	l.movhi  	r2,hi(sqlite3PendingByte)
.L10011:
	l.lwz   	r4,120(r14)	 # SI load
	l.ori   	r2,r2,lo(sqlite3PendingByte)
	l.lwz   	r26,60(r14)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r3,r26,0	 # move reg to reg
		l.lwz   	r4, 0(r1)
		l.lwz   	r5, 4(r1)
	l.jal   	write32bits	# delay slot filled
	l.addi  	r6,r11,1
	l.sfnei	r11,0
	l.bnf	.L10006	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L9954:
	l.sfeqi	r2,2826
.L10010:
	l.bnf	.L9947
	l.nop			# nop delay slot
	l.addi  	r2,r0,5	 # move immediate I
.L9947:
	l.addi	r1,r1,160
.L10009:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L10004:
	l.lbz   	r3,15(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L9948
	l.nop			# nop delay slot
	l.lwz   	r3,164(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9947	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L9996:
	l.sw    	16(r3),r4	 # SI store
	l.lwz   	r3,40(r3)	 # SI load
	l.sfnei	r3,0
	l.bf	.L9996
	l.nop			# nop delay slot
	l.j     	.L10009	# delay slot filled
	l.addi	r1,r1,160
.L9951:
	l.j     	.L9952	# delay slot filled
	l.lwz   	r22,24(r14)	 # SI load
.L10006:
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r4,4(r1)	 # SI load
	l.addi  	r26,r3,4
	l.addi  	r28,r0,1	 # move immediate I
	l.sfltu 	r26,r4
	l.bf	.L9969	# delay slot filled
	l.lwz   	r3,60(r14)	 # SI load
	l.ori   	r28,r11,0	 # move reg to reg
.L9969:
	l.lwz   	r2,0(r1)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.add   	r28,r28,r2
	l.lwz   	r2,0(r3)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r11,12(r2)	 # SI load
	l.ori   	r6,r28,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.ori   	r7,r26,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.add   	r18,r26,r16
	l.srai  	r3,r16,31
	l.sfltu 	r18,r26
	l.bf	.L9970	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r4,r11,0	 # move reg to reg
.L9970:
	l.add   	r26,r28,r3
	l.ori   	r5,r18,0	 # move reg to reg
	l.add   	r26,r4,r26
	l.lwz   	r3,60(r14)	 # SI load
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	write32bits	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r5,r18,4
	l.lwz   	r3,60(r14)	 # SI load
	l.sfltu 	r5,r18
	l.bf	.L9971	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r4,r11,0	 # move reg to reg
.L9971:
	l.add   	r4,r4,r26
	l.jal   	write32bits	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,60(r14)	 # SI load
	l.addi  	r7,r18,8
	l.lwz   	r4,0(r3)	 # SI load
	l.sfltu 	r7,r18
	l.bf	.L9972	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
.L9972:
	l.lwz   	r11,12(r4)	 # SI load
	l.movhi  	r4,hi(aJournalMagic)
	l.addi  	r5,r0,8	 # move immediate I
	l.ori   	r4,r4,lo(aJournalMagic)
	l.jalr  	r11	# delay slot filled
	l.add   	r6,r6,r26
	l.sfnei	r11,0
	l.bf	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r5,r16,20
	l.lwz   	r3,72(r14)	 # SI load
	l.srai  	r7,r5,31
	l.add   	r5,r3,r5
	l.lwz   	r8,68(r14)	 # SI load
	l.sfltu 	r5,r3
	l.bf	.L9973	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r4,r11,0	 # move reg to reg
.L9973:
	l.lbz   	r6,8(r14)	 # zero_extendqisi2
	l.addi  	r6,r6,-1
	l.add   	r2,r8,r7
	l.srli  	r6,r6,31
	l.lwz   	r3,60(r14)	 # SI load
	l.add   	r4,r4,r2
	l.sb    	16(r14),r6	    # movqi
	l.sw    	72(r14),r5	 # SI store
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	68(r14),r4	 # SI store
	l.lwz   	r11,24(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r1,108
	l.sfnei	r11,0
	l.bf	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,68(r14)	 # SI load
	l.lwz   	r2,108(r1)	 # SI load
	l.sfgts 	r2,r4
	l.bf	.L9995	# delay slot filled
	l.lwz   	r5,72(r14)	 # SI load
	l.sfne 	r2,r4
	l.bf	.L9988	# delay slot filled
	l.lwz   	r2,112(r1)	 # SI load
	l.sfgtu 	r2,r5
	l.bnf	.L9988
	l.nop			# nop delay slot
.L9995:
	l.lwz   	r3,60(r14)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r11,16(r2)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L9988:
	l.jal   	syncJournal	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r2,160(r14)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L9975	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
.L9976:
	l.lwz   	r16,28(r3)	 # SI load
	l.sw    	8(r3),r16	 # SI store
	l.sfnei	r16,0
	l.bf	.L9976	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r24,r1,8
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,100	 # move immediate I
	l.ori   	r6,r16,0	 # move reg to reg
.L9982:
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r22,8(r2)	 # SI load
	l.ori   	r16,r24,0	 # move reg to reg
	l.sw    	8(r2),r3	 # SI store
	l.j     	.L9980	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
.L9977:
	l.jal   	pcacheMergeDirtyList	# delay slot filled
	l.addi  	r18,r18,1
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r16),r3	 # SI store
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r18,24
	l.bf	.L9978	# delay slot filled
	l.addi  	r16,r16,4
	l.lwz   	r6,0(r16)	 # SI load
.L9980:
	l.ori   	r3,r6,0	 # move reg to reg
	l.sfnei	r6,0
	l.bf	.L9977	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.slli  	r3,r18,2
	l.addi  	r4,r1,120
	l.sfeqi	r18,24
	l.add   	r3,r4,r3
	l.bf	.L9978	# delay slot filled
	l.sw    	-112(r3),r2	 # SI store
.L9979:
	l.sfeqi	r22,0
	l.bf	.L9981	# delay slot filled
	l.lwz   	r6,8(r1)	 # SI load
	l.j     	.L9982	# delay slot filled
	l.ori   	r2,r22,0	 # move reg to reg
.L10005:
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r5,r1,116
	l.sfnei	r11,0
	l.bnf	.L10007	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L9953:
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.lwz   	r3,116(r1)	 # SI load
	l.j     	.L10010	# delay slot filled
	l.sfeqi	r2,2826
.L9978:
	l.lwz   	r3,104(r1)	 # SI load
	l.jal   	pcacheMergeDirtyList	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L9979	# delay slot filled
	l.sw    	104(r1),r11	 # SI store
.L9962:
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r5,68(r14)	 # SI load
	l.lwz   	r2,72(r14)	 # SI load
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.or    	r3,r5,r2
	l.sfeqi	r3,0
	l.bf	.L9964	# delay slot filled
	l.addi  	r4,r2,-1
	l.lwz   	r26,108(r14)	 # SI load
	l.sfltu 	r4,r2
	l.bf	.L9966	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
.L9966:
	l.addi  	r5,r5,-1
	l.ori   	r6,r26,0	 # move reg to reg
	l.add   	r3,r3,r5
	l.jal   	__divdi3	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r3,r0,1	 # move immediate I
	l.sfgeui	r12,-1
	l.bf	.L9967	# delay slot filled
	l.addi  	r4,r12,1
	l.addi  	r3,r0,0	 # move immediate I
.L9967:
	l.add   	r3,r3,r11
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	__muldi3	# delay slot filled
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r12,0	 # move reg to reg
		l.sw    	0(r1), r2
		l.sw    	4(r1), r3
.L9964:
		l.lwz   	r2, 0(r1)
		l.lwz   	r3, 4(r1)
		l.sw    	68(r14), r2
		l.sw    	68+4(r14), r3
	l.j     	.L10011	# delay slot filled
	l.movhi  	r2,hi(sqlite3PendingByte)
.L9975:
	l.addi  	r3,r1,8
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,100	 # move immediate I
.L9981:
	l.lwz   	r3,8(r1)	 # SI load
	l.addi  	r2,r1,12
	l.addi  	r16,r1,108
.L9983:
	l.lwz   	r4,0(r2)	 # SI load
	l.jal   	pcacheMergeDirtyList	# delay slot filled
	l.addi  	r2,r2,4
	l.sfne 	r2,r16
	l.bf	.L9983	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	pager_write_pagelist
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r16,160(r14)	 # SI load
	l.lwz   	r3,0(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L9984
	l.nop			# nop delay slot
.L9997:
	l.jal   	sqlite3PcacheMakeClean
	l.nop			# nop delay slot
	l.lwz   	r3,0(r16)	 # SI load
	l.sfnei	r3,0
	l.bf	.L9997
	l.nop			# nop delay slot
.L9984:
	l.lwz   	r16,24(r14)	 # SI load
	l.lwz   	r3,32(r14)	 # SI load
	l.sfeq 	r16,r3
	l.bf	.L9986	# delay slot filled
	l.movhi  	r3,hi(sqlite3PendingByte)
	l.lwz   	r4,120(r14)	 # SI load
	l.ori   	r3,r3,lo(sqlite3PendingByte)
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r4,r11,1
	l.ori   	r3,r14,0	 # move reg to reg
	l.xor   	r4,r16,r4
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.xori  	r4,r4,0xffff
	l.srli  	r4,r4,31
	l.jal   	pager_truncate	# delay slot filled
	l.sub   	r4,r16,r4
	l.sfnei	r11,0
	l.bnf	.L10013	# delay slot filled
	l.sub   	r3,r0,r20
	l.j     	.L9954	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10007:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,116(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L9953	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r3,r14,92
	l.lwz   	r2,116(r1)	 # SI load
	l.addi  	r11,r11,1
	l.lwz   	r2,0(r2)	 # SI load
	l.srli  	r3,r11,8
	l.srli  	r5,r11,24
	l.srli  	r4,r11,16
	l.addi  	r2,r2,24
	l.sb    	0(r2),r5	    # movqi
	l.sb    	1(r2),r4	    # movqi
	l.sb    	2(r2),r3	    # movqi
	l.sb    	3(r2),r11	    # movqi
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sb    	18(r14),r2	    # movqi
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.lwz   	r3,116(r1)	 # SI load
	l.j     	.L9952	# delay slot filled
	l.lwz   	r22,24(r14)	 # SI load
.L9986:
	l.sub   	r3,r0,r20
.L10013:
	l.or    	r20,r3,r20
	l.sfltsi	r20,0
	l.bnf	.L10008
	l.nop			# nop delay slot
.L9987:
	l.addi  	r4,r0,5	 # movqi: move immediate
.L10014:
	l.j     	.L9954	# delay slot filled
	l.sb    	14(r14),r4	    # movqi
.L9990:
	l.ori   	r22,r2,0	 # move reg to reg
	l.j     	.L9960	# delay slot filled
	l.ori   	r16,r2,0	 # move reg to reg
.L10008:
	l.lbz   	r3,8(r14)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.sfgesi	r3,0
	l.bf	.L10014	# delay slot filled
	l.addi  	r4,r0,5	 # movqi: move immediate
	l.lwz   	r3,56(r14)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r11,20(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.lbz   	r4,10(r14)	 # zero_extendqisi2
	l.j     	.L9987	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.LFE332:
	.size	sqlite3PagerCommitPhaseOne, .-sqlite3PagerCommitPhaseOne
	.align	4
.proc	sqlite3BtreeCommitPhaseOne
	.type	sqlite3BtreeCommitPhaseOne, @function
sqlite3BtreeCommitPhaseOne:
.LFB417:
	l.sw    	-40(r1),r2	 # SI store
.LCFI3633:
	l.sw    	-16(r1),r24	 # SI store
.LCFI3634:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3635:
	l.sw    	-36(r1),r14	 # SI store
.LCFI3636:
	l.sw    	-32(r1),r16	 # SI store
.LCFI3637:
	l.sw    	-28(r1),r18	 # SI store
.LCFI3638:
	l.sw    	-24(r1),r20	 # SI store
.LCFI3639:
	l.sw    	-20(r1),r22	 # SI store
.LCFI3640:
	l.sw    	-12(r1),r26	 # SI store
.LCFI3641:
	l.sw    	-8(r1),r28	 # SI store
.LCFI3642:
	l.ori   	r24,r4,0	 # move reg to reg
	l.lbz   	r5,8(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-40
.LCFI3643:
	l.sfnei	r5,2
	l.bnf	.L10042	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L10016:
	l.addi	r1,r1,40
.L10048:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L10042:
	l.lwz   	r16,4(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.lbz   	r2,18(r16)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L10017	# delay slot filled
	l.sw    	4(r16),r3	 # SI store
	l.lwz   	r3,8(r16)	 # SI load
	l.jal   	invalidateAllOverflowCache.clone.39	# delay slot filled
	l.lwz   	r28,0(r16)	 # SI load
	l.lbz   	r2,19(r16)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L10017
	l.nop			# nop delay slot
	l.lwz   	r3,0(r16)	 # SI load
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.lhz   	r14,20(r16)	 # zero_extendqisi2
	l.lhz   	r3,22(r16)	 # zero_extendqisi2
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.andi  	r11,r11,0xffff	 # zero_extendqisi2
	l.addi  	r3,r18,-2
	l.addi  	r22,r11,1
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.mul   	r2,r11,r22
	l.movhi  	r5,hi(sqlite3PendingByte)
	l.lhz   	r4,20(r16)	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3PendingByte)
	l.addi  	r2,r2,2
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r5)	 # SI load
	l.addi  	r20,r11,1
	l.sfne 	r2,r20
	l.bnf	.L10043	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L10019:
	l.sfeq 	r18,r4
	l.bf	.L10036	# delay slot filled
	l.sfeq 	r18,r20
	l.bf	.L10036
	l.nop			# nop delay slot
	l.lwz   	r3,12(r16)	 # SI load
	l.lwz   	r3,64(r3)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r3,r3,36
	l.sfne 	r2,r20
	l.bnf	.L10044	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
.L10021:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	__divsi3	# delay slot filled
	l.sub   	r14,r18,r26
	l.sub   	r3,r11,r18
	l.ori   	r4,r11,0	 # move reg to reg
	l.add   	r3,r3,r26
	l.jal   	__udivsi3	# delay slot filled
	l.add   	r3,r3,r2
	l.sfleu 	r18,r20
	l.bf	.L10041	# delay slot filled
	l.sub   	r14,r14,r11
	l.sfleu 	r20,r14
	l.bf	.L10049	# delay slot filled
	l.addi  	r3,r14,-2
.L10025:
	l.addi  	r14,r14,-1
.L10041:
	l.addi  	r3,r14,-2
.L10049:
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.mul   	r5,r11,r22
	l.addi  	r2,r5,2
	l.sfne 	r20,r2
	l.bnf	.L10045
	l.nop			# nop delay slot
.L10024:
	l.sfeq 	r14,r2
	l.bf	.L10025	# delay slot filled
	l.sfeq 	r20,r14
	l.bf	.L10041	# delay slot filled
	l.addi  	r14,r14,-1
	l.addi  	r14,r14,1
	l.sfgtu 	r18,r14
	l.bf	.L10027	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.addi  	r2,r0,0	 # movqi: move immediate
.L10027:
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
	l.bnf	.L10039	# delay slot filled
	l.sfeqi	r26,0
	l.j     	.L10047
	l.nop			# nop delay slot
.L10046:
	l.bnf	.L10050	# delay slot filled
	l.xori  	r3,r2,101
.L10039:
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	incrVacuumStep	# delay slot filled
	l.addi  	r18,r18,-1
	l.sub   	r5,r0,r11
	l.ori   	r2,r11,0	 # move reg to reg
	l.or    	r5,r5,r11
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.xori  	r5,r5,0xffff
	l.sfltu 	r14,r18
	l.bf	.L10030	# delay slot filled
	l.srli  	r5,r5,31
	l.addi  	r4,r0,0	 # movqi: move immediate
.L10030:
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bnf	.L10046	# delay slot filled
	l.sfnei	r5,0
	l.xori  	r3,r2,101
.L10050:
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L10026	# delay slot filled
	l.sfeqi	r5,0
	l.bnf	.L10047	# delay slot filled
	l.sfeqi	r26,0
.L10031:
	l.sfeqi	r2,0
.L10051:
	l.bf	.L10017
	l.nop			# nop delay slot
	l.jal   	sqlite3PagerRollback	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.j     	.L10048	# delay slot filled
	l.addi	r1,r1,40
.L10017:
	l.lwz   	r3,0(r16)	 # SI load
	l.addi	r1,r1,40
	l.ori   	r4,r24,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.j	sqlite3PagerCommitPhaseOne	# delay slot filled	# sibcall s
	l.lwz   	r28,-8(r1)	 # SI load
.L10043:
	l.j     	.L10019	# delay slot filled
	l.addi  	r4,r11,2
.L10036:
	l.j     	.L10016	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
.L10045:
	l.j     	.L10024	# delay slot filled
	l.addi  	r2,r5,3
.L10026:
	l.sfeqi	r26,0
.L10047:
	l.bf	.L10051	# delay slot filled
	l.sfeqi	r2,0
	l.lwz   	r2,12(r16)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r2)	 # SI load
	l.lwz   	r3,12(r16)	 # SI load
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.lwz   	r3,64(r3)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r3,32
	l.sb    	0(r3),r4	    # movqi
	l.sb    	1(r3),r4	    # movqi
	l.sb    	2(r3),r4	    # movqi
	l.sb    	3(r3),r4	    # movqi
	l.lwz   	r3,12(r16)	 # SI load
	l.lwz   	r3,64(r3)	 # SI load
	l.addi  	r3,r3,36
	l.sb    	0(r3),r4	    # movqi
	l.sb    	1(r3),r4	    # movqi
	l.sb    	2(r3),r4	    # movqi
	l.sb    	3(r3),r4	    # movqi
	l.lwz   	r3,0(r16)	 # SI load
	l.j     	.L10031	# delay slot filled
	l.sw    	24(r3),r14	 # SI store
.L10044:
	l.j     	.L10021	# delay slot filled
	l.addi  	r2,r2,1
.LFE417:
	.size	sqlite3BtreeCommitPhaseOne, .-sqlite3BtreeCommitPhaseOne
	.align	4
.proc	newDatabase
	.type	newDatabase, @function
newDatabase:
.LFB409:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3644:
	l.sw    	-16(r1),r14	 # SI store
.LCFI3645:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3646:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3647:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3648:
	l.addi  	r1,r1,-24
.LCFI3649:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r4,r1,0	 # move reg to reg
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10053	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sfgtsi	r3,0
	l.bnf	.L10054
	l.nop			# nop delay slot
.L10053:
	l.addi	r1,r1,24
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L10054:
	l.lwz   	r18,12(r14)	 # SI load
	l.lwz   	r3,68(r18)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r16,64(r18)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10053	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.movhi  	r4,hi(zMagicHeader)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(zMagicHeader)
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.lhz   	r3,20(r14)	 # zero_extendqisi2
	l.srli  	r3,r3,8
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.ori   	r4,r2,0	 # move reg to reg
	l.sb    	16(r16),r3	    # movqi
	l.addi  	r5,r0,76	 # move immediate I
	l.lbz   	r6,21(r14)	 # zero_extendqisi2
	l.sb    	18(r16),r7	    # movqi
	l.sb    	17(r16),r6	    # movqi
	l.sb    	19(r16),r7	    # movqi
	l.addi  	r3,r16,24
	l.lbz   	r7,21(r14)	 # zero_extendqisi2
	l.lbz   	r6,23(r14)	 # zero_extendqisi2
	l.sub   	r6,r7,r6
	l.addi  	r7,r0,64	 # movqi: move immediate
	l.sb    	20(r16),r6	    # movqi
	l.addi  	r6,r0,32	 # movqi: move immediate
	l.sb    	21(r16),r7	    # movqi
	l.sb    	22(r16),r6	    # movqi
	l.jal   	memset	# delay slot filled
	l.sb    	23(r16),r6	    # movqi
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	zeroPage	# delay slot filled
	l.addi  	r4,r0,13	 # move immediate I
	l.lbz   	r4,18(r14)	 # zero_extendqisi2
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.addi  	r3,r16,52
	l.sb    	17(r14),r7	    # movqi
	l.sb    	0(r3),r2	    # movqi
	l.sb    	1(r3),r2	    # movqi
	l.sb    	2(r3),r2	    # movqi
	l.sb    	3(r3),r4	    # movqi
	l.addi  	r16,r16,64
	l.lbz   	r3,19(r14)	 # zero_extendqisi2
	l.sb    	0(r16),r2	    # movqi
	l.sb    	1(r16),r2	    # movqi
	l.sb    	2(r16),r2	    # movqi
	l.j     	.L10053	# delay slot filled
	l.sb    	3(r16),r3	    # movqi
.LFE409:
	.size	newDatabase, .-newDatabase
	.align	4
.proc	sqlite3BtreeSavepoint
	.type	sqlite3BtreeSavepoint, @function
sqlite3BtreeSavepoint:
.LFB423:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3650:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3651:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3652:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3653:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3654:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3655:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3656:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3657:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3658:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3659:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3660:
	l.ori   	r24,r4,0	 # move reg to reg
	l.addi  	r1,r1,-72
.LCFI3661:
	l.sfeqi	r3,0
	l.bf	.L10056	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r4,8(r3)	 # zero_extendqisi2
	l.sfnei	r4,2
	l.bnf	.L10116	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L10056:
	l.addi	r1,r1,72
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L10116:
	l.lwz   	r28,4(r3)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r14,0(r28)	 # SI load
	l.sw    	4(r28),r2	 # SI store
	l.lwz   	r2,88(r14)	 # SI load
	l.sfges 	r5,r2
	l.bf	.L10057
	l.nop			# nop delay slot
	l.xori  	r3,r24,2
	l.sub   	r26,r0,r3
	l.or    	r26,r26,r3
	l.xori  	r26,r26,0xffff
	l.srli  	r26,r26,31
	l.add   	r26,r26,r5
	l.sfles 	r2,r26
	l.bf	.L10058	# delay slot filled
	l.slli  	r2,r26,2
	l.slli  	r3,r26,5
	l.ori   	r16,r26,0	 # move reg to reg
	l.sub   	r2,r3,r2
.L10059:
	l.lwz   	r6,84(r14)	 # SI load
	l.addi  	r16,r16,1
	l.add   	r6,r6,r2
	l.addi  	r2,r2,28
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.lwz   	r3,16(r6)	 # SI load
	l.lwz   	r4,88(r14)	 # SI load
	l.sflts 	r16,r4
	l.bf	.L10059
	l.nop			# nop delay slot
.L10058:
	l.sw    	88(r14),r26	 # SI store
	l.sfnei	r24,2
	l.bnf	.L10117	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L10060:
	l.sub   	r3,r0,r26
.L10124:
	l.or    	r26,r3,r26
.L10132:
	l.sfltsi	r26,0
	l.bf	.L10086	# delay slot filled
	l.xori  	r24,r24,1
	l.sub   	r3,r0,r24
	l.or    	r24,r3,r24
	l.sfltsi	r24,0
	l.bf	.L10127	# delay slot filled
	l.sfnei	r2,0
	l.lwz   	r3,64(r14)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L10086	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r11,16(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r2,r11,0	 # move reg to reg
	l.sw    	48(r14),r3	 # SI store
.L10086:
	l.sfnei	r2,0
.L10127:
	l.bf	.L10056
	l.nop			# nop delay slot
.L10057:
	l.jal   	newDatabase	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.j     	.L10056	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10117:
	l.lwz   	r2,60(r14)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L10060	# delay slot filled
	l.sfeqi	r26,0
	l.bnf	.L10118	# delay slot filled
	l.addi  	r2,r26,-1
.L10061:
	l.lwz   	r2,28(r14)	 # SI load
	l.addi  	r20,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	24(r14),r2	 # SI store
	l.sw    	8(r1),r20	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r18,68(r14)	 # SI load
	l.lwz   	r30,72(r14)	 # SI load
		l.or    	r11, r2, r0
		l.or    	r12, r3, r0
		l.sw    	68(r14), r2
		l.sw    	68+4(r14), r3
	l.sfgts 	r18,r11
.L10126:
	l.bnf	.L10113	# delay slot filled
	l.addi  	r4,r1,24
	l.addi  	r2,r1,20
	l.sw    	4(r1),r4	 # SI store
	l.sw    	0(r1),r2	 # SI store
.L10114:
	l.addi  	r22,r14,68
.L10111:
	l.ori   	r3,r14,0	 # move reg to reg
.L10128:
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r30,0	 # move reg to reg
	l.lwz   	r6,4(r1)	 # SI load
	l.lwz   	r7,0(r1)	 # SI load
	l.jal   	readJournalHdr	# delay slot filled
	l.sw    	24(r1),r2	 # SI store
	l.lwz   	r3,24(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L10069	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r7,108(r14)	 # SI load
	l.lwz   	r4,80(r14)	 # SI load
	l.lwz   	r6,76(r14)	 # SI load
	l.add   	r4,r7,r4
	l.sfltu 	r4,r7
	l.bf	.L10070	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r5,r3,0	 # move reg to reg
.L10070:
	l.add   	r5,r5,r6
	l.lwz   	r3,68(r14)	 # SI load
	l.sfne 	r3,r5
	l.bnf	.L10119
	l.nop			# nop delay slot
.L10069:
	l.sfnei	r2,0
.L10130:
	l.bf	.L10125	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.lwz   	r2,24(r1)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L10115
	l.nop			# nop delay slot
	l.lwz   	r2,68(r14)	 # SI load
	l.sflts 	r2,r18
	l.bnf	.L10120	# delay slot filled
	l.sfne 	r2,r18
.L10099:
	l.j     	.L10110	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L10122:
	l.lwz   	r8,24(r1)	 # SI load
	l.sfltu 	r16,r8
	l.bnf	.L10115
	l.nop			# nop delay slot
	l.lwz   	r8,68(r14)	 # SI load
	l.sflts 	r8,r18
	l.bnf	.L10121	# delay slot filled
	l.sfne 	r8,r18
.L10110:
	l.addi  	r4,r0,1	 # move immediate I
.L10129:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.ori   	r8,r20,0	 # move reg to reg
	l.jal   	pager_playback_one_page	# delay slot filled
	l.add   	r16,r16,r4
	l.sfnei	r11,0
	l.bnf	.L10122	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10075:
	l.lwz   	r3,8(r1)	 # SI load
.L10125:
	l.sfeqi	r3,0
	l.bf	.L10082
	l.nop			# nop delay slot
.L10091:
	l.lwz   	r4,8(r1)	 # SI load
	l.lwz   	r3,120(r14)	 # SI load
	l.lwz   	r16,24(r4)	 # SI load
	l.addi  	r3,r3,4
	l.addi  	r4,r0,0	 # move immediate I
	l.mul   	r3,r3,r16
	l.sw    	12(r1),r4	 # SI store
	l.sfne 	r2,r4
	l.bf	.L10083	# delay slot filled
	l.sw    	16(r1),r3	 # SI store
	l.lwz   	r2,48(r14)	 # SI load
	l.sfgeu 	r16,r2
	l.bf	.L10084	# delay slot filled
	l.addi  	r22,r1,12
	l.j     	.L10131	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
.L10123:
	l.lwz   	r2,48(r14)	 # SI load
	l.sfltu 	r16,r2
	l.bnf	.L10084	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r7,r0,1	 # move immediate I
.L10131:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r8,r20,0	 # move reg to reg
	l.jal   	pager_playback_one_page	# delay slot filled
	l.add   	r16,r16,r7
	l.sfnei	r11,0
	l.bnf	.L10123	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10083:
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.j     	.L10124	# delay slot filled
	l.sub   	r3,r0,r26
.L10120:
	l.bf	.L10075	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r2,72(r14)	 # SI load
	l.sfltu 	r2,r30
	l.bf	.L10099
	l.nop			# nop delay slot
.L10098:
	l.j     	.L10075	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L10115:
	l.lwz   	r2,68(r14)	 # SI load
	l.sfgts 	r18,r2
	l.bf	.L10111	# delay slot filled
	l.lwz   	r3,72(r14)	 # SI load
	l.sfne 	r18,r2
	l.bf	.L10098	# delay slot filled
	l.sfgtu 	r30,r3
	l.bf	.L10128	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L10075	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L10121:
	l.bf	.L10125	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.lwz   	r3,72(r14)	 # SI load
	l.sfltu 	r3,r30
	l.bf	.L10129	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L10125	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
.L10119:
	l.lwz   	r3,72(r14)	 # SI load
	l.sfne 	r3,r4
	l.bf	.L10130	# delay slot filled
	l.sfnei	r2,0
	l.sub   	r4,r30,r4
	l.sfgtu 	r4,r30
	l.bf	.L10071	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
.L10071:
	l.lwz   	r6,120(r14)	 # SI load
	l.sub   	r5,r18,r5
	l.addi  	r6,r6,8
	l.sub   	r3,r5,r3
	l.jal   	__divdi3	# delay slot filled
	l.srai  	r5,r6,31
	l.j     	.L10069	# delay slot filled
	l.sw    	24(r1),r12	 # SI store
.L10118:
	l.lwz   	r4,84(r14)	 # SI load
	l.slli  	r3,r2,2
	l.slli  	r2,r2,5
	l.sub   	r2,r2,r3
	l.add   	r4,r4,r2
	l.sfeqi	r4,0
	l.bf	.L10061	# delay slot filled
	l.sw    	8(r1),r4	 # SI store
	l.lwz   	r3,20(r4)	 # SI load
	l.jal   	sqlite3BitvecCreate	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L10060	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r4,8(r1)	 # SI load
	l.lwz   	r18,68(r14)	 # SI load
	l.lwz   	r3,12(r4)	 # SI load
	l.lwz   	r2,20(r4)	 # SI load
	l.lwz   	r16,8(r4)	 # SI load
	l.sw    	0(r1),r3	 # SI store
	l.sw    	24(r14),r2	 # SI store
	l.or    	r2,r16,r3
	l.sfnei	r2,0
	l.bf	.L10089	# delay slot filled
	l.lwz   	r30,72(r14)	 # SI load
	l.ori   	r16,r18,0	 # move reg to reg
	l.sw    	0(r1),r30	 # SI store
.L10089:
	l.lwz   	r3,8(r1)	 # SI load
		l.lwz   	r11, 0(r3)
		l.lwz   	r12, 4(r3)
		l.sw    	68(r14), r11
		l.sw    	68+4(r14), r12
	l.j     	.L10065	# delay slot filled
	l.addi  	r22,r14,68
.L10067:
	l.jal   	pager_playback_one_page
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L10091	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
		l.lwz   	r11, 68(r14)
		l.lwz   	r12, 68+4(r14)
.L10065:
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.sfgts 	r16,r11
	l.bf	.L10067	# delay slot filled
	l.ori   	r8,r20,0	 # move reg to reg
	l.sfne 	r16,r11
	l.bf	.L10126	# delay slot filled
	l.sfgts 	r18,r11
	l.lwz   	r2,0(r1)	 # SI load
	l.sfgtu 	r2,r12
	l.bf	.L10067	# delay slot filled
	l.sfgts 	r18,r11
	l.j     	.L10126
	l.nop			# nop delay slot
.L10084:
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L10087:
	l.sw    	68(r14),r18	 # SI store
	l.sw    	72(r14),r30	 # SI store
	l.j     	.L10060	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L10082:
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r2,0
	l.bnf	.L10087	# delay slot filled
	l.sub   	r3,r0,r26
	l.j     	.L10132	# delay slot filled
	l.or    	r26,r3,r26
.L10113:
	l.sfne 	r18,r11
	l.bf	.L10098	# delay slot filled
	l.sfgtu 	r30,r12
	l.bnf	.L10098	# delay slot filled
	l.addi  	r3,r1,24
	l.addi  	r4,r1,20
	l.sw    	4(r1),r3	 # SI store
	l.j     	.L10114	# delay slot filled
	l.sw    	0(r1),r4	 # SI store
.LFE423:
	.size	sqlite3BtreeSavepoint, .-sqlite3BtreeSavepoint
	.align	4
.proc	sqlite3VdbeCloseStatement.clone.170
	.type	sqlite3VdbeCloseStatement.clone.170, @function
sqlite3VdbeCloseStatement.clone.170:
.LFB1418:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3662:
	l.sw    	-32(r1),r14	 # SI store
.LCFI3663:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3664:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3665:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3666:
	l.lwz   	r14,0(r4)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI3667:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3668:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3669:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3670:
	l.ori   	r24,r4,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI3671:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r22,r5,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L10134	# delay slot filled
	l.ori   	r26,r14,0	 # move reg to reg
	l.lwz   	r14,476(r3)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L10134	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r3,4(r3)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.sfles 	r3,r14
	l.bf	.L10135	# delay slot filled
	l.addi  	r26,r26,-1
	l.ori   	r16,r14,0	 # move reg to reg
	l.j     	.L10139	# delay slot filled
	l.ori   	r18,r14,0	 # move reg to reg
.L10147:
	l.lwz   	r3,4(r2)	 # SI load
.L10136:
	l.addi  	r18,r18,1
	l.sflts 	r18,r3
	l.bnf	.L10145	# delay slot filled
	l.addi  	r16,r16,24
.L10139:
	l.lwz   	r6,8(r2)	 # SI load
	l.add   	r6,r6,r16
	l.lwz   	r20,4(r6)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L10136	# delay slot filled
	l.sfnei	r22,2
	l.bnf	.L10146	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L10148:
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3BtreeSavepoint	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.sfeqi	r14,0
.L10149:
	l.bnf	.L10147
	l.nop			# nop delay slot
	l.lwz   	r3,4(r2)	 # SI load
	l.addi  	r18,r18,1
	l.ori   	r14,r11,0	 # move reg to reg
	l.sflts 	r18,r3
	l.bf	.L10139	# delay slot filled
	l.addi  	r16,r16,24
.L10145:
	l.lwz   	r4,476(r2)	 # SI load
.L10135:
	l.addi  	r4,r4,-1
	l.sw    	476(r2),r4	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	0(r24),r2	 # SI store
.L10134:
	l.addi	r1,r1,36
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L10146:
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3BtreeSavepoint	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10149	# delay slot filled
	l.sfeqi	r14,0
	l.j     	.L10148	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.LFE1418:
	.size	sqlite3VdbeCloseStatement.clone.170, .-sqlite3VdbeCloseStatement.clone.170
	.section	.rodata.str1.1
.LC255:
	.string	"@  "
	.section .text
	.align	4
.proc	sqlite3BtreeBeginTrans
	.type	sqlite3BtreeBeginTrans, @function
sqlite3BtreeBeginTrans:
.LFB410:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3672:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3673:
	l.lwz   	r14,4(r3)	 # SI load
	l.ori   	r18,r4,0	 # move reg to reg
	l.lwz   	r4,0(r3)	 # SI load
	l.sw    	-44(r1),r2	 # SI store
.LCFI3674:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3675:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3676:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3677:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3678:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3679:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3680:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3681:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3682:
	l.sw    	4(r14),r4	 # SI store
	l.ori   	r16,r3,0	 # move reg to reg
	l.lbz   	r3,8(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-64
.LCFI3683:
	l.sfeqi	r3,2
	l.bf	.L10151	# delay slot filled
	l.sub   	r2,r0,r18
	l.sub   	r2,r0,r18
	l.or    	r5,r2,r18
	l.sfltsi	r5,0
	l.bnf	.L10210
	l.nop			# nop delay slot
.L10203:
	l.or    	r2,r2,r18
	l.srli  	r20,r2,31
	l.sfeqi	r20,0
	l.bnf	.L10211
	l.nop			# nop delay slot
.L10155:
	l.lbz   	r2,73(r14)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bnf	.L10156	# delay slot filled
	l.sfgtsi	r18,1
	l.bnf	.L10161
	l.nop			# nop delay slot
	l.lwz   	r3,64(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10161
	l.nop			# nop delay slot
	l.lwz   	r2,0(r3)	 # SI load
	l.sfne 	r2,r16
	l.bnf	.L10206
	l.nop			# nop delay slot
	l.j     	.L10217	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L10165:
	l.lwz   	r4,0(r3)	 # SI load
	l.sfeq 	r4,r2
	l.bnf	.L10162
	l.nop			# nop delay slot
.L10206:
	l.lwz   	r3,12(r3)	 # SI load
	l.sfnei	r3,0
	l.bf	.L10165
	l.nop			# nop delay slot
.L10161:
	l.lwz   	r6,12(r14)	 # SI load
.L10218:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r22,r1,16
	l.addi  	r28,r1,12
	l.addi  	r30,r14,20
.L10209:
	l.sfeqi	r6,0
	l.bf	.L10166	# delay slot filled
	l.sub   	r3,r0,r2
	l.or    	r3,r3,r2
	l.sfltsi	r3,0
	l.bf	.L10169	# delay slot filled
	l.sfnei	r20,0
	l.bnf	.L10219	# delay slot filled
	l.sfeqi	r2,0
	l.lbz   	r3,16(r14)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L10213	# delay slot filled
	l.addi  	r2,r0,8	 # move immediate I
.L10191:
	l.jal   	unlockBtreeIfUnused	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r2,5
	l.bf	.L10189
	l.nop			# nop delay slot
	l.lbz   	r3,32(r14)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L10189
	l.nop			# nop delay slot
	l.jal   	btreeInvokeBusyHandler	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L10189
	l.nop			# nop delay slot
.L10183:
	l.j     	.L10209	# delay slot filled
	l.lwz   	r6,12(r14)	 # SI load
.L10210:
	l.xori  	r3,r3,1
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bnf	.L10203
	l.nop			# nop delay slot
.L10151:
	l.or    	r2,r2,r18
	l.srli  	r2,r2,31
	l.sfeqi	r2,0
	l.bf	.L10189
	l.nop			# nop delay slot
.L10188:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3PagerOpenSavepoint	# delay slot filled
	l.lwz   	r4,472(r4)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
.L10189:
	l.addi	r1,r1,64
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L10211:
	l.lbz   	r3,16(r14)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L10189	# delay slot filled
	l.addi  	r2,r0,8	 # move immediate I
	l.lbz   	r2,32(r14)	 # zero_extendqisi2
	l.sfeqi	r2,2
	l.bnf	.L10155
	l.nop			# nop delay slot
.L10156:
	l.lwz   	r2,68(r14)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
.L10158:
	l.sfnei	r3,0
	l.bf	.L10189	# delay slot filled
	l.addi  	r2,r0,262	 # move immediate I
	l.j     	.L10218	# delay slot filled
	l.lwz   	r6,12(r14)	 # SI load
.L10213:
	l.addi  	r4,r0,1	 # move immediate I
	l.sfgts 	r18,r4
	l.bnf	.L10214
	l.nop			# nop delay slot
.L10180:
	l.lwz   	r2,0(r16)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.lbz   	r2,29(r2)	 # zero_extendqisi2
	l.xori  	r2,r2,2
	l.addi  	r2,r2,-1
	l.jal   	sqlite3PagerBegin	# delay slot filled
	l.srli  	r5,r2,31
	l.sfnei	r11,0
	l.bf	.L10191	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	newDatabase	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
.L10169:
	l.sfeqi	r2,0
.L10219:
	l.bnf	.L10191
	l.nop			# nop delay slot
	l.lbz   	r3,8(r16)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L10220	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r3,36(r14)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	36(r14),r3	 # SI store
.L10220:
	l.bf	.L10185	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.addi  	r3,r0,2	 # move immediate I
.L10185:
	l.sb    	8(r16),r3	    # movqi
	l.lbz   	r4,32(r14)	 # zero_extendqisi2
	l.sfgeu 	r4,r3
	l.bf	.L10221	# delay slot filled
	l.sfeqi	r20,0
	l.sb    	32(r14),r3	    # movqi
.L10221:
	l.bf	.L10189	# delay slot filled
	l.sfgtsi	r18,1
	l.sw    	68(r14),r16	 # SI store
	l.bnf	.L10215	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
.L10187:
	l.sb    	72(r14),r2	    # movqi
	l.j     	.L10188	# delay slot filled
	l.lwz   	r4,0(r16)	 # SI load
.L10217:
.L10162:
	l.j     	.L10158	# delay slot filled
	l.lwz   	r3,0(r4)	 # SI load
.L10166:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10169	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10171	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,12(r1)	 # SI load
	l.sflesi	r3,0
	l.bf	.L10172	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.lwz   	r24,16(r1)	 # SI load
	l.movhi  	r4,hi(zMagicHeader)
	l.lwz   	r26,64(r24)	 # SI load
	l.ori   	r4,r4,lo(zMagicHeader)
	l.jal   	memcmp	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10199
	l.nop			# nop delay slot
	l.lbz   	r3,18(r26)	 # zero_extendqisi2
	l.sfleui	r3,1
	l.bf	.L10174	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	16(r14),r3	    # movqi
.L10174:
	l.lbz   	r3,19(r26)	 # zero_extendqisi2
	l.sfgtui	r3,1
	l.bnf	.L10216	# delay slot filled
	l.movhi  	r4,hi(.LC255)
.L10199:
	l.addi  	r2,r0,26	 # move immediate I
.L10173:
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L10169	# delay slot filled
	l.sw    	12(r14),r5	 # SI store
.L10216:
	l.addi  	r3,r26,21
	l.ori   	r4,r4,lo(.LC255)
	l.jal   	memcmp	# delay slot filled
	l.addi  	r5,r0,3	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L10199
	l.nop			# nop delay slot
	l.lbz   	r4,16(r26)	 # zero_extendqisi2
	l.lbz   	r3,17(r26)	 # zero_extendqisi2
	l.slli  	r4,r4,8
	l.or    	r3,r4,r3
	l.addi  	r4,r3,-1
	l.and   	r4,r4,r3
	l.sub   	r4,r0,r4
	l.srli  	r4,r4,31
	l.sfnei	r4,0
	l.bf	.L10199	# delay slot filled
	l.sw    	0(r1),r3	 # SI store
	l.lwz   	r5,0(r1)	 # SI load
	l.sflesi	r5,511
	l.bf	.L10175	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.ori   	r3,r4,0	  # movqi: move reg to reg
.L10175:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L10199	# delay slot filled
	l.sw    	8(r1),r3	 # SI store
	l.lbz   	r4,20(r26)	 # zero_extendqisi2
	l.lwz   	r5,0(r1)	 # SI load
	l.lhz   	r3,20(r14)	 # zero_extendqisi2
	l.sub   	r4,r5,r4
	l.sfeq 	r5,r3
	l.bf	.L10176	# delay slot filled
	l.sw    	4(r1),r4	 # SI store
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r4,4(r1)	 # SI load
	l.lwz   	r5,0(r1)	 # SI load
	l.lwz   	r3,76(r14)	 # SI load
	l.sh    	22(r14),r4	 # movhi
	l.jal   	pcache1Free	# delay slot filled
	l.sh    	20(r14),r5	 # movhi
	l.lwz   	r4,8(r1)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.sw    	76(r14),r4	 # SI store
	l.jal   	sqlite3PagerSetPagesize	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L10183	# delay slot filled
	l.lwz   	r24,16(r1)	 # SI load
	l.j     	.L10173	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10214:
	l.j     	.L10180	# delay slot filled
	l.ori   	r4,r3,0	 # move reg to reg
.L10171:
	l.j     	.L10173	# delay slot filled
	l.lwz   	r24,16(r1)	 # SI load
.L10215:
	l.j     	.L10187	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
.L10176:
	l.lwz   	r5,4(r1)	 # SI load
	l.sflesi	r5,499
	l.bf	.L10199	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
	l.addi  	r3,r26,52
	l.sh    	20(r14),r4	 # movhi
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sh    	22(r14),r5	 # movhi
	l.sub   	r4,r0,r11
	l.addi  	r3,r26,64
	l.or    	r11,r4,r11
	l.srli  	r11,r11,31
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sb    	18(r14),r11	    # movqi
	l.sub   	r3,r0,r11
	l.or    	r11,r3,r11
	l.srli  	r11,r11,31
	l.sb    	19(r14),r11	    # movqi
.L10172:
	l.lhz   	r24,22(r14)	 # zero_extendqisi2
	l.addi  	r26,r24,-12
	l.addi  	r4,r0,255	 # move immediate I
	l.slli  	r3,r26,6
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r24,r24,-35
	l.addi  	r11,r11,-23
	l.slli  	r3,r26,5
	l.sh    	24(r14),r11	 # movhi
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r4,r0,255	 # move immediate I
	l.addi  	r3,r11,-23
	l.lwz   	r6,16(r1)	 # SI load
	l.andi  	r3,r3,0xffff	 # zero_extendqisi2
	l.sh    	28(r14),r24	 # movhi
	l.sh    	26(r14),r3	 # movhi
	l.sh    	30(r14),r3	 # movhi
	l.j     	.L10209	# delay slot filled
	l.sw    	12(r14),r6	 # SI store
.LFE410:
	.size	sqlite3BtreeBeginTrans, .-sqlite3BtreeBeginTrans
	.align	4
.proc	lockBtreeWithRetry
	.type	lockBtreeWithRetry, @function
lockBtreeWithRetry:
.LFB407:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3684:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3685:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3686:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3687:
	l.addi  	r11,r0,0	 # move immediate I
	l.lbz   	r14,8(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-16
.LCFI3688:
	l.sfne 	r14,r11
	l.bnf	.L10225	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
.L10223:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L10225:
	l.lwz   	r5,4(r3)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3BtreeBeginTrans	# delay slot filled
	l.lbz   	r16,32(r5)	 # zero_extendqisi2
	l.lwz   	r3,4(r2)	 # SI load
	l.sfnei	r11,0
	l.sb    	32(r3),r16	    # movqi
	l.bf	.L10223	# delay slot filled
	l.sb    	8(r2),r14	    # movqi
	l.lwz   	r2,4(r2)	 # SI load
	l.lwz   	r3,36(r2)	 # SI load
	l.addi  	r3,r3,-1
	l.sw    	36(r2),r3	 # SI store
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE407:
	.size	lockBtreeWithRetry, .-lockBtreeWithRetry
	.align	4
.proc	btreeCursor
	.type	btreeCursor, @function
btreeCursor:
.LFB424:
	l.sw    	-28(r1),r14	 # SI store
.LCFI3689:
	l.sw    	-24(r1),r16	 # SI store
.LCFI3690:
	l.sw    	-20(r1),r18	 # SI store
.LCFI3691:
	l.sw    	-16(r1),r20	 # SI store
.LCFI3692:
	l.sw    	-12(r1),r22	 # SI store
.LCFI3693:
	l.sw    	-8(r1),r24	 # SI store
.LCFI3694:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3695:
	l.sw    	-32(r1),r2	 # SI store
.LCFI3696:
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r1,r1,-36
.LCFI3697:
	l.ori   	r22,r5,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r24,r6,0	 # move reg to reg
	l.ori   	r16,r7,0	 # move reg to reg
	l.sfeqi	r5,0
	l.bf	.L10227	# delay slot filled
	l.lwz   	r14,4(r3)	 # SI load
	l.lbz   	r7,16(r14)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bnf	.L10235	# delay slot filled
	l.addi  	r2,r0,8	 # move immediate I
.L10228:
	l.addi	r1,r1,36
.L10238:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L10235:
	l.ori   	r6,r7,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	checkForReadConflicts.clone.57	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L10228	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10227:
	l.lwz   	r2,12(r14)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L10236
	l.nop			# nop delay slot
.L10229:
	l.sw    	20(r16),r20	 # SI store
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10228	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r20,1
	l.bnf	.L10237	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
.L10230:
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,20(r16)	 # SI load
	l.jal   	getAndInitPage	# delay slot filled
	l.addi  	r5,r16,92
	l.sfnei	r11,0
	l.bf	.L10231	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sb    	60(r16),r22	    # movqi
	l.sw    	16(r16),r24	 # SI store
	l.lwz   	r3,8(r14)	 # SI load
	l.sw    	0(r16),r18	 # SI store
	l.sw    	4(r16),r14	 # SI store
	l.sfeqi	r3,0
	l.bf	.L10232	# delay slot filled
	l.sw    	8(r16),r3	 # SI store
	l.sw    	12(r3),r16	 # SI store
.L10232:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sw    	8(r14),r16	 # SI store
	l.sb    	63(r16),r3	    # movqi
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
		l.sw    	24(r16), r3
		l.sw    	24+4(r16), r4
	l.j     	.L10238	# delay slot filled
	l.addi	r1,r1,36
.L10237:
	l.sfeqi	r3,0
	l.bnf	.L10230	# delay slot filled
	l.addi  	r2,r0,16	 # move immediate I
.L10231:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,92(r16)	 # SI load
	l.jal   	unlockBtreeIfUnused	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L10238	# delay slot filled
	l.addi	r1,r1,36
.L10236:
	l.jal   	lockBtreeWithRetry	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L10229	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10238	# delay slot filled
	l.addi	r1,r1,36
.LFE424:
	.size	btreeCursor, .-btreeCursor
	.align	4
.proc	sqlite3BtreeUpdateMeta.clone.171
	.type	sqlite3BtreeUpdateMeta.clone.171, @function
sqlite3BtreeUpdateMeta.clone.171:
.LFB1419:
	l.sw    	-20(r1),r2	 # SI store
.LCFI3698:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lwz   	r4,12(r4)	 # SI load
	l.sw    	-16(r1),r14	 # SI store
.LCFI3699:
	l.sw    	-12(r1),r16	 # SI store
.LCFI3700:
	l.sw    	-8(r1),r18	 # SI store
.LCFI3701:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3702:
	l.sw    	4(r2),r3	 # SI store
	l.addi  	r1,r1,-20
.LCFI3703:
	l.lwz   	r3,68(r4)	 # SI load
	l.ori   	r16,r5,0	 # move reg to reg
	l.ori   	r14,r6,0	 # move reg to reg
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r18,64(r4)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10240	# delay slot filled
	l.srli  	r6,r14,24
	l.addi  	r3,r16,9
	l.slli  	r3,r3,2
	l.srli  	r5,r14,16
	l.srli  	r4,r14,8
	l.add   	r3,r18,r3
	l.andi  	r14,r14,0xff	 # zero_extendqisi2
	l.sb    	0(r3),r6	    # movqi
	l.sb    	1(r3),r5	    # movqi
	l.sb    	2(r3),r4	    # movqi
	l.sfnei	r16,7
	l.bnf	.L10241	# delay slot filled
	l.sb    	3(r3),r14	    # movqi
.L10240:
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L10241:
	l.sb    	19(r2),r14	    # movqi
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE1419:
	.size	sqlite3BtreeUpdateMeta.clone.171, .-sqlite3BtreeUpdateMeta.clone.171
	.align	4
.proc	sqlite3_backup_step
	.global sqlite3_backup_step
	.type	sqlite3_backup_step, @function
sqlite3_backup_step:
.LFB503:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3704:
	l.lwz   	r2,28(r3)	 # SI load
	l.lwz   	r5,24(r3)	 # SI load
	l.sw    	-40(r1),r14	 # SI store
.LCFI3705:
	l.ori   	r14,r3,0	 # move reg to reg
	l.xori  	r3,r2,5
	l.sw    	-28(r1),r20	 # SI store
.LCFI3706:
	l.lwz   	r7,0(r5)	 # SI load
	l.ori   	r20,r4,0	 # move reg to reg
	l.sub   	r6,r0,r3
	l.lwz   	r4,4(r5)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI3707:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3708:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3709:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3710:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3711:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3712:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3713:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3714:
	l.or    	r3,r6,r3
	l.sw    	4(r4),r7	 # SI store
	l.sfgesi	r3,0
.LCFI3715:
	l.bf	.L10243	# delay slot filled
	l.addi  	r1,r1,-72
	l.sub   	r3,r0,r2
	l.or    	r3,r3,r2
	l.sfgesi	r3,0
	l.bnf	.L10302	# delay slot filled
	l.sfnei	r2,6
.L10243:
	l.lwz   	r3,4(r14)	 # SI load
.L10316:
	l.lwz   	r24,0(r4)	 # SI load
	l.lwz   	r2,4(r3)	 # SI load
	l.lwz   	r6,0(r14)	 # SI load
	l.lwz   	r30,0(r2)	 # SI load
	l.addi  	r2,r0,-1	 # move immediate I
	l.sfnei	r6,0
	l.bnf	.L10246	# delay slot filled
	l.sw    	24(r1),r2	 # SI store
	l.lbz   	r2,32(r4)	 # zero_extendqisi2
	l.sfeqi	r2,2
	l.bf	.L10303	# delay slot filled
	l.addi  	r2,r0,5	 # move immediate I
.L10246:
	l.lwz   	r2,12(r14)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L10304
	l.nop			# nop delay slot
.L10286:
	l.lbz   	r2,8(r5)	 # zero_extendqisi2
	l.addi  	r28,r0,0	 # move immediate I
	l.sfne 	r2,r28
	l.bnf	.L10305	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L10319:
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.addi  	r4,r1,24
	l.ori   	r2,r11,0	 # move reg to reg
.L10249:
	l.srli  	r3,r20,31
	l.sfnei	r3,0
	l.bnf	.L10306	# delay slot filled
	l.sw    	0(r1),r3	 # SI store
	l.sub   	r3,r0,r2
.L10325:
	l.or    	r3,r3,r2
	l.sfltsi	r3,0
	l.bf	.L10250	# delay slot filled
	l.lwz   	r16,16(r14)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.sfleu 	r16,r4
	l.bf	.L10252	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,0	 # movqi: move immediate
.L10252:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L10250	# delay slot filled
	l.addi  	r4,r14,4
	l.movhi  	r22,hi(sqlite3PendingByte)
	l.addi  	r18,r0,0	 # move immediate I
	l.ori   	r22,r22,lo(sqlite3PendingByte)
	l.addi  	r26,r1,20
	l.sw    	4(r1),r4	 # SI store
.L10256:
	l.lwz   	r2,24(r14)	 # SI load
	l.lwz   	r3,0(r22)	 # SI load
	l.lwz   	r6,4(r2)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.jal   	__divsi3	# delay slot filled
	l.lhz   	r4,20(r6)	 # zero_extendqisi2
	l.addi  	r11,r11,1
	l.sfeq 	r16,r11
	l.bf	.L10253	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L10299	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r16,16(r14)	 # SI load
.L10253:
	l.addi  	r16,r16,1
	l.addi  	r18,r18,1
	l.sw    	16(r14),r16	 # SI store
	l.sfgts 	r20,r18
	l.bf	.L10255	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.addi  	r6,r0,0	 # movqi: move immediate
.L10255:
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bnf	.L10307	# delay slot filled
	l.sub   	r6,r0,r2
.L10324:
	l.or    	r6,r6,r2
	l.sfltsi	r6,0
	l.bf	.L10250	# delay slot filled
	l.lwz   	r7,24(r1)	 # SI load
	l.sfgeu 	r7,r16
	l.bf	.L10258	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.addi  	r6,r0,0	 # movqi: move immediate
.L10258:
	l.andi  	r6,r6,0xff	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L10256
	l.nop			# nop delay slot
.L10250:
	l.sfnei	r2,0
.L10318:
	l.bf	.L10259	# delay slot filled
	l.sfnei	r2,101
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r5,16(r14)	 # SI load
	l.sw    	36(r14),r3	 # SI store
	l.sub   	r4,r3,r5
	l.sfltu 	r3,r5
	l.addi  	r3,r4,1
	l.bnf	.L10261	# delay slot filled
	l.sw    	32(r14),r3	 # SI store
.L10260:
	l.lwz   	r3,4(r14)	 # SI load
	l.lwz   	r4,24(r14)	 # SI load
	l.lwz   	r2,4(r3)	 # SI load
	l.lwz   	r6,8(r14)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.lwz   	r7,4(r4)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.add   	r6,r6,r5
	l.lhz   	r16,20(r7)	 # zero_extendqisi2
	l.jal   	sqlite3BtreeUpdateMeta.clone.171	# delay slot filled
	l.lhz   	r18,20(r2)	 # zero_extendqisi2
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10323	# delay slot filled
	l.sfges 	r16,r18
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.sfges 	r16,r18
.L10323:
	l.bf	.L10263	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.movhi  	r22,hi(sqlite3PendingByte)
	l.lwz   	r20,24(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r3,r20,-1
	l.ori   	r22,r22,lo(sqlite3PendingByte)
	l.jal   	__divsi3	# delay slot filled
	l.add   	r3,r3,r11
	l.lwz   	r2,4(r14)	 # SI load
	l.lwz   	r3,0(r22)	 # SI load
	l.lwz   	r2,4(r2)	 # SI load
	l.ori   	r26,r11,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.lhz   	r4,20(r2)	 # zero_extendqisi2
	l.addi  	r3,r11,1
	l.sfeq 	r3,r26
	l.bf	.L10308
	l.nop			# nop delay slot
.L10264:
	l.sw    	24(r30),r26	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3PagerCommitPhaseOne	# delay slot filled
	l.lwz   	r26,56(r30)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10261	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r2,0(r26)	 # SI load
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r11,24(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r1,12
	l.sfnei	r11,0
	l.bf	.L10261	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.srai  	r2,r16,31
	l.srai  	r5,r20,31
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	__muldi3	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
	l.lwz   	r2,12(r1)	 # SI load
	l.ori   	r20,r11,0	 # move reg to reg
	l.sfgts 	r2,r20
	l.bf	.L10295	# delay slot filled
	l.sw    	0(r1),r12	 # SI store
	l.sfne 	r2,r20
	l.bnf	.L10309	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
.L10268:
	l.lbz   	r3,13(r30)	 # zero_extendqisi2
	l.lbz   	r2,8(r30)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L10270	# delay slot filled
	l.lbz   	r4,10(r30)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L10310
	l.nop			# nop delay slot
.L10270:
	l.lwz   	r2,0(r22)	 # SI load
.L10322:
	l.add   	r18,r18,r2
	l.srai  	r22,r18,31
	l.sfgts 	r22,r20
	l.bf	.L10272	# delay slot filled
	l.sw    	8(r1),r18	 # SI store
	l.sfne 	r22,r20
	l.bnf	.L10311	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
.L10271:
	l.add   	r2,r16,r2
	l.srai  	r4,r2,31
	l.sfgts 	r22,r4
	l.bf	.L10274	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sfne 	r22,r4
	l.bnf	.L10312	# delay slot filled
	l.lwz   	r5,8(r1)	 # SI load
	l.addi  	r3,r0,0	 # movqi: move immediate
.L10274:
	l.andi  	r3,r3,1
	l.sfeqi	r3,0
	l.bf	.L10273
	l.nop			# nop delay slot
	l.add   	r18,r2,r16
	l.sfltu 	r18,r2
	l.bf	.L10276	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
	l.addi  	r30,r0,0	 # move immediate I
.L10276:
	l.add   	r30,r30,r4
.L10282:
	l.sub   	r20,r18,r16
	l.lwz   	r5,4(r1)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.addi  	r2,r0,1	 # move immediate I
	l.sfgtu 	r20,r18
	l.bf	.L10277	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
.L10277:
	l.sub   	r2,r30,r2
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r1),r2	 # SI store
	l.sw    	20(r1),r3	 # SI store
	l.jal   	__divdi3	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r12,1
	l.addi  	r5,r1,20
	l.jal   	sqlite3PagerAcquire	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L10313	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
.L10261:
	l.sfeqi	r28,0
.L10321:
	l.bnf	.L10314
	l.nop			# nop delay slot
.L10283:
	l.sw    	28(r14),r2	 # SI store
.L10244:
	l.addi	r1,r1,72
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L10302:
	l.bf	.L10244
	l.nop			# nop delay slot
	l.j     	.L10316	# delay slot filled
	l.lwz   	r3,4(r14)	 # SI load
.L10299:
	l.lwz   	r2,20(r1)	 # SI load
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	backupOnePage.clone.155	# delay slot filled
	l.lwz   	r4,24(r14)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10253	# delay slot filled
	l.lwz   	r16,16(r14)	 # SI load
.L10259:
	l.bnf	.L10260	# delay slot filled
	l.sfeqi	r28,0
	l.bf	.L10283
	l.nop			# nop delay slot
	l.j     	.L10317	# delay slot filled
	l.lwz   	r3,24(r14)	 # SI load
.L10307:
	l.lwz   	r5,0(r1)	 # SI load
	l.sfeqi	r5,0
	l.bnf	.L10324
	l.nop			# nop delay slot
	l.j     	.L10318	# delay slot filled
	l.sfnei	r2,0
.L10314:
	l.lwz   	r3,24(r14)	 # SI load
.L10317:
	l.jal   	sqlite3BtreeCommitPhaseOne	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3BtreeCommitPhaseTwo	# delay slot filled
	l.lwz   	r3,24(r14)	 # SI load
	l.j     	.L10244	# delay slot filled
	l.sw    	28(r14),r2	 # SI store
.L10303:
.L10247:
	l.j     	.L10249	# delay slot filled
	l.addi  	r28,r0,0	 # move immediate I
.L10304:
	l.jal   	sqlite3BtreeBeginTrans	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L10247	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r3,4(r14)	 # SI load
	l.sw    	12(r14),r4	 # SI store
	l.jal   	sqlite3BtreeGetMeta	# delay slot filled
	l.addi  	r5,r14,8
	l.sfnei	r11,0
	l.bf	.L10247	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10286	# delay slot filled
	l.lwz   	r5,24(r14)	 # SI load
.L10305:
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	sqlite3BtreeBeginTrans	# delay slot filled
	l.addi  	r28,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L10249	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10319	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
.L10263:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r2,24(r1)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.mul   	r11,r11,r2
	l.ori   	r3,r30,0	 # move reg to reg
	l.sw    	24(r30),r11	 # SI store
	l.jal   	sqlite3PagerCommitPhaseOne	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r2,0
.L10320:
	l.bf	.L10321	# delay slot filled
	l.sfeqi	r28,0
.L10273:
	l.jal   	sqlite3BtreeCommitPhaseTwo	# delay slot filled
	l.lwz   	r3,4(r14)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L10261	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10261	# delay slot filled
	l.addi  	r2,r0,101	 # move immediate I
.L10312:
	l.sfgtu 	r5,r2
	l.bf	.L10274
	l.nop			# nop delay slot
	l.j     	.L10274	# delay slot filled
	l.addi  	r3,r0,0	 # movqi: move immediate
.L10306:
	l.sflesi	r20,0
	l.bnf	.L10325	# delay slot filled
	l.sub   	r3,r0,r2
	l.j     	.L10318	# delay slot filled
	l.sfnei	r2,0
.L10308:
	l.j     	.L10264	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
.L10313:
	l.lwz   	r2,0(r26)	 # SI load
	l.lwz   	r4,20(r1)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r4,0(r4)	 # SI load
	l.lwz   	r6,0(r1)	 # SI load
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r11,12(r2)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sub   	r6,r0,r2
	l.add   	r4,r18,r16
	l.or    	r6,r6,r2
	l.sfgts 	r22,r30
	l.xori  	r6,r6,0xffff
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.bf	.L10279	# delay slot filled
	l.srli  	r6,r6,31
	l.sfne 	r22,r30
	l.bnf	.L10315	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.addi  	r5,r0,0	 # movqi: move immediate
.L10279:
	l.addi  	r3,r0,1	 # move immediate I
.L10326:
	l.sfltu 	r4,r18
	l.bf	.L10281	# delay slot filled
	l.and   	r5,r6,r5
	l.addi  	r3,r0,0	 # move immediate I
.L10281:
	l.ori   	r18,r4,0	 # move reg to reg
	l.sfnei	r5,0
	l.bf	.L10282	# delay slot filled
	l.add   	r30,r3,r30
	l.j     	.L10320	# delay slot filled
	l.sfnei	r2,0
.L10315:
	l.sfgtu 	r3,r18
	l.bf	.L10326	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.j     	.L10326	# delay slot filled
	l.addi  	r5,r0,0	 # movqi: move immediate
.L10309:
	l.sfgtu 	r2,r12
	l.bnf	.L10268
	l.nop			# nop delay slot
.L10295:
	l.lwz   	r2,0(r26)	 # SI load
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r11,16(r2)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L10268	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10321	# delay slot filled
	l.sfeqi	r28,0
.L10311:
	l.sfgtu 	r18,r3
	l.bnf	.L10271
	l.nop			# nop delay slot
.L10272:
	l.lwz   	r4,0(r1)	 # SI load
	l.ori   	r22,r20,0	 # move reg to reg
	l.j     	.L10271	# delay slot filled
	l.sw    	8(r1),r4	 # SI store
.L10310:
	l.lwz   	r3,56(r30)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r11,20(r2)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L10261	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10322	# delay slot filled
	l.lwz   	r2,0(r22)	 # SI load
.LFE503:
	.size	sqlite3_backup_step, .-sqlite3_backup_step
	.align	4
.proc	freePage2
	.type	freePage2, @function
freePage2:
.LFB456:
	l.sw    	-32(r1),r2	 # SI store
.LCFI3716:
	l.sw    	-28(r1),r14	 # SI store
.LCFI3717:
	l.sw    	-24(r1),r16	 # SI store
.LCFI3718:
	l.sw    	-16(r1),r20	 # SI store
.LCFI3719:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI3720:
	l.sw    	-20(r1),r18	 # SI store
.LCFI3721:
	l.sw    	-12(r1),r22	 # SI store
.LCFI3722:
	l.sw    	-8(r1),r24	 # SI store
.LCFI3723:
	l.addi  	r1,r1,-44
.LCFI3724:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sw    	8(r1),r2	 # SI store
	l.ori   	r20,r5,0	 # move reg to reg
	l.sfeq 	r4,r2
	l.bf	.L10328	# delay slot filled
	l.lwz   	r16,12(r3)	 # SI load
	l.lwz   	r2,68(r4)	 # SI load
	l.sw    	4(r1),r4	 # SI store
	l.lhz   	r3,22(r2)	 # zero_extendqisi2
	l.addi  	r3,r3,1
	l.sh    	22(r2),r3	 # movhi
.L10329:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r16)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10330	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r18,64(r16)	 # SI load
	l.addi  	r18,r18,36
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r3,r11,1
	l.srli  	r6,r3,24
	l.srli  	r5,r3,16
	l.srli  	r4,r3,8
	l.sb    	0(r18),r6	    # movqi
	l.sb    	1(r18),r5	    # movqi
	l.sb    	2(r18),r4	    # movqi
	l.sb    	3(r18),r3	    # movqi
	l.lbz   	r3,18(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L10341	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.sfeqi	r22,0
.L10347:
	l.bnf	.L10342	# delay slot filled
	l.ori   	r18,r22,0	 # move reg to reg
	l.lwz   	r6,4(r1)	 # SI load
.L10348:
	l.sfnei	r6,0
	l.bnf	.L10343	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L10336:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r6)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L10344	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10330:
	l.lwz   	r3,4(r1)	 # SI load
.L10349:
	l.sfeqi	r3,0
	l.bf	.L10337	# delay slot filled
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sb    	0(r3),r4	    # movqi
.L10337:
	l.jal   	releasePage
	l.nop			# nop delay slot
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.addi	r1,r1,44
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L10344:
	l.lwz   	r3,4(r1)	 # SI load
	l.srli  	r5,r18,16
	l.srli  	r4,r18,8
	l.srli  	r7,r18,24
	l.lwz   	r3,64(r3)	 # SI load
	l.srli  	r6,r20,24
	l.sb    	1(r3),r5	    # movqi
	l.sb    	2(r3),r4	    # movqi
	l.sb    	0(r3),r7	    # movqi
	l.sb    	3(r3),r18	    # movqi
	l.srli  	r5,r20,16
	l.lwz   	r3,4(r1)	 # SI load
	l.srli  	r4,r20,8
	l.lwz   	r3,64(r3)	 # SI load
	l.addi  	r3,r3,4
	l.sb    	0(r3),r11	    # movqi
	l.sb    	1(r3),r11	    # movqi
	l.sb    	2(r3),r11	    # movqi
	l.sb    	3(r3),r11	    # movqi
	l.lwz   	r3,64(r16)	 # SI load
	l.addi  	r3,r3,32
	l.sb    	0(r3),r6	    # movqi
	l.sb    	1(r3),r5	    # movqi
	l.sb    	2(r3),r4	    # movqi
	l.j     	.L10330	# delay slot filled
	l.sb    	3(r3),r20	    # movqi
.L10341:
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	ptrmapPut	# delay slot filled
	l.addi  	r5,r0,2	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L10330	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10347	# delay slot filled
	l.sfeqi	r22,0
.L10342:
	l.lwz   	r3,64(r16)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r3,r3,32
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r1,8
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10330	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r24,8(r1)	 # SI load
	l.addi  	r2,r0,11	 # move immediate I
	l.lwz   	r3,64(r24)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r3,r3,4
	l.sfltsi	r11,0
	l.bf	.L10330	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.lhz   	r2,22(r14)	 # zero_extendqisi2
	l.srli  	r2,r2,2
	l.addi  	r2,r2,-8
	l.sfges 	r11,r2
	l.bf	.L10348	# delay slot filled
	l.lwz   	r6,4(r1)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r24)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10330	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,8(r1)	 # SI load
	l.addi  	r4,r22,1
	l.lwz   	r3,64(r3)	 # SI load
	l.srli  	r5,r4,8
	l.addi  	r3,r3,4
	l.addi  	r22,r22,2
	l.sb    	2(r3),r5	    # movqi
	l.sb    	0(r3),r11	    # movqi
	l.sb    	1(r3),r11	    # movqi
	l.sb    	3(r3),r4	    # movqi
	l.slli  	r3,r22,2
	l.lwz   	r4,8(r1)	 # SI load
	l.srli  	r6,r20,24
	l.lwz   	r7,64(r4)	 # SI load
	l.srli  	r5,r20,16
	l.srli  	r4,r20,8
	l.add   	r3,r7,r3
	l.sb    	0(r3),r6	    # movqi
	l.sb    	1(r3),r5	    # movqi
	l.sb    	2(r3),r4	    # movqi
	l.sb    	3(r3),r20	    # movqi
	l.lwz   	r3,4(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10333
	l.nop			# nop delay slot
	l.lwz   	r3,68(r3)	 # SI load
	l.lhz   	r4,20(r3)	 # zero_extendqisi2
	l.andi  	r5,r4,2
	l.sfeqi	r5,0
	l.bf	.L10333	# delay slot filled
	l.lwz   	r6,16(r3)	 # SI load
	l.lwz   	r5,88(r6)	 # SI load
	l.sfnei	r5,0
	l.bf	.L10333	# delay slot filled
	l.ori   	r4,r4,32
	l.sh    	20(r3),r4	 # movhi
.L10333:
	l.lwz   	r11,52(r14)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L10345	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
.L10334:
	l.lwz   	r3,0(r11)	 # SI load
	l.sfgtu 	r20,r3
	l.bf	.L10349	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	sqlite3BitvecSet	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L10330	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10328:
	l.jal   	btreePageLookup	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.j     	.L10329	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
.L10343:
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.addi  	r5,r1,4
	l.sfnei	r11,0
	l.bf	.L10330	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10336	# delay slot filled
	l.lwz   	r6,4(r1)	 # SI load
.L10345:
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L10346
	l.nop			# nop delay slot
	l.j     	.L10330	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10346:
	l.jal   	sqlite3BitvecCreate	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L10334	# delay slot filled
	l.sw    	52(r14),r11	 # SI store
	l.addi  	r11,r0,7	 # move immediate I
	l.j     	.L10330	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.LFE456:
	.size	freePage2, .-freePage2
	.align	4
.proc	clearCell
	.type	clearCell, @function
clearCell:
.LFB458:
	l.sw    	-28(r1),r2	 # SI store
.LCFI3725:
	l.sw    	-24(r1),r14	 # SI store
.LCFI3726:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3727:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3728:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3729:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3730:
	l.sw    	-8(r1),r22	 # SI store
.LCFI3731:
	l.addi  	r1,r1,-64
.LCFI3732:
	l.lwz   	r18,60(r3)	 # SI load
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3BtreeParseCellPtr	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.lhz   	r3,24(r1)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L10351	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r14,r3
	l.lhz   	r2,22(r18)	 # zero_extendqisi2
	l.lwz   	r3,16(r1)	 # SI load
	l.lhz   	r4,22(r1)	 # zero_extendqisi2
	l.addi  	r2,r2,-4
	l.addi  	r3,r3,-1
	l.andi  	r2,r2,0xffff	 # zero_extendqisi2
	l.sub   	r3,r3,r4
	l.ori   	r4,r2,0	 # move reg to reg
	l.add   	r3,r3,r2
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L10351	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
	l.sfleui	r14,1
	l.sw    	32(r1),r2	 # SI store
	l.sw    	28(r1),r2	 # SI store
	l.bf	.L10351	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
	l.addi  	r16,r11,-1
	l.addi  	r22,r1,28
	l.j     	.L10352	# delay slot filled
	l.addi  	r20,r1,32
.L10361:
	l.sfeqi	r16,0
	l.bf	.L10353
	l.nop			# nop delay slot
	l.jal   	getOverflowPage
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L10351	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10353:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	freePage2	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r3,28(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10354	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.lwz   	r3,68(r3)	 # SI load
.L10354:
	l.sfnei	r2,0
	l.bf	.L10351	# delay slot filled
	l.sfnei	r16,0
	l.lwz   	r14,32(r1)	 # SI load
	l.bnf	.L10351	# delay slot filled
	l.addi  	r16,r16,-1
	l.sw    	32(r1),r2	 # SI store
	l.sfleui	r14,1
	l.bf	.L10360	# delay slot filled
	l.sw    	28(r1),r2	 # SI store
.L10352:
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.lwz   	r3,0(r18)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfltu 	r11,r14
	l.bnf	.L10361	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
.L10360:
	l.addi  	r2,r0,11	 # move immediate I
.L10351:
	l.addi	r1,r1,64
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.LFE458:
	.size	clearCell, .-clearCell
	.align	4
.proc	freePage
	.type	freePage, @function
freePage:
.LFB457:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3733:
	l.ori   	r4,r3,0	 # move reg to reg
	l.addi  	r1,r1,-4
.LCFI3734:
	l.lwz   	r3,60(r3)	 # SI load
	l.lwz   	r5,72(r4)	 # SI load
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	freePage2
	l.nop			# nop delay slot	# sibcall s
.LFE457:
	.size	freePage, .-freePage
	.align	4
.proc	insertCell
	.type	insertCell, @function
insertCell:
.LFB461:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3735:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3736:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3737:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3738:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3739:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3740:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3741:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3742:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3743:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3744:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3745:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r11,1(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-80
.LCFI3746:
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r14,r6,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10364	# delay slot filled
	l.ori   	r16,r8,0	 # move reg to reg
	l.lhz   	r3,14(r3)	 # zero_extendqisi2
	l.addi  	r4,r6,1
	l.sflts 	r4,r3
	l.bf	.L10365
	l.nop			# nop delay slot
.L10364:
	l.sfeqi	r7,0
	l.bf	.L10366	# delay slot filled
	l.add   	r4,r20,r16
	l.add   	r3,r7,r16
	l.sub   	r5,r14,r16
	l.jal   	memcpy	# delay slot filled
	l.ori   	r20,r7,0	 # move reg to reg
	l.lbz   	r11,1(r2)	 # zero_extendqisi2
.L10366:
	l.addi  	r3,r11,3
	l.slli  	r4,r11,3
	l.slli  	r3,r3,3
	l.addi  	r11,r11,1
	l.add   	r4,r2,r4
	l.add   	r3,r2,r3
	l.sb    	1(r2),r11	    # movqi
	l.sh    	0(r3),r22	 # movhi
	l.addi  	r3,r0,0	 # movhi: move immediate
	l.sw    	20(r4),r20	 # SI store
	l.sh    	14(r2),r3	 # movhi
	l.addi  	r18,r0,0	 # move immediate I
.L10367:
	l.addi	r1,r1,80
	l.ori   	r11,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L10365:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10367	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lbz   	r28,5(r2)	 # zero_extendqisi2
	l.lhz   	r4,12(r2)	 # zero_extendqisi2
	l.lwz   	r30,64(r2)	 # SI load
	l.sw    	0(r1),r4	 # SI store
	l.add   	r3,r30,r28
	l.lhz   	r26,16(r2)	 # zero_extendqisi2
	l.lbz   	r5,5(r3)	 # zero_extendqisi2
	l.lbz   	r4,6(r3)	 # zero_extendqisi2
	l.slli  	r3,r5,8
	l.add   	r26,r26,r26
	l.lwz   	r5,0(r1)	 # SI load
	l.or    	r3,r3,r4
	l.add   	r26,r26,r5
	l.sub   	r3,r3,r14
	l.addi  	r4,r26,2
	l.sw    	4(r1),r28	 # SI store
	l.sfles 	r4,r3
	l.bnf	.L10383	# delay slot filled
	l.ori   	r24,r30,0	 # move reg to reg
.L10368:
	l.lhz   	r3,14(r2)	 # zero_extendqisi2
	l.addi  	r11,r28,7
	l.sub   	r3,r3,r14
	l.add   	r11,r24,r11
	l.sh    	14(r2),r3	 # movhi
	l.lbz   	r12,0(r11)	 # zero_extendqisi2
	l.sflesi	r12,59
	l.bnf	.L10384	# delay slot filled
	l.addi  	r3,r28,1
.L10371:
	l.add   	r4,r24,r3
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.lbz   	r5,1(r4)	 # zero_extendqisi2
	l.slli  	r3,r3,8
	l.or    	r3,r5,r3
	l.addi  	r6,r3,2
	l.addi  	r5,r3,3
	l.add   	r6,r24,r6
	l.sfgtsi	r3,0
	l.bnf	.L10370	# delay slot filled
	l.add   	r5,r24,r5
	l.lbz   	r7,0(r6)	 # zero_extendqisi2
	l.lbz   	r8,0(r5)	 # zero_extendqisi2
	l.slli  	r7,r7,8
	l.or    	r7,r7,r8
	l.sfgts 	r14,r7
	l.bf	.L10371	# delay slot filled
	l.sub   	r7,r7,r14
	l.sfgtsi	r7,3
	l.bnf	.L10385
	l.nop			# nop delay slot
	l.srai  	r4,r7,8
	l.sb    	0(r6),r4	    # movqi
	l.sb    	0(r5),r7	    # movqi
.L10373:
	l.add   	r28,r7,r3
.L10374:
	l.lwz   	r3,60(r2)	 # SI load
	l.add   	r4,r28,r14
	l.lhz   	r3,22(r3)	 # zero_extendqisi2
	l.sfgts 	r4,r3
	l.bnf	.L10386	# delay slot filled
	l.add   	r3,r28,r16
	l.j     	.L10367	# delay slot filled
	l.addi  	r18,r0,11	 # move immediate I
.L10384:
	l.jal   	defragmentPage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L10370:
	l.addi  	r4,r28,5
	l.addi  	r28,r28,6
	l.add   	r4,r24,r4
	l.add   	r24,r24,r28
	l.lbz   	r28,0(r4)	 # zero_extendqisi2
	l.lbz   	r3,0(r24)	 # zero_extendqisi2
	l.slli  	r28,r28,8
	l.or    	r28,r28,r3
	l.sub   	r28,r28,r14
	l.srai  	r3,r28,8
	l.sb    	0(r4),r3	    # movqi
	l.j     	.L10374	# delay slot filled
	l.sb    	0(r24),r28	    # movqi
.L10386:
	l.lhz   	r5,16(r2)	 # zero_extendqisi2
	l.lhz   	r4,14(r2)	 # zero_extendqisi2
	l.addi  	r5,r5,1
	l.addi  	r4,r4,-2
	l.lwz   	r6,0(r1)	 # SI load
	l.add   	r22,r22,r22
	l.sh    	16(r2),r5	 # movhi
	l.sh    	14(r2),r4	 # movhi
	l.add   	r3,r30,r3
	l.add   	r4,r20,r16
	l.sub   	r5,r14,r16
	l.jal   	memcpy	# delay slot filled
	l.add   	r22,r22,r6
	l.sfles 	r26,r22
	l.bf	.L10387	# delay slot filled
	l.srai  	r3,r28,8
	l.add   	r4,r30,r26
.L10377:
	l.addi  	r4,r4,-2
	l.addi  	r26,r26,-2
	l.lbz   	r3,0(r4)	 # zero_extendqisi2
	l.lbz   	r5,1(r4)	 # zero_extendqisi2
	l.sb    	2(r4),r3	    # movqi
	l.sflts 	r22,r26
	l.bf	.L10377	# delay slot filled
	l.sb    	3(r4),r5	    # movqi
	l.srai  	r3,r28,8
.L10387:
	l.add   	r22,r30,r22
	l.lwz   	r6,4(r1)	 # SI load
	l.sb    	0(r22),r3	    # movqi
	l.sb    	1(r22),r28	    # movqi
	l.add   	r30,r30,r6
	l.lhz   	r3,16(r2)	 # zero_extendqisi2
	l.srli  	r3,r3,8
	l.sb    	3(r30),r3	    # movqi
	l.lbz   	r3,17(r2)	 # zero_extendqisi2
	l.sb    	4(r30),r3	    # movqi
	l.lwz   	r3,60(r2)	 # SI load
	l.lbz   	r3,18(r3)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L10367	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3BtreeParseCellPtr	# delay slot filled
	l.addi  	r5,r1,8
	l.lhz   	r3,32(r1)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L10367
	l.nop			# nop delay slot
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r20,r3
	l.lwz   	r3,60(r2)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,3	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.lwz   	r6,72(r2)	 # SI load
	l.j     	.L10367	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L10383:
	l.jal   	defragmentPage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10379
	l.nop			# nop delay slot
	l.lbz   	r28,5(r2)	 # zero_extendqisi2
	l.j     	.L10368	# delay slot filled
	l.lwz   	r24,64(r2)	 # SI load
.L10385:
	l.add   	r24,r24,r3
	l.add   	r12,r12,r7
	l.lbz   	r6,0(r24)	 # zero_extendqisi2
	l.sb    	0(r4),r6	    # movqi
	l.lbz   	r24,1(r24)	 # zero_extendqisi2
	l.sb    	1(r4),r24	    # movqi
	l.j     	.L10373	# delay slot filled
	l.sb    	0(r11),r12	    # movqi
.L10379:
	l.j     	.L10367	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.LFE461:
	.size	insertCell, .-insertCell
	.align	4
.proc	balance
	.type	balance, @function
balance:
.LFB467:
	l.sw    	-40(r1),r2	 # SI store
.LCFI3747:
	l.lhs   	r2,88(r3)	 # extendhisi2_no_sext_mem
	l.sw    	-36(r1),r14	 # SI store
.LCFI3748:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r3,r2,23
	l.sfnei	r2,0
	l.slli  	r2,r3,2
	l.sw    	-32(r1),r16	 # SI store
.LCFI3749:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3750:
	l.sw    	-28(r1),r18	 # SI store
.LCFI3751:
	l.sw    	-24(r1),r20	 # SI store
.LCFI3752:
	l.sw    	-20(r1),r22	 # SI store
.LCFI3753:
	l.sw    	-16(r1),r24	 # SI store
.LCFI3754:
	l.sw    	-12(r1),r26	 # SI store
.LCFI3755:
	l.sw    	-8(r1),r28	 # SI store
.LCFI3756:
	l.add   	r2,r14,r2
	l.addi  	r1,r1,-48
.LCFI3757:
	l.bnf	.L10410	# delay slot filled
	l.lwz   	r16,0(r2)	 # SI load
	l.lbz   	r2,1(r16)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L10403	# delay slot filled
	l.sfnei	r4,0
	l.bf	.L10390	# delay slot filled
	l.addi  	r4,r0,3	 # move immediate I
	l.lwz   	r3,60(r16)	 # SI load
	l.lhz   	r16,14(r16)	 # zero_extendqisi2
	l.lhz   	r3,22(r3)	 # zero_extendqisi2
	l.jal   	__divsi3	# delay slot filled
	l.add   	r3,r3,r3
	l.sfles 	r16,r11
	l.bf	.L10390
	l.nop			# nop delay slot
.L10403:
	l.jal   	balance_nonroot	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
.L10390:
	l.addi	r1,r1,48
.L10419:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L10410:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r16)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10390	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbz   	r3,1(r16)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L10411	# delay slot filled
	l.ori   	r4,r1,0	 # move reg to reg
.L10391:
	l.lhz   	r3,16(r16)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L10390	# delay slot filled
	l.addi  	r4,r0,6	 # move immediate I
	l.lwz   	r14,92(r14)	 # SI load
	l.lwz   	r22,60(r14)	 # SI load
	l.lhz   	r3,20(r22)	 # zero_extendqisi2
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r3,r3,-8
	l.add   	r3,r11,r11
	l.ori   	r16,r11,0	 # move reg to reg
	l.add   	r3,r3,r11
	l.jal   	sqlite3Malloc	# delay slot filled
	l.add   	r3,r3,r3
	l.sfeqi	r11,0
	l.bf	.L10405	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lbz   	r20,3(r14)	 # zero_extendqisi2
	l.sfnei	r20,0
	l.bnf	.L10412
	l.nop			# nop delay slot
.L10397:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.j     	.L10419	# delay slot filled
	l.addi	r1,r1,48
.L10405:
	l.j     	.L10390	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
.L10411:
	l.lwz   	r18,92(r14)	 # SI load
	l.lwz   	r20,60(r18)	 # SI load
	l.addi  	r5,r1,4
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r6,72(r18)	 # SI load
	l.jal   	allocateBtreePage	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L10413
	l.nop			# nop delay slot
	l.j     	.L10390	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10413:
	l.lbz   	r3,5(r18)	 # zero_extendqisi2
	l.lwz   	r24,64(r18)	 # SI load
	l.lhz   	r5,16(r18)	 # zero_extendqisi2
	l.add   	r4,r24,r3
	l.lwz   	r7,0(r1)	 # SI load
	l.lbz   	r22,5(r4)	 # zero_extendqisi2
	l.add   	r5,r5,r5
	l.lhz   	r6,12(r18)	 # zero_extendqisi2
	l.lwz   	r26,64(r7)	 # SI load
	l.sub   	r5,r5,r3
	l.lbz   	r7,6(r4)	 # zero_extendqisi2
	l.slli  	r22,r22,8
	l.add   	r5,r5,r6
	l.lhz   	r28,22(r20)	 # zero_extendqisi2
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.or    	r22,r22,r7
	l.add   	r3,r26,r22
	l.add   	r4,r24,r22
	l.jal   	memcpy	# delay slot filled
	l.sub   	r5,r28,r22
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L10414
	l.nop			# nop delay slot
.L10392:
	l.lwz   	r3,0(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10419	# delay slot filled
	l.addi	r1,r1,48
.L10412:
	l.lbz   	r2,5(r14)	 # zero_extendqisi2
	l.lwz   	r3,64(r14)	 # SI load
	l.addi  	r2,r2,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r3,r2
	l.lwz   	r3,60(r14)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r1,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10397	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,72(r14)	 # SI load
	l.sfnei	r3,1
	l.bnf	.L10415	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
	l.lwz   	r3,60(r14)	 # SI load
	l.lhz   	r5,22(r3)	 # zero_extendqisi2
	l.lwz   	r4,64(r4)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.lwz   	r3,64(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.sb    	0(r14),r2	    # movqi
	l.lwz   	r3,0(r1)	 # SI load
	l.jal   	freePage	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10399:
	l.sub   	r3,r0,r2
	l.or    	r3,r3,r2
	l.sfltsi	r3,0
	l.bnf	.L10416
	l.nop			# nop delay slot
.L10402:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.j     	.L10397
	l.nop			# nop delay slot
.L10414:
	l.lbz   	r5,1(r18)	 # zero_extendqisi2
	l.lwz   	r3,0(r1)	 # SI load
	l.slli  	r5,r5,3
	l.addi  	r3,r3,20
	l.jal   	memcpy	# delay slot filled
	l.addi  	r4,r18,20
	l.lbz   	r4,1(r18)	 # zero_extendqisi2
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L10393	# delay slot filled
	l.sb    	1(r3),r4	    # movqi
	l.sh    	14(r3),r2	 # movhi
.L10393:
	l.lwz   	r4,64(r3)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.jal   	zeroPage	# delay slot filled
	l.andi  	r4,r4,247
	l.lbz   	r3,5(r18)	 # zero_extendqisi2
	l.lwz   	r4,4(r1)	 # SI load
	l.lwz   	r8,64(r18)	 # SI load
	l.addi  	r3,r3,8
	l.srli  	r7,r4,24
	l.srli  	r6,r4,16
	l.srli  	r5,r4,8
	l.add   	r3,r8,r3
	l.sb    	0(r3),r7	    # movqi
	l.sb    	1(r3),r6	    # movqi
	l.sb    	2(r3),r5	    # movqi
	l.sb    	3(r3),r4	    # movqi
	l.lbz   	r3,18(r20)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L10417	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
.L10394:
	l.lhz   	r3,88(r14)	 # zero_extendqisi2
	l.lwz   	r4,0(r1)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	96(r14),r4	 # SI store
	l.addi  	r4,r0,0	 # movhi: move immediate
	l.sh    	88(r14),r3	 # movhi
	l.sh    	172(r14),r4	 # movhi
	l.jal   	balance_nonroot	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L10391
	l.nop			# nop delay slot
	l.j     	.L10390	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10415:
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10397	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.lhz   	r4,14(r3)	 # zero_extendqisi2
	l.sfleui	r4,99
	l.bf	.L10399
	l.nop			# nop delay slot
	l.lwz   	r3,64(r3)	 # SI load
	l.slli  	r16,r16,2
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	zeroPage	# delay slot filled
	l.add   	r24,r18,r16
	l.lwz   	r3,0(r1)	 # SI load
	l.lhz   	r5,16(r3)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L10400	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r20,r18,0	 # move reg to reg
	l.ori   	r16,r24,0	 # move reg to reg
.L10401:
	l.lhz   	r7,12(r3)	 # zero_extendqisi2
	l.add   	r5,r2,r2
	l.lwz   	r4,64(r3)	 # SI load
	l.add   	r5,r7,r5
	l.lhz   	r7,18(r3)	 # zero_extendqisi2
	l.add   	r5,r4,r5
	l.addi  	r2,r2,1
	l.lbz   	r11,0(r5)	 # zero_extendqisi2
	l.lbz   	r8,1(r5)	 # zero_extendqisi2
	l.slli  	r5,r11,8
	l.or    	r5,r8,r5
	l.and   	r5,r5,r7
	l.add   	r4,r4,r5
	l.sw    	0(r20),r4	 # SI store
	l.jal   	cellSizePtr	# delay slot filled
	l.addi  	r20,r20,4
	l.lwz   	r3,0(r1)	 # SI load
	l.sh    	0(r16),r11	 # movhi
	l.lhz   	r4,16(r3)	 # zero_extendqisi2
	l.sflts 	r2,r4
	l.bf	.L10401	# delay slot filled
	l.addi  	r16,r16,2
.L10400:
	l.ori   	r6,r24,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	assemblePage	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.lbz   	r2,5(r14)	 # zero_extendqisi2
	l.lbz   	r3,5(r4)	 # zero_extendqisi2
	l.lwz   	r4,64(r4)	 # SI load
	l.addi  	r3,r3,8
	l.lwz   	r5,64(r14)	 # SI load
	l.add   	r3,r4,r3
	l.addi  	r2,r2,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r2,r5,r2
	l.srli  	r3,r11,8
	l.srli  	r5,r11,24
	l.srli  	r4,r11,16
	l.sb    	2(r2),r3	    # movqi
	l.sb    	0(r2),r5	    # movqi
	l.sb    	1(r2),r4	    # movqi
	l.sb    	3(r2),r11	    # movqi
	l.jal   	freePage	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.j     	.L10399	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10416:
	l.lbz   	r3,18(r22)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L10402
	l.nop			# nop delay slot
	l.jal   	setChildPtrmaps	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L10402	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10417:
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,72(r4)	 # SI load
	l.addi  	r5,r0,5	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.lwz   	r6,72(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L10418
	l.nop			# nop delay slot
	l.lwz   	r2,0(r1)	 # SI load
.L10420:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.j     	.L10392	# delay slot filled
	l.sb    	1(r2),r3	    # movqi
.L10418:
	l.jal   	setChildPtrmaps	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L10394
	l.nop			# nop delay slot
	l.j     	.L10420	# delay slot filled
	l.lwz   	r2,0(r1)	 # SI load
.LFE467:
	.size	balance, .-balance
	.align	4
.proc	balance_nonroot
	.type	balance_nonroot, @function
balance_nonroot:
.LFB464:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3758:
	l.lhs   	r2,88(r3)	 # extendhisi2_no_sext_mem
	l.addi  	r5,r2,22
	l.addi  	r4,r2,23
	l.slli  	r5,r5,2
	l.slli  	r4,r4,2
	l.sw    	-20(r1),r24	 # SI store
.LCFI3759:
	l.add   	r5,r3,r5
	l.add   	r4,r3,r4
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r4,0(r4)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI3760:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3761:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3762:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3763:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3764:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3765:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3766:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3767:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3768:
	l.addi  	r1,r1,-404
.LCFI3769:
	l.lwz   	r2,60(r4)	 # SI load
	l.sw    	24(r1),r3	 # SI store
	l.lwz   	r3,68(r5)	 # SI load
	l.sw    	32(r1),r5	 # SI store
	l.sw    	28(r1),r4	 # SI store
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.sw    	16(r1),r2	 # SI store
	l.sfnei	r11,0
	l.bf	.L10422	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r3,28(r1)	 # SI load
	l.lbz   	r4,3(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L10575	# delay slot filled
	l.lwz   	r6,28(r1)	 # SI load
	l.lbz   	r4,2(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L10575
	l.nop			# nop delay slot
	l.lbz   	r16,1(r3)	 # zero_extendqisi2
	l.sfnei	r16,1
	l.bnf	.L10543
	l.nop			# nop delay slot
.L10575:
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r6)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L10544	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
.L10422:
	l.jal   	pcache1Free	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.jal   	sqlite3ScratchFree	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.L10505:
	l.lwz   	r6,24(r1)	 # SI load
.L10570:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.lhs   	r2,88(r6)	 # extendhisi2_no_sext_mem
	l.addi  	r2,r2,23
	l.slli  	r2,r2,2
	l.add   	r2,r6,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.sb    	1(r2),r3	    # movqi
.L10428:
	l.addi	r1,r1,404
.L10568:
	l.ori   	r11,r24,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L10544:
	l.lwz   	r2,24(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.lhs   	r4,88(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r4,r4,85
	l.lhz   	r5,16(r3)	 # zero_extendqisi2
	l.add   	r4,r4,r4
	l.add   	r4,r2,r4
	l.lhz   	r4,0(r4)	 # zero_extendqisi2
	l.addi  	r6,r4,1
	l.sflts 	r6,r5
	l.bnf	.L10545	# delay slot filled
	l.addi  	r4,r4,-1
.L10429:
	l.xori  	r6,r4,0xffff
	l.addi  	r2,r0,0	 # move immediate I
	l.srai  	r6,r6,31
	l.addi  	r3,r1,312
	l.addi  	r26,r1,288
	l.and   	r6,r4,r6
	l.sw    	68(r1),r3	 # SI store
	l.ori   	r16,r6,0	 # move reg to reg
	l.sw    	48(r1),r6	 # SI store
	l.sw    	20(r1),r2	 # SI store
	l.add   	r18,r6,r6
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r20,r2,0	 # move reg to reg
	l.addi  	r22,r1,324
	l.addi  	r28,r1,300
	l.lwz   	r30,32(r1)	 # SI load
	l.ori   	r24,r2,0	 # move reg to reg
	l.sfles 	r5,r16
	l.bf	.L10431	# delay slot filled
	l.add   	r6,r26,r2
.L10546:
	l.lhz   	r5,12(r30)	 # zero_extendqisi2
	l.lwz   	r7,64(r30)	 # SI load
	l.add   	r5,r5,r18
	l.lhz   	r4,18(r30)	 # zero_extendqisi2
	l.add   	r5,r7,r5
	l.lbz   	r11,0(r5)	 # zero_extendqisi2
	l.lbz   	r8,1(r5)	 # zero_extendqisi2
	l.slli  	r5,r11,8
	l.or    	r5,r8,r5
	l.and   	r4,r5,r4
	l.add   	r4,r7,r4
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sw    	0(r6),r4	 # SI store
	l.ori   	r4,r11,0	 # move reg to reg
	l.sw    	0(r14),r11	 # SI store
.L10432:
	l.slli  	r5,r24,2
	l.lwz   	r3,16(r1)	 # SI load
	l.addi  	r18,r18,2
	l.jal   	getAndInitPage	# delay slot filled
	l.add   	r5,r22,r5
	l.add   	r5,r28,r2
	l.sfnei	r11,0
	l.bf	.L10508	# delay slot filled
	l.add   	r4,r22,r2
	l.lwz   	r4,0(r4)	 # SI load
	l.sw    	0(r5),r11	 # SI store
	l.lhz   	r5,16(r4)	 # zero_extendqisi2
	l.lbz   	r4,1(r4)	 # zero_extendqisi2
	l.add   	r4,r5,r4
	l.addi  	r24,r24,1
	l.addi  	r4,r4,1
	l.addi  	r2,r2,4
	l.add   	r20,r20,r4
	l.sfeqi	r24,3
	l.bf	.L10433	# delay slot filled
	l.addi  	r14,r14,4
	l.lhz   	r5,16(r30)	 # zero_extendqisi2
	l.addi  	r16,r16,1
	l.sfles 	r5,r16
	l.bnf	.L10546	# delay slot filled
	l.add   	r6,r26,r2
.L10431:
	l.sfne 	r16,r5
	l.bf	.L10433
	l.nop			# nop delay slot
	l.lbz   	r4,5(r30)	 # zero_extendqisi2
	l.lwz   	r5,64(r30)	 # SI load
	l.addi  	r4,r4,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r5,r4
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L10432	# delay slot filled
	l.sw    	0(r14),r11	 # SI store
.L10433:
	l.addi  	r5,r0,-4	 # move immediate I
	l.addi  	r14,r20,3
	l.lwz   	r4,16(r1)	 # SI load
	l.and   	r14,r14,r5
	l.lhz   	r2,20(r4)	 # zero_extendqisi2
	l.add   	r16,r14,r14
	l.lbz   	r6,18(r4)	 # zero_extendqisi2
	l.add   	r8,r2,r2
	l.add   	r5,r16,r14
	l.sw    	20(r1),r24	 # SI store
	l.add   	r8,r8,r2
	l.add   	r5,r5,r5
	l.sfnei	r6,0
	l.bnf	.L10547	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
.L10436:
	l.addi  	r11,r2,240
	l.movhi  	r6,hi(sqlite3Config)
	l.add   	r11,r11,r8
	l.ori   	r6,r6,lo(sqlite3Config)
	l.add   	r5,r11,r5
	l.lwz   	r8,156(r6)	 # SI load
	l.add   	r5,r5,r7
	l.sfgts 	r5,r8
	l.bf	.L10437	# delay slot filled
	l.movhi  	r7,hi(mem0)
	l.ori   	r7,r7,lo(mem0)
	l.lwz   	r11,0(r7)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L10437	# delay slot filled
	l.movhi  	r2,hi(sqlite3Stat)
	l.addi  	r12,r11,-1
	l.ori   	r2,r2,lo(sqlite3Stat)
	l.slli  	r13,r12,2
	l.lwz   	r11,12(r2)	 # SI load
	l.lwz   	r15,32(r7)	 # SI load
	l.sw    	0(r7),r12	 # SI store
	l.addi  	r11,r11,1
	l.add   	r7,r15,r13
	l.lwz   	r12,48(r2)	 # SI load
	l.lwz   	r7,0(r7)	 # SI load
	l.sw    	12(r2),r11	 # SI store
	l.sfles 	r11,r12
	l.bnf	.L10548	# delay slot filled
	l.mul   	r8,r7,r8
.L10438:
	l.lwz   	r7,68(r2)	 # SI load
	l.sfles 	r5,r7
	l.bf	.L10439	# delay slot filled
	l.sw    	32(r2),r5	 # SI store
	l.movhi  	r7,hi(sqlite3Stat)
	l.ori   	r7,r7,lo(sqlite3Stat)
	l.sw    	68(r7),r5	 # SI store
.L10439:
	l.lwz   	r5,152(r6)	 # SI load
	l.add   	r5,r5,r8
	l.sw    	40(r1),r5	 # SI store
	l.j     	.L10440	# delay slot filled
	l.sw    	336(r1),r5	 # SI store
.L10437:
	l.lwz   	r7,0(r6)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L10441	# delay slot filled
	l.movhi  	r2,hi(sqlite3Stat)
	l.ori   	r2,r2,lo(sqlite3Stat)
	l.lwz   	r7,68(r2)	 # SI load
	l.sfles 	r5,r7
	l.bf	.L10442	# delay slot filled
	l.sw    	32(r2),r5	 # SI store
	l.sw    	68(r2),r5	 # SI store
.L10442:
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	mallocWithAlarm	# delay slot filled
	l.addi  	r4,r1,336
	l.lwz   	r6,336(r1)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L10440	# delay slot filled
	l.sw    	40(r1),r6	 # SI store
	l.lwz   	r5,16(r2)	 # SI load
	l.lwz   	r7,52(r2)	 # SI load
	l.add   	r5,r11,r5
	l.sfles 	r5,r7
	l.bf	.L10440	# delay slot filled
	l.sw    	16(r2),r5	 # SI store
	l.movhi  	r7,hi(sqlite3Stat)
	l.ori   	r7,r7,lo(sqlite3Stat)
	l.sw    	52(r7),r5	 # SI store
.L10440:
	l.lwz   	r2,40(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L10510	# delay slot filled
	l.sw    	88(r1),r2	 # SI store
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r4,40(r1)	 # SI load
	l.lhz   	r2,20(r3)	 # zero_extendqisi2
	l.add   	r26,r4,r14
	l.addi  	r5,r2,80
	l.add   	r16,r26,r16
	l.lbz   	r6,18(r3)	 # zero_extendqisi2
	l.add   	r7,r16,r5
	l.sw    	64(r1),r6	 # SI store
	l.add   	r6,r7,r5
	l.lwz   	r3,64(r1)	 # SI load
	l.sw    	284(r1),r6	 # SI store
	l.add   	r6,r6,r5
	l.sw    	276(r1),r16	 # SI store
	l.sw    	280(r1),r7	 # SI store
	l.sfeqi	r3,0
	l.bf	.L10444	# delay slot filled
	l.sw    	80(r1),r6	 # SI store
	l.add   	r4,r6,r2
	l.sw    	64(r1),r4	 # SI store
.L10444:
	l.jal   	pcache1Alloc	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L10512	# delay slot filled
	l.sw    	72(r1),r11	 # SI store
	l.lwz   	r5,20(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L10445	# delay slot filled
	l.addi  	r6,r1,324
	l.addi  	r20,r0,0	 # move immediate I
	l.sw    	56(r1),r6	 # SI store
	l.ori   	r18,r6,0	 # move reg to reg
	l.ori   	r22,r20,0	 # move reg to reg
	l.addi  	r24,r1,276
	l.lwz   	r14,16(r1)	 # SI load
	l.ori   	r28,r5,0	 # move reg to reg
.L10447:
	l.addi  	r3,r1,300
	l.lwz   	r4,0(r18)	 # SI load
	l.add   	r2,r3,r20
	l.addi  	r5,r0,76	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	0(r2),r16	 # SI store
	l.jal   	memcpy	# delay slot filled
	l.addi  	r22,r22,1
	l.addi  	r3,r16,76
	l.lwz   	r2,0(r18)	 # SI load
	l.sw    	64(r16),r3	 # SI store
	l.lhz   	r5,20(r14)	 # zero_extendqisi2
	l.lwz   	r4,64(r2)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.addi  	r20,r20,4
	l.addi  	r18,r18,4
	l.sfges 	r22,r28
	l.bf	.L10446	# delay slot filled
	l.add   	r2,r24,r20
	l.j     	.L10447	# delay slot filled
	l.lwz   	r16,0(r2)	 # SI load
.L10545:
	l.j     	.L10429	# delay slot filled
	l.addi  	r4,r5,-2
.L10547:
	l.j     	.L10436	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
.L10441:
	l.movhi  	r7,hi(sqlite3Config)
	l.ori   	r7,r7,lo(sqlite3Config)
	l.lwz   	r11,24(r7)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.sw    	40(r1),r11	 # SI store
	l.j     	.L10440	# delay slot filled
	l.sw    	336(r1),r11	 # SI store
.L10543:
	l.lhz   	r5,24(r3)	 # zero_extendqisi2
	l.lhz   	r4,16(r3)	 # zero_extendqisi2
	l.sfne 	r5,r4
	l.bf	.L10575	# delay slot filled
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r5,32(r1)	 # SI load
	l.lwz   	r4,72(r5)	 # SI load
	l.sfeqi	r4,1
	l.bf	.L10575
	l.nop			# nop delay slot
	l.lbz   	r4,5(r5)	 # zero_extendqisi2
	l.lwz   	r5,64(r5)	 # SI load
	l.addi  	r4,r4,8
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r5,r4
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r4,72(r6)	 # SI load
	l.sfne 	r11,r4
	l.bf	.L10575	# delay slot filled
	l.lwz   	r2,24(r1)	 # SI load
	l.ori   	r6,r24,0	 # move reg to reg
	l.lhs   	r4,88(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r5,r4,23
	l.addi  	r4,r4,22
	l.slli  	r5,r5,2
	l.slli  	r4,r4,2
	l.ori   	r7,r24,0	 # move reg to reg
	l.add   	r5,r2,r5
	l.add   	r4,r2,r4
	l.lwz   	r2,0(r5)	 # SI load
	l.lwz   	r14,0(r4)	 # SI load
	l.lwz   	r18,60(r2)	 # SI load
	l.addi  	r4,r1,352
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r5,r1,348
	l.sw    	352(r1),r24	 # SI store
	l.jal   	allocateBtreePage	# delay slot filled
	l.lhz   	r20,16(r14)	 # zero_extendqisi2
	l.sfnei	r11,0
	l.bnf	.L10549	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.sb    	0(r2),r4	    # movqi
	l.j     	.L10568	# delay slot filled
	l.addi	r1,r1,404
.L10446:
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r2,20(r1)	 # SI load
	l.lbz   	r7,3(r4)	 # zero_extendqisi2
	l.lbz   	r6,4(r4)	 # zero_extendqisi2
	l.slli  	r7,r7,2
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r2,r2,-1
	l.sw    	52(r1),r26	 # SI store
	l.sw    	12(r1),r5	 # SI store
	l.sw    	92(r1),r7	 # SI store
	l.sw    	76(r1),r6	 # SI store
	l.sw    	60(r1),r2	 # SI store
	l.sw    	84(r1),r5	 # SI store
	l.ori   	r30,r5,0	 # move reg to reg
	l.ori   	r28,r5,0	 # move reg to reg
	l.lwz   	r26,16(r1)	 # SI load
.L10460:
	l.addi  	r3,r1,300
	l.lwz   	r4,12(r1)	 # SI load
	l.add   	r2,r3,r4
	l.lwz   	r14,0(r2)	 # SI load
	l.lbz   	r5,1(r14)	 # zero_extendqisi2
	l.lhz   	r2,16(r14)	 # zero_extendqisi2
	l.add   	r24,r5,r2
	l.sfeqi	r24,0
	l.bf	.L10448	# delay slot filled
	l.add   	r6,r28,r28
	l.slli  	r7,r28,2
	l.addi  	r4,r14,28
	l.lwz   	r5,64(r1)	 # SI load
	l.lwz   	r2,40(r1)	 # SI load
	l.lwz   	r3,52(r1)	 # SI load
	l.add   	r22,r5,r28
	l.sw    	44(r1),r28	 # SI store
	l.add   	r18,r2,r7
	l.add   	r20,r3,r6
	l.addi  	r16,r0,0	 # move immediate I
	l.sw    	36(r1),r4	 # SI store
	l.ori   	r28,r4,0	 # move reg to reg
.L10454:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	findOverflowCell	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	0(r18),r11	 # SI store
	l.jal   	cellSizePtr	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sh    	0(r20),r11	 # movhi
	l.lbz   	r2,18(r26)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L10449
	l.nop			# nop delay slot
	l.sb    	0(r22),r30	    # movqi
	l.lbz   	r8,1(r14)	 # zero_extendqisi2
	l.sfeqi	r8,0
	l.bf	.L10449
	l.nop			# nop delay slot
	l.lwz   	r7,0(r18)	 # SI load
	l.lwz   	r2,20(r14)	 # SI load
	l.sfeq 	r2,r7
	l.bf	.L10450	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
	l.j     	.L10452	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L10453:
	l.lwz   	r2,0(r6)	 # SI load
	l.sfne 	r2,r7
	l.bnf	.L10450	# delay slot filled
	l.addi  	r6,r6,8
.L10452:
	l.addi  	r5,r5,1
	l.sflts 	r5,r8
	l.bf	.L10453
	l.nop			# nop delay slot
.L10449:
	l.addi  	r16,r16,1
	l.addi  	r18,r18,4
	l.addi  	r20,r20,2
	l.sfgts 	r24,r16
	l.bf	.L10454	# delay slot filled
	l.addi  	r22,r22,1
	l.lwz   	r28,44(r1)	 # SI load
.L10569:
	l.add   	r28,r28,r24
.L10448:
	l.lwz   	r6,60(r1)	 # SI load
	l.sfges 	r30,r6
	l.bnf	.L10550	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
.L10455:
	l.lwz   	r6,12(r1)	 # SI load
.L10571:
	l.addi  	r30,r30,1
	l.addi  	r6,r6,4
	l.lwz   	r2,20(r1)	 # SI load
	l.sflts 	r30,r2
	l.bf	.L10460	# delay slot filled
	l.sw    	12(r1),r6	 # SI store
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r4,92(r1)	 # SI load
	l.lhz   	r7,22(r3)	 # zero_extendqisi2
	l.sw    	80(r1),r28	 # SI store
	l.addi  	r7,r7,-12
	l.lwz   	r26,52(r1)	 # SI load
	l.sflesi	r28,0
	l.bf	.L10461	# delay slot filled
	l.add   	r7,r7,r4
	l.addi  	r8,r0,0	 # move immediate I
	l.lwz   	r5,76(r1)	 # SI load
	l.ori   	r30,r8,0	 # move reg to reg
	l.ori   	r2,r8,0	 # move reg to reg
	l.add   	r3,r2,r2
.L10576:
	l.addi  	r8,r8,2
	l.add   	r3,r26,r3
	l.slli  	r4,r30,2
	l.lhz   	r3,0(r3)	 # zero_extendqisi2
	l.addi  	r6,r1,360
	l.add   	r8,r8,r3
	l.add   	r4,r6,r4
	l.sfges 	r7,r8
	l.bf	.L10462	# delay slot filled
	l.sub   	r3,r8,r3
	l.addi  	r8,r0,0	 # move immediate I
	l.sw    	-144(r4),r2	 # SI store
	l.sw    	-164(r4),r3	 # SI store
	l.sfeq 	r5,r8
	l.bf	.L10462	# delay slot filled
	l.addi  	r30,r30,1
	l.addi  	r2,r2,-1
.L10462:
	l.addi  	r2,r2,1
	l.sflts 	r2,r28
	l.bf	.L10576	# delay slot filled
	l.add   	r3,r2,r2
	l.slli  	r5,r30,2
	l.addi  	r3,r1,360
	l.addi  	r2,r30,1
	l.add   	r5,r3,r5
	l.sw    	12(r1),r2	 # SI store
	l.sw    	-164(r5),r8	 # SI store
	l.sfeqi	r30,0
	l.bf	.L10514	# delay slot filled
	l.sw    	-144(r5),r28	 # SI store
	l.addi  	r5,r30,-1
	l.addi  	r22,r1,196
	l.slli  	r5,r5,2
	l.addi  	r4,r1,216
	l.addi  	r18,r0,-2	 # move immediate I
	l.add   	r20,r22,r5
	l.add   	r16,r4,r5
	l.lwz   	r19,76(r1)	 # SI load
.L10469:
	l.lwz   	r15,0(r16)	 # SI load
	l.lwz   	r17,0(r20)	 # SI load
	l.addi  	r14,r15,-1
	l.j     	.L10466	# delay slot filled
	l.sub   	r13,r15,r19
.L10552:
	l.lhz   	r6,0(r3)	 # zero_extendqisi2
	l.lhz   	r5,0(r5)	 # zero_extendqisi2
	l.add   	r4,r11,r6
	l.sub   	r3,r7,r5
	l.sflts 	r4,r3
	l.bnf	.L10551	# delay slot filled
	l.sfeq 	r20,r22
.L10468:
	l.addi  	r3,r6,2
	l.sub   	r2,r18,r5
	l.sw    	0(r16),r15	 # SI store
	l.add   	r8,r8,r3
	l.add   	r17,r17,r2
.L10466:
	l.add   	r3,r13,r13
	l.add   	r5,r14,r14
	l.addi  	r14,r15,-2
	l.add   	r3,r26,r3
	l.add   	r5,r26,r5
	l.sub   	r2,r14,r19
	l.ori   	r6,r3,0	 # move reg to reg
	l.ori   	r4,r5,0	 # move reg to reg
	l.addi  	r15,r15,-1
	l.addi  	r11,r8,1
	l.addi  	r7,r17,-2
	l.sfeqi	r8,0
	l.bnf	.L10552	# delay slot filled
	l.addi  	r13,r2,1
	l.lhz   	r6,0(r6)	 # zero_extendqisi2
	l.j     	.L10468	# delay slot filled
	l.lhz   	r5,0(r4)	 # zero_extendqisi2
.L10450:
	l.addi  	r5,r0,-1	 # movqi: move immediate
	l.addi  	r16,r16,1
	l.sb    	0(r22),r5	    # movqi
	l.addi  	r18,r18,4
	l.addi  	r20,r20,2
	l.sfgts 	r24,r16
	l.bf	.L10454	# delay slot filled
	l.addi  	r22,r22,1
	l.j     	.L10569	# delay slot filled
	l.lwz   	r28,44(r1)	 # SI load
.L10551:
	l.sw    	4(r20),r8	 # SI store
	l.sw    	0(r20),r17	 # SI store
	l.bf	.L10465	# delay slot filled
	l.addi  	r16,r16,-4
	l.ori   	r8,r17,0	 # move reg to reg
	l.j     	.L10469	# delay slot filled
	l.addi  	r20,r20,-4
.L10445:
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.lbz   	r7,3(r6)	 # zero_extendqisi2
	l.lbz   	r2,4(r6)	 # zero_extendqisi2
	l.slli  	r7,r7,2
	l.addi  	r4,r1,324
	l.sw    	76(r1),r2	 # SI store
	l.sw    	92(r1),r7	 # SI store
	l.sw    	80(r1),r3	 # SI store
	l.sw    	56(r1),r4	 # SI store
.L10461:
	l.lwz   	r5,80(r1)	 # SI load
	l.addi  	r6,r0,1	 # move immediate I
	l.sw    	216(r1),r5	 # SI store
	l.addi  	r30,r0,0	 # move immediate I
	l.sw    	12(r1),r6	 # SI store
.L10465:
	l.lwz   	r6,28(r1)	 # SI load
	l.addi  	r2,r1,256
	l.lwz   	r5,64(r6)	 # SI load
	l.addi  	r14,r1,236
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	100(r1),r2	 # SI store
	l.ori   	r28,r2,0	 # move reg to reg
	l.sw    	52(r1),r30	 # SI store
	l.lwz   	r18,56(r1)	 # SI load
	l.sw    	60(r1),r5	 # SI store
	l.sw    	96(r1),r14	 # SI store
	l.ori   	r22,r14,0	 # move reg to reg
	l.addi  	r20,r0,1	 # move immediate I
	l.sw    	44(r1),r3	 # SI store
	l.addi  	r2,r1,352
	l.sw    	84(r1),r26	 # SI store
	l.ori   	r24,r3,0	 # move reg to reg
	l.j     	.L10473	# delay slot filled
	l.lwz   	r30,68(r1)	 # SI load
.L10556:
	l.lwz   	r4,0(r18)	 # SI load
	l.lwz   	r5,0(r30)	 # SI load
	l.lwz   	r3,68(r4)	 # SI load
	l.sw    	0(r28),r4	 # SI store
	l.sw    	0(r22),r5	 # SI store
	l.sw    	0(r18),r7	 # SI store
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.sw    	352(r1),r4	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L10554	# delay slot filled
	l.addi  	r28,r28,4
	l.lwz   	r3,12(r1)	 # SI load
	l.addi  	r20,r20,1
	l.addi  	r18,r18,4
	l.addi  	r30,r30,4
	l.sfgts 	r3,r16
	l.bnf	.L10555	# delay slot filled
	l.addi  	r22,r22,4
.L10516:
	l.ori   	r24,r16,0	 # move reg to reg
.L10473:
	l.slli  	r5,r24,2
	l.lwz   	r6,20(r1)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.add   	r5,r14,r5
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r16,r24,1
	l.sfles 	r6,r24
	l.bnf	.L10556	# delay slot filled
	l.ori   	r26,r20,0	 # move reg to reg
	l.jal   	allocateBtreePage	# delay slot filled
	l.lwz   	r6,-4(r22)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10515	# delay slot filled
	l.lwz   	r4,352(r1)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
	l.sw    	0(r28),r4	 # SI store
	l.addi  	r20,r20,1
	l.addi  	r18,r18,4
	l.addi  	r28,r28,4
	l.addi  	r30,r30,4
	l.sfgts 	r3,r16
	l.bf	.L10516	# delay slot filled
	l.addi  	r22,r22,4
.L10555:
	l.sw    	36(r1),r26	 # SI store
	l.lwz   	r4,20(r1)	 # SI load
	l.sw    	44(r1),r24	 # SI store
	l.lwz   	r30,52(r1)	 # SI load
	l.sfles 	r4,r16
	l.bf	.L10474	# delay slot filled
	l.lwz   	r26,84(r1)	 # SI load
	l.slli  	r5,r16,2
	l.lwz   	r6,56(r1)	 # SI load
	l.ori   	r18,r4,0	 # move reg to reg
	l.j     	.L10475	# delay slot filled
	l.add   	r2,r6,r5
.L10557:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.sw    	0(r2),r24	 # SI store
	l.sflts 	r16,r18
	l.bnf	.L10474	# delay slot filled
	l.addi  	r2,r2,4
.L10475:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	freePage	# delay slot filled
	l.addi  	r16,r16,1
	l.sfnei	r11,0
	l.bnf	.L10557	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
.L10434:
	l.jal   	pcache1Free	# delay slot filled
	l.lwz   	r3,72(r1)	 # SI load
	l.jal   	sqlite3ScratchFree	# delay slot filled
	l.lwz   	r3,88(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.sflesi	r3,0
	l.bf	.L10503	# delay slot filled
	l.addi  	r4,r1,324
	l.sw    	56(r1),r4	 # SI store
	l.lwz   	r14,56(r1)	 # SI load
.L10573:
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r16,20(r1)	 # SI load
.L10504:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r2,r2,1
	l.sflts 	r2,r16
	l.bf	.L10504	# delay slot filled
	l.addi  	r14,r14,4
.L10503:
	l.lwz   	r5,36(r1)	 # SI load
	l.sflesi	r5,0
	l.bf	.L10505	# delay slot filled
	l.addi  	r14,r1,256
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r16,r5,0	 # move reg to reg
.L10506:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r2,r2,1
	l.sflts 	r2,r16
	l.bf	.L10506	# delay slot filled
	l.addi  	r14,r14,4
	l.j     	.L10570	# delay slot filled
	l.lwz   	r6,24(r1)	 # SI load
.L10550:
	l.addi  	r3,r1,288
	l.add   	r2,r3,r4
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r16,0(r2)	 # SI load
	l.jal   	cellSizePtr	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r5,76(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L10456	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r4,48(r1)	 # SI load
	l.jal   	dropCell	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.j     	.L10571	# delay slot filled
	l.lwz   	r6,12(r1)	 # SI load
.L10456:
	l.lwz   	r4,84(r1)	 # SI load
	l.lwz   	r3,80(r1)	 # SI load
	l.lwz   	r5,52(r1)	 # SI load
	l.add   	r6,r28,r28
	l.add   	r2,r3,r4
	l.add   	r20,r5,r6
	l.lwz   	r6,84(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.add   	r6,r6,r11
	l.sh    	0(r20),r11	 # movhi
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.sw    	84(r1),r6	 # SI store
	l.slli  	r6,r28,2
	l.lwz   	r3,92(r1)	 # SI load
	l.lwz   	r4,40(r1)	 # SI load
	l.add   	r2,r2,r3
	l.add   	r16,r4,r6
	l.sw    	0(r16),r2	 # SI store
	l.lbz   	r2,18(r26)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L10577	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r5,64(r1)	 # SI load
	l.addi  	r6,r0,-1	 # movqi: move immediate
	l.add   	r2,r5,r28
	l.sb    	0(r2),r6	    # movqi
	l.lwz   	r3,32(r1)	 # SI load
.L10577:
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	dropCell	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.lhz   	r2,0(r20)	 # zero_extendqisi2
	l.lwz   	r3,92(r1)	 # SI load
	l.sub   	r2,r2,r3
	l.andi  	r2,r2,0xffff	 # zero_extendqisi2
	l.sh    	0(r20),r2	 # movhi
	l.lbz   	r5,3(r14)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bnf	.L10558	# delay slot filled
	l.sfgtui	r2,3
	l.bf	.L10459
	l.nop			# nop delay slot
	l.addi  	r5,r0,4	 # movhi: move immediate
	l.sh    	0(r20),r5	 # movhi
.L10459:
	l.j     	.L10455	# delay slot filled
	l.addi  	r28,r28,1
.L10474:
	l.sfeqi	r30,0
	l.bf	.L10476	# delay slot filled
	l.addi  	r15,r0,0	 # move immediate I
	l.lwz   	r8,12(r1)	 # SI load
	l.lwz   	r11,96(r1)	 # SI load
	l.lwz   	r12,100(r1)	 # SI load
.L10480:
	l.addi  	r7,r15,1
	l.sfles 	r8,r7
	l.bf	.L10477	# delay slot filled
	l.lwz   	r13,0(r11)	 # SI load
	l.slli  	r4,r7,2
	l.ori   	r5,r13,0	 # move reg to reg
	l.ori   	r6,r15,0	 # move reg to reg
	l.add   	r4,r14,r4
	l.ori   	r3,r7,0	 # move reg to reg
.L10479:
	l.lwz   	r2,0(r4)	 # SI load
	l.sfgeu 	r2,r5
	l.bf	.L10478	# delay slot filled
	l.addi  	r4,r4,4
	l.ori   	r6,r3,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
.L10478:
	l.addi  	r3,r3,1
	l.sfne 	r3,r8
	l.bf	.L10479	# delay slot filled
	l.sfges 	r15,r6
	l.bf	.L10477	# delay slot filled
	l.slli  	r2,r6,2
	l.addi  	r3,r1,360
	l.lwz   	r4,0(r12)	 # SI load
	l.add   	r2,r3,r2
	l.addi  	r3,r2,-124
	l.addi  	r2,r2,-104
	l.lwz   	r6,0(r3)	 # SI load
	l.lwz   	r5,0(r2)	 # SI load
	l.sw    	0(r11),r6	 # SI store
	l.sw    	0(r12),r5	 # SI store
	l.sw    	0(r3),r13	 # SI store
	l.sw    	0(r2),r4	 # SI store
.L10477:
	l.addi  	r11,r11,4
	l.sfne 	r7,r30
	l.bnf	.L10476	# delay slot filled
	l.addi  	r12,r12,4
	l.j     	.L10480	# delay slot filled
	l.ori   	r15,r7,0	 # move reg to reg
.L10476:
	l.lwz   	r4,36(r1)	 # SI load
	l.sflesi	r4,0
	l.bf	.L10481	# delay slot filled
	l.lwz   	r5,76(r1)	 # SI load
	l.addi  	r28,r0,0	 # move immediate I
	l.sub   	r12,r0,r5
	l.addi  	r6,r1,216
	l.or    	r12,r12,r5
	l.sw    	68(r1),r28	 # SI store
	l.xori  	r12,r12,0xffff
	l.ori   	r14,r28,0	 # move reg to reg
	l.srli  	r12,r12,31
	l.ori   	r30,r28,0	 # move reg to reg
	l.sw    	56(r1),r26	 # SI store
	l.sw    	12(r1),r28	 # SI store
	l.sw    	84(r1),r12	 # SI store
	l.sw    	52(r1),r6	 # SI store
	l.lwz   	r24,16(r1)	 # SI load
	l.lwz   	r26,64(r1)	 # SI load
	l.lwz   	r28,92(r1)	 # SI load
.L10499:
	l.addi  	r3,r1,256
	l.lwz   	r4,60(r1)	 # SI load
	l.add   	r2,r3,r30
	l.lwz   	r20,0(r2)	 # SI load
	l.jal   	zeroPage	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,52(r1)	 # SI load
	l.slli  	r5,r14,2
	l.add   	r2,r4,r30
	l.add   	r6,r14,r14
	l.lwz   	r22,0(r2)	 # SI load
	l.lwz   	r2,40(r1)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.add   	r18,r2,r5
	l.lwz   	r2,56(r1)	 # SI load
	l.sub   	r4,r22,r14
	l.add   	r6,r2,r6
	l.jal   	assemblePage	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.lbz   	r2,18(r24)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L10578	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.sfges 	r14,r22
	l.bf	.L10578	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L10581	# delay slot filled
	l.add   	r2,r26,r14
.L10485:
	l.sfnei	r11,0
.L10572:
	l.bf	.L10541
	l.nop			# nop delay slot
.L10484:
	l.addi  	r16,r16,1
	l.sfgts 	r22,r14
	l.bnf	.L10482	# delay slot filled
	l.addi  	r18,r18,4
	l.add   	r2,r26,r14
.L10581:
	l.ori   	r4,r16,0	 # move reg to reg
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r14,r14,1
	l.sfeqi	r2,255
	l.bf	.L10483	# delay slot filled
	l.slli  	r5,r2,2
	l.addi  	r6,r1,360
	l.add   	r2,r6,r5
	l.lwz   	r5,72(r20)	 # SI load
	l.lwz   	r2,-60(r2)	 # SI load
	l.lwz   	r2,72(r2)	 # SI load
	l.sfeq 	r2,r5
	l.bf	.L10484
	l.nop			# nop delay slot
.L10483:
	l.jal   	ptrmapPutOvfl
	l.nop			# nop delay slot
	l.or    	r2,r11,r28
	l.sfnei	r2,0
	l.bf	.L10485
	l.nop			# nop delay slot
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.lwz   	r3,0(r18)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,5	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.lwz   	r6,72(r20)	 # SI load
	l.j     	.L10572	# delay slot filled
	l.sfnei	r11,0
.L10482:
	l.lwz   	r3,12(r1)	 # SI load
.L10578:
	l.lwz   	r4,44(r1)	 # SI load
	l.sflts 	r3,r4
	l.bf	.L10489	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.addi  	r2,r0,0	 # movqi: move immediate
.L10489:
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L10518	# delay slot filled
	l.lwz   	r5,80(r1)	 # SI load
	l.sfgts 	r5,r22
	l.bf	.L10490	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.addi  	r2,r0,0	 # movqi: move immediate
.L10490:
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L10487	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
.L10518:
	l.lbz   	r2,18(r24)	 # zero_extendqisi2
	l.ori   	r14,r22,0	 # move reg to reg
.L10491:
	l.sfeqi	r2,0
	l.bnf	.L10559	# delay slot filled
	l.lwz   	r2,32(r1)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
.L10579:
	l.lwz   	r4,36(r1)	 # SI load
	l.addi  	r3,r3,1
	l.addi  	r30,r30,4
	l.sflts 	r3,r4
	l.bf	.L10499	# delay slot filled
	l.sw    	12(r1),r3	 # SI store
.L10481:
	l.lwz   	r5,60(r1)	 # SI load
	l.andi  	r7,r5,8
	l.sfnei	r7,0
	l.bnf	.L10533	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
	l.slli  	r14,r6,2
	l.lwz   	r6,32(r1)	 # SI load
.L10574:
	l.lwz   	r2,48(r1)	 # SI load
	l.lbz   	r12,1(r6)	 # zero_extendqisi2
	l.lhz   	r7,16(r6)	 # zero_extendqisi2
	l.add   	r7,r12,r7
	l.sfne 	r7,r2
	l.bnf	.L10560
	l.nop			# nop delay slot
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	findOverflowCell	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.addi  	r5,r1,360
	l.add   	r14,r5,r14
	l.lwz   	r5,-124(r14)	 # SI load
	l.srli  	r12,r5,24
	l.srli  	r7,r5,16
	l.srli  	r6,r5,8
	l.sb    	0(r11),r12	    # movqi
	l.sb    	1(r11),r7	    # movqi
	l.sb    	2(r11),r6	    # movqi
	l.sb    	3(r11),r5	    # movqi
.L10502:
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,40(r1)	 # SI load
	l.jal   	sqlite3ScratchFree	# delay slot filled
	l.sw    	88(r1),r6	 # SI store
	l.lwz   	r3,28(r1)	 # SI load
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.jal   	releasePage	# delay slot filled
	l.sb    	1(r3),r2	    # movqi
	l.lwz   	r3,24(r1)	 # SI load
	l.lhz   	r4,88(r3)	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.sh    	88(r3),r4	 # movhi
	l.jal   	balance	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L10434	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
.L10487:
	l.add   	r2,r22,r22
	l.lwz   	r3,72(r1)	 # SI load
	l.add   	r2,r6,r2
	l.lwz   	r4,68(r1)	 # SI load
	l.lhz   	r6,0(r2)	 # zero_extendqisi2
	l.slli  	r5,r22,2
	l.add   	r18,r3,r4
	l.lwz   	r3,40(r1)	 # SI load
	l.add   	r14,r28,r6
	l.add   	r2,r3,r5
	l.lwz   	r16,0(r2)	 # SI load
	l.sw    	348(r1),r14	 # SI store
	l.lbz   	r2,3(r20)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L10561	# delay slot filled
	l.lwz   	r5,76(r1)	 # SI load
	l.sfeqi	r5,0
	l.bnf	.L10562	# delay slot filled
	l.sfnei	r6,4
	l.bnf	.L10563	# delay slot filled
	l.addi  	r16,r16,-4
.L10494:
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r4,48(r1)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.jal   	insertCell	# delay slot filled
	l.addi  	r8,r0,4	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L10541	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	findOverflowCell	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r2,72(r20)	 # SI load
	l.lwz   	r3,84(r1)	 # SI load
	l.srli  	r8,r2,24
	l.srli  	r7,r2,16
	l.srli  	r5,r2,8
	l.sb    	0(r11),r8	    # movqi
	l.sb    	1(r11),r7	    # movqi
	l.sb    	2(r11),r5	    # movqi
	l.sb    	3(r11),r2	    # movqi
	l.sfeqi	r3,0
	l.bnf	.L10564	# delay slot filled
	l.lbz   	r2,18(r24)	 # zero_extendqisi2
.L10497:
	l.lwz   	r4,68(r1)	 # SI load
.L10580:
	l.lwz   	r5,48(r1)	 # SI load
	l.add   	r4,r4,r14
	l.addi  	r5,r5,1
	l.sw    	68(r1),r4	 # SI store
	l.addi  	r14,r22,1
	l.j     	.L10491	# delay slot filled
	l.sw    	48(r1),r5	 # SI store
.L10515:
	l.sw    	44(r1),r24	 # SI store
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r2,44(r1)	 # SI load
	l.j     	.L10434	# delay slot filled
	l.sw    	36(r1),r2	 # SI store
.L10554:
	l.lwz   	r3,72(r1)	 # SI load
	l.sw    	36(r1),r20	 # SI store
	l.jal   	pcache1Free	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.jal   	sqlite3ScratchFree	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.j     	.L10573	# delay slot filled
	l.lwz   	r14,56(r1)	 # SI load
.L10559:
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r4,72(r20)	 # SI load
	l.addi  	r5,r0,5	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.lwz   	r6,72(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L10579	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
.L10541:
	l.j     	.L10434	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
.L10510:
	l.lwz   	r5,88(r1)	 # SI load
	l.addi  	r24,r0,7	 # move immediate I
	l.sw    	72(r1),r5	 # SI store
	l.j     	.L10434	# delay slot filled
	l.sw    	36(r1),r5	 # SI store
.L10548:
	l.j     	.L10438	# delay slot filled
	l.sw    	48(r2),r11	 # SI store
.L10563:
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	cellSizePtr	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L10494	# delay slot filled
	l.sw    	348(r1),r11	 # SI store
.L10512:
	l.lwz   	r6,72(r1)	 # SI load
	l.addi  	r24,r0,7	 # move immediate I
	l.j     	.L10434	# delay slot filled
	l.sw    	36(r1),r6	 # SI store
.L10558:
	l.lbz   	r2,5(r14)	 # zero_extendqisi2
	l.lwz   	r5,64(r14)	 # SI load
	l.addi  	r2,r2,8
	l.lwz   	r3,0(r16)	 # SI load
	l.add   	r4,r5,r2
	l.addi  	r5,r0,4	 # move immediate I
	l.jal   	memcpy	# delay slot filled
	l.addi  	r28,r28,1
	l.j     	.L10571	# delay slot filled
	l.lwz   	r6,12(r1)	 # SI load
.L10561:
	l.lwz   	r2,64(r20)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r3,r2,8
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,4	 # move immediate I
	l.lbz   	r2,18(r24)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L10494	# delay slot filled
	l.lwz   	r14,348(r1)	 # SI load
	l.add   	r2,r26,r22
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.sfeqi	r2,255
	l.bf	.L10565	# delay slot filled
	l.slli  	r2,r2,2
	l.addi  	r4,r1,360
	l.lwz   	r14,72(r20)	 # SI load
	l.add   	r2,r4,r2
	l.lwz   	r2,-60(r2)	 # SI load
	l.lwz   	r2,72(r2)	 # SI load
	l.sfne 	r2,r14
	l.bnf	.L10542
	l.nop			# nop delay slot
.L10495:
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,5	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10541
	l.nop			# nop delay slot
.L10542:
	l.j     	.L10494	# delay slot filled
	l.lwz   	r14,348(r1)	 # SI load
.L10508:
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	20(r1),r24	 # SI store
	l.sw    	72(r1),r4	 # SI store
	l.ori   	r24,r11,0	 # move reg to reg
	l.sw    	88(r1),r4	 # SI store
	l.j     	.L10434	# delay slot filled
	l.sw    	36(r1),r4	 # SI store
.L10564:
	l.sfeqi	r2,0
	l.bf	.L10580	# delay slot filled
	l.lwz   	r4,68(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	ptrmapPutOvfl	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10541
	l.nop			# nop delay slot
	l.j     	.L10497	# delay slot filled
	l.lbz   	r2,18(r24)	 # zero_extendqisi2
.L10562:
	l.addi  	r22,r22,-1
	l.lwz   	r6,40(r1)	 # SI load
	l.slli  	r2,r22,2
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r5,r1,168
	l.add   	r2,r6,r2
	l.lwz   	r4,0(r2)	 # SI load
	l.jal   	sqlite3BtreeParseCellPtr	# delay slot filled
	l.addi  	r2,r1,348
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.sw    	0(r1),r5	 # SI store
	l.sw    	4(r1),r5	 # SI store
	l.sw    	8(r1),r2	 # SI store
		l.lwz   	r6, 172(r1)
		l.lwz   	r7, 172+4(r1)
	l.jal   	fillInCell	# delay slot filled
	l.ori   	r8,r5,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10541
	l.nop			# nop delay slot
	l.ori   	r16,r18,0	 # move reg to reg
	l.lwz   	r14,348(r1)	 # SI load
	l.j     	.L10494	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L10549:
	l.lwz   	r5,20(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r5,0	 # move reg to reg
	l.jal   	cellSizePtr	# delay slot filled
	l.sw    	344(r1),r5	 # SI store
	l.lwz   	r4,64(r2)	 # SI load
	l.sh    	358(r1),r11	 # movhi
	l.lwz   	r3,352(r1)	 # SI load
	l.jal   	zeroPage	# delay slot filled
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r6,r1,358
	l.lwz   	r3,352(r1)	 # SI load
	l.addi  	r5,r1,344
	l.jal   	assemblePage	# delay slot filled
	l.addi  	r16,r1,104
	l.lhz   	r4,16(r2)	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.lhz   	r5,12(r2)	 # zero_extendqisi2
	l.add   	r4,r4,r4
	l.lwz   	r6,64(r2)	 # SI load
	l.add   	r4,r4,r5
	l.sb    	1(r2),r24	    # movqi
	l.add   	r4,r6,r4
	l.lhz   	r7,18(r2)	 # zero_extendqisi2
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.lbz   	r8,1(r4)	 # zero_extendqisi2
	l.slli  	r4,r5,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r5,r1,168
	l.or    	r4,r8,r4
	l.and   	r4,r4,r7
	l.add   	r6,r6,r4
	l.ori   	r4,r6,0	 # move reg to reg
	l.jal   	sqlite3BtreeParseCellPtr	# delay slot filled
	l.sw    	344(r1),r6	 # SI store
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r8,r24,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.addi  	r11,r1,340
		l.lwz   	r6, 172(r1)
		l.lwz   	r7, 172+4(r1)
	l.sw    	0(r1),r24	 # SI store
	l.sw    	4(r1),r24	 # SI store
	l.jal   	fillInCell	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r6,340(r1)	 # SI load
	l.ori   	r7,r24,0	 # move reg to reg
	l.addi  	r8,r0,4	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	insertCell	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	findOverflowCell	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,72(r2)	 # SI load
	l.srli  	r7,r4,24
	l.srli  	r6,r4,16
	l.srli  	r5,r4,8
	l.sb    	0(r11),r7	    # movqi
	l.sb    	1(r11),r6	    # movqi
	l.sb    	2(r11),r5	    # movqi
	l.sb    	3(r11),r4	    # movqi
	l.lbz   	r4,5(r14)	 # zero_extendqisi2
	l.lwz   	r5,348(r1)	 # SI load
	l.lwz   	r11,64(r14)	 # SI load
	l.addi  	r4,r4,8
	l.srli  	r8,r5,24
	l.srli  	r7,r5,16
	l.srli  	r6,r5,8
	l.add   	r4,r11,r4
	l.sb    	0(r4),r8	    # movqi
	l.sb    	1(r4),r7	    # movqi
	l.sb    	2(r4),r6	    # movqi
	l.sb    	3(r4),r5	    # movqi
	l.lbz   	r16,18(r18)	 # zero_extendqisi2
	l.sfeqi	r16,0
	l.bnf	.L10566	# delay slot filled
	l.addi  	r5,r0,5	 # move immediate I
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,352(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.sb    	0(r2),r16	    # movqi
.L10507:
	l.jal   	releasePage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,24(r1)	 # SI load
	l.lhz   	r4,88(r5)	 # zero_extendqisi2
	l.addi  	r4,r4,-1
	l.ori   	r3,r5,0	 # move reg to reg
	l.sh    	88(r5),r4	 # movhi
	l.jal   	balance	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L10428	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
.L10560:
	l.addi  	r3,r1,360
	l.lbz   	r4,5(r6)	 # zero_extendqisi2
	l.add   	r14,r3,r14
	l.lwz   	r13,64(r6)	 # SI load
	l.lwz   	r5,-124(r14)	 # SI load
	l.addi  	r4,r4,8
	l.srli  	r12,r5,24
	l.srli  	r7,r5,16
	l.srli  	r6,r5,8
	l.add   	r4,r13,r4
	l.sb    	0(r4),r12	    # movqi
	l.sb    	1(r4),r7	    # movqi
	l.sb    	2(r4),r6	    # movqi
	l.j     	.L10502	# delay slot filled
	l.sb    	3(r4),r5	    # movqi
.L10514:
	l.j     	.L10465	# delay slot filled
	l.sw    	80(r1),r28	 # SI store
.L10565:
	l.j     	.L10495	# delay slot filled
	l.lwz   	r14,72(r20)	 # SI load
.L10533:
	l.lwz   	r2,20(r1)	 # SI load
	l.lwz   	r3,44(r1)	 # SI load
	l.addi  	r7,r2,-1
	l.slli  	r14,r3,2
	l.slli  	r7,r7,2
	l.addi  	r4,r1,360
	l.addi  	r5,r0,4	 # move immediate I
	l.add   	r12,r4,r14
	l.add   	r7,r4,r7
	l.lwz   	r16,-104(r12)	 # SI load
	l.lwz   	r12,-60(r7)	 # SI load
	l.lwz   	r7,64(r16)	 # SI load
	l.lwz   	r18,64(r12)	 # SI load
	l.addi  	r3,r7,8
	l.addi  	r18,r18,8
	l.jal   	memcpy	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r5,16(r1)	 # SI load
	l.lbz   	r7,18(r5)	 # zero_extendqisi2
	l.sfeqi	r7,0
	l.bf	.L10574	# delay slot filled
	l.lwz   	r6,32(r1)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,5	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.lwz   	r6,72(r16)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10434	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.j     	.L10574	# delay slot filled
	l.lwz   	r6,32(r1)	 # SI load
.L10566:
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,348(r1)	 # SI load
	l.jal   	ptrmapPut	# delay slot filled
	l.lwz   	r6,72(r14)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L10567	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,352(r1)	 # SI load
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.sb    	0(r2),r5	    # movqi
	l.j     	.L10568	# delay slot filled
	l.addi	r1,r1,404
.L10567:
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	ptrmapPutOvfl	# delay slot filled
	l.lwz   	r3,352(r1)	 # SI load
	l.lwz   	r3,352(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3BtreeInitPage	# delay slot filled
	l.sb    	0(r2),r4	    # movqi
	l.sfnei	r24,0
	l.bf	.L10428
	l.nop			# nop delay slot
	l.j     	.L10507
	l.nop			# nop delay slot
.LFE464:
	.size	balance_nonroot, .-balance_nonroot
	.align	4
.proc	sqlite3BtreeInsert
	.type	sqlite3BtreeInsert, @function
sqlite3BtreeInsert:
.LFB469:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3770:
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	-32(r1),r14	 # SI store
.LCFI3771:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3772:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3773:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3774:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3775:
	l.ori   	r14,r3,0	 # move reg to reg
	l.lwz   	r16,4(r2)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI3776:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3777:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3778:
	l.addi  	r1,r1,-64
.LCFI3779:
	l.lwz   	r3,0(r2)	 # SI load
		l.sw    	12(r1), r5
		l.sw    	12+4(r1), r6
	l.lwz   	r2,72(r1)	 # SI load
	l.ori   	r20,r4,0	 # move reg to reg
	l.lwz   	r5,20(r14)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.sw    	24(r1),r2	 # SI store
	l.ori   	r24,r7,0	 # move reg to reg
	l.ori   	r22,r8,0	 # move reg to reg
		l.lwz   	r7, 12(r1)
		l.lwz   	r8, 12+4(r1)
	l.jal   	checkForReadConflicts.clone.57	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10583	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbz   	r2,63(r14)	 # zero_extendqisi2
	l.sfnei	r2,3
	l.bnf	.L10593
	l.nop			# nop delay slot
	l.lwz   	r3,8(r16)	 # SI load
	l.lwz   	r4,20(r14)	 # SI load
	l.jal   	saveAllCursors.clone.165	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10583	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r2,24(r1)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L10594	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L10585:
	l.lhs   	r2,88(r14)	 # extendhisi2_no_sext_mem
	l.addi  	r2,r2,23
	l.lwz   	r18,76(r16)	 # SI load
	l.slli  	r2,r2,2
	l.lhz   	r3,20(r16)	 # zero_extendqisi2
	l.add   	r2,r14,r2
	l.sfnei	r18,0
	l.bnf	.L10595	# delay slot filled
	l.lwz   	r26,0(r2)	 # SI load
	l.lwz   	r2,64(r1)	 # SI load
.L10603:
	l.ori   	r3,r26,0	 # move reg to reg
	l.sw    	4(r1),r2	 # SI store
	l.ori   	r4,r18,0	 # move reg to reg
	l.addi  	r2,r1,20
	l.ori   	r5,r20,0	 # move reg to reg
	l.sw    	8(r1),r2	 # SI store
	l.sw    	0(r1),r22	 # SI store
		l.lwz   	r6, 12(r1)
		l.lwz   	r7, 12+4(r1)
	l.jal   	fillInCell	# delay slot filled
	l.ori   	r8,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L10596	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10583:
	l.addi	r1,r1,64
.L10602:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L10593:
	l.j     	.L10583	# delay slot filled
	l.lwz   	r2,76(r14)	 # SI load
.L10596:
	l.lhs   	r3,88(r14)	 # extendhisi2_no_sext_mem
	l.addi  	r3,r3,86
	l.lwz   	r4,24(r1)	 # SI load
	l.add   	r3,r3,r3
	l.sfnei	r4,0
	l.add   	r3,r14,r3
	l.bnf	.L10597	# delay slot filled
	l.lhz   	r16,0(r3)	 # zero_extendqisi2
	l.sfgesi	r4,0
	l.bf	.L10601	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lhz   	r4,16(r26)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L10601
	l.nop			# nop delay slot
	l.addi  	r16,r16,1
	l.sh    	58(r14),r11	 # movhi
	l.andi  	r16,r16,0xffff	 # zero_extendqisi2
	l.sb    	62(r14),r11	    # movqi
	l.sh    	0(r3),r16	 # movhi
.L10601:
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r6,20(r1)	 # SI load
	l.jal   	insertCell	# delay slot filled
	l.ori   	r8,r7,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10590	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbz   	r3,1(r26)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L10605	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lbz   	r3,61(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L10605	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.sfgesi	r3,0
	l.bnf	.L10598	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L10605:
	l.jal   	balance	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L10599	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10590:
	l.lhs   	r3,88(r14)	 # extendhisi2_no_sext_mem
.L10604:
	l.addi  	r3,r3,23
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.slli  	r3,r3,2
	l.add   	r14,r14,r3
	l.lwz   	r3,0(r14)	 # SI load
	l.j     	.L10583	# delay slot filled
	l.sb    	1(r3),r4	    # movqi
.L10597:
	l.lbz   	r2,63(r14)	 # zero_extendqisi2
	l.sfnei	r2,1
	l.bf	.L10601	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r26)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10583	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhz   	r2,12(r26)	 # zero_extendqisi2
	l.add   	r3,r16,r16
	l.lwz   	r4,64(r26)	 # SI load
	l.add   	r3,r3,r2
	l.lhz   	r2,18(r26)	 # zero_extendqisi2
	l.add   	r3,r4,r3
	l.lbz   	r6,3(r26)	 # zero_extendqisi2
	l.lbz   	r7,0(r3)	 # zero_extendqisi2
	l.lbz   	r5,1(r3)	 # zero_extendqisi2
	l.slli  	r3,r7,8
	l.sfnei	r6,0
	l.or    	r3,r5,r3
	l.and   	r2,r3,r2
	l.bnf	.L10600	# delay slot filled
	l.add   	r2,r4,r2
	l.ori   	r4,r2,0	 # move reg to reg
.L10606:
	l.jal   	cellSizePtr	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	clearCell	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10583	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	dropCell	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10583	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10601	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L10594:
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r7,68(r1)	 # SI load
		l.lwz   	r5, 12(r1)
		l.lwz   	r6, 12+4(r1)
	l.jal   	sqlite3BtreeMoveto	# delay slot filled
	l.addi  	r8,r1,24
	l.sfnei	r11,0
	l.bnf	.L10585	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10602	# delay slot filled
	l.addi	r1,r1,64
.L10595:
	l.jal   	pcache1Alloc	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
	l.sw    	76(r16),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L10583	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.j     	.L10603	# delay slot filled
	l.lwz   	r2,64(r1)	 # SI load
.L10599:
	l.jal   	moveToRoot	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L10604	# delay slot filled
	l.lhs   	r3,88(r14)	 # extendhisi2_no_sext_mem
.L10598:
	l.lwz   	r3,92(r14)	 # SI load
	l.lbz   	r3,2(r3)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L10590	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L10605
	l.nop			# nop delay slot
.L10600:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,4	 # move immediate I
	l.j     	.L10606	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.LFE469:
	.size	sqlite3BtreeInsert, .-sqlite3BtreeInsert
	.align	4
.proc	sqlite3BtreeDelete
	.type	sqlite3BtreeDelete, @function
sqlite3BtreeDelete:
.LFB470:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3780:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lhs   	r3,88(r3)	 # extendhisi2_no_sext_mem
	l.addi  	r5,r3,23
	l.sw    	-36(r1),r16	 # SI store
.LCFI3781:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3782:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3783:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3784:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3785:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3786:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3787:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3788:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3789:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3790:
	l.slli  	r5,r5,2
	l.lbz   	r6,63(r2)	 # zero_extendqisi2
	l.lwz   	r4,0(r2)	 # SI load
	l.add   	r5,r2,r5
	l.addi  	r1,r1,-268
.LCFI3791:
	l.sfnei	r6,3
	l.lwz   	r18,4(r4)	 # SI load
	l.bnf	.L10634	# delay slot filled
	l.lwz   	r16,0(r5)	 # SI load
	l.addi  	r3,r3,86
	l.lhz   	r5,16(r16)	 # zero_extendqisi2
	l.add   	r3,r3,r3
	l.add   	r3,r2,r3
	l.lhz   	r3,0(r3)	 # zero_extendqisi2
	l.sfgeu 	r3,r5
	l.bnf	.L10635	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
.L10609:
	l.addi	r1,r1,268
.L10639:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L10635:
	l.lwz   	r3,0(r4)	 # SI load
	l.lwz   	r5,20(r2)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
		l.lwz   	r7, 36(r2)
		l.lwz   	r8, 36+4(r2)
	l.jal   	checkForReadConflicts.clone.57	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10609	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r3,63(r2)	 # zero_extendqisi2
	l.sfleui	r3,1
	l.bnf	.L10636
	l.nop			# nop delay slot
	l.lwz   	r3,8(r18)	 # SI load
.L10640:
	l.lwz   	r4,20(r2)	 # SI load
	l.jal   	saveAllCursors.clone.165	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10609	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r16)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10609	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lhs   	r4,88(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r4,r4,86
	l.lhz   	r3,12(r16)	 # zero_extendqisi2
	l.add   	r4,r4,r4
	l.lwz   	r22,64(r16)	 # SI load
	l.add   	r4,r2,r4
	l.lhz   	r5,18(r16)	 # zero_extendqisi2
	l.lhz   	r20,0(r4)	 # zero_extendqisi2
	l.add   	r6,r20,r20
	l.lbz   	r4,3(r16)	 # zero_extendqisi2
	l.add   	r3,r6,r3
	l.sfnei	r4,0
	l.add   	r3,r22,r3
	l.ori   	r24,r11,0	 # move reg to reg
	l.lbz   	r6,0(r3)	 # zero_extendqisi2
	l.lbz   	r4,1(r3)	 # zero_extendqisi2
	l.slli  	r3,r6,8
	l.or    	r3,r4,r3
	l.and   	r3,r3,r5
	l.bf	.L10611	# delay slot filled
	l.add   	r22,r22,r3
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r24,r11,0	 # move reg to reg
.L10611:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	clearCell	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10609	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r14,3(r16)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L10612	# delay slot filled
	l.addi  	r26,r1,8
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,212	 # move immediate I
	l.lhs   	r3,96(r1)	 # extendhisi2_no_sext_mem
	l.sw    	16(r1),r14	 # SI store
	l.sfltsi	r3,0
	l.bf	.L10613	# delay slot filled
	l.sw    	20(r1),r14	 # SI store
	l.slli  	r3,r3,2
	l.addi  	r8,r1,104
	l.addi  	r5,r1,100
	l.add   	r8,r8,r3
.L10614:
	l.lwz   	r6,0(r5)	 # SI load
	l.addi  	r5,r5,4
	l.lwz   	r6,68(r6)	 # SI load
	l.sfne 	r5,r8
	l.lhz   	r7,22(r6)	 # zero_extendqisi2
	l.addi  	r7,r7,1
	l.bf	.L10614	# delay slot filled
	l.sh    	22(r6),r7	 # movhi
.L10613:
	l.addi  	r30,r1,220
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3BtreeNext	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L10637	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L10615:
	l.lhs   	r3,96(r1)	 # extendhisi2_no_sext_mem
.L10644:
	l.sfltsi	r3,0
	l.bf	.L10623	# delay slot filled
	l.addi  	r16,r1,100
	l.addi  	r18,r0,0	 # move immediate I
.L10624:
	l.lwz   	r3,0(r16)	 # SI load
	l.addi  	r18,r18,1
	l.lwz   	r3,68(r3)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.addi  	r16,r16,4
	l.lhs   	r3,96(r1)	 # extendhisi2_no_sext_mem
	l.sfles 	r18,r3
	l.bf	.L10624
	l.nop			# nop delay slot
.L10623:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,72(r1)	 # SI load
.L10625:
	l.sfnei	r14,0
	l.bf	.L10609
	l.nop			# nop delay slot
	l.jal   	moveToRoot	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L10639	# delay slot filled
	l.addi	r1,r1,268
.L10634:
	l.j     	.L10609	# delay slot filled
	l.lwz   	r14,76(r2)	 # SI load
.L10636:
	l.jal   	sqlite3BtreeRestoreCursorPosition	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10609	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L10640	# delay slot filled
	l.lwz   	r3,8(r18)	 # SI load
.L10612:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	cellSizePtr	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	dropCell	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10609	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	balance	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L10625	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L10637:
	l.lhs   	r3,96(r1)	 # extendhisi2_no_sext_mem
	l.addi  	r3,r3,23
	l.addi  	r4,r1,224
	l.slli  	r3,r3,2
	l.add   	r3,r4,r3
	l.lwz   	r28,-216(r3)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r28)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10615	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	cellSizePtr	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	dropCell	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.lhz   	r4,12(r28)	 # zero_extendqisi2
	l.lwz   	r5,64(r28)	 # SI load
	l.lhz   	r6,18(r28)	 # zero_extendqisi2
	l.add   	r4,r5,r4
	l.ori   	r3,r28,0	 # move reg to reg
	l.lbz   	r8,0(r4)	 # zero_extendqisi2
	l.lbz   	r7,1(r4)	 # zero_extendqisi2
	l.slli  	r4,r8,8
	l.or    	r4,r7,r4
	l.and   	r4,r4,r6
	l.add   	r4,r5,r4
	l.jal   	cellSizePtr	# delay slot filled
	l.sw    	0(r1),r4	 # SI store
	l.lwz   	r7,76(r18)	 # SI load
	l.ori   	r22,r11,0	 # move reg to reg
	l.sfnei	r7,0
	l.bnf	.L10638	# delay slot filled
	l.lhz   	r3,20(r18)	 # zero_extendqisi2
	l.lwz   	r6,0(r1)	 # SI load
.L10642:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r6,-4
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r6,r22,4
	l.jal   	insertCell	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.ori   	r14,r11,0	 # move reg to reg
.L10617:
	l.lbz   	r5,1(r16)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bnf	.L10633	# delay slot filled
	l.addi  	r4,r0,3	 # move immediate I
	l.lhz   	r18,22(r18)	 # zero_extendqisi2
	l.lhz   	r4,14(r28)	 # zero_extendqisi2
.L10641:
	l.addi  	r4,r4,2
	l.add   	r3,r18,r18
	l.addi  	r5,r0,1	 # move immediate I
	l.add   	r18,r4,r22
	l.addi  	r4,r0,3	 # move immediate I
	l.jal   	__divsi3	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.sfgts 	r18,r11
	l.bf	.L10643	# delay slot filled
	l.sfnei	r14,0
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	0(r1),r6	 # SI store
.L10643:
	l.bf	.L10644	# delay slot filled
	l.lhs   	r3,96(r1)	 # extendhisi2_no_sext_mem
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	findOverflowCell	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.srli  	r6,r24,24
	l.srli  	r5,r24,16
	l.srli  	r4,r24,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.sb    	0(r11),r6	    # movqi
	l.sb    	2(r11),r4	    # movqi
	l.sb    	1(r11),r5	    # movqi
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	balance	# delay slot filled
	l.sb    	3(r11),r24	    # movqi
	l.sub   	r3,r0,r11
	l.or    	r3,r3,r11
	l.sfltsi	r3,0
	l.bf	.L10621	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10645	# delay slot filled
	l.sfnei	r14,0
	l.jal   	saveCursorPosition	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10622	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3BtreeNext	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
.L10622:
	l.lhs   	r3,96(r1)	 # extendhisi2_no_sext_mem
	l.addi  	r3,r3,23
	l.addi  	r4,r1,224
	l.slli  	r3,r3,2
	l.add   	r3,r4,r3
	l.lwz   	r28,-216(r3)	 # SI load
.L10621:
	l.sfnei	r14,0
.L10645:
	l.bf	.L10644	# delay slot filled
	l.lhs   	r3,96(r1)	 # extendhisi2_no_sext_mem
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r28)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10615	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	dropCell	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	balance	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.j     	.L10615	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L10633:
	l.lhz   	r3,14(r16)	 # zero_extendqisi2
	l.lhz   	r18,22(r18)	 # zero_extendqisi2
	l.sw    	4(r1),r3	 # SI store
	l.add   	r3,r18,r18
	l.jal   	__divsi3	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r4,4(r1)	 # SI load
	l.sfles 	r4,r11
	l.bf	.L10643	# delay slot filled
	l.sfnei	r14,0
	l.j     	.L10641	# delay slot filled
	l.lhz   	r4,14(r28)	 # zero_extendqisi2
.L10638:
	l.jal   	pcache1Alloc	# delay slot filled
	l.addi  	r14,r0,7	 # move immediate I
	l.sw    	76(r18),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L10617	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
	l.j     	.L10642	# delay slot filled
	l.lwz   	r6,0(r1)	 # SI load
.LFE470:
	.size	sqlite3BtreeDelete, .-sqlite3BtreeDelete
	.align	4
.proc	clearDatabasePage
	.type	clearDatabasePage, @function
clearDatabasePage:
.LFB473:
	l.sw    	-28(r1),r2	 # SI store
.LCFI3792:
	l.sw    	-24(r1),r14	 # SI store
.LCFI3793:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3794:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3795:
	l.sw    	-8(r1),r22	 # SI store
.LCFI3796:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3797:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3798:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI3799:
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r18,r3,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	0(r1),r2	 # SI store
	l.ori   	r22,r5,0	 # move reg to reg
	l.ori   	r20,r6,0	 # move reg to reg
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.addi  	r2,r0,11	 # move immediate I
	l.sfltu 	r11,r14
	l.bnf	.L10658	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi	r1,r1,32
.L10662:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L10658:
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	getAndInitPage	# delay slot filled
	l.ori   	r5,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10648	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.lhz   	r4,16(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L10656	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.j     	.L10664	# delay slot filled
	l.lhz   	r7,12(r3)	 # zero_extendqisi2
.L10659:
	l.lwz   	r3,0(r1)	 # SI load
	l.lhz   	r2,16(r3)	 # zero_extendqisi2
	l.sfgts 	r2,r14
	l.bnf	.L10649
	l.nop			# nop delay slot
	l.lhz   	r7,12(r3)	 # zero_extendqisi2
.L10664:
	l.add   	r2,r14,r14
	l.lwz   	r4,64(r3)	 # SI load
	l.add   	r2,r7,r2
	l.lhz   	r7,18(r3)	 # zero_extendqisi2
	l.add   	r2,r4,r2
	l.lbz   	r8,3(r3)	 # zero_extendqisi2
	l.lbz   	r16,0(r2)	 # zero_extendqisi2
	l.lbz   	r2,1(r2)	 # zero_extendqisi2
	l.slli  	r16,r16,8
	l.addi  	r14,r14,1
	l.sfnei	r8,0
	l.or    	r16,r2,r16
	l.and   	r16,r16,r7
	l.bf	.L10650	# delay slot filled
	l.add   	r16,r4,r16
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	clearDatabasePage	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10648	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
.L10650:
	l.jal   	clearCell	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L10659	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10648:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.j     	.L10662	# delay slot filled
	l.addi	r1,r1,32
.L10656:
	l.ori   	r2,r4,0	 # move reg to reg
.L10649:
	l.lbz   	r4,3(r3)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L10660	# delay slot filled
	l.sfeqi	r20,0
	l.bf	.L10663	# delay slot filled
	l.sfeqi	r22,0
	l.lwz   	r4,0(r20)	 # SI load
	l.add   	r2,r4,r2
	l.sw    	0(r20),r2	 # SI store
.L10653:
	l.sfeqi	r22,0
.L10663:
	l.bnf	.L10661
	l.nop			# nop delay slot
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r3)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10648	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r1)	 # SI load
	l.lwz   	r4,64(r3)	 # SI load
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.jal   	zeroPage	# delay slot filled
	l.ori   	r4,r4,8
	l.j     	.L10648
	l.nop			# nop delay slot
.L10661:
	l.jal   	freePage
	l.nop			# nop delay slot
	l.j     	.L10648	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10660:
	l.lwz   	r3,64(r3)	 # SI load
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.addi  	r3,r3,8
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	clearDatabasePage	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10648	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10653	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
.LFE473:
	.size	clearDatabasePage, .-clearDatabasePage
	.align	4
.proc	sqlite3BtreeClearTable.clone.173
	.type	sqlite3BtreeClearTable.clone.173, @function
sqlite3BtreeClearTable.clone.173:
.LFB1421:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3800:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3801:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3802:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3803:
	l.ori   	r16,r6,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI3804:
	l.sw    	4(r4),r3	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r8,r0,1	 # move immediate I
	l.ori   	r14,r5,0	 # move reg to reg
	l.jal   	checkForReadConflicts.clone.57	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L10667	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
.L10666:
	l.addi	r1,r1,16
	l.ori   	r11,r5,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L10667:
	l.lwz   	r3,8(r2)	 # SI load
	l.jal   	saveAllCursors.clone.165	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10666	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	clearDatabasePage	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.LFE1421:
	.size	sqlite3BtreeClearTable.clone.173, .-sqlite3BtreeClearTable.clone.173
	.align	4
.proc	btreeCreateTable
	.type	btreeCreateTable, @function
btreeCreateTable:
.LFB471:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3805:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3806:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3807:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3808:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3809:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3810:
	l.sw    	-32(r1),r14	 # SI store
.LCFI3811:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3812:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3813:
	l.lwz   	r16,4(r3)	 # SI load
	l.addi  	r1,r1,-60
.LCFI3814:
	l.lbz   	r7,18(r16)	 # zero_extendqisi2
	l.ori   	r22,r3,0	 # move reg to reg
	l.ori   	r24,r4,0	 # move reg to reg
	l.sfeqi	r7,0
	l.bf	.L10669	# delay slot filled
	l.ori   	r26,r5,0	 # move reg to reg
	l.jal   	invalidateAllOverflowCache.clone.39	# delay slot filled
	l.lwz   	r3,8(r16)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.jal   	sqlite3BtreeGetMeta	# delay slot filled
	l.addi  	r5,r1,12
	l.sfnei	r11,0
	l.bf	.L10670	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhz   	r3,22(r16)	 # zero_extendqisi2
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	__udivsi3	# delay slot filled
	l.movhi  	r2,hi(sqlite3PendingByte)
	l.ori   	r2,r2,lo(sqlite3PendingByte)
	l.lwz   	r20,12(r1)	 # SI load
	l.lhz   	r4,20(r16)	 # zero_extendqisi2
	l.andi  	r11,r11,0xffff	 # zero_extendqisi2
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r20,r20,1
	l.addi  	r14,r11,1
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r2,r20,0	 # move reg to reg
	l.j     	.L10671	# delay slot filled
	l.addi  	r18,r11,1
.L10672:
	l.sfeq 	r6,r2
.L10684:
	l.bf	.L10673	# delay slot filled
	l.sfeq 	r18,r2
	l.bnf	.L10682	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L10673:
	l.addi  	r2,r2,1
	l.ori   	r20,r2,0	 # move reg to reg
.L10671:
	l.addi  	r3,r2,-2
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.mul   	r11,r11,r14
	l.addi  	r6,r11,2
	l.sfne 	r18,r6
	l.bf	.L10684	# delay slot filled
	l.sfeq 	r6,r2
	l.j     	.L10672	# delay slot filled
	l.addi  	r6,r11,3
.L10674:
	l.lwz   	r2,4(r1)	 # SI load
	l.sw    	16(r1),r2	 # SI store
.L10678:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	ptrmapPut	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L10681	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r22)	 # SI load
	l.lwz   	r4,4(r22)	 # SI load
	l.addi  	r5,r0,4	 # move immediate I
	l.jal   	sqlite3BtreeUpdateMeta.clone.171	# delay slot filled
	l.lwz   	r6,12(r1)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L10681	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10680:
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r26,8
	l.jal   	zeroPage	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	sqlite3PagerUnref	# delay slot filled
	l.lwz   	r3,68(r3)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
	l.sw    	0(r24),r3	 # SI store
.L10670:
	l.addi	r1,r1,60
.L10683:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L10669:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r1,16
	l.addi  	r5,r1,12
	l.jal   	allocateBtreePage	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L10680	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10683	# delay slot filled
	l.addi	r1,r1,60
.L10682:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r1,4
	l.addi  	r5,r1,8
	l.addi  	r7,r0,1	 # move immediate I
	l.jal   	allocateBtreePage	# delay slot filled
	l.sw    	12(r1),r20	 # SI store
	l.sfnei	r11,0
	l.bf	.L10670	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,8(r1)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
	l.sfeq 	r4,r3
	l.bf	.L10674	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r14,r1,16
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,12(r1)	 # SI load
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10670	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhz   	r4,20(r16)	 # zero_extendqisi2
	l.lhz   	r5,22(r16)	 # zero_extendqisi2
	l.lwz   	r3,0(r16)	 # SI load
	l.lwz   	r6,12(r1)	 # SI load
	l.addi  	r7,r1,23
	l.jal   	ptrmapGet.clone.156	# delay slot filled
	l.ori   	r8,r1,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10681	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbz   	r5,23(r1)	 # zero_extendqisi2
	l.sfeqi	r5,1
	l.bf	.L10681	# delay slot filled
	l.sfnei	r5,2
	l.bnf	.L10681	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,16(r1)	 # SI load
	l.lwz   	r6,0(r1)	 # SI load
	l.lwz   	r7,8(r1)	 # SI load
	l.jal   	relocatePage	# delay slot filled
	l.ori   	r8,r11,0	 # move reg to reg
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r2,0
	l.bf	.L10670	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,12(r1)	 # SI load
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10670	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r2,16(r1)	 # SI load
	l.jal   	sqlite3PagerWrite	# delay slot filled
	l.lwz   	r3,68(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L10681	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L10678	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
.L10681:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.j     	.L10683	# delay slot filled
	l.addi	r1,r1,60
.LFE471:
	.size	btreeCreateTable, .-btreeCreateTable
	.align	4
.proc	pagerStress
	.type	pagerStress, @function
pagerStress:
.LFB314:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3815:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3816:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3817:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3818:
	l.ori   	r14,r4,0	 # move reg to reg
	l.lwz   	r4,36(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI3819:
	l.sfnei	r4,0
	l.bf	.L10686	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r4,20(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L10687
	l.nop			# nop delay slot
	l.lhz   	r3,20(r14)	 # zero_extendqisi2
	l.andi  	r3,r3,4
	l.sfnei	r3,0
	l.bf	.L10686
	l.nop			# nop delay slot
.L10693:
	l.lwz   	r3,12(r14)	 # SI load
.L10697:
	l.lwz   	r4,24(r2)	 # SI load
	l.sfleu 	r3,r4
	l.bnf	.L10696
	l.nop			# nop delay slot
	l.addi  	r3,r0,0	 # move immediate I
.L10698:
	l.sw    	8(r14),r3	 # SI store
	l.jal   	pager_write_pagelist	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10692	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	sqlite3PcacheMakeClean	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L10692:
	l.addi	r1,r1,16
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	pager_error	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L10686:
	l.addi	r1,r1,16
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L10687:
	l.lhz   	r4,20(r14)	 # zero_extendqisi2
	l.andi  	r4,r4,4
	l.sfeqi	r4,0
	l.bf	.L10693
	l.nop			# nop delay slot
	l.jal   	syncJournal
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L10692	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lbz   	r3,9(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L10693
	l.nop			# nop delay slot
	l.lbz   	r3,5(r2)	 # zero_extendqisi2
	l.sfeqi	r3,4
	l.bf	.L10693
	l.nop			# nop delay slot
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.lwz   	r11,48(r4)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.andi  	r11,r11,512
	l.sfnei	r11,0
	l.bf	.L10693
	l.nop			# nop delay slot
	l.sw    	40(r2),r16	 # SI store
	l.jal   	writeJournalHdr	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10692	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.j     	.L10697	# delay slot filled
	l.lwz   	r3,12(r14)	 # SI load
.L10696:
	l.jal   	subjRequiresPage.clone.12	# delay slot filled
	l.lwz   	r4,16(r14)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L10698	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.jal   	subjournalPage	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10692	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.j     	.L10698	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
.LFE314:
	.size	pagerStress, .-pagerStress
	.section	.rodata.str1.1
.LC256:
	.string	"%s-mj%08X"
	.section .text
	.align	4
.proc	sqlite3VdbeHalt
	.type	sqlite3VdbeHalt, @function
sqlite3VdbeHalt:
.LFB584:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3820:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3821:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3822:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3823:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3824:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3825:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3826:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3827:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3828:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3829:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3830:
	l.lwz   	r14,0(r3)	 # SI load
	l.ori   	r2,r3,0	 # move reg to reg
	l.lbz   	r3,30(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
.LCFI3831:
	l.bf	.L10700	# delay slot filled
	l.addi  	r1,r1,-72
	l.addi  	r3,r0,7	 # move immediate I
	l.sw    	100(r2),r3	 # SI store
.L10700:
	l.jal   	closeAllCursorsExceptActiveVtabs	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.movhi 	r4,hi(-1108213760)	 # move immediate M
	l.lwz   	r3,68(r2)	 # SI load
	l.ori   	r4,r4,3491
	l.sfne 	r3,r4
	l.bnf	.L10822	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L10701:
	l.addi	r1,r1,72
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L10822:
	l.lwz   	r3,96(r2)	 # SI load
	l.sflts 	r3,r11
	l.bf	.L10842	# delay slot filled
	l.movhi 	r3,hi(1369178112)	 # move immediate M
	l.jal   	sqlite3BtreeEnterAll	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r6,100(r2)	 # SI load
	l.andi  	r3,r6,255
	l.xori  	r4,r3,7
	l.sfeqi	r3,10
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.xori  	r4,r4,0xffff
	l.bf	.L10818	# delay slot filled
	l.srli  	r4,r4,31
	l.sfnei	r4,0
	l.bnf	.L10809	# delay slot filled
	l.sfeqi	r3,13
.L10818:
	l.xori  	r5,r3,9
.L10703:
	l.sfnei	r5,0
.L10844:
	l.bnf	.L10823	# delay slot filled
	l.sfnei	r6,2826
.L10837:
	l.bnf	.L10824	# delay slot filled
	l.sfeqi	r3,13
.L10847:
	l.bnf	.L10825	# delay slot filled
	l.sfeqi	r4,0
.L10793:
	l.lbz   	r3,129(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L10843	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L10704	# delay slot filled
	l.addi  	r20,r0,2	 # move immediate I
.L10809:
	l.bf	.L10703	# delay slot filled
	l.xori  	r5,r3,9
	l.sub   	r7,r0,r5
	l.or    	r7,r7,r5
	l.xori  	r7,r7,0xffff
	l.srli  	r7,r7,31
	l.sfeqi	r7,0
	l.bnf	.L10844	# delay slot filled
	l.sfnei	r5,0
	l.ori   	r5,r7,0	 # move reg to reg
	l.ori   	r20,r7,0	 # move reg to reg
.L10704:
	l.lwz   	r4,292(r14)	 # SI load
	l.sflesi	r4,0
	l.bf	.L10710
	l.nop			# nop delay slot
	l.lwz   	r3,288(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10845	# delay slot filled
	l.sfnei	r20,0
.L10710:
	l.lbz   	r3,28(r14)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L10845	# delay slot filled
	l.sfnei	r20,0
	l.lbz   	r3,130(r2)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.lwz   	r6,148(r14)	 # SI load
	l.srli  	r3,r3,31
	l.sfne 	r6,r3
	l.bnf	.L10826	# delay slot filled
	l.movhi 	r6,hi(2097152)	 # move immediate M
	l.sfnei	r20,0
.L10845:
	l.bnf	.L10827
	l.nop			# nop delay slot
.L10764:
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r4,r2,212
	l.jal   	sqlite3VdbeCloseStatement.clone.170	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L10821
	l.nop			# nop delay slot
	l.lwz   	r3,100(r2)	 # SI load
	l.xori  	r4,r3,19
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bf	.L10794	# delay slot filled
	l.sub   	r4,r0,r3
	l.or    	r4,r4,r3
	l.sfltsi	r4,0
	l.bnf	.L10794
	l.nop			# nop delay slot
.L10765:
	l.lbz   	r4,125(r2)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L10846	# delay slot filled
	l.sfeqi	r3,0
	l.lwz   	r4,96(r2)	 # SI load
	l.sfltsi	r4,0
	l.bf	.L10768	# delay slot filled
	l.sfeqi	r20,2
	l.bf	.L10769	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r4,132(r2)	 # SI load
	l.lwz   	r5,72(r14)	 # SI load
	l.sw    	68(r14),r4	 # SI store
	l.add   	r4,r5,r4
	l.sw    	72(r14),r4	 # SI store
.L10770:
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	132(r2),r5	 # SI store
.L10768:
	l.sfeqi	r3,0
.L10846:
	l.bf	.L10771
	l.nop			# nop delay slot
	l.lwz   	r3,12(r14)	 # SI load
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bnf	.L10828	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L10771:
	l.lwz   	r3,96(r2)	 # SI load
	l.sfltsi	r3,0
	l.bf	.L10842	# delay slot filled
	l.movhi 	r3,hi(1369178112)	 # move immediate M
	l.lwz   	r3,144(r14)	 # SI load
	l.addi  	r3,r3,-1
	l.sw    	144(r14),r3	 # SI store
	l.lbz   	r3,130(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L10842	# delay slot filled
	l.movhi 	r3,hi(1369178112)	 # move immediate M
	l.lwz   	r3,148(r14)	 # SI load
	l.addi  	r3,r3,-1
	l.sw    	148(r14),r3	 # SI store
	l.movhi 	r3,hi(1369178112)	 # move immediate M
.L10842:
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r3,10611
	l.sw    	68(r2),r3	 # SI store
	l.lbz   	r11,30(r4)	 # zero_extendqisi2
	l.sfeqi	r11,0
	l.bf	.L10701	# delay slot filled
	l.addi  	r3,r0,7	 # move immediate I
	l.addi  	r11,r0,0	 # move immediate I
	l.j     	.L10701	# delay slot filled
	l.sw    	100(r2),r3	 # SI store
.L10823:
	l.lbz   	r20,130(r2)	 # zero_extendqisi2
	l.addi  	r20,r20,-1
	l.srli  	r20,r20,31
	l.sfeqi	r20,0
	l.bf	.L10704	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L10837	# delay slot filled
	l.sfnei	r6,2826
.L10827:
	l.lwz   	r3,100(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10789
	l.nop			# nop delay slot
	l.lwz   	r3,104(r2)	 # SI load
	l.sfeqi	r3,3
	l.bf	.L10789	# delay slot filled
	l.sfeqi	r3,2
	l.bf	.L10790
	l.nop			# nop delay slot
	l.jal   	invalidateCursorsOnModifiedBtrees	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3RollbackAll	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3CloseSavepoints	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.sb    	28(r14),r6	    # movqi
	l.j     	.L10765	# delay slot filled
	l.lwz   	r3,100(r2)	 # SI load
.L10789:
	l.j     	.L10764	# delay slot filled
	l.addi  	r20,r0,1	 # move immediate I
.L10716:
	l.sw    	288(r14),r28	 # SI store
.L10719:
	l.sfeqi	r18,5
.L10839:
	l.bf	.L10701	# delay slot filled
	l.ori   	r11,r18,0	 # move reg to reg
.L10776:
	l.sw    	100(r2),r18	 # SI store
	l.jal   	sqlite3RollbackAll	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L10763:
	l.addi  	r5,r0,0	 # move immediate I
.L10840:
	l.sfne 	r20,r5
	l.bf	.L10764	# delay slot filled
	l.sw    	476(r14),r5	 # SI store
.L10821:
	l.j     	.L10765	# delay slot filled
	l.lwz   	r3,100(r2)	 # SI load
.L10828:
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,12(r14)	 # SI load
	l.ori   	r3,r3,16
	l.j     	.L10771	# delay slot filled
	l.sw    	12(r14),r3	 # SI store
.L10825:
	l.bnf	.L10793	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L10843:
	l.jal   	invalidateCursorsOnModifiedBtrees	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
	l.jal   	sqlite3RollbackAll	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3CloseSavepoints	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sb    	28(r14),r5	    # movqi
	l.j     	.L10704	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L10826:
	l.lwz   	r3,12(r14)	 # SI load
	l.and   	r3,r3,r6
	l.sfnei	r3,0
	l.bf	.L10845	# delay slot filled
	l.sfnei	r20,0
	l.lwz   	r3,100(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10712	# delay slot filled
	l.sfnei	r5,0
	l.bf	.L10713
	l.nop			# nop delay slot
	l.lwz   	r3,104(r2)	 # SI load
	l.xori  	r3,r3,3
	l.sub   	r5,r0,r3
	l.or    	r3,r5,r3
	l.sfltsi	r3,0
	l.bf	.L10713
	l.nop			# nop delay slot
.L10712:
	l.lwz   	r28,288(r14)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r26,r2,116
	l.sw    	288(r14),r3	 # SI store
	l.ori   	r24,r28,0	 # move reg to reg
	l.addi  	r22,r0,1	 # move immediate I
.L10714:
	l.addi  	r3,r22,-1
	l.sfges 	r3,r4
	l.bf	.L10717	# delay slot filled
	l.addi  	r22,r22,1
.L10829:
	l.lwz   	r16,0(r24)	 # SI load
	l.addi  	r24,r24,4
	l.sfnei	r16,0
	l.bnf	.L10717	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r5,0(r16)	 # SI load
	l.lwz   	r11,60(r5)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L10714
	l.nop			# nop delay slot
	l.jalr  	r11
	l.nop			# nop delay slot
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,0(r26)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r3,8(r16)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	0(r26),r3	 # SI store
	l.sfnei	r18,0
	l.bf	.L10716	# delay slot filled
	l.sw    	8(r16),r4	 # SI store
	l.addi  	r3,r22,-1
	l.lwz   	r4,292(r14)	 # SI load
	l.sfges 	r3,r4
	l.bnf	.L10829	# delay slot filled
	l.addi  	r22,r22,1
.L10717:
	l.lwz   	r7,4(r14)	 # SI load
	l.sfgtsi	r7,0
	l.bnf	.L10830	# delay slot filled
	l.sw    	288(r14),r28	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r8,8(r14)	 # SI load
	l.ori   	r16,r6,0	 # move reg to reg
	l.addi  	r4,r8,4
	l.j     	.L10721	# delay slot filled
	l.ori   	r3,r6,0	 # move reg to reg
.L10720:
	l.addi  	r3,r3,1
	l.sfne 	r3,r7
	l.bnf	.L10831	# delay slot filled
	l.sfeqi	r6,0
.L10721:
	l.lwz   	r5,0(r4)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L10720	# delay slot filled
	l.addi  	r4,r4,24
	l.lbz   	r5,8(r5)	 # zero_extendqisi2
	l.sfnei	r5,2
	l.bf	.L10720	# delay slot filled
	l.sfeqi	r3,1
	l.bf	.L10720	# delay slot filled
	l.ori   	r6,r3,0	 # move reg to reg
	l.addi  	r16,r16,1
	l.j     	.L10720	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
.L10769:
	l.j     	.L10770	# delay slot filled
	l.sw    	68(r14),r4	 # SI store
.L10790:
	l.j     	.L10764	# delay slot filled
	l.ori   	r20,r3,0	 # move reg to reg
.L10824:
	l.lbz   	r5,129(r2)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L10847	# delay slot filled
	l.sfeqi	r3,13
	l.addi  	r3,r0,5	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.sw    	100(r2),r3	 # SI store
	l.j     	.L10704	# delay slot filled
	l.addi  	r20,r0,2	 # move immediate I
.L10794:
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	100(r2),r11	 # SI store
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,116(r2)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	116(r2),r3	 # SI store
	l.j     	.L10765	# delay slot filled
	l.lwz   	r3,100(r2)	 # SI load
.L10831:
	l.bf	.L10722
	l.nop			# nop delay slot
	l.lwz   	r11,172(r14)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L10722	# delay slot filled
	l.movhi 	r5,hi(2097152)	 # move immediate M
	l.lwz   	r4,12(r14)	 # SI load
	l.lwz   	r3,168(r14)	 # SI load
	l.or    	r4,r4,r5
	l.jalr  	r11	# delay slot filled
	l.sw    	12(r14),r4	 # SI store
	l.movhi 	r6,hi(-2162688)	 # move immediate M
	l.lwz   	r3,12(r14)	 # SI load
	l.ori   	r6,r6,65535
	l.sfnei	r11,0
	l.and   	r3,r3,r6
	l.bf	.L10784	# delay slot filled
	l.sw    	12(r14),r3	 # SI store
	l.lwz   	r8,8(r14)	 # SI load
.L10722:
	l.lwz   	r3,4(r8)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r22,128(r3)	 # SI load
	l.lbs   	r4,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,0
	l.bf	.L10724	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r3,r3,1
.L10848:
	l.lbs   	r4,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L10848	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r3,r3,-1
.L10724:
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r3,r3,r22
	l.ori   	r4,r4,65535
	l.and   	r3,r3,r4
	l.sfnei	r3,0
	l.bnf	.L10728	# delay slot filled
	l.sflesi	r16,1
	l.bf	.L10728	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
	l.lwz   	r28,0(r14)	 # SI load
	l.addi  	r26,r1,20
	l.addi  	r16,r1,24
	l.ori   	r4,r24,0	 # move reg to reg
.L10849:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r3,r0,4	 # move immediate I
	l.jal   	sqlite3_randomness	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.movhi 	r6,hi(2147418112)	 # move immediate M
	l.lwz   	r5,20(r1)	 # SI load
	l.ori   	r6,r6,65535
	l.movhi  	r4,hi(.LC256)
	l.and   	r5,r5,r6
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC256)
	l.sw    	4(r1),r5	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r22	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfeq 	r11,r5
	l.bf	.L10786	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.lwz   	r11,32(r28)	 # SI load
	l.jalr  	r11
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L10820	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L10849	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3Malloc	# delay slot filled
	l.lwz   	r3,4(r28)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L10812	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.lwz   	r11,24(r28)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r5,r30,0	 # move reg to reg
	l.jalr  	r11	# delay slot filled
	l.addi  	r6,r0,16406	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L10832	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r7,4(r14)	 # SI load
	l.sfgtsi	r7,0
	l.bnf	.L10750	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r26,r18,0	 # move reg to reg
		l.sw    	8(r1), r3
		l.sw    	8+4(r1), r4
	l.sw    	16(r1),r18	 # SI store
	l.j     	.L10749	# delay slot filled
	l.ori   	r22,r18,0	 # move reg to reg
.L10740:
	l.addi  	r22,r22,1
.L10838:
	l.sflts 	r22,r7
	l.bnf	.L10833	# delay slot filled
	l.addi  	r26,r26,24
.L10749:
	l.lwz   	r3,8(r14)	 # SI load
	l.sfeqi	r22,1
	l.add   	r3,r3,r26
	l.bf	.L10740	# delay slot filled
	l.lwz   	r4,4(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L10740
	l.nop			# nop delay slot
	l.lbz   	r3,8(r4)	 # zero_extendqisi2
	l.sfnei	r3,2
	l.bf	.L10740
	l.nop			# nop delay slot
	l.lwz   	r5,4(r4)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.lwz   	r16,132(r3)	 # SI load
	l.lbs   	r6,0(r16)	 # extendqisi2_no_sext_mem
	l.sfeqi	r6,0
	l.bf	.L10740	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L10742	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.lwz   	r4,0(r4)	 # SI load
	l.sw    	4(r5),r4	 # SI store
	l.lbz   	r3,8(r3)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.lbs   	r4,0(r16)	 # extendqisi2_no_sext_mem
	l.srli  	r3,r3,31
	l.sfnei	r4,0
	l.bnf	.L10744	# delay slot filled
	l.sw    	16(r1),r3	 # SI store
	l.ori   	r7,r16,0	 # move reg to reg
.L10742:
	l.addi  	r7,r7,1
.L10850:
	l.lbs   	r4,0(r7)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L10850	# delay slot filled
	l.addi  	r7,r7,1
	l.addi  	r7,r7,-1
.L10744:
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r5,r7,r16
	l.ori   	r4,r4,65535
	l.lwz   	r3,0(r30)	 # SI load
	l.and   	r5,r5,r4
	l.lwz   	r11,12(r3)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
		l.lwz   	r6, 8(r1)
		l.lwz   	r7, 8+4(r1)
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r5,1
	l.lbs   	r4,0(r16)	 # extendqisi2_no_sext_mem
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L10745	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r16,r16,1
.L10851:
	l.lbs   	r4,0(r16)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L10851	# delay slot filled
	l.addi  	r16,r16,1
	l.addi  	r16,r16,-1
.L10745:
	l.sfnei	r18,0
	l.bf	.L10747	# delay slot filled
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.sub   	r3,r16,r3
	l.ori   	r5,r5,65535
	l.addi  	r4,r0,1	 # move immediate I
	l.and   	r3,r3,r5
	l.lwz   	r6,12(r1)	 # SI load
	l.add   	r3,r3,r4
	l.add   	r3,r6,r3
	l.sfltu 	r3,r6
	l.bf	.L10852	# delay slot filled
	l.lwz   	r5,8(r1)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
.L10852:
	l.lwz   	r7,4(r14)	 # SI load
	l.add   	r6,r4,r5
	l.ori   	r5,r3,0	 # move reg to reg
	l.ori   	r3,r6,0	 # move reg to reg
	l.ori   	r4,r5,0	 # move reg to reg
		l.sw    	8(r1), r3
		l.sw    	8+4(r1), r4
	l.j     	.L10838	# delay slot filled
	l.addi  	r22,r22,1
.L10728:
	l.lwz   	r7,4(r14)	 # SI load
	l.addi  	r22,r0,0	 # move immediate I
	l.addi  	r16,r0,1	 # move immediate I
.L10727:
	l.addi  	r3,r16,-1
	l.addi  	r4,r0,0	 # move immediate I
	l.sflts 	r3,r7
	l.bnf	.L10834	# delay slot filled
	l.addi  	r16,r16,1
.L10732:
	l.lwz   	r3,8(r14)	 # SI load
	l.add   	r3,r3,r22
	l.addi  	r22,r22,24
	l.lwz   	r5,4(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L10727	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	sqlite3BtreeCommitPhaseOne
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L10719	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r3,r16,-1
	l.lwz   	r7,4(r14)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.sflts 	r3,r7
	l.bf	.L10732	# delay slot filled
	l.addi  	r16,r16,1
.L10834:
	l.sfles 	r7,r4
	l.bf	.L10733	# delay slot filled
	l.addi  	r22,r0,1	 # move immediate I
	l.j     	.L10735	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
.L10835:
	l.jal   	sqlite3BtreeCommitPhaseTwo
	l.nop			# nop delay slot
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L10719	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r7,4(r14)	 # SI load
.L10778:
	l.addi  	r16,r16,24
	l.sfgts 	r7,r3
	l.bnf	.L10733	# delay slot filled
	l.addi  	r22,r22,1
.L10735:
	l.lwz   	r3,8(r14)	 # SI load
	l.add   	r3,r3,r16
	l.lwz   	r4,4(r3)	 # SI load
	l.sfeqi	r4,0
	l.bnf	.L10835	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.j     	.L10778	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L10755:
	l.jal   	sqlite3OsCloseFree	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
.L10820:
	l.ori   	r3,r14,0	 # move reg to reg
.L10841:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.j     	.L10839	# delay slot filled
	l.sfeqi	r18,5
.L10833:
	l.lwz   	r6,16(r1)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L10853	# delay slot filled
	l.addi  	r22,r0,0	 # move immediate I
	l.lwz   	r4,0(r30)	 # SI load
	l.lwz   	r11,48(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.andi  	r16,r11,1024
	l.sfeqi	r16,0
	l.bf	.L10751	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
.L10819:
	l.lwz   	r7,4(r14)	 # SI load
.L10750:
	l.addi  	r22,r0,0	 # move immediate I
.L10853:
	l.addi  	r16,r0,1	 # move immediate I
.L10752:
	l.addi  	r3,r16,-1
	l.ori   	r4,r24,0	 # move reg to reg
	l.sflts 	r3,r7
	l.bnf	.L10836	# delay slot filled
	l.addi  	r16,r16,1
.L10756:
	l.lwz   	r3,8(r14)	 # SI load
	l.add   	r3,r3,r22
	l.addi  	r22,r22,24
	l.lwz   	r5,4(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L10752	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	sqlite3BtreeCommitPhaseOne
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L10755	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r3,r16,-1
	l.lwz   	r7,4(r14)	 # SI load
	l.ori   	r4,r24,0	 # move reg to reg
	l.sflts 	r3,r7
	l.bf	.L10756	# delay slot filled
	l.addi  	r16,r16,1
.L10836:
	l.jal   	sqlite3OsCloseFree	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r11,28(r28)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfnei	r18,0
	l.bf	.L10719	# delay slot filled
	l.movhi  	r22,hi(sqlite3Hooks)
	l.ori   	r22,r22,lo(sqlite3Hooks)
	l.lwz   	r3,0(r22)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10758
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
.L10758:
	l.lwz   	r7,4(r14)	 # SI load
	l.sflesi	r7,0
	l.bf	.L10759
	l.nop			# nop delay slot
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r18,r16,0	 # move reg to reg
.L10761:
	l.lwz   	r3,8(r14)	 # SI load
	l.addi  	r18,r18,1
	l.add   	r3,r3,r16
	l.addi  	r16,r16,24
	l.lwz   	r4,4(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L10760	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	sqlite3BtreeCommitPhaseTwo
	l.nop			# nop delay slot
	l.lwz   	r7,4(r14)	 # SI load
.L10760:
	l.sflts 	r18,r7
	l.bf	.L10761
	l.nop			# nop delay slot
.L10759:
	l.lwz   	r3,4(r22)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10733
	l.nop			# nop delay slot
	l.jalr  	r3
	l.nop			# nop delay slot
.L10733:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	callFinaliser	# delay slot filled
	l.addi  	r4,r0,64	 # move immediate I
	l.lwz   	r3,12(r14)	 # SI load
	l.addi  	r4,r0,-17	 # move immediate I
	l.and   	r3,r3,r4
	l.j     	.L10763	# delay slot filled
	l.sw    	12(r14),r3	 # SI store
.L10751:
	l.lwz   	r4,0(r30)	 # SI load
	l.lwz   	r11,20(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L10819	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.jal   	sqlite3OsCloseFree	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.lwz   	r6,28(r28)	 # SI load
	l.jalr  	r6	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.j     	.L10839	# delay slot filled
	l.sfeqi	r18,5
.L10713:
	l.jal   	sqlite3RollbackAll	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L10840	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L10784:
	l.j     	.L10776	# delay slot filled
	l.addi  	r18,r0,19	 # move immediate I
.L10830:
	l.lwz   	r8,8(r14)	 # SI load
	l.j     	.L10722	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L10812:
	l.j     	.L10820	# delay slot filled
	l.addi  	r18,r0,7	 # move immediate I
.L10786:
	l.j     	.L10776	# delay slot filled
	l.addi  	r18,r0,7	 # move immediate I
.L10747:
	l.jal   	sqlite3OsCloseFree	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.lwz   	r11,28(r28)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.j     	.L10839	# delay slot filled
	l.sfeqi	r18,5
.L10832:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.j     	.L10841	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.LFE584:
	.size	sqlite3VdbeHalt, .-sqlite3VdbeHalt
	.align	4
.proc	sqlite3VdbeReset
	.type	sqlite3VdbeReset, @function
sqlite3VdbeReset:
.LFB586:
	l.sw    	-24(r1),r2	 # SI store
.LCFI3832:
	l.sw    	-20(r1),r14	 # SI store
.LCFI3833:
	l.sw    	-12(r1),r18	 # SI store
.LCFI3834:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3835:
	l.sw    	-16(r1),r16	 # SI store
.LCFI3836:
	l.sw    	-8(r1),r20	 # SI store
.LCFI3837:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI3838:
	l.jal   	sqlite3VdbeHalt	# delay slot filled
	l.lwz   	r18,0(r3)	 # SI load
	l.lwz   	r2,96(r14)	 # SI load
	l.sfltsi	r2,0
	l.bf	.L10855
	l.nop			# nop delay slot
	l.lwz   	r5,116(r14)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L10856	# delay slot filled
	l.movhi  	r2,hi(sqlite3Hooks)
	l.ori   	r2,r2,lo(sqlite3Hooks)
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L10868	# delay slot filled
	l.addi  	r4,r0,-1	 # move immediate I
	l.jalr  	r3
	l.nop			# nop delay slot
	l.lwz   	r5,116(r14)	 # SI load
	l.addi  	r4,r0,-1	 # move immediate I
.L10868:
	l.lwz   	r3,204(r18)	 # SI load
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3ValueSetStr	# delay slot filled
	l.ori   	r7,r4,0	 # move reg to reg
	l.lwz   	r2,4(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L10858
	l.nop			# nop delay slot
	l.jalr  	r2
	l.nop			# nop delay slot
.L10858:
	l.lwz   	r2,100(r14)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.sw    	20(r18),r2	 # SI store
	l.lwz   	r4,116(r14)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	116(r14),r2	 # SI store
.L10859:
	l.ori   	r3,r14,0	 # move reg to reg
.L10867:
	l.jal   	closeAllCursorsExceptActiveVtabs	# delay slot filled
	l.lwz   	r20,0(r14)	 # SI load
	l.lwz   	r4,72(r14)	 # SI load
	l.lwz   	r2,76(r14)	 # SI load
	l.sflesi	r4,0
	l.bf	.L10861	# delay slot filled
	l.addi  	r5,r2,240
	l.addi  	r2,r2,268
	l.j     	.L10863	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
.L10862:
	l.addi  	r3,r0,-16640	 # move immediate I
	l.sfles 	r16,r4
	l.and   	r5,r5,r3
	l.ori   	r5,r5,1
	l.sh    	0(r2),r5	 # movhi
	l.bnf	.L10866	# delay slot filled
	l.addi  	r2,r2,240
.L10863:
	l.lhz   	r5,0(r2)	 # zero_extendqisi2
	l.andi  	r6,r5,32
	l.sfeqi	r6,0
	l.bf	.L10862	# delay slot filled
	l.addi  	r16,r16,1
	l.jal   	sqlite3RowSetClear	# delay slot filled
	l.lwz   	r3,-28(r2)	 # SI load
	l.lhz   	r5,0(r2)	 # zero_extendqisi2
	l.addi  	r3,r0,-16640	 # move immediate I
	l.lwz   	r4,72(r14)	 # SI load
	l.and   	r5,r5,r3
	l.sfles 	r16,r4
	l.ori   	r5,r5,1
	l.sh    	0(r2),r5	 # movhi
	l.bf	.L10863	# delay slot filled
	l.addi  	r2,r2,240
.L10866:
	l.lwz   	r5,76(r14)	 # SI load
	l.addi  	r5,r5,240
.L10861:
	l.jal   	releaseMemArray	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.lwz   	r4,92(r14)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L10869	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
.L10869:
	l.ori   	r3,r20,0	 # move reg to reg
	l.sw    	92(r14),r2	 # SI store
	l.sw    	88(r14),r2	 # SI store
	l.sw    	84(r14),r2	 # SI store
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,116(r14)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r11,24(r18)	 # SI load
	l.sw    	116(r14),r3	 # SI store
	l.sw    	120(r14),r3	 # SI store
	l.movhi 	r3,hi(649854976)	 # move immediate M
	l.lwz   	r2,100(r14)	 # SI load
	l.ori   	r3,r3,60069
	l.and   	r11,r11,r2
	l.sw    	68(r14),r3	 # SI store
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L10855:
	l.lwz   	r4,100(r14)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L10867	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lbz   	r2,126(r14)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L10867
	l.nop			# nop delay slot
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,-1	 # move immediate I
	l.lwz   	r5,116(r14)	 # SI load
	l.ori   	r7,r4,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3ValueSetStr	# delay slot filled
	l.lwz   	r3,204(r18)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,116(r14)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.j     	.L10859	# delay slot filled
	l.sw    	116(r14),r3	 # SI store
.L10856:
	l.lwz   	r4,100(r14)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L10860
	l.nop			# nop delay slot
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.j     	.L10867	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L10860:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.j     	.L10867	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.LFE586:
	.size	sqlite3VdbeReset, .-sqlite3VdbeReset
	.align	4
.proc	sqlite3VdbeFinalize
	.type	sqlite3VdbeFinalize, @function
sqlite3VdbeFinalize:
.LFB587:
	l.movhi 	r5,hi(1369178112)	 # move immediate M
	l.sw    	-12(r1),r2	 # SI store
.LCFI3839:
	l.ori   	r5,r5,10611
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,68(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI3840:
	l.xor   	r4,r3,r5
	l.sw    	-8(r1),r14	 # SI store
.LCFI3841:
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
.LCFI3842:
	l.bf	.L10876	# delay slot filled
	l.addi  	r1,r1,-12
	l.movhi 	r5,hi(-1108213760)	 # move immediate M
	l.ori   	r5,r5,3491
	l.xor   	r4,r3,r5
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.xori  	r4,r4,0xffff
	l.srli  	r4,r4,31
	l.sfeqi	r4,0
	l.bnf	.L10876	# delay slot filled
	l.movhi 	r5,hi(649854976)	 # move immediate M
	l.ori   	r5,r5,60069
	l.sfne 	r3,r5
	l.bnf	.L10877	# delay slot filled
	l.addi  	r14,r0,21	 # move immediate I
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L10877:
	l.ori   	r14,r4,0	 # move reg to reg
.L10873:
	l.jal   	sqlite3VdbeDelete	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi	r1,r1,12
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L10876:
	l.jal   	sqlite3VdbeReset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L10873	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.LFE587:
	.size	sqlite3VdbeFinalize, .-sqlite3VdbeFinalize
	.align	4
.proc	blobReadWrite
	.type	blobReadWrite, @function
blobReadWrite:
.LFB694:
	l.sw    	-24(r1),r2	 # SI store
.LCFI3843:
	l.sw    	-16(r1),r16	 # SI store
.LCFI3844:
	l.sw    	-12(r1),r18	 # SI store
.LCFI3845:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3846:
	l.sw    	-20(r1),r14	 # SI store
.LCFI3847:
	l.sw    	-8(r1),r20	 # SI store
.LCFI3848:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-24
.LCFI3849:
	l.ori   	r11,r4,0	 # move reg to reg
	l.lwz   	r16,20(r3)	 # SI load
	l.sfltsi	r6,0
	l.bf	.L10879	# delay slot filled
	l.lwz   	r18,16(r3)	 # SI load
	l.srli  	r20,r5,31
	l.sfnei	r20,0
	l.bf	.L10879	# delay slot filled
	l.add   	r8,r6,r5
	l.lwz   	r3,4(r3)	 # SI load
	l.sfles 	r8,r3
	l.bnf	.L10879	# delay slot filled
	l.sfeqi	r18,0
	l.bf	.L10881	# delay slot filled
	l.addi  	r14,r0,4	 # move immediate I
	l.lwz   	r4,8(r2)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.add   	r4,r6,r4
	l.jalr  	r7	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfnei	r11,4
	l.bnf	.L10884	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sw    	20(r16),r11	 # SI store
	l.sw    	100(r18),r11	 # SI store
	l.addi	r1,r1,24
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L10879:
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
.L10881:
	l.addi	r1,r1,24
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.L10884:
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.j     	.L10881	# delay slot filled
	l.sw    	16(r2),r20	 # SI store
.LFE694:
	.size	blobReadWrite, .-blobReadWrite
	.align	4
.proc	sqlite3_blob_write
	.global sqlite3_blob_write
	.type	sqlite3_blob_write, @function
sqlite3_blob_write:
.LFB696:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3850:
	l.addi  	r1,r1,-4
.LCFI3851:
	l.movhi  	r7,hi(sqlite3BtreePutData)
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	blobReadWrite	# delay slot filled	# sibcall s
	l.ori   	r7,r7,lo(sqlite3BtreePutData)
.LFE696:
	.size	sqlite3_blob_write, .-sqlite3_blob_write
	.align	4
.proc	sqlite3_blob_read
	.global sqlite3_blob_read
	.type	sqlite3_blob_read, @function
sqlite3_blob_read:
.LFB695:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3852:
	l.addi  	r1,r1,-4
.LCFI3853:
	l.movhi  	r7,hi(sqlite3BtreeData)
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	blobReadWrite	# delay slot filled	# sibcall s
	l.ori   	r7,r7,lo(sqlite3BtreeData)
.LFE695:
	.size	sqlite3_blob_read, .-sqlite3_blob_read
	.align	4
.proc	sqlite3_finalize
	.global sqlite3_finalize
	.type	sqlite3_finalize, @function
sqlite3_finalize:
.LFB606:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3854:
	l.sw    	-8(r1),r2	 # SI store
.LCFI3855:
	l.ori   	r11,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI3856:
	l.bf	.L10888	# delay slot filled
	l.addi  	r1,r1,-8
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.lwz   	r2,0(r3)	 # SI load
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.L10888:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE606:
	.size	sqlite3_finalize, .-sqlite3_finalize
	.align	4
.proc	sqlite3_blob_close
	.global sqlite3_blob_close
	.type	sqlite3_blob_close, @function
sqlite3_blob_close:
.LFB693:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3857:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3858:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3859:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3860:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r16,20(r3)	 # SI load
	l.addi  	r1,r1,-16
.LCFI3861:
	l.jal   	sqlite3_finalize	# delay slot filled
	l.lwz   	r3,16(r3)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi	r1,r1,16
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE693:
	.size	sqlite3_blob_close, .-sqlite3_blob_close
	.align	4
.proc	sqlite3_reset
	.global sqlite3_reset
	.type	sqlite3_reset, @function
sqlite3_reset:
.LFB607:
	l.sw    	-12(r1),r2	 # SI store
.LCFI3862:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3863:
	l.sw    	-8(r1),r14	 # SI store
.LCFI3864:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
.LCFI3865:
	l.bf	.L10891	# delay slot filled
	l.addi  	r1,r1,-12
	l.jal   	sqlite3VdbeReset
	l.nop			# nop delay slot
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeMakeReady	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.addi	r1,r1,12
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r14,-8(r1)	 # SI load
.L10891:
	l.addi	r1,r1,12
	l.ori   	r11,r3,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE607:
	.size	sqlite3_reset, .-sqlite3_reset
	.align	4
.proc	randomBlob
	.type	randomBlob, @function
randomBlob:
.LFB953:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3866:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3867:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3868:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3869:
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi  	r1,r1,-16
.LCFI3870:
	l.jal   	sqlite3_value_int	# delay slot filled
	l.lwz   	r3,0(r5)	 # SI load
	l.sflesi	r11,0
	l.bf	.L10895	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.srai  	r4,r11,31
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	contextMalloc	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L10892	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L10896:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3_randomness	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.movhi  	r6,hi(sqlite3_free)
	l.addi	r1,r1,16
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r6,lo(sqlite3_free)
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3_result_blob	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L10895:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	contextMalloc	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L10896	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L10892:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE953:
	.size	randomBlob, .-randomBlob
	.align	4
.proc	randomFunc
	.type	randomFunc, @function
randomFunc:
.LFB952:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3871:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3872:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3873:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3874:
	l.addi  	r1,r1,-24
.LCFI3875:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r4,r1,0	 # move reg to reg
	l.jal   	sqlite3_randomness	# delay slot filled
	l.addi  	r3,r0,8	 # move immediate I
	l.lwz   	r14,0(r1)	 # SI load
	l.sfltsi	r14,0
	l.bf	.L10902	# delay slot filled
	l.lwz   	r16,4(r1)	 # SI load
.L10898:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r2,8
	l.addi  	r3,r0,4	 # movhi: move immediate
	l.sw    	8(r2),r14	 # SI store
	l.sh    	36(r2),r3	 # movhi
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sw    	12(r2),r16	 # SI store
	l.sb    	38(r2),r3	    # movqi
	l.addi	r1,r1,24
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L10902:
	l.movhi 	r3,hi(-2147483648)	 # move immediate M
	l.sub   	r16,r0,r16
	l.add   	r14,r14,r3
	l.sfgtui	r16,0
	l.bnf	.L10903	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.sub   	r14,r0,r14
	l.sw    	4(r1),r16	 # SI store
	l.sub   	r14,r14,r3
	l.j     	.L10898	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
.L10903:
	l.addi  	r3,r0,0	 # move immediate I
	l.sub   	r14,r0,r14
	l.sw    	4(r1),r16	 # SI store
	l.sub   	r14,r14,r3
	l.j     	.L10898	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
.LFE952:
	.size	randomFunc, .-randomFunc
	.section	.rodata.str1.1
.LC257:
	.string	"TMPDIR"
.LC258:
	.string	"%s/etilqs_"
.LC260:
	.string	"%s.lock"
.LC259:
	.string	"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
	.section .text
	.align	4
.proc	unixOpen
	.type	unixOpen, @function
unixOpen:
.LFB193:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3876:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3877:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3878:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3879:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3880:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3881:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3882:
	l.andi  	r24,r6,4
	l.addi  	r2,r0,-1	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI3883:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3884:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3885:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3886:
	l.addi  	r1,r1,-708
.LCFI3887:
	l.ori   	r18,r6,0	 # move reg to reg
	l.sw    	660(r1),r2	 # SI store
	l.sw    	8(r1),r3	 # SI store
	l.addi  	r2,r0,-256	 # move immediate I
	l.sw    	4(r1),r24	 # SI store
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r14,r5,0	 # move reg to reg
	l.ori   	r30,r7,0	 # move reg to reg
	l.sfeqi	r24,0
	l.bf	.L10905	# delay slot filled
	l.and   	r28,r6,r2
	l.xori  	r4,r28,2048
	l.xori  	r2,r28,16384
	l.sub   	r5,r0,r4
	l.sub   	r3,r0,r2
	l.or    	r4,r5,r4
	l.or    	r2,r3,r2
	l.and   	r2,r2,r4
	l.xori  	r2,r2,0xffff
	l.srli  	r2,r2,31
	l.sw    	4(r1),r2	 # SI store
.L10905:
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r20,r22,0	 # move reg to reg
	l.sw    	0(r14),r3	 # SI store
	l.sw    	4(r14),r3	 # SI store
	l.sw    	8(r14),r3	 # SI store
	l.sw    	12(r14),r3	 # SI store
	l.sw    	16(r14),r3	 # SI store
	l.sw    	20(r14),r3	 # SI store
	l.sw    	24(r14),r3	 # SI store
	l.sfne 	r22,r3
	l.bnf	.L10970	# delay slot filled
	l.sw    	28(r14),r3	 # SI store
	l.andi  	r16,r18,2
.L10986:
	l.sfnei	r16,0
	l.bnf	.L10971	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.sfeqi	r24,0
	l.bf	.L10988	# delay slot filled
	l.andi  	r26,r18,16
	l.ori   	r4,r4,64
.L10915:
	l.andi  	r26,r18,16
.L10988:
	l.sfeqi	r26,0
	l.bf	.L10989	# delay slot filled
	l.andi  	r24,r18,8
	l.movhi 	r2,hi(131072)	 # move immediate M
	l.ori   	r2,r2,128
	l.or    	r4,r4,r2
.L10989:
	l.ori   	r4,r4,32768
	l.sfeqi	r24,0
	l.bnf	.L10972	# delay slot filled
	l.addi  	r2,r0,420	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	open64	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.sfgesi	r11,0
	l.bnf	.L10973	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10918:
	l.sfeqi	r24,0
	l.bnf	.L10974
	l.nop			# nop delay slot
	l.sfeqi	r30,0
.L10985:
	l.bf	.L10990	# delay slot filled
	l.lwz   	r4,4(r1)	 # SI load
	l.sw    	0(r30),r18	 # SI store
	l.lwz   	r4,4(r1)	 # SI load
.L10990:
	l.sfeqi	r4,0
	l.bf	.L10991	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	openDirectory	# delay slot filled
	l.addi  	r4,r1,660
	l.sfeqi	r11,0
	l.bnf	.L10947	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
.L10991:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r11,r11,1
	l.addi  	r4,r0,2	 # move immediate I
	l.jal   	fcntl64	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r18,660(r1)	 # SI load
	l.movhi  	r20,hi(nolockIoMethods)
	l.sw    	12(r14),r2	 # SI store
	l.sw    	16(r14),r18	 # SI store
	l.sfnei	r28,256
	l.bnf	.L10975	# delay slot filled
	l.ori   	r20,r20,lo(nolockIoMethods)
	l.addi  	r5,r0,0	 # move immediate I
.L10992:
	l.sw    	24(r14),r5	 # SI store
.L10946:
	l.sw    	0(r14),r20	 # SI store
	l.addi  	r16,r0,0	 # move immediate I
.L10909:
	l.addi	r1,r1,708
.L10984:
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L10972:
	l.addi  	r2,r0,384	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	open64	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.sfgesi	r11,0
	l.bf	.L10918	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L10973:
	l.jal   	__errno_location
	l.nop			# nop delay slot
	l.lwz   	r2,0(r11)	 # SI load
	l.xori  	r2,r2,21
	l.sub   	r3,r0,r2
	l.or    	r2,r3,r2
	l.sfgesi	r2,0
	l.bnf	.L10976	# delay slot filled
	l.sfeqi	r16,0
	l.j     	.L10909	# delay slot filled
	l.addi  	r16,r0,14	 # move immediate I
.L10971:
	l.sfeqi	r24,0
	l.bf	.L10915	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L10915	# delay slot filled
	l.ori   	r4,r4,64
.L10975:
	l.lwz   	r3,8(r1)	 # SI load
	l.lwz   	r4,20(r3)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r11,0(r4)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.movhi  	r4,hi(posixIoMethods)
	l.ori   	r4,r4,lo(posixIoMethods)
	l.sfne 	r11,r4
	l.bnf	.L10978	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.movhi  	r3,hi(dotlockIoMethods)
	l.ori   	r3,r3,lo(dotlockIoMethods)
	l.sfne 	r11,r3
	l.bf	.L10992	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	strlen	# delay slot filled
	l.addi  	r16,r0,7	 # move immediate I
	l.addi  	r26,r11,6
	l.jal   	sqlite3_malloc	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L10945	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.movhi  	r5,hi(.LC260)
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC260)
	l.addi  	r16,r0,0	 # move immediate I
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r22	 # SI store
.L10945:
	l.j     	.L10944	# delay slot filled
	l.sw    	28(r14),r24	 # SI store
.L10978:
	l.lwz   	r3,12(r14)	 # SI load
	l.jal   	fstat64	# delay slot filled
	l.addi  	r4,r1,532
	l.sfeqi	r11,0
	l.bf	.L10924	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	__errno_location	# delay slot filled
	l.addi  	r16,r0,10	 # move immediate I
	l.lwz   	r3,0(r11)	 # SI load
	l.sfnei	r3,75
	l.bnf	.L10979
	l.nop			# nop delay slot
.L10944:
	l.addi  	r4,r0,0	 # move immediate I
.L10987:
	l.sfeq 	r16,r4
	l.bf	.L10946	# delay slot filled
	l.sw    	24(r14),r4	 # SI store
	l.sflts 	r18,r4
	l.bf	.L10947
	l.nop			# nop delay slot
	l.jal   	close	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L10947:
	l.jal   	close	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L10984	# delay slot filled
	l.addi	r1,r1,708
.L10974:
	l.jal   	unlink	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.j     	.L10985	# delay slot filled
	l.sfeqi	r30,0
.L10976:
	l.bf	.L10909	# delay slot filled
	l.addi  	r16,r0,14	 # move immediate I
	l.sfnei	r26,0
	l.bf	.L10909	# delay slot filled
	l.addi  	r3,r0,-7	 # move immediate I
	l.ori   	r4,r22,0	 # move reg to reg
	l.and   	r6,r18,r3
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r3,8(r1)	 # SI load
	l.ori   	r6,r6,1
	l.jal   	unixOpen	# delay slot filled
	l.ori   	r7,r30,0	 # move reg to reg
	l.j     	.L10909	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L10970:
	l.movhi  	r2,hi(sqlite3_temp_directory)
	l.movhi  	r16,hi(azDirs.8917)
	l.ori   	r2,r2,lo(sqlite3_temp_directory)
	l.ori   	r16,r16,lo(azDirs.8917)
	l.lwz   	r2,0(r2)	 # SI load
	l.lwz   	r3,4(r16)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L10980	# delay slot filled
	l.sw    	0(r16),r2	 # SI store
.L10907:
	l.movhi  	r20,hi(azDirs.8917)
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r20,r20,lo(azDirs.8917)
	l.j     	.L10911	# delay slot filled
	l.addi  	r26,r1,532
.L10982:
	l.lwz   	r2,0(r20)	 # SI load
.L10911:
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r2,0
	l.bf	.L10908	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	stat64
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L10908	# delay slot filled
	l.lwz   	r2,548(r1)	 # SI load
	l.andi  	r2,r2,61440
	l.sfnei	r2,16384
	l.bnf	.L10981
	l.nop			# nop delay slot
.L10908:
	l.addi  	r16,r16,1
	l.sfeqi	r16,6
	l.bnf	.L10982	# delay slot filled
	l.addi  	r20,r20,4
	l.movhi  	r5,hi(.LC40)
	l.ori   	r5,r5,lo(.LC40)
	l.sw    	12(r1),r5	 # SI store
	l.addi  	r20,r1,16
	l.movhi  	r5,hi(.LC258)
.L10993:
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r2,12(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC258)
	l.addi  	r3,r0,496	 # move immediate I
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.jal   	strlen	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r3,r0,15	 # move immediate I
	l.add   	r4,r20,r11
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3_randomness	# delay slot filled
	l.add   	r26,r11,r3
.L10912:
	l.add   	r16,r20,r2
	l.addi  	r4,r0,62	 # move immediate I
	l.jal   	__umodsi3	# delay slot filled
	l.lbz   	r3,0(r16)	 # zero_extendqisi2
	l.movhi  	r3,hi(.LC259)
	l.andi  	r11,r11,0xff	 # zero_extendqisi2
	l.ori   	r3,r3,lo(.LC259)
	l.addi  	r2,r2,1
	l.add   	r11,r11,r3
	l.sfne 	r2,r26
	l.lbz   	r11,0(r11)	 # zero_extendqisi2
	l.bf	.L10912	# delay slot filled
	l.sb    	0(r16),r11	    # movqi
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.add   	r2,r20,r2
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	access	# delay slot filled
	l.sb    	0(r2),r5	    # movqi
	l.sfeqi	r11,0
	l.bf	.L10993	# delay slot filled
	l.movhi  	r5,hi(.LC258)
	l.j     	.L10986	# delay slot filled
	l.andi  	r16,r18,2
.L10981:
	l.lwz   	r3,0(r20)	 # SI load
	l.jal   	access	# delay slot filled
	l.addi  	r4,r0,7	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L10908	# delay slot filled
	l.movhi  	r4,hi(azDirs.8917)
	l.slli  	r2,r16,2
	l.ori   	r4,r4,lo(azDirs.8917)
	l.addi  	r16,r0,1	 # move immediate I
	l.add   	r2,r2,r4
	l.lwz   	r2,0(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	strlen	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
	l.addi  	r11,r11,24
	l.sfgtui	r11,512
	l.bf	.L10909	# delay slot filled
	l.addi  	r20,r1,16
	l.j     	.L10993	# delay slot filled
	l.movhi  	r5,hi(.LC258)
.L10924:
		l.lwz   	r3, 532(r1)
		l.lwz   	r4, 532+4(r1)
		l.sw    	644(r1), r3
		l.sw    	644+4(r1), r4
	l.lwz   	r3,644(r1)	 # SI load
		l.lwz   	r4, 620(r1)
		l.lwz   	r5, 620+4(r1)
	l.sw    	628(r1),r3	 # SI store
	l.lwz   	r3,648(r1)	 # SI load
		l.sw    	652(r1), r4
		l.sw    	652+4(r1), r5
	l.movhi  	r28,hi(lockList)
	l.sw    	632(r1),r3	 # SI store
	l.lwz   	r3,652(r1)	 # SI load
	l.ori   	r28,r28,lo(lockList)
	l.sw    	636(r1),r3	 # SI store
	l.lwz   	r3,656(r1)	 # SI load
	l.lwz   	r22,0(r28)	 # SI load
	l.sw    	640(r1),r3	 # SI store
	l.sfnei	r22,0
	l.bf	.L10963	# delay slot filled
	l.addi  	r24,r1,644
	l.j     	.L10927
	l.nop			# nop delay slot
.L10929:
	l.lwz   	r22,28(r22)	 # SI load
	l.sfnei	r22,0
	l.bnf	.L10927
	l.nop			# nop delay slot
.L10963:
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	memcmp	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L10929	# delay slot filled
	l.sfnei	r22,0
	l.bnf	.L10927
	l.nop			# nop delay slot
	l.lwz   	r3,24(r22)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	24(r22),r3	 # SI store
.L10932:
	l.movhi  	r30,hi(openList)
	l.sw    	8(r14),r22	 # SI store
	l.ori   	r30,r30,lo(openList)
	l.lwz   	r24,0(r30)	 # SI load
	l.sfnei	r24,0
	l.bnf	.L10934	# delay slot filled
	l.addi  	r26,r1,628
	l.j     	.L10994	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
.L10936:
	l.lwz   	r24,32(r24)	 # SI load
	l.sfnei	r24,0
	l.bnf	.L10934	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
.L10994:
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	memcmp	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L10936	# delay slot filled
	l.sfnei	r24,0
	l.bnf	.L10934
	l.nop			# nop delay slot
	l.lwz   	r3,16(r24)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	16(r24),r3	 # SI store
	l.j     	.L10944	# delay slot filled
	l.sw    	4(r14),r24	 # SI store
.L10979:
	l.j     	.L10944	# delay slot filled
	l.addi  	r16,r0,22	 # move immediate I
.L10980:
	l.movhi  	r3,hi(.LC257)
	l.jal   	getenv	# delay slot filled
	l.ori   	r3,r3,lo(.LC257)
	l.lwz   	r2,0(r16)	 # SI load
	l.j     	.L10907	# delay slot filled
	l.sw    	4(r16),r11	 # SI store
.L10934:
	l.jal   	sqlite3_malloc	# delay slot filled
	l.addi  	r3,r0,40	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L10983	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r1,628
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,0(r30)	 # SI load
	l.sw    	20(r24),r4	 # SI store
	l.addi  	r4,r0,1	 # move immediate I
	l.sw    	24(r24),r5	 # SI store
	l.sw    	16(r24),r4	 # SI store
	l.sw    	28(r24),r5	 # SI store
	l.sw    	32(r24),r3	 # SI store
	l.sfeq 	r3,r5
	l.bf	.L10942	# delay slot filled
	l.sw    	36(r24),r5	 # SI store
	l.sw    	36(r3),r24	 # SI store
.L10942:
	l.sw    	0(r30),r24	 # SI store
	l.j     	.L10944	# delay slot filled
	l.sw    	4(r14),r24	 # SI store
.L10927:
	l.jal   	sqlite3_malloc	# delay slot filled
	l.addi  	r3,r0,36	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L10959	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,16	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,0(r28)	 # SI load
	l.addi  	r4,r0,1	 # move immediate I
	l.sw    	16(r22),r5	 # SI store
	l.sw    	24(r22),r4	 # SI store
	l.sw    	20(r22),r5	 # SI store
	l.sw    	28(r22),r3	 # SI store
	l.sfeq 	r3,r5
	l.bf	.L10931	# delay slot filled
	l.sw    	32(r22),r5	 # SI store
	l.sw    	32(r3),r22	 # SI store
.L10931:
	l.j     	.L10932	# delay slot filled
	l.sw    	0(r28),r22	 # SI store
.L10959:
	l.j     	.L10944	# delay slot filled
	l.addi  	r16,r0,7	 # move immediate I
.L10983:
	l.lwz   	r3,24(r22)	 # SI load
	l.addi  	r16,r0,7	 # move immediate I
	l.addi  	r3,r3,-1
	l.sfnei	r3,0
	l.bf	.L10944	# delay slot filled
	l.sw    	24(r22),r3	 # SI store
	l.lwz   	r4,32(r22)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L10939
	l.nop			# nop delay slot
	l.lwz   	r3,28(r22)	 # SI load
	l.sw    	28(r4),r3	 # SI store
	l.lwz   	r3,28(r22)	 # SI load
.L10940:
	l.sfeqi	r3,0
	l.bf	.L10941
	l.nop			# nop delay slot
	l.sw    	32(r3),r4	 # SI store
.L10941:
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3_free	# delay slot filled
	l.addi  	r16,r0,7	 # move immediate I
	l.j     	.L10987	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L10939:
	l.lwz   	r3,28(r22)	 # SI load
	l.j     	.L10940	# delay slot filled
	l.sw    	0(r28),r3	 # SI store
.LFE193:
	.size	unixOpen, .-unixOpen
	.align	4
.proc	sqlite3_db_mutex
	.global sqlite3_db_mutex
	.type	sqlite3_db_mutex, @function
sqlite3_db_mutex:
.LFB1192:
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,76(r3)	 # SI load
.LFE1192:
	.size	sqlite3_db_mutex, .-sqlite3_db_mutex
	.align	4
.proc	sqlite3_db_config
	.global sqlite3_db_config
	.type	sqlite3_db_config, @function
sqlite3_db_config:
.LFB1193:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3888:
	l.addi  	r11,r0,1	 # move immediate I
	l.sfeqi	r4,1001
.LCFI3889:
	l.bnf	.L10997	# delay slot filled
	l.addi  	r1,r1,-4
	l.lwz   	r4,4(r1)	 # SI load
	l.lwz   	r5,8(r1)	 # SI load
	l.jal   	setupLookaside	# delay slot filled
	l.lwz   	r6,12(r1)	 # SI load
.L10997:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9
	l.nop			# nop delay slot
.LFE1193:
	.size	sqlite3_db_config, .-sqlite3_db_config
	.align	4
.proc	sqlite3_last_insert_rowid
	.global sqlite3_last_insert_rowid
	.type	sqlite3_last_insert_rowid, @function
sqlite3_last_insert_rowid:
.LFB1197:
	l.lwz   	r11,48(r3)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r12,52(r3)	 # SI load
.LFE1197:
	.size	sqlite3_last_insert_rowid, .-sqlite3_last_insert_rowid
	.align	4
.proc	sqlite3_changes
	.global sqlite3_changes
	.type	sqlite3_changes, @function
sqlite3_changes:
.LFB1198:
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,68(r3)	 # SI load
.LFE1198:
	.size	sqlite3_changes, .-sqlite3_changes
	.align	4
.proc	sqlite3_total_changes
	.global sqlite3_total_changes
	.type	sqlite3_total_changes, @function
sqlite3_total_changes:
.LFB1199:
	l.jr    	r9	# delay slot filled
	l.lwz   	r11,72(r3)	 # SI load
.LFE1199:
	.size	sqlite3_total_changes, .-sqlite3_total_changes
	.section	.rodata.str1.1
.LC261:
	.string	"unable to close due to unfinalised statements"
.LC262:
	.string	"unable to close due to unfinished backup operation"
	.section .text
	.align	4
.proc	sqlite3_close
	.global sqlite3_close
	.type	sqlite3_close, @function
sqlite3_close:
.LFB1201:
	l.sw    	-28(r1),r2	 # SI store
.LCFI3890:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3891:
	l.sw    	-24(r1),r14	 # SI store
.LCFI3892:
	l.sw    	-20(r1),r16	 # SI store
.LCFI3893:
	l.sw    	-16(r1),r18	 # SI store
.LCFI3894:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3895:
	l.sw    	-8(r1),r22	 # SI store
.LCFI3896:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI3897:
	l.sfeqi	r3,0
	l.bf	.L11005	# delay slot filled
	l.ori   	r11,r3,0	 # move reg to reg
	l.movhi 	r5,hi(-1607925760)	 # move immediate M
	l.lwz   	r3,64(r3)	 # SI load
	l.ori   	r5,r5,42647
	l.xor   	r4,r3,r5
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bf	.L11046	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.movhi 	r5,hi(1266089984)	 # move immediate M
	l.ori   	r5,r5,4752
	l.xor   	r4,r3,r5
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bf	.L11046	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.movhi 	r4,hi(-264568832)	 # move immediate M
	l.ori   	r4,r4,30982
	l.sfne 	r3,r4
	l.bnf	.L11006	# delay slot filled
	l.addi  	r11,r0,21	 # move immediate I
.L11005:
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L11006:
	l.addi  	r4,r0,0	 # move immediate I
.L11046:
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	callFinaliser	# delay slot filled
	l.addi  	r4,r0,68	 # move immediate I
	l.lwz   	r3,140(r2)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L11043	# delay slot filled
	l.movhi  	r5,hi(.LC261)
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r5,lo(.LC261)
	l.j     	.L11005	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
.L11043:
	l.lwz   	r6,4(r2)	 # SI load
	l.sflesi	r6,0
	l.bf	.L11026
	l.nop			# nop delay slot
	l.lwz   	r4,8(r2)	 # SI load
	l.addi  	r4,r4,4
.L11008:
	l.lwz   	r5,0(r4)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L11007	# delay slot filled
	l.addi  	r3,r3,1
	l.lwz   	r5,16(r5)	 # SI load
	l.sfeqi	r5,0
	l.bnf	.L11044	# delay slot filled
	l.movhi  	r5,hi(.LC262)
.L11007:
	l.sflts 	r3,r6
	l.bf	.L11008	# delay slot filled
	l.addi  	r4,r4,24
.L11026:
	l.jal   	sqlite3CloseSavepoints	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,4(r2)	 # SI load
	l.sflesi	r5,0
	l.bf	.L11047	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r18,r0,0	 # move immediate I
	l.ori   	r16,r18,0	 # move reg to reg
.L11011:
	l.lwz   	r14,8(r2)	 # SI load
	l.add   	r14,r14,r18
	l.lwz   	r4,4(r14)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L11010	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.jal   	sqlite3BtreeClose
	l.nop			# nop delay slot
	l.addi  	r5,r0,0	 # move immediate I
	l.sfeqi	r16,1
	l.bf	.L11042	# delay slot filled
	l.sw    	4(r14),r5	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	20(r14),r3	 # SI store
.L11042:
	l.lwz   	r5,4(r2)	 # SI load
.L11010:
	l.addi  	r16,r16,1
	l.sfgts 	r5,r16
	l.bf	.L11011	# delay slot filled
	l.addi  	r18,r18,24
	l.ori   	r3,r2,0	 # move reg to reg
.L11047:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r16,r2,296
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r22,r2,388
.L11015:
	l.lwz   	r5,0(r16)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L11012
	l.nop			# nop delay slot
.L11041:
	l.lwz   	r14,28(r5)	 # SI load
.L11013:
	l.ori   	r4,r5,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r18,8(r5)	 # SI load
	l.sfnei	r18,0
	l.bf	.L11029	# delay slot filled
	l.sfnei	r14,0
	l.bf	.L11041	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
.L11012:
	l.addi  	r16,r16,4
	l.sfne 	r16,r22
	l.bf	.L11015
	l.nop			# nop delay slot
	l.lwz   	r16,396(r2)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L11016
	l.nop			# nop delay slot
.L11033:
	l.lwz   	r18,8(r16)	 # SI load
	l.addi  	r14,r18,16
	l.addi  	r20,r18,76
.L11018:
	l.lwz   	r5,0(r14)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L11017
	l.nop			# nop delay slot
	l.jalr  	r5	# delay slot filled
	l.lwz   	r3,-8(r14)	 # SI load
.L11017:
	l.addi  	r14,r14,20
	l.sfne 	r14,r20
	l.bf	.L11018	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r16,0(r16)	 # SI load
	l.sfnei	r16,0
	l.bf	.L11033
	l.nop			# nop delay slot
.L11016:
	l.jal   	sqlite3HashClear	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r16,276(r2)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L11020
	l.nop			# nop delay slot
.L11032:
	l.lwz   	r14,8(r16)	 # SI load
	l.lwz   	r4,12(r14)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L11048	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jalr  	r4	# delay slot filled
	l.lwz   	r3,8(r14)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
.L11048:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r16,0(r16)	 # SI load
	l.sfnei	r16,0
	l.bf	.L11032
	l.nop			# nop delay slot
.L11020:
	l.jal   	sqlite3HashClear	# delay slot filled
	l.addi  	r3,r2,268
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.lwz   	r3,204(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L11023
	l.nop			# nop delay slot
	l.jal   	sqlite3ValueFree
	l.nop			# nop delay slot
.L11023:
	l.movhi 	r4,hi(-1254817792)	 # move immediate M
	l.lwz   	r5,8(r2)	 # SI load
	l.ori   	r4,r4,31024
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	64(r2),r4	 # SI store
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,44(r5)	 # SI load
	l.lbz   	r3,227(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.movhi 	r3,hi(-1623457792)	 # move immediate M
	l.ori   	r3,r3,11571
	l.bnf	.L11045	# delay slot filled
	l.sw    	64(r2),r3	 # SI store
.L11024:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L11005	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.L11029:
	l.j     	.L11013	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
.L11044:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,5	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r5,lo(.LC262)
	l.j     	.L11005	# delay slot filled
	l.addi  	r11,r0,5	 # move immediate I
.L11045:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,240(r2)	 # SI load
	l.j     	.L11024
	l.nop			# nop delay slot
.LFE1201:
	.size	sqlite3_close, .-sqlite3_close
	.align	4
.proc	sqlite3_busy_handler
	.global sqlite3_busy_handler
	.type	sqlite3_busy_handler, @function
sqlite3_busy_handler:
.LFB1206:
	l.sw    	-4(r1),r2	 # SI store
.LCFI3898:
	l.addi  	r1,r1,-4
.LCFI3899:
	l.addi  	r11,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.sw    	404(r3),r4	 # SI store
	l.sw    	408(r3),r5	 # SI store
	l.sw    	412(r3),r11	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1206:
	.size	sqlite3_busy_handler, .-sqlite3_busy_handler
	.align	4
.proc	sqlite3_progress_handler
	.global sqlite3_progress_handler
	.type	sqlite3_progress_handler, @function
sqlite3_progress_handler:
.LFB1207:
	l.sw    	-4(r1),r2	 # SI store
.LCFI3900:
	l.sflesi	r4,0
.LCFI3901:
	l.bf	.L11051	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi	r1,r1,4
	l.sw    	256(r3),r5	 # SI store
	l.sw    	264(r3),r4	 # SI store
	l.sw    	260(r3),r6	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L11051:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.sw    	256(r3),r2	 # SI store
	l.sw    	264(r3),r2	 # SI store
	l.sw    	260(r3),r2	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1207:
	.size	sqlite3_progress_handler, .-sqlite3_progress_handler
	.align	4
.proc	sqlite3_busy_timeout
	.global sqlite3_busy_timeout
	.type	sqlite3_busy_timeout, @function
sqlite3_busy_timeout:
.LFB1208:
	l.sw    	-4(r1),r2	 # SI store
.LCFI3902:
	l.sflesi	r4,0
.LCFI3903:
	l.bf	.L11054	# delay slot filled
	l.addi  	r1,r1,-4
	l.sw    	416(r3),r4	 # SI store
	l.movhi  	r4,hi(sqliteDefaultBusyCallback)
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r4,r4,lo(sqliteDefaultBusyCallback)
	l.addi	r1,r1,4
	l.sw    	412(r3),r2	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	404(r3),r4	 # SI store
	l.sw    	408(r3),r3	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L11054:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.sw    	404(r3),r2	 # SI store
	l.sw    	408(r3),r2	 # SI store
	l.sw    	412(r3),r2	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1208:
	.size	sqlite3_busy_timeout, .-sqlite3_busy_timeout
	.align	4
.proc	sqlite3_interrupt
	.global sqlite3_interrupt
	.type	sqlite3_interrupt, @function
sqlite3_interrupt:
.LFB1209:
	l.addi  	r4,r0,1	 # move immediate I
	l.sw    	216(r3),r4	 # SI store
	l.jr    	r9
	l.nop			# nop delay slot
.LFE1209:
	.size	sqlite3_interrupt, .-sqlite3_interrupt
	.align	4
.proc	sqlite3_create_function
	.global sqlite3_create_function
	.type	sqlite3_create_function, @function
sqlite3_create_function:
.LFB1211:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3904:
	l.sw    	-8(r1),r2	 # SI store
.LCFI3905:
	l.addi  	r1,r1,-16
.LCFI3906:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r11,16(r1)	 # SI load
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r11,20(r1)	 # SI load
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
	l.addi	r1,r1,16
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1211:
	.size	sqlite3_create_function, .-sqlite3_create_function
	.align	4
.proc	sqlite3_create_function16
	.global sqlite3_create_function16
	.type	sqlite3_create_function16, @function
sqlite3_create_function16:
.LFB1212:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3907:
	l.sw    	-36(r1),r2	 # SI store
.LCFI3908:
	l.sw    	-32(r1),r14	 # SI store
.LCFI3909:
	l.sw    	-28(r1),r16	 # SI store
.LCFI3910:
	l.sw    	-24(r1),r18	 # SI store
.LCFI3911:
	l.sw    	-20(r1),r20	 # SI store
.LCFI3912:
	l.sw    	-16(r1),r22	 # SI store
.LCFI3913:
	l.sw    	-12(r1),r24	 # SI store
.LCFI3914:
	l.sw    	-8(r1),r26	 # SI store
.LCFI3915:
	l.ori   	r22,r5,0	 # move reg to reg
	l.addi  	r1,r1,-44
.LCFI3916:
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r20,r6,0	 # move reg to reg
	l.ori   	r18,r7,0	 # move reg to reg
	l.ori   	r16,r8,0	 # move reg to reg
	l.lwz   	r26,44(r1)	 # SI load
	l.jal   	sqlite3Utf16to8	# delay slot filled
	l.lwz   	r24,48(r1)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.ori   	r8,r16,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
	l.sw    	0(r1),r26	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r24	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi	r1,r1,44
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r26,-8(r1)	 # SI load
.LFE1212:
	.size	sqlite3_create_function16, .-sqlite3_create_function16
	.align	4
.proc	sqlite3_overload_function
	.global sqlite3_overload_function
	.type	sqlite3_overload_function, @function
sqlite3_overload_function:
.LFB1213:
	l.sw    	-16(r1),r2	 # SI store
.LCFI3917:
	l.sw    	-12(r1),r14	 # SI store
.LCFI3918:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3919:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3920:
	l.ori   	r2,r4,0	 # move reg to reg
	l.lbs   	r7,0(r4)	 # extendqisi2_no_sext_mem
	l.addi  	r1,r1,-24
.LCFI3921:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r7,0
	l.bf	.L11060	# delay slot filled
	l.ori   	r16,r5,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.addi  	r7,r7,1
.L11066:
	l.lbs   	r8,0(r7)	 # extendqisi2_no_sext_mem
	l.sfnei	r8,0
	l.bf	.L11066	# delay slot filled
	l.addi  	r7,r7,1
	l.addi  	r7,r7,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r7,r7,r2
	l.ori   	r3,r3,65535
	l.and   	r7,r7,r3
.L11060:
	l.ori   	r5,r7,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.addi  	r7,r0,1	 # move immediate I
	l.jal   	sqlite3FindFunction	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L11065	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi	r1,r1,24
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.L11065:
	l.movhi  	r8,hi(sqlite3InvalidFunction)
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r11,0	 # move reg to reg
	l.ori   	r8,r8,lo(sqlite3InvalidFunction)
	l.sw    	0(r1),r11	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
	l.addi	r1,r1,24
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r16,-8(r1)	 # SI load
.LFE1213:
	.size	sqlite3_overload_function, .-sqlite3_overload_function
	.align	4
.proc	sqlite3_trace
	.global sqlite3_trace
	.type	sqlite3_trace, @function
sqlite3_trace:
.LFB1214:
	l.lwz   	r11,156(r3)	 # SI load
	l.sw    	152(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.sw    	156(r3),r5	 # SI store
.LFE1214:
	.size	sqlite3_trace, .-sqlite3_trace
	.align	4
.proc	sqlite3_profile
	.global sqlite3_profile
	.type	sqlite3_profile, @function
sqlite3_profile:
.LFB1215:
	l.lwz   	r11,164(r3)	 # SI load
	l.sw    	160(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.sw    	164(r3),r5	 # SI store
.LFE1215:
	.size	sqlite3_profile, .-sqlite3_profile
	.align	4
.proc	sqlite3_commit_hook
	.global sqlite3_commit_hook
	.type	sqlite3_commit_hook, @function
sqlite3_commit_hook:
.LFB1216:
	l.lwz   	r11,168(r3)	 # SI load
	l.sw    	172(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.sw    	168(r3),r5	 # SI store
.LFE1216:
	.size	sqlite3_commit_hook, .-sqlite3_commit_hook
	.align	4
.proc	sqlite3_update_hook
	.global sqlite3_update_hook
	.type	sqlite3_update_hook, @function
sqlite3_update_hook:
.LFB1217:
	l.lwz   	r11,184(r3)	 # SI load
	l.sw    	188(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.sw    	184(r3),r5	 # SI store
.LFE1217:
	.size	sqlite3_update_hook, .-sqlite3_update_hook
	.align	4
.proc	sqlite3_rollback_hook
	.global sqlite3_rollback_hook
	.type	sqlite3_rollback_hook, @function
sqlite3_rollback_hook:
.LFB1218:
	l.lwz   	r11,176(r3)	 # SI load
	l.sw    	180(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.sw    	176(r3),r5	 # SI store
.LFE1218:
	.size	sqlite3_rollback_hook, .-sqlite3_rollback_hook
	.section	.rodata.str1.1
.LC263:
	.string	"library routine called out of sequence"
	.section .text
	.align	4
.proc	sqlite3_errmsg
	.global sqlite3_errmsg
	.type	sqlite3_errmsg, @function
sqlite3_errmsg:
.LFB1221:
	l.sw    	-8(r1),r2	 # SI store
.LCFI3922:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3923:
	l.movhi  	r11,hi(.LC189)
	l.addi  	r1,r1,-8
.LCFI3924:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bf	.L11073	# delay slot filled
	l.ori   	r11,r11,lo(.LC189)
	l.movhi 	r5,hi(-1607925760)	 # move immediate M
	l.lwz   	r3,64(r3)	 # SI load
	l.ori   	r5,r5,42647
	l.xor   	r4,r3,r5
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bf	.L11074	# delay slot filled
	l.movhi 	r5,hi(1266089984)	 # move immediate M
	l.ori   	r5,r5,4752
	l.xor   	r4,r3,r5
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bf	.L11074	# delay slot filled
	l.movhi 	r4,hi(-264568832)	 # move immediate M
	l.movhi  	r11,hi(.LC263)
	l.ori   	r4,r4,30982
	l.sfne 	r3,r4
	l.bnf	.L11074	# delay slot filled
	l.ori   	r11,r11,lo(.LC263)
.L11073:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L11074:
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.movhi  	r11,hi(.LC189)
	l.sfnei	r3,0
	l.bf	.L11073	# delay slot filled
	l.ori   	r11,r11,lo(.LC189)
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r3,204(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L11073
	l.nop			# nop delay slot
	l.lbz   	r2,23(r2)	 # zero_extendqisi2
	l.movhi  	r11,hi(.LC124)
	l.sfgtui	r2,26
	l.bf	.L11073	# delay slot filled
	l.ori   	r11,r11,lo(.LC124)
	l.movhi  	r5,hi(aMsg.21565)
	l.slli  	r2,r2,2
	l.ori   	r5,r5,lo(aMsg.21565)
	l.add   	r2,r2,r5
	l.lwz   	r11,0(r2)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L11073
	l.nop			# nop delay slot
	l.movhi  	r11,hi(.LC124)
	l.j     	.L11073	# delay slot filled
	l.ori   	r11,r11,lo(.LC124)
.LFE1221:
	.size	sqlite3_errmsg, .-sqlite3_errmsg
	.align	4
.proc	sqlite3_errmsg16
	.global sqlite3_errmsg16
	.type	sqlite3_errmsg16, @function
sqlite3_errmsg16:
.LFB1222:
	l.sw    	-8(r1),r2	 # SI store
.LCFI3925:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3926:
	l.movhi  	r11,hi(outOfMem.21723)
	l.addi  	r1,r1,-8
.LCFI3927:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfeqi	r3,0
	l.bf	.L11083	# delay slot filled
	l.ori   	r11,r11,lo(outOfMem.21723)
	l.movhi 	r5,hi(-1607925760)	 # move immediate M
	l.lwz   	r3,64(r3)	 # SI load
	l.ori   	r5,r5,42647
	l.xor   	r4,r3,r5
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bf	.L11084	# delay slot filled
	l.movhi 	r5,hi(1266089984)	 # move immediate M
	l.ori   	r5,r5,4752
	l.xor   	r4,r3,r5
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bf	.L11084	# delay slot filled
	l.movhi 	r4,hi(-264568832)	 # move immediate M
	l.movhi  	r11,hi(misuse.21724)
	l.ori   	r4,r4,30982
	l.sfne 	r3,r4
	l.bnf	.L11084	# delay slot filled
	l.ori   	r11,r11,lo(misuse.21724)
.L11083:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L11084:
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.movhi  	r11,hi(outOfMem.21723)
	l.sfnei	r3,0
	l.bf	.L11083	# delay slot filled
	l.ori   	r11,r11,lo(outOfMem.21723)
	l.jal   	sqlite3_value_text16	# delay slot filled
	l.lwz   	r3,204(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L11094	# delay slot filled
	l.addi  	r3,r0,0	 # movqi: move immediate
.L11096:
	l.sb    	30(r2),r3	    # movqi
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L11094:
	l.lbz   	r4,23(r2)	 # zero_extendqisi2
	l.movhi  	r5,hi(.LC124)
	l.lwz   	r3,204(r2)	 # SI load
	l.sfgtui	r4,26
	l.bf	.L11086	# delay slot filled
	l.ori   	r5,r5,lo(.LC124)
	l.movhi  	r5,hi(aMsg.21565)
	l.slli  	r4,r4,2
	l.ori   	r5,r5,lo(aMsg.21565)
	l.add   	r4,r4,r5
	l.lwz   	r5,0(r4)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L11095
	l.nop			# nop delay slot
.L11086:
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3ValueSetStr	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3_value_text16	# delay slot filled
	l.lwz   	r3,204(r2)	 # SI load
	l.j     	.L11096	# delay slot filled
	l.addi  	r3,r0,0	 # movqi: move immediate
.L11095:
	l.movhi  	r5,hi(.LC124)
	l.j     	.L11086	# delay slot filled
	l.ori   	r5,r5,lo(.LC124)
.LFE1222:
	.size	sqlite3_errmsg16, .-sqlite3_errmsg16
	.align	4
.proc	sqlite3_errcode
	.global sqlite3_errcode
	.type	sqlite3_errcode, @function
sqlite3_errcode:
.LFB1223:
	l.sw    	-4(r1),r2	 # SI store
.LCFI3928:
	l.addi  	r11,r0,7	 # move immediate I
	l.sfeqi	r3,0
.LCFI3929:
	l.bf	.L11098	# delay slot filled
	l.addi  	r1,r1,-4
	l.movhi 	r2,hi(-1607925760)	 # move immediate M
	l.lwz   	r4,64(r3)	 # SI load
	l.ori   	r2,r2,42647
	l.xor   	r5,r4,r2
	l.sub   	r6,r0,r5
	l.or    	r5,r6,r5
	l.sfgesi	r5,0
	l.bf	.L11099	# delay slot filled
	l.movhi 	r2,hi(1266089984)	 # move immediate M
	l.ori   	r2,r2,4752
	l.xor   	r5,r4,r2
	l.sub   	r6,r0,r5
	l.or    	r5,r6,r5
	l.sfgesi	r5,0
	l.bf	.L11099	# delay slot filled
	l.movhi 	r2,hi(-264568832)	 # move immediate M
	l.ori   	r2,r2,30982
	l.sfne 	r4,r2
	l.bnf	.L11099	# delay slot filled
	l.addi  	r11,r0,21	 # move immediate I
.L11098:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L11099:
	l.lbz   	r4,30(r3)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L11098	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.lwz   	r11,24(r3)	 # SI load
	l.lwz   	r3,20(r3)	 # SI load
	l.addi	r1,r1,4
	l.and   	r11,r11,r3
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1223:
	.size	sqlite3_errcode, .-sqlite3_errcode
	.section	.rodata.str1.1
.LC264:
	.string	"no such vfs: %s"
.LC265:
	.string	"BINARY"
.LC266:
	.string	"RTRIM"
.LC267:
	.string	"NOCASE"
.LC268:
	.string	"main"
.LC269:
	.string	"sqlite_rename_table"
.LC270:
	.string	"sqlite_rename_trigger"
.LC271:
	.string	"MATCH"
.LC272:
	.string	"automatic extension loading failed: %s"
	.section .text
	.align	4
.proc	openDatabase
	.type	openDatabase, @function
openDatabase:
.LFB1227:
	l.sw    	-32(r1),r2	 # SI store
.LCFI3930:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-24(r1),r16	 # SI store
.LCFI3931:
	l.sw    	-20(r1),r18	 # SI store
.LCFI3932:
	l.sw    	-16(r1),r20	 # SI store
.LCFI3933:
	l.sw    	-8(r1),r24	 # SI store
.LCFI3934:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3935:
	l.sw    	-28(r1),r14	 # SI store
.LCFI3936:
	l.sw    	-12(r1),r22	 # SI store
.LCFI3937:
	l.sw    	0(r4),r2	 # SI store
	l.addi  	r1,r1,-44
.LCFI3938:
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r24,r3,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r20,r6,0	 # move reg to reg
	l.sfne 	r11,r2
	l.bf	.L11104	# delay slot filled
	l.movhi  	r22,hi(sqlite3Config)
	l.ori   	r22,r22,lo(sqlite3Config)
	l.lwz   	r14,4(r22)	 # SI load
	l.sfeq 	r14,r2
	l.bnf	.L11126	# delay slot filled
	l.andi  	r2,r18,32768
.L11105:
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.addi  	r3,r0,484	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L11125	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L11134	# delay slot filled
	l.addi  	r4,r0,255	 # move immediate I
	l.addi  	r3,r0,8	 # move immediate I
	l.sw    	76(r11),r3	 # SI store
.L11134:
	l.addi  	r3,r2,420
	l.sw    	24(r2),r4	 # SI store
	l.movhi 	r4,hi(-264568832)	 # move immediate M
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r12,r0,0	 # move immediate I
	l.ori   	r4,r4,30982
	l.addi  	r14,r0,2	 # move immediate I
	l.sw    	8(r2),r3	 # SI store
	l.addi  	r7,r2,80
	l.addi  	r3,r0,2000	 # move immediate I
		l.sw    	56(r2), r11
		l.sw    	56+4(r2), r12
	l.sw    	64(r2),r4	 # SI store
	l.sw    	4(r2),r14	 # SI store
	l.sw    	8(r7),r3	 # SI store
	l.addi  	r3,r0,1000	 # move immediate I
	l.movhi 	r5,hi(999948288)	 # move immediate M
	l.sw    	12(r7),r3	 # SI store
	l.addi  	r3,r0,500	 # move immediate I
	l.ori   	r5,r5,51712
	l.sw    	16(r7),r3	 # SI store
	l.addi  	r3,r0,25000	 # move immediate I
	l.sw    	0(r7),r5	 # SI store
	l.sw    	20(r7),r3	 # SI store
	l.addi  	r3,r0,127	 # move immediate I
	l.sw    	4(r7),r5	 # SI store
	l.sw    	24(r7),r3	 # SI store
	l.addi  	r3,r0,10	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	28(r7),r3	 # SI store
	l.ori   	r3,r0,50000	 # move immediate K
	l.sw    	32(r7),r3	 # SI store
	l.addi  	r3,r0,999	 # move immediate I
	l.addi  	r12,r0,1	 # movqi: move immediate
	l.sw    	36(r7),r3	 # SI store
	l.addi  	r4,r0,-1	 # movqi: move immediate
	l.lwz   	r3,12(r2)	 # SI load
	l.sb    	28(r2),r12	    # movqi
	l.ori   	r3,r3,32832
	l.sb    	33(r2),r4	    # movqi
	l.sw    	12(r2),r3	 # SI store
	l.sw    	36(r2),r5	 # SI store
	l.sw    	396(r2),r5	 # SI store
	l.sw    	392(r2),r5	 # SI store
	l.sw    	388(r2),r5	 # SI store
	l.sw    	400(r2),r5	 # SI store
	l.sw    	276(r2),r5	 # SI store
	l.sw    	272(r2),r5	 # SI store
	l.sw    	268(r2),r5	 # SI store
	l.sw    	280(r2),r5	 # SI store
	l.jal   	sqlite3_vfs_find	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L11127	# delay slot filled
	l.sw    	0(r2),r11	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.movhi  	r4,hi(.LC265)
	l.movhi  	r7,hi(binCollFunc)
	l.ori   	r8,r6,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC265)
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r7,r7,lo(binCollFunc)
	l.jal   	createCollation	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.movhi  	r4,hi(.LC265)
	l.movhi  	r7,hi(binCollFunc)
	l.ori   	r8,r6,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC265)
	l.addi  	r5,r0,3	 # move immediate I
	l.jal   	createCollation	# delay slot filled
	l.ori   	r7,r7,lo(binCollFunc)
	l.addi  	r6,r0,0	 # move immediate I
	l.movhi  	r4,hi(.LC265)
	l.movhi  	r7,hi(binCollFunc)
	l.ori   	r8,r6,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC265)
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	createCollation	# delay slot filled
	l.ori   	r7,r7,lo(binCollFunc)
	l.addi  	r5,r0,1	 # move immediate I
	l.movhi  	r4,hi(.LC266)
	l.movhi  	r7,hi(binCollFunc)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC266)
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r7,lo(binCollFunc)
	l.jal   	createCollation	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.lbz   	r20,30(r2)	 # zero_extendqisi2
	l.sfeqi	r20,0
	l.bf	.L11110	# delay slot filled
	l.movhi  	r5,hi(.LC265)
.L11125:
	l.jal   	sqlite3_errcode	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
.L11107:
	l.sfnei	r14,7
	l.bnf	.L11128	# delay slot filled
	l.sfeqi	r14,0
	l.bf	.L11120	# delay slot filled
	l.movhi 	r3,hi(1266089984)	 # move immediate M
	l.ori   	r3,r3,4752
	l.sw    	64(r2),r3	 # SI store
.L11120:
	l.sw    	0(r16),r2	 # SI store
.L11133:
	l.addi  	r3,r0,0	 # move immediate I
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
.L11104:
	l.addi	r1,r1,44
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L11126:
	l.sfnei	r2,0
	l.bf	.L11105	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.movhi 	r3,hi(65536)	 # move immediate M
	l.and   	r2,r18,r3
	l.sfnei	r2,0
	l.bf	.L11105	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L11105	# delay slot filled
	l.lwz   	r14,8(r22)	 # SI load
.L11110:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r5,lo(.LC265)
	l.addi  	r6,r0,6	 # move immediate I
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.movhi  	r4,hi(.LC267)
	l.movhi  	r7,hi(nocaseCollatingFunc)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC267)
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r7,r7,lo(nocaseCollatingFunc)
	l.ori   	r8,r20,0	 # move reg to reg
	l.jal   	createCollation	# delay slot filled
	l.sw    	44(r2),r11	 # SI store
	l.lwz   	r4,44(r2)	 # SI load
	l.addi  	r11,r0,1	 # movqi: move immediate
	l.movhi  	r5,hi(.LC267)
	l.sb    	5(r4),r11	    # movqi
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r5,lo(.LC267)
	l.addi  	r6,r0,6	 # move immediate I
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L11135	# delay slot filled
	l.movhi 	r12,hi(-131072)	 # move immediate M
	l.sb    	5(r11),r14	    # movqi
.L11135:
	l.lwz   	r8,8(r2)	 # SI load
	l.ori   	r12,r12,247
	l.ori   	r3,r2,0	 # move reg to reg
	l.and   	r7,r18,r12
	l.ori   	r4,r24,0	 # move reg to reg
	l.sw    	16(r2),r7	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r0,2000	 # move immediate I
	l.ori   	r7,r7,256
	l.jal   	sqlite3BtreeFactory	# delay slot filled
	l.addi  	r8,r8,4
	l.sfeqi	r11,0
	l.bf	.L11112	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r11,3082
	l.bf	.L11129
	l.nop			# nop delay slot
.L11113:
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3_errcode	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L11107	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L11128:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3_close	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L11133	# delay slot filled
	l.sw    	0(r16),r2	 # SI store
.L11127:
	l.movhi  	r5,hi(.LC264)
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r5,lo(.LC264)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.sw    	0(r1),r20	 # SI store
	l.jal   	sqlite3_errcode	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.j     	.L11107	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L11112:
	l.lwz   	r18,8(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3SchemaGet	# delay slot filled
	l.lwz   	r4,4(r18)	 # SI load
	l.lwz   	r5,8(r2)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	20(r18),r11	 # SI store
	l.jal   	sqlite3SchemaGet	# delay slot filled
	l.addi  	r14,r5,24
	l.lwz   	r4,8(r2)	 # SI load
	l.addi  	r3,r0,3	 # movqi: move immediate
	l.movhi  	r5,hi(.LC268)
	l.sb    	9(r4),r3	    # movqi
	l.ori   	r5,r5,lo(.LC268)
	l.lwz   	r3,8(r2)	 # SI load
	l.sw    	0(r4),r5	 # SI store
	l.movhi  	r4,hi(.LC115)
	l.addi  	r3,r3,24
	l.ori   	r4,r4,lo(.LC115)
	l.sw    	20(r14),r11	 # SI store
	l.sw    	0(r3),r4	 # SI store
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sb    	9(r3),r4	    # movqi
	l.movhi 	r3,hi(-1607925760)	 # move immediate M
	l.lbz   	r14,30(r2)	 # zero_extendqisi2
	l.ori   	r3,r3,42647
	l.sfeqi	r14,0
	l.bnf	.L11125	# delay slot filled
	l.sw    	64(r2),r3	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.movhi  	r4,hi(.LC269)
	l.movhi  	r8,hi(renameTableFunc)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC269)
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r8,r8,lo(renameTableFunc)
	l.sw    	0(r1),r14	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r14	 # SI store
	l.movhi  	r4,hi(.LC270)
	l.movhi  	r8,hi(renameTriggerFunc)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC270)
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r8,r8,lo(renameTriggerFunc)
	l.sw    	0(r1),r14	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r14	 # SI store
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L11130	# delay slot filled
	l.movhi  	r4,hi(.LC271)
	l.movhi  	r20,hi(sqlite3Autoext)
.L11136:
	l.ori   	r20,r20,lo(sqlite3Autoext)
	l.lwz   	r6,0(r20)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L11131	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L11116:
	l.jal   	sqlite3_errcode	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11107	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r5,16(r22)	 # SI load
	l.jal   	setupLookaside	# delay slot filled
	l.lwz   	r6,20(r22)	 # SI load
	l.j     	.L11125
	l.nop			# nop delay slot
.L11131:
	l.addi  	r24,r1,8
	l.ori   	r18,r14,0	 # move reg to reg
.L11118:
	l.addi  	r11,r0,0	 # move immediate I
	l.movhi  	r5,hi(sqlite3Apis)
	l.sw    	8(r1),r11	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfges 	r18,r6
	l.bf	.L11116	# delay slot filled
	l.ori   	r5,r5,lo(sqlite3Apis)
	l.lwz   	r6,4(r20)	 # SI load
	l.addi  	r18,r18,1
	l.add   	r6,r6,r14
	l.lwz   	r11,0(r6)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L11117	# delay slot filled
	l.addi  	r14,r14,4
	l.jalr  	r11
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bnf	.L11132	# delay slot filled
	l.movhi  	r5,hi(.LC272)
.L11117:
	l.j     	.L11118	# delay slot filled
	l.lwz   	r6,0(r20)	 # SI load
.L11129:
	l.j     	.L11113	# delay slot filled
	l.addi  	r14,r0,7	 # move immediate I
.L11132:
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r6,8(r1)	 # SI load
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r5,lo(.LC272)
	l.jal   	sqlite3Error	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.j     	.L11116
	l.nop			# nop delay slot
.L11130:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC271)
	l.jal   	sqlite3_overload_function	# delay slot filled
	l.addi  	r5,r0,2	 # move immediate I
	l.sfnei	r11,7
	l.bf	.L11136	# delay slot filled
	l.movhi  	r20,hi(sqlite3Autoext)
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.j     	.L11136	# delay slot filled
	l.sb    	30(r2),r5	    # movqi
.LFE1227:
	.size	openDatabase, .-openDatabase
	.align	4
.proc	execSql
	.type	execSql, @function
execSql:
.LFB1098:
	l.sw    	-8(r1),r2	 # SI store
.LCFI3939:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3940:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI3941:
	l.sfeqi	r4,0
	l.bf	.L11138	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r6,r1,0	 # move reg to reg
	l.jal   	sqlite3_prepare	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L11139
	l.nop			# nop delay slot
	l.jal   	sqlite3_errcode	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L11138:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L11139:
	l.jal   	sqlite3_step	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.jal   	sqlite3_finalize	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1098:
	.size	execSql, .-execSql
	.section	.rodata.str1.1
.LC274:
	.string	"rollback"
.LC275:
	.string	"release"
.LC276:
	.string	"cannot commit - no transaction is active"
.LC277:
	.string	"cannot start a transaction within a transaction"
.LC278:
	.string	"cannot rollback - no transaction is active"
.LC281:
	.string	"cannot open savepoint - SQL statements in progress"
.LC282:
	.string	"no such savepoint: %s"
.LC283:
	.string	"cannot %s savepoint - SQL statements in progress"
.LC284:
	.string	"cannot rollback transaction - SQL statements in progress"
.LC285:
	.string	"cannot commit transaction - SQL statements in progress"
.LC286:
	.string	"database schema has changed"
.LC287:
	.string	"SELECT name, rootpage, sql FROM '%q'.%s WHERE %s"
.LC288:
	.string	"cannot acquire a read lock on the database"
.LC289:
	.string	"Main freelist: "
.LC290:
	.string	"List of tree roots: "
.LC291:
	.string	"Page %d is never used"
.LC292:
	.string	"Pointer map page %d is referenced"
.LC293:
	.string	"Outstanding page count goes from %d to %d during this analysis"
.LC294:
	.string	"cannot VACUUM from within a transaction"
.LC295:
	.string	"ATTACH '' AS vacuum_db;"
.LC296:
	.string	"PRAGMA vacuum_db.synchronous=OFF"
.LC297:
	.string	"BEGIN EXCLUSIVE;"
.LC298:
	.string	"SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND rootpage>0"
.LC299:
	.string	"SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' "
.LC300:
	.string	"SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %'"
.LC301:
	.string	"SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM ' || quote(name) || ';'FROM sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND rootpage>0"
.LC302:
	.string	"SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' "
.LC303:
	.string	"SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM ' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';"
.LC304:
	.string	"INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)"
.LC305:
	.string	"database table is locked: %s"
.LC306:
	.string	"read-only table"
.LC307:
	.string	"interrupted"
	.section	.rodata
	.align	4
.LC273:
	.long	-1008730112
	.long	0
	.align	4
.LC279:
	.long	0
	.long	0
	.align	4
.LC280:
	.long	1138753536
	.long	0
	.section	.rodata.cst4
	.align	4
.LC308:
	.long	2147483647
	.section .text
	.align	4
.proc	sqlite3VdbeExec
	.type	sqlite3VdbeExec, @function
sqlite3VdbeExec:
.LFB691:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3942:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3943:
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	-40(r1),r14	 # SI store
.LCFI3944:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3945:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3946:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3947:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3948:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3949:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3950:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3951:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3952:
	l.addi  	r1,r1,-2900
.LCFI3953:
	l.sw    	36(r1),r2	 # SI store
	l.lwz   	r2,8(r2)	 # SI load
	l.sw    	16(r1),r3	 # SI store
	l.lwz   	r2,20(r2)	 # SI load
	l.lwz   	r3,36(r1)	 # SI load
	l.lbz   	r2,57(r2)	 # zero_extendqisi2
	l.jal   	sqlite3BtreeEnterAll	# delay slot filled
	l.sw    	56(r1),r2	 # SI store
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r2,100(r3)	 # SI load
	l.sfeqi	r2,7
	l.bf	.L12135	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r7,36(r1)	 # SI load
	l.sw    	100(r5),r6	 # SI store
	l.sw    	120(r5),r6	 # SI store
	l.sw    	412(r7),r6	 # SI store
	l.lwz   	r2,216(r7)	 # SI load
	l.sfne 	r2,r6
	l.bf	.L12341	# delay slot filled
	l.addi  	r2,r0,9	 # move immediate I
	l.lwz   	r8,96(r5)	 # SI load
	l.lbz   	r2,30(r7)	 # zero_extendqisi2
	l.sfne 	r2,r6
	l.bf	.L12136	# delay slot filled
	l.sw    	12(r1),r8	 # SI store
	l.sw    	20(r1),r2	 # SI store
	l.sw    	68(r1),r2	 # SI store
	l.sw    	72(r1),r2	 # SI store
	l.sw    	24(r1),r2	 # SI store
	l.sw    	52(r1),r2	 # SI store
	l.sw    	40(r1),r2	 # SI store
	l.sw    	32(r1),r2	 # SI store
	l.lwz   	r2,16(r1)	 # SI load
	l.lwz   	r28,36(r1)	 # SI load
	l.addi  	r2,r2,116
	l.j     	.L11146	# delay slot filled
	l.sw    	80(r1),r2	 # SI store
.L11145:
	l.lwz   	r3,12(r1)	 # SI load
.L12342:
	l.lbz   	r2,30(r28)	 # zero_extendqisi2
	l.addi  	r3,r3,1
	l.sfnei	r2,0
	l.bf	.L12126	# delay slot filled
	l.sw    	12(r1),r3	 # SI store
.L11146:
	l.lwz   	r12,256(r28)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L11147	# delay slot filled
	l.lwz   	r14,20(r5)	 # SI load
	l.lwz   	r6,264(r28)	 # SI load
	l.lwz   	r7,20(r1)	 # SI load
	l.sfeq 	r6,r7
	l.bf	.L11148	# delay slot filled
	l.addi  	r7,r7,1
	l.sw    	20(r1),r7	 # SI store
.L11147:
	l.lwz   	r11,12(r1)	 # SI load
	l.movhi  	r3,hi(opcodeProperty)
	l.slli  	r2,r11,2
	l.slli  	r6,r11,4
	l.ori   	r3,r3,lo(opcodeProperty)
	l.add   	r2,r2,r6
	l.add   	r24,r14,r2
	l.lbz   	r18,0(r24)	 # zero_extendqisi2
	l.add   	r2,r18,r3
	l.lbz   	r12,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r12,2
	l.sfeqi	r2,0
	l.bnf	.L12137	# delay slot filled
	l.andi  	r6,r12,4
	l.sfeqi	r6,0
	l.bf	.L11153	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r13,4(r24)	 # SI load
	l.slli  	r15,r13,4
	l.slli  	r13,r13,8
	l.lwz   	r16,76(r7)	 # SI load
	l.andi  	r14,r12,8
	l.sub   	r13,r13,r15
	l.sfeqi	r14,0
	l.add   	r13,r16,r13
	l.bf	.L11154	# delay slot filled
	l.sw    	32(r1),r13	 # SI store
	l.lwz   	r14,8(r24)	 # SI load
	l.andi  	r12,r12,32
	l.slli  	r7,r14,4
	l.slli  	r14,r14,8
	l.sfeqi	r12,0
	l.sub   	r7,r14,r7
	l.add   	r7,r16,r7
	l.bf	.L11152	# delay slot filled
	l.sw    	40(r1),r7	 # SI store
	l.lwz   	r6,12(r24)	 # SI load
	l.slli  	r15,r6,4
	l.slli  	r6,r6,8
	l.sub   	r6,r6,r15
	l.add   	r6,r16,r6
	l.sw    	24(r1),r6	 # SI store
.L11152:
	l.sfgtui	r18,145
.L12343:
.L12401:
	l.bf	.L12342	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.movhi  	r2,hi(.L11266)
	l.slli  	r6,r18,2
	l.ori   	r2,r2,lo(.L11266)
	l.add   	r6,r6,r2
	l.lwz   	r6,0(r6)	 # SI load
	l.jr    	r6
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L11266:
	.word	.L11145
	.word	.L11156
	.word	.L11157
	.word	.L11158
	.word	.L11159
	.word	.L11160
	.word	.L11161
	.word	.L11162
	.word	.L11163
	.word	.L11164
	.word	.L11165
	.word	.L11166
	.word	.L11145
	.word	.L11165
	.word	.L11167
	.word	.L11168
	.word	.L11169
	.word	.L11170
	.word	.L11171
	.word	.L11172
	.word	.L11173
	.word	.L11174
	.word	.L11175
	.word	.L11176
	.word	.L11145
	.word	.L11177
	.word	.L11178
	.word	.L11179
	.word	.L11180
	.word	.L11181
	.word	.L11182
	.word	.L11183
	.word	.L11184
	.word	.L11185
	.word	.L11186
	.word	.L11187
	.word	.L11188
	.word	.L11189
	.word	.L11190
	.word	.L11191
	.word	.L11192
	.word	.L11193
	.word	.L11194
	.word	.L11195
	.word	.L11163
	.word	.L11196
	.word	.L11197
	.word	.L11198
	.word	.L11199
	.word	.L11200
	.word	.L11201
	.word	.L11202
	.word	.L11203
	.word	.L11186
	.word	.L11204
	.word	.L11205
	.word	.L11206
	.word	.L11207
	.word	.L11208
	.word	.L11209
	.word	.L11210
	.word	.L11211
	.word	.L11212
	.word	.L11193
	.word	.L11213
	.word	.L11214
	.word	.L11215
	.word	.L11215
	.word	.L11166
	.word	.L11216
	.word	.L11205
	.word	.L11217
	.word	.L11218
	.word	.L11219
	.word	.L11219
	.word	.L11219
	.word	.L11219
	.word	.L11219
	.word	.L11219
	.word	.L11220
	.word	.L11221
	.word	.L11221
	.word	.L11221
	.word	.L11221
	.word	.L11222
	.word	.L11222
	.word	.L11222
	.word	.L11222
	.word	.L11222
	.word	.L11223
	.word	.L11224
	.word	.L11225
	.word	.L11226
	.word	.L11227
	.word	.L11228
	.word	.L11229
	.word	.L11230
	.word	.L11231
	.word	.L11232
	.word	.L11233
	.word	.L11234
	.word	.L11145
	.word	.L11235
	.word	.L11236
	.word	.L11237
	.word	.L11238
	.word	.L11200
	.word	.L11239
	.word	.L11240
	.word	.L11205
	.word	.L11241
	.word	.L11242
	.word	.L11243
	.word	.L11244
	.word	.L11245
	.word	.L11145
	.word	.L11246
	.word	.L11247
	.word	.L11248
	.word	.L11145
	.word	.L11249
	.word	.L11250
	.word	.L11251
	.word	.L11205
	.word	.L11252
	.word	.L11253
	.word	.L11254
	.word	.L11255
	.word	.L11188
	.word	.L11256
	.word	.L11257
	.word	.L11258
	.word	.L11259
	.word	.L11260
	.word	.L11145
	.word	.L11145
	.word	.L11145
	.word	.L11145
	.word	.L11145
	.word	.L11145
	.word	.L11145
	.word	.L11261
	.word	.L11262
	.word	.L11263
	.word	.L11264
	.word	.L11265
	.section .text
.L11153:
	l.andi  	r6,r12,8
	l.sfeqi	r6,0
	l.bf	.L11155	# delay slot filled
	l.lwz   	r8,16(r1)	 # SI load
	l.lwz   	r14,8(r24)	 # SI load
	l.slli  	r7,r14,4
	l.slli  	r12,r14,8
	l.lwz   	r16,76(r8)	 # SI load
	l.sub   	r7,r12,r7
	l.add   	r16,r16,r7
	l.j     	.L11152	# delay slot filled
	l.sw    	40(r1),r16	 # SI store
.L12137:
	l.lwz   	r12,8(r24)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.slli  	r6,r12,4
	l.slli  	r7,r12,8
	l.lwz   	r15,76(r4)	 # SI load
	l.sub   	r6,r7,r6
	l.add   	r15,r15,r6
	l.ori   	r3,r15,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemReleaseExternal	# delay slot filled
	l.sw    	24(r1),r15	 # SI store
	l.addi  	r6,r0,1	 # movhi: move immediate
	l.lwz   	r5,24(r1)	 # SI load
	l.sh    	28(r5),r6	 # movhi
	l.j     	.L11152	# delay slot filled
	l.lbz   	r18,0(r24)	 # zero_extendqisi2
.L11154:
	l.andi  	r12,r12,16
	l.sfeqi	r12,0
	l.bf	.L12343	# delay slot filled
	l.sfgtui	r18,145
	l.lwz   	r12,12(r24)	 # SI load
	l.slli  	r15,r12,4
	l.slli  	r12,r12,8
	l.sub   	r12,r12,r15
	l.add   	r12,r16,r12
	l.j     	.L12343	# delay slot filled
	l.sw    	52(r1),r12	 # SI store
.L11155:
	l.andi  	r7,r12,16
	l.sfeqi	r7,0
	l.bf	.L12343	# delay slot filled
	l.sfgtui	r18,145
	l.lwz   	r16,12(r24)	 # SI load
	l.lwz   	r11,16(r1)	 # SI load
	l.slli  	r12,r16,4
	l.slli  	r14,r16,8
	l.lwz   	r17,76(r11)	 # SI load
	l.sub   	r12,r14,r12
	l.add   	r17,r17,r12
	l.j     	.L12401	# delay slot filled
	l.sw    	52(r1),r17	 # SI store
.L11148:
	l.jalr  	r12	# delay slot filled
	l.lwz   	r3,260(r28)	 # SI load
	l.sfnei	r11,0
	l.bf	.L11829	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
	l.j     	.L11147	# delay slot filled
	l.sw    	20(r1),r8	 # SI store
.L11143:
	l.addi  	r2,r0,9	 # move immediate I
.L12341:
	l.lwz   	r8,16(r1)	 # SI load
	l.movhi  	r5,hi(.LC78)
	l.movhi  	r6,hi(.LC307)
	l.sw    	100(r8),r2	 # SI store
	l.ori   	r6,r6,lo(.LC307)
	l.addi  	r3,r8,116
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC78)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3SetString	# delay slot filled
	l.ori   	r30,r2,0	 # move reg to reg
.L11150:
	l.lwz   	r8,16(r1)	 # SI load
.L12298:
	l.sw    	100(r8),r30	 # SI store
	l.ori   	r3,r8,0	 # move reg to reg
	l.jal   	sqlite3VdbeHalt	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
.L11270:
	l.addi	r1,r1,2900
	l.ori   	r11,r30,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L11171:
	l.lwz   	r11,16(r1)	 # SI load
	l.lwz   	r18,200(r11)	 # SI load
	l.addi  	r18,r18,1
	l.sw    	200(r11),r18	 # SI store
.L11251:
	l.lwz   	r19,4(r24)	 # SI load
	l.lwz   	r2,16(r1)	 # SI load
	l.slli  	r17,r19,2
	l.lwz   	r18,48(r2)	 # SI load
	l.add   	r17,r18,r17
	l.lwz   	r20,0(r17)	 # SI load
	l.lwz   	r22,0(r20)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L11645	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.jal   	moveToRoot	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11646	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lbz   	r18,63(r22)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bnf	.L12138	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.addi  	r3,r0,1	 # move immediate I
	l.sb    	18(r20),r11	    # movqi
	l.sb    	28(r20),r11	    # movqi
	l.sw    	88(r20),r11	 # SI store
	l.sb    	17(r20),r11	    # movqi
	l.sb    	20(r20),r2	    # movqi
	l.sw    	88(r1),r3	 # SI store
.L11807:
	l.lwz   	r2,8(r24)	 # SI load
.L12300:
	l.addi  	r2,r2,-1
	l.sw    	12(r1),r2	 # SI store
.L11331:
	l.sfeqi	r30,0
.L12302:
.L12403:
	l.bf	.L12342	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
.L11814:
	l.lwz   	r7,16(r1)	 # SI load
.L12303:
	l.sw    	100(r7),r30	 # SI store
	l.jal   	sqlite3VdbeHalt	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.sfnei	r30,3082
	l.bf	.L11927	# delay slot filled
	l.addi  	r11,r0,1	 # movqi: move immediate
.L12304:
	l.lwz   	r8,36(r1)	 # SI load
	l.addi  	r30,r0,1	 # move immediate I
	l.j     	.L11270	# delay slot filled
	l.sb    	30(r8),r11	    # movqi
.L11228:
	l.addi  	r5,r0,28	 # movqi: move immediate
	l.lwz   	r20,16(r24)	 # SI load
	l.sb    	0(r24),r5	    # movqi
	l.lbs   	r18,0(r20)	 # extendqisi2_no_sext_mem
	l.sfeqi	r18,0
	l.bf	.L11271	# delay slot filled
	l.ori   	r17,r20,0	 # move reg to reg
	l.addi  	r17,r17,1
.L12344:
	l.lbs   	r2,0(r17)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L12344	# delay slot filled
	l.addi  	r17,r17,1
	l.addi  	r17,r17,-1
.L11271:
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.sub   	r14,r17,r20
	l.ori   	r7,r7,65535
	l.lwz   	r6,56(r1)	 # SI load
	l.and   	r14,r14,r7
	l.sfeqi	r6,1
	l.bnf	.L12139	# delay slot filled
	l.sw    	4(r24),r14	 # SI store
	l.lwz   	r18,80(r28)	 # SI load
	l.sflts 	r18,r14
	l.bf	.L12311	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
.L11180:
	l.lwz   	r6,24(r1)	 # SI load
	l.addi  	r7,r0,2562	 # movhi: move immediate
	l.lwz   	r18,4(r24)	 # SI load
	l.sh    	28(r6),r7	 # movhi
	l.lwz   	r8,56(r1)	 # SI load
	l.lwz   	r14,16(r24)	 # SI load
	l.sw    	24(r6),r18	 # SI store
	l.sw    	20(r6),r14	 # SI store
	l.sb    	31(r6),r8	    # movqi
.L11267:
	l.lwz   	r7,12(r1)	 # SI load
.L12299:
	l.lbz   	r2,30(r28)	 # zero_extendqisi2
.L12407:
	l.addi  	r7,r7,1
	l.sfnei	r2,0
	l.bnf	.L11146	# delay slot filled
	l.sw    	12(r1),r7	 # SI store
.L12126:
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r26,r4,116
.L11142:
	l.lwz   	r3,36(r1)	 # SI load
.L12307:
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.movhi  	r5,hi(.LC189)
	l.sb    	30(r3),r4	    # movqi
	l.ori   	r5,r5,lo(.LC189)
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r4,36(r1)	 # SI load
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,7	 # move immediate I
	l.j     	.L12298	# delay slot filled
	l.lwz   	r8,16(r1)	 # SI load
.L11246:
	l.lwz   	r2,52(r1)	 # SI load
	l.lhz   	r18,28(r2)	 # zero_extendqisi2
	l.andi  	r18,r18,1
	l.sfeqi	r18,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11191:
	l.lwz   	r6,4(r24)	 # SI load
	l.lwz   	r5,8(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.sw    	100(r3),r6	 # SI store
	l.sw    	96(r3),r4	 # SI store
	l.sw    	104(r3),r5	 # SI store
	l.lwz   	r2,16(r24)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L11268	# delay slot filled
	l.movhi  	r5,hi(.LC78)
	l.addi  	r3,r3,116
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3SetString	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.L11268:
	l.jal   	sqlite3VdbeHalt	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.sfnei	r11,5
	l.bnf	.L12140	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r8,100(r7)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L11270	# delay slot filled
	l.addi  	r30,r0,101	 # move immediate I
.L11927:
	l.j     	.L11270	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
.L11252:
	l.lwz   	r21,292(r28)	 # SI load
	l.sflesi	r21,0
	l.bf	.L11787	# delay slot filled
	l.lwz   	r20,16(r24)	 # SI load
	l.lwz   	r14,288(r28)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11788	# delay slot filled
	l.sfeqi	r20,0
.L11787:
	l.sfeqi	r20,0
	l.bf	.L12342	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r14,0(r20)	 # SI load
	l.lwz   	r6,56(r14)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L11825	# delay slot filled
	l.ori   	r30,r6,0	 # move reg to reg
	l.sflesi	r21,0
	l.bf	.L11790
	l.nop			# nop delay slot
	l.lwz   	r22,288(r28)	 # SI load
	l.lwz   	r14,0(r22)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11790	# delay slot filled
	l.sfeq 	r20,r14
	l.bf	.L11825	# delay slot filled
	l.addi  	r30,r0,0	 # move immediate I
	l.addi  	r18,r22,4
	l.j     	.L11791	# delay slot filled
	l.ori   	r14,r30,0	 # move reg to reg
.L12141:
	l.lwz   	r2,0(r18)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L11790	# delay slot filled
	l.sfeq 	r20,r2
	l.bf	.L11923	# delay slot filled
	l.addi  	r18,r18,4
.L11791:
	l.addi  	r14,r14,1
	l.sfles 	r21,r14
	l.bnf	.L12141
	l.nop			# nop delay slot
.L11790:
	l.jalr  	r6	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11825	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	addToVTrans	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r30,r11,0	 # move reg to reg
.L11825:
	l.lwz   	r2,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,116(r2)	 # SI load
	l.lwz   	r18,8(r20)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	116(r2),r18	 # SI store
	l.j     	.L11331	# delay slot filled
	l.sw    	8(r20),r3	 # SI store
.L11253:
	l.lwz   	r26,16(r24)	 # SI load
	l.lwz   	r2,0(r26)	 # SI load
	l.lwz   	r20,52(r2)	 # SI load
	l.sfnei	r20,0
	l.bnf	.L12142	# delay slot filled
	l.lwz   	r22,8(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r14,12(r24)	 # SI load
	l.lwz   	r30,36(r3)	 # SI load
	l.sflesi	r22,0
	l.bf	.L11810	# delay slot filled
	l.lwz   	r21,76(r3)	 # SI load
	l.slli  	r19,r14,4
	l.slli  	r14,r14,8
	l.ori   	r18,r30,0	 # move reg to reg
	l.addi  	r20,r0,0	 # move immediate I
	l.sub   	r19,r14,r19
	l.add   	r16,r21,r19
.L11811:
	l.lhz   	r3,28(r16)	 # zero_extendqisi2
	l.addi  	r4,r16,30
	l.jal   	_storeTypeInfo.clone.72	# delay slot filled
	l.addi  	r20,r20,1
	l.sw    	0(r18),r16	 # SI store
	l.sfgts 	r22,r20
	l.addi  	r16,r16,240
	l.bf	.L11811	# delay slot filled
	l.addi  	r18,r18,4
	l.lwz   	r20,52(r2)	 # SI load
.L11810:
	l.lwz   	r14,4(r26)	 # SI load
	l.ori   	r5,r30,0	 # move reg to reg
	l.addi  	r14,r14,1
	l.addi  	r6,r1,2808
	l.ori   	r4,r22,0	 # move reg to reg
	l.sw    	4(r26),r14	 # SI store
	l.jalr  	r20	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.lwz   	r5,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,116(r5)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r14,8(r26)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.sw    	116(r6),r14	 # SI store
	l.sub   	r18,r0,r30
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	8(r26),r7	 # SI store
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3VtabUnlock	# delay slot filled
	l.or    	r18,r18,r30
	l.sfltsi	r18,0
	l.bf	.L12345	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r19,4(r24)	 # SI load
	l.sub   	r18,r0,r19
	l.or    	r18,r18,r19
	l.sfgesi	r18,0
	l.bf	.L12345
	l.nop			# nop delay slot
		l.lwz   	r2, 2808(r1)
		l.lwz   	r3, 2808+4(r1)
		l.sw    	48(r28), r2
		l.sw    	48+4(r28), r3
	l.lwz   	r3,16(r1)	 # SI load
.L12345:
	l.lwz   	r18,132(r3)	 # SI load
	l.addi  	r2,r18,1
	l.j     	.L11331	# delay slot filled
	l.sw    	132(r3),r2	 # SI store
.L11255:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r20,8(r28)	 # SI load
	l.add   	r14,r18,r18
	l.ori   	r3,r28,0	 # move reg to reg
	l.add   	r18,r14,r18
	l.lwz   	r4,16(r24)	 # SI load
	l.slli  	r2,r18,3
	l.add   	r2,r20,r2
	l.jal   	sqlite3FindTable	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r14,52(r11)	 # SI load
	l.lwz   	r18,64(r11)	 # SI load
	l.ori   	r20,r11,0	 # move reg to reg
	l.sfnei	r14,0
	l.bnf	.L12143	# delay slot filled
	l.lwz   	r26,0(r18)	 # SI load
	l.lwz   	r21,0(r14)	 # SI load
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r6,r14,8
	l.lwz   	r7,4(r21)	 # SI load
	l.jal   	vtabCallConstructor.clone.111	# delay slot filled
	l.lwz   	r8,80(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L11814	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r14,56(r20)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11267	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	addToVTrans	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L11331	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11254:
	l.lwz   	r5,32(r1)	 # SI load
	l.lwz   	r18,0(r5)	 # SI load
	l.lwz   	r14,4(r5)	 # SI load
	l.or    	r18,r18,r14
	l.sfnei	r18,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11256:
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r14,0(r3)	 # SI load
	l.sfgtsi	r14,0
	l.bnf	.L12144	# delay slot filled
	l.sfnei	r14,0
.L11955:
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11257:
	l.lwz   	r7,24(r1)	 # SI load
	l.addi  	r8,r0,8	 # movhi: move immediate
	l.sh    	28(r7),r8	 # movhi
	l.lwz   	r14,16(r24)	 # SI load
		l.lwz   	r2, 0(r14)
		l.lwz   	r3, 4(r14)
		l.sw    	8(r7), r2
		l.sw    	8+4(r7), r3
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11258:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r11,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r18,48(r11)	 # SI load
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.add   	r14,r18,r14
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.lwz   	r14,0(r14)	 # SI load
	l.lwz   	r18,0(r14)	 # SI load
	l.sb    	20(r14),r2	    # movqi
	l.sfeqi	r18,0
	l.bf	.L11267	# delay slot filled
	l.sb    	17(r14),r3	    # movqi
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,64(r18)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.sw    	64(r18),r4	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sb    	63(r18),r5	    # movqi
.L11259:
	l.lwz   	r6,72(r1)	 # SI load
	l.sfgesi	r6,0
	l.bnf	.L12145	# delay slot filled
	l.lwz   	r7,72(r1)	 # SI load
	l.sfnei	r7,0
	l.bf	.L11370
	l.nop			# nop delay slot
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11260:
	l.lwz   	r24,16(r24)	 # SI load
	l.j     	.L11267	# delay slot filled
	l.sw    	68(r1),r24	 # SI store
.L11261:
	l.lwz   	r3,32(r1)	 # SI load
	l.lhz   	r20,28(r3)	 # zero_extendqisi2
	l.andi  	r14,r20,1
	l.sfnei	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.andi  	r14,r20,16
	l.addi  	r4,r0,97	 # move immediate I
	l.srai  	r14,r14,3
	l.lwz   	r5,56(r1)	 # SI load
	l.or    	r14,r14,r20
	l.jal   	applyAffinity	# delay slot filled
	l.sh    	28(r3),r14	 # movhi
	l.lwz   	r4,32(r1)	 # SI load
	l.lhz   	r14,28(r4)	 # zero_extendqisi2
	l.andi  	r30,r14,16384
	l.sfeqi	r30,0
	l.bnf	.L12146
	l.nop			# nop delay slot
.L11346:
	l.addi  	r6,r0,-16413	 # move immediate I
	l.lwz   	r7,32(r1)	 # SI load
	l.and   	r14,r14,r6
	l.j     	.L11331	# delay slot filled
	l.sh    	28(r7),r14	 # movhi
.L11262:
	l.lwz   	r8,32(r1)	 # SI load
	l.lhz   	r18,28(r8)	 # zero_extendqisi2
	l.andi  	r14,r18,1
	l.sfnei	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.andi  	r14,r18,16
	l.sfnei	r14,0
	l.bnf	.L12147	# delay slot filled
	l.addi  	r3,r0,-240	 # move immediate I
	l.lwz   	r4,32(r1)	 # SI load
	l.and   	r14,r18,r3
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r4),r14	 # movhi
.L11263:
	l.lwz   	r5,32(r1)	 # SI load
	l.lhz   	r14,28(r5)	 # zero_extendqisi2
	l.andi  	r14,r14,13
	l.sfnei	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.movhi  	r18,hi(.LC273)
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.ori   	r18,r18,lo(.LC273)
		l.lwz   	r5, 0(r18)
		l.lwz   	r6, 4(r18)
		l.sw    	44(r1), r11
		l.sw    	44+4(r1), r12
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bf	.L11840
	l.nop			# nop delay slot
	l.movhi  	r14,hi(.LC280)
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
	l.ori   	r14,r14,lo(.LC280)
		l.lwz   	r5, 0(r14)
		l.lwz   	r6, 4(r14)
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bf	.L11840
	l.nop			# nop delay slot
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__floatdidf
	l.nop			# nop delay slot
		l.or    	r14, r11, r0
		l.or    	r15, r12, r0
.L11348:
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.jal   	__eqdf2
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bf	.L12148	# delay slot filled
	l.lwz   	r6,32(r1)	 # SI load
	l.addi  	r7,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r6)	 # zero_extendqisi2
	l.and   	r14,r14,r7
		l.lwz   	r2, 44(r1)
		l.lwz   	r3, 44+4(r1)
	l.ori   	r14,r14,8
		l.sw    	8(r6), r2
		l.sw    	8+4(r6), r3
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r6),r14	 # movhi
.L11264:
	l.lwz   	r5,32(r1)	 # SI load
	l.lhz   	r14,28(r5)	 # zero_extendqisi2
	l.andi  	r14,r14,1
	l.sfnei	r14,0
	l.bf	.L11267
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeMemIntegerify	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11156:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r7,16(r1)	 # SI load
	l.slli  	r18,r18,2
	l.lwz   	r14,48(r7)	 # SI load
	l.add   	r18,r14,r18
	l.lwz   	r18,0(r18)	 # SI load
	l.lbz   	r22,20(r18)	 # zero_extendqisi2
	l.sfnei	r22,0
	l.bf	.L11267	# delay slot filled
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.lwz   	r14,76(r18)	 # SI load
	l.lwz   	r20,0(r14)	 # SI load
	l.lwz   	r14,4(r20)	 # SI load
	l.lwz   	r2,0(r20)	 # SI load
	l.addi  	r14,r14,1
	l.sw    	4(r20),r14	 # SI store
	l.sb    	128(r7),r8	    # movqi
	l.lwz   	r14,36(r2)	 # SI load
	l.jalr  	r14	# delay slot filled
	l.lwz   	r3,76(r18)	 # SI load
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r11,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,116(r11)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.sb    	128(r11),r22	    # movqi
	l.lwz   	r6,8(r20)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	116(r4),r6	 # SI store
	l.sw    	8(r20),r22	 # SI store
	l.jal   	sqlite3VtabUnlock	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.sfnei	r30,0
	l.bf	.L11807
	l.nop			# nop delay slot
	l.lwz   	r14,40(r2)	 # SI load
	l.jalr  	r14	# delay slot filled
	l.lwz   	r3,76(r18)	 # SI load
	l.sfnei	r11,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.j     	.L12300	# delay slot filled
	l.lwz   	r2,8(r24)	 # SI load
.L11157:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r14,8(r24)	 # SI load
	l.slli  	r20,r18,4
	l.addi  	r14,r14,-1
	l.slli  	r18,r18,8
	l.lwz   	r8,16(r1)	 # SI load
	l.slli  	r21,r14,4
	l.slli  	r14,r14,8
	l.sub   	r18,r18,r20
	l.lwz   	r20,76(r8)	 # SI load
	l.sub   	r14,r14,r21
	l.add   	r18,r20,r18
	l.add   	r20,r18,r14
	l.sfgtu 	r18,r20
	l.bf	.L11267	# delay slot filled
	l.lwz   	r22,16(r24)	 # SI load
	l.ori   	r14,r18,0	 # move reg to reg
	l.j     	.L11426	# delay slot filled
	l.lwz   	r16,56(r1)	 # SI load
.L11425:
	l.sub   	r2,r14,r18
.L12301:
	l.movhi 	r11,hi(-286392320)	 # move immediate M
	l.srai  	r2,r2,4
	l.ori   	r11,r11,61167
	l.ori   	r3,r14,0	 # move reg to reg
	l.mul   	r2,r2,r11
	l.add   	r2,r22,r2
	l.ori   	r5,r16,0	 # move reg to reg
	l.lbs   	r4,0(r2)	 # extendqisi2_no_sext_mem
	l.jal   	applyAffinity	# delay slot filled
	l.addi  	r14,r14,240
	l.sfgeu 	r20,r14
	l.bnf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11426:
	l.lhz   	r2,28(r14)	 # zero_extendqisi2
	l.andi  	r2,r2,16384
	l.sfeqi	r2,0
	l.bf	.L11425
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeMemExpandBlob	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L12301	# delay slot filled
	l.sub   	r2,r14,r18
.L11158:
	l.lwz   	r6,8(r24)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r1,2376
	l.addi  	r5,r0,240	 # move immediate I
	l.lwz   	r14,4(r24)	 # SI load
	l.jal   	memset	# delay slot filled
	l.sw    	120(r1),r6	 # SI store
	l.lwz   	r18,12(r24)	 # SI load
	l.lwz   	r7,16(r1)	 # SI load
	l.slli  	r21,r18,4
	l.slli  	r18,r18,8
	l.lwz   	r6,76(r7)	 # SI load
	l.slli  	r14,r14,2
	l.sub   	r18,r18,r21
	l.lwz   	r20,48(r7)	 # SI load
	l.add   	r6,r6,r18
	l.add   	r14,r20,r14
	l.lhz   	r18,28(r6)	 # zero_extendqisi2
	l.lwz   	r14,0(r14)	 # SI load
	l.addi  	r8,r0,-16640	 # move immediate I
	l.sw    	44(r1),r14	 # SI store
	l.and   	r14,r18,r8
	l.lwz   	r11,44(r1)	 # SI load
	l.ori   	r14,r14,1
	l.lwz   	r20,0(r11)	 # SI load
	l.sw    	60(r1),r6	 # SI store
	l.sfeqi	r20,0
	l.bf	.L11383	# delay slot filled
	l.sh    	28(r6),r14	 # movhi
	l.jal   	sqlite3VdbeCursorMoveto	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r2,44(r1)	 # SI load
	l.lbz   	r15,20(r2)	 # zero_extendqisi2
	l.sfeqi	r15,0
	l.bf	.L11384	# delay slot filled
	l.lwz   	r18,0(r2)	 # SI load
	l.sw    	2832(r1),r11	 # SI store
	l.sw    	76(r1),r11	 # SI store
.L11385:
	l.lwz   	r11,44(r1)	 # SI load
.L12376:
	l.lwz   	r22,2832(r1)	 # SI load
	l.lwz   	r11,64(r11)	 # SI load
	l.sw    	84(r1),r11	 # SI store
.L11391:
	l.sfeqi	r22,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r14,80(r28)	 # SI load
	l.sflts 	r14,r22
	l.bf	.L11275	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r7,96(r6)	 # SI load
	l.lwz   	r23,80(r5)	 # SI load
	l.lwz   	r21,88(r6)	 # SI load
	l.sfne 	r21,r23
	l.bnf	.L12149	# delay slot filled
	l.sw    	96(r1),r7	 # SI store
	l.lwz   	r11,84(r1)	 # SI load
	l.lwz   	r3,96(r1)	 # SI load
	l.slli  	r21,r11,2
	l.lwz   	r2,44(r1)	 # SI load
	l.lwz   	r4,76(r1)	 # SI load
	l.add   	r21,r3,r21
	l.sw    	92(r2),r22	 # SI store
	l.sw    	88(r2),r23	 # SI store
	l.sw    	100(r1),r21	 # SI store
	l.sfnei	r4,0
	l.bnf	.L12150	# delay slot filled
	l.sw    	100(r2),r21	 # SI store
	l.lwz   	r26,76(r1)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
.L11394:
	l.lbs   	r14,0(r26)	 # extendqisi2_no_sext_mem
	l.sfltsi	r14,0
	l.bf	.L11405	# delay slot filled
	l.lbz   	r22,0(r26)	 # zero_extendqisi2
	l.addi  	r16,r0,1	 # move immediate I
	l.sw    	2844(r1),r22	 # SI store
.L11406:
	l.lwz   	r8,76(r1)	 # SI load
	l.sfnei	r8,0
	l.bnf	.L12151	# delay slot filled
	l.sfges 	r2,r22
.L11407:
	l.lwz   	r3,84(r1)	 # SI load
.L12393:
	l.add   	r2,r26,r22
	l.sflesi	r3,0
	l.bf	.L11408	# delay slot filled
	l.add   	r20,r26,r16
	l.lwz   	r26,100(r1)	 # SI load
	l.lwz   	r30,96(r1)	 # SI load
	l.addi  	r22,r0,0	 # move immediate I
	l.j     	.L11415	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
.L12152:
	l.sw    	0(r26),r5	 # SI store
	l.lbs   	r6,0(r20)	 # extendqisi2_no_sext_mem
	l.sfltsi	r6,0
	l.bf	.L11410	# delay slot filled
	l.lbz   	r5,0(r20)	 # zero_extendqisi2
	l.addi  	r11,r0,1	 # move immediate I
	l.sw    	0(r30),r5	 # SI store
.L11411:
	l.sfleui	r5,11
	l.bf	.L11412	# delay slot filled
	l.add   	r20,r20,r11
	l.addi  	r5,r5,-12
	l.srli  	r6,r5,1
.L11413:
	l.lwz   	r5,2844(r1)	 # SI load
	l.add   	r5,r5,r6
	l.sw    	2844(r1),r5	 # SI store
.L11414:
	l.addi  	r22,r22,1
	l.addi  	r26,r26,4
	l.sfgts 	r14,r22
	l.bnf	.L11408	# delay slot filled
	l.addi  	r30,r30,4
.L11415:
	l.sfleu 	r2,r20
	l.bnf	.L12152	# delay slot filled
	l.lwz   	r5,2844(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L11414	# delay slot filled
	l.sw    	0(r26),r5	 # SI store
.L11159:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r2,8(r28)	 # SI load
	l.add   	r14,r18,r18
	l.lwz   	r3,52(r1)	 # SI load
	l.jal   	sqlite3VdbeMemIntegerify	# delay slot filled
	l.add   	r18,r14,r18
	l.slli  	r18,r18,3
	l.lwz   	r20,8(r24)	 # SI load
	l.lwz   	r11,52(r1)	 # SI load
	l.add   	r18,r2,r18
	l.addi  	r5,r20,1
	l.lwz   	r14,4(r18)	 # SI load
	l.lwz   	r6,4(r11)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3BtreeUpdateMeta.clone.171	# delay slot filled
	l.lwz   	r4,4(r14)	 # SI load
	l.lwz   	r19,8(r24)	 # SI load
	l.sfnei	r19,0
	l.bnf	.L12153	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfnei	r19,1
	l.bnf	.L12154	# delay slot filled
	l.lwz   	r3,52(r1)	 # SI load
.L11512:
	l.lwz   	r18,4(r24)	 # SI load
	l.sfnei	r18,1
	l.bf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.lwz   	r18,140(r28)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.addi  	r4,r0,1	 # movqi: move immediate
.L12346:
	l.sb    	126(r18),r4	    # movqi
	l.lwz   	r18,8(r18)	 # SI load
	l.sfnei	r18,0
	l.bf	.L12346	# delay slot filled
	l.sfeqi	r30,0
	l.j     	.L12302
	l.nop			# nop delay slot
.L11160:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r18,48(r5)	 # SI load
	l.add   	r14,r18,r14
	l.lwz   	r18,0(r14)	 # SI load
	l.lwz   	r14,0(r18)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11267	# delay slot filled
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.sb    	20(r18),r6	    # movqi
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.sb    	17(r18),r7	    # movqi
		l.sw    	32(r18), r11
		l.sw    	32+4(r18), r12
	l.j     	.L11267	# delay slot filled
	l.sb    	28(r18),r8	    # movqi
.L11161:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r7,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r20,48(r7)	 # SI load
	l.lwz   	r8,24(r1)	 # SI load
	l.add   	r14,r20,r14
	l.addi  	r23,r0,1	 # move immediate I
	l.lwz   	r20,0(r14)	 # SI load
	l.lwz   	r14,72(r20)	 # SI load
	l.lwz   	r21,68(r20)	 # SI load
	l.add   	r22,r14,r23
	l.sw    	0(r8),r21	 # SI store
	l.sfltu 	r22,r14
	l.bnf	.L12155	# delay slot filled
	l.sw    	4(r8),r14	 # SI store
.L11577:
	l.lwz   	r11,24(r1)	 # SI load
	l.addi  	r2,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r11)	 # zero_extendqisi2
	l.and   	r14,r14,r2
	l.add   	r18,r23,r21
	l.ori   	r14,r14,4
	l.sw    	68(r20),r18	 # SI store
	l.sw    	72(r20),r22	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r11),r14	 # movhi
.L11162:
	l.lwz   	r16,4(r24)	 # SI load
	l.sfnei	r16,0
	l.bnf	.L12156	# delay slot filled
	l.lwz   	r30,16(r24)	 # SI load
	l.lwz   	r20,468(r28)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L11483	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L12404	# delay slot filled
	l.lwz   	r3,0(r20)	 # SI load
.L11485:
	l.lwz   	r20,4(r20)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L11483	# delay slot filled
	l.addi  	r14,r14,1
	l.lwz   	r3,0(r20)	 # SI load
.L12404:
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11485
	l.nop			# nop delay slot
	l.lwz   	r21,148(r28)	 # SI load
	l.sfgtsi	r21,0
	l.bnf	.L12157	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.movhi  	r6,hi(.LC275)
	l.addi  	r2,r3,116
	l.sfnei	r16,2
	l.bnf	.L12158	# delay slot filled
	l.ori   	r6,r6,lo(.LC275)
.L11490:
	l.movhi  	r5,hi(.LC283)
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC283)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,5	 # move immediate I
	l.j     	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
.L11163:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r8,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r6,48(r8)	 # SI load
	l.lwz   	r26,8(r24)	 # SI load
	l.add   	r6,r6,r14
	l.lwz   	r16,76(r8)	 # SI load
	l.lwz   	r24,0(r6)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeCursorMoveto	# delay slot filled
	l.lwz   	r18,0(r24)	 # SI load
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lbz   	r6,30(r24)	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bnf	.L12159	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lbz   	r14,63(r18)	 # zero_extendqisi2
	l.sfleui	r14,1
	l.bf	.L12347	# delay slot filled
	l.sfeqi	r14,0
	l.jal   	sqlite3BtreeRestoreCursorPosition	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12160	# delay slot filled
	l.lwz   	r22,112(r1)	 # SI load
.L11636:
	l.lwz   	r6,80(r28)	 # SI load
	l.sflts 	r6,r22
	l.bf	.L12311	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
.L11634:
	l.slli  	r14,r26,4
	l.slli  	r6,r26,8
	l.ori   	r4,r22,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.sub   	r6,r6,r14
	l.add   	r6,r16,r6
	l.ori   	r3,r6,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.sw    	24(r1),r6	 # SI store
	l.sfnei	r11,0
	l.bf	.L12132	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
	l.addi  	r5,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r4)	 # zero_extendqisi2
	l.and   	r14,r14,r5
	l.sw    	24(r4),r22	 # SI store
	l.ori   	r14,r14,16
	l.sh    	28(r4),r14	 # movhi
	l.lbz   	r14,30(r24)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L11638	# delay slot filled
	l.lwz   	r8,24(r1)	 # SI load
	l.lwz   	r7,24(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r5,112(r1)	 # SI load
	l.jal   	sqlite3BtreeKey	# delay slot filled
	l.lwz   	r6,20(r7)	 # SI load
	l.ori   	r30,r11,0	 # move reg to reg
.L11639:
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.lwz   	r11,24(r1)	 # SI load
	l.j     	.L11331	# delay slot filled
	l.sb    	31(r11),r2	    # movqi
.L11164:
	l.lwz   	r14,8(r24)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.slli  	r6,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r15,76(r4)	 # SI load
	l.addi  	r5,r0,4096	 # move immediate I
	l.sub   	r6,r14,r6
	l.lwz   	r4,32(r1)	 # SI load
	l.add   	r15,r15,r6
	l.ori   	r3,r15,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemShallowCopy	# delay slot filled
	l.sw    	24(r1),r15	 # SI store
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11165:
	l.lwz   	r22,12(r24)	 # SI load
	l.lwz   	r15,8(r28)	 # SI load
	l.add   	r14,r22,r22
	l.addi  	r3,r0,0	 # move immediate I
	l.add   	r14,r14,r22
	l.sw    	44(r1),r3	 # SI store
	l.slli  	r14,r14,3
	l.lwz   	r2,4(r24)	 # SI load
	l.lwz   	r16,8(r24)	 # SI load
	l.add   	r14,r15,r14
	l.sfnei	r18,10
	l.bnf	.L12161	# delay slot filled
	l.lwz   	r30,4(r14)	 # SI load
.L11518:
	l.lbz   	r18,3(r24)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bnf	.L12162	# delay slot filled
	l.slli  	r14,r16,4
.L11519:
	l.lbs   	r14,1(r24)	 # extendqisi2_no_sext_mem
	l.sfnei	r14,-6
	l.bnf	.L12163	# delay slot filled
	l.sfnei	r14,-14
	l.bnf	.L12164
	l.nop			# nop delay slot
	l.addi  	r26,r0,0	 # move immediate I
	l.ori   	r14,r26,0	 # move reg to reg
.L11521:
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	allocateCursor	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L12126	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.lwz   	r20,0(r11)	 # SI load
	l.sb    	20(r11),r5	    # movqi
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r14,4(r30)	 # SI load
	l.lwz   	r18,0(r30)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.sw    	4(r14),r18	 # SI store
	l.lwz   	r5,44(r1)	 # SI load
	l.ori   	r6,r26,0	 # move reg to reg
	l.jal   	btreeCursor	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.sw    	60(r22),r26	 # SI store
	l.sfeqi	r11,5
	l.bf	.L11523	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfeqi	r11,16
	l.bf	.L11524	# delay slot filled
	l.sfeqi	r11,0
	l.bnf	.L12309	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r20,0(r22)	 # SI load
	l.lbz   	r18,63(r20)	 # zero_extendqisi2
	l.sfleui	r18,1
	l.bf	.L11525
	l.nop			# nop delay slot
	l.jal   	sqlite3BtreeRestoreCursorPosition	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L11525:
	l.lhs   	r14,88(r20)	 # extendhisi2_no_sext_mem
	l.addi  	r14,r14,23
	l.slli  	r14,r14,2
	l.add   	r14,r20,r14
	l.lwz   	r20,0(r14)	 # SI load
	l.lbz   	r21,5(r20)	 # zero_extendqisi2
	l.lwz   	r14,64(r20)	 # SI load
	l.add   	r14,r14,r21
	l.lbz   	r6,0(r14)	 # zero_extendqisi2
	l.andi  	r14,r6,240
	l.sfnei	r14,0
	l.bf	.L11881	# delay slot filled
	l.andi  	r14,r6,7
	l.sfeqi	r14,2
	l.bnf	.L12165	# delay slot filled
	l.sfnei	r14,5
.L11937:
	l.srli  	r14,r6,1
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.andi  	r6,r6,1
	l.andi  	r14,r14,1
	l.sw    	24(r22),r16	 # SI store
	l.sb    	23(r22),r8	    # movqi
	l.sb    	29(r22),r6	    # movqi
	l.sb    	30(r22),r14	    # movqi
	l.sfeqi	r6,0
	l.bf	.L11527	# delay slot filled
	l.ori   	r18,r14,0	 # move reg to reg
	l.lbs   	r14,1(r24)	 # extendqisi2_no_sext_mem
	l.sfeqi	r14,-6
	l.bf	.L11881
	l.nop			# nop delay slot
.L11527:
	l.sfeqi	r18,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lbs   	r14,1(r24)	 # extendqisi2_no_sext_mem
	l.sfnei	r14,-6
	l.bnf	.L12299
	l.nop			# nop delay slot
.L11881:
	l.addi  	r30,r0,11	 # move immediate I
.L11345:
	l.lwz   	r5,36(r1)	 # SI load
.L12309:
	l.lbz   	r8,30(r5)	 # zero_extendqisi2
	l.sfnei	r8,0
	l.bf	.L11815	# delay slot filled
	l.lwz   	r8,16(r1)	 # SI load
	l.sfeqi	r30,3082
	l.bnf	.L12166	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
	l.sw    	100(r7),r30	 # SI store
	l.jal   	sqlite3VdbeHalt	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.j     	.L12304	# delay slot filled
	l.addi  	r11,r0,1	 # movqi: move immediate
.L11166:
	l.lwz   	r3,32(r1)	 # SI load
	l.lhz   	r18,28(r3)	 # zero_extendqisi2
	l.andi  	r18,r18,1
	l.sfeqi	r18,0
	l.bf	.L11378	# delay slot filled
	l.movhi  	r20,hi(.LC279)
	l.lwz   	r20,12(r24)	 # SI load
.L11379:
	l.sfeqi	r20,0
.L12380:
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11265:
	l.lwz   	r6,32(r1)	 # SI load
	l.lhz   	r14,28(r6)	 # zero_extendqisi2
	l.andi  	r14,r14,1
	l.sfnei	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.ori   	r3,r6,0	 # move reg to reg
	l.lwz   	r7,32(r1)	 # SI load
	l.addi  	r8,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r7)	 # zero_extendqisi2
	l.and   	r14,r14,r8
		l.sw    	8(r7), r11
		l.sw    	8+4(r7), r12
	l.ori   	r14,r14,8
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r7),r14	 # movhi
.L11167:
	l.lwz   	r2,4(r24)	 # SI load
	l.sfnei	r2,0
	l.bf	.L11784	# delay slot filled
	l.addi  	r11,r0,1	 # movqi: move immediate
	l.lwz   	r2,140(r28)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.addi  	r7,r0,1	 # movqi: move immediate
.L12348:
	l.sb    	126(r2),r7	    # movqi
	l.lwz   	r2,8(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L12348
	l.nop			# nop delay slot
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11168:
	l.lwz   	r5,4(r24)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L11500	# delay slot filled
	l.lwz   	r6,8(r24)	 # SI load
	l.lwz   	r3,36(r1)	 # SI load
	l.lbz   	r2,28(r3)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L12349	# delay slot filled
	l.sfeq 	r2,r5
	l.sub   	r2,r0,r6
	l.or    	r7,r2,r6
	l.sfgesi	r7,0
	l.bf	.L11502
	l.nop			# nop delay slot
	l.lwz   	r7,144(r3)	 # SI load
	l.sflesi	r7,1
	l.bnf	.L12167	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
.L11502:
	l.or    	r2,r2,r6
	l.sfltsi	r2,0
	l.bf	.L11503	# delay slot filled
	l.lwz   	r7,36(r1)	 # SI load
	l.lwz   	r2,148(r7)	 # SI load
	l.sflesi	r2,1
	l.bnf	.L12168	# delay slot filled
	l.lwz   	r8,16(r1)	 # SI load
.L11503:
	l.sfeqi	r6,0
	l.bf	.L11505	# delay slot filled
	l.andi  	r2,r5,0xff	 # zero_extendqisi2
	l.jal   	sqlite3RollbackAll	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.lwz   	r2,36(r1)	 # SI load
	l.sb    	28(r2),r3	    # movqi
.L11506:
	l.lwz   	r3,36(r1)	 # SI load
	l.jal   	sqlite3CloseSavepoints	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r2,100(r3)	 # SI load
	l.sfnei	r2,0
	l.bf	.L11270
	l.nop			# nop delay slot
	l.j     	.L11270	# delay slot filled
	l.addi  	r30,r0,101	 # move immediate I
.L11169:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r20,8(r28)	 # SI load
	l.add   	r18,r14,r14
	l.addi  	r4,r1,2844
	l.add   	r2,r18,r14
	l.slli  	r2,r2,3
	l.add   	r2,r20,r2
	l.lwz   	r2,4(r2)	 # SI load
	l.lwz   	r2,4(r2)	 # SI load
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L11814	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r20,2844(r1)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.srai  	r14,r20,31
	l.addi  	r5,r0,4	 # movhi: move immediate
	l.sw    	4(r4),r20	 # SI store
	l.sh    	28(r4),r5	 # movhi
	l.j     	.L11267	# delay slot filled
	l.sw    	0(r4),r14	 # SI store
.L11170:
	l.lwz   	r26,8(r24)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r13,r26,1
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.slli  	r4,r13,2
	l.sfeqi	r11,0
	l.bf	.L12134	# delay slot filled
	l.sw    	44(r1),r11	 # SI store
	l.lwz   	r13,4(r24)	 # SI load
	l.lwz   	r8,16(r1)	 # SI load
	l.slli  	r20,r13,4
	l.slli  	r13,r13,8
	l.lwz   	r18,12(r24)	 # SI load
	l.lwz   	r19,76(r8)	 # SI load
	l.sub   	r13,r13,r20
	l.slli  	r14,r18,4
	l.slli  	r18,r18,8
	l.add   	r13,r19,r13
	l.addi  	r22,r0,0	 # move immediate I
	l.sub   	r14,r18,r14
	l.sw    	32(r1),r13	 # SI store
	l.sfles 	r26,r22
	l.bf	.L11713	# delay slot filled
	l.add   	r16,r19,r14
	l.ori   	r20,r13,0	 # move reg to reg
	l.lwz   	r18,44(r1)	 # SI load
.L11714:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.addi  	r22,r22,1
	l.sw    	0(r18),r12	 # SI store
	l.addi  	r20,r20,240
	l.sfgts 	r26,r22
	l.bf	.L11714	# delay slot filled
	l.addi  	r18,r18,4
	l.ori   	r22,r26,0	 # move reg to reg
.L11713:
	l.slli  	r18,r22,2
	l.lwz   	r11,44(r1)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.add   	r18,r11,r18
	l.lwz   	r6,8(r28)	 # SI load
	l.sw    	0(r18),r2	 # SI store
	l.lbz   	r14,3(r24)	 # zero_extendqisi2
	l.add   	r18,r14,r14
	l.lwz   	r22,4(r16)	 # SI load
	l.add   	r2,r18,r14
	l.slli  	r2,r2,3
	l.add   	r2,r6,r2
	l.lwz   	r14,4(r2)	 # SI load
	l.lwz   	r24,4(r14)	 # SI load
	l.lwz   	r19,0(r14)	 # SI load
	l.lwz   	r18,0(r24)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r18,160(r18)	 # SI load
	l.sw    	4(r24),r19	 # SI store
	l.lwz   	r18,12(r18)	 # SI load
	l.jal   	lockBtreeWithRetry	# delay slot filled
	l.sw    	60(r1),r18	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L12169	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r18,0(r24)	 # SI load
	l.sw    	2716(r1),r24	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.sw    	2720(r1),r18	 # SI store
	l.sw    	2732(r1),r22	 # SI store
	l.sw    	2724(r1),r11	 # SI store
	l.sw    	2736(r1),r14	 # SI store
	l.sfnei	r11,0
	l.bnf	.L12170	# delay slot filled
	l.sw    	2740(r1),r14	 # SI store
	l.addi  	r18,r11,1
	l.jal   	sqlite3Malloc	# delay slot filled
	l.slli  	r3,r18,2
	l.sw    	2728(r1),r11	 # SI store
	l.ori   	r22,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L12171	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
.L12402:
	l.addi  	r14,r14,1
	l.sw    	0(r2),r3	 # SI store
	l.lwz   	r18,2724(r1)	 # SI load
	l.sfleu 	r14,r18
	l.bf	.L12402	# delay slot filled
	l.addi  	r2,r2,4
	l.movhi  	r30,hi(sqlite3PendingByte)
	l.lhz   	r4,20(r24)	 # zero_extendqisi2
	l.ori   	r30,r30,lo(sqlite3PendingByte)
	l.jal   	__divsi3	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
	l.addi  	r20,r11,1
	l.sfgtu 	r20,r18
	l.bf	.L12350	# delay slot filled
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.slli  	r18,r20,2
	l.add   	r20,r22,r18
	l.addi  	r18,r0,1	 # move immediate I
	l.sw    	0(r20),r18	 # SI store
.L12350:
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sb    	2770(r1),r5	    # movqi
	l.sb    	2769(r1),r4	    # movqi
	l.sb    	2768(r1),r5	    # movqi
	l.addi  	r14,r0,100	 # move immediate I
	l.lwz   	r18,12(r24)	 # SI load
	l.addi  	r6,r1,2616
	l.lwz   	r18,64(r18)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r3,r18,32
	l.sw    	2760(r1),r14	 # SI store
	l.addi  	r14,r0,20000	 # move immediate I
	l.sw    	2748(r1),r6	 # SI store
	l.sw    	2752(r1),r6	 # SI store
	l.sw    	2744(r1),r7	 # SI store
	l.sw    	2756(r1),r7	 # SI store
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.sw    	2764(r1),r14	 # SI store
	l.addi  	r3,r18,36
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.movhi  	r7,hi(.LC289)
	l.addi  	r3,r1,2716
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	checkList	# delay slot filled
	l.ori   	r7,r7,lo(.LC289)
	l.sflesi	r26,0
	l.bf	.L12351	# delay slot filled
	l.lwz   	r20,2724(r1)	 # SI load
	l.lwz   	r18,2732(r1)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L11722	# delay slot filled
	l.lwz   	r20,44(r1)	 # SI load
	l.j     	.L11728	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.L11725:
	l.sfnei	r2,0
	l.bnf	.L11722	# delay slot filled
	l.addi  	r20,r20,4
.L11728:
	l.lwz   	r4,0(r20)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L11723
	l.nop			# nop delay slot
	l.lbz   	r2,18(r24)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L12352	# delay slot filled
	l.movhi  	r5,hi(.LC290)
	l.sflesi	r4,1
	l.bf	.L12352	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r3,r1,2716
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	checkPtrmap	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.lwz   	r4,0(r20)	 # SI load
	l.movhi  	r5,hi(.LC290)
.L12352:
	l.addi  	r3,r1,2716
	l.jal   	checkTreePage	# delay slot filled
	l.ori   	r5,r5,lo(.LC290)
.L11723:
	l.addi  	r18,r18,1
	l.sfgts 	r26,r18
	l.bf	.L11725	# delay slot filled
	l.lwz   	r2,2732(r1)	 # SI load
.L11722:
	l.lwz   	r20,2724(r1)	 # SI load
.L12351:
	l.sfeqi	r20,0
	l.bf	.L11726	# delay slot filled
	l.lwz   	r18,2732(r1)	 # SI load
	l.sfnei	r18,0
	l.bnf	.L11726	# delay slot filled
	l.addi  	r18,r0,1	 # move immediate I
	l.addi  	r26,r0,-1	 # move immediate I
	l.addi  	r22,r0,4	 # move immediate I
.L11734:
	l.lwz   	r2,2728(r1)	 # SI load
	l.add   	r2,r2,r22
	l.lwz   	r2,0(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L11729
	l.nop			# nop delay slot
	l.lhz   	r3,22(r24)	 # zero_extendqisi2
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.andi  	r11,r11,0xffff	 # zero_extendqisi2
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r2,r11,1
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.mul   	r11,r11,r2
	l.lhz   	r4,20(r24)	 # zero_extendqisi2
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r14,r11,2
	l.addi  	r2,r11,1
	l.sfne 	r14,r2
	l.bnf	.L12172
	l.nop			# nop delay slot
.L11730:
	l.sfne 	r18,r14
	l.bf	.L12353	# delay slot filled
	l.movhi  	r5,hi(.LC291)
	l.lbz   	r2,18(r24)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L11732
	l.nop			# nop delay slot
.L12353:
	l.addi  	r3,r1,2716
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r5,lo(.LC291)
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.lwz   	r2,2728(r1)	 # SI load
	l.add   	r2,r2,r22
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L11729	# delay slot filled
	l.lwz   	r20,2724(r1)	 # SI load
.L11732:
	l.addi  	r18,r18,1
	l.sfgtu 	r18,r20
	l.bf	.L11726	# delay slot filled
	l.lwz   	r2,2732(r1)	 # SI load
	l.addi  	r22,r22,4
	l.sfnei	r2,0
	l.bf	.L11734	# delay slot filled
	l.addi  	r26,r26,1
.L11726:
	l.jal   	unlockBtreeIfUnused	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r14,0(r24)	 # SI load
	l.lwz   	r8,60(r1)	 # SI load
	l.lwz   	r14,160(r14)	 # SI load
	l.lwz   	r20,12(r14)	 # SI load
	l.sfeq 	r8,r20
	l.bf	.L11735	# delay slot filled
	l.movhi  	r5,hi(.LC293)
	l.addi  	r3,r1,2716
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r5,lo(.LC293)
	l.sw    	0(r1),r8	 # SI store
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	4(r1),r20	 # SI store
.L11735:
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,2728(r1)	 # SI load
	l.lwz   	r18,2740(r1)	 # SI load
	l.sfeqi	r18,0
	l.bnf	.L12173	# delay slot filled
	l.addi  	r3,r1,2744
	l.lwz   	r24,2736(r1)	 # SI load
	l.sfnei	r24,0
	l.bnf	.L12174
	l.nop			# nop delay slot
.L11738:
	l.jal   	sqlite3StrAccumFinish	# delay slot filled
	l.addi  	r3,r1,2744
	l.ori   	r26,r11,0	 # move reg to reg
.L11737:
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,44(r1)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.srai  	r18,r24,31
	l.lwz   	r20,4(r16)	 # SI load
	l.lwz   	r22,0(r16)	 # SI load
	l.sub   	r21,r20,r24
	l.sfgtu 	r21,r20
	l.bf	.L11739	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.addi  	r2,r0,0	 # move immediate I
.L11739:
	l.sub   	r18,r22,r18
	l.sw    	4(r16),r21	 # SI store
	l.sub   	r18,r18,r2
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.sw    	0(r16),r18	 # SI store
	l.sfeqi	r24,0
	l.bnf	.L12354	# delay slot filled
	l.sfeqi	r26,0
	l.j     	.L12305	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
.L11172:
	l.lwz   	r14,8(r24)	 # SI load
	l.lwz   	r2,16(r1)	 # SI load
	l.slli  	r6,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r18,76(r2)	 # SI load
	l.sub   	r6,r14,r6
	l.lhz   	r15,28(r11)	 # zero_extendqisi2
	l.add   	r18,r18,r6
	l.andi  	r2,r15,1
	l.sfeqi	r2,0
	l.bf	.L11376	# delay slot filled
	l.sw    	24(r1),r18	 # SI store
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11173:
	l.lwz   	r14,8(r24)	 # SI load
	l.lwz   	r11,16(r1)	 # SI load
	l.slli  	r6,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r15,76(r11)	 # SI load
	l.lwz   	r4,32(r1)	 # SI load
	l.sub   	r6,r14,r6
	l.addi  	r5,r0,4096	 # move immediate I
	l.add   	r15,r15,r6
	l.ori   	r3,r15,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemShallowCopy	# delay slot filled
	l.sw    	24(r1),r15	 # SI store
	l.lwz   	r2,24(r1)	 # SI load
	l.lhz   	r14,28(r2)	 # zero_extendqisi2
	l.andi  	r14,r14,4096
	l.sfeqi	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.jal   	sqlite3VdbeMemMakeWriteable	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.j     	.L12306	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
.L11174:
	l.lwz   	r14,16(r24)	 # SI load
	l.sfnei	r14,0
	l.bnf	.L12175	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r18,152(r28)	 # SI load
.L12322:
	l.sfeqi	r18,0
	l.bf	.L11267
	l.nop			# nop delay slot
	l.lwz   	r3,156(r28)	 # SI load
	l.jalr  	r18	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11175:
	l.lbz   	r22,3(r24)	 # zero_extendqisi2
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r14,8(r24)	 # SI load
	l.lwz   	r26,36(r6)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L11318	# delay slot filled
	l.lwz   	r21,76(r6)	 # SI load
	l.slli  	r6,r14,4
	l.slli  	r14,r14,8
	l.ori   	r18,r26,0	 # move reg to reg
	l.addi  	r20,r0,0	 # move immediate I
	l.sub   	r6,r14,r6
	l.add   	r16,r21,r6
.L11319:
	l.lhz   	r3,28(r16)	 # zero_extendqisi2
	l.addi  	r4,r16,30
	l.sw    	0(r18),r16	 # SI store
	l.jal   	_storeTypeInfo.clone.72	# delay slot filled
	l.addi  	r20,r20,1
	l.addi  	r16,r16,240
	l.sfgts 	r22,r20
	l.bf	.L11319	# delay slot filled
	l.addi  	r18,r18,4
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r21,76(r7)	 # SI load
.L11318:
	l.lbs   	r6,1(r24)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,-5
	l.bnf	.L12176	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.lwz   	r6,16(r24)	 # SI load
	l.lwz   	r14,0(r6)	 # SI load
	l.sw    	1400(r1),r6	 # SI store
	l.sw    	1396(r1),r14	 # SI store
.L11321:
	l.lwz   	r6,12(r24)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.slli  	r14,r6,4
	l.slli  	r6,r6,8
	l.addi  	r2,r1,1404
	l.addi  	r11,r0,1	 # movhi: move immediate
	l.sub   	r6,r6,r14
	l.sw    	1436(r1),r4	 # SI store
	l.add   	r21,r21,r6
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r21,0	 # move reg to reg
	l.sh    	1432(r1),r11	 # movhi
	l.sw    	1420(r1),r28	 # SI store
	l.sw    	24(r1),r21	 # SI store
	l.jal   	sqlite3VdbeMemMove	# delay slot filled
	l.sw    	1440(r1),r5	 # SI store
	l.lhz   	r14,1432(r1)	 # zero_extendqisi2
	l.addi  	r6,r0,-16640	 # move immediate I
	l.lwz   	r20,1396(r1)	 # SI load
	l.and   	r14,r14,r6
	l.lbz   	r18,3(r20)	 # zero_extendqisi2
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r14,r14,1
	l.andi  	r18,r18,8
	l.sh    	1432(r1),r14	 # movhi
	l.sfeq 	r18,r7
	l.bnf	.L12177	# delay slot filled
	l.sw    	1648(r1),r7	 # SI store
.L11322:
	l.lwz   	r14,12(r20)	 # SI load
	l.addi  	r3,r1,1396
	l.ori   	r4,r22,0	 # move reg to reg
	l.jalr  	r14	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.lbz   	r18,30(r28)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bnf	.L12178	# delay slot filled
	l.lwz   	r22,1400(r1)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L12355	# delay slot filled
	l.lwz   	r30,1648(r1)	 # SI load
	l.lwz   	r19,4(r22)	 # SI load
	l.sflesi	r19,0
	l.bf	.L11325	# delay slot filled
	l.lwz   	r26,4(r24)	 # SI load
	l.addi  	r20,r22,8
.L11329:
	l.sfgtsi	r18,31
	l.bf	.L11326	# delay slot filled
	l.srl   	r3,r26,r18
	l.andi  	r3,r3,1
	l.sfnei	r3,0
	l.bf	.L11327
	l.nop			# nop delay slot
.L11326:
	l.lwz   	r3,0(r20)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L11327
	l.nop			# nop delay slot
	l.lwz   	r4,4(r20)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L12356	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.jalr  	r4
	l.nop			# nop delay slot
	l.lwz   	r19,4(r22)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
.L12356:
	l.sw    	0(r20),r11	 # SI store
.L11327:
	l.addi  	r18,r18,1
	l.sflts 	r18,r19
	l.bf	.L11329	# delay slot filled
	l.addi  	r20,r20,8
	l.lwz   	r22,1400(r1)	 # SI load
.L11325:
	l.addi  	r3,r0,-7	 # movqi: move immediate
	l.sw    	16(r24),r22	 # SI store
	l.sb    	1(r24),r3	    # movqi
	l.lwz   	r30,1648(r1)	 # SI load
.L12355:
	l.sfeqi	r30,0
	l.bnf	.L12179
	l.nop			# nop delay slot
.L11330:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemMove	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.lhz   	r14,28(r4)	 # zero_extendqisi2
	l.andi  	r18,r14,18
	l.sfeqi	r18,0
	l.bf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.andi  	r14,r14,16384
	l.sfeqi	r14,0
	l.bf	.L11332	# delay slot filled
	l.lwz   	r20,24(r4)	 # SI load
	l.lwz   	r14,0(r4)	 # SI load
	l.add   	r20,r20,r14
.L11332:
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r14,16(r5)	 # SI load
	l.lwz   	r18,80(r14)	 # SI load
	l.sflts 	r18,r20
	l.bnf	.L12302	# delay slot filled
	l.sfeqi	r30,0
.L11275:
	l.lwz   	r2,16(r1)	 # SI load
.L12311:
	l.movhi  	r5,hi(.LC123)
.L12406:
	l.addi  	r3,r2,116
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC123)
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,18	 # move immediate I
	l.j     	.L12298	# delay slot filled
	l.lwz   	r8,16(r1)	 # SI load
.L11176:
	l.lwz   	r4,32(r1)	 # SI load
	l.lwz   	r14,0(r4)	 # SI load
	l.sfltsi	r14,0
	l.bnf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11181:
	l.lwz   	r7,32(r1)	 # SI load
	l.lhz   	r14,28(r7)	 # zero_extendqisi2
	l.andi  	r14,r14,4
	l.sfeqi	r14,0
	l.bf	.L11267	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.addi  	r2,r0,-16640	 # move immediate I
	l.lwz   	r8,32(r1)	 # SI load
	l.lhz   	r14,28(r8)	 # zero_extendqisi2
	l.and   	r14,r14,r2
		l.sw    	8(r8), r11
		l.sw    	8+4(r8), r12
	l.ori   	r14,r14,8
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r8),r14	 # movhi
.L11182:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.slli  	r19,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r20,76(r5)	 # SI load
	l.sub   	r2,r14,r19
	l.add   	r20,r20,r2
	l.lhz   	r2,28(r20)	 # zero_extendqisi2
	l.andi  	r2,r2,18
	l.sfnei	r2,0
	l.bf	.L11808	# delay slot filled
	l.lwz   	r18,16(r24)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemStringify	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L11808	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r6,116
.L11183:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3BtreeEnterAll	# delay slot filled
	l.lwz   	r20,4(r24)	 # SI load
	l.lwz   	r14,8(r24)	 # SI load
	l.sfnei	r14,0
	l.bf	.L12180
	l.nop			# nop delay slot
	l.add   	r21,r20,r20
	l.lwz   	r18,8(r28)	 # SI load
	l.add   	r14,r21,r20
	l.slli  	r14,r14,3
	l.add   	r14,r18,r14
	l.lwz   	r14,20(r14)	 # SI load
	l.lhz   	r14,58(r14)	 # zero_extendqisi2
	l.andi  	r14,r14,1
	l.sfeqi	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11693:
	l.movhi  	r6,hi(.LC199)
	l.sfnei	r20,1
	l.bnf	.L12181	# delay slot filled
	l.ori   	r6,r6,lo(.LC199)
.L11694:
	l.add   	r14,r21,r20
	l.lwz   	r15,4(r24)	 # SI load
	l.slli  	r14,r14,3
	l.movhi  	r4,hi(.LC287)
	l.ori   	r3,r28,0	 # move reg to reg
	l.add   	r18,r18,r14
	l.ori   	r4,r4,lo(.LC287)
	l.lwz   	r14,0(r18)	 # SI load
	l.sw    	4(r1),r6	 # SI store
	l.sw    	0(r1),r14	 # SI store
	l.lwz   	r6,80(r1)	 # SI load
	l.lwz   	r14,16(r24)	 # SI load
	l.sw    	2792(r1),r28	 # SI store
	l.sw    	8(r1),r14	 # SI store
	l.sw    	2796(r1),r15	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	2800(r1),r6	 # SI store
	l.lwz   	r26,80(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L11142	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.movhi  	r5,hi(sqlite3InitCallback)
	l.sb    	128(r28),r7	    # movqi
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(sqlite3InitCallback)
	l.addi  	r6,r1,2792
	l.jal   	sqlite3_exec	# delay slot filled
	l.sw    	2804(r1),r7	 # SI store
	l.sfnei	r11,0
	l.bf	.L11695	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r30,2804(r1)	 # SI load
.L11695:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r8,r0,0	 # movqi: move immediate
	l.sfeqi	r30,7
	l.bnf	.L11331	# delay slot filled
	l.sb    	128(r28),r8	    # movqi
	l.j     	.L12307	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
.L11249:
	l.lwz   	r6,4(r24)	 # SI load
	l.lwz   	r15,8(r24)	 # SI load
	l.slli  	r19,r6,4
	l.slli  	r13,r6,8
	l.slli  	r6,r15,4
	l.slli  	r15,r15,8
	l.lwz   	r5,16(r1)	 # SI load
	l.sub   	r13,r13,r19
	l.lwz   	r18,76(r5)	 # SI load
	l.sub   	r6,r15,r6
	l.add   	r13,r18,r13
	l.add   	r6,r18,r6
	l.lwz   	r22,12(r24)	 # SI load
	l.sw    	32(r1),r13	 # SI store
	l.sfeqi	r22,0
	l.bf	.L11267	# delay slot filled
	l.sw    	24(r1),r6	 # SI store
	l.addi  	r14,r6,36
	l.ori   	r20,r22,0	 # move reg to reg
	l.ori   	r18,r13,0	 # move reg to reg
.L11279:
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r2,0(r14)	 # SI load
	l.addi  	r3,r14,-36
	l.sw    	0(r14),r6	 # SI store
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemMove	# delay slot filled
	l.addi  	r20,r20,-1
	l.sw    	36(r18),r2	 # SI store
	l.addi  	r14,r14,240
	l.sfnei	r20,0
	l.bf	.L11279	# delay slot filled
	l.addi  	r18,r18,240
	l.slli  	r18,r22,4
	l.slli  	r14,r22,8
	l.lwz   	r7,32(r1)	 # SI load
	l.lwz   	r8,24(r1)	 # SI load
	l.sub   	r14,r14,r18
	l.add   	r7,r7,r14
	l.add   	r8,r8,r14
	l.sw    	32(r1),r7	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sw    	24(r1),r8	 # SI store
.L11250:
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,16(r24)	 # SI load
	l.lwz   	r5,4(r24)	 # SI load
	l.jal   	sqlite3VdbeMemSetStr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.lwz   	r11,24(r1)	 # SI load
	l.lwz   	r2,56(r1)	 # SI load
	l.j     	.L11267	# delay slot filled
	l.sb    	31(r11),r2	    # movqi
.L11193:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r2,16(r1)	 # SI load
	l.slli  	r18,r18,2
	l.lwz   	r14,48(r2)	 # SI load
	l.add   	r18,r14,r18
	l.lwz   	r22,0(r18)	 # SI load
	l.lwz   	r21,0(r22)	 # SI load
	l.sfeqi	r21,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r14,60(r22)	 # SI load
	l.sw    	2772(r1),r14	 # SI store
	l.lhz   	r3,18(r24)	 # zero_extendqisi2
	l.sh    	2776(r1),r3	 # movhi
	l.lbz   	r18,3(r24)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bnf	.L12182	# delay slot filled
	l.addi  	r4,r0,12	 # movhi: move immediate
	l.addi  	r5,r0,4	 # movhi: move immediate
	l.sh    	2778(r1),r5	 # movhi
.L11665:
	l.lwz   	r14,12(r24)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.slli  	r20,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r18,76(r6)	 # SI load
	l.ori   	r3,r21,0	 # move reg to reg
	l.sub   	r14,r14,r20
	l.addi  	r7,r0,0	 # move immediate I
	l.add   	r18,r18,r14
	l.addi  	r8,r0,0	 # move immediate I
	l.sw    	2788(r1),r18	 # SI store
		l.sw    	2808(r1), r7
		l.sw    	2808+4(r1), r8
	l.jal   	sqlite3BtreeKeySize	# delay slot filled
	l.addi  	r4,r1,2808
	l.lwz   	r20,2812(r1)	 # SI load
	l.lwz   	r18,2808(r1)	 # SI load
	l.addi  	r21,r20,-1
	l.sfltu 	r21,r20
	l.bf	.L11667	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.addi  	r14,r0,0	 # move immediate I
.L11667:
	l.addi  	r18,r18,-1
	l.add   	r14,r14,r18
	l.sfnei	r14,0
	l.bnf	.L12183	# delay slot filled
	l.movhi 	r8,hi(2147418112)	 # move immediate M
	l.addi  	r11,r0,0	 # move immediate I
.L12386:
	l.sw    	92(r1),r11	 # SI store
	l.ori   	r30,r11,0	 # move reg to reg
.L11666:
	l.lbz   	r18,0(r24)	 # zero_extendqisi2
.L12321:
	l.sfnei	r18,41
	l.bnf	.L12184	# delay slot filled
	l.lwz   	r3,92(r1)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	92(r1),r3	 # SI store
.L11670:
	l.lwz   	r4,92(r1)	 # SI load
	l.sflesi	r4,0
	l.bnf	.L11807	# delay slot filled
	l.sfeqi	r30,0
	l.j     	.L12302
	l.nop			# nop delay slot
.L11194:
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeMemIntegerify	# delay slot filled
	l.addi  	r20,r0,1	 # move immediate I
	l.lwz   	r2,32(r1)	 # SI load
	l.lwz   	r18,8(r24)	 # SI load
	l.lwz   	r21,4(r2)	 # SI load
	l.srai  	r22,r18,31
	l.add   	r18,r21,r18
	l.sfltu 	r18,r21
	l.bnf	.L12185	# delay slot filled
	l.lwz   	r14,0(r2)	 # SI load
.L11343:
	l.add   	r14,r14,r22
	l.lwz   	r3,32(r1)	 # SI load
	l.add   	r14,r20,r14
	l.sw    	4(r3),r18	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sw    	0(r3),r14	 # SI store
.L11177:
	l.lwz   	r6,32(r1)	 # SI load
	l.lwz   	r6,4(r6)	 # SI load
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r6	 # SI store
.L11178:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r18,48(r3)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r18,r18,r14
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r26,0(r18)	 # SI load
		l.sw    	2808(r1), r4
		l.sw    	2808+4(r1), r5
	l.lwz   	r14,0(r26)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11880	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.sw    	2844(r1),r5	 # SI store
	l.lbz   	r19,63(r14)	 # zero_extendqisi2
	l.sfleui	r19,1
	l.bf	.L11579
	l.nop			# nop delay slot
	l.jal   	sqlite3BtreeRestoreCursorPosition	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L11579:
	l.lhs   	r18,88(r14)	 # extendhisi2_no_sext_mem
	l.addi  	r18,r18,23
	l.slli  	r18,r18,2
	l.add   	r18,r14,r18
	l.lwz   	r19,0(r18)	 # SI load
	l.lbz   	r14,5(r19)	 # zero_extendqisi2
	l.lwz   	r18,64(r19)	 # SI load
	l.add   	r18,r18,r14
	l.lbz   	r18,0(r18)	 # zero_extendqisi2
	l.andi  	r2,r18,3
	l.sfnei	r2,1
	l.bf	.L11345	# delay slot filled
	l.addi  	r30,r0,11	 # move immediate I
	l.lbz   	r18,19(r26)	 # zero_extendqisi2
	l.sfnei	r18,0
	l.bf	.L11580
	l.nop			# nop delay slot
	l.lwz   	r14,0(r26)	 # SI load
	l.lwz   	r20,24(r14)	 # SI load
	l.lwz   	r21,28(r14)	 # SI load
	l.sw    	2808(r1),r20	 # SI store
	l.or    	r20,r20,r21
	l.sfnei	r20,0
	l.bnf	.L12186	# delay slot filled
	l.sw    	2812(r1),r21	 # SI store
.L11581:
	l.lwz   	r14,12(r24)	 # SI load
.L12326:
	l.sfnei	r14,0
	l.bf	.L11585	# delay slot filled
	l.lwz   	r21,2808(r1)	 # SI load
	l.lwz   	r15,2812(r1)	 # SI load
.L11586:
	l.movhi 	r3,hi(2147418112)	 # move immediate M
	l.ori   	r3,r3,65535
	l.sfne 	r21,r3
	l.bnf	.L12187	# delay slot filled
	l.lwz   	r2,0(r26)	 # SI load
	l.addi  	r20,r15,1
.L12390:
	l.sfltu 	r20,r15
	l.bf	.L11593	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
.L11593:
	l.add   	r21,r6,r21
	l.ori   	r15,r20,0	 # move reg to reg
	l.ori   	r14,r21,0	 # move reg to reg
		l.or    	r21, r14, r0
		l.or    	r22, r15, r0
.L11591:
	l.lwz   	r20,4(r2)	 # SI load
	l.lwz   	r14,8(r20)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11594
	l.nop			# nop delay slot
	l.j     	.L11596	# delay slot filled
	l.lwz   	r18,20(r2)	 # SI load
.L11595:
	l.lwz   	r14,8(r14)	 # SI load
.L12308:
	l.sfnei	r14,0
	l.bnf	.L11594
	l.nop			# nop delay slot
.L11596:
	l.lwz   	r2,20(r14)	 # SI load
	l.sfne 	r2,r18
	l.bf	.L11595
	l.nop			# nop delay slot
		l.sw    	24(r14), r21
		l.sw    	24+4(r14), r22
	l.j     	.L12308	# delay slot filled
	l.lwz   	r14,8(r14)	 # SI load
.L11184:
	l.lwz   	r18,16(r24)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r22,0(r18)	 # SI load
	l.addi  	r4,r1,2852
	l.lwz   	r14,24(r22)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jalr  	r14	# delay slot filled
	l.sw    	2852(r1),r2	 # SI store
	l.lwz   	r5,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,116(r5)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r14,8(r18)	 # SI load
	l.sfne 	r30,r2
	l.sw    	116(r6),r14	 # SI store
	l.bf	.L11814	# delay slot filled
	l.sw    	8(r18),r2	 # SI store
	l.lwz   	r14,2852(r1)	 # SI load
	l.ori   	r3,r6,0	 # move reg to reg
	l.ori   	r5,r30,0	 # move reg to reg
	l.sw    	0(r14),r18	 # SI store
	l.lwz   	r4,4(r24)	 # SI load
	l.addi  	r6,r0,-1	 # move immediate I
	l.jal   	allocateCursor	# delay slot filled
	l.ori   	r7,r30,0	 # move reg to reg
	l.sfeq 	r11,r2
	l.bf	.L11801	# delay slot filled
	l.lwz   	r21,2852(r1)	 # SI load
	l.lwz   	r14,0(r21)	 # SI load
	l.sw    	76(r11),r21	 # SI store
	l.lwz   	r14,0(r14)	 # SI load
	l.j     	.L11267	# delay slot filled
	l.sw    	80(r11),r14	 # SI store
.L11247:
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r4,4(r24)	 # SI load
	l.lwz   	r5,12(r24)	 # SI load
	l.addi  	r6,r0,-1	 # move immediate I
	l.jal   	allocateCursor	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L12131	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r11,r0,1	 # movqi: move immediate
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	20(r18),r11	    # movqi
	l.sb    	21(r18),r11	    # movqi
	l.sb    	23(r18),r2	    # movqi
	l.lbz   	r24,11(r24)	 # zero_extendqisi2
	l.sb    	29(r18),r11	    # movqi
	l.sb    	22(r18),r24	    # movqi
	l.j     	.L11267	# delay slot filled
	l.sb    	30(r18),r2	    # movqi
.L11248:
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r4,4(r24)	 # SI load
	l.lwz   	r5,8(r24)	 # SI load
	l.addi  	r6,r0,-1	 # move immediate I
	l.jal   	allocateCursor	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L12130	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.addi  	r4,r0,0	 # move immediate I
	l.sb    	20(r11),r3	    # movqi
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r6,r0,500	 # move immediate I
	l.addi  	r7,r0,1054	 # move immediate I
	l.jal   	sqlite3BtreeFactory	# delay slot filled
	l.addi  	r8,r11,40
	l.sfeqi	r11,0
	l.bf	.L11528	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lbz   	r18,29(r20)	 # zero_extendqisi2
	l.addi  	r18,r18,-1
	l.srli  	r18,r18,31
.L11529:
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.sb    	30(r20),r18	    # movqi
	l.j     	.L11331	# delay slot filled
	l.sb    	23(r20),r7	    # movqi
.L11243:
	l.lwz   	r14,4(r24)	 # SI load
	l.sfgesi	r14,0
	l.bnf	.L12188	# delay slot filled
	l.lwz   	r20,12(r24)	 # SI load
.L11510:
	l.add   	r18,r14,r14
	l.lwz   	r2,8(r28)	 # SI load
	l.add   	r14,r18,r14
	l.addi  	r4,r20,1
	l.slli  	r14,r14,3
	l.addi  	r5,r1,2844
	l.add   	r14,r2,r14
	l.jal   	sqlite3BtreeGetMeta	# delay slot filled
	l.lwz   	r3,4(r14)	 # SI load
	l.lwz   	r7,24(r1)	 # SI load
	l.addi  	r8,r0,-16640	 # move immediate I
	l.lhz   	r18,28(r7)	 # zero_extendqisi2
	l.lwz   	r14,2844(r1)	 # SI load
	l.and   	r18,r18,r8
	l.srai  	r19,r14,31
	l.ori   	r18,r18,4
	l.ori   	r30,r11,0	 # move reg to reg
	l.sw    	4(r7),r14	 # SI store
	l.sw    	0(r7),r19	 # SI store
	l.j     	.L11331	# delay slot filled
	l.sh    	28(r7),r18	 # movhi
.L11244:
	l.lwz   	r6,32(r1)	 # SI load
	l.lhz   	r18,28(r6)	 # zero_extendqisi2
	l.andi  	r18,r18,32
	l.sfnei	r18,0
	l.bnf	.L12189	# delay slot filled
	l.lwz   	r30,16(r24)	 # SI load
	l.sfeqi	r30,0
.L12381:
	l.bf	.L11744	# delay slot filled
	l.lwz   	r11,32(r1)	 # SI load
	l.addi  	r2,r0,255	 # move immediate I
	l.sfltsi	r30,0
	l.bf	.L11745	# delay slot filled
	l.lwz   	r26,0(r11)	 # SI load
	l.andi  	r2,r30,15
.L11745:
	l.lbz   	r14,27(r26)	 # zero_extendqisi2
	l.lwz   	r3,52(r1)	 # SI load
	l.sfne 	r14,r2
	l.lwz   	r22,0(r3)	 # SI load
	l.bnf	.L12190	# delay slot filled
	l.lwz   	r16,4(r3)	 # SI load
	l.lwz   	r14,8(r26)	 # SI load
	l.sfnei	r14,0
	l.bnf	.L12191
	l.nop			# nop delay slot
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	rowSetToList	# delay slot filled
	l.addi  	r20,r0,1	 # move immediate I
	l.lwz   	r19,8(r26)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r18,8(r19)	 # SI load
	l.sw    	12(r19),r4	 # SI store
	l.sw    	2848(r1),r18	 # SI store
	l.sfeq 	r18,r4
	l.bnf	.L11751	# delay slot filled
	l.sw    	8(r19),r4	 # SI store
	l.j     	.L12296	# delay slot filled
	l.ori   	r18,r19,0	 # move reg to reg
.L11912:
	l.ori   	r19,r18,0	 # move reg to reg
	l.ori   	r18,r3,0	 # move reg to reg
.L11751:
	l.lwz   	r5,8(r18)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r3,r1,2848
	l.sw    	12(r18),r19	 # SI store
	l.jal   	rowSetNDeepTree	# delay slot filled
	l.sw    	2848(r1),r5	 # SI store
	l.lwz   	r3,2848(r1)	 # SI load
	l.sw    	8(r18),r11	 # SI store
	l.sfnei	r3,0
	l.bf	.L11912	# delay slot filled
	l.addi  	r20,r20,1
	l.addi  	r5,r0,0	 # move immediate I
.L12333:
	l.sw    	20(r26),r18	 # SI store
	l.sw    	8(r26),r5	 # SI store
	l.sw    	12(r26),r5	 # SI store
.L11749:
	l.sb    	27(r26),r2	    # movqi
.L11747:
	l.sfeqi	r18,0
	l.bf	.L12357	# delay slot filled
	l.sfltsi	r30,0
	l.ori   	r4,r16,0	 # move reg to reg
.L12001:
	l.lwz   	r2,0(r18)	 # SI load
	l.sfgts 	r22,r2
	l.bf	.L11952	# delay slot filled
	l.lwz   	r3,4(r18)	 # SI load
	l.sfne 	r22,r2
	l.bf	.L12358	# delay slot filled
	l.sfgts 	r2,r22
	l.sfgtu 	r4,r3
	l.bnf	.L11753	# delay slot filled
	l.sfgts 	r2,r22
.L11952:
	l.j     	.L11755	# delay slot filled
	l.lwz   	r18,8(r18)	 # SI load
.L11245:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3AnalysisLoad	# delay slot filled
	l.lwz   	r4,4(r24)	 # SI load
	l.j     	.L11331	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11235:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r14,8(r28)	 # SI load
	l.add   	r19,r18,r18
	l.add   	r18,r19,r18
	l.slli  	r18,r18,3
	l.add   	r18,r14,r18
	l.lwz   	r18,4(r18)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L11267	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3BtreeBeginTrans	# delay slot filled
	l.lwz   	r4,8(r24)	 # SI load
	l.sfnei	r11,5
	l.bnf	.L12193	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.xori  	r19,r11,8
	l.sub   	r18,r0,r19
	l.or    	r18,r18,r19
	l.sfgesi	r18,0
	l.bf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.sub   	r14,r0,r11
	l.or    	r14,r14,r11
	l.sfltsi	r14,0
	l.bnf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.j     	.L12309	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
.L11236:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r8,16(r1)	 # SI load
	l.slli  	r18,r18,2
	l.lwz   	r20,48(r8)	 # SI load
	l.lwz   	r14,12(r24)	 # SI load
	l.add   	r18,r20,r18
	l.slli  	r19,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r18,0(r18)	 # SI load
	l.lwz   	r20,76(r8)	 # SI load
	l.sub   	r14,r14,r19
	l.lwz   	r2,76(r18)	 # SI load
	l.add   	r14,r20,r14
	l.lwz   	r26,0(r2)	 # SI load
	l.lwz   	r11,4(r14)	 # SI load
	l.lwz   	r3,0(r26)	 # SI load
	l.lwz   	r22,244(r14)	 # SI load
	l.sw    	44(r1),r18	 # SI store
	l.sw    	76(r1),r11	 # SI store
	l.sw    	60(r1),r3	 # SI store
	l.sflesi	r22,0
	l.bf	.L11802	# delay slot filled
	l.lwz   	r30,36(r8)	 # SI load
	l.addi  	r16,r14,480
	l.ori   	r18,r30,0	 # move reg to reg
	l.addi  	r20,r0,0	 # move immediate I
.L11803:
	l.lhz   	r3,28(r16)	 # zero_extendqisi2
	l.addi  	r4,r16,30
	l.sw    	0(r18),r16	 # SI store
	l.jal   	_storeTypeInfo.clone.72	# delay slot filled
	l.addi  	r20,r20,1
	l.addi  	r16,r16,240
	l.sfgts 	r22,r20
	l.bf	.L11803	# delay slot filled
	l.addi  	r18,r18,4
.L11802:
	l.lwz   	r14,4(r26)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r14,r14,1
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sw    	4(r26),r14	 # SI store
	l.sb    	128(r4),r5	    # movqi
	l.ori   	r7,r30,0	 # move reg to reg
	l.lwz   	r8,60(r1)	 # SI load
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r18,32(r8)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,16(r24)	 # SI load
	l.jalr  	r18	# delay slot filled
	l.lwz   	r4,76(r1)	 # SI load
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r11,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,116(r11)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.sb    	128(r11),r5	    # movqi
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r14,8(r26)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.sw    	116(r6),r14	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	8(r26),r7	 # SI store
	l.jal   	sqlite3VtabUnlock	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.sfnei	r30,0
	l.bnf	.L12194	# delay slot filled
	l.lwz   	r8,60(r1)	 # SI load
.L11804:
	l.addi  	r2,r0,0	 # movqi: move immediate
.L12382:
	l.lwz   	r11,44(r1)	 # SI load
	l.j     	.L11331	# delay slot filled
	l.sb    	20(r11),r2	    # movqi
.L11237:
	l.addi  	r6,r0,2	 # movqi: move immediate
	l.lwz   	r5,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.sb    	128(r5),r6	    # movqi
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r20,8(r28)	 # SI load
	l.add   	r14,r18,r18
	l.lwz   	r4,16(r24)	 # SI load
	l.add   	r2,r14,r18
	l.slli  	r2,r2,3
	l.add   	r2,r20,r2
	l.jal   	sqlite3FindTable	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r30,56(r11)	 # SI load
	l.sfeqi	r30,0
	l.bf	.L11794	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r18,52(r11)	 # SI load
	l.lwz   	r18,0(r18)	 # SI load
	l.lwz   	r14,20(r18)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11795
	l.nop			# nop delay slot
	l.jalr  	r14	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11794	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11795:
	l.lwz   	r22,292(r28)	 # SI load
	l.sflesi	r22,0
	l.bf	.L12359	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r15,288(r28)	 # SI load
	l.lwz   	r21,56(r24)	 # SI load
	l.lwz   	r20,0(r15)	 # SI load
	l.sfeq 	r20,r21
	l.bf	.L12195
	l.nop			# nop delay slot
	l.addi  	r14,r15,4
	l.j     	.L11799	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.L11800:
	l.lwz   	r2,0(r14)	 # SI load
	l.ori   	r20,r14,0	 # move reg to reg
	l.sfne 	r2,r21
	l.bnf	.L11797	# delay slot filled
	l.addi  	r14,r14,4
.L11799:
	l.addi  	r18,r18,1
	l.sflts 	r18,r22
	l.bf	.L11800
	l.nop			# nop delay slot
.L11796:
	l.addi  	r7,r0,0	 # move immediate I
.L12359:
	l.sw    	56(r24),r7	 # SI store
	l.ori   	r30,r7,0	 # move reg to reg
.L11794:
	l.addi  	r11,r0,0	 # movqi: move immediate
	l.lwz   	r8,16(r1)	 # SI load
	l.j     	.L11331	# delay slot filled
	l.sb    	128(r8),r11	    # movqi
.L11238:
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r14,84(r6)	 # SI load
	l.lwz   	r20,92(r6)	 # SI load
	l.addi  	r2,r14,-1
	l.add   	r14,r2,r2
	l.sw    	84(r6),r2	 # SI store
	l.add   	r2,r14,r2
	l.slli  	r2,r2,2
	l.add   	r2,r20,r2
	l.lwz   	r14,8(r2)	 # SI load
		l.lwz   	r7, 0(r2)
		l.lwz   	r8, 4(r2)
		l.sw    	48(r28), r7
		l.sw    	48+4(r28), r8
	l.j     	.L11267	# delay slot filled
	l.sw    	132(r6),r14	 # SI store
.L11239:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r18,48(r4)	 # SI load
	l.add   	r14,r18,r14
	l.lwz   	r14,0(r14)	 # SI load
	l.lwz   	r20,0(r14)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L11857	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
		l.lwz   	r5, 104(r1)
		l.lwz   	r6, 104+4(r1)
		l.sw    	44(r1), r5
		l.sw    	44+4(r1), r6
	l.jal   	moveToRoot	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11465	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
		l.sw    	44(r1), r6
		l.sw    	44+4(r1), r7
.L11473:
	l.lhs   	r2,88(r20)	 # extendhisi2_no_sext_mem
	l.addi  	r4,r2,23
	l.slli  	r4,r4,2
	l.add   	r4,r20,r4
	l.lwz   	r7,0(r4)	 # SI load
	l.lbz   	r4,3(r7)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L11466
	l.nop			# nop delay slot
	l.lbz   	r11,2(r7)	 # zero_extendqisi2
	l.sfeqi	r11,0
	l.bnf	.L12122	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.lhz   	r8,16(r7)	 # zero_extendqisi2
	l.add   	r3,r4,r8
	l.sfltu 	r3,r4
	l.bnf	.L12196	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L11822:
	l.lwz   	r11,44(r1)	 # SI load
	l.add   	r6,r5,r11
	l.ori   	r5,r3,0	 # move reg to reg
	l.ori   	r4,r6,0	 # move reg to reg
		l.sw    	44(r1), r4
		l.sw    	44+4(r1), r5
.L11468:
	l.addi  	r2,r2,86
	l.add   	r2,r2,r2
	l.add   	r2,r20,r2
	l.lhz   	r2,0(r2)	 # zero_extendqisi2
	l.sfne 	r2,r8
	l.bnf	.L12197
	l.nop			# nop delay slot
	l.lhz   	r6,12(r7)	 # zero_extendqisi2
	l.add   	r2,r2,r2
	l.lwz   	r3,64(r7)	 # SI load
	l.add   	r6,r2,r6
	l.lhz   	r7,18(r7)	 # zero_extendqisi2
	l.add   	r6,r3,r6
	l.lbz   	r5,0(r6)	 # zero_extendqisi2
	l.lbz   	r2,1(r6)	 # zero_extendqisi2
	l.slli  	r5,r5,8
	l.or    	r2,r2,r5
	l.and   	r2,r2,r7
.L12123:
	l.jal   	sqlite3Get4byte	# delay slot filled
	l.add   	r3,r3,r2
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	moveToChild	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L11473
	l.nop			# nop delay slot
	l.ori   	r30,r11,0	 # move reg to reg
		l.lwz   	r5, 104(r1)
		l.lwz   	r6, 104+4(r1)
		l.sw    	44(r1), r5
		l.sw    	44+4(r1), r6
.L11465:
		l.lwz   	r6, 44(r1)
		l.lwz   	r7, 44+4(r1)
		l.sw    	104(r1), r6
		l.sw    	104+4(r1), r7
.L11464:
	l.lwz   	r8,24(r1)	 # SI load
	l.addi  	r11,r0,4	 # movhi: move immediate
		l.lwz   	r2, 104(r1)
		l.lwz   	r3, 104+4(r1)
	l.sh    	28(r8),r11	 # movhi
		l.sw    	0(r8), r2
		l.sw    	4(r8), r3
	l.j     	.L12302	# delay slot filled
	l.sfeqi	r30,0
.L11240:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r2,16(r1)	 # SI load
	l.slli  	r18,r18,2
	l.lwz   	r14,48(r2)	 # SI load
	l.add   	r18,r14,r18
	l.lwz   	r26,0(r18)	 # SI load
	l.lwz   	r22,0(r26)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L11267	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lhz   	r18,28(r3)	 # zero_extendqisi2
	l.andi  	r18,r18,16384
	l.sfeqi	r18,0
	l.bnf	.L12198
	l.nop			# nop delay slot
	l.lbz   	r14,3(r24)	 # zero_extendqisi2
.L12315:
	l.lwz   	r4,40(r1)	 # SI load
	l.andi  	r14,r14,16
	l.lwz   	r6,24(r4)	 # SI load
	l.lwz   	r21,20(r4)	 # SI load
	l.srai  	r20,r6,31
	l.sfeqi	r14,0
	l.bf	.L11653	# delay slot filled
	l.lwz   	r2,12(r24)	 # SI load
	l.lwz   	r14,84(r26)	 # SI load
.L11653:
	l.movhi  	r7,hi(.LC15)
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r21,0	 # move reg to reg
	l.ori   	r7,r7,lo(.LC15)
	l.sw    	0(r1),r8	 # SI store
	l.sw    	4(r1),r2	 # SI store
	l.jal   	sqlite3BtreeInsert	# delay slot filled
	l.sw    	8(r1),r14	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L11331	# delay slot filled
	l.sw    	88(r26),r5	 # SI store
.L11241:
	l.lwz   	r14,12(r24)	 # SI load
	l.lwz   	r20,4(r24)	 # SI load
	l.slli  	r19,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r18,8(r24)	 # SI load
	l.lwz   	r7,16(r1)	 # SI load
	l.slli  	r20,r20,2
	l.slli  	r21,r18,4
	l.lwz   	r23,76(r7)	 # SI load
	l.sub   	r19,r14,r19
	l.slli  	r18,r18,8
	l.lbz   	r22,3(r24)	 # zero_extendqisi2
	l.lwz   	r14,48(r7)	 # SI load
	l.add   	r6,r23,r19
	l.add   	r14,r14,r20
	l.sub   	r21,r18,r21
	l.andi  	r20,r22,1
	l.lwz   	r26,0(r14)	 # SI load
		l.lwz   	r2, 0(r6)
		l.lwz   	r3, 4(r6)
		l.sw    	44(r1), r2
		l.sw    	44+4(r1), r3
	l.sfeqi	r20,0
	l.bf	.L11610	# delay slot filled
	l.add   	r30,r23,r21
	l.lwz   	r14,132(r7)	 # SI load
	l.addi  	r14,r14,1
	l.sw    	132(r7),r14	 # SI store
	l.lbz   	r22,3(r24)	 # zero_extendqisi2
.L11610:
	l.andi  	r18,r22,2
	l.sfeqi	r18,0
	l.bf	.L11611
	l.nop			# nop delay slot
		l.lwz   	r3, 0(r6)
		l.lwz   	r4, 4(r6)
		l.sw    	48(r28), r3
		l.sw    	48+4(r28), r4
.L11611:
	l.lhz   	r6,28(r30)	 # zero_extendqisi2
	l.andi  	r18,r6,1
	l.sfeqi	r18,0
	l.bf	.L11612	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	20(r30),r4	 # SI store
	l.sw    	24(r30),r4	 # SI store
.L11612:
	l.lbz   	r18,21(r26)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bf	.L11613
	l.nop			# nop delay slot
	l.lbz   	r18,22(r26)	 # zero_extendqisi2
	l.sfnei	r18,0
	l.bnf	.L12199
	l.nop			# nop delay slot
.L11614:
	l.lwz   	r15,24(r30)	 # SI load
	l.lwz   	r2,20(r30)	 # SI load
	l.lwz   	r14,36(r30)	 # SI load
	l.sw    	44(r26),r15	 # SI store
		l.lwz   	r5, 44(r1)
		l.lwz   	r6, 44+4(r1)
		l.sw    	52(r26), r5
		l.sw    	52+4(r26), r6
	l.sfeq 	r2,r14
	l.bf	.L11615	# delay slot filled
	l.sfnei	r18,0
	l.bnf	.L12200
	l.nop			# nop delay slot
	l.sw    	48(r26),r2	 # SI store
.L11618:
	l.addi  	r8,r0,0	 # movqi: move immediate
	l.addi  	r11,r0,0	 # move immediate I
	l.sb    	20(r26),r8	    # movqi
	l.sb    	17(r26),r8	    # movqi
	l.sb    	28(r26),r8	    # movqi
	l.sw    	88(r26),r11	 # SI store
	l.lwz   	r13,188(r28)	 # SI load
.L12317:
	l.sfeqi	r13,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r6,16(r24)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L12299
	l.nop			# nop delay slot
	l.lwz   	r18,4(r26)	 # SI load
	l.lbz   	r21,3(r24)	 # zero_extendqisi2
	l.add   	r20,r18,r18
	l.lwz   	r2,8(r28)	 # SI load
	l.add   	r18,r20,r18
	l.andi  	r20,r21,4
	l.slli  	r14,r18,3
	l.addi  	r21,r0,18	 # move immediate I
	l.sfeqi	r20,0
	l.add   	r14,r2,r14
	l.bf	.L11625	# delay slot filled
	l.lwz   	r14,0(r14)	 # SI load
	l.addi  	r21,r0,23	 # move immediate I
.L11625:
	l.lwz   	r3,184(r28)	 # SI load
	l.ori   	r4,r21,0	 # move reg to reg
		l.lwz   	r7, 44(r1)
		l.lwz   	r8, 44+4(r1)
	l.jalr  	r13	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11242:
	l.lwz   	r16,140(r28)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L11671	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L12405	# delay slot filled
	l.movhi 	r5,hi(-1108213760)	 # move immediate M
.L11672:
	l.lwz   	r16,8(r16)	 # SI load
	l.sfnei	r16,0
	l.bnf	.L12201	# delay slot filled
	l.sflesi	r14,1
	l.movhi 	r5,hi(-1108213760)	 # move immediate M
.L12405:
	l.lwz   	r2,68(r16)	 # SI load
	l.ori   	r5,r5,3491
	l.sfne 	r2,r5
	l.bf	.L11672
	l.nop			# nop delay slot
	l.lbz   	r2,128(r16)	 # zero_extendqisi2
	l.sfgtui	r2,1
	l.bf	.L11672
	l.nop			# nop delay slot
	l.lwz   	r2,96(r16)	 # SI load
	l.xori  	r2,r2,0xffff
	l.srli  	r2,r2,31
	l.j     	.L11672	# delay slot filled
	l.add   	r14,r14,r2
.L11219:
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r2,52(r1)	 # SI load
	l.lhz   	r14,28(r11)	 # zero_extendqisi2
	l.lhz   	r18,28(r2)	 # zero_extendqisi2
	l.or    	r18,r14,r18
	l.andi  	r18,r18,1
	l.sfeqi	r18,0
	l.bnf	.L12202
	l.nop			# nop delay slot
	l.lbz   	r18,3(r24)	 # zero_extendqisi2
	l.andi  	r20,r18,103
	l.sfeqi	r20,0
	l.bnf	.L12203	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
.L11353:
	l.andi  	r14,r14,16384
	l.sfeqi	r14,0
	l.bnf	.L12204
	l.nop			# nop delay slot
	l.lwz   	r7,52(r1)	 # SI load
.L12325:
	l.lhz   	r14,28(r7)	 # zero_extendqisi2
	l.andi  	r14,r14,16384
	l.sfeqi	r14,0
	l.bnf	.L12205
	l.nop			# nop delay slot
	l.lwz   	r3,52(r1)	 # SI load
.L12323:
	l.lwz   	r4,32(r1)	 # SI load
	l.jal   	sqlite3MemCompare	# delay slot filled
	l.lwz   	r5,16(r24)	 # SI load
	l.lbz   	r14,0(r24)	 # zero_extendqisi2
	l.addi  	r14,r14,-73
	l.andi  	r14,r14,0xff	 # zero_extendqisi2
	l.sfgtui	r14,4
	l.bnf	.L12206	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.xori  	r20,r11,0xffff
.L12121:
	l.srli  	r20,r20,31
.L11363:
	l.lbz   	r14,3(r24)	 # zero_extendqisi2
	l.andi  	r14,r14,16
	l.sfeqi	r14,0
	l.bf	.L11364	# delay slot filled
	l.sfeqi	r20,0
	l.lwz   	r6,8(r24)	 # SI load
	l.lwz   	r11,16(r1)	 # SI load
	l.slli  	r14,r6,4
	l.slli  	r6,r6,8
	l.lwz   	r2,76(r11)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.sub   	r6,r6,r14
	l.add   	r2,r2,r6
	l.lhz   	r14,28(r2)	 # zero_extendqisi2
	l.sw    	24(r1),r2	 # SI store
	l.addi  	r2,r0,-16640	 # move immediate I
	l.lwz   	r3,24(r1)	 # SI load
	l.and   	r14,r14,r2
	l.sw    	4(r3),r20	 # SI store
	l.ori   	r14,r14,4
	l.sw    	0(r3),r4	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r3),r14	 # movhi
.L11220:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r6,8(r24)	 # SI load
	l.slli  	r15,r14,4
	l.addi  	r6,r6,-1
	l.slli  	r14,r14,8
	l.lwz   	r2,16(r1)	 # SI load
	l.slli  	r18,r6,4
	l.slli  	r6,r6,8
	l.sub   	r14,r14,r15
	l.lwz   	r15,76(r2)	 # SI load
	l.sub   	r6,r6,r18
	l.add   	r20,r15,r14
	l.lbz   	r3,127(r2)	 # zero_extendqisi2
	l.add   	r6,r20,r6
	l.sw    	84(r1),r3	 # SI store
	l.sw    	76(r1),r6	 # SI store
	l.sfgtu 	r20,r6
	l.bf	.L11854	# delay slot filled
	l.lwz   	r30,16(r24)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r22,r20,28
	l.ori   	r18,r20,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	96(r1),r28	 # SI store
	l.sw    	100(r1),r24	 # SI store
	l.sw    	44(r1),r20	 # SI store
	l.sw    	60(r1),r4	 # SI store
	l.ori   	r26,r4,0	 # move reg to reg
	l.ori   	r16,r4,0	 # move reg to reg
	l.lwz   	r28,56(r1)	 # SI load
	l.lwz   	r20,76(r1)	 # SI load
	l.ori   	r24,r3,0	 # move reg to reg
		l.sw    	24(r1), r5
		l.sw    	24+4(r1), r6
.L11438:
	l.sfeqi	r30,0
	l.bf	.L11428	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
	l.movhi 	r7,hi(-286392320)	 # move immediate M
	l.sub   	r2,r18,r6
	l.ori   	r7,r7,61167
	l.srai  	r2,r2,4
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.mul   	r2,r2,r7
	l.add   	r2,r30,r2
	l.jal   	applyAffinity	# delay slot filled
	l.lbs   	r4,0(r2)	 # extendqisi2_no_sext_mem
.L11428:
	l.lhz   	r2,0(r22)	 # zero_extendqisi2
	l.andi  	r14,r2,16384
	l.sfeqi	r14,0
	l.bf	.L12360	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r7,24(r18)	 # SI load
	l.sflesi	r7,0
	l.bf	.L12360
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeMemExpandBlob	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lhz   	r2,0(r22)	 # zero_extendqisi2
	l.andi  	r14,r2,16384
	l.ori   	r3,r18,0	 # move reg to reg
.L12360:
	l.jal   	sqlite3VdbeSerialType	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.sfleui	r11,11
	l.bf	.L11430	# delay slot filled
	l.movhi  	r8,hi(aSize.12542)
	l.addi  	r7,r11,-12
	l.srli  	r3,r7,1
.L11431:
	l.lwz   	r2,28(r1)	 # SI load
	l.add   	r13,r2,r3
	l.sfltu 	r13,r2
	l.bf	.L11432	# delay slot filled
	l.addi  	r8,r0,1	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
.L11432:
	l.lwz   	r5,24(r1)	 # SI load
	l.ori   	r7,r13,0	 # move reg to reg
	l.add   	r12,r8,r5
	l.addi  	r8,r0,0	 # move immediate I
	l.ori   	r6,r12,0	 # move reg to reg
	l.ori   	r12,r8,0	 # move reg to reg
		l.sw    	24(r1), r6
		l.sw    	24+4(r1), r7
	l.slli  	r4,r8,25
.L12361:
	l.srli  	r5,r11,7
	l.addi  	r12,r12,1
	l.srli  	r8,r8,7
	l.or    	r5,r4,r5
	l.sflesi	r12,8
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.bf	.L11435	# delay slot filled
	l.ori   	r11,r5,0	 # move reg to reg
	l.addi  	r4,r0,0	 # movqi: move immediate
.L11435:
	l.andi  	r2,r4,0xff	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L11933	# delay slot filled
	l.or    	r2,r8,r5
	l.sub   	r4,r0,r2
	l.or    	r2,r4,r2
	l.sfltsi	r2,0
	l.bf	.L12361	# delay slot filled
	l.slli  	r4,r8,25
.L11933:
	l.sfeqi	r14,0
	l.bf	.L11436	# delay slot filled
	l.add   	r26,r26,r12
	l.lwz   	r2,0(r18)	 # SI load
	l.add   	r16,r16,r2
.L11437:
	l.addi  	r18,r18,240
	l.sfgeu 	r20,r18
	l.bf	.L11438	# delay slot filled
	l.addi  	r22,r22,240
	l.sw    	60(r1),r16	 # SI store
	l.lwz   	r28,96(r1)	 # SI load
	l.lwz   	r24,100(r1)	 # SI load
	l.lwz   	r20,44(r1)	 # SI load
.L11427:
	l.srai  	r15,r26,31
	l.ori   	r18,r26,0	 # move reg to reg
	l.addi  	r21,r0,0	 # move immediate I
	l.slli  	r4,r15,25
.L12362:
	l.srli  	r3,r18,7
	l.addi  	r21,r21,1
	l.srli  	r15,r15,7
	l.or    	r3,r4,r3
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sflesi	r21,8
	l.bf	.L11441	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
	l.addi  	r2,r0,0	 # movqi: move immediate
.L11441:
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L11934	# delay slot filled
	l.or    	r3,r15,r3
	l.sub   	r2,r0,r3
	l.or    	r2,r2,r3
	l.sfltsi	r2,0
	l.bf	.L12362	# delay slot filled
	l.slli  	r4,r15,25
.L11934:
	l.add   	r26,r21,r26
	l.addi  	r18,r0,0	 # move immediate I
	l.srai  	r14,r26,31
	l.ori   	r19,r26,0	 # move reg to reg
	l.ori   	r15,r14,0	 # move reg to reg
	l.slli  	r4,r15,25
.L12363:
	l.srli  	r3,r19,7
	l.addi  	r18,r18,1
	l.srli  	r15,r15,7
	l.or    	r3,r4,r3
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.sflesi	r18,8
	l.bf	.L11444	# delay slot filled
	l.ori   	r19,r3,0	 # move reg to reg
	l.addi  	r2,r0,0	 # movqi: move immediate
.L11444:
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L11935	# delay slot filled
	l.or    	r3,r15,r3
	l.sub   	r2,r0,r3
	l.or    	r2,r2,r3
	l.sfltsi	r2,0
	l.bf	.L12363	# delay slot filled
	l.slli  	r4,r15,25
.L11935:
	l.sfles 	r18,r21
	l.bf	.L12364	# delay slot filled
	l.lwz   	r8,28(r1)	 # SI load
	l.addi  	r26,r26,1
	l.srai  	r14,r26,31
.L12364:
	l.lwz   	r11,60(r1)	 # SI load
	l.addi  	r21,r0,1	 # move immediate I
	l.sub   	r15,r8,r11
	l.sfgtu 	r15,r8
	l.bnf	.L12207	# delay slot filled
	l.srai  	r18,r11,31
.L11446:
	l.add   	r4,r15,r26
	l.lwz   	r3,24(r1)	 # SI load
	l.sw    	44(r1),r4	 # SI store
	l.sub   	r18,r3,r18
	l.sfltu 	r4,r15
	l.sub   	r18,r18,r21
	l.bnf	.L12208	# delay slot filled
	l.addi  	r21,r0,1	 # move immediate I
.L11447:
	l.lwz   	r22,80(r28)	 # SI load
	l.add   	r6,r18,r14
	l.srai  	r14,r22,31
	l.add   	r6,r21,r6
	l.sfgts 	r6,r14
	l.bf	.L11275	# delay slot filled
	l.sfne 	r6,r14
	l.bnf	.L12209	# delay slot filled
	l.lwz   	r5,44(r1)	 # SI load
.L11936:
	l.lwz   	r14,12(r24)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r4,44(r1)	 # SI load
	l.lwz   	r18,76(r6)	 # SI load
	l.slli  	r6,r14,4
	l.slli  	r14,r14,8
	l.addi  	r5,r0,0	 # move immediate I
	l.sub   	r6,r14,r6
	l.add   	r18,r18,r6
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.sw    	24(r1),r18	 # SI store
	l.sfnei	r11,0
	l.bf	.L12134	# delay slot filled
	l.sfgtui	r26,127
	l.lwz   	r8,24(r1)	 # SI load
	l.bf	.L11449	# delay slot filled
	l.lwz   	r30,20(r8)	 # SI load
	l.sb    	0(r30),r26	    # movqi
	l.addi  	r22,r0,1	 # move immediate I
.L11452:
	l.lwz   	r11,76(r1)	 # SI load
	l.sfleu 	r20,r11
	l.bnf	.L11451	# delay slot filled
	l.ori   	r18,r20,0	 # move reg to reg
	l.lwz   	r14,76(r1)	 # SI load
	l.j     	.L11998	# delay slot filled
	l.lwz   	r16,84(r1)	 # SI load
.L12211:
	l.addi  	r5,r0,1	 # move immediate I
	l.sb    	0(r2),r11	    # movqi
.L11454:
	l.addi  	r18,r18,240
	l.sfgeu 	r14,r18
	l.bnf	.L12210	# delay slot filled
	l.add   	r22,r22,r5
.L11998:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeSerialType	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfgtui	r11,127
	l.bnf	.L12211	# delay slot filled
	l.add   	r2,r30,r22
	l.add   	r3,r30,r22
	l.jal   	sqlite3PutVarint32	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L11454	# delay slot filled
	l.andi  	r5,r11,0xff	 # zero_extendqisi2
.L11221:
	l.lwz   	r6,40(r1)	 # SI load
	l.lwz   	r7,32(r1)	 # SI load
	l.lhz   	r14,28(r6)	 # zero_extendqisi2
	l.lhz   	r18,28(r7)	 # zero_extendqisi2
	l.or    	r18,r14,r18
	l.andi  	r18,r18,1
	l.sfeqi	r18,0
	l.bnf	.L12212
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r22,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.ori   	r26,r12,0	 # move reg to reg
	l.lbz   	r14,0(r24)	 # zero_extendqisi2
	l.sfeqi	r14,81
	l.bf	.L11336	# delay slot filled
	l.ori   	r21,r11,0	 # move reg to reg
	l.sfeqi	r14,82
	l.bf	.L11337	# delay slot filled
	l.sfeqi	r14,80
	l.bf	.L12213	# delay slot filled
	l.addi  	r14,r12,-32
	l.sfltsi	r14,0
	l.bf	.L11341	# delay slot filled
	l.slli  	r2,r22,1
	l.sra   	r6,r22,r14
	l.srai  	r15,r22,31
.L11338:
	l.lwz   	r8,24(r1)	 # SI load
	l.addi  	r11,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r8)	 # zero_extendqisi2
	l.and   	r14,r14,r11
	l.sw    	0(r8),r15	 # SI store
	l.ori   	r14,r14,4
	l.sw    	4(r8),r6	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r8),r14	 # movhi
.L11222:
	l.jal   	applyNumericAffinity	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	applyNumericAffinity	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r4,32(r1)	 # SI load
	l.lwz   	r5,40(r1)	 # SI load
	l.lhz   	r18,28(r4)	 # zero_extendqisi2
	l.lhz   	r14,28(r5)	 # zero_extendqisi2
	l.or    	r2,r14,r18
	l.andi  	r21,r2,1
	l.sfnei	r21,0
	l.bf	.L11290	# delay slot filled
	l.and   	r18,r14,r18
	l.andi  	r18,r18,4
	l.sfeqi	r18,0
	l.bf	.L11291
	l.nop			# nop delay slot
	l.lbz   	r2,0(r24)	 # zero_extendqisi2
		l.lwz   	r14, 0(r4)
		l.lwz   	r15, 4(r4)
	l.lwz   	r19,0(r5)	 # SI load
	l.sfeqi	r2,85
	l.bf	.L11294	# delay slot filled
	l.lwz   	r18,4(r5)	 # SI load
	l.sfgtui	r2,85
	l.bf	.L11297	# delay slot filled
	l.sfeqi	r2,86
	l.sfeqi	r2,84
	l.bf	.L12214	# delay slot filled
	l.add   	r13,r18,r15
	l.or    	r20,r14,r15
.L12384:
	l.sfeqi	r20,0
	l.bf	.L11290	# delay slot filled
	l.sfnei	r14,-1
	l.bnf	.L12215	# delay slot filled
	l.sfnei	r15,-1
	l.ori   	r3,r19,0	 # move reg to reg
.L12396:
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.jal   	__moddi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r20,r12,0	 # move reg to reg
.L11299:
	l.lwz   	r7,24(r1)	 # SI load
	l.addi  	r8,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r7)	 # zero_extendqisi2
	l.and   	r14,r14,r8
	l.sw    	0(r7),r2	 # SI store
	l.ori   	r14,r14,4
	l.sw    	4(r7),r20	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r7),r14	 # movhi
.L11223:
	l.lwz   	r5,32(r1)	 # SI load
	l.lwz   	r6,40(r1)	 # SI load
	l.lhz   	r18,28(r5)	 # zero_extendqisi2
	l.lhz   	r14,28(r6)	 # zero_extendqisi2
	l.or    	r14,r18,r14
	l.andi  	r14,r14,1
	l.sfeqi	r14,0
	l.bnf	.L12216	# delay slot filled
	l.ori   	r14,r18,0	 # move reg to reg
	l.andi  	r18,r18,16384
	l.sfeqi	r18,0
	l.bnf	.L12217
	l.nop			# nop delay slot
.L11284:
	l.andi  	r14,r14,18
	l.sfnei	r14,0
	l.bnf	.L12218	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r11,40(r1)	 # SI load
.L12379:
	l.lhz   	r14,28(r11)	 # zero_extendqisi2
	l.andi  	r18,r14,16384
	l.sfeqi	r18,0
	l.bnf	.L12219
	l.nop			# nop delay slot
.L11286:
	l.andi  	r14,r14,18
	l.sfnei	r14,0
	l.bnf	.L12220	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r4,40(r1)	 # SI load
.L12378:
	l.lwz   	r5,32(r1)	 # SI load
	l.lwz   	r20,24(r4)	 # SI load
	l.lwz   	r14,24(r5)	 # SI load
	l.lwz   	r21,80(r28)	 # SI load
	l.add   	r22,r20,r14
	l.srai  	r18,r21,31
	l.srai  	r14,r22,31
	l.sfgts 	r14,r18
	l.bf	.L11275	# delay slot filled
	l.sfne 	r14,r18
	l.bnf	.L12221	# delay slot filled
	l.sfgtu 	r22,r21
	l.lwz   	r6,24(r1)	 # SI load
.L12398:
	l.lwz   	r7,40(r1)	 # SI load
	l.lhz   	r18,28(r6)	 # zero_extendqisi2
	l.xor   	r20,r6,r7
	l.addi  	r8,r0,-16640	 # move immediate I
	l.sub   	r14,r0,r20
	l.and   	r18,r18,r8
	l.or    	r14,r14,r20
	l.ori   	r18,r18,2
	l.xori  	r14,r14,0xffff
	l.sh    	28(r6),r18	 # movhi
	l.srli  	r5,r14,31
	l.ori   	r3,r6,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.addi  	r4,r22,2
	l.sfnei	r11,0
	l.bf	.L12133	# delay slot filled
	l.lwz   	r2,24(r1)	 # SI load
	l.lwz   	r3,40(r1)	 # SI load
	l.sfeq 	r2,r3
	l.bf	.L11289	# delay slot filled
	l.lwz   	r5,40(r1)	 # SI load
	l.lwz   	r3,20(r2)	 # SI load
	l.lwz   	r4,20(r5)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.lwz   	r5,24(r5)	 # SI load
.L11289:
	l.lwz   	r6,24(r1)	 # SI load
	l.lwz   	r7,40(r1)	 # SI load
	l.lwz   	r8,32(r1)	 # SI load
	l.lwz   	r14,24(r7)	 # SI load
	l.lwz   	r20,20(r6)	 # SI load
	l.lwz   	r4,20(r8)	 # SI load
	l.add   	r3,r20,r14
	l.lwz   	r5,24(r8)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.lwz   	r11,24(r1)	 # SI load
	l.lwz   	r14,20(r11)	 # SI load
	l.add   	r14,r14,r22
	l.sb    	0(r14),r2	    # movqi
	l.lwz   	r14,20(r11)	 # SI load
	l.add   	r14,r14,r22
	l.sb    	1(r14),r2	    # movqi
	l.sw    	24(r11),r22	 # SI store
	l.lhz   	r14,28(r11)	 # zero_extendqisi2
	l.lwz   	r3,56(r1)	 # SI load
	l.ori   	r14,r14,512
	l.sb    	31(r11),r3	    # movqi
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r11),r14	 # movhi
.L11224:
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.addi  	r4,r5,212
	l.jal   	sqlite3VdbeCloseStatement.clone.170	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L11814	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r7,4(r24)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r8,16(r1)	 # SI load
	l.lwz   	r5,80(r6)	 # SI load
	l.slli  	r6,r7,4
	l.slli  	r7,r7,8
	l.addi  	r5,r5,2
	l.lwz   	r16,76(r8)	 # SI load
	l.sub   	r6,r7,r6
	l.ori   	r5,r5,1
	l.add   	r16,r16,r6
	l.lwz   	r3,8(r24)	 # SI load
	l.sw    	80(r8),r5	 # SI store
	l.sflesi	r3,0
	l.bf	.L11281	# delay slot filled
	l.sw    	120(r8),r16	 # SI store
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r2,r24,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
.L12365:
	l.jal   	sqlite3VdbeMemNulTerminate	# delay slot filled
	l.addi  	r18,r18,1
	l.lhz   	r3,28(r16)	 # zero_extendqisi2
	l.addi  	r4,r16,30
	l.jal   	_storeTypeInfo.clone.72	# delay slot filled
	l.addi  	r16,r16,240
	l.lwz   	r3,8(r2)	 # SI load
	l.sfgts 	r3,r18
	l.bf	.L12365	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L11281:
	l.lwz   	r11,36(r1)	 # SI load
	l.lbz   	r5,30(r11)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L12130	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r2,r3,1
	l.addi  	r30,r0,100	 # move immediate I
	l.j     	.L11270	# delay slot filled
	l.sw    	96(r4),r2	 # SI store
.L11225:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r21,48(r5)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r20,188(r28)	 # SI load
	l.add   	r14,r21,r14
		l.sw    	44(r1), r6
		l.sw    	44+4(r1), r7
	l.sfeqi	r20,0
	l.bf	.L11626	# delay slot filled
	l.lwz   	r20,0(r14)	 # SI load
	l.lwz   	r14,16(r24)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11626
	l.nop			# nop delay slot
		l.lwz   	r7, 8(r20)
		l.lwz   	r8, 8+4(r20)
		l.sw    	44(r1), r7
		l.sw    	44+4(r1), r8
.L11626:
	l.jal   	sqlite3VdbeCursorMoveto	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r19,0(r20)	 # SI load
	l.lwz   	r14,4(r19)	 # SI load
	l.lwz   	r16,8(r14)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L11627
	l.nop			# nop delay slot
	l.j     	.L11629	# delay slot filled
	l.lwz   	r18,20(r19)	 # SI load
.L11628:
	l.lwz   	r16,8(r16)	 # SI load
.L12310:
	l.sfnei	r16,0
	l.bnf	.L11627
	l.nop			# nop delay slot
.L11629:
	l.lwz   	r2,20(r16)	 # SI load
	l.sfne 	r2,r18
	l.bf	.L11628	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
		l.sw    	24(r16), r2
		l.sw    	24+4(r16), r3
	l.j     	.L12310	# delay slot filled
	l.lwz   	r16,8(r16)	 # SI load
.L11226:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r2,16(r1)	 # SI load
	l.slli  	r18,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r20,76(r2)	 # SI load
	l.lwz   	r4,16(r24)	 # SI load
	l.sub   	r2,r14,r18
	l.add   	r20,r20,r2
	l.jal   	sqlite3VdbeMemFinalize	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r11,1
	l.bnf	.L12222	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
.L12324:
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.lhz   	r14,28(r20)	 # zero_extendqisi2
	l.andi  	r2,r14,18
	l.sfeqi	r2,0
	l.bf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.andi  	r14,r14,16384
	l.sfeqi	r14,0
	l.bf	.L11769	# delay slot filled
	l.lwz   	r21,24(r20)	 # SI load
	l.lwz   	r14,0(r20)	 # SI load
	l.add   	r21,r21,r14
.L11769:
	l.lwz   	r18,16(r20)	 # SI load
	l.lwz   	r18,80(r18)	 # SI load
	l.sflts 	r18,r21
	l.bnf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.j     	.L12311	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
.L11227:
	l.lwz   	r15,8(r24)	 # SI load
	l.lwz   	r6,32(r1)	 # SI load
	l.lwz   	r7,16(r1)	 # SI load
	l.lhz   	r14,28(r6)	 # zero_extendqisi2
	l.slli  	r6,r15,4
	l.slli  	r15,r15,8
	l.lwz   	r18,76(r7)	 # SI load
	l.andi  	r14,r14,1
	l.sub   	r6,r15,r6
	l.sfeqi	r14,0
	l.add   	r18,r18,r6
	l.bf	.L11377	# delay slot filled
	l.sw    	24(r1),r18	 # SI store
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11229:
	l.lwz   	r14,12(r24)	 # SI load
	l.lwz   	r26,16(r24)	 # SI load
	l.lwz   	r30,4(r24)	 # SI load
	l.sflesi	r14,0
	l.bf	.L11841	# delay slot filled
	l.lwz   	r24,8(r24)	 # SI load
	l.lwz   	r20,68(r1)	 # SI load
	l.sw    	44(r1),r28	 # SI store
	l.addi  	r22,r26,12
	l.ori   	r28,r14,0	 # move reg to reg
	l.addi  	r18,r0,0	 # move immediate I
	l.ori   	r16,r20,0	 # move reg to reg
	l.j     	.L11368	# delay slot filled
	l.lwz   	r14,16(r1)	 # SI load
.L11367:
	l.addi  	r22,r22,4
	l.sfgts 	r28,r18
	l.bnf	.L12223	# delay slot filled
	l.addi  	r20,r20,4
.L11368:
	l.sfnei	r16,0
	l.bnf	.L11366	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
	l.lwz   	r2,0(r20)	 # SI load
.L11366:
	l.add   	r3,r2,r30
	l.add   	r2,r2,r24
	l.slli  	r7,r3,4
	l.slli  	r5,r2,4
	l.slli  	r3,r3,8
	l.slli  	r2,r2,8
	l.lwz   	r4,76(r14)	 # SI load
	l.lwz   	r6,8(r26)	 # SI load
	l.sub   	r2,r2,r5
	l.sub   	r3,r3,r7
	l.add   	r6,r6,r18
	l.add   	r3,r4,r3
	l.lwz   	r5,0(r22)	 # SI load
	l.add   	r4,r4,r2
	l.jal   	sqlite3MemCompare	# delay slot filled
	l.lbz   	r2,0(r6)	 # zero_extendqisi2
	l.sfeqi	r11,0
	l.bf	.L11367	# delay slot filled
	l.addi  	r18,r18,1
	l.addi  	r18,r18,-1
	l.sw    	72(r1),r11	 # SI store
	l.sw    	68(r1),r2	 # SI store
	l.sfeqi	r2,0
	l.bf	.L11267	# delay slot filled
	l.lwz   	r28,44(r1)	 # SI load
	l.sub   	r11,r0,r11
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	72(r1),r11	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sw    	68(r1),r5	 # SI store
.L11230:
	l.lwz   	r18,216(r28)	 # SI load
	l.sfnei	r18,0
	l.bf	.L12341	# delay slot filled
	l.addi  	r2,r0,9	 # move immediate I
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11231:
	l.lwz   	r19,4(r24)	 # SI load
	l.lwz   	r21,8(r28)	 # SI load
	l.add   	r14,r19,r19
	l.lwz   	r20,12(r24)	 # SI load
	l.add   	r19,r14,r19
	l.slli  	r18,r19,3
	l.add   	r18,r21,r18
	l.lwz   	r14,4(r18)	 # SI load
	l.lbz   	r18,9(r14)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bf	.L11267	# delay slot filled
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r20,r20,1
	l.lwz   	r15,4(r14)	 # SI load
	l.lwz   	r6,0(r14)	 # SI load
	l.andi  	r18,r20,0xff	 # zero_extendqisi2
	l.sw    	4(r15),r6	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	querySharedCacheTableLock	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L12224	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11786:
	l.andi  	r14,r30,255
	l.sfnei	r14,6
	l.bf	.L11331	# delay slot filled
	l.movhi  	r5,hi(.LC305)
	l.lwz   	r2,16(r24)	 # SI load
	l.lwz   	r3,80(r1)	 # SI load
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC305)
	l.jal   	sqlite3SetString	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.j     	.L12302	# delay slot filled
	l.sfeqi	r30,0
.L11232:
	l.lwz   	r19,8(r24)	 # SI load
	l.lwz   	r18,8(r28)	 # SI load
	l.add   	r14,r19,r19
	l.addi  	r11,r0,0	 # move immediate I
	l.add   	r19,r14,r19
	l.lwz   	r20,12(r24)	 # SI load
	l.slli  	r19,r19,3
	l.sw    	2844(r1),r11	 # SI store
	l.sfeq 	r20,r11
	l.add   	r18,r18,r19
	l.lwz   	r21,4(r24)	 # SI load
	l.bf	.L11690	# delay slot filled
	l.lwz   	r14,4(r18)	 # SI load
	l.addi  	r20,r1,2844
.L11690:
	l.lwz   	r3,0(r14)	 # SI load
	l.lwz   	r4,4(r14)	 # SI load
	l.ori   	r5,r21,0	 # move reg to reg
	l.jal   	sqlite3BtreeClearTable.clone.173	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r14,12(r24)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11331	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r2,16(r1)	 # SI load
	l.lwz   	r22,2844(r1)	 # SI load
	l.lwz   	r20,132(r2)	 # SI load
	l.sflesi	r14,0
	l.add   	r18,r20,r22
	l.bf	.L11331	# delay slot filled
	l.sw    	132(r2),r18	 # SI store
	l.slli  	r20,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r15,76(r2)	 # SI load
	l.srai  	r23,r22,31
	l.sub   	r20,r14,r20
	l.addi  	r18,r0,1	 # move immediate I
	l.add   	r20,r15,r20
	l.lwz   	r21,4(r20)	 # SI load
	l.add   	r22,r21,r22
	l.sfltu 	r22,r21
	l.bf	.L11691	# delay slot filled
	l.lwz   	r6,0(r20)	 # SI load
	l.addi  	r18,r0,0	 # move immediate I
.L11691:
	l.add   	r14,r6,r23
	l.sw    	4(r20),r22	 # SI store
	l.add   	r18,r18,r14
	l.j     	.L11331	# delay slot filled
	l.sw    	0(r20),r18	 # SI store
.L11233:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r14,8(r28)	 # SI load
	l.add   	r19,r18,r18
	l.add   	r18,r19,r18
	l.slli  	r18,r18,3
	l.add   	r18,r14,r18
	l.lwz   	r18,4(r18)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L11514	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3BtreeGetMeta	# delay slot filled
	l.addi  	r5,r1,2844
	l.sfnei	r11,0
	l.bf	.L11814	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r20,2844(r1)	 # SI load
.L11515:
	l.lwz   	r14,8(r24)	 # SI load
	l.sfeq 	r14,r20
	l.bf	.L11267	# delay slot filled
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r3,36(r1)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,116(r5)	 # SI load
	l.movhi  	r4,hi(.LC286)
	l.lwz   	r3,36(r1)	 # SI load
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r4,r4,lo(.LC286)
	l.lwz   	r2,4(r24)	 # SI load
	l.lwz   	r7,36(r1)	 # SI load
	l.add   	r5,r2,r2
	l.lwz   	r6,8(r7)	 # SI load
	l.add   	r5,r5,r2
	l.lwz   	r8,16(r1)	 # SI load
	l.slli  	r5,r5,3
	l.sw    	116(r8),r11	 # SI store
	l.add   	r5,r6,r5
	l.lwz   	r6,2844(r1)	 # SI load
	l.lwz   	r5,20(r5)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.sfeq 	r5,r6
	l.bf	.L11516	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L11516:
	l.lwz   	r11,36(r1)	 # SI load
	l.lwz   	r8,140(r11)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L11814	# delay slot filled
	l.addi  	r30,r0,17	 # move immediate I
	l.addi  	r2,r0,1	 # movqi: move immediate
.L12366:
	l.sb    	126(r8),r2	    # movqi
	l.lwz   	r8,8(r8)	 # SI load
	l.sfnei	r8,0
	l.bf	.L12366
	l.nop			# nop delay slot
	l.j     	.L11814	# delay slot filled
	l.addi  	r30,r0,17	 # move immediate I
.L11234:
	l.lbz   	r22,3(r24)	 # zero_extendqisi2
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r14,8(r24)	 # SI load
	l.lwz   	r21,76(r6)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L11764	# delay slot filled
	l.lwz   	r2,36(r6)	 # SI load
	l.slli  	r19,r14,4
	l.slli  	r14,r14,8
	l.ori   	r18,r2,0	 # move reg to reg
	l.addi  	r20,r0,0	 # move immediate I
	l.sub   	r19,r14,r19
	l.add   	r16,r21,r19
.L11765:
	l.lhz   	r3,28(r16)	 # zero_extendqisi2
	l.addi  	r4,r16,30
	l.sw    	0(r18),r16	 # SI store
	l.jal   	_storeTypeInfo.clone.72	# delay slot filled
	l.addi  	r20,r20,1
	l.addi  	r16,r16,240
	l.sfgts 	r22,r20
	l.bf	.L11765	# delay slot filled
	l.addi  	r18,r18,4
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r21,76(r7)	 # SI load
.L11764:
	l.lwz   	r14,12(r24)	 # SI load
	l.lwz   	r20,16(r24)	 # SI load
	l.slli  	r19,r14,4
	l.slli  	r14,r14,8
	l.addi  	r11,r0,0	 # move immediate I
	l.addi  	r8,r0,1	 # movhi: move immediate
	l.sub   	r14,r14,r19
	l.sw    	1136(r1),r20	 # SI store
	l.add   	r18,r21,r14
	l.sh    	1172(r1),r8	 # movhi
	l.lwz   	r14,24(r18)	 # SI load
	l.sw    	1384(r1),r18	 # SI store
	l.addi  	r14,r14,1
	l.sw    	1164(r1),r11	 # SI store
	l.sw    	24(r18),r14	 # SI store
	l.sw    	1180(r1),r11	 # SI store
	l.lbz   	r14,3(r20)	 # zero_extendqisi2
	l.sw    	1176(r1),r11	 # SI store
	l.andi  	r14,r14,8
	l.sw    	1160(r1),r28	 # SI store
	l.sw    	1388(r1),r11	 # SI store
	l.sfeq 	r14,r11
	l.bnf	.L12225	# delay slot filled
	l.sw    	1392(r1),r11	 # SI store
.L11766:
	l.lwz   	r14,16(r20)	 # SI load
	l.addi  	r3,r1,1136
	l.ori   	r4,r22,0	 # move reg to reg
	l.jalr  	r14	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r30,1388(r1)	 # SI load
	l.sfeqi	r30,0
	l.bnf	.L12226
	l.nop			# nop delay slot
.L11767:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r1,1144
	l.j     	.L12302	# delay slot filled
	l.sfeqi	r30,0
.L11195:
	l.lbz   	r18,28(r28)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bnf	.L12227
	l.nop			# nop delay slot
.L11474:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r6,8(r28)	 # SI load
	l.add   	r19,r18,r18
	l.lwz   	r5,16(r1)	 # SI load
	l.add   	r18,r19,r18
	l.lwz   	r2,212(r5)	 # SI load
	l.slli  	r14,r18,3
	l.sfnei	r2,0
	l.add   	r14,r6,r14
	l.bnf	.L12228	# delay slot filled
	l.lwz   	r18,4(r14)	 # SI load
.L11475:
	l.lwz   	r20,4(r18)	 # SI load
	l.lwz   	r14,0(r18)	 # SI load
	l.sw    	4(r20),r14	 # SI store
	l.lbz   	r30,8(r18)	 # zero_extendqisi2
	l.sfnei	r30,2
	l.bnf	.L12229
	l.nop			# nop delay slot
	l.j     	.L11814	# delay slot filled
	l.addi  	r30,r0,2	 # move immediate I
.L11196:
	l.jal   	sqlite3VdbeMemIntegerify	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeMemIntegerify	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r8,40(r1)	 # SI load
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r20,0(r8)	 # SI load
	l.lwz   	r14,0(r11)	 # SI load
	l.sflts 	r14,r20
	l.bf	.L11954	# delay slot filled
	l.lwz   	r21,4(r8)	 # SI load
	l.sfne 	r14,r20
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r14,4(r11)	 # SI load
	l.sfltu 	r14,r21
	l.bnf	.L12299
	l.nop			# nop delay slot
.L11954:
	l.lwz   	r2,32(r1)	 # SI load
	l.sw    	0(r2),r20	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sw    	4(r2),r21	 # SI store
.L11203:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r18,r14,2
	l.lwz   	r20,48(r3)	 # SI load
	l.lwz   	r14,12(r24)	 # SI load
	l.add   	r18,r20,r18
	l.slli  	r19,r14,4
	l.lwz   	r22,0(r18)	 # SI load
	l.slli  	r14,r14,8
	l.lbz   	r16,20(r22)	 # zero_extendqisi2
	l.lwz   	r26,76(r3)	 # SI load
	l.sub   	r14,r14,r19
	l.sfeqi	r16,0
	l.bnf	.L12230	# delay slot filled
	l.add   	r26,r26,r14
	l.lwz   	r20,76(r22)	 # SI load
	l.addi  	r5,r0,260	 # move immediate I
	l.lwz   	r2,0(r20)	 # SI load
	l.addi  	r3,r1,876
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.lwz   	r20,0(r2)	 # SI load
	l.addi  	r3,r1,884
	l.jal   	sqlite3VdbeMemMove	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.lhz   	r14,912(r1)	 # zero_extendqisi2
	l.addi  	r4,r0,-16640	 # move immediate I
	l.lwz   	r5,8(r24)	 # SI load
	l.and   	r18,r14,r4
	l.lwz   	r3,76(r22)	 # SI load
	l.ori   	r18,r18,1
	l.sh    	912(r1),r18	 # movhi
	l.lwz   	r18,44(r20)	 # SI load
	l.jalr  	r18	# delay slot filled
	l.addi  	r4,r1,876
	l.lwz   	r5,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,116(r5)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r20,8(r2)	 # SI load
	l.addi  	r3,r1,884
	l.sw    	116(r6),r20	 # SI store
	l.lwz   	r4,56(r1)	 # SI load
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.sw    	8(r2),r16	 # SI store
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemMove	# delay slot filled
	l.addi  	r4,r1,884
	l.lhz   	r20,28(r26)	 # zero_extendqisi2
	l.andi  	r18,r20,18
	l.sfeqi	r18,0
	l.bf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.andi  	r20,r20,16384
	l.sfeqi	r20,0
	l.bf	.L11806	# delay slot filled
	l.lwz   	r6,24(r26)	 # SI load
	l.lwz   	r14,0(r26)	 # SI load
	l.add   	r6,r6,r14
.L11806:
	l.lwz   	r14,16(r26)	 # SI load
	l.lwz   	r14,80(r14)	 # SI load
	l.sflts 	r14,r6
	l.bnf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.j     	.L12311	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
.L11204:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r18,48(r6)	 # SI load
	l.addi  	r4,r1,2844
	l.add   	r18,r18,r14
	l.lwz   	r18,0(r18)	 # SI load
	l.jal   	sqlite3BtreeLast	# delay slot filled
	l.lwz   	r3,0(r18)	 # SI load
	l.lwz   	r19,2844(r1)	 # SI load
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.addi  	r8,r0,0	 # move immediate I
	l.sb    	28(r18),r7	    # movqi
	l.sb    	20(r18),r19	    # movqi
	l.sb    	17(r18),r7	    # movqi
	l.sw    	88(r18),r8	 # SI store
	l.sfeq 	r19,r8
	l.bf	.L11331	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r14,8(r24)	 # SI load
	l.sfles 	r14,r8
	l.bf	.L11331	# delay slot filled
	l.addi  	r14,r14,-1
	l.j     	.L11331	# delay slot filled
	l.sw    	12(r1),r14	 # SI store
.L11205:
	l.lwz   	r19,4(r24)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.slli  	r19,r19,2
	l.lwz   	r14,48(r6)	 # SI load
	l.add   	r19,r14,r19
	l.lwz   	r22,0(r19)	 # SI load
	l.lwz   	r15,0(r22)	 # SI load
	l.sfeqi	r15,0
	l.bf	.L11533	# delay slot filled
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.lbz   	r14,29(r22)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bnf	.L12231	# delay slot filled
	l.sb    	20(r22),r7	    # movqi
	l.xori  	r19,r18,123
	l.xori  	r20,r18,55
	l.sub   	r14,r0,r19
	l.lwz   	r21,16(r24)	 # SI load
	l.lwz   	r6,60(r22)	 # SI load
	l.or    	r19,r14,r19
	l.sub   	r14,r0,r20
	l.xori  	r19,r19,0xffff
	l.or    	r14,r14,r20
	l.sw    	2772(r1),r6	 # SI store
	l.sh    	2776(r1),r21	 # movhi
	l.sfgesi	r14,0
	l.bf	.L11944	# delay slot filled
	l.srli  	r26,r19,31
	l.sfeqi	r26,0
	l.bf	.L11555
	l.nop			# nop delay slot
.L11944:
	l.addi  	r8,r0,8	 # movhi: move immediate
	l.sh    	2778(r1),r8	 # movhi
.L11557:
	l.lwz   	r20,12(r24)	 # SI load
	l.lwz   	r11,16(r1)	 # SI load
	l.slli  	r14,r20,4
	l.slli  	r20,r20,8
	l.lwz   	r21,76(r11)	 # SI load
	l.ori   	r3,r15,0	 # move reg to reg
	l.sub   	r14,r20,r14
	l.addi  	r4,r1,2772
	l.add   	r14,r21,r14
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r8,r1,2844
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3BtreeMovetoUnpacked	# delay slot filled
	l.sw    	2788(r1),r14	 # SI store
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sb    	17(r22),r11	    # movqi
.L11554:
	l.addi  	r3,r0,0	 # move immediate I
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sw    	88(r22),r3	 # SI store
	l.sfne 	r26,r3
	l.bf	.L11945	# delay slot filled
	l.sb    	28(r22),r2	    # movqi
	l.xori  	r19,r18,109
	l.sub   	r14,r0,r19
	l.or    	r14,r14,r19
	l.sflts 	r14,r3
	l.bf	.L11558	# delay slot filled
	l.lwz   	r6,2844(r1)	 # SI load
.L11945:
	l.lwz   	r20,2844(r1)	 # SI load
	l.sfltsi	r20,0
	l.bf	.L11560	# delay slot filled
	l.sfeqi	r26,0
	l.bf	.L12367	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.sub   	r14,r0,r20
	l.or    	r14,r14,r20
	l.sfltsi	r14,0
	l.bnf	.L11560
	l.nop			# nop delay slot
.L12367:
	l.j     	.L11267	# delay slot filled
	l.sw    	2844(r1),r4	 # SI store
.L11206:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r14,8(r28)	 # SI load
	l.add   	r19,r18,r18
	l.add   	r18,r19,r18
	l.slli  	r18,r18,3
	l.add   	r18,r14,r18
	l.lwz   	r18,4(r18)	 # SI load
	l.lwz   	r20,4(r18)	 # SI load
	l.lwz   	r18,0(r18)	 # SI load
	l.lbz   	r14,18(r20)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bnf	.L12232	# delay slot filled
	l.sw    	4(r20),r18	 # SI store
	l.lwz   	r2,8(r24)	 # SI load
.L12319:
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11207:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r2,r14,2
	l.lwz   	r18,48(r3)	 # SI load
	l.add   	r2,r18,r2
	l.lwz   	r14,0(r2)	 # SI load
	l.lwz   	r18,0(r14)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.jal   	sqlite3VdbeCursorMoveto	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lbz   	r20,20(r14)	 # zero_extendqisi2
	l.sfnei	r20,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
		l.sw    	2808(r1), r5
		l.sw    	2808+4(r1), r6
	l.jal   	sqlite3BtreeKeySize	# delay slot filled
	l.addi  	r4,r1,2808
	l.lwz   	r22,2812(r1)	 # SI load
	l.lwz   	r14,2808(r1)	 # SI load
	l.addi  	r2,r22,-1
	l.sfltu 	r2,r22
	l.bf	.L11656	# delay slot filled
	l.addi  	r21,r0,1	 # move immediate I
	l.ori   	r21,r20,0	 # move reg to reg
.L11656:
	l.addi  	r14,r14,-1
	l.add   	r14,r21,r14
	l.sfnei	r14,0
	l.bf	.L11881	# delay slot filled
	l.movhi 	r6,hi(2147418112)	 # move immediate M
	l.ori   	r6,r6,65534
	l.sfgtu 	r2,r6
	l.bf	.L11345	# delay slot filled
	l.addi  	r30,r0,11	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r7,r1,1896
	l.sh    	1924(r1),r14	 # movhi
	l.sw    	1912(r1),r14	 # SI store
	l.jal   	sqlite3VdbeMemFromBtree	# delay slot filled
	l.sw    	1932(r1),r14	 # SI store
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r2,1916(r1)	 # SI load
	l.lbs   	r6,0(r2)	 # extendqisi2_no_sext_mem
	l.sfltsi	r6,0
	l.bf	.L11658	# delay slot filled
	l.lbz   	r14,0(r2)	 # zero_extendqisi2
	l.sw    	2844(r1),r14	 # SI store
	l.lwz   	r6,2844(r1)	 # SI load
.L12334:
	l.sfleui	r6,1
	l.bf	.L11660	# delay slot filled
	l.lwz   	r14,1920(r1)	 # SI load
	l.sfgts 	r6,r14
	l.bnf	.L12233	# delay slot filled
	l.addi  	r6,r6,-1
.L11660:
	l.addi  	r3,r1,1896
.L12399:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r30,r0,11	 # move immediate I
	l.j     	.L12309	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
.L11208:
	l.lwz   	r14,4(r24)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L12368	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r20,72(r28)	 # SI load
	l.lwz   	r14,132(r5)	 # SI load
	l.sw    	68(r28),r14	 # SI store
	l.add   	r14,r20,r14
	l.sw    	72(r28),r14	 # SI store
.L12368:
	l.lwz   	r6,16(r1)	 # SI load
	l.j     	.L11267	# delay slot filled
	l.sw    	132(r6),r7	 # SI store
.L11209:
	l.lwz   	r8,16(r1)	 # SI load
	l.lwz   	r20,84(r8)	 # SI load
	l.lwz   	r18,88(r8)	 # SI load
	l.addi  	r14,r20,1
	l.sfges 	r20,r18
	l.bf	.L11759	# delay slot filled
	l.sw    	84(r8),r14	 # SI store
	l.lwz   	r14,92(r8)	 # SI load
.L11760:
	l.add   	r18,r20,r20
	l.lwz   	r4,16(r1)	 # SI load
	l.add   	r2,r18,r20
	l.lwz   	r21,132(r4)	 # SI load
	l.slli  	r2,r2,2
		l.lwz   	r5, 48(r28)
		l.lwz   	r6, 48+4(r28)
	l.add   	r14,r14,r2
		l.sw    	0(r14), r5
		l.sw    	4(r14), r6
	l.j     	.L11267	# delay slot filled
	l.sw    	8(r14),r21	 # SI store
.L11210:
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r8,32(r1)	 # SI load
	l.srai  	r18,r7,31
	l.lwz   	r14,4(r8)	 # SI load
	l.addi  	r11,r0,4	 # movhi: move immediate
	l.sw    	4(r8),r7	 # SI store
	l.sh    	28(r8),r11	 # movhi
	l.sw    	0(r8),r18	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r14	 # SI store
.L11211:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r2,8(r28)	 # SI load
	l.add   	r14,r18,r18
	l.lwz   	r20,16(r24)	 # SI load
	l.add   	r18,r14,r18
	l.lbs   	r19,0(r20)	 # extendqisi2_no_sext_mem
	l.slli  	r18,r18,3
	l.ori   	r14,r20,0	 # move reg to reg
	l.sfeqi	r19,0
	l.add   	r2,r2,r18
	l.lwz   	r2,20(r2)	 # SI load
	l.bf	.L11707	# delay slot filled
	l.addi  	r18,r2,36
	l.addi  	r14,r14,1
.L12369:
	l.lbs   	r2,0(r14)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L12369	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
.L11707:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.sub   	r14,r14,r20
	l.ori   	r6,r6,65535
	l.ori   	r3,r18,0	 # move reg to reg
	l.and   	r5,r14,r6
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L11267	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r20,28(r11)	 # SI load
	l.lwz   	r14,32(r11)	 # SI load
	l.sfne 	r20,r14
	l.bnf	.L12234
	l.nop			# nop delay slot
.L11709:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3DeleteTrigger	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r14,12(r28)	 # SI load
	l.ori   	r14,r14,16
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r28),r14	 # SI store
.L11212:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r2,8(r28)	 # SI load
	l.add   	r14,r18,r18
	l.lwz   	r20,16(r24)	 # SI load
	l.add   	r18,r14,r18
	l.lbs   	r19,0(r20)	 # extendqisi2_no_sext_mem
	l.slli  	r18,r18,3
	l.ori   	r14,r20,0	 # move reg to reg
	l.sfeqi	r19,0
	l.add   	r2,r2,r18
	l.lwz   	r2,20(r2)	 # SI load
	l.bf	.L11698	# delay slot filled
	l.addi  	r18,r2,20
	l.addi  	r14,r14,1
.L12370:
	l.lbs   	r2,0(r14)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L12370	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
.L11698:
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.sub   	r14,r14,r20
	l.ori   	r2,r2,65535
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.and   	r5,r14,r2
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L11700	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r14,16(r11)	 # SI load
	l.lwz   	r19,20(r14)	 # SI load
	l.sfne 	r11,r19
	l.bnf	.L12235	# delay slot filled
	l.sfeqi	r19,0
	l.bf	.L11702
	l.nop			# nop delay slot
	l.lwz   	r14,32(r19)	 # SI load
	l.sfne 	r11,r14
	l.bf	.L12371	# delay slot filled
	l.sfnei	r14,0
	l.j     	.L12297	# delay slot filled
	l.ori   	r14,r19,0	 # move reg to reg
.L11706:
	l.lwz   	r2,32(r14)	 # SI load
	l.sfne 	r18,r2
	l.bnf	.L11704	# delay slot filled
	l.sfnei	r2,0
	l.ori   	r14,r2,0	 # move reg to reg
.L12371:
	l.bf	.L11706
	l.nop			# nop delay slot
.L11702:
	l.jal   	freeIndex	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L11700:
	l.lwz   	r14,12(r28)	 # SI load
	l.ori   	r2,r14,16
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r28),r2	 # SI store
.L11213:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.slli  	r18,r18,2
	l.lwz   	r14,48(r6)	 # SI load
	l.add   	r18,r14,r18
	l.lwz   	r22,0(r18)	 # SI load
	l.lwz   	r18,0(r22)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L11267	# delay slot filled
	l.addi  	r11,r0,0	 # movhi: move immediate
	l.lwz   	r14,8(r24)	 # SI load
	l.lwz   	r15,76(r6)	 # SI load
	l.slli  	r20,r14,4
	l.slli  	r14,r14,8
	l.lhz   	r24,14(r24)	 # zero_extendqisi2
	l.sub   	r14,r14,r20
	l.lwz   	r21,60(r22)	 # SI load
	l.add   	r14,r15,r14
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r1,2772
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r8,r1,2844
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.sh    	2776(r1),r24	 # movhi
	l.sw    	2772(r1),r21	 # SI store
	l.sh    	2778(r1),r11	 # movhi
	l.jal   	sqlite3BtreeMovetoUnpacked	# delay slot filled
	l.sw    	2788(r1),r14	 # SI store
	l.sfnei	r11,0
	l.bf	.L11654	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r14,2844(r1)	 # SI load
	l.sfnei	r14,0
	l.bf	.L12372	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.jal   	sqlite3BtreeDelete	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r30,r11,0	 # move reg to reg
.L11654:
	l.addi  	r2,r0,0	 # move immediate I
.L12372:
	l.j     	.L11331	# delay slot filled
	l.sw    	88(r22),r2	 # SI store
.L11214:
	l.lbz   	r2,28(r28)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L12237	# delay slot filled
	l.movhi  	r4,hi(.LC295)
	l.lwz   	r14,8(r28)	 # SI load
	l.lwz   	r26,12(r28)	 # SI load
	l.lwz   	r24,4(r14)	 # SI load
	l.ori   	r14,r26,10240
	l.lwz   	r20,4(r24)	 # SI load
	l.sw    	12(r28),r14	 # SI store
	l.lwz   	r14,0(r20)	 # SI load
	l.lwz   	r5,72(r28)	 # SI load
	l.lwz   	r14,56(r14)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC295)
	l.lwz   	r20,68(r28)	 # SI load
	l.sw    	44(r1),r5	 # SI store
	l.jal   	execSql	# delay slot filled
	l.lwz   	r16,0(r14)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L12238	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r4,44(r1)	 # SI load
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sw    	12(r28),r26	 # SI store
	l.sw    	68(r28),r20	 # SI store
	l.sw    	72(r28),r4	 # SI store
	l.sb    	28(r28),r5	    # movqi
.L11824:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L12302	# delay slot filled
	l.sfeqi	r30,0
.L11215:
	l.lwz   	r8,32(r1)	 # SI load
	l.lhz   	r18,28(r8)	 # zero_extendqisi2
	l.andi  	r18,r18,1
	l.sfnei	r18,0
	l.bnf	.L12239	# delay slot filled
	l.addi  	r22,r0,6	 # move immediate I
.L11371:
	l.lwz   	r11,40(r1)	 # SI load
	l.lhz   	r18,28(r11)	 # zero_extendqisi2
	l.andi  	r18,r18,1
	l.sfnei	r18,0
	l.bnf	.L12240	# delay slot filled
	l.addi  	r20,r0,2	 # move immediate I
.L11372:
	l.lbz   	r14,0(r24)	 # zero_extendqisi2
	l.sfnei	r14,67
	l.bnf	.L12241	# delay slot filled
	l.movhi  	r3,hi(or_logic.13319)
	l.ori   	r3,r3,lo(or_logic.13319)
	l.add   	r14,r20,r3
	l.add   	r14,r14,r22
	l.lbz   	r18,0(r14)	 # zero_extendqisi2
.L11374:
	l.sfnei	r18,2
	l.bnf	.L12242	# delay slot filled
	l.lwz   	r6,24(r1)	 # SI load
	l.addi  	r7,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r6)	 # zero_extendqisi2
	l.and   	r14,r14,r7
	l.addi  	r8,r0,0	 # move immediate I
	l.ori   	r14,r14,4
	l.sw    	4(r6),r18	 # SI store
	l.sw    	0(r6),r8	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r6),r14	 # movhi
.L11216:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r2,8(r28)	 # SI load
	l.add   	r14,r18,r18
	l.lwz   	r19,16(r24)	 # SI load
	l.add   	r18,r14,r18
	l.lbs   	r20,0(r19)	 # extendqisi2_no_sext_mem
	l.slli  	r18,r18,3
	l.sfeqi	r20,0
	l.ori   	r14,r19,0	 # move reg to reg
	l.add   	r2,r2,r18
	l.lwz   	r2,20(r2)	 # SI load
	l.bf	.L11696	# delay slot filled
	l.addi  	r20,r2,4
	l.addi  	r14,r14,1
.L12373:
	l.lbs   	r2,0(r14)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L12373	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
.L11696:
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.sub   	r14,r14,r19
	l.ori   	r11,r11,65535
	l.ori   	r4,r19,0	 # move reg to reg
	l.and   	r5,r14,r11
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r14,12(r28)	 # SI load
	l.ori   	r2,r14,16
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r28),r2	 # SI store
.L11217:
	l.lwz   	r18,12(r24)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
.L11382:
	l.lhz   	r2,28(r3)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
	l.bnf	.L12243	# delay slot filled
	l.addi  	r18,r18,-1
	l.sfgtsi	r18,0
	l.bf	.L11382	# delay slot filled
	l.addi  	r3,r3,240
	l.j     	.L11267	# delay slot filled
	l.sw    	32(r1),r3	 # SI store
.L11218:
	l.lwz   	r4,32(r1)	 # SI load
	l.lhz   	r18,28(r4)	 # zero_extendqisi2
	l.andi  	r18,r18,1
	l.sfnei	r18,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11187:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r18,48(r4)	 # SI load
	l.lwz   	r20,16(r24)	 # SI load
	l.add   	r18,r18,r14
	l.slli  	r21,r20,4
	l.lwz   	r2,0(r18)	 # SI load
	l.slli  	r14,r20,8
	l.lwz   	r20,60(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.lhz   	r19,6(r20)	 # zero_extendqisi2
	l.lwz   	r15,76(r4)	 # SI load
	l.sub   	r14,r14,r21
	l.sw    	84(r2),r5	 # SI store
	l.sw    	88(r2),r5	 # SI store
	l.add   	r14,r15,r14
	l.sfeq 	r19,r5
	l.bf	.L11568	# delay slot filled
	l.lwz   	r22,0(r2)	 # SI load
	l.lhz   	r18,28(r14)	 # zero_extendqisi2
	l.andi  	r18,r18,1
	l.sfne 	r18,r5
	l.bf	.L11569	# delay slot filled
	l.addi  	r17,r14,268
	l.j     	.L11571	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L11572:
	l.lhz   	r4,0(r17)	 # zero_extendqisi2
	l.andi  	r4,r4,1
	l.sfeqi	r4,0
	l.bnf	.L11569	# delay slot filled
	l.addi  	r17,r17,240
.L11571:
	l.addi  	r3,r3,1
	l.andi  	r3,r3,0xffff	 # zero_extendqisi2
	l.sfgtu 	r19,r3
	l.bf	.L11572
	l.nop			# nop delay slot
.L11568:
	l.sfeqi	r22,0
	l.bf	.L11267	# delay slot filled
	l.addi  	r18,r19,1
	l.addi  	r6,r0,32	 # movhi: move immediate
	l.lwz   	r3,52(r1)	 # SI load
	l.sw    	2772(r1),r20	 # SI store
	l.sh    	2776(r1),r18	 # movhi
	l.sh    	2778(r1),r6	 # movhi
	l.jal   	sqlite3VdbeMemIntegerify	# delay slot filled
	l.sw    	2788(r1),r14	 # SI store
	l.lwz   	r11,52(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r1,2772
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r8,r2,84
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r20,0(r11)	 # SI load
	l.jal   	sqlite3BtreeMovetoUnpacked	# delay slot filled
	l.lwz   	r22,4(r11)	 # SI load
	l.lhz   	r18,2778(r1)	 # zero_extendqisi2
	l.andi  	r18,r18,32
	l.sfnei	r18,0
	l.bf	.L11807	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r6,2780(r1)	 # SI load
	l.sfne 	r6,r20
	l.bnf	.L12244	# delay slot filled
	l.lwz   	r14,2784(r1)	 # SI load
.L11574:
	l.lwz   	r2,52(r1)	 # SI load
	l.sw    	0(r2),r6	 # SI store
	l.j     	.L11331	# delay slot filled
	l.sw    	4(r2),r14	 # SI store
.L11188:
	l.lwz   	r19,4(r24)	 # SI load
	l.lwz   	r11,16(r1)	 # SI load
	l.slli  	r19,r19,2
	l.lwz   	r14,48(r11)	 # SI load
	l.add   	r19,r14,r19
	l.lwz   	r22,0(r19)	 # SI load
	l.lwz   	r14,0(r22)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11565	# delay slot filled
	l.lwz   	r2,52(r1)	 # SI load
	l.lwz   	r3,60(r22)	 # SI load
	l.lwz   	r4,24(r2)	 # SI load
	l.lwz   	r5,20(r2)	 # SI load
	l.addi  	r6,r1,124
	l.jal   	sqlite3VdbeRecordUnpack	# delay slot filled
	l.addi  	r7,r0,751	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L12132	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r18,0(r24)	 # zero_extendqisi2
	l.sfnei	r18,128
	l.bnf	.L12245
	l.nop			# nop delay slot
.L11566:
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r8,r1,2844
	l.lwz   	r3,0(r22)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3BtreeMovetoUnpacked	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeDeleteUnpackedRecord	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfnei	r30,0
	l.bf	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r20,2844(r1)	 # SI load
	l.sb    	28(r22),r30	    # movqi
	l.sub   	r14,r0,r20
	l.sw    	88(r22),r30	 # SI store
	l.or    	r14,r14,r20
	l.lbz   	r18,0(r24)	 # zero_extendqisi2
	l.xori  	r14,r14,0xffff
	l.srli  	r14,r14,31
.L11565:
	l.sfnei	r18,128
	l.bnf	.L12246	# delay slot filled
	l.sfnei	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11189:
	l.lwz   	r2,24(r1)	 # SI load
	l.addi  	r3,r0,4	 # movhi: move immediate
	l.sh    	28(r2),r3	 # movhi
	l.lwz   	r14,16(r24)	 # SI load
		l.lwz   	r4, 0(r14)
		l.lwz   	r5, 4(r14)
		l.sw    	0(r2), r4
		l.sw    	4(r2), r5
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11190:
	l.addi  	r4,r0,99	 # move immediate I
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	applyAffinity	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
	l.lwz   	r4,32(r1)	 # SI load
	l.lhz   	r14,28(r4)	 # zero_extendqisi2
	l.andi  	r18,r14,4
	l.sfnei	r18,0
	l.bf	.L11344	# delay slot filled
	l.lwz   	r6,32(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L11837	# delay slot filled
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11199:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r8,24(r1)	 # SI load
	l.srai  	r14,r18,31
	l.addi  	r11,r0,4	 # movhi: move immediate
	l.sw    	4(r8),r18	 # SI store
	l.sh    	28(r8),r11	 # movhi
	l.j     	.L11267	# delay slot filled
	l.sw    	0(r8),r14	 # SI store
.L11200:
	l.lwz   	r19,216(r28)	 # SI load
	l.sfnei	r19,0
	l.bf	.L11143	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r19,4(r24)	 # SI load
	l.slli  	r19,r19,2
	l.lwz   	r14,48(r6)	 # SI load
	l.add   	r19,r14,r19
	l.lwz   	r20,0(r19)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L11267	# delay slot filled
	l.addi  	r19,r0,1	 # move immediate I
	l.lwz   	r14,0(r20)	 # SI load
	l.sfnei	r18,106
	l.bnf	.L12247	# delay slot filled
	l.sw    	2844(r1),r19	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3BtreePrevious	# delay slot filled
	l.addi  	r4,r1,2844
	l.ori   	r30,r11,0	 # move reg to reg
.L11650:
	l.lwz   	r18,2844(r1)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.sb    	20(r20),r18	    # movqi
	l.sfne 	r18,r7
	l.bf	.L11651	# delay slot filled
	l.sw    	88(r20),r7	 # SI store
	l.lwz   	r2,8(r24)	 # SI load
	l.lbz   	r14,3(r24)	 # zero_extendqisi2
	l.addi  	r2,r2,-1
	l.sfeq 	r14,r7
	l.bf	.L11651	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
	l.addi  	r14,r14,48
	l.lwz   	r8,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.add   	r21,r8,r14
	l.lwz   	r14,0(r21)	 # SI load
	l.addi  	r14,r14,1
	l.sw    	0(r21),r14	 # SI store
.L11651:
	l.addi  	r11,r0,0	 # movqi: move immediate
	l.j     	.L11331	# delay slot filled
	l.sb    	17(r20),r11	    # movqi
.L11185:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r20,r14,2
	l.lwz   	r18,48(r3)	 # SI load
	l.addi  	r4,r3,128
	l.add   	r18,r18,r20
	l.jal   	sqlite3VdbeFreeCursor.clone.166	# delay slot filled
	l.lwz   	r5,0(r18)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r14,48(r4)	 # SI load
	l.add   	r14,r14,r20
	l.j     	.L11267	# delay slot filled
	l.sw    	0(r14),r5	 # SI store
.L11186:
	l.lwz   	r14,4(r24)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.add   	r19,r14,r14
	l.lwz   	r6,8(r28)	 # SI load
	l.add   	r14,r19,r14
	l.sw    	2844(r1),r3	 # SI store
	l.slli  	r14,r14,3
	l.addi  	r20,r0,2	 # move immediate I
	l.sfnei	r18,53
	l.bnf	.L12248	# delay slot filled
	l.add   	r14,r6,r14
.L11692:
	l.lwz   	r2,4(r14)	 # SI load
	l.addi  	r4,r1,2844
	l.lwz   	r14,4(r2)	 # SI load
	l.lwz   	r18,0(r2)	 # SI load
	l.ori   	r5,r20,0	 # move reg to reg
	l.sw    	4(r14),r18	 # SI store
	l.jal   	btreeCreateTable	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,24(r1)	 # SI load
	l.addi  	r5,r0,-16640	 # move immediate I
	l.lhz   	r18,28(r4)	 # zero_extendqisi2
	l.lwz   	r14,2844(r1)	 # SI load
	l.and   	r18,r18,r5
	l.srai  	r19,r14,31
	l.ori   	r18,r18,4
	l.ori   	r30,r11,0	 # move reg to reg
	l.sw    	4(r4),r14	 # SI store
	l.sw    	0(r4),r19	 # SI store
	l.j     	.L11331	# delay slot filled
	l.sh    	28(r4),r18	 # movhi
.L11197:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r18,r18,2
	l.lwz   	r14,48(r3)	 # SI load
	l.add   	r18,r14,r18
	l.lwz   	r20,0(r18)	 # SI load
	l.lwz   	r14,0(r20)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11575	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	2844(r1),r4	 # SI store
	l.ori   	r7,r4,0	 # move reg to reg
	l.lwz   	r11,52(r1)	 # SI load
		l.lwz   	r5, 0(r11)
		l.lwz   	r6, 4(r11)
	l.jal   	sqlite3BtreeMovetoUnpacked	# delay slot filled
	l.addi  	r8,r1,2844
	l.lwz   	r14,2844(r1)	 # SI load
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sub   	r18,r0,r14
	l.addi  	r5,r0,0	 # move immediate I
	l.or    	r18,r18,r14
	l.lwz   	r3,52(r1)	 # SI load
	l.xori  	r18,r18,0xffff
		l.lwz   	r2, 0(r3)
		l.lwz   	r3, 4(r3)
	l.srli  	r18,r18,31
	l.sb    	20(r20),r4	    # movqi
	l.sw    	88(r20),r5	 # SI store
	l.sb    	28(r20),r4	    # movqi
	l.sb    	17(r20),r18	    # movqi
		l.sw    	8(r20), r2
		l.sw    	8+4(r20), r3
	l.sfeq 	r14,r5
	l.bf	.L11576	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.sw    	12(r1),r2	 # SI store
.L11576:
	l.j     	.L11331	# delay slot filled
	l.sw    	84(r20),r14	 # SI store
.L11198:
	l.lwz   	r13,4(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r14,r13,4
	l.slli  	r13,r13,8
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r2,76(r3)	 # SI load
	l.sub   	r13,r13,r14
	l.srai  	r18,r4,31
	l.add   	r2,r2,r13
	l.addi  	r5,r0,4	 # movhi: move immediate
	l.sw    	4(r2),r4	 # SI store
	l.sw    	0(r2),r18	 # SI store
	l.sw    	32(r1),r2	 # SI store
	l.sh    	28(r2),r5	 # movhi
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11192:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r14,r14,2
	l.lwz   	r18,48(r3)	 # SI load
	l.add   	r14,r18,r14
	l.lwz   	r14,0(r14)	 # SI load
	l.lbz   	r30,20(r14)	 # zero_extendqisi2
	l.sfnei	r30,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lbz   	r6,28(r14)	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bf	.L11640
	l.nop			# nop delay slot
		l.lwz   	r20, 32(r14)
		l.lwz   	r21, 32+4(r14)
		l.sw    	2808(r1), r20
		l.sw    	2808+4(r1), r21
.L11641:
	l.lwz   	r7,24(r1)	 # SI load
.L12332:
	l.addi  	r8,r0,-16640	 # move immediate I
	l.lhz   	r18,28(r7)	 # zero_extendqisi2
	l.and   	r18,r18,r8
		l.sw    	0(r7), r20
		l.sw    	4(r7), r21
	l.ori   	r18,r18,4
	l.j     	.L11331	# delay slot filled
	l.sh    	28(r7),r18	 # movhi
.L11179:
	l.lwz   	r14,12(r24)	 # SI load
	l.lwz   	r18,4(r24)	 # SI load
	l.sflesi	r14,0
	l.bf	.L11267	# delay slot filled
	l.lwz   	r21,8(r24)	 # SI load
	l.addi  	r6,r18,-1
	l.slli  	r15,r21,8
	l.slli  	r20,r6,4
	l.slli  	r18,r21,4
	l.slli  	r6,r6,8
	l.addi  	r14,r14,-1
	l.sub   	r18,r15,r18
	l.sub   	r20,r6,r20
	l.j     	.L11278	# delay slot filled
	l.lwz   	r22,16(r1)	 # SI load
.L11276:
	l.lwz   	r2,76(r22)	 # SI load
	l.addi  	r20,r20,240
	l.add   	r2,r2,r18
	l.addi  	r18,r18,240
	l.jal   	sqlite3VdbeMemReleaseExternal	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,1	 # movhi: move immediate
	l.ori   	r3,r2,0	 # move reg to reg
	l.sh    	28(r2),r4	 # movhi
	l.addi  	r5,r0,2048	 # move immediate I
	l.jal   	sqlite3VdbeMemShallowCopy	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L12079	# delay slot filled
	l.addi  	r14,r14,-1
.L11278:
	l.lwz   	r4,56(r22)	 # SI load
	l.add   	r16,r4,r20
	l.lhz   	r3,28(r16)	 # zero_extendqisi2
	l.andi  	r2,r3,18
	l.sfeqi	r2,0
	l.bf	.L11276	# delay slot filled
	l.andi  	r3,r3,16384
	l.sfeqi	r3,0
	l.bf	.L11277	# delay slot filled
	l.lwz   	r4,24(r16)	 # SI load
	l.lwz   	r2,0(r16)	 # SI load
	l.add   	r4,r4,r2
.L11277:
	l.lwz   	r2,16(r16)	 # SI load
	l.lwz   	r2,80(r2)	 # SI load
	l.sflts 	r2,r4
	l.bnf	.L11276	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
	l.j     	.L12406	# delay slot filled
	l.movhi  	r5,hi(.LC123)
.L11201:
	l.lwz   	r6,216(r28)	 # SI load
	l.sfnei	r6,0
	l.bf	.L11143	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r6,12(r24)	 # SI load
	l.slli  	r15,r14,4
	l.slli  	r14,r14,8
	l.sub   	r14,r14,r15
	l.lwz   	r18,76(r4)	 # SI load
	l.slli  	r15,r6,4
	l.slli  	r6,r6,8
	l.add   	r20,r18,r14
	l.sub   	r6,r6,r15
	l.lhz   	r14,28(r20)	 # zero_extendqisi2
	l.add   	r6,r18,r6
	l.andi  	r14,r14,32
	l.sfeqi	r14,0
	l.bf	.L11741	# delay slot filled
	l.sw    	24(r1),r6	 # SI store
	l.lwz   	r22,0(r20)	 # SI load
	l.jal   	rowSetToList	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r18,8(r22)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L11741
	l.nop			# nop delay slot
	l.lwz   	r14,8(r18)	 # SI load
		l.lwz   	r5, 0(r18)
		l.lwz   	r6, 4(r18)
	l.sw    	8(r22),r14	 # SI store
		l.sw    	44(r1), r5
		l.sw    	44+4(r1), r6
	l.sfnei	r14,0
	l.bnf	.L12249
	l.nop			# nop delay slot
.L11742:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.addi  	r5,r0,4	 # movhi: move immediate
	l.addi  	r6,r0,1	 # movqi: move immediate
		l.lwz   	r2, 44(r1)
		l.lwz   	r3, 44+4(r1)
	l.sh    	28(r4),r5	 # movhi
		l.sw    	0(r4), r2
		l.sw    	4(r4), r3
	l.j     	.L11267	# delay slot filled
	l.sb    	30(r4),r6	    # movqi
.L11202:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r2,16(r1)	 # SI load
	l.slli  	r19,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r26,76(r2)	 # SI load
	l.sub   	r14,r14,r19
	l.add   	r20,r26,r14
	l.lhz   	r14,28(r20)	 # zero_extendqisi2
	l.andi  	r14,r14,32
	l.sfnei	r14,0
	l.bf	.L11740	# delay slot filled
	l.lwz   	r22,8(r24)	 # SI load
	l.jal   	sqlite3VdbeMemSetRowSet	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lhz   	r19,28(r20)	 # zero_extendqisi2
	l.andi  	r19,r19,32
	l.sfeqi	r19,0
	l.bnf	.L12374	# delay slot filled
	l.slli  	r19,r22,4
.L12132:
	l.lwz   	r3,16(r1)	 # SI load
.L12306:
.L12316:
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r3,116
.L11740:
	l.slli  	r19,r22,4
.L12374:
	l.slli  	r18,r22,8
	l.sub   	r2,r18,r19
	l.add   	r2,r26,r2
		l.lwz   	r4, 0(r2)
		l.lwz   	r5, 4(r2)
	l.jal   	sqlite3RowSetInsert	# delay slot filled
	l.lwz   	r3,0(r20)	 # SI load
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11808:
	l.lwz   	r14,4(r18)	 # SI load
	l.lwz   	r21,0(r18)	 # SI load
	l.addi  	r14,r14,1
	l.lwz   	r4,20(r20)	 # SI load
	l.sw    	4(r18),r14	 # SI store
	l.lwz   	r14,76(r21)	 # SI load
	l.jalr  	r14	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r7,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,116(r7)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r8,16(r1)	 # SI load
	l.lwz   	r14,8(r18)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.sw    	116(r8),r14	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	8(r18),r11	 # SI store
	l.jal   	sqlite3VtabUnlock	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.j     	.L12302	# delay slot filled
	l.sfeqi	r30,0
.L11741:
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11436:
	l.sfnei	r3,0
	l.bnf	.L11437
	l.nop			# nop delay slot
	l.j     	.L11437	# delay slot filled
	l.ori   	r16,r14,0	 # move reg to reg
.L11430:
	l.ori   	r8,r8,lo(aSize.12542)
	l.add   	r7,r11,r8
	l.j     	.L11431	# delay slot filled
	l.lbz   	r3,0(r7)	 # zero_extendqisi2
.L11466:
	l.lhz   	r5,16(r7)	 # zero_extendqisi2
	l.lwz   	r7,48(r1)	 # SI load
	l.add   	r3,r7,r5
	l.sfltu 	r3,r7
	l.bf	.L11469	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
.L11469:
	l.lwz   	r11,44(r1)	 # SI load
	l.ori   	r5,r3,0	 # move reg to reg
	l.add   	r6,r6,r11
	l.ori   	r4,r6,0	 # move reg to reg
		l.sw    	44(r1), r4
		l.sw    	44+4(r1), r5
	l.j     	.L12312	# delay slot filled
	l.sfeqi	r2,0
.L12250:
	l.lhs   	r2,88(r20)	 # extendhisi2_no_sext_mem
	l.sfeqi	r2,0
.L12312:
	l.bf	.L11465	# delay slot filled
	l.addi  	r2,r2,23
	l.slli  	r2,r2,2
	l.add   	r2,r20,r2
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.lhz   	r2,88(r20)	 # zero_extendqisi2
	l.addi  	r2,r2,-1
	l.addi  	r4,r0,0	 # movhi: move immediate
	l.slli  	r2,r2,16
	l.sh    	58(r20),r4	 # movhi
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.srai  	r2,r2,16
	l.sb    	62(r20),r3	    # movqi
	l.addi  	r4,r2,23
	l.addi  	r3,r2,86
	l.slli  	r4,r4,2
	l.add   	r3,r3,r3
	l.sh    	88(r20),r2	 # movhi
	l.add   	r2,r20,r4
	l.add   	r6,r20,r3
	l.lwz   	r7,0(r2)	 # SI load
	l.lhz   	r5,0(r6)	 # zero_extendqisi2
	l.lhz   	r2,16(r7)	 # zero_extendqisi2
	l.sfleu 	r2,r5
	l.bf	.L12250	# delay slot filled
	l.addi  	r5,r5,1
	l.lhs   	r2,88(r20)	 # extendhisi2_no_sext_mem
	l.sh    	0(r6),r5	 # movhi
.L12122:
	l.j     	.L11468	# delay slot filled
	l.lhz   	r8,16(r7)	 # zero_extendqisi2
.L12135:
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r3,116
.L12197:
	l.lbz   	r2,5(r7)	 # zero_extendqisi2
	l.lwz   	r3,64(r7)	 # SI load
	l.j     	.L12123	# delay slot filled
	l.addi  	r2,r2,8
.L11627:
	l.jal   	sqlite3BtreeDelete	# delay slot filled
	l.ori   	r3,r19,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfne 	r11,r3
	l.bf	.L11630	# delay slot filled
	l.sw    	88(r20),r3	 # SI store
	l.lwz   	r18,188(r28)	 # SI load
	l.sfeq 	r18,r3
	l.bf	.L11630
	l.nop			# nop delay slot
	l.lwz   	r6,16(r24)	 # SI load
	l.sfeq 	r6,r3
	l.bf	.L11630	# delay slot filled
	l.addi  	r4,r0,9	 # move immediate I
	l.lwz   	r20,4(r20)	 # SI load
	l.lwz   	r14,8(r28)	 # SI load
	l.add   	r21,r20,r20
	l.lwz   	r3,184(r28)	 # SI load
	l.add   	r20,r21,r20
	l.slli  	r20,r20,3
		l.lwz   	r7, 44(r1)
		l.lwz   	r8, 44+4(r1)
	l.add   	r14,r14,r20
	l.jalr  	r18	# delay slot filled
	l.lwz   	r5,0(r14)	 # SI load
.L11630:
	l.lwz   	r18,8(r24)	 # SI load
	l.andi  	r18,r18,1
	l.sfeqi	r18,0
	l.bf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.lwz   	r4,16(r1)	 # SI load
	l.lwz   	r18,132(r4)	 # SI load
	l.addi  	r18,r18,1
	l.j     	.L12302	# delay slot filled
	l.sw    	132(r4),r18	 # SI store
.L11451:
	l.lwz   	r4,24(r1)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r5,44(r1)	 # SI load
	l.addi  	r6,r0,1040	 # movhi: move immediate
	l.lwz   	r8,60(r1)	 # SI load
	l.sw    	24(r4),r5	 # SI store
	l.sh    	28(r4),r6	 # movhi
	l.sfeq 	r8,r7
	l.bf	.L11463	# delay slot filled
	l.sw    	32(r4),r7	 # SI store
	l.addi  	r11,r0,17424	 # movhi: move immediate
	l.sw    	0(r4),r8	 # SI store
	l.sh    	28(r4),r11	 # movhi
.L11463:
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.lwz   	r2,24(r1)	 # SI load
	l.j     	.L11267	# delay slot filled
	l.sb    	31(r2),r3	    # movqi
.L12201:
	l.bf	.L11671	# delay slot filled
	l.addi  	r8,r0,2	 # move immediate I
	l.lwz   	r6,16(r1)	 # SI load
	l.addi  	r30,r0,6	 # move immediate I
	l.j     	.L11814	# delay slot filled
	l.sw    	104(r6),r8	 # SI store
.L12210:
	l.lwz   	r26,84(r1)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3VdbeSerialType	# delay slot filled
	l.addi  	r24,r20,24
	l.addi  	r2,r11,-1
	l.lwz   	r18,76(r1)	 # SI load
	l.sfgtui	r2,6
	l.bf	.L11456	# delay slot filled
	l.add   	r16,r30,r22
.L12252:
	l.sfnei	r11,7
	l.bnf	.L12251
	l.nop			# nop delay slot
	l.lwz   	r12,0(r20)	 # SI load
	l.lwz   	r8,4(r20)	 # SI load
.L11458:
	l.movhi  	r2,hi(aSize.12542)
	l.ori   	r2,r2,lo(aSize.12542)
	l.add   	r11,r11,r2
	l.lbz   	r14,0(r11)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L11459
	l.nop			# nop delay slot
	l.addi  	r11,r14,-1
	l.add   	r7,r16,r11
.L11460:
	l.slli  	r3,r12,24
	l.srli  	r2,r8,8
	l.sb    	0(r7),r8	    # movqi
	l.addi  	r11,r11,-1
	l.srli  	r12,r12,8
	l.or    	r8,r3,r2
	l.sfnei	r11,-1
	l.bf	.L11460	# delay slot filled
	l.addi  	r7,r7,-1
.L11459:
	l.addi  	r20,r20,240
.L12313:
	l.sfltu 	r18,r20
	l.bf	.L11451	# delay slot filled
	l.addi  	r24,r24,240
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3VdbeSerialType	# delay slot filled
	l.add   	r22,r22,r14
	l.addi  	r2,r11,-1
	l.sfgtui	r2,6
	l.bnf	.L12252	# delay slot filled
	l.add   	r16,r30,r22
.L11456:
	l.sfleui	r11,11
	l.bf	.L11459	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r14,0(r24)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,20(r20)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.lhz   	r2,28(r20)	 # zero_extendqisi2
	l.andi  	r2,r2,16384
	l.sfeqi	r2,0
	l.bf	.L11459	# delay slot filled
	l.lwz   	r3,44(r1)	 # SI load
	l.lwz   	r2,0(r20)	 # SI load
	l.add   	r2,r14,r2
	l.sub   	r14,r3,r22
	l.sfles 	r14,r2
	l.bnf	.L12253
	l.nop			# nop delay slot
.L11461:
	l.lwz   	r5,0(r24)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r3,r16,r5
	l.jal   	memset	# delay slot filled
	l.sub   	r5,r14,r5
	l.j     	.L12313	# delay slot filled
	l.addi  	r20,r20,240
.L12251:
	l.lwz   	r12,8(r20)	 # SI load
	l.j     	.L11458	# delay slot filled
	l.lwz   	r8,12(r20)	 # SI load
.L11646:
	l.lwz   	r11,88(r1)	 # SI load
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sub   	r2,r0,r11
	l.addi  	r4,r0,0	 # move immediate I
	l.or    	r2,r2,r11
	l.sb    	28(r20),r3	    # movqi
	l.xori  	r2,r2,0xffff
	l.sw    	88(r20),r4	 # SI store
	l.srli  	r2,r2,31
	l.sb    	17(r20),r3	    # movqi
	l.sb    	20(r20),r11	    # movqi
	l.sfeq 	r11,r4
	l.bf	.L11814	# delay slot filled
	l.sb    	18(r20),r2	    # movqi
	l.j     	.L12300	# delay slot filled
	l.lwz   	r2,8(r24)	 # SI load
.L12196:
	l.j     	.L11822	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
.L12139:
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r3,24(r1)	 # SI load
	l.jal   	sqlite3VdbeMemSetStr	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L12320	# delay slot filled
	l.lwz   	r8,16(r1)	 # SI load
	l.jal   	sqlite3VdbeMemMakeWriteable	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L12133	# delay slot filled
	l.lwz   	r2,24(r1)	 # SI load
	l.addi  	r3,r0,-1025	 # move immediate I
	l.lhz   	r14,28(r2)	 # zero_extendqisi2
	l.ori   	r14,r14,2048
	l.sw    	36(r2),r11	 # SI store
	l.and   	r14,r14,r3
	l.sh    	28(r2),r14	 # movhi
	l.lbs   	r14,1(r24)	 # extendqisi2_no_sext_mem
	l.sfnei	r14,-1
	l.bnf	.L12254	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # movqi: move immediate
.L12330:
	l.sb    	1(r24),r4	    # movqi
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r14,20(r5)	 # SI load
	l.sw    	16(r24),r14	 # SI store
	l.lwz   	r14,24(r5)	 # SI load
	l.lwz   	r20,80(r28)	 # SI load
	l.sfgts 	r14,r20
	l.bnf	.L11267	# delay slot filled
	l.sw    	4(r24),r14	 # SI store
	l.j     	.L12311	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
.L12208:
	l.j     	.L11447	# delay slot filled
	l.addi  	r21,r0,0	 # move immediate I
.L12207:
	l.j     	.L11446	# delay slot filled
	l.addi  	r21,r0,0	 # move immediate I
.L11613:
	l.lbz   	r14,3(r24)	 # zero_extendqisi2
	l.andi  	r14,r14,16
	l.sfeqi	r14,0
	l.bf	.L11620
	l.nop			# nop delay slot
	l.lwz   	r14,84(r26)	 # SI load
.L11620:
	l.andi  	r6,r6,16384
	l.sfeqi	r6,0
	l.bf	.L11621
	l.nop			# nop delay slot
	l.lwz   	r6,0(r30)	 # SI load
.L11621:
	l.lwz   	r22,0(r26)	 # SI load
	l.lwz   	r18,4(r22)	 # SI load
	l.lwz   	r17,8(r18)	 # SI load
	l.sfeqi	r17,0
	l.bf	.L11622
	l.nop			# nop delay slot
	l.j     	.L11624	# delay slot filled
	l.lwz   	r18,20(r22)	 # SI load
.L11623:
	l.lwz   	r17,8(r17)	 # SI load
.L12314:
	l.sfnei	r17,0
	l.bnf	.L11622
	l.nop			# nop delay slot
.L11624:
	l.lwz   	r2,20(r17)	 # SI load
	l.sfne 	r2,r18
	l.bf	.L11623	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r3,r0,0	 # move immediate I
		l.sw    	24(r17), r2
		l.sw    	24+4(r17), r3
	l.j     	.L12314	# delay slot filled
	l.lwz   	r17,8(r17)	 # SI load
.L12202:
	l.lbz   	r20,3(r24)	 # zero_extendqisi2
	l.andi  	r14,r20,16
	l.sfeqi	r14,0
	l.bf	.L11352	# delay slot filled
	l.andi  	r14,r20,8
	l.lwz   	r6,8(r24)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r14,r6,4
	l.slli  	r6,r6,8
	l.lwz   	r2,76(r3)	 # SI load
	l.addi  	r4,r0,-16640	 # move immediate I
	l.sub   	r6,r6,r14
	l.add   	r2,r2,r6
	l.lhz   	r14,28(r2)	 # zero_extendqisi2
	l.and   	r14,r14,r4
	l.sw    	24(r1),r2	 # SI store
	l.ori   	r14,r14,1
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r2),r14	 # movhi
.L11377:
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.lwz   	r3,24(r1)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.ori   	r14,r12,0	 # move reg to reg
	l.lwz   	r8,24(r1)	 # SI load
	l.xori  	r18,r18,0xffff
	l.xori  	r14,r14,0xffff
	l.addi  	r11,r0,4	 # movhi: move immediate
	l.sw    	0(r8),r18	 # SI store
	l.sw    	4(r8),r14	 # SI store
	l.sh    	28(r8),r11	 # movhi
	l.j     	.L11267	# delay slot filled
	l.sb    	30(r8),r2	    # movqi
.L12212:
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L12177:
	l.lwz   	r14,-4(r24)	 # SI load
	l.j     	.L11322	# delay slot filled
	l.sw    	1652(r1),r14	 # SI store
.L12185:
	l.j     	.L11343	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
.L12180:
	l.lwz   	r18,8(r28)	 # SI load
	l.j     	.L11693	# delay slot filled
	l.add   	r21,r20,r20
.L11376:
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r14,r12,0	 # move reg to reg
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.or    	r20,r20,r14
	l.sub   	r14,r0,r20
	l.lwz   	r3,24(r1)	 # SI load
	l.or    	r14,r14,r20
	l.addi  	r4,r0,4	 # movhi: move immediate
	l.xori  	r14,r14,0xffff
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.srli  	r14,r14,31
	l.sw    	0(r3),r2	 # SI store
	l.sh    	28(r3),r4	 # movhi
	l.sb    	30(r3),r5	    # movqi
	l.j     	.L11267	# delay slot filled
	l.sw    	4(r3),r14	 # SI store
.L11500:
	l.lwz   	r11,36(r1)	 # SI load
	l.lbz   	r2,28(r11)	 # zero_extendqisi2
	l.sfeq 	r2,r5
.L12349:
	l.bnf	.L11503	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
	l.movhi  	r5,hi(.LC277)
	l.addi  	r7,r4,116
	l.sfeqi	r2,0
	l.bf	.L11507	# delay slot filled
	l.ori   	r5,r5,lo(.LC277)
	l.movhi  	r5,hi(.LC276)
	l.sfeqi	r6,0
	l.bf	.L11507	# delay slot filled
	l.ori   	r5,r5,lo(.LC276)
	l.movhi  	r5,hi(.LC278)
	l.ori   	r5,r5,lo(.LC278)
.L11507:
	l.ori   	r3,r7,0	 # move reg to reg
	l.lwz   	r4,36(r1)	 # SI load
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
	l.j     	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
.L11784:
	l.lwz   	r8,16(r1)	 # SI load
	l.j     	.L11267	# delay slot filled
	l.sb    	126(r8),r11	    # movqi
.L12230:
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L12227:
	l.lwz   	r14,144(r28)	 # SI load
	l.sflesi	r14,1
	l.bnf	.L11474	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.j     	.L12407	# delay slot filled
	l.lbz   	r2,30(r28)	 # zero_extendqisi2
.L12225:
	l.lwz   	r14,-4(r24)	 # SI load
	l.j     	.L11766	# delay slot filled
	l.sw    	1392(r1),r14	 # SI store
.L11344:
	l.addi  	r5,r0,-16640	 # move immediate I
	l.and   	r14,r14,r5
	l.ori   	r14,r14,4
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r6),r14	 # movhi
.L12156:
	l.lwz   	r14,148(r28)	 # SI load
	l.sfgtsi	r14,0
	l.bf	.L11477	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.lbs   	r20,0(r30)	 # extendqisi2_no_sext_mem
	l.sfnei	r20,0
	l.bnf	.L11479	# delay slot filled
	l.ori   	r14,r30,0	 # move reg to reg
	l.addi  	r14,r14,1
.L12375:
	l.lbs   	r2,0(r14)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L12375	# delay slot filled
	l.addi  	r14,r14,1
	l.addi  	r14,r14,-1
.L11479:
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.sub   	r14,r14,r30
	l.ori   	r7,r7,65535
	l.ori   	r3,r28,0	 # move reg to reg
	l.and   	r14,r14,r7
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r14,9
	l.sfeqi	r11,0
	l.bf	.L11267	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r2,r11,8
	l.addi  	r5,r14,1
	l.ori   	r4,r30,0	 # move reg to reg
	l.sw    	0(r11),r2	 # SI store
	l.jal   	memcpy	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r14,28(r28)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L11481	# delay slot filled
	l.addi  	r8,r0,0	 # movqi: move immediate
	l.addi  	r11,r0,1	 # movqi: move immediate
	l.sb    	28(r28),r8	    # movqi
	l.sb    	480(r28),r11	    # movqi
.L11482:
	l.lwz   	r14,468(r28)	 # SI load
	l.sw    	4(r18),r14	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sw    	468(r28),r18	 # SI store
.L12155:
	l.j     	.L11577	# delay slot filled
	l.addi  	r23,r0,0	 # move immediate I
.L12153:
	l.lwz   	r2,52(r1)	 # SI load
	l.lwz   	r14,12(r28)	 # SI load
	l.lwz   	r20,20(r18)	 # SI load
	l.lwz   	r21,4(r2)	 # SI load
	l.ori   	r14,r14,16
	l.sw    	0(r20),r21	 # SI store
	l.j     	.L11512	# delay slot filled
	l.sw    	12(r28),r14	 # SI store
.L11753:
.L12358:
	l.bnf	.L12255	# delay slot filled
	l.sfne 	r2,r22
.L11953:
	l.lwz   	r18,12(r18)	 # SI load
.L11755:
	l.sfnei	r18,0
	l.bf	.L12001	# delay slot filled
	l.sfltsi	r30,0
.L12357:
	l.bf	.L11267
	l.nop			# nop delay slot
.L11744:
	l.lwz   	r6,32(r1)	 # SI load
	l.lwz   	r7,52(r1)	 # SI load
		l.lwz   	r4, 0(r7)
		l.lwz   	r5, 4(r7)
	l.jal   	sqlite3RowSetInsert	# delay slot filled
	l.lwz   	r3,0(r6)	 # SI load
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L12253:
	l.j     	.L11461	# delay slot filled
	l.ori   	r14,r2,0	 # move reg to reg
.L12140:
	l.lwz   	r6,16(r1)	 # SI load
	l.j     	.L11270	# delay slot filled
	l.sw    	100(r6),r11	 # SI store
.L12228:
	l.lwz   	r14,476(r28)	 # SI load
	l.lwz   	r2,472(r28)	 # SI load
	l.addi  	r14,r14,1
	l.add   	r2,r14,r2
	l.sw    	476(r28),r14	 # SI store
	l.j     	.L11475	# delay slot filled
	l.sw    	212(r5),r2	 # SI store
.L12182:
	l.j     	.L11665	# delay slot filled
	l.sh    	2778(r1),r4	 # movhi
.L11580:
		l.lwz   	r4, 56(r28)
		l.lwz   	r5, 56+4(r28)
		l.sw    	2808(r1), r4
		l.sw    	2808+4(r1), r5
	l.j     	.L11608	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
.L12258:
	l.lwz   	r5,2808(r1)	 # SI load
	l.lwz   	r3,2812(r1)	 # SI load
	l.ori   	r6,r6,65535
	l.sfne 	r5,r20
	l.bnf	.L12256	# delay slot filled
	l.and   	r2,r3,r6
.L11599:
	l.addi  	r3,r0,8	 # move immediate I
	l.jal   	sqlite3_randomness	# delay slot filled
	l.addi  	r4,r1,2808
.L11602:
	l.movhi 	r7,hi(16711680)	 # move immediate M
	l.lwz   	r2,2812(r1)	 # SI load
	l.ori   	r7,r7,65535
	l.addi  	r5,r0,0	 # move immediate I
	l.and   	r6,r2,r7
	l.sw    	2808(r1),r5	 # SI store
	l.sw    	2812(r1),r6	 # SI store
.L11603:
	l.or    	r11,r5,r6
	l.sfeqi	r11,0
	l.bnf	.L11601	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L11604:
	l.sflesi	r20,99
	l.bf	.L11607	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.addi  	r2,r0,0	 # movqi: move immediate
.L11607:
	l.andi  	r2,r2,0xff	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L11606	# delay slot filled
	l.sfeqi	r3,0
	l.bf	.L11606	# delay slot filled
	l.lwz   	r2,2844(r1)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L12257
	l.nop			# nop delay slot
.L11608:
	l.sfnei	r20,0
	l.bnf	.L12258	# delay slot filled
	l.movhi 	r6,hi(16711680)	 # move immediate M
	l.addi  	r3,r0,8	 # move immediate I
	l.jal   	sqlite3_randomness	# delay slot filled
	l.addi  	r4,r1,2808
	l.sflesi	r20,4
	l.bf	.L11602	# delay slot filled
	l.lwz   	r5,2808(r1)	 # SI load
	l.j     	.L11603	# delay slot filled
	l.lwz   	r6,2812(r1)	 # SI load
.L12237:
	l.lwz   	r4,16(r1)	 # SI load
	l.movhi  	r5,hi(.LC294)
	l.addi  	r3,r4,116
	l.ori   	r5,r5,lo(.LC294)
	l.lwz   	r4,36(r1)	 # SI load
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
	l.j     	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
.L12169:
	l.movhi  	r4,hi(.LC288)
	l.addi  	r3,r0,0	 # move immediate I
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r4,r4,lo(.LC288)
	l.ori   	r26,r11,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
.L12338:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,44(r1)	 # SI load
	l.lwz   	r21,4(r16)	 # SI load
	l.lwz   	r20,0(r16)	 # SI load
	l.addi  	r6,r21,-1
	l.sfltu 	r6,r21
	l.bf	.L11819	# delay slot filled
	l.addi  	r15,r0,1	 # move immediate I
	l.addi  	r15,r0,0	 # move immediate I
.L11819:
	l.addi  	r20,r20,-1
	l.sw    	4(r16),r6	 # SI store
	l.add   	r20,r15,r20
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.sw    	0(r16),r20	 # SI store
	l.sfeqi	r26,0
.L12354:
	l.bf	.L12133	# delay slot filled
	l.movhi  	r7,hi(sqlite3_free)
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeMemSetStr	# delay slot filled
	l.ori   	r7,r7,lo(sqlite3_free)
	l.lwz   	r3,32(r1)	 # SI load
.L12305:
	l.jal   	sqlite3VdbeChangeEncoding	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11370:
	l.lwz   	r2,12(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11384:
	l.lwz   	r3,44(r1)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.lwz   	r21,88(r3)	 # SI load
	l.lwz   	r14,80(r4)	 # SI load
	l.sfne 	r21,r14
	l.bnf	.L12259	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
	l.lbz   	r14,30(r6)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bnf	.L12260	# delay slot filled
	l.addi  	r4,r1,2808
	l.lbz   	r6,63(r18)	 # zero_extendqisi2
	l.sfleui	r6,1
	l.bf	.L11388	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3BtreeRestoreCursorPosition	# delay slot filled
	l.sw    	76(r1),r14	 # SI store
	l.sfnei	r11,0
	l.bf	.L12376	# delay slot filled
	l.lwz   	r11,44(r1)	 # SI load
	l.lbz   	r6,63(r18)	 # zero_extendqisi2
.L11388:
	l.sfnei	r6,0
	l.bf	.L11389
	l.nop			# nop delay slot
	l.sw    	2832(r1),r6	 # SI store
	l.j     	.L11385	# delay slot filled
	l.sw    	76(r1),r6	 # SI store
.L12160:
	l.lbz   	r14,63(r18)	 # zero_extendqisi2
	l.sfeqi	r14,0
.L12347:
	l.bf	.L11892	# delay slot filled
	l.ori   	r22,r14,0	 # move reg to reg
	l.lhz   	r14,58(r18)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bnf	.L12261	# delay slot filled
	l.addi  	r5,r18,32
.L11637:
	l.lwz   	r2,44(r18)	 # SI load
	l.sw    	112(r1),r2	 # SI store
	l.j     	.L11636	# delay slot filled
	l.ori   	r22,r2,0	 # move reg to reg
.L12231:
	l.jal   	applyNumericAffinity	# delay slot filled
	l.lwz   	r3,52(r1)	 # SI load
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.lwz   	r3,52(r1)	 # SI load
	l.addi  	r8,r0,0	 # movqi: move immediate
	l.ori   	r16,r11,0	 # move reg to reg
	l.sb    	17(r22),r8	    # movqi
	l.lwz   	r11,52(r1)	 # SI load
	l.lhz   	r15,28(r11)	 # zero_extendqisi2
	l.andi  	r14,r15,4
	l.sfnei	r14,0
	l.bf	.L11535	# delay slot filled
	l.ori   	r26,r12,0	 # move reg to reg
	l.andi  	r14,r15,8
	l.sfnei	r14,0
	l.bf	.L11536	# delay slot filled
	l.movhi 	r2,hi(-2147483648)	 # move immediate M
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L12198:
	l.jal   	sqlite3VdbeMemExpandBlob
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L11814	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L12315	# delay slot filled
	l.lbz   	r14,3(r24)	 # zero_extendqisi2
.L12247:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3BtreeNext	# delay slot filled
	l.addi  	r4,r1,2844
	l.j     	.L11650	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L12217:
	l.jal   	sqlite3VdbeMemExpandBlob	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r7,32(r1)	 # SI load
	l.j     	.L11284	# delay slot filled
	l.lhz   	r14,28(r7)	 # zero_extendqisi2
.L11291:
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r3,40(r1)	 # SI load
		l.sw    	44(r1), r11
		l.sw    	44+4(r1), r12
	l.jal   	sqlite3VdbeRealValue
	l.nop			# nop delay slot
	l.lbz   	r14,0(r24)	 # zero_extendqisi2
		l.sw    	60(r1), r11
		l.sw    	60+4(r1), r12
	l.sfeqi	r14,85
	l.bf	.L11308	# delay slot filled
	l.sfgtui	r14,85
	l.bf	.L11311	# delay slot filled
	l.sfeqi	r14,86
	l.sfeqi	r14,84
	l.bf	.L12262
	l.nop			# nop delay slot
.L11306:
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
	l.ori   	r21,r11,0	 # move reg to reg
	l.ori   	r15,r12,0	 # move reg to reg
	l.ori   	r14,r21,0	 # move reg to reg
		l.sw    	44(r1), r14
		l.sw    	44+4(r1), r15
	l.lwz   	r11,44(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.or    	r20,r11,r3
	l.sfeqi	r20,0
	l.bf	.L11290	# delay slot filled
	l.sfnei	r11,-1
	l.bnf	.L12263	# delay slot filled
	l.sfnei	r3,-1
.L11314:
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
		l.lwz   	r5, 44(r1)
		l.lwz   	r6, 44+4(r1)
	l.jal   	__moddi3
	l.nop			# nop delay slot
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	__floatdidf	# delay slot filled
	l.ori   	r4,r12,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
.L12329:
	l.ori   	r15,r12,0	 # move reg to reg
		l.sw    	44(r1), r14
		l.sw    	44+4(r1), r15
		l.lwz   	r7, 44(r1)
		l.lwz   	r8, 44+4(r1)
		l.sw    	2824(r1), r7
		l.sw    	2824+4(r1), r8
		l.lwz   	r14, 2824(r1)
		l.lwz   	r15, 2824+4(r1)
		l.sw    	2816(r1), r14
		l.sw    	2816+4(r1), r15
		l.lwz   	r18, 2824(r1)
		l.lwz   	r19, 2824+4(r1)
		l.lwz   	r14, 2816(r1)
		l.lwz   	r15, 2816+4(r1)
		l.or    	r3, r18, r0
		l.or    	r4, r19, r0
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.jal   	__nedf2
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L11290	# delay slot filled
	l.lwz   	r8,24(r1)	 # SI load
	l.addi  	r11,r0,-16640	 # move immediate I
	l.lhz   	r20,28(r8)	 # zero_extendqisi2
	l.and   	r20,r20,r11
	l.andi  	r2,r2,8
	l.ori   	r14,r20,8
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
	l.sh    	28(r8),r14	 # movhi
		l.sw    	8(r8), r3
		l.sw    	8+4(r8), r4
	l.sfnei	r2,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.movhi  	r20,hi(.LC273)
	l.movhi 	r7,hi(-2147483648)	 # move immediate M
	l.addi  	r8,r0,0	 # move immediate I
	l.ori   	r20,r20,lo(.LC273)
		l.sw    	60(r1), r7
		l.sw    	60+4(r1), r8
		l.lwz   	r5, 0(r20)
		l.lwz   	r6, 4(r20)
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bf	.L12377	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
	l.movhi  	r20,hi(.LC280)
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
	l.ori   	r20,r20,lo(.LC280)
		l.lwz   	r5, 0(r20)
		l.lwz   	r6, 4(r20)
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bf	.L12377	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
	l.jal   	__fixdfdi
	l.nop			# nop delay slot
		l.sw    	60(r1), r11
		l.sw    	60+4(r1), r12
	l.lwz   	r4,24(r1)	 # SI load
.L12377:
		l.lwz   	r2, 60(r1)
		l.lwz   	r3, 60+4(r1)
		l.sw    	0(r4), r2
		l.sw    	4(r4), r3
		l.or    	r4, r3, r0
		l.or    	r3, r2, r0
	l.jal   	__floatdidf
	l.nop			# nop delay slot
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__eqdf2
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bnf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.ori   	r14,r14,4
	l.lwz   	r5,24(r1)	 # SI load
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r5),r14	 # movhi
.L12220:
	l.jal   	sqlite3VdbeMemStringify	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L12378	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.j     	.L12316	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
.L12219:
	l.jal   	sqlite3VdbeMemExpandBlob	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r2,40(r1)	 # SI load
	l.j     	.L11286	# delay slot filled
	l.lhz   	r14,28(r2)	 # zero_extendqisi2
.L12218:
	l.jal   	sqlite3VdbeMemStringify	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L12379	# delay slot filled
	l.lwz   	r11,40(r1)	 # SI load
.L12131:
	l.lwz   	r8,16(r1)	 # SI load
.L12320:
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r8,116
.L12245:
	l.lhz   	r20,6(r11)	 # zero_extendqisi2
	l.ori   	r20,r20,16
	l.j     	.L11566	# delay slot filled
	l.sh    	6(r11),r20	 # movhi
.L12138:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	moveToLeftmost	# delay slot filled
	l.sw    	88(r1),r4	 # SI store
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r30,r11,0	 # move reg to reg
	l.sb    	18(r20),r5	    # movqi
	l.sb    	28(r20),r6	    # movqi
	l.sw    	88(r20),r7	 # SI store
	l.sb    	17(r20),r6	    # movqi
	l.j     	.L11331	# delay slot filled
	l.sb    	20(r20),r6	    # movqi
.L12164:
	l.lwz   	r14,16(r24)	 # SI load
	l.j     	.L11521	# delay slot filled
	l.addi  	r26,r0,0	 # move immediate I
.L12246:
	l.sfeqi	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L12255:
	l.bf	.L11756	# delay slot filled
	l.sfgtu 	r3,r4
	l.bf	.L11953
	l.nop			# nop delay slot
.L11756:
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11729:
	l.lhz   	r3,22(r24)	 # zero_extendqisi2
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.andi  	r11,r11,0xffff	 # zero_extendqisi2
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r2,r11,1
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.mul   	r11,r11,r2
	l.lhz   	r4,20(r24)	 # zero_extendqisi2
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.addi  	r14,r11,2
	l.addi  	r2,r11,1
	l.sfne 	r14,r2
	l.bnf	.L12264
	l.nop			# nop delay slot
.L11733:
	l.sfne 	r18,r14
	l.bf	.L11732	# delay slot filled
	l.lwz   	r20,2724(r1)	 # SI load
	l.lbz   	r2,18(r24)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L11732	# delay slot filled
	l.movhi  	r5,hi(.LC292)
	l.addi  	r3,r1,2716
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r5,lo(.LC292)
	l.jal   	checkAppendMsg	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.j     	.L11732	# delay slot filled
	l.lwz   	r20,2724(r1)	 # SI load
.L11412:
	l.movhi  	r4,hi(aSize.12542)
	l.ori   	r4,r4,lo(aSize.12542)
	l.add   	r5,r5,r4
	l.j     	.L11413	# delay slot filled
	l.lbz   	r6,0(r5)	 # zero_extendqisi2
.L12264:
	l.j     	.L11733	# delay slot filled
	l.addi  	r14,r11,2
.L12172:
	l.j     	.L11730	# delay slot filled
	l.addi  	r14,r11,2
.L12256:
	l.sfne 	r3,r2
	l.bf	.L11599	# delay slot filled
	l.addi  	r6,r3,1
	l.sfltu 	r6,r3
	l.bf	.L11600	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r4,r20,0	 # move reg to reg
.L11600:
	l.add   	r5,r4,r5
	l.sw    	2812(r1),r6	 # SI store
	l.sw    	2808(r1),r5	 # SI store
.L11601:
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,0(r26)	 # SI load
	l.ori   	r7,r4,0	 # move reg to reg
	l.addi  	r8,r1,2844
	l.jal   	sqlite3BtreeMovetoUnpacked	# delay slot filled
	l.addi  	r20,r20,1
	l.sub   	r2,r0,r11
	l.or    	r2,r2,r11
	l.xori  	r2,r2,0xffff
	l.j     	.L11604	# delay slot filled
	l.srli  	r3,r2,31
.L11645:
	l.addi  	r4,r0,1	 # move immediate I
	l.sb    	20(r20),r3	    # movqi
	l.sw    	88(r1),r4	 # SI store
	l.j     	.L11807	# delay slot filled
	l.ori   	r30,r22,0	 # move reg to reg
.L11290:
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11622:
	l.lwz   	r20,20(r30)	 # SI load
	l.lwz   	r8,24(r30)	 # SI load
	l.sw    	0(r1),r6	 # SI store
	l.ori   	r3,r22,0	 # move reg to reg
	l.lbz   	r18,3(r24)	 # zero_extendqisi2
	l.addi  	r4,r0,0	 # move immediate I
	l.andi  	r18,r18,8
	l.sw    	4(r1),r18	 # SI store
	l.sw    	8(r1),r14	 # SI store
		l.lwz   	r5, 44(r1)
		l.lwz   	r6, 44+4(r1)
	l.jal   	sqlite3BtreeInsert	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.addi  	r4,r0,0	 # move immediate I
	l.sb    	17(r26),r3	    # movqi
	l.sb    	28(r26),r3	    # movqi
	l.sw    	88(r26),r4	 # SI store
	l.sfne 	r11,r4
	l.bf	.L11814	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L12317	# delay slot filled
	l.lwz   	r13,188(r28)	 # SI load
.L11569:
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11638:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r5,112(r1)	 # SI load
	l.jal   	sqlite3BtreeData	# delay slot filled
	l.lwz   	r6,20(r8)	 # SI load
	l.j     	.L11639	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L12079:
	l.j     	.L11267	# delay slot filled
	l.sw    	24(r1),r2	 # SI store
.L12223:
	l.lwz   	r28,44(r1)	 # SI load
	l.sw    	72(r1),r11	 # SI store
	l.j     	.L11267	# delay slot filled
	l.sw    	68(r1),r11	 # SI store
.L11594:
	l.lbz   	r14,19(r26)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bnf	.L11580
	l.nop			# nop delay slot
.L11597:
	l.addi  	r3,r0,0	 # movqi: move immediate
.L12318:
	l.addi  	r4,r0,0	 # move immediate I
	l.sb    	17(r26),r3	    # movqi
	l.sb    	28(r26),r3	    # movqi
	l.sw    	88(r26),r4	 # SI store
		l.lwz   	r18, 2808(r1)
		l.lwz   	r19, 2808+4(r1)
.L11578:
	l.lwz   	r5,24(r1)	 # SI load
	l.addi  	r6,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r5)	 # zero_extendqisi2
	l.and   	r14,r14,r6
		l.sw    	0(r5), r18
		l.sw    	4(r5), r19
	l.ori   	r14,r14,4
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r5),r14	 # movhi
.L11558:
	l.sfgtsi	r6,0
	l.bf	.L11563	# delay slot filled
	l.xori  	r21,r18,70
	l.sub   	r20,r0,r21
	l.or    	r20,r20,r21
	l.sfltsi	r20,0
	l.bnf	.L12265	# delay slot filled
	l.sub   	r14,r0,r6
.L11564:
	l.lwz   	r14,0(r22)	 # SI load
	l.lbz   	r14,63(r14)	 # zero_extendqisi2
	l.xori  	r14,r14,1
	l.sub   	r14,r0,r14
	l.srli  	r14,r14,31
	l.sw    	2844(r1),r14	 # SI store
.L11562:
	l.lwz   	r14,2844(r1)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11408:
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r1,2376
	l.addi  	r6,r0,1	 # movhi: move immediate
	l.sfltu 	r2,r20
	l.bf	.L11853	# delay slot filled
	l.sh    	2404(r1),r6	 # movhi
	l.lwz   	r19,2844(r1)	 # SI load
	l.lwz   	r13,2832(r1)	 # SI load
	l.sfgts 	r19,r13
	l.bf	.L11814	# delay slot filled
	l.addi  	r30,r0,11	 # move immediate I
	l.sfne 	r20,r2
	l.bnf	.L12266	# delay slot filled
	l.sfne 	r19,r13
.L11393:
	l.lwz   	r7,120(r1)	 # SI load
.L12383:
	l.lwz   	r8,100(r1)	 # SI load
	l.slli  	r22,r7,2
	l.add   	r16,r8,r22
	l.lwz   	r15,0(r16)	 # SI load
	l.sfeqi	r15,0
	l.bf	.L11416	# delay slot filled
	l.lwz   	r11,76(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L11417	# delay slot filled
	l.lwz   	r8,96(r1)	 # SI load
	l.jal   	sqlite3VdbeMemReleaseExternal	# delay slot filled
	l.lwz   	r3,60(r1)	 # SI load
	l.lwz   	r2,96(r1)	 # SI load
	l.add   	r14,r2,r22
	l.lwz   	r2,0(r14)	 # SI load
	l.sfleui	r2,9
	l.bf	.L11418	# delay slot filled
	l.lwz   	r3,44(r1)	 # SI load
	l.lbz   	r14,23(r3)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L11418
	l.nop			# nop delay slot
	l.lbz   	r14,29(r3)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L11418
	l.nop			# nop delay slot
	l.lwz   	r14,24(r3)	 # SI load
	l.sflesi	r14,1
	l.bf	.L11418
	l.nop			# nop delay slot
#APP
# 52333 "sqlite3-secure.c" 1
	l.seed		r14,r2,0x008 

# 0 "" 2
#NO_APP
	l.addi  	r14,r14,-2
	l.movhi  	r4,hi(tb_cntr)
	l.slli  	r20,r14,2
	l.ori   	r4,r4,lo(tb_cntr)
		l.lwz   	r21, 36(r18)
		l.lwz   	r22, 36+4(r18)
	l.add   	r20,r20,r4
	l.addi  	r14,r22,-1
	l.add   	r15,r14,r14
	l.lwz   	r14,0(r20)	 # SI load
	l.add   	r14,r14,r15
	l.lhz   	r14,0(r14)	 # zero_extendqisi2
	l.nop
#APP
# 52334 "sqlite3-secure.c" 1
	l.seed		r14,r2,0x020 

# 0 "" 2
# 52335 "sqlite3-secure.c" 1
	l.seed		r22,r0,0x002 

# 0 "" 2
#NO_APP
	l.lwz   	r5,120(r1)	 # SI load
	l.nop
#APP
# 52336 "sqlite3-secure.c" 1
	l.seed		r5,r1,0x005 

# 0 "" 2
#NO_APP
	l.lwz   	r14,0(r16)	 # SI load
	l.lwz   	r6,76(r1)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.add   	r3,r6,r14
	l.jal   	SerialGetScopy	# delay slot filled
	l.lwz   	r5,60(r1)	 # SI load
	l.lwz   	r5,56(r1)	 # SI load
.L12331:
	l.lwz   	r4,60(r1)	 # SI load
	l.sb    	31(r4),r5	    # movqi
.L11423:
	l.lwz   	r2,2412(r1)	 # SI load
.L12327:
	l.sfeqi	r2,0
	l.bf	.L11424	# delay slot filled
	l.lwz   	r6,60(r1)	 # SI load
	l.addi  	r7,r0,-6145	 # move immediate I
	l.lhz   	r14,28(r6)	 # zero_extendqisi2
	l.and   	r14,r14,r7
	l.lwz   	r15,2396(r1)	 # SI load
	l.ori   	r14,r14,512
	l.sw    	20(r6),r15	 # SI store
	l.sh    	28(r6),r14	 # movhi
	l.sw    	36(r6),r2	 # SI store
.L11424:
	l.jal   	sqlite3VdbeMemMakeWriteable	# delay slot filled
	l.lwz   	r3,60(r1)	 # SI load
	l.j     	.L11331	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L12257:
		l.lwz   	r2, 2808(r1)
		l.lwz   	r3, 2808+4(r1)
		l.sw    	56(r28), r2
		l.sw    	56+4(r28), r3
	l.j     	.L12318	# delay slot filled
	l.addi  	r3,r0,0	 # movqi: move immediate
.L11555:
	l.j     	.L11557	# delay slot filled
	l.sh    	2778(r1),r26	 # movhi
.L11857:
	l.addi  	r8,r0,0	 # move immediate I
		l.sw    	104(r1), r7
		l.sw    	104+4(r1), r8
	l.j     	.L11464	# delay slot filled
	l.ori   	r30,r20,0	 # move reg to reg
.L11514:
	l.sw    	2844(r1),r18	 # SI store
	l.j     	.L11515	# delay slot filled
	l.ori   	r20,r18,0	 # move reg to reg
.L11383:
	l.lwz   	r2,44(r1)	 # SI load
	l.ori   	r18,r20,0	 # move reg to reg
	l.lwz   	r22,44(r2)	 # SI load
	l.lwz   	r3,48(r2)	 # SI load
	l.sw    	2832(r1),r22	 # SI store
	l.sw    	76(r1),r3	 # SI store
	l.lwz   	r4,64(r2)	 # SI load
	l.sw    	88(r2),r20	 # SI store
	l.j     	.L11391	# delay slot filled
	l.sw    	84(r1),r4	 # SI store
.L11575:
	l.lbz   	r6,21(r20)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r14,8(r24)	 # SI load
	l.sw    	84(r20),r6	 # SI store
	l.addi  	r14,r14,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r14	 # SI store
.L12179:
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.movhi  	r5,hi(.LC78)
	l.lwz   	r3,80(r1)	 # SI load
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3SetString	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L11330	# delay slot filled
	l.lwz   	r30,1648(r1)	 # SI load
.L11378:
	l.lwz   	r3,32(r1)	 # SI load
	l.jal   	sqlite3VdbeRealValue	# delay slot filled
	l.ori   	r20,r20,lo(.LC279)
		l.lwz   	r5, 0(r20)
		l.lwz   	r6, 4(r20)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__nedf2	# delay slot filled
	l.addi  	r20,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L11380
	l.nop			# nop delay slot
	l.ori   	r20,r18,0	 # move reg to reg
.L11380:
	l.lbz   	r14,0(r24)	 # zero_extendqisi2
	l.sfnei	r14,68
	l.bf	.L12380	# delay slot filled
	l.sfeqi	r20,0
	l.j     	.L11379	# delay slot filled
	l.xori  	r20,r20,1
.L12226:
	l.jal   	sqlite3_value_text	# delay slot filled
	l.addi  	r3,r1,1144
	l.movhi  	r5,hi(.LC78)
	l.lwz   	r3,80(r1)	 # SI load
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3SetString	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L11767	# delay slot filled
	l.lwz   	r30,1388(r1)	 # SI load
.L12162:
	l.slli  	r7,r16,8
	l.lwz   	r8,16(r1)	 # SI load
	l.sub   	r7,r7,r14
	l.lwz   	r6,76(r8)	 # SI load
	l.add   	r6,r6,r7
	l.ori   	r3,r6,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemIntegerify	# delay slot filled
	l.sw    	40(r1),r6	 # SI store
	l.lwz   	r11,40(r1)	 # SI load
	l.lwz   	r16,4(r11)	 # SI load
	l.sflesi	r16,1
	l.bnf	.L11519
	l.nop			# nop delay slot
	l.j     	.L11345	# delay slot filled
	l.addi  	r30,r0,11	 # move immediate I
.L12159:
	l.jal   	sqlite3BtreeKeySize	# delay slot filled
	l.addi  	r4,r1,2808
	l.lwz   	r21,80(r28)	 # SI load
	l.lwz   	r15,2808(r1)	 # SI load
	l.srai  	r14,r21,31
	l.sfgts 	r15,r14
	l.bf	.L11275	# delay slot filled
	l.lwz   	r20,2812(r1)	 # SI load
	l.sfne 	r15,r14
	l.bnf	.L12267	# delay slot filled
	l.sfgtu 	r20,r21
.L11949:
	l.sw    	112(r1),r20	 # SI store
	l.j     	.L11634	# delay slot filled
	l.ori   	r22,r20,0	 # move reg to reg
.L11759:
	l.lwz   	r11,16(r1)	 # SI load
	l.add   	r21,r14,r14
	l.sw    	88(r11),r14	 # SI store
	l.add   	r14,r21,r14
	l.ori   	r3,r28,0	 # move reg to reg
	l.slli  	r5,r14,2
	l.jal   	sqlite3DbReallocOrFree	# delay slot filled
	l.lwz   	r4,92(r11)	 # SI load
	l.lwz   	r2,16(r1)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L11760	# delay slot filled
	l.sw    	92(r2),r11	 # SI store
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r2,116
.L12240:
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.or    	r20,r11,r12
	l.sub   	r18,r0,r20
	l.or    	r18,r18,r20
	l.j     	.L11372	# delay slot filled
	l.srli  	r20,r18,31
.L12239:
	l.jal   	sqlite3VdbeIntValue	# delay slot filled
	l.ori   	r3,r8,0	 # move reg to reg
	l.or    	r18,r11,r12
	l.sub   	r14,r0,r18
	l.or    	r14,r14,r18
	l.srli  	r14,r14,31
	l.add   	r18,r14,r14
	l.j     	.L11371	# delay slot filled
	l.add   	r22,r18,r14
.L12232:
	l.jal   	invalidateAllOverflowCache.clone.39	# delay slot filled
	l.lwz   	r3,8(r20)	 # SI load
	l.jal   	pagerPagecount.clone.101	# delay slot filled
	l.lwz   	r3,0(r20)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	incrVacuumStep	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.sfnei	r11,101
	l.bf	.L11331	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L12319	# delay slot filled
	l.lwz   	r2,8(r24)	 # SI load
.L12189:
	l.jal   	sqlite3VdbeMemSetRowSet	# delay slot filled
	l.ori   	r3,r6,0	 # move reg to reg
	l.lwz   	r7,32(r1)	 # SI load
	l.lhz   	r14,28(r7)	 # zero_extendqisi2
	l.andi  	r14,r14,32
	l.sfeqi	r14,0
	l.bnf	.L12381	# delay slot filled
	l.sfeqi	r30,0
	l.j     	.L12320	# delay slot filled
	l.lwz   	r8,16(r1)	 # SI load
.L11528:
	l.lwz   	r3,40(r20)	 # SI load
	l.jal   	sqlite3BtreeBeginTrans	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L12268	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r18,16(r24)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L11531	# delay slot filled
	l.addi  	r4,r1,2844
	l.lwz   	r14,40(r20)	 # SI load
	l.lwz   	r21,4(r14)	 # SI load
	l.lwz   	r22,0(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	4(r21),r22	 # SI store
	l.jal   	btreeCreateTable	# delay slot filled
	l.addi  	r5,r0,2	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L12269	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11532:
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.addi  	r18,r0,1	 # move immediate I
	l.j     	.L11529	# delay slot filled
	l.sb    	29(r20),r5	    # movqi
.L12216:
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L12194:
	l.lwz   	r14,40(r8)	 # SI load
	l.jalr  	r14	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12382	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11804	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L12176:
	l.lwz   	r14,16(r24)	 # SI load
	l.sw    	1396(r1),r14	 # SI store
	l.j     	.L11321	# delay slot filled
	l.sw    	1400(r1),r8	 # SI store
.L12242:
	l.lwz   	r4,24(r1)	 # SI load
	l.addi  	r5,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r4)	 # zero_extendqisi2
	l.and   	r14,r14,r5
	l.ori   	r14,r14,1
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r4),r14	 # movhi
.L12241:
	l.movhi  	r2,hi(and_logic.13318)
	l.ori   	r2,r2,lo(and_logic.13318)
	l.add   	r18,r20,r2
	l.add   	r14,r18,r22
	l.j     	.L11374	# delay slot filled
	l.lbz   	r18,0(r14)	 # zero_extendqisi2
.L12265:
	l.or    	r14,r14,r6
	l.sfltsi	r14,0
	l.bf	.L11564
	l.nop			# nop delay slot
.L11563:
	l.lwz   	r3,0(r22)	 # SI load
	l.jal   	sqlite3BtreePrevious	# delay slot filled
	l.addi  	r4,r1,2844
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L11562	# delay slot filled
	l.sb    	17(r22),r30	    # movqi
.L11449:
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3PutVarint32	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.j     	.L11452	# delay slot filled
	l.andi  	r22,r11,0xff	 # zero_extendqisi2
.L12248:
	l.j     	.L11692	# delay slot filled
	l.addi  	r20,r0,5	 # move immediate I
.L12266:
	l.bnf	.L12383	# delay slot filled
	l.lwz   	r7,120(r1)	 # SI load
.L11853:
	l.j     	.L11814	# delay slot filled
	l.addi  	r30,r0,11	 # move immediate I
.L12163:
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r26,16(r24)	 # SI load
	l.lwz   	r6,0(r3)	 # SI load
	l.lhz   	r14,6(r26)	 # zero_extendqisi2
	l.lwz   	r20,8(r6)	 # SI load
	l.addi  	r14,r14,1
	l.lwz   	r20,20(r20)	 # SI load
	l.lbz   	r20,57(r20)	 # zero_extendqisi2
	l.j     	.L11521	# delay slot filled
	l.sb    	4(r26),r20	    # movqi
.L12161:
	l.lwz   	r14,20(r14)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.lbz   	r20,127(r4)	 # zero_extendqisi2
	l.lbz   	r6,56(r14)	 # zero_extendqisi2
	l.sfleu 	r20,r6
	l.bf	.L11518	# delay slot filled
	l.sw    	44(r1),r5	 # SI store
	l.j     	.L11518	# delay slot filled
	l.sb    	127(r4),r6	    # movqi
.L12188:
	l.xori  	r14,r14,0xffff
	l.j     	.L11510	# delay slot filled
	l.sub   	r20,r0,r20
.L12145:
	l.lwz   	r2,4(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L12144:
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r6,4(r3)	 # SI load
	l.sfnei	r6,0
	l.bf	.L11955
	l.nop			# nop delay slot
	l.j     	.L12407	# delay slot filled
	l.lbz   	r2,30(r28)	 # zero_extendqisi2
.L11477:
	l.movhi  	r5,hi(.LC281)
	l.addi  	r3,r6,116
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC281)
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,5	 # move immediate I
	l.j     	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
.L12167:
	l.movhi  	r5,hi(.LC284)
	l.addi  	r3,r4,116
	l.ori   	r5,r5,lo(.LC284)
	l.lwz   	r4,36(r1)	 # SI load
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,5	 # move immediate I
	l.j     	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
.L12243:
	l.lwz   	r2,8(r24)	 # SI load
	l.sw    	32(r1),r3	 # SI store
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11352:
	l.sfeqi	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L12206:
	l.movhi  	r8,hi(.L11362)
	l.slli  	r14,r14,2
	l.ori   	r8,r8,lo(.L11362)
	l.add   	r14,r14,r8
	l.lwz   	r14,0(r14)	 # SI load
	l.jr    	r14
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L11362:
	.word	.L11357
	.word	.L11358
	.word	.L11359
	.word	.L11360
	.word	.L12121
	.section .text
.L11360:
	l.addi  	r14,r11,-1
	l.or    	r20,r11,r14
	l.j     	.L11363	# delay slot filled
	l.srli  	r20,r20,31
.L11359:
	l.srai  	r14,r11,31
	l.sub   	r20,r14,r11
	l.j     	.L11363	# delay slot filled
	l.srli  	r20,r20,31
.L11358:
	l.sub   	r14,r0,r11
	l.or    	r14,r14,r11
	l.xori  	r14,r14,0xffff
	l.j     	.L11363	# delay slot filled
	l.srli  	r20,r14,31
.L11357:
	l.sub   	r14,r0,r11
	l.or    	r20,r14,r11
	l.j     	.L11363	# delay slot filled
	l.srli  	r20,r20,31
.L11640:
	l.lbz   	r22,21(r14)	 # zero_extendqisi2
	l.sfeqi	r22,0
	l.bf	.L11642	# delay slot filled
	l.ori   	r30,r6,0	 # move reg to reg
		l.lwz   	r20, 52(r14)
		l.lwz   	r21, 52+4(r14)
		l.sw    	2808(r1), r20
		l.sw    	2808+4(r1), r21
	l.j     	.L12332	# delay slot filled
	l.lwz   	r7,24(r1)	 # SI load
.L11829:
	l.j     	.L11150	# delay slot filled
	l.addi  	r30,r0,9	 # move immediate I
.L12229:
	l.lbz   	r14,16(r20)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r3,0(r20)	 # SI load
	l.jal   	sqlite3PagerOpenSavepoint	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L11331	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11364:
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L12184:
	l.lwz   	r2,92(r1)	 # SI load
	l.sub   	r2,r0,r2
	l.j     	.L11670	# delay slot filled
	l.sw    	92(r1),r2	 # SI store
.L11524:
	l.lbz   	r14,1(r24)	 # zero_extendqisi2
	l.xori  	r14,r14,250
	l.addi  	r11,r0,0	 # move immediate I
	l.sub   	r14,r0,r14
	l.sw    	0(r22),r11	 # SI store
	l.srli  	r14,r14,31
	l.xori  	r20,r14,1
	l.sb    	29(r22),r14	    # movqi
	l.j     	.L11267	# delay slot filled
	l.sb    	30(r22),r20	    # movqi
.L11523:
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r7,12(r1)	 # SI load
	l.sw    	100(r6),r11	 # SI store
	l.j     	.L11270	# delay slot filled
	l.sw    	96(r6),r7	 # SI store
.L11840:
		l.lwz   	r14, 0(r18)
		l.lwz   	r15, 4(r18)
	l.j     	.L11348
	l.nop			# nop delay slot
.L11410:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.j     	.L11411	# delay slot filled
	l.lwz   	r5,0(r30)	 # SI load
.L11815:
	l.addi  	r30,r0,7	 # move immediate I
	l.ori   	r13,r30,0	 # move reg to reg
	l.addi  	r12,r8,116
	l.movhi  	r7,hi(aMsg.21565)
.L12328:
	l.slli  	r2,r13,2
	l.ori   	r7,r7,lo(aMsg.21565)
	l.add   	r2,r2,r7
	l.lwz   	r8,0(r2)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L12270
	l.nop			# nop delay slot
.L11817:
	l.movhi  	r5,hi(.LC78)
	l.ori   	r3,r12,0	 # move reg to reg
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3SetString	# delay slot filled
	l.sw    	0(r1),r8	 # SI store
	l.j     	.L12298	# delay slot filled
	l.lwz   	r8,16(r1)	 # SI load
.L12181:
	l.movhi  	r6,hi(.LC198)
	l.j     	.L11694	# delay slot filled
	l.ori   	r6,r6,lo(.LC198)
.L11560:
	l.lwz   	r3,0(r22)	 # SI load
	l.jal   	sqlite3BtreeNext	# delay slot filled
	l.addi  	r4,r1,2844
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L11562	# delay slot filled
	l.sb    	17(r22),r30	    # movqi
.L12195:
	l.ori   	r20,r15,0	 # move reg to reg
.L11797:
	l.addi  	r22,r22,-1
	l.slli  	r6,r22,2
	l.sw    	292(r28),r22	 # SI store
	l.add   	r14,r15,r6
	l.lwz   	r6,0(r14)	 # SI load
	l.j     	.L11796	# delay slot filled
	l.sw    	0(r20),r6	 # SI store
.L12168:
	l.movhi  	r5,hi(.LC285)
	l.addi  	r3,r8,116
	l.ori   	r4,r7,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC285)
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,5	 # move immediate I
	l.j     	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
.L11923:
	l.j     	.L11825	# delay slot filled
	l.addi  	r30,r0,0	 # move immediate I
.L11297:
	l.bf	.L11295	# delay slot filled
	l.sfeqi	r2,87
	l.bnf	.L12384	# delay slot filled
	l.or    	r20,r14,r15
	l.sfeqi	r20,0
	l.bf	.L11290	# delay slot filled
	l.movhi 	r6,hi(-2147483648)	 # move immediate M
	l.add   	r20,r19,r6
	l.or    	r21,r20,r18
	l.sub   	r20,r0,r21
	l.or    	r20,r20,r21
	l.sfltsi	r20,0
	l.bf	.L12385	# delay slot filled
	l.ori   	r3,r19,0	 # move reg to reg
	l.and   	r20,r14,r15
	l.xori  	r21,r20,0xffff
	l.sub   	r20,r0,r21
	l.or    	r20,r20,r21
	l.sfltsi	r20,0
	l.bf	.L12385
	l.nop			# nop delay slot
	l.addi  	r14,r0,0	 # move immediate I
	l.addi  	r15,r0,1	 # move immediate I
.L12385:
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.jal   	__divdi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L11299	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
.L11892:
	l.j     	.L11636	# delay slot filled
	l.sw    	112(r1),r14	 # SI store
.L12183:
	l.ori   	r8,r8,65534
	l.sfgtu 	r21,r8
	l.bf	.L12386	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r3,0(r22)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r7,r1,2136
	l.sw    	2152(r1),r14	 # SI store
	l.sh    	2164(r1),r14	 # movhi
	l.jal   	sqlite3VdbeMemFromBtree	# delay slot filled
	l.sw    	2172(r1),r14	 # SI store
	l.sfnei	r11,0
	l.bf	.L11666	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r3,2160(r1)	 # SI load
	l.lwz   	r4,2156(r1)	 # SI load
	l.jal   	sqlite3VdbeRecordCompare	# delay slot filled
	l.addi  	r5,r1,2772
	l.addi  	r3,r1,2136
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.sw    	92(r1),r11	 # SI store
	l.j     	.L12321	# delay slot filled
	l.lbz   	r18,0(r24)	 # zero_extendqisi2
.L12238:
	l.lwz   	r14,4(r28)	 # SI load
	l.lwz   	r7,8(r28)	 # SI load
	l.addi  	r14,r14,-1
	l.lwz   	r2,4(r24)	 # SI load
	l.add   	r6,r14,r14
	l.lhz   	r18,20(r2)	 # zero_extendqisi2
	l.add   	r14,r6,r14
	l.lhz   	r15,22(r2)	 # zero_extendqisi2
	l.slli  	r14,r14,3
	l.sub   	r15,r18,r15
	l.lwz   	r13,0(r24)	 # SI load
	l.add   	r7,r7,r14
	l.ori   	r5,r18,0	 # move reg to reg
	l.sw    	60(r1),r7	 # SI store
	l.ori   	r7,r11,0	 # move reg to reg
	l.lwz   	r6,60(r1)	 # SI load
	l.sw    	76(r1),r15	 # SI store
	l.lwz   	r22,4(r6)	 # SI load
	l.sw    	4(r2),r13	 # SI store
	l.lwz   	r3,0(r22)	 # SI load
	l.lwz   	r4,4(r22)	 # SI load
	l.ori   	r6,r15,0	 # move reg to reg
	l.jal   	sqlite3BtreeSetPageSize.clone.103	# delay slot filled
	l.addi  	r30,r0,7	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L11773
	l.nop			# nop delay slot
	l.sfeqi	r16,0
	l.bf	.L11774	# delay slot filled
	l.lwz   	r6,76(r1)	 # SI load
	l.lwz   	r3,0(r22)	 # SI load
	l.lwz   	r4,4(r22)	 # SI load
	l.lwz   	r5,36(r28)	 # SI load
	l.jal   	sqlite3BtreeSetPageSize.clone.103	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12387	# delay slot filled
	l.addi  	r11,r0,1	 # movqi: move immediate
.L11774:
	l.lbz   	r14,30(r28)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bnf	.L12271	# delay slot filled
	l.addi  	r30,r0,7	 # move immediate I
.L11773:
	l.addi  	r11,r0,1	 # movqi: move immediate
.L12387:
	l.sw    	12(r28),r26	 # SI store
	l.sb    	28(r28),r11	    # movqi
	l.sw    	68(r28),r20	 # SI store
	l.lwz   	r2,44(r1)	 # SI load
	l.lwz   	r4,60(r1)	 # SI load
	l.sw    	72(r28),r2	 # SI store
	l.jal   	sqlite3BtreeClose	# delay slot filled
	l.lwz   	r3,4(r4)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,60(r1)	 # SI load
	l.sw    	4(r5),r6	 # SI store
	l.j     	.L11824	# delay slot filled
	l.sw    	20(r5),r6	 # SI store
.L12143:
	l.movhi  	r4,hi(.LC174)
	l.lwz   	r3,36(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC174)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r26	 # SI store
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r30,r0,1	 # move immediate I
	l.j     	.L11814	# delay slot filled
	l.sw    	116(r4),r11	 # SI store
.L12199:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,48(r26)	 # SI load
	l.j     	.L11614	# delay slot filled
	l.lbz   	r18,22(r26)	 # zero_extendqisi2
.L12175:
	l.lwz   	r14,204(r6)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.j     	.L12322	# delay slot filled
	l.lwz   	r18,152(r28)	 # SI load
.L11880:
	l.j     	.L11578	# delay slot filled
	l.addi  	r19,r0,0	 # move immediate I
.L12136:
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r5,116
.L11533:
	l.lbz   	r14,21(r22)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L12203:
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	applyAffinity	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
	l.lwz   	r3,52(r1)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	applyAffinity	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
	l.lbz   	r14,30(r28)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L12272	# delay slot filled
	l.lwz   	r6,32(r1)	 # SI load
	l.j     	.L11353	# delay slot filled
	l.lhz   	r14,28(r6)	 # zero_extendqisi2
.L12147:
	l.ori   	r3,r8,0	 # move reg to reg
	l.addi  	r4,r0,97	 # move immediate I
	l.lwz   	r5,56(r1)	 # SI load
	l.jal   	applyAffinity	# delay slot filled
	l.addi  	r2,r0,-16640	 # move immediate I
	l.lwz   	r11,32(r1)	 # SI load
	l.lhz   	r14,28(r11)	 # zero_extendqisi2
	l.and   	r14,r14,r2
	l.ori   	r14,r14,16
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r11),r14	 # movhi
.L12174:
	l.jal   	sqlite3StrAccumReset	# delay slot filled
	l.addi  	r3,r1,2744
	l.j     	.L11738
	l.nop			# nop delay slot
.L12205:
	l.jal   	sqlite3VdbeMemExpandBlob	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.j     	.L12323	# delay slot filled
	l.lwz   	r3,52(r1)	 # SI load
.L12222:
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.movhi  	r5,hi(.LC78)
	l.lwz   	r3,80(r1)	 # SI load
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3SetString	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L12324	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L12204:
	l.jal   	sqlite3VdbeMemExpandBlob	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.j     	.L12325	# delay slot filled
	l.lwz   	r7,52(r1)	 # SI load
.L12190:
	l.j     	.L11747	# delay slot filled
	l.lwz   	r18,20(r26)	 # SI load
.L12154:
	l.lwz   	r14,20(r18)	 # SI load
	l.lbz   	r3,7(r3)	 # zero_extendqisi2
	l.j     	.L11512	# delay slot filled
	l.sb    	56(r14),r3	    # movqi
.L12149:
	l.lwz   	r8,100(r6)	 # SI load
	l.j     	.L11393	# delay slot filled
	l.sw    	100(r1),r8	 # SI store
.L11536:
	l.sfne 	r16,r2
	l.bnf	.L12273	# delay slot filled
	l.sfnei	r12,0
.L11537:
	l.xori  	r20,r18,109
	l.sub   	r14,r0,r20
	l.or    	r14,r14,r20
	l.sfgesi	r14,0
	l.bf	.L12388	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.xori  	r20,r18,70
	l.sub   	r14,r0,r20
	l.or    	r14,r14,r20
	l.xori  	r14,r14,0xffff
	l.srli  	r14,r14,31
	l.sfeqi	r14,0
	l.bf	.L11547
	l.nop			# nop delay slot
.L12388:
	l.jal   	__floatdidf	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.lwz   	r5,52(r1)	 # SI load
		l.lwz   	r3, 8(r5)
		l.lwz   	r4, 8+4(r5)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L12389	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r2,r26,1
	l.sfltu 	r2,r26
	l.bf	.L11550	# delay slot filled
	l.addi  	r15,r0,1	 # move immediate I
	l.addi  	r15,r0,0	 # move immediate I
.L11550:
	l.add   	r16,r15,r16
	l.ori   	r26,r2,0	 # move reg to reg
.L11535:
	l.addi  	r4,r0,0	 # move immediate I
.L12389:
	l.lwz   	r3,0(r22)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.jal   	sqlite3BtreeMovetoUnpacked	# delay slot filled
	l.addi  	r8,r1,2844
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r14,2844(r1)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L11553	# delay slot filled
	l.xori  	r15,r18,123
	l.xori  	r20,r18,123
	l.sub   	r14,r0,r20
	l.or    	r14,r14,r20
	l.xori  	r14,r14,0xffff
	l.j     	.L11554	# delay slot filled
	l.srli  	r26,r14,31
.L11642:
	l.lwz   	r20,76(r14)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L11643	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r18,0(r20)	 # SI load
	l.lwz   	r2,0(r18)	 # SI load
	l.lwz   	r14,48(r2)	 # SI load
	l.jalr  	r14	# delay slot filled
	l.addi  	r4,r1,2808
	l.lwz   	r5,16(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,116(r5)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r2,8(r18)	 # SI load
		l.lwz   	r20, 2808(r1)
		l.lwz   	r21, 2808+4(r1)
	l.sw    	116(r6),r2	 # SI store
	l.j     	.L11641	# delay slot filled
	l.sw    	8(r18),r22	 # SI store
.L11671:
	l.lwz   	r6,12(r24)	 # SI load
	l.lwz   	r2,8(r28)	 # SI load
	l.add   	r14,r6,r6
	l.addi  	r7,r0,0	 # move immediate I
	l.add   	r14,r14,r6
	l.lwz   	r16,4(r24)	 # SI load
	l.slli  	r14,r14,3
	l.add   	r20,r2,r14
	l.lwz   	r26,4(r20)	 # SI load
	l.lwz   	r18,4(r26)	 # SI load
	l.lwz   	r13,0(r26)	 # SI load
	l.lwz   	r2,8(r18)	 # SI load
	l.sw    	4(r18),r13	 # SI store
	l.sfne 	r2,r7
	l.bnf	.L12274	# delay slot filled
	l.sw    	2840(r1),r7	 # SI store
	l.addi  	r30,r0,262	 # move immediate I
.L11674:
	l.lwz   	r7,24(r1)	 # SI load
.L12339:
	l.addi  	r8,r0,-16640	 # move immediate I
	l.lhz   	r5,28(r7)	 # zero_extendqisi2
	l.lwz   	r11,116(r1)	 # SI load
	l.and   	r5,r5,r8
	l.srai  	r2,r11,31
	l.ori   	r5,r5,4
	l.sw    	4(r7),r11	 # SI store
	l.sh    	28(r7),r5	 # movhi
	l.j     	.L11814	# delay slot filled
	l.sw    	0(r7),r2	 # SI store
.L12200:
	l.jal   	sqlite3Malloc	# delay slot filled
	l.addi  	r3,r15,2
	l.sfeqi	r11,0
	l.bf	.L12134	# delay slot filled
	l.sw    	48(r26),r11	 # SI store
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r4,20(r30)	 # SI load
	l.jal   	memcpy	# delay slot filled
	l.lwz   	r5,44(r26)	 # SI load
	l.lwz   	r6,44(r26)	 # SI load
	l.lwz   	r14,48(r26)	 # SI load
	l.add   	r14,r14,r6
	l.sb    	0(r14),r18	    # movqi
	l.lwz   	r14,48(r26)	 # SI load
	l.lwz   	r6,44(r26)	 # SI load
	l.add   	r14,r14,r6
	l.j     	.L11618	# delay slot filled
	l.sb    	1(r14),r18	    # movqi
.L12235:
	l.lwz   	r6,32(r11)	 # SI load
	l.j     	.L11702	# delay slot filled
	l.sw    	20(r14),r6	 # SI store
.L12213:
	l.and   	r15,r21,r22
	l.j     	.L11338	# delay slot filled
	l.and   	r6,r12,r26
.L11337:
	l.addi  	r14,r12,-32
	l.sfltsi	r14,0
	l.bf	.L11339	# delay slot filled
	l.srli  	r2,r26,1
	l.sll   	r15,r26,r14
	l.j     	.L11338	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
.L11336:
	l.or    	r15,r21,r22
	l.j     	.L11338	# delay slot filled
	l.or    	r6,r12,r26
.L12157:
	l.sfnei	r16,2
	l.bnf	.L12275
	l.nop			# nop delay slot
.L11488:
	l.lwz   	r22,4(r20)	 # SI load
	l.addi  	r26,r0,0	 # move immediate I
	l.sfne 	r22,r26
	l.bnf	.L12276
	l.nop			# nop delay slot
.L11491:
	l.lwz   	r13,472(r28)	 # SI load
	l.lwz   	r2,4(r28)	 # SI load
	l.addi  	r15,r13,-1
	l.sflesi	r2,0
	l.bf	.L11494	# delay slot filled
	l.sub   	r18,r15,r14
	l.addi  	r22,r0,0	 # move immediate I
	l.j     	.L11495	# delay slot filled
	l.ori   	r24,r22,0	 # move reg to reg
.L12277:
	l.lwz   	r2,4(r28)	 # SI load
	l.sfgts 	r2,r24
	l.bnf	.L11494	# delay slot filled
	l.addi  	r22,r22,24
.L11495:
	l.lwz   	r2,8(r28)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.add   	r2,r2,r22
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3BtreeSavepoint	# delay slot filled
	l.lwz   	r3,4(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L12277	# delay slot filled
	l.addi  	r24,r24,1
	l.addi  	r24,r24,-1
	l.j     	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11585:
	l.slli  	r18,r14,4
	l.slli  	r14,r14,8
	l.lwz   	r8,16(r1)	 # SI load
	l.sub   	r14,r14,r18
	l.lwz   	r2,76(r8)	 # SI load
	l.add   	r2,r2,r14
	l.jal   	sqlite3VdbeMemIntegerify	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.movhi 	r11,hi(2147418112)	 # move immediate M
	l.lwz   	r18,0(r2)	 # SI load
	l.ori   	r11,r11,65535
	l.sfne 	r18,r11
	l.bnf	.L12278	# delay slot filled
	l.lwz   	r13,4(r2)	 # SI load
.L11946:
	l.lbz   	r14,19(r26)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L11886	# delay slot filled
	l.lwz   	r21,2808(r1)	 # SI load
	l.sfgts 	r21,r18
	l.bnf	.L12066	# delay slot filled
	l.sfne 	r21,r18
	l.lwz   	r6,2812(r1)	 # SI load
.L11588:
	l.ori   	r15,r6,0	 # move reg to reg
.L12392:
	l.sw    	0(r2),r21	 # SI store
	l.j     	.L11586	# delay slot filled
	l.sw    	4(r2),r6	 # SI store
.L12186:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3BtreeLast	# delay slot filled
	l.addi  	r4,r1,2844
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r6,2844(r1)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L11582	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r7,r0,1	 # move immediate I
		l.sw    	2808(r1), r6
		l.sw    	2808+4(r1), r7
	l.j     	.L12326	# delay slot filled
	l.lwz   	r14,12(r24)	 # SI load
.L12187:
	l.sfnei	r15,-1
	l.bf	.L12390	# delay slot filled
	l.addi  	r20,r15,1
	l.addi  	r21,r0,0	 # move immediate I
	l.j     	.L11591	# delay slot filled
	l.addi  	r22,r0,0	 # move immediate I
.L12269:
	l.lwz   	r14,40(r20)	 # SI load
	l.lwz   	r13,0(r20)	 # SI load
	l.lwz   	r2,0(r14)	 # SI load
	l.lwz   	r18,4(r14)	 # SI load
	l.lwz   	r6,16(r24)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	4(r18),r2	 # SI store
	l.lwz   	r4,2844(r1)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	btreeCursor	# delay slot filled
	l.ori   	r7,r13,0	 # move reg to reg
	l.lwz   	r4,16(r1)	 # SI load
	l.lwz   	r15,16(r24)	 # SI load
	l.lwz   	r2,0(r4)	 # SI load
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r6,8(r2)	 # SI load
	l.sw    	60(r20),r15	 # SI store
	l.lwz   	r14,20(r6)	 # SI load
	l.lbz   	r14,57(r14)	 # zero_extendqisi2
	l.j     	.L11532	# delay slot filled
	l.sb    	4(r15),r14	    # movqi
.L11295:
	l.ori   	r3,r19,0	 # move reg to reg
		l.or    	r5, r14, r0
		l.or    	r6, r15, r0
	l.jal   	__muldi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L11299	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
.L11294:
	l.sub   	r13,r18,r15
	l.sfgtu 	r13,r18
	l.bf	.L11300	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.ori   	r2,r21,0	 # move reg to reg
.L11300:
	l.sub   	r14,r19,r14
	l.ori   	r20,r13,0	 # move reg to reg
	l.j     	.L11299	# delay slot filled
	l.sub   	r2,r14,r2
.L12214:
	l.sfltu 	r13,r18
	l.bf	.L11298	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.ori   	r2,r21,0	 # move reg to reg
.L11298:
	l.add   	r14,r19,r14
	l.ori   	r20,r13,0	 # move reg to reg
	l.j     	.L11299	# delay slot filled
	l.add   	r2,r2,r14
.L12191:
	l.j     	.L11749	# delay slot filled
	l.lwz   	r18,20(r26)	 # SI load
.L11416:
	l.lbs   	r14,1(r24)	 # extendqisi2_no_sext_mem
	l.sfnei	r14,-8
	l.bf	.L11423	# delay slot filled
	l.lwz   	r3,60(r1)	 # SI load
	l.lwz   	r4,16(r24)	 # SI load
	l.jal   	sqlite3VdbeMemShallowCopy	# delay slot filled
	l.addi  	r5,r0,2048	 # move immediate I
	l.j     	.L12327	# delay slot filled
	l.lwz   	r2,2412(r1)	 # SI load
.L11606:
		l.lwz   	r2, 2808(r1)
		l.lwz   	r3, 2808+4(r1)
		l.sw    	56(r28), r2
		l.sw    	56+4(r28), r3
	l.sfnei	r11,0
	l.bf	.L11597	# delay slot filled
	l.lwz   	r6,2844(r1)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L11597
	l.nop			# nop delay slot
.L11886:
	l.j     	.L11345	# delay slot filled
	l.addi  	r30,r0,13	 # move immediate I
.L12166:
	l.andi  	r13,r30,255
	l.lwz   	r6,16(r1)	 # SI load
	l.movhi  	r8,hi(.LC124)
	l.addi  	r12,r6,116
	l.sfgtui	r13,26
	l.bf	.L11817	# delay slot filled
	l.ori   	r8,r8,lo(.LC124)
	l.j     	.L12328	# delay slot filled
	l.movhi  	r7,hi(aMsg.21565)
.L12259:
	l.lwz   	r5,104(r3)	 # SI load
	l.lwz   	r2,92(r3)	 # SI load
	l.sw    	76(r1),r5	 # SI store
	l.j     	.L11385	# delay slot filled
	l.sw    	2832(r1),r2	 # SI store
.L11854:
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r8,r0,0	 # move immediate I
	l.sw    	60(r1),r6	 # SI store
		l.sw    	24(r1), r7
		l.sw    	24+4(r1), r8
	l.j     	.L11427	# delay slot filled
	l.ori   	r26,r6,0	 # move reg to reg
.L12244:
	l.sfne 	r14,r22
	l.bf	.L11574
	l.nop			# nop delay slot
	l.j     	.L12300	# delay slot filled
	l.lwz   	r2,8(r24)	 # SI load
.L11788:
	l.bnf	.L12279
	l.nop			# nop delay slot
	l.j     	.L11814	# delay slot filled
	l.addi  	r30,r0,6	 # move immediate I
.L12146:
	l.jal   	sqlite3VdbeMemExpandBlob	# delay slot filled
	l.ori   	r3,r4,0	 # move reg to reg
	l.lwz   	r5,32(r1)	 # SI load
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L11346	# delay slot filled
	l.lhz   	r14,28(r5)	 # zero_extendqisi2
.L11311:
	l.bf	.L11309	# delay slot filled
	l.sfeqi	r14,87
	l.bnf	.L11306	# delay slot filled
	l.movhi  	r20,hi(.LC279)
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
	l.ori   	r20,r20,lo(.LC279)
		l.lwz   	r5, 0(r20)
		l.lwz   	r6, 4(r20)
	l.jal   	__eqdf2
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bf	.L11290
	l.nop			# nop delay slot
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
		l.lwz   	r5, 44(r1)
		l.lwz   	r6, 44+4(r1)
	l.jal   	__divdf3
	l.nop			# nop delay slot
	l.j     	.L12329	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L12148:
	l.jal   	sqlite3VdbeMemIntegerify	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L11481:
	l.lwz   	r14,472(r28)	 # SI load
	l.addi  	r14,r14,1
	l.j     	.L11482	# delay slot filled
	l.sw    	472(r28),r14	 # SI store
.L12224:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	setSharedCacheTableLock	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.j     	.L11786	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L12158:
	l.movhi  	r6,hi(.LC274)
	l.j     	.L11490	# delay slot filled
	l.ori   	r6,r6,lo(.LC274)
.L12254:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,16(r24)	 # SI load
	l.j     	.L12330	# delay slot filled
	l.addi  	r4,r0,-1	 # movqi: move immediate
.L12260:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3BtreeKeySize	# delay slot filled
	l.sw    	76(r1),r15	 # SI store
	l.lwz   	r14,2812(r1)	 # SI load
	l.j     	.L11385	# delay slot filled
	l.sw    	2832(r1),r14	 # SI store
.L11615:
	l.bf	.L11618	# delay slot filled
	l.sw    	48(r26),r2	 # SI store
	l.lhz   	r14,28(r30)	 # zero_extendqisi2
	l.addi  	r6,r0,-1025	 # move immediate I
	l.sw    	36(r30),r18	 # SI store
	l.and   	r14,r14,r6
	l.ori   	r14,r14,4096
	l.j     	.L11618	# delay slot filled
	l.sh    	28(r30),r14	 # movhi
.L11553:
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.sub   	r14,r0,r15
	l.sw    	12(r22),r26	 # SI store
	l.or    	r14,r14,r15
	l.sb    	17(r22),r7	    # movqi
	l.xori  	r14,r14,0xffff
	l.sw    	8(r22),r16	 # SI store
	l.j     	.L11554	# delay slot filled
	l.srli  	r26,r14,31
.L11531:
	l.lwz   	r14,40(r20)	 # SI load
	l.lwz   	r13,0(r20)	 # SI load
	l.lwz   	r19,4(r14)	 # SI load
	l.lwz   	r2,0(r14)	 # SI load
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.sw    	4(r19),r2	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.jal   	btreeCursor	# delay slot filled
	l.ori   	r7,r13,0	 # move reg to reg
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L11529	# delay slot filled
	l.sb    	29(r20),r6	    # movqi
.L11418:
	l.lwz   	r14,0(r16)	 # SI load
	l.lwz   	r7,76(r1)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.add   	r3,r7,r14
	l.jal   	sqlite3VdbeSerialGet	# delay slot filled
	l.lwz   	r5,60(r1)	 # SI load
	l.j     	.L12331	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
.L12142:
	l.lwz   	r2,16(r1)	 # SI load
	l.movhi  	r5,hi(.LC306)
	l.addi  	r3,r2,116
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC306)
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
	l.j     	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
.L12170:
	l.jal   	unlockBtreeIfUnused	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,44(r1)	 # SI load
	l.jal   	sqlite3VdbeMemSetNull	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.j     	.L12305	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
.L12066:
	l.bf	.L12391	# delay slot filled
	l.addi  	r6,r13,1
	l.lwz   	r6,2812(r1)	 # SI load
	l.sfgtu 	r6,r13
	l.bf	.L12392	# delay slot filled
	l.ori   	r15,r6,0	 # move reg to reg
	l.addi  	r6,r13,1
.L12391:
	l.sfltu 	r6,r13
	l.bf	.L11590	# delay slot filled
	l.addi  	r15,r0,1	 # move immediate I
	l.addi  	r15,r0,0	 # move immediate I
.L11590:
	l.add   	r15,r15,r18
	l.sw    	2812(r1),r6	 # SI store
	l.sw    	2808(r1),r15	 # SI store
	l.j     	.L11588	# delay slot filled
	l.ori   	r21,r15,0	 # move reg to reg
.L12234:
	l.lwz   	r3,4(r11)	 # SI load
	l.jal   	tableOfTrigger.clone.91	# delay slot filled
	l.addi  	r4,r11,32
	l.lwz   	r14,68(r11)	 # SI load
	l.sfne 	r14,r18
	l.bnf	.L11711	# delay slot filled
	l.addi  	r6,r11,68
.L11997:
	l.addi  	r6,r14,40
	l.lwz   	r14,40(r14)	 # SI load
	l.sfne 	r18,r14
	l.bf	.L11997
	l.nop			# nop delay slot
.L11711:
	l.lwz   	r14,40(r14)	 # SI load
	l.j     	.L11709	# delay slot filled
	l.sw    	0(r6),r14	 # SI store
.L12261:
	l.lhs   	r14,88(r18)	 # extendhisi2_no_sext_mem
	l.addi  	r15,r14,23
	l.addi  	r14,r14,86
	l.slli  	r2,r15,2
	l.add   	r14,r14,r14
	l.add   	r15,r18,r14
	l.add   	r14,r18,r2
	l.lhz   	r4,0(r15)	 # zero_extendqisi2
	l.jal   	sqlite3BtreeParseCell	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r11,r0,1	 # movqi: move immediate
	l.j     	.L11637	# delay slot filled
	l.sb    	62(r18),r11	    # movqi
.L11841:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L11267	# delay slot filled
	l.sw    	68(r1),r6	 # SI store
.L11309:
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
		l.lwz   	r5, 44(r1)
		l.lwz   	r6, 44+4(r1)
	l.jal   	__muldf3
	l.nop			# nop delay slot
	l.j     	.L12329	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L12262:
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
		l.lwz   	r5, 44(r1)
		l.lwz   	r6, 44+4(r1)
	l.jal   	__adddf3
	l.nop			# nop delay slot
	l.j     	.L12329	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L12150:
	l.lbz   	r21,30(r2)	 # zero_extendqisi2
	l.sfeqi	r21,0
	l.bf	.L11395
	l.nop			# nop delay slot
	l.lbz   	r16,63(r18)	 # zero_extendqisi2
	l.sfnei	r16,1
	l.bnf	.L12281	# delay slot filled
	l.lwz   	r2,76(r1)	 # SI load
	l.ori   	r22,r2,0	 # move reg to reg
	l.ori   	r26,r22,0	 # move reg to reg
.L11400:
	l.lwz   	r15,2832(r1)	 # SI load
	l.sfgts 	r15,r2
	l.bf	.L11404	# delay slot filled
	l.lwz   	r5,44(r1)	 # SI load
	l.sw    	76(r1),r26	 # SI store
	l.j     	.L11394	# delay slot filled
	l.sw    	104(r5),r26	 # SI store
.L12151:
	l.bf	.L12393	# delay slot filled
	l.lwz   	r3,84(r1)	 # SI load
	l.lwz   	r11,44(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.lbz   	r6,30(r11)	 # zero_extendqisi2
	l.ori   	r4,r8,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r7,r1,2376
	l.sh    	2404(r1),r8	 # movhi
	l.jal   	sqlite3VdbeMemFromBtree	# delay slot filled
	l.sw    	2392(r1),r8	 # SI store
	l.sfnei	r11,0
	l.bf	.L11814	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r26,2396(r1)	 # SI load
	l.j     	.L11407	# delay slot filled
	l.lwz   	r22,2844(r1)	 # SI load
.L11389:
	l.lhz   	r14,58(r18)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bnf	.L12282	# delay slot filled
	l.addi  	r5,r18,32
.L11390:
	l.lwz   	r2,44(r18)	 # SI load
	l.addi  	r8,r0,0	 # move immediate I
	l.sw    	2832(r1),r2	 # SI store
	l.j     	.L11385	# delay slot filled
	l.sw    	76(r1),r8	 # SI store
.L11308:
		l.lwz   	r3, 60(r1)
		l.lwz   	r4, 60+4(r1)
		l.lwz   	r5, 44(r1)
		l.lwz   	r6, 44+4(r1)
	l.jal   	__subdf3
	l.nop			# nop delay slot
	l.j     	.L12329	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L11405:
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.addi  	r4,r1,2844
	l.lwz   	r22,2844(r1)	 # SI load
	l.j     	.L11406	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L12134:
	l.lwz   	r7,16(r1)	 # SI load
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r7,116
.L12275:
	l.lwz   	r15,144(r28)	 # SI load
	l.sfgtsi	r15,1
	l.bnf	.L11488	# delay slot filled
	l.lwz   	r11,16(r1)	 # SI load
	l.movhi  	r6,hi(.LC274)
	l.addi  	r2,r11,116
	l.j     	.L11490	# delay slot filled
	l.ori   	r6,r6,lo(.LC274)
.L12297:
.L11704:
	l.lwz   	r6,32(r18)	 # SI load
	l.j     	.L11702	# delay slot filled
	l.sw    	32(r14),r6	 # SI store
.L11547:
	l.jal   	__floatdidf	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.lwz   	r6,52(r1)	 # SI load
		l.lwz   	r3, 8(r6)
		l.lwz   	r4, 8+4(r6)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__ltdf2
	l.nop			# nop delay slot
	l.sfltsi	r11,0
	l.bnf	.L12389	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r13,r26,-1
	l.sfltu 	r13,r26
	l.bf	.L11552	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.ori   	r2,r14,0	 # move reg to reg
.L11552:
	l.addi  	r14,r16,-1
	l.ori   	r26,r13,0	 # move reg to reg
	l.j     	.L11535	# delay slot filled
	l.add   	r16,r2,r14
.L11417:
	l.add   	r22,r8,r22
	l.lwz   	r14,0(r22)	 # SI load
	l.sfleui	r14,11
	l.bf	.L11420	# delay slot filled
	l.movhi  	r11,hi(aSize.12542)
	l.addi  	r14,r14,-12
	l.srli  	r14,r14,1
.L11421:
	l.lwz   	r4,60(r1)	 # SI load
	l.jal   	sqlite3VdbeMemMove	# delay slot filled
	l.addi  	r3,r1,2376
	l.lwz   	r2,44(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.lbz   	r6,30(r2)	 # zero_extendqisi2
	l.lwz   	r4,0(r16)	 # SI load
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemFromBtree	# delay slot filled
	l.addi  	r7,r1,2376
	l.sfnei	r11,0
	l.bf	.L11814	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r20,0(r22)	 # SI load
	l.sfleui	r20,9
	l.bf	.L11422	# delay slot filled
	l.lwz   	r2,2396(r1)	 # SI load
	l.lwz   	r3,44(r1)	 # SI load
	l.lbz   	r14,23(r3)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L11422
	l.nop			# nop delay slot
	l.lbz   	r14,29(r3)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bf	.L11422
	l.nop			# nop delay slot
	l.lwz   	r14,24(r3)	 # SI load
	l.sflesi	r14,1
	l.bf	.L11422	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	SerialGetScopy	# delay slot filled
	l.lwz   	r5,60(r1)	 # SI load
	l.j     	.L12331	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
.L11483:
	l.lwz   	r2,16(r1)	 # SI load
	l.movhi  	r5,hi(.LC282)
	l.addi  	r3,r2,116
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r5,r5,lo(.LC282)
	l.sw    	0(r1),r30	 # SI store
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
	l.j     	.L12303	# delay slot filled
	l.lwz   	r7,16(r1)	 # SI load
.L12130:
	l.lwz   	r2,16(r1)	 # SI load
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r2,116
.L11582:
	l.lwz   	r3,0(r26)	 # SI load
	l.jal   	sqlite3BtreeKeySize	# delay slot filled
	l.addi  	r4,r1,2808
	l.movhi 	r7,hi(2147418112)	 # move immediate M
	l.lwz   	r6,2808(r1)	 # SI load
	l.ori   	r7,r7,65535
	l.sfne 	r6,r7
	l.bnf	.L12283	# delay slot filled
	l.lwz   	r15,2812(r1)	 # SI load
.L11583:
	l.addi  	r2,r15,1
	l.sfltu 	r2,r15
	l.bf	.L11584	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.addi  	r14,r0,0	 # move immediate I
.L11584:
	l.add   	r6,r14,r6
	l.sw    	2812(r1),r2	 # SI store
	l.j     	.L11581	# delay slot filled
	l.sw    	2808(r1),r6	 # SI store
.L12133:
	l.lwz   	r11,16(r1)	 # SI load
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r11,116
.L11494:
	l.sfnei	r16,2
	l.bnf	.L12284	# delay slot filled
	l.addi  	r30,r0,0	 # move immediate I
.L11493:
	l.lwz   	r19,468(r28)	 # SI load
.L12337:
	l.sfeq 	r19,r20
	l.bf	.L12394	# delay slot filled
	l.sfnei	r16,1
	l.ori   	r4,r19,0	 # move reg to reg
.L11995:
	l.lwz   	r2,4(r4)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.sw    	468(r28),r2	 # SI store
	l.lwz   	r2,472(r28)	 # SI load
	l.lwz   	r4,468(r28)	 # SI load
	l.addi  	r2,r2,-1
	l.sfne 	r4,r20
	l.bf	.L11995	# delay slot filled
	l.sw    	472(r28),r2	 # SI store
	l.sfnei	r16,1
.L12394:
	l.bf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.lwz   	r2,4(r20)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	468(r28),r2	 # SI store
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.sfnei	r26,0
	l.bf	.L12302	# delay slot filled
	l.sfeqi	r30,0
	l.lwz   	r14,472(r28)	 # SI load
	l.addi  	r14,r14,-1
	l.j     	.L12403	# delay slot filled
	l.sw    	472(r28),r14	 # SI store
.L11341:
	l.addi  	r14,r0,31	 # move immediate I
	l.sub   	r14,r14,r12
	l.srl   	r6,r26,r12
	l.sll   	r14,r2,r14
	l.sra   	r15,r22,r12
	l.j     	.L11338	# delay slot filled
	l.or    	r6,r14,r6
.L11339:
	l.addi  	r14,r0,31	 # move immediate I
	l.sub   	r14,r14,r12
	l.sll   	r15,r22,r12
	l.srl   	r14,r2,r14
	l.sll   	r6,r26,r12
	l.j     	.L11338	# delay slot filled
	l.or    	r15,r14,r15
.L12209:
	l.sfgtu 	r5,r22
	l.bnf	.L11936	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
	l.j     	.L12406	# delay slot filled
	l.movhi  	r5,hi(.LC123)
.L12249:
	l.jal   	sqlite3RowSetClear	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.j     	.L11742
	l.nop			# nop delay slot
.L12173:
	l.jal   	sqlite3StrAccumReset	# delay slot filled
	l.addi  	r26,r0,0	 # move immediate I
	l.lwz   	r24,2736(r1)	 # SI load
	l.j     	.L11737	# delay slot filled
	l.addi  	r24,r24,1
.L11404:
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r6,44(r1)	 # SI load
	l.j     	.L11394	# delay slot filled
	l.sw    	104(r6),r7	 # SI store
.L12273:
	l.bf	.L11537	# delay slot filled
	l.movhi  	r14,hi(.LC273)
	l.lwz   	r4,52(r1)	 # SI load
	l.ori   	r14,r14,lo(.LC273)
	l.movhi  	r20,hi(.LC279)
		l.lwz   	r3, 8(r4)
		l.lwz   	r4, 8+4(r4)
		l.lwz   	r5, 0(r14)
		l.lwz   	r6, 4(r14)
		l.sw    	44(r1), r3
		l.sw    	44+4(r1), r4
	l.jal   	__ltdf2	# delay slot filled
	l.ori   	r20,r20,lo(.LC279)
	l.sfltsi	r11,0
	l.bf	.L12395	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
		l.lwz   	r5, 0(r20)
		l.lwz   	r6, 4(r20)
	l.jal   	__gtdf2
	l.nop			# nop delay slot
	l.sfgtsi	r11,0
	l.bnf	.L11537
	l.nop			# nop delay slot
.L12395:
		l.lwz   	r3, 44(r1)
		l.lwz   	r4, 44+4(r1)
		l.lwz   	r5, 0(r20)
		l.lwz   	r6, 4(r20)
	l.jal   	__ltdf2	# delay slot filled
	l.sw    	2844(r1),r14	 # SI store
	l.sfltsi	r11,0
	l.bnf	.L12062	# delay slot filled
	l.xori  	r20,r18,55
	l.xori  	r20,r18,109
	l.sub   	r14,r0,r20
	l.or    	r14,r14,r20
	l.sfgesi	r14,0
	l.bf	.L11939	# delay slot filled
	l.xori  	r20,r18,123
	l.sub   	r14,r0,r20
	l.or    	r14,r14,r20
	l.sfltsi	r14,0
	l.bnf	.L11939
	l.nop			# nop delay slot
.L11823:
	l.lwz   	r2,8(r24)	 # SI load
.L12335:
	l.addi  	r2,r2,-1
	l.j     	.L11267	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
.L11643:
	l.jal   	sqlite3VdbeCursorMoveto	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lbz   	r20,17(r14)	 # zero_extendqisi2
	l.sfeqi	r20,0
	l.bf	.L11644
	l.nop			# nop delay slot
		l.lwz   	r20, 8(r14)
		l.lwz   	r21, 8+4(r14)
		l.sw    	2808(r1), r20
		l.sw    	2808+4(r1), r21
	l.j     	.L12332	# delay slot filled
	l.lwz   	r7,24(r1)	 # SI load
.L12178:
	l.lwz   	r8,16(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r26,r8,116
	l.j     	.L12307	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
.L12296:
	l.j     	.L12333	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L11395:
	l.lbz   	r16,63(r18)	 # zero_extendqisi2
	l.sfnei	r16,1
	l.bnf	.L12285	# delay slot filled
	l.lwz   	r2,76(r1)	 # SI load
	l.j     	.L11400	# delay slot filled
	l.ori   	r26,r2,0	 # move reg to reg
.L11801:
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.sb    	30(r28),r7	    # movqi
	l.lwz   	r14,28(r22)	 # SI load
	l.jalr  	r14	# delay slot filled
	l.lwz   	r3,2852(r1)	 # SI load
	l.j     	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
.L12270:
	l.movhi  	r8,hi(.LC124)
	l.j     	.L11817	# delay slot filled
	l.ori   	r8,r8,lo(.LC124)
.L12193:
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r6,12(r1)	 # SI load
	l.sw    	100(r5),r11	 # SI store
	l.j     	.L11270	# delay slot filled
	l.sw    	96(r5),r6	 # SI store
.L12267:
	l.bnf	.L11949	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
	l.j     	.L12406	# delay slot filled
	l.movhi  	r5,hi(.LC123)
.L12283:
	l.sfnei	r15,-1
	l.bf	.L11583
	l.nop			# nop delay slot
	l.j     	.L11581	# delay slot filled
	l.sb    	19(r26),r2	    # movqi
.L12274:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r5,r1,2840
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11674	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r3,0(r26)	 # SI load
	l.lwz   	r4,4(r26)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3BtreeClearTable.clone.173	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L12286	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfleui	r16,1
	l.bf	.L11676	# delay slot filled
	l.lwz   	r3,2840(r1)	 # SI load
	l.lbz   	r15,18(r18)	 # zero_extendqisi2
	l.sfeqi	r15,0
	l.bf	.L11677	# delay slot filled
	l.addi  	r4,r0,4	 # move immediate I
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetMeta	# delay slot filled
	l.addi  	r5,r1,2832
	l.sfeqi	r11,0
	l.bnf	.L12287	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r15,2832(r1)	 # SI load
	l.sfne 	r16,r15
	l.bnf	.L12288
	l.nop			# nop delay slot
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,2840(r1)	 # SI load
	l.ori   	r6,r30,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,2832(r1)	 # SI load
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.addi  	r5,r1,2836
	l.sfnei	r11,0
	l.bnf	.L12289	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11899:
	l.j     	.L11674	# delay slot filled
	l.sw    	116(r1),r2	 # SI store
.L12215:
	l.bf	.L12396	# delay slot filled
	l.ori   	r3,r19,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L12396	# delay slot filled
	l.addi  	r15,r0,1	 # move immediate I
.L12271:
	l.movhi  	r4,hi(.LC296)
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	execSql	# delay slot filled
	l.ori   	r4,r4,lo(.LC296)
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lbs   	r14,33(r28)	 # extendqisi2_no_sext_mem
	l.sfltsi	r14,0
	l.bf	.L12290	# delay slot filled
	l.ori   	r15,r14,0	 # move reg to reg
.L11776:
	l.lwz   	r2,4(r22)	 # SI load
	l.lwz   	r18,0(r22)	 # SI load
	l.lbz   	r13,17(r2)	 # zero_extendqisi2
	l.andi  	r19,r15,0xff	 # zero_extendqisi2
	l.sw    	4(r2),r18	 # SI store
	l.sfeqi	r13,0
	l.bf	.L11777	# delay slot filled
	l.sub   	r18,r0,r19
	l.srli  	r15,r18,31
	l.lbz   	r14,18(r2)	 # zero_extendqisi2
	l.sfne 	r15,r14
	l.bnf	.L12397	# delay slot filled
	l.xori  	r14,r19,2
.L11778:
	l.movhi  	r4,hi(.LC297)
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	execSql	# delay slot filled
	l.ori   	r4,r4,lo(.LC297)
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC298)
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	execExecSql	# delay slot filled
	l.ori   	r4,r4,lo(.LC298)
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC299)
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	execExecSql	# delay slot filled
	l.ori   	r4,r4,lo(.LC299)
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC300)
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	execExecSql	# delay slot filled
	l.ori   	r4,r4,lo(.LC300)
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC301)
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	execExecSql	# delay slot filled
	l.ori   	r4,r4,lo(.LC301)
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC302)
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	execExecSql	# delay slot filled
	l.ori   	r4,r4,lo(.LC302)
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC303)
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	execExecSql	# delay slot filled
	l.ori   	r4,r4,lo(.LC303)
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC304)
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	execSql	# delay slot filled
	l.ori   	r4,r4,lo(.LC304)
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.movhi  	r2,hi(aCopy.19698)
	l.ori   	r2,r2,lo(aCopy.19698)
.L11779:
	l.lbz   	r14,0(r2)	 # zero_extendqisi2
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetMeta	# delay slot filled
	l.addi  	r5,r1,2832
	l.sfnei	r11,0
	l.bf	.L12115	# delay slot filled
	l.lwz   	r6,2832(r1)	 # SI load
	l.lbz   	r7,1(r2)	 # zero_extendqisi2
	l.lwz   	r3,0(r22)	 # SI load
	l.lwz   	r4,4(r22)	 # SI load
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3BtreeUpdateMeta.clone.171	# delay slot filled
	l.add   	r6,r7,r6
	l.sfnei	r11,0
	l.bf	.L12115	# delay slot filled
	l.movhi  	r7,hi(aCopy.19698+8)
	l.addi  	r2,r2,2
	l.ori   	r7,r7,lo(aCopy.19698+8)
	l.sfne 	r2,r7
	l.bf	.L11779	# delay slot filled
	l.addi  	r5,r0,44	 # move immediate I
	l.lwz   	r13,4(r24)	 # SI load
	l.lwz   	r2,0(r24)	 # SI load
	l.lwz   	r7,0(r22)	 # SI load
	l.lwz   	r16,4(r22)	 # SI load
	l.sw    	4(r13),r2	 # SI store
	l.sw    	4(r16),r7	 # SI store
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r3,r1,2616
	l.jal   	memset	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
	l.movhi  	r8,hi(.LC308)
	l.lwz   	r2,0(r22)	 # SI load
	l.ori   	r8,r8,lo(.LC308)
	l.addi  	r3,r1,2616
	l.lwz   	r4,0(r8)	 # SI load
	l.sw    	2636(r1),r2	 # SI store
	l.sw    	2640(r1),r22	 # SI store
	l.sw    	2620(r1),r24	 # SI store
	l.jal   	sqlite3_backup_step	# delay slot filled
	l.sw    	2632(r1),r16	 # SI store
	l.jal   	sqlite3_backup_finish	# delay slot filled
	l.addi  	r3,r1,2616
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r2,4(r24)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.sb    	17(r2),r11	    # movqi
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r2,4(r22)	 # SI load
	l.lwz   	r14,0(r22)	 # SI load
	l.jal   	sqlite3BtreeCommitPhaseOne	# delay slot filled
	l.sw    	4(r2),r14	 # SI store
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.jal   	sqlite3BtreeCommitPhaseTwo	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r13,4(r22)	 # SI load
	l.lwz   	r2,0(r22)	 # SI load
	l.lbz   	r15,18(r13)	 # zero_extendqisi2
	l.sfeqi	r15,0
	l.bf	.L11780	# delay slot filled
	l.sw    	4(r13),r2	 # SI store
	l.lbz   	r14,19(r13)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L11780	# delay slot filled
	l.addi  	r15,r0,2	 # move immediate I
	l.ori   	r15,r16,0	 # move reg to reg
.L11780:
	l.lwz   	r18,4(r24)	 # SI load
	l.lwz   	r19,0(r24)	 # SI load
	l.lbz   	r2,17(r18)	 # zero_extendqisi2
	l.andi  	r21,r15,0xff	 # zero_extendqisi2
	l.sw    	4(r18),r19	 # SI store
	l.sfeqi	r2,0
	l.bf	.L11781	# delay slot filled
	l.sub   	r19,r0,r21
	l.srli  	r15,r19,31
	l.lbz   	r14,18(r18)	 # zero_extendqisi2
	l.sfne 	r15,r14
	l.bnf	.L11781
	l.nop			# nop delay slot
.L11782:
	l.lhz   	r5,20(r13)	 # zero_extendqisi2
	l.lwz   	r3,0(r24)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r6,76(r1)	 # SI load
	l.jal   	sqlite3BtreeSetPageSize.clone.103	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.j     	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L12281:
	l.lhs   	r22,88(r18)	 # extendhisi2_no_sext_mem
	l.addi  	r15,r22,23
	l.lhz   	r23,58(r18)	 # zero_extendqisi2
	l.slli  	r15,r15,2
	l.sfnei	r23,0
	l.add   	r21,r18,r15
	l.bnf	.L12291	# delay slot filled
	l.lwz   	r2,0(r21)	 # SI load
.L11397:
	l.lbz   	r13,2(r2)	 # zero_extendqisi2
	l.lhz   	r19,52(r18)	 # zero_extendqisi2
	l.lwz   	r22,32(r18)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.sfne 	r13,r2
	l.bf	.L11398	# delay slot filled
	l.add   	r22,r22,r19
	l.lwz   	r2,40(r18)	 # SI load
.L11398:
	l.lhz   	r23,54(r18)	 # zero_extendqisi2
	l.sfleu 	r2,r23
	l.bf	.L11400	# delay slot filled
	l.ori   	r26,r22,0	 # move reg to reg
	l.j     	.L11400	# delay slot filled
	l.ori   	r2,r23,0	 # move reg to reg
.L12285:
	l.lhs   	r22,88(r18)	 # extendhisi2_no_sext_mem
	l.addi  	r15,r22,23
	l.lhz   	r23,58(r18)	 # zero_extendqisi2
	l.slli  	r15,r15,2
	l.sfnei	r23,0
	l.add   	r21,r18,r15
	l.bnf	.L12292	# delay slot filled
	l.lwz   	r2,0(r21)	 # SI load
.L11402:
	l.lhz   	r13,52(r18)	 # zero_extendqisi2
	l.lbz   	r2,2(r2)	 # zero_extendqisi2
	l.lwz   	r19,32(r18)	 # SI load
	l.addi  	r22,r0,0	 # move immediate I
	l.sfne 	r2,r22
	l.bf	.L11403	# delay slot filled
	l.add   	r13,r19,r13
	l.lwz   	r22,40(r18)	 # SI load
.L11403:
	l.lhz   	r15,54(r18)	 # zero_extendqisi2
	l.add   	r26,r13,r22
	l.j     	.L11400	# delay slot filled
	l.sub   	r2,r15,r22
.L12221:
	l.bnf	.L12398	# delay slot filled
	l.lwz   	r6,24(r1)	 # SI load
	l.j     	.L12311	# delay slot filled
	l.lwz   	r2,16(r1)	 # SI load
.L12284:
	l.lwz   	r30,12(r28)	 # SI load
	l.andi  	r30,r30,16
	l.sfeqi	r30,0
	l.bf	.L11493
	l.nop			# nop delay slot
	l.lwz   	r30,140(r28)	 # SI load
.L11496:
	l.sfnei	r30,0
	l.bnf	.L12293	# delay slot filled
	l.addi  	r11,r0,1	 # movqi: move immediate
	l.sb    	126(r30),r11	    # movqi
	l.j     	.L11496	# delay slot filled
	l.lwz   	r30,8(r30)	 # SI load
.L11658:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.addi  	r4,r1,2844
	l.j     	.L12334	# delay slot filled
	l.lwz   	r6,2844(r1)	 # SI load
.L12276:
	l.lbz   	r26,480(r28)	 # zero_extendqisi2
	l.sfeqi	r26,0
	l.bf	.L11491	# delay slot filled
	l.xori  	r23,r16,1
	l.sub   	r21,r0,r23
	l.or    	r21,r21,r23
	l.sfltsi	r21,0
	l.bf	.L11864	# delay slot filled
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sb    	28(r28),r4	    # movqi
	l.jal   	sqlite3VdbeHalt	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.sfnei	r11,5
	l.bnf	.L12294	# delay slot filled
	l.addi  	r26,r0,1	 # move immediate I
	l.sb    	480(r28),r22	    # movqi
	l.lwz   	r8,16(r1)	 # SI load
	l.j     	.L11493	# delay slot filled
	l.lwz   	r30,100(r8)	 # SI load
.L11422:
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeSerialGet	# delay slot filled
	l.lwz   	r5,60(r1)	 # SI load
	l.j     	.L12331	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
.L11420:
	l.ori   	r11,r11,lo(aSize.12542)
	l.add   	r14,r14,r11
	l.j     	.L11421	# delay slot filled
	l.lbz   	r14,0(r14)	 # zero_extendqisi2
.L12282:
	l.lhs   	r14,88(r18)	 # extendhisi2_no_sext_mem
	l.addi  	r15,r14,23
	l.addi  	r14,r14,86
	l.slli  	r2,r15,2
	l.add   	r14,r14,r14
	l.add   	r15,r18,r14
	l.add   	r14,r18,r2
	l.lhz   	r4,0(r15)	 # zero_extendqisi2
	l.jal   	sqlite3BtreeParseCell	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.j     	.L11390	# delay slot filled
	l.sb    	62(r18),r7	    # movqi
.L12263:
	l.bf	.L11314	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r7,r0,1	 # move immediate I
		l.sw    	44(r1), r6
		l.sw    	44+4(r1), r7
	l.j     	.L11314
	l.nop			# nop delay slot
.L11837:
	l.j     	.L11345	# delay slot filled
	l.addi  	r30,r0,20	 # move immediate I
.L12062:
	l.sub   	r14,r0,r20
	l.or    	r14,r14,r20
	l.sfgesi	r14,0
	l.bf	.L11940	# delay slot filled
	l.xori  	r20,r18,70
	l.sub   	r14,r0,r20
	l.or    	r14,r14,r20
	l.sfltsi	r14,0
	l.bf	.L11823
	l.nop			# nop delay slot
.L11940:
	l.lwz   	r3,0(r22)	 # SI load
	l.jal   	sqlite3BtreeLast	# delay slot filled
	l.addi  	r4,r1,2844
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11545:
	l.lwz   	r6,2844(r1)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.j     	.L12335	# delay slot filled
	l.lwz   	r2,8(r24)	 # SI load
.L12233:
	l.lwz   	r2,1916(r1)	 # SI load
	l.add   	r2,r2,r6
	l.lbs   	r6,0(r2)	 # extendqisi2_no_sext_mem
	l.sfltsi	r6,0
	l.bf	.L11661	# delay slot filled
	l.lbz   	r14,0(r2)	 # zero_extendqisi2
	l.sw    	2832(r1),r14	 # SI store
	l.lwz   	r2,2832(r1)	 # SI load
.L12336:
	l.addi  	r20,r2,-1
	l.sfgtui	r20,8
	l.bf	.L11663	# delay slot filled
	l.addi  	r14,r0,1	 # movqi: move immediate
	l.addi  	r14,r0,0	 # movqi: move immediate
.L11663:
	l.andi  	r14,r14,0xff	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L12399	# delay slot filled
	l.addi  	r3,r1,1896
	l.xori  	r20,r2,7
	l.sub   	r14,r0,r20
	l.or    	r14,r14,r20
	l.sfgesi	r14,0
	l.bf	.L12399
	l.nop			# nop delay slot
	l.movhi  	r7,hi(aSize.12542)
	l.ori   	r7,r7,lo(aSize.12542)
	l.add   	r14,r2,r7
	l.lbz   	r6,0(r14)	 # zero_extendqisi2
	l.lwz   	r14,1920(r1)	 # SI load
	l.sub   	r18,r14,r6
	l.lwz   	r6,2844(r1)	 # SI load
	l.sfltu 	r18,r6
	l.bf	.L12399	# delay slot filled
	l.lwz   	r14,1916(r1)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.add   	r3,r14,r18
	l.jal   	sqlite3VdbeSerialGet	# delay slot filled
	l.addi  	r5,r1,1656
		l.lwz   	r4, 1656(r1)
		l.lwz   	r5, 1656+4(r1)
		l.sw    	44(r1), r4
		l.sw    	44+4(r1), r5
	l.jal   	sqlite3VdbeMemRelease	# delay slot filled
	l.addi  	r3,r1,1896
	l.lwz   	r5,24(r1)	 # SI load
	l.addi  	r6,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r5)	 # zero_extendqisi2
	l.and   	r14,r14,r6
		l.lwz   	r7, 44(r1)
		l.lwz   	r8, 44+4(r1)
	l.ori   	r14,r14,4
		l.sw    	0(r5), r7
		l.sw    	4(r5), r8
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r5),r14	 # movhi
.L11661:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3GetVarint32	# delay slot filled
	l.addi  	r4,r1,2832
	l.j     	.L12336	# delay slot filled
	l.lwz   	r2,2832(r1)	 # SI load
.L12293:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.j     	.L12337	# delay slot filled
	l.lwz   	r19,468(r28)	 # SI load
.L12294:
	l.lwz   	r5,16(r1)	 # SI load
	l.lwz   	r6,12(r1)	 # SI load
	l.lwz   	r7,36(r1)	 # SI load
	l.sw    	96(r5),r6	 # SI store
	l.sb    	28(r7),r22	    # movqi
	l.sw    	100(r5),r11	 # SI store
	l.j     	.L11270	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11864:
	l.j     	.L11491	# delay slot filled
	l.addi  	r26,r0,1	 # move immediate I
.L12165:
	l.bnf	.L11937
	l.nop			# nop delay slot
	l.j     	.L11345	# delay slot filled
	l.addi  	r30,r0,11	 # move immediate I
.L11939:
	l.lwz   	r18,0(r22)	 # SI load
	l.jal   	moveToRoot	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L11345	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lbz   	r14,63(r18)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L11544	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L11823	# delay slot filled
	l.sw    	2844(r1),r2	 # SI store
.L12171:
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	unlockBtreeIfUnused	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.j     	.L12338	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
.L12279:
	l.j     	.L11825	# delay slot filled
	l.addi  	r30,r0,6	 # move immediate I
.L11505:
	l.lwz   	r4,36(r1)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	sqlite3VdbeHalt	# delay slot filled
	l.sb    	28(r4),r2	    # movqi
	l.sfnei	r11,5
	l.bf	.L11506	# delay slot filled
	l.ori   	r8,r11,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r7,12(r1)	 # SI load
	l.sub   	r2,r5,r2
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r11,36(r1)	 # SI load
	l.sw    	96(r6),r7	 # SI store
	l.sb    	28(r11),r2	    # movqi
	l.j     	.L11270	# delay slot filled
	l.sw    	100(r6),r8	 # SI store
.L11544:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	moveToLeftmost	# delay slot filled
	l.sw    	2844(r1),r11	 # SI store
	l.sfnei	r11,0
	l.bnf	.L11545	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L12309	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
.L12292:
	l.addi  	r22,r22,86
	l.ori   	r3,r2,0	 # move reg to reg
	l.add   	r22,r22,r22
	l.addi  	r5,r18,32
	l.add   	r21,r18,r22
	l.jal   	sqlite3BtreeParseCell	# delay slot filled
	l.lhz   	r4,0(r21)	 # zero_extendqisi2
	l.j     	.L11402	# delay slot filled
	l.sb    	62(r18),r16	    # movqi
.L12268:
	l.lbz   	r14,29(r20)	 # zero_extendqisi2
	l.addi  	r14,r14,-1
	l.j     	.L11529	# delay slot filled
	l.srli  	r18,r14,31
.L12289:
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,2836(r1)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	relocatePage	# delay slot filled
	l.ori   	r8,r11,0	 # move reg to reg
	l.lwz   	r3,2836(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfnei	r30,0
	l.bf	.L11899	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,2832(r1)	 # SI load
	l.jal   	sqlite3BtreeGetPage	# delay slot filled
	l.addi  	r5,r1,2836
	l.sfnei	r11,0
	l.bnf	.L12295	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L11674	# delay slot filled
	l.sw    	116(r1),r5	 # SI store
.L12288:
	l.jal   	freePage	# delay slot filled
	l.lwz   	r3,2840(r1)	 # SI load
	l.lwz   	r3,2840(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfnei	r30,0
	l.bf	.L11899
	l.nop			# nop delay slot
	l.sw    	116(r1),r30	 # SI store
	l.lwz   	r22,2832(r1)	 # SI load
.L11680:
	l.movhi  	r20,hi(sqlite3PendingByte)
	l.lhz   	r4,20(r18)	 # zero_extendqisi2
	l.ori   	r20,r20,lo(sqlite3PendingByte)
	l.addi  	r22,r22,-1
	l.lwz   	r3,0(r20)	 # SI load
	l.jal   	__divsi3	# delay slot filled
	l.sw    	2832(r1),r22	 # SI store
	l.addi  	r16,r11,1
	l.sfne 	r22,r16
	l.bf	.L11681
	l.nop			# nop delay slot
	l.sw    	2832(r1),r11	 # SI store
	l.ori   	r22,r11,0	 # move reg to reg
.L11681:
	l.lhz   	r3,22(r18)	 # zero_extendqisi2
	l.jal   	__udivsi3	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.andi  	r21,r11,0xffff	 # zero_extendqisi2
	l.addi  	r3,r22,-2
	l.addi  	r18,r21,1
	l.jal   	__udivsi3	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.mul   	r18,r11,r18
	l.addi  	r21,r18,2
	l.sfne 	r16,r21
	l.bf	.L12400	# delay slot filled
	l.sfne 	r22,r21
	l.addi  	r21,r18,3
	l.sfne 	r22,r21
.L12400:
	l.bf	.L11683	# delay slot filled
	l.addi  	r20,r22,-1
	l.sw    	2832(r1),r20	 # SI store
	l.ori   	r22,r20,0	 # move reg to reg
.L11683:
	l.lwz   	r3,0(r26)	 # SI load
	l.lwz   	r4,4(r26)	 # SI load
	l.addi  	r5,r0,4	 # move immediate I
	l.jal   	sqlite3BtreeUpdateMeta.clone.171	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r5,24(r1)	 # SI load
.L12340:
	l.addi  	r7,r0,-16640	 # move immediate I
	l.lhz   	r20,28(r5)	 # zero_extendqisi2
	l.lwz   	r8,116(r1)	 # SI load
	l.and   	r6,r20,r7
	l.srai  	r2,r8,31
	l.ori   	r6,r6,4
	l.sw    	4(r5),r8	 # SI store
	l.sh    	28(r5),r6	 # movhi
	l.sfnei	r30,0
	l.bf	.L11814	# delay slot filled
	l.sw    	0(r5),r2	 # SI store
	l.sfeqi	r8,0
	l.bf	.L12299	# delay slot filled
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r2,8(r28)	 # SI load
	l.add   	r14,r2,r14
	l.lwz   	r2,20(r14)	 # SI load
	l.lwz   	r6,12(r2)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L11685	# delay slot filled
	l.lwz   	r7,4(r24)	 # SI load
	l.j     	.L12000	# delay slot filled
	l.ori   	r5,r8,0	 # move reg to reg
.L11686:
	l.lwz   	r6,0(r6)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L11685
	l.nop			# nop delay slot
.L12000:
	l.lwz   	r4,8(r6)	 # SI load
	l.lwz   	r3,24(r4)	 # SI load
	l.sfne 	r3,r5
	l.bf	.L11686
	l.nop			# nop delay slot
	l.j     	.L11686	# delay slot filled
	l.sw    	24(r4),r7	 # SI store
.L11685:
	l.lwz   	r6,28(r2)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L11267	# delay slot filled
	l.lwz   	r4,116(r1)	 # SI load
	l.j     	.L12408	# delay slot filled
	l.lwz   	r3,8(r6)	 # SI load
.L11688:
	l.lwz   	r6,0(r6)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L11267
	l.nop			# nop delay slot
	l.lwz   	r3,8(r6)	 # SI load
.L12408:
	l.lwz   	r2,20(r3)	 # SI load
	l.sfne 	r2,r4
	l.bf	.L11688
	l.nop			# nop delay slot
	l.j     	.L11688	# delay slot filled
	l.sw    	20(r3),r7	 # SI store
.L12295:
	l.jal   	freePage	# delay slot filled
	l.lwz   	r3,2836(r1)	 # SI load
	l.lwz   	r3,2836(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfnei	r30,0
	l.bf	.L11901	# delay slot filled
	l.lwz   	r22,2832(r1)	 # SI load
	l.j     	.L11680	# delay slot filled
	l.sw    	116(r1),r22	 # SI store
.L12287:
	l.lwz   	r3,2840(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.sw    	116(r1),r2	 # SI store
	l.j     	.L12339	# delay slot filled
	l.lwz   	r7,24(r1)	 # SI load
.L11676:
	l.addi  	r4,r0,9	 # move immediate I
	l.jal   	zeroPage	# delay slot filled
	l.sw    	116(r1),r11	 # SI store
	l.lwz   	r3,2840(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r8,24(r1)	 # SI load
	l.addi  	r11,r0,-16640	 # move immediate I
	l.lhz   	r14,28(r8)	 # zero_extendqisi2
	l.and   	r14,r14,r11
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r14,r14,4
		l.sw    	0(r8), r2
		l.sw    	4(r8), r3
	l.j     	.L11267	# delay slot filled
	l.sh    	28(r8),r14	 # movhi
.L12286:
	l.jal   	releasePage	# delay slot filled
	l.lwz   	r3,2840(r1)	 # SI load
	l.j     	.L12339	# delay slot filled
	l.lwz   	r7,24(r1)	 # SI load
.L11677:
	l.jal   	freePage	# delay slot filled
	l.sw    	116(r1),r15	 # SI store
	l.lwz   	r3,2840(r1)	 # SI load
	l.jal   	releasePage	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.j     	.L12340	# delay slot filled
	l.lwz   	r5,24(r1)	 # SI load
.L11901:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L11674	# delay slot filled
	l.sw    	116(r1),r6	 # SI store
.L12291:
	l.addi  	r22,r22,86
	l.ori   	r3,r2,0	 # move reg to reg
	l.add   	r22,r22,r22
	l.addi  	r5,r18,32
	l.add   	r21,r18,r22
	l.jal   	sqlite3BtreeParseCell	# delay slot filled
	l.lhz   	r4,0(r21)	 # zero_extendqisi2
	l.j     	.L11397	# delay slot filled
	l.sb    	62(r18),r16	    # movqi
.L12272:
	l.lwz   	r5,16(r1)	 # SI load
	l.j     	.L11142	# delay slot filled
	l.addi  	r26,r5,116
.L12278:
	l.sfnei	r13,-1
	l.bf	.L11946	# delay slot filled
	l.addi  	r30,r0,13	 # move immediate I
	l.j     	.L12309	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
.L11644:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3BtreeKeySize	# delay slot filled
	l.addi  	r4,r1,2808
		l.lwz   	r20, 2808(r1)
		l.lwz   	r21, 2808+4(r1)
	l.j     	.L12332	# delay slot filled
	l.lwz   	r7,24(r1)	 # SI load
.L12115:
	l.j     	.L11773	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
.L11781:
	l.xori  	r14,r21,2
	l.srli  	r15,r19,31
	l.addi  	r14,r14,-1
	l.srli  	r14,r14,31
	l.sb    	18(r18),r15	    # movqi
	l.sb    	19(r18),r14	    # movqi
	l.lwz   	r18,4(r24)	 # SI load
	l.j     	.L11782	# delay slot filled
	l.lwz   	r13,4(r22)	 # SI load
.L11777:
	l.xori  	r14,r19,2
	l.srli  	r15,r18,31
.L12397:
	l.addi  	r14,r14,-1
	l.srli  	r14,r14,31
	l.sb    	18(r2),r15	    # movqi
	l.j     	.L11778	# delay slot filled
	l.sb    	19(r2),r14	    # movqi
.L12290:
	l.lwz   	r14,4(r24)	 # SI load
	l.lwz   	r2,0(r24)	 # SI load
	l.lbz   	r15,18(r14)	 # zero_extendqisi2
	l.sfeqi	r15,0
	l.bf	.L11776	# delay slot filled
	l.sw    	4(r14),r2	 # SI store
	l.lbz   	r14,19(r14)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L11776	# delay slot filled
	l.addi  	r15,r0,2	 # move immediate I
	l.j     	.L11776	# delay slot filled
	l.addi  	r15,r0,1	 # move immediate I
.LFE691:
	.size	sqlite3VdbeExec, .-sqlite3VdbeExec
	.global __fixunsdfdi
	.section	.rodata.str1.1
.LC312:
	.string	"keyinfo(%d"
.LC313:
	.string	",..."
.LC314:
	.string	",nil"
.LC315:
	.string	"collseq(%.20s)"
.LC316:
	.string	"%s(%d)"
.LC317:
	.string	"%d"
.LC318:
	.string	"vtab:%p:%p"
.LC319:
	.string	"intarray"
.LC320:
	.string	"%.2x"
	.section	.rodata
	.align	4
.LC309:
	.long	1085022208
	.long	0
	.align	4
.LC310:
	.long	1077411840
	.long	0
	.align	4
.LC311:
	.long	1104006501
	.long	0
	.section .text
	.align	4
.proc	sqlite3_step
	.global sqlite3_step
	.type	sqlite3_step, @function
sqlite3_step:
.LFB637:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3954:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3955:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3956:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3957:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3958:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3959:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3960:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3961:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3962:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3963:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3964:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-304
.LCFI3965:
	l.sfeqi	r3,0
	l.bf	.L12410	# delay slot filled
	l.addi  	r11,r0,21	 # move immediate I
	l.movhi 	r4,hi(-1108213760)	 # move immediate M
	l.lwz   	r3,68(r3)	 # SI load
	l.ori   	r4,r4,3491
	l.lwz   	r22,0(r2)	 # SI load
	l.sfne 	r3,r4
	l.bnf	.L12506	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L12472:
	l.ori   	r3,r22,0	 # move reg to reg
.L12530:
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.L12410:
	l.addi	r1,r1,304
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L12506:
	l.lbz   	r3,30(r22)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L12472	# delay slot filled
	l.addi  	r16,r0,7	 # move immediate I
	l.movhi  	r30,hi(.LC311)
	l.addi  	r5,r2,116
	l.ori   	r14,r22,0	 # move reg to reg
	l.addi  	r18,r0,6	 # move immediate I
	l.ori   	r30,r30,lo(.LC311)
	l.sw    	12(r1),r5	 # SI store
	l.addi  	r24,r1,256
	l.addi  	r26,r1,32
.L12413:
	l.lwz   	r5,96(r2)	 # SI load
	l.sfgtsi	r5,0
	l.bnf	.L12507
	l.nop			# nop delay slot
.L12414:
	l.lbz   	r5,124(r2)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L12420	# delay slot filled
	l.movhi 	r5,hi(-1108213760)	 # move immediate M
	l.lwz   	r20,76(r2)	 # SI load
	l.addi  	r20,r20,240
	l.lwz   	r4,68(r2)	 # SI load
	l.ori   	r5,r5,3491
	l.sw    	120(r2),r20	 # SI store
	l.lwz   	r28,0(r2)	 # SI load
	l.sfne 	r4,r5
	l.bnf	.L12508	# delay slot filled
	l.addi  	r16,r0,21	 # move immediate I
.L12495:
	l.lwz   	r5,160(r14)	 # SI load
.L12527:
	l.sfeqi	r5,0
	l.bf	.L12462
	l.nop			# nop delay slot
	l.lbz   	r20,128(r14)	 # zero_extendqisi2
	l.sfnei	r20,0
	l.bf	.L12462
	l.nop			# nop delay slot
	l.lwz   	r4,204(r2)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L12462	# delay slot filled
	l.addi  	r4,r1,248
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r11,64(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
		l.lwz   	r3, 248(r1)
		l.lwz   	r4, 248+4(r1)
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
		l.lwz   	r3, 248(r1)
		l.lwz   	r4, 248+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__subdf3
	l.nop			# nop delay slot
	l.movhi  	r8,hi(.LC309)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r8,r8,lo(.LC309)
		l.lwz   	r5, 0(r8)
		l.lwz   	r6, 4(r8)
	l.jal   	__muldf3
	l.nop			# nop delay slot
	l.movhi  	r7,hi(.LC310)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r7,r7,lo(.LC310)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3
	l.nop			# nop delay slot
		l.lwz   	r5, 0(r30)
		l.lwz   	r6, 4(r30)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__muldf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixunsdfdi
	l.nop			# nop delay slot
	l.lwz   	r6,140(r2)	 # SI load
	l.lwz   	r3,164(r14)	 # SI load
	l.sub   	r6,r12,r6
	l.lwz   	r4,204(r2)	 # SI load
	l.lwz   	r7,136(r2)	 # SI load
	l.sfgtu 	r6,r12
	l.bnf	.L12509	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L12463:
	l.sub   	r11,r11,r7
	l.lwz   	r7,160(r14)	 # SI load
	l.jalr  	r7	# delay slot filled
	l.sub   	r5,r11,r5
.L12462:
	l.sw    	20(r14),r16	 # SI store
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.lwz   	r4,100(r2)	 # SI load
	l.sfeqi	r11,7
	l.bf	.L12529	# delay slot filled
	l.xori  	r5,r16,100
.L12514:
	l.xori  	r5,r16,100
	l.sub   	r6,r0,r5
	l.or    	r5,r6,r5
	l.srli  	r5,r5,31
.L12416:
	l.sfeqi	r5,0
	l.bf	.L12465
	l.nop			# nop delay slot
.L12494:
	l.lbz   	r5,131(r2)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bf	.L12465	# delay slot filled
	l.sfeqi	r16,101
	l.bf	.L12465
	l.nop			# nop delay slot
	l.lwz   	r16,100(r2)	 # SI load
	l.sw    	20(r14),r16	 # SI store
.L12465:
	l.lwz   	r5,24(r14)	 # SI load
	l.and   	r16,r16,r5
	l.sfnei	r16,17
	l.bf	.L12472	# delay slot filled
	l.addi  	r18,r18,-1
	l.sfeqi	r18,0
	l.bf	.L12467
	l.nop			# nop delay slot
	l.lbz   	r4,131(r2)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L12468
	l.nop			# nop delay slot
	l.lwz   	r4,204(r2)	 # SI load
.L12468:
	l.lwz   	r20,0(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r7,r24,0	 # move reg to reg
	l.jal   	sqlite3LockAndPrepare	# delay slot filled
	l.ori   	r8,r6,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12469	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfnei	r11,7
	l.bnf	.L12510	# delay slot filled
	l.sfeqi	r11,6
	l.bf	.L12511
	l.nop			# nop delay slot
.L12467:
	l.lbz   	r3,131(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L12530	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r3,204(r22)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L12472
	l.nop			# nop delay slot
	l.jal   	sqlite3_value_text
	l.nop			# nop delay slot
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,116(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r3,30(r22)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L12512	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,7	 # move immediate I
	l.sw    	116(r2),r4	 # SI store
	l.j     	.L12472	# delay slot filled
	l.sw    	100(r2),r3	 # SI store
.L12469:
	l.lwz   	r16,256(r1)	 # SI load
	l.addi  	r5,r0,216	 # move immediate I
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,216	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,216	 # move immediate I
	l.lwz   	r12,8(r2)	 # SI load
	l.lwz   	r8,204(r2)	 # SI load
	l.lwz   	r11,4(r2)	 # SI load
	l.lwz   	r5,204(r16)	 # SI load
	l.lwz   	r7,8(r16)	 # SI load
	l.lwz   	r6,4(r16)	 # SI load
	l.sw    	8(r16),r12	 # SI store
	l.sw    	204(r16),r8	 # SI store
	l.sw    	4(r16),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.lbz   	r16,131(r16)	 # zero_extendqisi2
	l.sw    	204(r2),r5	 # SI store
	l.ori   	r4,r2,0	 # move reg to reg
	l.sw    	8(r2),r7	 # SI store
	l.sw    	4(r2),r6	 # SI store
	l.jal   	sqlite3TransferBindings	# delay slot filled
	l.sb    	131(r2),r16	    # movqi
	l.lwz   	r3,256(r1)	 # SI load
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.sw    	100(r3),r14	 # SI store
	l.jal   	sqlite3_reset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.movhi 	r3,hi(-1108213760)	 # move immediate M
	l.lwz   	r5,68(r2)	 # SI load
	l.ori   	r3,r3,3491
	l.sfne 	r5,r3
	l.bnf	.L12513	# delay slot filled
	l.sb    	126(r2),r14	    # movqi
	l.j     	.L12472	# delay slot filled
	l.addi  	r16,r0,21	 # move immediate I
.L12513:
	l.lwz   	r14,0(r2)	 # SI load
	l.lbz   	r5,30(r14)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bnf	.L12413
	l.nop			# nop delay slot
	l.j     	.L12472	# delay slot filled
	l.addi  	r16,r0,7	 # move immediate I
.L12510:
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.j     	.L12467	# delay slot filled
	l.sb    	30(r20),r8	    # movqi
.L12420:
	l.jal   	sqlite3VdbeExec	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r11,100
	l.bnf	.L12495	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sw    	20(r14),r16	 # SI store
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.lwz   	r4,100(r2)	 # SI load
	l.sfeqi	r11,7
	l.bnf	.L12514	# delay slot filled
	l.xori  	r5,r16,100
.L12529:
	l.sw    	100(r2),r11	 # SI store
	l.sub   	r6,r0,r5
	l.or    	r5,r6,r5
	l.j     	.L12416	# delay slot filled
	l.srli  	r5,r5,31
.L12511:
	l.j     	.L12472	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L12507:
	l.lbz   	r6,126(r2)	 # zero_extendqisi2
	l.sfeqi	r6,0
	l.bnf	.L12515	# delay slot filled
	l.sfeqi	r5,0
	l.bf	.L12414
	l.nop			# nop delay slot
	l.lwz   	r5,144(r14)	 # SI load
	l.sfnei	r5,0
	l.bf	.L12417
	l.nop			# nop delay slot
	l.sw    	216(r14),r5	 # SI store
.L12417:
	l.lwz   	r3,160(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L12418
	l.nop			# nop delay slot
	l.lbz   	r4,128(r14)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bnf	.L12516	# delay slot filled
	l.addi  	r4,r1,248
.L12418:
	l.addi  	r5,r5,1
.L12526:
	l.sw    	144(r14),r5	 # SI store
	l.lbz   	r5,130(r2)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L12531	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r3,148(r14)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	148(r14),r3	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
.L12531:
	l.j     	.L12414	# delay slot filled
	l.sw    	96(r2),r3	 # SI store
.L12515:
	l.lwz   	r3,100(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L12494	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
	l.addi  	r6,r0,17	 # move immediate I
	l.j     	.L12494	# delay slot filled
	l.sw    	100(r2),r6	 # SI store
.L12509:
	l.j     	.L12463	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
.L12508:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	releaseMemArray	# delay slot filled
	l.lwz   	r4,72(r2)	 # SI load
	l.lwz   	r3,100(r2)	 # SI load
	l.sfnei	r3,7
	l.bnf	.L12517	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
	l.lwz   	r5,96(r2)	 # SI load
	l.lwz   	r4,12(r2)	 # SI load
	l.slli  	r6,r5,2
	l.slli  	r3,r5,4
	l.j     	.L12425	# delay slot filled
	l.add   	r6,r6,r3
.L12483:
	l.ori   	r5,r8,0	 # move reg to reg
.L12425:
	l.addi  	r8,r5,1
	l.sfles 	r4,r5
	l.bf	.L12423	# delay slot filled
	l.sw    	96(r2),r8	 # SI store
	l.lbz   	r7,124(r2)	 # zero_extendqisi2
	l.sfnei	r7,2
	l.bf	.L12424
	l.nop			# nop delay slot
	l.lwz   	r11,20(r2)	 # SI load
	l.add   	r11,r11,r6
	l.lbz   	r11,0(r11)	 # zero_extendqisi2
	l.sfnei	r11,115
	l.bf	.L12483	# delay slot filled
	l.addi  	r6,r6,20
.L12424:
	l.lwz   	r3,216(r28)	 # SI load
	l.sfnei	r3,0
	l.bf	.L12475	# delay slot filled
	l.addi  	r8,r0,9	 # move immediate I
	l.slli  	r4,r5,2
	l.slli  	r3,r5,4
	l.lwz   	r28,20(r2)	 # SI load
	l.sfnei	r7,1
	l.add   	r3,r4,r3
	l.bnf	.L12518	# delay slot filled
	l.add   	r28,r28,r3
.L12426:
	l.lwz   	r3,4(r28)	 # SI load
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sw    	4(r20),r3	 # SI store
	l.sb    	30(r20),r4	    # movqi
	l.srai  	r4,r3,31
	l.addi  	r5,r0,4	 # movhi: move immediate
	l.addi  	r3,r20,240
	l.sw    	0(r20),r4	 # SI store
	l.sh    	28(r20),r5	 # movhi
	l.lwz   	r5,8(r28)	 # SI load
	l.addi  	r6,r0,4	 # movhi: move immediate
	l.srai  	r4,r5,31
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.sh    	28(r3),r6	 # movhi
	l.sw    	4(r3),r5	 # SI store
	l.sb    	30(r3),r7	    # movqi
	l.sw    	0(r3),r4	 # SI store
	l.addi  	r8,r20,480
	l.lbz   	r3,124(r2)	 # zero_extendqisi2
	l.sfnei	r3,1
	l.bnf	.L12519	# delay slot filled
	l.sw    	8(r1),r8	 # SI store
.L12429:
	l.lwz   	r3,8(r1)	 # SI load
	l.addi  	r4,r0,32	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L12495	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.addi  	r4,r0,1538	 # movhi: move immediate
	l.lwz   	r16,20(r3)	 # SI load
	l.sh    	28(r3),r4	 # movhi
	l.sw    	16(r1),r16	 # SI store
	l.lbz   	r3,1(r28)	 # zero_extendqisi2
	l.addi  	r3,r3,17
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfgtui	r3,13
	l.bnf	.L12520	# delay slot filled
	l.movhi  	r5,hi(.L12440)
.L12430:
	l.lwz   	r3,16(r28)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L12521
	l.nop			# nop delay slot
	l.sw    	16(r1),r3	 # SI store
.L12451:
	l.lwz   	r6,16(r1)	 # SI load
	l.sfne 	r16,r6
	l.bnf	.L12454	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeMemSetStr	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L12458:
	l.addi  	r8,r0,3	 # movqi: move immediate
	l.lwz   	r7,8(r1)	 # SI load
	l.sb    	30(r7),r8	    # movqi
	l.lbz   	r20,124(r2)	 # zero_extendqisi2
	l.sfnei	r20,1
	l.bnf	.L12522	# delay slot filled
	l.addi  	r3,r7,240
.L12460:
	l.slli  	r3,r20,2
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r16,r0,100	 # move immediate I
	l.add   	r3,r3,r20
	l.sw    	100(r2),r7	 # SI store
	l.sub   	r3,r0,r3
	l.addi  	r3,r3,13
	l.j     	.L12462	# delay slot filled
	l.sw    	108(r2),r3	 # SI store
.L12516:
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r11,64(r5)	 # SI load
	l.jalr  	r11	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
		l.lwz   	r3, 248(r1)
		l.lwz   	r4, 248+4(r1)
	l.jal   	__fixdfsi
	l.nop			# nop delay slot
	l.jal   	__floatsidf	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
		l.lwz   	r3, 248(r1)
		l.lwz   	r4, 248+4(r1)
		l.or    	r5, r11, r0
		l.or    	r6, r12, r0
	l.jal   	__subdf3
	l.nop			# nop delay slot
	l.movhi  	r7,hi(.LC309)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r7,r7,lo(.LC309)
		l.lwz   	r5, 0(r7)
		l.lwz   	r6, 4(r7)
	l.jal   	__muldf3
	l.nop			# nop delay slot
	l.movhi  	r8,hi(.LC310)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.ori   	r8,r8,lo(.LC310)
		l.lwz   	r5, 0(r8)
		l.lwz   	r6, 4(r8)
	l.jal   	__muldf3
	l.nop			# nop delay slot
		l.lwz   	r5, 0(r30)
		l.lwz   	r6, 4(r30)
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__muldf3
	l.nop			# nop delay slot
		l.or    	r3, r11, r0
		l.or    	r4, r12, r0
	l.jal   	__fixunsdfdi
	l.nop			# nop delay slot
	l.lwz   	r5,144(r14)	 # SI load
		l.sw    	136(r2), r11
		l.sw    	136+4(r2), r12
	l.j     	.L12526	# delay slot filled
	l.addi  	r5,r5,1
.L12475:
	l.movhi  	r5,hi(.LC78)
	l.movhi  	r6,hi(.LC307)
	l.sw    	100(r2),r8	 # SI store
	l.ori   	r6,r6,lo(.LC307)
	l.lwz   	r3,12(r1)	 # SI load
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r16,r0,1	 # move immediate I
	l.j     	.L12527	# delay slot filled
	l.lwz   	r5,160(r14)	 # SI load
.L12512:
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L12472	# delay slot filled
	l.sw    	116(r2),r11	 # SI store
.L12517:
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.j     	.L12495	# delay slot filled
	l.sb    	30(r28),r6	    # movqi
.L12423:
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r16,r0,101	 # move immediate I
	l.j     	.L12495	# delay slot filled
	l.sw    	100(r2),r7	 # SI store
.L12519:
	l.lwz   	r5,12(r28)	 # SI load
	l.addi  	r20,r20,720
	l.srai  	r4,r5,31
	l.sh    	28(r8),r6	 # movhi
	l.sw    	4(r8),r5	 # SI store
	l.sb    	30(r8),r3	    # movqi
	l.sw    	0(r8),r4	 # SI store
	l.j     	.L12429	# delay slot filled
	l.sw    	8(r1),r20	 # SI store
.L12518:
	l.srai  	r3,r5,31
	l.addi  	r8,r0,4	 # movhi: move immediate
	l.addi  	r6,r20,240
	l.sw    	0(r20),r3	 # SI store
	l.addi  	r3,r0,2562	 # movhi: move immediate
	l.sh    	28(r20),r8	 # movhi
	l.sw    	4(r20),r5	 # SI store
	l.sb    	30(r20),r7	    # movqi
	l.sh    	28(r6),r3	 # movhi
	l.movhi  	r4,hi(azName.7729)
	l.lbz   	r3,0(r28)	 # zero_extendqisi2
	l.slli  	r3,r3,2
	l.ori   	r4,r4,lo(azName.7729)
	l.add   	r3,r3,r4
	l.lwz   	r5,0(r3)	 # SI load
	l.sw    	20(r6),r5	 # SI store
	l.lbs   	r3,0(r5)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L12427	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.addi  	r4,r4,1
.L12532:
	l.lbs   	r3,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L12532	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
.L12427:
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.sub   	r3,r4,r5
	l.ori   	r7,r7,65535
	l.addi  	r5,r0,3	 # movqi: move immediate
	l.and   	r3,r3,r7
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.sb    	30(r6),r5	    # movqi
	l.sb    	31(r6),r8	    # movqi
	l.sw    	24(r6),r3	 # SI store
	l.j     	.L12426	# delay slot filled
	l.addi  	r20,r6,240
.L12520:
	l.slli  	r3,r3,2
	l.ori   	r5,r5,lo(.L12440)
	l.add   	r3,r3,r5
	l.lwz   	r3,0(r3)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L12440:
	.word	.L12431
	.word	.L12430
	.word	.L12432
	.word	.L12433
	.word	.L12434
	.word	.L12435
	.word	.L12430
	.word	.L12436
	.word	.L12430
	.word	.L12437
	.word	.L12430
	.word	.L12431
	.word	.L12438
	.word	.L12439
	.section .text
.L12439:
	l.lwz   	r3,16(r28)	 # SI load
	l.movhi  	r5,hi(.LC315)
	l.lwz   	r6,0(r3)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r3,r0,32	 # move immediate I
	l.ori   	r5,r5,lo(.LC315)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.lwz   	r6,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r6)	 # SI load
.L12438:
	l.lwz   	r6,16(r28)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r5,24(r6)	 # SI load
	l.addi  	r3,r0,32	 # move immediate I
	l.sw    	0(r1),r5	 # SI store
	l.movhi  	r5,hi(.LC316)
	l.lhs   	r6,0(r6)	 # extendhisi2_no_sext_mem
	l.ori   	r5,r5,lo(.LC316)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	4(r1),r6	 # SI store
	l.lwz   	r7,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r7)	 # SI load
.L12437:
	l.lwz   	r6,16(r28)	 # SI load
	l.lhz   	r3,28(r6)	 # zero_extendqisi2
	l.andi  	r4,r3,2
	l.sfeqi	r4,0
	l.bnf	.L12523	# delay slot filled
	l.andi  	r4,r3,4
	l.sfeqi	r4,0
	l.bnf	.L12504	# delay slot filled
	l.andi  	r3,r3,8
	l.sfeqi	r3,0
	l.bnf	.L12524	# delay slot filled
	l.movhi  	r5,hi(.LC167)
.L12454:
	l.lwz   	r7,16(r1)	 # SI load
	l.lbs   	r4,0(r7)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bnf	.L12457	# delay slot filled
	l.ori   	r3,r7,0	 # move reg to reg
	l.addi  	r3,r3,1
.L12533:
	l.lbs   	r4,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L12533	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r3,r3,-1
.L12457:
	l.lwz   	r8,16(r1)	 # SI load
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.sub   	r3,r3,r8
	l.ori   	r6,r6,65535
	l.lwz   	r4,8(r1)	 # SI load
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.and   	r3,r3,r6
	l.sb    	31(r4),r5	    # movqi
	l.j     	.L12458	# delay slot filled
	l.sw    	24(r4),r3	 # SI store
.L12436:
	l.lwz   	r5,16(r28)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r3,r0,32	 # move immediate I
	l.lwz   	r6,0(r5)	 # SI load
	l.movhi  	r5,hi(.LC318)
	l.sw    	4(r1),r6	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r5,lo(.LC318)
	l.lwz   	r3,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r3)	 # SI load
.L12435:
	l.movhi  	r5,hi(.LC167)
	l.lwz   	r6,16(r28)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r3,r0,32	 # move immediate I
		l.lwz   	r7, 0(r6)
		l.lwz   	r8, 4(r6)
		l.sw    	0(r1), r7
		l.sw    	4(r1), r8
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r5,lo(.LC167)
	l.lwz   	r8,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r8)	 # SI load
.L12434:
	l.lwz   	r6,16(r28)	 # SI load
.L12504:
	l.movhi  	r5,hi(.LC133)
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r3,r0,32	 # move immediate I
		l.lwz   	r7, 0(r6)
		l.lwz   	r8, 4(r6)
		l.sw    	0(r1), r7
		l.sw    	4(r1), r8
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r5,lo(.LC133)
	l.lwz   	r8,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r8)	 # SI load
.L12431:
	l.lwz   	r6,16(r28)	 # SI load
	l.movhi  	r5,hi(.LC312)
	l.sw    	28(r1),r6	 # SI store
	l.lhz   	r6,6(r6)	 # zero_extendqisi2
	l.addi  	r3,r0,32	 # move immediate I
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC312)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.lbs   	r4,0(r16)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,0
	l.bf	.L12441	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r3,r3,1
.L12534:
	l.lbs   	r4,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L12534	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r3,r3,-1
.L12441:
	l.movhi 	r8,hi(1073676288)	 # move immediate M
	l.sub   	r20,r3,r16
	l.ori   	r8,r8,65535
	l.lwz   	r7,28(r1)	 # SI load
	l.and   	r20,r20,r8
	l.lhz   	r3,6(r7)	 # zero_extendqisi2
	l.add   	r4,r16,r20
	l.sfeqi	r3,0
	l.bf	.L12443	# delay slot filled
	l.sw    	20(r1),r4	 # SI store
	l.addi  	r5,r7,12
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	24(r1),r5	 # SI store
	l.sw    	20(r1),r6	 # SI store
.L12450:
	l.lwz   	r7,24(r1)	 # SI load
	l.lwz   	r4,0(r7)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L12444	# delay slot filled
	l.sfgtsi	r20,21
	l.lwz   	r6,0(r4)	 # SI load
	l.lbs   	r3,0(r6)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L12445	# delay slot filled
	l.ori   	r5,r6,0	 # move reg to reg
	l.addi  	r5,r5,1
.L12535:
	l.lbs   	r3,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L12535	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
.L12445:
	l.movhi 	r8,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r6
	l.ori   	r8,r8,65535
	l.and   	r7,r5,r8
	l.add   	r3,r7,r20
	l.sflesi	r3,26
	l.bnf	.L12525	# delay slot filled
	l.add   	r3,r16,r20
	l.addi  	r5,r0,44	 # movqi: move immediate
	l.sb    	0(r3),r5	    # movqi
	l.lwz   	r8,28(r1)	 # SI load
	l.lwz   	r3,8(r8)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L12448	# delay slot filled
	l.addi  	r6,r20,1
	l.lwz   	r5,20(r1)	 # SI load
	l.add   	r3,r3,r5
	l.lbz   	r3,0(r3)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L12536	# delay slot filled
	l.add   	r3,r16,r6
	l.addi  	r8,r0,45	 # movqi: move immediate
	l.addi  	r6,r20,2
	l.sb    	0(r3),r8	    # movqi
.L12448:
	l.add   	r3,r16,r6
.L12536:
	l.lwz   	r4,0(r4)	 # SI load
	l.addi  	r5,r7,1
	l.jal   	memcpy	# delay slot filled
	l.add   	r20,r6,r7
	l.lwz   	r4,28(r1)	 # SI load
	l.lhz   	r3,6(r4)	 # zero_extendqisi2
.L12449:
	l.lwz   	r6,20(r1)	 # SI load
.L12537:
	l.lwz   	r7,24(r1)	 # SI load
	l.addi  	r6,r6,1
	l.addi  	r7,r7,4
	l.sw    	20(r1),r6	 # SI store
	l.sflts 	r6,r3
	l.bf	.L12450	# delay slot filled
	l.sw    	24(r1),r7	 # SI store
	l.add   	r16,r16,r20
	l.sw    	20(r1),r16	 # SI store
.L12443:
	l.lwz   	r8,20(r1)	 # SI load
.L12528:
	l.addi  	r3,r0,41	 # movqi: move immediate
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.sb    	0(r8),r3	    # movqi
	l.sb    	1(r8),r4	    # movqi
	l.lwz   	r5,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r5)	 # SI load
.L12433:
	l.movhi  	r5,hi(.LC317)
	l.lwz   	r6,16(r28)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r3,r0,32	 # move immediate I
	l.ori   	r5,r5,lo(.LC317)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.lwz   	r3,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r3)	 # SI load
.L12432:
	l.movhi  	r5,hi(.LC319)
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r3,r0,32	 # move immediate I
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r5,lo(.LC319)
	l.lwz   	r4,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r4)	 # SI load
.L12444:
	l.bf	.L12537	# delay slot filled
	l.lwz   	r6,20(r1)	 # SI load
	l.movhi  	r4,hi(.LC314)
	l.add   	r3,r16,r20
	l.addi  	r5,r0,4	 # move immediate I
	l.ori   	r4,r4,lo(.LC314)
	l.jal   	memcpy	# delay slot filled
	l.add   	r20,r20,r5
	l.lwz   	r5,28(r1)	 # SI load
	l.j     	.L12449	# delay slot filled
	l.lhz   	r3,6(r5)	 # zero_extendqisi2
.L12522:
	l.addi  	r4,r0,4	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	16(r1),r3	 # SI store
	l.jal   	sqlite3VdbeMemGrow	# delay slot filled
	l.ori   	r16,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12495	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r5,r0,1538	 # movhi: move immediate
	l.addi  	r6,r0,2	 # move immediate I
	l.sh    	28(r4),r5	 # movhi
	l.sw    	24(r4),r6	 # SI store
	l.movhi  	r5,hi(.LC320)
	l.lbz   	r6,3(r28)	 # zero_extendqisi2
	l.lwz   	r4,20(r4)	 # SI load
	l.addi  	r3,r0,3	 # move immediate I
	l.ori   	r5,r5,lo(.LC320)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.lwz   	r8,8(r1)	 # SI load
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r5,r0,3	 # movqi: move immediate
	l.addi  	r3,r8,480
	l.addi  	r6,r0,5	 # movqi: move immediate
	l.sb    	30(r4),r5	    # movqi
	l.sb    	31(r4),r20	    # movqi
	l.sh    	28(r3),r20	 # movhi
	l.sb    	30(r3),r6	    # movqi
	l.j     	.L12460	# delay slot filled
	l.lbz   	r20,124(r2)	 # zero_extendqisi2
.L12525:
	l.add   	r16,r16,r20
	l.movhi  	r4,hi(.LC313)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC313)
	l.addi  	r5,r0,4	 # move immediate I
	l.jal   	memcpy	# delay slot filled
	l.sw    	20(r1),r16	 # SI store
	l.j     	.L12528	# delay slot filled
	l.lwz   	r8,20(r1)	 # SI load
.L12523:
	l.lwz   	r6,20(r6)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.sw    	16(r1),r6	 # SI store
.L12524:
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r3,r0,32	 # move immediate I
		l.lwz   	r7, 8(r6)
		l.lwz   	r8, 8+4(r6)
		l.sw    	0(r1), r7
		l.sw    	4(r1), r8
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r5,lo(.LC167)
	l.lwz   	r8,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r8)	 # SI load
.L12521:
	l.sb    	0(r16),r3	    # movqi
	l.lwz   	r5,8(r1)	 # SI load
	l.j     	.L12451	# delay slot filled
	l.lwz   	r16,20(r5)	 # SI load
.LFE637:
	.size	sqlite3_step, .-sqlite3_step
	.align	4
.proc	sqlite3_exec
	.global sqlite3_exec
	.type	sqlite3_exec, @function
sqlite3_exec:
.LFB995:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3966:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3967:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3968:
	l.sw    	-8(r1),r30	 # SI store
.LCFI3969:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI3970:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3971:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3972:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3973:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3974:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3975:
	l.sw    	-12(r1),r28	 # SI store
.LCFI3976:
	l.addi  	r1,r1,-72
.LCFI3977:
	l.ori   	r20,r4,0	 # move reg to reg
	l.sw    	20(r1),r2	 # SI store
	l.sw    	4(r1),r6	 # SI store
	l.sw    	16(r1),r7	 # SI store
	l.ori   	r22,r3,0	 # move reg to reg
	l.sfeq 	r4,r2
	l.bf	.L12578	# delay slot filled
	l.ori   	r30,r5,0	 # move reg to reg
.L12539:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.sw    	0(r1),r18	 # SI store
.L12577:
	l.lbs   	r26,0(r20)	 # extendqisi2_no_sext_mem
	l.sfnei	r26,0
	l.bnf	.L12583	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
.L12586:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r6,r1,20
	l.addi  	r7,r1,24
	l.jal   	sqlite3_prepare	# delay slot filled
	l.sw    	20(r1),r2	 # SI store
	l.sfne 	r11,r2
	l.bf	.L12541	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r3,20(r1)	 # SI load
	l.sfne 	r3,r2
	l.bnf	.L12579	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.lwz   	r16,108(r3)	 # SI load
	l.slli  	r4,r16,3
	l.slli  	r2,r16,2
	l.ori   	r24,r11,0	 # move reg to reg
	l.addi  	r4,r4,1
	l.sw    	8(r1),r2	 # SI store
	l.sw    	12(r1),r4	 # SI store
	l.ori   	r26,r11,0	 # move reg to reg
.L12555:
	l.jal   	sqlite3_step
	l.nop			# nop delay slot
	l.sfeqi	r30,0
	l.bf	.L12544	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfeqi	r11,100
	l.bf	.L12545	# delay slot filled
	l.sub   	r5,r0,r24
	l.or    	r24,r5,r24
	l.sfltsi	r24,0
	l.bnf	.L12580	# delay slot filled
	l.xori  	r2,r11,101
.L12546:
	l.lwz   	r3,20(r1)	 # SI load
.L12587:
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	20(r1),r2	 # SI store
	l.sfeqi	r11,17
	l.bf	.L12556	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r20,24(r1)	 # SI load
	l.movhi  	r3,hi(sqlite3CtypeMap)
	l.lbz   	r2,0(r20)	 # zero_extendqisi2
	l.ori   	r3,r3,lo(sqlite3CtypeMap)
	l.add   	r2,r2,r3
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfeqi	r2,0
	l.bf	.L12556	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.addi  	r20,r20,1
.L12585:
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.lbz   	r2,0(r20)	 # zero_extendqisi2
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.add   	r2,r2,r4
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfnei	r2,0
	l.bf	.L12585	# delay slot filled
	l.addi  	r20,r20,1
	l.addi  	r20,r20,-1
	l.sw    	0(r1),r2	 # SI store
.L12556:
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.sfeqi	r18,0
	l.bf	.L12577
	l.nop			# nop delay slot
.L12541:
	l.sfnei	r18,17
	l.bf	.L12568	# delay slot filled
	l.lwz   	r2,0(r1)	 # SI load
	l.sfnei	r2,0
	l.bf	.L12568	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	0(r1),r3	 # SI store
	l.lbs   	r26,0(r20)	 # extendqisi2_no_sext_mem
	l.sfnei	r26,0
	l.bf	.L12586	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L12549:
	l.lwz   	r3,20(r1)	 # SI load
.L12583:
	l.sfeqi	r3,0
	l.bf	.L12559
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeFinalize
	l.nop			# nop delay slot
.L12559:
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12560	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3_errcode	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfne 	r11,r2
	l.bnf	.L12581	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
.L12560:
	l.lwz   	r4,16(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L12561	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r4),r3	 # SI store
.L12561:
	l.addi	r1,r1,72
.L12584:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L12580:
	l.sub   	r5,r0,r2
	l.or    	r2,r5,r2
	l.sfltsi	r2,0
	l.bf	.L12587	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r2,12(r22)	 # SI load
	l.andi  	r2,r2,256
	l.sfnei	r2,0
	l.bnf	.L12587
	l.nop			# nop delay slot
	l.ori   	r3,r22,0	 # move reg to reg
.L12589:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L12549	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.sflesi	r16,0
	l.bf	.L12588	# delay slot filled
	l.sfnei	r18,100
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r2,r0,0	 # move immediate I
.L12551:
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	sqlite3_column_name	# delay slot filled
	l.addi  	r2,r2,1
	l.sw    	0(r14),r11	 # SI store
	l.sflts 	r2,r16
	l.bf	.L12551	# delay slot filled
	l.addi  	r14,r14,4
	l.sfnei	r18,100
.L12588:
	l.bnf	.L12548	# delay slot filled
	l.addi  	r24,r0,1	 # move immediate I
.L12552:
	l.lwz   	r3,4(r1)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.jalr  	r30	# delay slot filled
	l.ori   	r6,r26,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L12582	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
.L12544:
	l.sfnei	r18,100
	l.bf	.L12546	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.j     	.L12555
	l.nop			# nop delay slot
.L12545:
	l.sfnei	r24,0
	l.bnf	.L12589	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L12548:
	l.lwz   	r3,8(r1)	 # SI load
	l.sflesi	r16,0
	l.bf	.L12552	# delay slot filled
	l.add   	r28,r26,r3
	l.ori   	r14,r28,0	 # move reg to reg
	l.j     	.L12554	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L12553:
	l.addi  	r2,r2,1
.L12590:
	l.sflts 	r2,r16
	l.bnf	.L12552	# delay slot filled
	l.addi  	r14,r14,4
.L12554:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3_column_text	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L12553	# delay slot filled
	l.sw    	0(r14),r11	 # SI store
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3_column_type	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.sfeqi	r11,5
	l.bf	.L12590	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.addi  	r18,r0,100	 # move immediate I
	l.j     	.L12549	# delay slot filled
	l.sb    	30(r22),r4	    # movqi
.L12579:
	l.j     	.L12577	# delay slot filled
	l.lwz   	r20,24(r1)	 # SI load
.L12582:
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.addi  	r18,r0,4	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.sw    	20(r1),r5	 # SI store
	l.j     	.L12583	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
.L12568:
	l.j     	.L12549	# delay slot filled
	l.addi  	r26,r0,0	 # move immediate I
.L12581:
	l.sfeqi	r4,0
	l.bf	.L12561
	l.nop			# nop delay slot
	l.jal   	sqlite3_errmsg	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lbs   	r4,0(r11)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,0
	l.bf	.L12562	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r3,r3,1
.L12591:
	l.lbs   	r4,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L12591	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r3,r3,-1
.L12562:
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r3,r3,r11
	l.ori   	r4,r4,65535
	l.and   	r16,r3,r4
	l.addi  	r16,r16,1
	l.jal   	sqlite3Malloc	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12561	# delay slot filled
	l.sw    	0(r3),r11	 # SI store
	l.jal   	sqlite3_errmsg	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.j     	.L12584	# delay slot filled
	l.addi	r1,r1,72
.L12578:
	l.movhi  	r20,hi(.LC15)
	l.j     	.L12539	# delay slot filled
	l.ori   	r20,r20,lo(.LC15)
.LFE995:
	.size	sqlite3_exec, .-sqlite3_exec
	.section	.rodata.str1.1
.LC321:
	.string	"sqlite_stat1"
.LC322:
	.string	"SELECT idx, stat FROM %Q.sqlite_stat1"
	.section .text
	.align	4
.proc	sqlite3AnalysisLoad
	.type	sqlite3AnalysisLoad, @function
sqlite3AnalysisLoad:
.LFB827:
	l.sw    	-8(r1),r16	 # SI store
.LCFI3978:
	l.add   	r16,r4,r4
	l.sw    	-12(r1),r14	 # SI store
.LCFI3979:
	l.add   	r16,r16,r4
	l.ori   	r14,r3,0	 # move reg to reg
	l.slli  	r16,r16,3
	l.lwz   	r3,8(r3)	 # SI load
	l.sw    	-16(r1),r2	 # SI store
.LCFI3980:
	l.add   	r3,r3,r16
	l.sw    	-4(r1),r9	 # SI store
.LCFI3981:
	l.lwz   	r2,20(r3)	 # SI load
	l.lwz   	r2,28(r2)	 # SI load
	l.sfeqi	r2,0
.LCFI3982:
	l.bf	.L12593	# delay slot filled
	l.addi  	r1,r1,-28
.L12598:
	l.jal   	sqlite3DefaultRowEst	# delay slot filled
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L12598
	l.nop			# nop delay slot
	l.lwz   	r3,8(r14)	 # SI load
	l.add   	r3,r3,r16
.L12593:
	l.lwz   	r16,0(r3)	 # SI load
	l.movhi  	r4,hi(.LC321)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC321)
	l.ori   	r5,r16,0	 # move reg to reg
	l.sw    	4(r1),r14	 # SI store
	l.sw    	8(r1),r16	 # SI store
	l.jal   	sqlite3FindTable	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L12595	# delay slot filled
	l.movhi  	r4,hi(.LC322)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC322)
	l.sw    	0(r1),r16	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L12595	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.movhi  	r5,hi(analysisLoader)
	l.addi  	r6,r1,4
	l.ori   	r5,r5,lo(analysisLoader)
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3_exec	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r2,7
	l.bnf	.L12600	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
.L12595:
	l.addi	r1,r1,28
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.L12600:
	l.ori   	r11,r2,0	 # move reg to reg
	l.sb    	30(r14),r3	    # movqi
	l.addi	r1,r1,28
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-16(r1)	 # SI load
	l.lwz   	r14,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r16,-8(r1)	 # SI load
.LFE827:
	.size	sqlite3AnalysisLoad, .-sqlite3AnalysisLoad
	.align	4
.proc	sqlite3InitCallback
	.type	sqlite3InitCallback, @function
sqlite3InitCallback:
.LFB1011:
	l.lwz   	r7,4(r3)	 # SI load
	l.sw    	-24(r1),r14	 # SI store
.LCFI3983:
	l.add   	r6,r7,r7
	l.lwz   	r14,0(r3)	 # SI load
	l.add   	r6,r6,r7
	l.sw    	-28(r1),r2	 # SI store
.LCFI3984:
	l.slli  	r6,r6,3
	l.lwz   	r2,8(r14)	 # SI load
	l.sw    	-20(r1),r16	 # SI store
.LCFI3985:
	l.add   	r6,r2,r6
	l.ori   	r16,r5,0	 # move reg to reg
	l.lwz   	r2,20(r6)	 # SI load
	l.addi  	r5,r0,-5	 # move immediate I
	l.lhz   	r4,58(r2)	 # zero_extendqisi2
	l.and   	r4,r4,r5
	l.sw    	-16(r1),r18	 # SI store
.LCFI3986:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3987:
	l.sw    	-12(r1),r20	 # SI store
.LCFI3988:
	l.sw    	-8(r1),r22	 # SI store
.LCFI3989:
	l.sh    	58(r2),r4	 # movhi
	l.addi  	r1,r1,-32
.LCFI3990:
	l.lbz   	r20,30(r14)	 # zero_extendqisi2
	l.sfeqi	r20,0
	l.bnf	.L12613	# delay slot filled
	l.ori   	r18,r3,0	 # move reg to reg
	l.sfeqi	r16,0
	l.bf	.L12603	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
	l.lwz   	r22,4(r16)	 # SI load
	l.sfnei	r22,0
	l.bnf	.L12614
	l.nop			# nop delay slot
	l.lwz   	r2,8(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L12605
	l.nop			# nop delay slot
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bnf	.L12615	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L12605:
	l.lwz   	r2,0(r16)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L12616	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3FindIndex	# delay slot filled
	l.lwz   	r5,0(r6)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12603	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r3,20(r11)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.sfne 	r3,r2
	l.bf	.L12603
	l.nop			# nop delay slot
	l.jal   	atoi	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sw    	20(r14),r11	 # SI store
.L12603:
	l.addi	r1,r1,32
.L12618:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L12613:
	l.lwz   	r4,0(r16)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	corruptSchema	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
	l.j     	.L12618	# delay slot filled
	l.addi	r1,r1,32
.L12615:
	l.jal   	atoi	# delay slot filled
	l.sw    	120(r14),r7	 # SI store
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	124(r14),r11	 # SI store
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3_exec	# delay slot filled
	l.ori   	r7,r1,0	 # move reg to reg
	l.sw    	120(r14),r20	 # SI store
	l.sfeqi	r11,0
	l.bf	.L12603	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r11,7
	l.bnf	.L12617	# delay slot filled
	l.sw    	12(r18),r11	 # SI store
	l.sfeqi	r11,9
	l.bf	.L12607	# delay slot filled
	l.andi  	r11,r11,255
	l.sfeqi	r11,6
	l.bf	.L12607
	l.nop			# nop delay slot
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,0(r16)	 # SI load
	l.jal   	corruptSchema	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
.L12607:
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,0(r1)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L12618	# delay slot filled
	l.addi	r1,r1,32
.L12616:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	corruptSchema	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.j     	.L12618	# delay slot filled
	l.addi	r1,r1,32
.L12614:
	l.lwz   	r4,0(r16)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.jal   	corruptSchema	# delay slot filled
	l.ori   	r2,r22,0	 # move reg to reg
	l.j     	.L12618	# delay slot filled
	l.addi	r1,r1,32
.L12617:
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.j     	.L12607	# delay slot filled
	l.sb    	30(r14),r2	    # movqi
.LFE1011:
	.size	sqlite3InitCallback, .-sqlite3InitCallback
	.section	.rodata.str1.1
.LC323:
	.string	"1"
.LC324:
	.string	"attached databases must use the same text encoding as main database"
.LC325:
	.string	"unsupported file format"
.LC326:
	.string	"SELECT name, rootpage, sql FROM '%q'.%s"
	.section .text
	.align	4
.proc	sqlite3InitOne
	.type	sqlite3InitOne, @function
sqlite3InitOne:
.LFB1012:
	l.sw    	-40(r1),r14	 # SI store
.LCFI3991:
	l.sw    	-36(r1),r16	 # SI store
.LCFI3992:
	l.sw    	-24(r1),r22	 # SI store
.LCFI3993:
	l.sw    	-4(r1),r9	 # SI store
.LCFI3994:
	l.sw    	-44(r1),r2	 # SI store
.LCFI3995:
	l.sw    	-32(r1),r18	 # SI store
.LCFI3996:
	l.sw    	-28(r1),r20	 # SI store
.LCFI3997:
	l.sw    	-20(r1),r24	 # SI store
.LCFI3998:
	l.sw    	-16(r1),r26	 # SI store
.LCFI3999:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4000:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4001:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-128
.LCFI4002:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfeqi	r4,1
	l.bf	.L12647	# delay slot filled
	l.ori   	r22,r5,0	 # move reg to reg
	l.movhi  	r2,hi(master_schema.18239)
	l.movhi  	r20,hi(.LC199)
	l.ori   	r2,r2,lo(master_schema.18239)
	l.ori   	r20,r20,lo(.LC199)
.L12620:
	l.addi  	r28,r1,52
	l.movhi  	r7,hi(.LC323)
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r7,r7,lo(.LC323)
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.addi  	r5,r1,68
	l.sw    	76(r1),r2	 # SI store
	l.sw    	68(r1),r20	 # SI store
	l.sw    	72(r1),r7	 # SI store
	l.sw    	80(r1),r6	 # SI store
	l.sw    	52(r1),r14	 # SI store
	l.sw    	56(r1),r16	 # SI store
	l.sw    	64(r1),r6	 # SI store
	l.jal   	sqlite3InitCallback	# delay slot filled
	l.sw    	60(r1),r22	 # SI store
	l.lwz   	r2,64(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L12621	# delay slot filled
	l.xori  	r4,r2,3082
	l.xori  	r3,r2,7
	l.sub   	r5,r0,r4
	l.sub   	r16,r0,r3
	l.or    	r4,r5,r4
	l.or    	r16,r16,r3
	l.and   	r16,r16,r4
	l.xori  	r16,r16,0xffff
	l.srli  	r16,r16,31
.L12622:
	l.sfeqi	r16,0
.L12663:
	l.bf	.L12625
	l.nop			# nop delay slot
.L12626:
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	30(r14),r3	    # movqi
.L12625:
	l.addi	r1,r1,128
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L12621:
	l.add   	r30,r16,r16
	l.lwz   	r24,8(r14)	 # SI load
	l.add   	r30,r30,r16
	l.ori   	r3,r14,0	 # move reg to reg
	l.slli  	r30,r30,3
	l.ori   	r4,r20,0	 # move reg to reg
	l.add   	r18,r24,r30
	l.jal   	sqlite3FindTable	# delay slot filled
	l.lwz   	r5,0(r18)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L12623
	l.nop			# nop delay slot
	l.lbz   	r3,34(r11)	 # zero_extendqisi2
	l.ori   	r3,r3,1
	l.sb    	34(r11),r3	    # movqi
	l.lwz   	r24,8(r14)	 # SI load
	l.add   	r18,r24,r30
.L12623:
	l.lwz   	r3,4(r18)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L12659	# delay slot filled
	l.sfnei	r16,1
	l.jal   	sqlite3MallocZero	# delay slot filled
	l.addi  	r3,r0,212	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L12648	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.lwz   	r2,4(r18)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r4,4(r2)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	4(r4),r6	 # SI store
	l.ori   	r7,r11,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	btreeCursor	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
	l.sfeqi	r11,16
	l.bf	.L12627	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L12665	# delay slot filled
	l.addi  	r26,r1,12
.L12658:
	l.andi  	r3,r2,255
	l.movhi  	r6,hi(.LC124)
	l.sfgtui	r3,26
	l.bf	.L12633	# delay slot filled
	l.ori   	r6,r6,lo(.LC124)
	l.movhi  	r4,hi(aMsg.21565)
	l.slli  	r3,r3,2
	l.ori   	r4,r4,lo(aMsg.21565)
	l.add   	r3,r3,r4
	l.lwz   	r6,0(r3)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L12666	# delay slot filled
	l.movhi  	r5,hi(.LC78)
	l.movhi  	r6,hi(.LC124)
	l.ori   	r6,r6,lo(.LC124)
.L12633:
	l.movhi  	r5,hi(.LC78)
.L12666:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3SetString	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.xori  	r4,r2,7
	l.xori  	r3,r2,3082
	l.sub   	r5,r0,r4
	l.sub   	r16,r0,r3
	l.or    	r4,r5,r4
	l.or    	r16,r16,r3
	l.and   	r16,r16,r4
	l.xori  	r16,r16,0xffff
	l.srli  	r16,r16,31
.L12631:
	l.jal   	sqlite3BtreeCloseCursor	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.j     	.L12663	# delay slot filled
	l.sfeqi	r16,0
.L12647:
	l.movhi  	r2,hi(temp_master_schema.18240)
	l.movhi  	r20,hi(.LC198)
	l.ori   	r2,r2,lo(temp_master_schema.18240)
	l.j     	.L12620	# delay slot filled
	l.ori   	r20,r20,lo(.LC198)
.L12648:
	l.j     	.L12626	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
.L12659:
	l.bf	.L12625
	l.nop			# nop delay slot
	l.lwz   	r3,44(r24)	 # SI load
	l.lhz   	r4,58(r3)	 # zero_extendqisi2
	l.ori   	r4,r4,1
	l.j     	.L12625	# delay slot filled
	l.sh    	58(r3),r4	 # movhi
.L12627:
	l.addi  	r26,r1,12
.L12665:
	l.addi  	r24,r0,0	 # move immediate I
.L12629:
	l.addi  	r24,r24,1
	l.ori   	r5,r26,0	 # move reg to reg
	l.lwz   	r3,4(r18)	 # SI load
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3BtreeGetMeta	# delay slot filled
	l.addi  	r26,r26,4
	l.sfeqi	r11,0
	l.bnf	.L12658	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r24,10
	l.bf	.L12629	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r3,20(r18)	 # SI load
	l.lwz   	r5,28(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L12634	# delay slot filled
	l.sw    	0(r3),r4	 # SI store
	l.sfnei	r16,0
	l.bnf	.L12660	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.lwz   	r4,8(r14)	 # SI load
	l.lwz   	r4,20(r4)	 # SI load
	l.lbz   	r4,57(r4)	 # zero_extendqisi2
	l.sfeq 	r5,r4
	l.bf	.L12636	# delay slot filled
	l.movhi  	r5,hi(.LC324)
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC324)
	l.ori   	r16,r11,0	 # move reg to reg
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.j     	.L12631
	l.nop			# nop delay slot
.L12634:
	l.lwz   	r4,8(r14)	 # SI load
	l.add   	r5,r4,r30
	l.lwz   	r4,20(r4)	 # SI load
	l.lwz   	r5,20(r5)	 # SI load
	l.lbz   	r4,57(r4)	 # zero_extendqisi2
	l.lhz   	r6,58(r5)	 # zero_extendqisi2
	l.ori   	r6,r6,4
	l.sh    	58(r5),r6	 # movhi
.L12636:
	l.sb    	57(r3),r4	    # movqi
	l.lwz   	r5,20(r18)	 # SI load
	l.lwz   	r3,60(r5)	 # SI load
	l.sfnei	r3,0
	l.bf	.L12667	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L12638	# delay slot filled
	l.addi  	r4,r0,2000	 # move immediate I
	l.srai  	r6,r3,31
	l.xor   	r4,r6,r3
	l.sub   	r4,r4,r6
.L12638:
	l.lwz   	r6,4(r18)	 # SI load
	l.sw    	60(r5),r4	 # SI store
	l.lwz   	r3,4(r6)	 # SI load
	l.lwz   	r7,0(r6)	 # SI load
	l.lwz   	r6,0(r3)	 # SI load
	l.sw    	4(r3),r7	 # SI store
	l.lwz   	r6,160(r6)	 # SI load
	l.lwz   	r3,40(r6)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L12637	# delay slot filled
	l.sw    	16(r6),r4	 # SI store
	l.movhi  	r5,hi(sqlite3Config)
	l.ori   	r5,r5,lo(sqlite3Config)
	l.lwz   	r5,108(r5)	 # SI load
	l.jalr  	r5
	l.nop			# nop delay slot
	l.lwz   	r5,20(r18)	 # SI load
.L12637:
	l.lwz   	r6,16(r1)	 # SI load
.L12667:
	l.sb    	56(r5),r6	    # movqi
	l.lwz   	r4,20(r18)	 # SI load
	l.lbz   	r3,56(r4)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L12668	# delay slot filled
	l.sfleui	r3,4
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.sb    	56(r4),r3	    # movqi
	l.lwz   	r3,20(r18)	 # SI load
	l.lbz   	r3,56(r3)	 # zero_extendqisi2
	l.sfleui	r3,4
.L12668:
	l.bnf	.L12661	# delay slot filled
	l.movhi  	r5,hi(.LC325)
	l.sfnei	r16,0
	l.bf	.L12641	# delay slot filled
	l.sflesi	r6,3
	l.bf	.L12641	# delay slot filled
	l.movhi 	r4,hi(-65536)	 # move immediate M
	l.lwz   	r3,12(r14)	 # SI load
	l.ori   	r4,r4,32767
	l.and   	r3,r3,r4
	l.sw    	12(r14),r3	 # SI store
.L12641:
	l.lwz   	r5,8(r14)	 # SI load
	l.movhi  	r4,hi(.LC326)
	l.add   	r5,r5,r30
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,0(r5)	 # SI load
	l.ori   	r4,r4,lo(.LC326)
	l.sw    	4(r1),r20	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r4,r0,0	 # move immediate I
	l.movhi  	r5,hi(sqlite3InitCallback)
	l.lwz   	r22,248(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	248(r14),r4	 # SI store
	l.ori   	r5,r5,lo(sqlite3InitCallback)
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r6,r28,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3_exec	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.sw    	248(r14),r22	 # SI store
	l.sfnei	r11,0
	l.bf	.L12642	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r18,64(r1)	 # SI load
	l.sfnei	r18,0
	l.bf	.L12643	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3AnalysisLoad	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.L12643:
	l.lbz   	r3,30(r14)	 # zero_extendqisi2
.L12664:
	l.sfeqi	r3,0
	l.bnf	.L12662	# delay slot filled
	l.sfeqi	r18,0
	l.bnf	.L12645
	l.nop			# nop delay slot
.L12646:
	l.lwz   	r3,8(r14)	 # SI load
	l.addi  	r16,r0,0	 # move immediate I
	l.add   	r30,r3,r30
	l.lwz   	r3,20(r30)	 # SI load
	l.lhz   	r4,58(r3)	 # zero_extendqisi2
	l.ori   	r4,r4,1
	l.j     	.L12631	# delay slot filled
	l.sh    	58(r3),r4	 # movhi
.L12662:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r18,r0,7	 # move immediate I
.L12645:
	l.lwz   	r3,12(r14)	 # SI load
	l.movhi 	r4,hi(262144)	 # move immediate M
	l.and   	r3,r3,r4
	l.sfnei	r3,0
	l.bf	.L12646
	l.nop			# nop delay slot
	l.xori  	r2,r18,3082
	l.xori  	r3,r18,7
	l.sub   	r16,r0,r2
	l.sub   	r4,r0,r3
	l.or    	r16,r16,r2
	l.or    	r3,r4,r3
	l.ori   	r2,r18,0	 # move reg to reg
	l.and   	r16,r16,r3
	l.xori  	r16,r16,0xffff
	l.j     	.L12631	# delay slot filled
	l.srli  	r16,r16,31
.L12661:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC325)
	l.jal   	sqlite3SetString	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L12631	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L12642:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L12664	# delay slot filled
	l.lbz   	r3,30(r14)	 # zero_extendqisi2
.L12660:
	l.lwz   	r4,8(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r6,20(r4)	 # SI load
	l.sb    	57(r6),r5	    # movqi
	l.movhi  	r5,hi(.LC265)
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r5,lo(.LC265)
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.addi  	r6,r0,6	 # move immediate I
	l.lwz   	r3,8(r14)	 # SI load
	l.sw    	44(r14),r11	 # SI store
	l.lwz   	r4,20(r3)	 # SI load
	l.lwz   	r3,20(r18)	 # SI load
	l.j     	.L12636	# delay slot filled
	l.lbz   	r4,57(r4)	 # zero_extendqisi2
.LFE1012:
	.size	sqlite3InitOne, .-sqlite3InitOne
	.align	4
.proc	sqlite3Init
	.type	sqlite3Init, @function
sqlite3Init:
.LFB1013:
	l.sw    	-24(r1),r14	 # SI store
.LCFI4003:
	l.sw    	-20(r1),r16	 # SI store
.LCFI4004:
	l.sw    	-12(r1),r20	 # SI store
.LCFI4005:
	l.sw    	-8(r1),r22	 # SI store
.LCFI4006:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4007:
	l.sw    	-28(r1),r2	 # SI store
.LCFI4008:
	l.sw    	-16(r1),r18	 # SI store
.LCFI4009:
	l.addi  	r16,r0,0	 # move immediate I
	l.lbz   	r18,128(r3)	 # zero_extendqisi2
	l.addi  	r1,r1,-28
.LCFI4010:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.sfne 	r18,r16
	l.bf	.L12670	# delay slot filled
	l.lwz   	r22,12(r3)	 # SI load
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.lwz   	r6,4(r3)	 # SI load
	l.sb    	128(r3),r2	    # movqi
	l.ori   	r2,r18,0	 # move reg to reg
	l.xori  	r3,r2,1
	l.sfgts 	r6,r2
	l.bnf	.L12682	# delay slot filled
	l.sub   	r7,r0,r3
.L12675:
	l.or    	r3,r7,r3
	l.sfgesi	r3,0
	l.bnf	.L12683
	l.nop			# nop delay slot
.L12672:
	l.addi  	r2,r2,1
	l.addi  	r18,r18,24
	l.xori  	r3,r2,1
	l.sfgts 	r6,r2
	l.bf	.L12675	# delay slot filled
	l.sub   	r7,r0,r3
.L12682:
	l.sfgtsi	r6,1
	l.bnf	.L12677
	l.nop			# nop delay slot
	l.lwz   	r2,8(r14)	 # SI load
	l.lwz   	r2,44(r2)	 # SI load
	l.lhz   	r2,58(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfnei	r2,0
	l.bnf	.L12684	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L12677:
	l.andi  	r22,r22,16
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.sub   	r16,r0,r22
	l.or    	r16,r16,r22
	l.xori  	r16,r16,0xffff
	l.srli  	r16,r16,31
	l.sfeqi	r16,0
	l.bf	.L12670	# delay slot filled
	l.sb    	128(r14),r3	    # movqi
	l.lwz   	r2,12(r14)	 # SI load
	l.addi  	r3,r0,-17	 # move immediate I
	l.addi  	r16,r0,0	 # move immediate I
	l.and   	r2,r2,r3
	l.sw    	12(r14),r2	 # SI store
.L12670:
	l.addi	r1,r1,28
	l.ori   	r11,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L12683:
	l.lwz   	r3,8(r14)	 # SI load
	l.add   	r3,r3,r18
	l.lwz   	r3,20(r3)	 # SI load
	l.lhz   	r3,58(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,1
	l.sfnei	r3,0
	l.bf	.L12672	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3InitOne	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12673	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.j     	.L12672	# delay slot filled
	l.lwz   	r6,4(r14)	 # SI load
.L12673:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r2,r0,0	 # movqi: move immediate
.L12685:
	l.j     	.L12670	# delay slot filled
	l.sb    	128(r14),r2	    # movqi
.L12684:
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3InitOne	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12677	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L12685	# delay slot filled
	l.addi  	r2,r0,0	 # movqi: move immediate
.LFE1013:
	.size	sqlite3Init, .-sqlite3Init
	.align	4
.proc	sqlite3ReadSchema
	.type	sqlite3ReadSchema, @function
sqlite3ReadSchema:
.LFB1014:
	l.sw    	-8(r1),r2	 # SI store
.LCFI4011:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4012:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r11,r0,0	 # move immediate I
	l.lbz   	r4,128(r3)	 # zero_extendqisi2
	l.sfne 	r4,r11
.LCFI4013:
	l.bnf	.L12689	# delay slot filled
	l.addi  	r1,r1,-8
.L12687:
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.L12689:
	l.jal   	sqlite3Init	# delay slot filled
	l.addi  	r4,r2,8
	l.sfeqi	r11,0
	l.bf	.L12687
	l.nop			# nop delay slot
	l.lwz   	r3,64(r2)	 # SI load
	l.sw    	4(r2),r11	 # SI store
	l.addi  	r3,r3,1
	l.sw    	64(r2),r3	 # SI store
	l.addi	r1,r1,8
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1014:
	.size	sqlite3ReadSchema, .-sqlite3ReadSchema
	.section	.rodata.str1.1
.LC327:
	.string	"temporary table name must be unqualified"
.LC328:
	.string	"table %T already exists"
.LC329:
	.string	"there is already an index named %s"
.LC330:
	.string	"sqlite_sequence"
	.section .text
	.align	4
.proc	sqlite3StartTable
	.type	sqlite3StartTable, @function
sqlite3StartTable:
.LFB868:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4014:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4015:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4016:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4017:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4018:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4019:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4020:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4021:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4022:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4023:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4024:
	l.addi  	r1,r1,-52
.LCFI4025:
	l.ori   	r20,r6,0	 # move reg to reg
	l.addi  	r6,r1,4
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r24,r7,0	 # move reg to reg
	l.ori   	r22,r8,0	 # move reg to reg
	l.jal   	sqlite3TwoPartName	# delay slot filled
	l.lwz   	r16,0(r3)	 # SI load
	l.sfltsi	r11,0
	l.bf	.L12690	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sub   	r4,r0,r20
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.or    	r4,r4,r20
	l.sfgtsi	r11,1
	l.bnf	.L12720	# delay slot filled
	l.srli  	r4,r4,31
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L12733	# delay slot filled
	l.sfeqi	r4,0
.L12736:
	l.bf	.L12734	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
	l.addi  	r14,r0,1	 # move immediate I
.L12734:
	l.ori   	r3,r16,0	 # move reg to reg
		l.lwz   	r6, 0(r5)
		l.lwz   	r7, 4(r5)
		l.sw    	452(r2), r6
		l.sw    	452+4(r2), r7
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12690	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3CheckObjectName	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12730	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,120(r16)	 # SI load
	l.sfeqi	r3,1
	l.bf	.L12696	# delay slot filled
	l.sfnei	r20,1
	l.add   	r26,r14,r14
	l.lwz   	r3,8(r16)	 # SI load
	l.add   	r26,r26,r14
	l.movhi  	r5,hi(.LC199)
	l.slli  	r26,r26,3
	l.ori   	r5,r5,lo(.LC199)
	l.add   	r3,r3,r26
	l.bnf	.L12714	# delay slot filled
	l.lwz   	r28,0(r3)	 # SI load
.L12697:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,18	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r28,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12730	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r24,0
	l.bf	.L12698	# delay slot filled
	l.sfeqi	r20,0
	l.bnf	.L12722	# delay slot filled
	l.addi  	r4,r0,8	 # move immediate I
.L12699:
	l.sfnei	r22,0
	l.bnf	.L12723	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,500(r2)	 # zero_extendqisi2
.L12729:
	l.sfnei	r3,0
	l.bf	.L12735	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L12724	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L12695:
	l.ori   	r3,r16,0	 # move reg to reg
.L12730:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
.L12690:
	l.addi	r1,r1,52
.L12728:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L12720:
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L12736	# delay slot filled
	l.sfeqi	r4,0
.L12733:
	l.bf	.L12734	# delay slot filled
	l.lwz   	r5,4(r1)	 # SI load
	l.movhi  	r4,hi(.LC327)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC327)
	l.j     	.L12728	# delay slot filled
	l.addi	r1,r1,52
.L12696:
	l.add   	r26,r14,r14
	l.lwz   	r3,8(r16)	 # SI load
	l.add   	r26,r26,r14
	l.slli  	r26,r26,3
	l.add   	r3,r3,r26
	l.lwz   	r28,0(r3)	 # SI load
.L12714:
	l.movhi  	r5,hi(.LC198)
	l.addi  	r20,r0,1	 # move immediate I
	l.j     	.L12697	# delay slot filled
	l.ori   	r5,r5,lo(.LC198)
.L12698:
	l.bf	.L12699	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.j     	.L12699	# delay slot filled
	l.addi  	r4,r0,4	 # move immediate I
.L12701:
	l.ori   	r3,r16,0	 # move reg to reg
.L12735:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r0,80	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L12725	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r3,8(r16)	 # SI load
	l.sw    	4(r11),r18	 # SI store
	l.add   	r26,r3,r26
	l.addi  	r3,r0,-1	 # move immediate I
	l.lwz   	r4,20(r26)	 # SI load
	l.sw    	8(r11),r3	 # SI store
	l.addi  	r3,r0,1	 # movhi: move immediate
	l.sw    	72(r11),r4	 # SI store
	l.sh    	32(r11),r3	 # movhi
	l.lbz   	r3,226(r16)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L12726	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.L12705:
	l.lwz   	r3,476(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L12706	# delay slot filled
	l.sw    	0(r20),r4	 # SI store
	l.jal   	sqlite3DeleteTable
	l.nop			# nop delay slot
.L12706:
	l.lbz   	r3,19(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L12707	# delay slot filled
	l.sw    	476(r2),r20	 # SI store
	l.movhi  	r4,hi(.LC330)
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC330)
	l.sfnei	r11,0
	l.bf	.L12707
	l.nop			# nop delay slot
	l.lwz   	r3,72(r20)	 # SI load
	l.sw    	52(r3),r20	 # SI store
.L12707:
	l.lbz   	r20,128(r16)	 # zero_extendqisi2
	l.sfnei	r20,0
	l.bf	.L12690
	l.nop			# nop delay slot
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r2,12
	l.sfeqi	r11,0
	l.bf	.L12690	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bnf	.L12727	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r28,72(r2)	 # SI load
.L12732:
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r20,r28,3
	l.addi  	r26,r28,1
	l.addi  	r28,r28,2
	l.addi  	r4,r0,112	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.sw    	404(r2),r26	 # SI store
	l.sw    	408(r2),r28	 # SI store
	l.sw    	72(r2),r20	 # SI store
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r3,144(r18)	 # SI load
	l.sll   	r4,r4,r14
	l.and   	r5,r4,r3
	l.sfnei	r5,0
	l.bf	.L12709	# delay slot filled
	l.or    	r3,r4,r3
	l.sw    	144(r18),r3	 # SI store
.L12709:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,11	 # move immediate I
	l.lwz   	r3,12(r16)	 # SI load
	l.ori   	r30,r11,0	 # move reg to reg
	l.andi  	r3,r3,32768
	l.sfeqi	r3,0
	l.bf	.L12710	# delay slot filled
	l.addi  	r5,r0,4	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
.L12710:
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.or    	r22,r22,r24
	l.ori   	r7,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r3,8(r16)	 # SI load
	l.addi  	r4,r0,48	 # move immediate I
	l.lwz   	r3,20(r3)	 # SI load
	l.ori   	r6,r20,0	 # move reg to reg
	l.lbz   	r5,57(r3)	 # zero_extendqisi2
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r6,r4,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bf	.L12711	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
.L12731:
	l.jal   	sqlite3OpenMasterTable	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,110	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r26,0	 # move reg to reg
	l.lwz   	r2,20(r18)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L12713	# delay slot filled
	l.addi  	r6,r0,8	 # movqi: move immediate
	l.lwz   	r3,12(r18)	 # SI load
	l.addi  	r3,r3,-1
	l.slli  	r4,r3,2
	l.slli  	r3,r3,4
	l.add   	r3,r4,r3
	l.add   	r2,r2,r3
	l.sb    	3(r2),r6	    # movqi
.L12713:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.addi  	r4,r0,33	 # move immediate I
	l.j     	.L12728	# delay slot filled
	l.addi	r1,r1,52
.L12723:
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r28,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12695
	l.nop			# nop delay slot
	l.j     	.L12729	# delay slot filled
	l.lbz   	r3,500(r2)	 # zero_extendqisi2
.L12722:
	l.j     	.L12699	# delay slot filled
	l.addi  	r4,r0,6	 # move immediate I
.L12726:
	l.j     	.L12705	# delay slot filled
	l.ori   	r4,r3,0	 # move reg to reg
.L12724:
	l.lwz   	r5,8(r16)	 # SI load
	l.add   	r5,r5,r26
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3FindTable	# delay slot filled
	l.lwz   	r5,0(r5)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L12702	# delay slot filled
	l.lwz   	r3,52(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L12695	# delay slot filled
	l.movhi  	r4,hi(.LC328)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC328)
	l.lwz   	r2,4(r1)	 # SI load
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.j     	.L12730	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L12725:
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.addi  	r4,r0,7	 # move immediate I
	l.sb    	30(r16),r7	    # movqi
	l.sw    	4(r2),r4	 # SI store
	l.lwz   	r3,64(r2)	 # SI load
	l.addi  	r3,r3,1
	l.j     	.L12695	# delay slot filled
	l.sw    	64(r2),r3	 # SI store
.L12711:
	l.addi  	r4,r0,53	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
	l.j     	.L12731	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L12727:
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.addi  	r4,r0,124	 # move immediate I
	l.j     	.L12732	# delay slot filled
	l.lwz   	r28,72(r2)	 # SI load
.L12702:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3FindIndex	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12701	# delay slot filled
	l.sfeqi	r14,0
	l.bf	.L12737	# delay slot filled
	l.movhi  	r4,hi(.LC329)
	l.lbz   	r3,128(r16)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L12701
	l.nop			# nop delay slot
.L12737:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC329)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.j     	.L12730	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.LFE868:
	.size	sqlite3StartTable, .-sqlite3StartTable
	.section	.rodata.str1.1
.LC331:
	.string	"no such view"
.LC332:
	.string	"no such table"
	.section .text
	.align	4
.proc	sqlite3LocateTable
	.type	sqlite3LocateTable, @function
sqlite3LocateTable:
.LFB852:
	l.sw    	-24(r1),r2	 # SI store
.LCFI4026:
	l.sw    	-20(r1),r14	 # SI store
.LCFI4027:
	l.sw    	-16(r1),r16	 # SI store
.LCFI4028:
	l.sw    	-12(r1),r18	 # SI store
.LCFI4029:
	l.sw    	-8(r1),r20	 # SI store
.LCFI4030:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4031:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r1,r1,-36
.LCFI4032:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
	l.sfne 	r11,r2
	l.bnf	.L12745	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
.L12739:
	l.addi	r1,r1,36
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L12745:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12739	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.movhi  	r5,hi(.LC332)
	l.sfeqi	r20,0
	l.bnf	.L12746	# delay slot filled
	l.ori   	r5,r5,lo(.LC332)
.L12740:
	l.sfeqi	r16,0
	l.bf	.L12741	# delay slot filled
	l.movhi  	r4,hi(.LC93)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC93)
	l.sw    	0(r1),r5	 # SI store
	l.sw    	4(r1),r16	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	8(r1),r18	 # SI store
	l.addi  	r3,r0,1	 # movqi: move immediate
.L12747:
	l.j     	.L12739	# delay slot filled
	l.sb    	18(r14),r3	    # movqi
.L12746:
	l.movhi  	r5,hi(.LC331)
	l.j     	.L12740	# delay slot filled
	l.ori   	r5,r5,lo(.LC331)
.L12741:
	l.movhi  	r4,hi(.LC94)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC94)
	l.sw    	0(r1),r5	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r18	 # SI store
	l.j     	.L12747	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
.LFE852:
	.size	sqlite3LocateTable, .-sqlite3LocateTable
	.section	.rodata.str1.1
.LC333:
	.string	"sqlite_subquery_%p_"
.LC334:
	.string	"a NATURAL join may not have an ON or USING clause"
.LC335:
	.string	"cannot have both ON and USING clauses in the same join"
.LC336:
	.string	"cannot join using column %s - column not present in both tables"
.LC337:
	.string	"no such table: %s"
.LC338:
	.string	"no tables specified"
.LC339:
	.string	"too many columns in result set"
	.section .text
	.align	4
.proc	selectExpander
	.type	selectExpander, @function
selectExpander:
.LFB1063:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4033:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4034:
	l.lwz   	r2,8(r3)	 # SI load
	l.sw    	-4(r1),r9	 # SI store
.LCFI4035:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4036:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4037:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4038:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4039:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4040:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4041:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4042:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4043:
	l.addi  	r1,r1,-136
.LCFI4044:
	l.ori   	r24,r3,0	 # move reg to reg
	l.sw    	28(r1),r2	 # SI store
	l.sw    	24(r1),r4	 # SI store
	l.lwz   	r3,28(r1)	 # SI load
	l.addi  	r2,r0,2	 # move immediate I
	l.lwz   	r3,0(r3)	 # SI load
	l.lbz   	r5,30(r3)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L12749	# delay slot filled
	l.sw    	20(r1),r3	 # SI store
	l.lwz   	r4,8(r4)	 # SI load
	l.addi  	r2,r0,1	 # move immediate I
	l.sfeqi	r4,0
	l.bf	.L12749	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
	l.lwz   	r6,24(r1)	 # SI load
	l.lhz   	r5,6(r6)	 # zero_extendqisi2
	l.andi  	r6,r5,16
	l.sfnei	r6,0
	l.bnf	.L12853	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
.L12749:
	l.addi	r1,r1,136
.L12868:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L12853:
	l.lwz   	r4,24(r1)	 # SI load
	l.ori   	r5,r5,16
	l.sh    	6(r4),r5	 # movhi
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.jal   	sqlite3SrcListAssignCursors	# delay slot filled
	l.sw    	76(r1),r5	 # SI store
	l.lwz   	r6,12(r1)	 # SI load
	l.addi  	r3,r6,4
	l.lhs   	r5,0(r6)	 # extendhisi2_no_sext_mem
	l.sflesi	r5,0
	l.bf	.L12750	# delay slot filled
	l.sw    	32(r1),r3	 # SI store
	l.lwz   	r18,16(r6)	 # SI load
	l.sfnei	r18,0
	l.bf	.L12749	# delay slot filled
	l.addi  	r20,r6,20
	l.sw    	16(r1),r24	 # SI store
	l.addi  	r16,r6,16
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r26,r0,-1	 # move immediate I
	l.lwz   	r22,28(r1)	 # SI load
	l.lwz   	r30,20(r1)	 # SI load
	l.j     	.L12751	# delay slot filled
	l.ori   	r24,r6,0	 # move reg to reg
.L12752:
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3LocateTable	# delay slot filled
	l.lwz   	r6,0(r14)	 # SI load
	l.sw    	0(r16),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L12821	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhz   	r4,32(r11)	 # zero_extendqisi2
	l.addi  	r4,r4,1
	l.lwz   	r5,28(r11)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L12854	# delay slot filled
	l.sh    	32(r11),r4	 # movhi
	l.ori   	r3,r22,0	 # move reg to reg
.L12866:
	l.jal   	sqlite3ViewGetColumnNames	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12821
	l.nop			# nop delay slot
	l.lwz   	r5,0(r20)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L12855	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
.L12755:
	l.ori   	r3,r22,0	 # move reg to reg
.L12867:
	l.jal   	sqlite3IndexedByLookup	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12821	# delay slot filled
	l.addi  	r18,r18,1
	l.lhs   	r2,0(r24)	 # extendhisi2_no_sext_mem
	l.sfgts 	r2,r18
	l.bnf	.L12750	# delay slot filled
	l.addi  	r14,r14,52
	l.addi  	r20,r20,52
	l.lwz   	r2,12(r14)	 # SI load
	l.sfnei	r2,0
	l.bf	.L12815	# delay slot filled
	l.addi  	r16,r16,52
.L12751:
	l.lwz   	r5,4(r14)	 # SI load
	l.sfnei	r5,0
	l.bf	.L12752	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r2,0(r20)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r0,80	 # move immediate I
	l.sw    	0(r16),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L12821	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.lbz   	r5,226(r30)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bnf	.L12856	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
.L12753:
	l.sw    	0(r28),r4	 # SI store
	l.addi  	r4,r0,1	 # movhi: move immediate
	l.ori   	r3,r30,0	 # move reg to reg
	l.sh    	32(r28),r4	 # movhi
	l.movhi  	r4,hi(.LC333)
	l.sw    	0(r1),r28	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.ori   	r4,r4,lo(.LC333)
	l.j     	.L12754	# delay slot filled
	l.sw    	4(r28),r11	 # SI store
.L12818:
	l.ori   	r2,r4,0	 # move reg to reg
.L12754:
	l.lwz   	r4,28(r2)	 # SI load
	l.sfnei	r4,0
	l.bf	.L12818	# delay slot filled
	l.addi  	r6,r28,12
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r3,0(r22)	 # SI load
	l.lwz   	r4,0(r5)	 # SI load
	l.addi  	r5,r5,12
	l.jal   	selectColumnsFromExprList.clone.110	# delay slot filled
	l.addi  	r7,r28,16
	l.lbz   	r2,34(r28)	 # zero_extendqisi2
	l.ori   	r2,r2,2
	l.sw    	8(r28),r26	 # SI store
	l.j     	.L12755	# delay slot filled
	l.sb    	34(r28),r2	    # movqi
.L12854:
	l.lbz   	r4,34(r11)	 # zero_extendqisi2
	l.andi  	r4,r4,16
	l.sfeqi	r4,0
	l.bf	.L12755	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.j     	.L12866
	l.nop			# nop delay slot
.L12856:
	l.j     	.L12753	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
.L12821:
	l.j     	.L12749	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
.L12855:
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3WalkSelect	# delay slot filled
	l.sw    	0(r20),r11	 # SI store
	l.j     	.L12867	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L12750:
	l.lwz   	r5,20(r1)	 # SI load
	l.lbz   	r3,30(r5)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L12749	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
	l.lwz   	r6,24(r1)	 # SI load
	l.lwz   	r6,8(r6)	 # SI load
	l.lhs   	r2,0(r6)	 # extendhisi2_no_sext_mem
	l.sflesi	r2,1
	l.bf	.L12758	# delay slot filled
	l.sw    	72(r1),r6	 # SI store
	l.addi  	r4,r6,56
	l.addi  	r5,r6,16
	l.addi  	r6,r6,88
	l.sw    	56(r1),r4	 # SI store
	l.sw    	60(r1),r6	 # SI store
	l.lwz   	r4,72(r1)	 # SI load
	l.lwz   	r6,24(r1)	 # SI load
	l.sw    	68(r1),r5	 # SI store
	l.addi  	r6,r6,12
	l.addi  	r5,r4,84
	l.addi  	r28,r4,12
	l.addi  	r26,r4,64
	l.addi  	r24,r4,80
	l.sw    	64(r1),r5	 # SI store
	l.sw    	80(r1),r3	 # SI store
	l.sw    	16(r1),r6	 # SI store
.L12771:
	l.lwz   	r3,56(r1)	 # SI load
	l.lwz   	r4,68(r1)	 # SI load
	l.lwz   	r22,12(r3)	 # SI load
	l.lwz   	r20,0(r4)	 # SI load
	l.sub   	r4,r0,r22
	l.or    	r4,r22,r4
	l.sfgesi	r4,0
	l.bf	.L12871	# delay slot filled
	l.lwz   	r4,80(r1)	 # SI load
	l.sub   	r4,r0,r20
	l.or    	r4,r20,r4
	l.sfgesi	r4,0
	l.bf	.L12871	# delay slot filled
	l.lwz   	r4,80(r1)	 # SI load
	l.lbz   	r2,21(r3)	 # zero_extendqisi2
	l.srli  	r4,r2,5
	l.andi  	r2,r2,4
	l.sfeqi	r2,0
	l.bf	.L12760	# delay slot filled
	l.andi  	r30,r4,1
	l.lwz   	r5,64(r1)	 # SI load
	l.lwz   	r2,0(r5)	 # SI load
	l.sfnei	r2,0
	l.bf	.L12761	# delay slot filled
	l.lwz   	r6,60(r1)	 # SI load
	l.lwz   	r14,0(r6)	 # SI load
	l.sfnei	r14,0
	l.bf	.L12872	# delay slot filled
	l.movhi  	r4,hi(.LC334)
	l.lwz   	r18,12(r20)	 # SI load
	l.sfgtsi	r18,0
	l.bnf	.L12836	# delay slot filled
	l.addi  	r3,r22,16
	l.addi  	r4,r20,4
	l.addi  	r5,r22,4
	l.sw    	40(r1),r26	 # SI store
	l.sw    	44(r1),r28	 # SI store
	l.ori   	r26,r22,0	 # move reg to reg
	l.sw    	48(r1),r30	 # SI store
	l.sw    	52(r1),r3	 # SI store
	l.ori   	r16,r14,0	 # move reg to reg
	l.sw    	84(r1),r4	 # SI store
	l.sw    	36(r1),r5	 # SI store
	l.lwz   	r22,28(r1)	 # SI load
	l.ori   	r28,r3,0	 # move reg to reg
	l.ori   	r30,r4,0	 # move reg to reg
.L12765:
	l.lwz   	r2,16(r20)	 # SI load
	l.lwz   	r3,12(r26)	 # SI load
	l.add   	r2,r2,r14
	l.ori   	r4,r28,0	 # move reg to reg
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r16,r16,1
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	columnIndex.clone.87	# delay slot filled
	l.addi  	r14,r14,20
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r30,0	 # move reg to reg
	l.sfltsi	r11,0
	l.bf	.L12764	# delay slot filled
	l.lwz   	r7,36(r1)	 # SI load
	l.lwz   	r2,0(r24)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r2,48(r1)	 # SI load
	l.sw    	4(r1),r6	 # SI store
	l.sw    	8(r1),r2	 # SI store
	l.lwz   	r2,44(r1)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.lwz   	r2,40(r1)	 # SI load
	l.jal   	addWhereTerm.clone.116	# delay slot filled
	l.lwz   	r8,0(r2)	 # SI load
	l.lwz   	r18,12(r20)	 # SI load
.L12764:
	l.sflts 	r16,r18
	l.bf	.L12765
	l.nop			# nop delay slot
	l.ori   	r22,r26,0	 # move reg to reg
	l.lwz   	r28,44(r1)	 # SI load
	l.lwz   	r26,40(r1)	 # SI load
	l.lwz   	r30,48(r1)	 # SI load
.L12760:
	l.lwz   	r3,64(r1)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L12857	# delay slot filled
	l.lwz   	r6,60(r1)	 # SI load
	l.lwz   	r2,0(r6)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L12858	# delay slot filled
	l.sfeqi	r30,0
	l.bnf	.L12859	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
.L12767:
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r6,24(r1)	 # SI load
	l.lwz   	r3,0(r4)	 # SI load
	l.jal   	sqlite3ExprAnd	# delay slot filled
	l.lwz   	r4,12(r6)	 # SI load
	l.lwz   	r2,24(r1)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,64(r1)	 # SI load
	l.lwz   	r5,60(r1)	 # SI load
	l.sw    	12(r2),r11	 # SI store
	l.sw    	0(r3),r4	 # SI store
	l.lwz   	r14,0(r5)	 # SI load
.L12763:
	l.sfeqi	r14,0
	l.bf	.L12873	# delay slot filled
	l.lwz   	r6,72(r1)	 # SI load
	l.lwz   	r2,4(r14)	 # SI load
	l.sflesi	r2,0
	l.bf	.L12851	# delay slot filled
	l.addi  	r5,r22,16
	l.addi  	r4,r20,16
	l.addi  	r2,r22,4
	l.addi  	r16,r0,0	 # move immediate I
	l.addi  	r6,r20,4
	l.sw    	44(r1),r26	 # SI store
	l.sw    	48(r1),r28	 # SI store
	l.sw    	52(r1),r30	 # SI store
	l.sw    	84(r1),r4	 # SI store
	l.ori   	r30,r22,0	 # move reg to reg
	l.ori   	r18,r16,0	 # move reg to reg
	l.sw    	88(r1),r5	 # SI store
	l.sw    	36(r1),r6	 # SI store
	l.sw    	40(r1),r2	 # SI store
	l.lwz   	r28,28(r1)	 # SI load
	l.ori   	r22,r4,0	 # move reg to reg
	l.j     	.L12770	# delay slot filled
	l.ori   	r26,r5,0	 # move reg to reg
.L12861:
	l.jal   	columnIndex.clone.87	# delay slot filled
	l.lwz   	r3,12(r30)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r5,36(r1)	 # SI load
	l.sfgesi	r11,0
	l.bnf	.L12768	# delay slot filled
	l.lwz   	r7,40(r1)	 # SI load
	l.lwz   	r2,0(r24)	 # SI load
	l.lwz   	r6,16(r1)	 # SI load
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r2,52(r1)	 # SI load
	l.sw    	4(r1),r6	 # SI store
	l.sw    	8(r1),r2	 # SI store
	l.lwz   	r2,48(r1)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.lwz   	r2,44(r1)	 # SI load
	l.jal   	addWhereTerm.clone.116	# delay slot filled
	l.lwz   	r8,0(r2)	 # SI load
	l.lwz   	r2,4(r14)	 # SI load
	l.sflts 	r18,r2
	l.bnf	.L12860
	l.nop			# nop delay slot
.L12770:
	l.lwz   	r2,0(r14)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.add   	r2,r2,r16
	l.lwz   	r3,12(r20)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r18,r18,1
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	columnIndex.clone.87	# delay slot filled
	l.addi  	r16,r16,8
	l.ori   	r4,r26,0	 # move reg to reg
	l.sfltsi	r11,0
	l.bnf	.L12861	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
.L12768:
	l.movhi  	r4,hi(.LC336)
	l.lwz   	r3,28(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC336)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L12868	# delay slot filled
	l.addi	r1,r1,136
.L12860:
	l.lwz   	r26,44(r1)	 # SI load
	l.lwz   	r28,48(r1)	 # SI load
.L12851:
	l.lwz   	r3,72(r1)	 # SI load
	l.lhs   	r2,0(r3)	 # extendhisi2_no_sext_mem
.L12759:
	l.lwz   	r4,80(r1)	 # SI load
.L12871:
	l.lwz   	r5,68(r1)	 # SI load
	l.addi  	r4,r4,1
	l.lwz   	r6,60(r1)	 # SI load
	l.lwz   	r3,64(r1)	 # SI load
	l.sw    	80(r1),r4	 # SI store
	l.addi  	r5,r5,52
	l.addi  	r6,r6,52
	l.addi  	r3,r3,52
	l.addi  	r4,r2,-1
	l.sw    	68(r1),r5	 # SI store
	l.sw    	60(r1),r6	 # SI store
	l.lwz   	r5,80(r1)	 # SI load
	l.sw    	64(r1),r3	 # SI store
	l.addi  	r28,r28,52
	l.addi  	r26,r26,52
	l.sfges 	r5,r4
	l.bf	.L12758	# delay slot filled
	l.addi  	r24,r24,52
	l.lwz   	r6,56(r1)	 # SI load
	l.addi  	r6,r6,52
	l.j     	.L12771	# delay slot filled
	l.sw    	56(r1),r6	 # SI store
.L12815:
	l.j     	.L12749	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L12758:
	l.lwz   	r2,76(r1)	 # SI load
	l.lwz   	r8,0(r2)	 # SI load
	l.sflesi	r8,0
	l.bf	.L12874	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.lwz   	r7,0(r3)	 # SI load
	l.lbz   	r2,0(r7)	 # zero_extendqisi2
	l.sfeqi	r2,113
	l.bf	.L12773	# delay slot filled
	l.addi  	r6,r3,16
	l.j     	.L12774	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L12775:
	l.sflts 	r5,r8
.L12875:
	l.bnf	.L12772
	l.nop			# nop delay slot
	l.lwz   	r7,0(r6)	 # SI load
	l.lbz   	r2,0(r7)	 # zero_extendqisi2
	l.sfeqi	r2,113
	l.bf	.L12773	# delay slot filled
	l.addi  	r6,r6,16
.L12774:
	l.sfnei	r2,118
	l.bf	.L12775	# delay slot filled
	l.addi  	r5,r5,1
	l.lwz   	r2,24(r7)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L12875	# delay slot filled
	l.sflts 	r5,r8
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.sfnei	r2,113
	l.bf	.L12875	# delay slot filled
	l.sflts 	r5,r8
	l.lwz   	r2,20(r7)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L12875	# delay slot filled
	l.sflts 	r5,r8
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.sfeqi	r2,26
	l.bnf	.L12875	# delay slot filled
	l.sflts 	r5,r8
.L12773:
	l.lwz   	r4,28(r1)	 # SI load
	l.addi  	r6,r3,4
	l.lwz   	r2,0(r4)	 # SI load
	l.sw    	64(r1),r3	 # SI store
	l.lwz   	r2,12(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.andi  	r2,r2,96
	l.sw    	36(r1),r5	 # SI store
	l.xori  	r2,r2,32
	l.sw    	68(r1),r5	 # SI store
	l.sub   	r3,r0,r2
	l.lwz   	r4,32(r1)	 # SI load
	l.or    	r2,r3,r2
	l.lwz   	r5,12(r1)	 # SI load
	l.xori  	r2,r2,0xffff
	l.addi  	r4,r4,12
	l.srli  	r2,r2,31
	l.addi  	r5,r5,-36
	l.sw    	72(r1),r6	 # SI store
	l.sw    	80(r1),r4	 # SI store
	l.sw    	84(r1),r5	 # SI store
	l.j     	.L12810	# delay slot filled
	l.sw    	44(r1),r2	 # SI store
.L12863:
	l.bf	.L12876	# delay slot filled
	l.lwz   	r2,28(r1)	 # SI load
	l.lwz   	r2,24(r5)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L12778
	l.nop			# nop delay slot
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.sfeqi	r2,113
	l.bf	.L12779
	l.nop			# nop delay slot
.L12778:
	l.lwz   	r2,28(r1)	 # SI load
.L12876:
	l.lwz   	r4,36(r1)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L12780	# delay slot filled
	l.sw    	36(r1),r11	 # SI store
	l.lwz   	r2,0(r11)	 # SI load
	l.lwz   	r4,12(r11)	 # SI load
	l.addi  	r2,r2,-1
	l.lwz   	r5,72(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r3,0(r5)	 # SI load
	l.add   	r2,r4,r2
	l.sw    	4(r2),r3	 # SI store
.L12780:
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r6,64(r1)	 # SI load
	l.lwz   	r3,72(r1)	 # SI load
	l.sw    	0(r6),r2	 # SI store
	l.sw    	0(r3),r2	 # SI store
	l.lwz   	r6,68(r1)	 # SI load
.L12869:
	l.lwz   	r4,64(r1)	 # SI load
	l.lwz   	r5,72(r1)	 # SI load
	l.addi  	r6,r6,1
	l.lwz   	r3,76(r1)	 # SI load
	l.addi  	r4,r4,16
	l.addi  	r5,r5,16
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	68(r1),r6	 # SI store
	l.sw    	64(r1),r4	 # SI store
	l.sfgts 	r2,r6
	l.bnf	.L12862	# delay slot filled
	l.sw    	72(r1),r5	 # SI store
.L12810:
	l.lwz   	r6,64(r1)	 # SI load
	l.lwz   	r5,0(r6)	 # SI load
	l.lbz   	r2,0(r5)	 # zero_extendqisi2
	l.sfeqi	r2,113
	l.bnf	.L12863	# delay slot filled
	l.sfnei	r2,118
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	60(r1),r4	 # SI store
.L12777:
	l.lwz   	r5,12(r1)	 # SI load
	l.lhs   	r2,0(r5)	 # extendhisi2_no_sext_mem
	l.sflesi	r2,0
	l.bf	.L12782	# delay slot filled
	l.lwz   	r6,60(r1)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.sub   	r3,r0,r6
	l.lwz   	r4,80(r1)	 # SI load
	l.or    	r3,r6,r3
	l.lwz   	r5,84(r1)	 # SI load
	l.xori  	r3,r3,0xffff
	l.sw    	56(r1),r4	 # SI store
	l.srli  	r3,r3,31
	l.sw    	52(r1),r5	 # SI store
	l.sw    	48(r1),r14	 # SI store
	l.sw    	40(r1),r3	 # SI store
	l.lwz   	r30,28(r1)	 # SI load
.L12807:
	l.lwz   	r6,56(r1)	 # SI load
	l.lwz   	r28,-4(r6)	 # SI load
	l.sfeqi	r28,0
	l.bf	.L12783	# delay slot filled
	l.lwz   	r26,0(r6)	 # SI load
	l.lbs   	r5,0(r28)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bnf	.L12783
	l.nop			# nop delay slot
.L12784:
	l.lwz   	r3,20(r1)	 # SI load
	l.lbz   	r5,30(r3)	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L12877	# delay slot filled
	l.sfnei	r14,0
	l.lwz   	r4,60(r1)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L12789	# delay slot filled
	l.lwz   	r3,60(r1)	 # SI load
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12878	# delay slot filled
	l.lwz   	r6,48(r1)	 # SI load
.L12789:
	l.lwz   	r16,12(r26)	 # SI load
	l.sfgtsi	r16,0
	l.bnf	.L12852	# delay slot filled
	l.lwz   	r5,48(r1)	 # SI load
	l.lwz   	r6,48(r1)	 # SI load
	l.addi  	r2,r5,-1
	l.srai  	r7,r5,31
	l.add   	r5,r2,r2
	l.lwz   	r3,12(r1)	 # SI load
	l.add   	r5,r5,r2
	l.sub   	r7,r7,r6
	l.slli  	r6,r5,4
	l.srli  	r7,r7,31
	l.addi  	r22,r0,0	 # move immediate I
	l.add   	r5,r5,r6
	l.sw    	32(r1),r7	 # SI store
	l.add   	r2,r5,r2
	l.ori   	r24,r22,0	 # move reg to reg
	l.add   	r2,r3,r2
	l.addi  	r2,r2,56
	l.j     	.L12806	# delay slot filled
	l.sw    	16(r1),r2	 # SI store
.L12865:
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r2,0(r3)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.jal   	columnIndex.clone.87	# delay slot filled
	l.addi  	r4,r2,16
	l.sfgesi	r11,0
	l.bnf	.L12792
	l.nop			# nop delay slot
.L12790:
	l.addi  	r24,r24,1
	l.sfgts 	r16,r24
	l.bnf	.L12864	# delay slot filled
	l.addi  	r22,r22,20
.L12806:
	l.lwz   	r2,16(r26)	 # SI load
	l.add   	r2,r2,r22
	l.lbz   	r6,19(r2)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L12790	# delay slot filled
	l.lwz   	r18,0(r2)	 # SI load
	l.lwz   	r4,32(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L12791	# delay slot filled
	l.lwz   	r5,40(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L12791	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.lbz   	r2,21(r6)	 # zero_extendqisi2
	l.andi  	r2,r2,4
	l.sfeqi	r2,0
	l.bnf	.L12865	# delay slot filled
	l.lwz   	r3,52(r1)	 # SI load
.L12792:
	l.lwz   	r4,16(r1)	 # SI load
	l.lwz   	r3,32(r4)	 # SI load
	l.jal   	sqlite3IdListIndex	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfgesi	r11,0
	l.bf	.L12790
	l.nop			# nop delay slot
.L12791:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12825	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sw    	4(r11),r18	 # SI store
	l.sfeqi	r18,0
	l.bf	.L12793	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
	l.lbs   	r2,0(r18)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L12879	# delay slot filled
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.ori   	r2,r18,0	 # move reg to reg
	l.addi  	r2,r2,1
.L12880:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L12880	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r18
	l.ori   	r5,r5,65535
	l.and   	r2,r2,r5
.L12793:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
.L12879:
	l.lwz   	r3,44(r1)	 # SI load
	l.ori   	r6,r6,65535
	l.sfnei	r3,0
	l.and   	r2,r2,r6
	l.bf	.L12796	# delay slot filled
	l.sw    	8(r16),r2	 # SI store
	l.lwz   	r4,12(r1)	 # SI load
	l.lhs   	r2,0(r4)	 # extendhisi2_no_sext_mem
	l.sflesi	r2,1
	l.bf	.L12797	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
.L12796:
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,26	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12828	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sw    	4(r20),r28	 # SI store
	l.sfeqi	r28,0
	l.bf	.L12798	# delay slot filled
	l.ori   	r2,r28,0	 # move reg to reg
	l.lbs   	r2,0(r28)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L12881	# delay slot filled
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.ori   	r2,r28,0	 # move reg to reg
	l.addi  	r2,r2,1
.L12882:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L12882	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r28
	l.ori   	r5,r5,65535
	l.and   	r2,r2,r5
.L12798:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
.L12881:
	l.movhi  	r4,hi(.LC122)
	l.ori   	r6,r6,65535
	l.lwz   	r3,20(r1)	 # SI load
	l.and   	r2,r2,r6
	l.ori   	r4,r4,lo(.LC122)
	l.sw    	8(r20),r2	 # SI store
	l.sw    	0(r1),r28	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	4(r1),r18	 # SI store
	l.sw    	12(r14),r11	 # SI store
	l.ori   	r8,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12801	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lbs   	r2,0(r11)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,0
	l.bf	.L12883	# delay slot filled
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r2,r2,1
.L12884:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L12884	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r8
	l.ori   	r3,r3,65535
	l.and   	r2,r2,r3
.L12801:
	l.movhi 	r4,hi(1073676288)	 # move immediate M
.L12883:
	l.lwz   	r5,8(r14)	 # SI load
	l.ori   	r4,r4,65535
	l.movhi 	r6,hi(1073741824)	 # move immediate M
	l.and   	r2,r2,r4
	l.movhi 	r3,hi(-2147483648)	 # move immediate M
	l.and   	r5,r5,r6
	l.or    	r2,r2,r3
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	16(r14),r2	 # SI store
	l.sw    	8(r14),r5	 # SI store
	l.sw    	4(r14),r4	 # SI store
	l.lwz   	r5,44(r1)	 # SI load
	l.sfne 	r5,r4
	l.bnf	.L12805	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r3,0(r30)	 # SI load
	l.lwz   	r4,36(r1)	 # SI load
	l.addi  	r6,r14,12
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r24,r24,1
	l.lwz   	r16,12(r26)	 # SI load
	l.sw    	36(r1),r11	 # SI store
	l.sfgts 	r16,r24
	l.bf	.L12806	# delay slot filled
	l.addi  	r22,r22,20
.L12864:
	l.lwz   	r3,12(r1)	 # SI load
	l.addi  	r14,r0,1	 # move immediate I
	l.lhs   	r2,0(r3)	 # extendhisi2_no_sext_mem
.L12788:
	l.lwz   	r6,48(r1)	 # SI load
.L12878:
	l.lwz   	r3,56(r1)	 # SI load
	l.lwz   	r4,52(r1)	 # SI load
	l.addi  	r6,r6,1
	l.addi  	r3,r3,52
	l.addi  	r4,r4,52
	l.sw    	48(r1),r6	 # SI store
	l.sw    	56(r1),r3	 # SI store
	l.sfgts 	r2,r6
	l.bf	.L12807	# delay slot filled
	l.sw    	52(r1),r4	 # SI store
	l.sfnei	r14,0
.L12877:
	l.bf	.L12870	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
.L12782:
	l.lwz   	r5,60(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L12809	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
	l.movhi  	r4,hi(.LC337)
	l.ori   	r4,r4,lo(.LC337)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r3,20(r1)	 # SI load
.L12870:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,60(r1)	 # SI load
	l.j     	.L12869	# delay slot filled
	l.lwz   	r6,68(r1)	 # SI load
.L12783:
	l.j     	.L12784	# delay slot filled
	l.lwz   	r28,4(r26)	 # SI load
.L12797:
		l.lwz   	r2, 4(r16)
		l.lwz   	r3, 4+4(r16)
		l.sw    	12(r16), r2
		l.sw    	12+4(r16), r3
.L12805:
	l.addi  	r6,r16,4
	l.lwz   	r3,0(r30)	 # SI load
	l.lwz   	r4,36(r1)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.lwz   	r16,12(r26)	 # SI load
	l.j     	.L12790	# delay slot filled
	l.sw    	36(r1),r11	 # SI store
.L12828:
	l.lwz   	r5,12(r1)	 # SI load
	l.lhs   	r2,0(r5)	 # extendhisi2_no_sext_mem
.L12852:
	l.j     	.L12788	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
.L12825:
	l.lwz   	r4,12(r1)	 # SI load
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L12788	# delay slot filled
	l.lhs   	r2,0(r4)	 # extendhisi2_no_sext_mem
.L12862:
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.lwz   	r4,76(r1)	 # SI load
	l.lwz   	r6,24(r1)	 # SI load
	l.lwz   	r2,36(r1)	 # SI load
	l.sw    	0(r6),r2	 # SI store
.L12772:
	l.lwz   	r3,24(r1)	 # SI load
.L12874:
	l.lwz   	r2,0(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L12749
	l.nop			# nop delay slot
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r3,88(r5)	 # SI load
	l.sfles 	r4,r3
	l.bf	.L12749	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.movhi  	r4,hi(.LC339)
	l.lwz   	r3,28(r1)	 # SI load
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC339)
	l.j     	.L12868	# delay slot filled
	l.addi	r1,r1,136
.L12859:
	l.jal   	setJoinExpr	# delay slot filled
	l.lwz   	r4,0(r24)	 # SI load
	l.lwz   	r2,64(r1)	 # SI load
	l.j     	.L12767	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
.L12779:
	l.lwz   	r5,20(r5)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L12777	# delay slot filled
	l.sw    	60(r1),r5	 # SI store
	l.lwz   	r3,20(r1)	 # SI load
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.addi  	r4,r5,4
	l.j     	.L12777	# delay slot filled
	l.sw    	60(r1),r11	 # SI store
.L12836:
	l.lwz   	r6,72(r1)	 # SI load
.L12873:
	l.j     	.L12759	# delay slot filled
	l.lhs   	r2,0(r6)	 # extendhisi2_no_sext_mem
.L12857:
	l.lwz   	r4,60(r1)	 # SI load
	l.j     	.L12763	# delay slot filled
	l.lwz   	r14,0(r4)	 # SI load
.L12809:
	l.movhi  	r4,hi(.LC338)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC338)
	l.j     	.L12870	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
.L12858:
	l.movhi  	r4,hi(.LC335)
	l.lwz   	r3,28(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC335)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L12868	# delay slot filled
	l.addi	r1,r1,136
.L12761:
	l.movhi  	r4,hi(.LC334)
.L12872:
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r3,28(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC334)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
	l.j     	.L12868	# delay slot filled
	l.addi	r1,r1,136
.LFE1063:
	.size	selectExpander, .-selectExpander
	.align	4
.proc	sqlite3SrcListLookup
	.type	sqlite3SrcListLookup, @function
sqlite3SrcListLookup:
.LFB934:
	l.sw    	-20(r1),r2	 # SI store
.LCFI4045:
	l.ori   	r2,r4,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI4046:
	l.sw    	-16(r1),r14	 # SI store
.LCFI4047:
	l.sw    	-12(r1),r16	 # SI store
.LCFI4048:
	l.sw    	-8(r1),r18	 # SI store
.LCFI4049:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r1,r1,-20
.LCFI4050:
	l.lwz   	r5,8(r2)	 # SI load
	l.lwz   	r6,4(r2)	 # SI load
	l.jal   	sqlite3LocateTable	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.lwz   	r3,16(r2)	 # SI load
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sw    	16(r2),r14	 # SI store
	l.sfeqi	r14,0
	l.bf	.L12886	# delay slot filled
	l.addi  	r18,r2,4
	l.lhz   	r2,32(r14)	 # zero_extendqisi2
	l.addi  	r2,r2,1
	l.sh    	32(r14),r2	 # movhi
.L12886:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3IndexedByLookup	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L12889	# delay slot filled
	l.ori   	r11,r14,0	 # move reg to reg
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L12889:
	l.addi	r1,r1,20
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.LFE934:
	.size	sqlite3SrcListLookup, .-sqlite3SrcListLookup
	.section	.rodata.str1.1
.LC340:
	.string	"table %S has %d columns but %d values were supplied"
.LC341:
	.string	"%d values for %d columns"
.LC342:
	.string	"table %S has no column named %s"
.LC343:
	.string	"rows inserted"
	.section .text
	.align	4
.proc	sqlite3Insert
	.type	sqlite3Insert, @function
sqlite3Insert:
.LFB988:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4051:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4052:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4053:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4054:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4055:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4056:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4057:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4058:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4059:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4060:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4061:
	l.addi  	r1,r1,-240
.LCFI4062:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r16,r1,172
	l.lwz   	r12,64(r3)	 # SI load
	l.sw    	0(r16),r2	 # SI store
	l.sw    	4(r16),r2	 # SI store
	l.sw    	8(r16),r2	 # SI store
	l.sw    	12(r16),r2	 # SI store
	l.sw    	24(r1),r4	 # SI store
	l.sw    	36(r1),r5	 # SI store
	l.sw    	28(r1),r6	 # SI store
	l.sw    	32(r1),r7	 # SI store
	l.sw    	44(r1),r8	 # SI store
	l.ori   	r28,r3,0	 # move reg to reg
	l.lwz   	r22,0(r3)	 # SI load
	l.sfne 	r12,r2
	l.bf	.L12891	# delay slot filled
	l.ori   	r20,r2,0	 # move reg to reg
	l.lbz   	r2,30(r22)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L12891	# delay slot filled
	l.ori   	r20,r12,0	 # move reg to reg
	l.lwz   	r11,8(r4)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L12891	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.jal   	sqlite3SrcListLookup
	l.nop			# nop delay slot
	l.sw    	40(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L12891	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r15,72(r11)	 # SI load
	l.sfnei	r15,0
	l.bnf	.L13141	# delay slot filled
	l.movhi 	r3,hi(-24051712)	 # move immediate M
	l.lwz   	r19,4(r22)	 # SI load
	l.sfgtsi	r19,0
	l.bnf	.L13142
	l.nop			# nop delay slot
	l.lwz   	r21,8(r22)	 # SI load
	l.lwz   	r12,20(r21)	 # SI load
	l.sfeq 	r15,r12
	l.bf	.L12893	# delay slot filled
	l.ori   	r17,r21,0	 # move reg to reg
	l.j     	.L12895	# delay slot filled
	l.addi  	r12,r21,24
.L12896:
	l.lwz   	r3,20(r12)	 # SI load
	l.sfeq 	r15,r3
	l.bf	.L12893	# delay slot filled
	l.addi  	r12,r12,24
.L12895:
	l.addi  	r2,r2,1
	l.sflts 	r2,r19
	l.bf	.L12896	# delay slot filled
	l.ori   	r17,r12,0	 # move reg to reg
	l.add   	r17,r2,r2
	l.add   	r17,r17,r2
	l.slli  	r17,r17,3
	l.add   	r17,r21,r17
.L12893:
	l.lwz   	r6,40(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r5,4(r6)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r4,r0,18	 # move immediate I
	l.ori   	r20,r6,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.lwz   	r7,0(r17)	 # SI load
	l.sfne 	r11,r20
	l.bnf	.L13143	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
.L12891:
	l.ori   	r3,r22,0	 # move reg to reg
.L13174:
.L13216:
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3IdListDelete	# delay slot filled
	l.lwz   	r4,32(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi	r1,r1,240
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L13143:
	l.lwz   	r3,0(r28)	 # SI load
	l.addi  	r5,r0,107	 # move immediate I
	l.ori   	r6,r11,0	 # move reg to reg
	l.addi  	r7,r1,192
	l.jal   	sqlite3TriggersExist.clone.92	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r4,40(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r7,28(r4)	 # SI load
	l.lwz   	r5,192(r1)	 # SI load
	l.sw    	52(r1),r11	 # SI store
	l.jal   	sqlite3IsReadOnly	# delay slot filled
	l.sw    	56(r1),r7	 # SI store
	l.sfnei	r11,0
	l.bf	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,40(r1)	 # SI load
	l.jal   	sqlite3ViewGetColumnNames	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r14,r28,12
	l.lwz   	r3,0(r28)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sw    	48(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L12891	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lbz   	r12,19(r28)	 # zero_extendqisi2
	l.sfnei	r12,0
	l.bf	.L13189	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
	l.addi  	r8,r0,1	 # movqi: move immediate
	l.sb    	125(r11),r8	    # movqi
	l.lwz   	r3,28(r1)	 # SI load
.L13189:
	l.lwz   	r11,52(r1)	 # SI load
	l.sub   	r13,r0,r3
	l.sub   	r12,r0,r11
	l.or    	r13,r3,r13
	l.or    	r12,r11,r12
	l.addi  	r6,r0,-1	 # move immediate I
	l.or    	r12,r13,r12
	l.ori   	r3,r28,0	 # move reg to reg
	l.srli  	r4,r12,31
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.sw    	80(r1),r6	 # SI store
	l.lwz   	r7,52(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L13190	# delay slot filled
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r8,68(r28)	 # SI load
	l.addi  	r12,r8,1
	l.sw    	80(r1),r8	 # SI store
	l.sw    	68(r28),r12	 # SI store
	l.lwz   	r11,32(r1)	 # SI load
.L13190:
	l.sfnei	r11,0
	l.bnf	.L13097	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
.L13133:
	l.lwz   	r3,40(r1)	 # SI load
.L13209:
	l.lbz   	r12,34(r3)	 # zero_extendqisi2
	l.addi  	r26,r3,4
.L12899:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r5,r26,0	 # move reg to reg
	l.jal   	autoIncBegin.clone.145	# delay slot filled
	l.ori   	r6,r12,0	 # move reg to reg
	l.lwz   	r4,28(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L12931	# delay slot filled
	l.sw    	84(r1),r11	 # SI store
	l.lwz   	r12,72(r28)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r12,r12,1
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r6,r12,0	 # move reg to reg
	l.sw    	72(r28),r12	 # SI store
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r20,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	60(r1),r12	 # SI store
	l.addi  	r5,r0,10	 # movqi: move immediate
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.lwz   	r7,48(r1)	 # SI load
	l.lwz   	r13,72(r28)	 # SI load
	l.sb    	172(r1),r5	    # movqi
	l.sb    	173(r1),r6	    # movqi
	l.addi  	r13,r13,1
	l.lwz   	r14,12(r7)	 # SI load
	l.ori   	r6,r13,0	 # move reg to reg
	l.ori   	r3,r7,0	 # move reg to reg
	l.addi  	r5,r14,1
	l.sw    	72(r28),r13	 # SI store
	l.addi  	r4,r0,48	 # move immediate I
	l.sw    	176(r1),r13	 # SI store
	l.sw    	180(r1),r20	 # SI store
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	184(r1),r20	 # SI store
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r14,r14,2
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,28(r1)	 # SI load
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3Select	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfne 	r11,r20
	l.bf	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r15,64(r28)	 # SI load
	l.sfnei	r15,0
	l.bf	.L13174	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lbz   	r16,30(r22)	 # zero_extendqisi2
	l.sfnei	r16,0
	l.bf	.L13216	# delay slot filled
	l.ori   	r20,r15,0	 # move reg to reg
	l.lwz   	r6,60(r1)	 # SI load
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,60	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,176(r1)	 # SI load
	l.addi  	r5,r0,2	 # move immediate I
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,39	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r11,28(r1)	 # SI load
	l.lwz   	r3,180(r1)	 # SI load
	l.lwz   	r15,0(r11)	 # SI load
	l.lwz   	r4,52(r1)	 # SI load
	l.lwz   	r15,0(r15)	 # SI load
	l.sw    	96(r1),r3	 # SI store
	l.sfnei	r4,0
	l.bnf	.L13144	# delay slot filled
	l.sw    	68(r1),r15	 # SI store
.L12932:
	l.lwz   	r5,68(r28)	 # SI load
.L13178:
	l.lbz   	r13,21(r28)	 # zero_extendqisi2
	l.addi  	r14,r5,1
	l.sw    	64(r1),r5	 # SI store
	l.sfeqi	r13,0
	l.bnf	.L13145	# delay slot filled
	l.sw    	68(r28),r14	 # SI store
	l.lwz   	r16,72(r28)	 # SI load
	l.addi  	r16,r16,1
	l.sw    	72(r28),r16	 # SI store
.L13122:
	l.lwz   	r14,72(r28)	 # SI load
	l.addi  	r14,r14,1
	l.sw    	72(r28),r14	 # SI store
.L12943:
	l.addi  	r7,r0,1	 # move immediate I
	l.lwz   	r6,68(r1)	 # SI load
	l.addi  	r4,r0,118	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	76(r1),r7	 # SI store
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,60	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,176(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,11	 # move immediate I
	l.lwz   	r5,60(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r7,r16,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,79	 # move immediate I
	l.lwz   	r5,96(r1)	 # SI load
	l.lwz   	r6,68(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,26	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,110	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,96	 # move immediate I
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
.L12933:
	l.lwz   	r11,40(r1)	 # SI load
	l.lbz   	r15,34(r11)	 # zero_extendqisi2
	l.andi  	r15,r15,16
	l.sfeqi	r15,0
	l.bf	.L13191	# delay slot filled
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r17,12(r11)	 # SI load
	l.addi  	r15,r0,0	 # move immediate I
	l.sfles 	r17,r15
	l.bf	.L13191	# delay slot filled
	l.ori   	r14,r15,0	 # move reg to reg
	l.lwz   	r13,16(r11)	 # SI load
	l.addi  	r13,r13,19
.L12946:
	l.lbz   	r3,0(r13)	 # zero_extendqisi2
	l.sub   	r3,r0,r3
	l.addi  	r14,r14,1
	l.srli  	r3,r3,31
	l.addi  	r13,r13,20
	l.sfne 	r14,r17
	l.bf	.L12946	# delay slot filled
	l.add   	r15,r15,r3
	l.lwz   	r3,32(r1)	 # SI load
.L13191:
	l.lwz   	r4,68(r1)	 # SI load
	l.sub   	r14,r0,r3
	l.sub   	r4,r0,r4
	l.or    	r14,r3,r14
	l.lwz   	r5,68(r1)	 # SI load
	l.xori  	r14,r14,0xffff
	l.or    	r16,r4,r5
	l.srli  	r14,r14,31
	l.sw    	124(r1),r4	 # SI store
	l.sfgesi	r16,0
	l.bf	.L12947	# delay slot filled
	l.sw    	116(r1),r14	 # SI store
	l.sfeqi	r14,0
	l.bf	.L13192	# delay slot filled
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r6,40(r1)	 # SI load
	l.lwz   	r16,12(r6)	 # SI load
	l.sub   	r15,r16,r15
	l.sfeq 	r15,r5
	l.bnf	.L13146	# delay slot filled
	l.movhi  	r4,hi(.LC340)
.L12947:
	l.lwz   	r11,32(r1)	 # SI load
.L13192:
	l.sfeqi	r11,0
	l.bf	.L13048	# delay slot filled
	l.lwz   	r3,68(r1)	 # SI load
	l.lwz   	r15,4(r11)	 # SI load
	l.sfeq 	r15,r3
	l.bnf	.L13147	# delay slot filled
	l.lwz   	r6,68(r1)	 # SI load
	l.sflesi	r6,0
	l.bf	.L13049	# delay slot filled
	l.lwz   	r7,32(r1)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.lwz   	r18,0(r7)	 # SI load
	l.addi  	r16,r0,-1	 # move immediate I
	l.addi  	r13,r18,4
.L12950:
	l.sw    	0(r13),r16	 # SI store
	l.addi  	r14,r14,1
	l.sfne 	r14,r15
	l.bf	.L12950	# delay slot filled
	l.addi  	r13,r13,8
	l.lwz   	r8,40(r1)	 # SI load
	l.addi  	r30,r0,0	 # move immediate I
	l.sw    	88(r1),r22	 # SI store
	l.sw    	100(r1),r2	 # SI store
	l.sw    	92(r1),r28	 # SI store
	l.sw    	72(r1),r16	 # SI store
	l.ori   	r26,r30,0	 # move reg to reg
	l.lwz   	r24,12(r8)	 # SI load
	l.ori   	r2,r8,0	 # move reg to reg
	l.lwz   	r28,32(r1)	 # SI load
	l.ori   	r22,r18,0	 # move reg to reg
.L12957:
	l.sfgtsi	r24,0
	l.bnf	.L13148	# delay slot filled
	l.add   	r18,r22,r30
	l.lwz   	r14,16(r2)	 # SI load
	l.lwz   	r20,0(r18)	 # SI load
	l.j     	.L12954	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.L12952:
	l.sflts 	r16,r24
	l.bnf	.L12955
	l.nop			# nop delay slot
.L12954:
	l.lwz   	r4,0(r14)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r14,r14,20
	l.sfnei	r11,0
	l.bf	.L12952	# delay slot filled
	l.addi  	r16,r16,1
	l.addi  	r16,r16,-1
	l.lwz   	r3,8(r2)	 # SI load
	l.sfeq 	r3,r16
	l.bf	.L13149	# delay slot filled
	l.sw    	4(r18),r16	 # SI store
.L12953:
	l.sfgts 	r24,r16
	l.bnf	.L12955
	l.nop			# nop delay slot
.L12956:
	l.addi  	r26,r26,1
	l.lwz   	r3,4(r28)	 # SI load
	l.sfgts 	r3,r26
	l.bf	.L12957	# delay slot filled
	l.addi  	r30,r30,8
	l.lwz   	r22,88(r1)	 # SI load
	l.lwz   	r2,100(r1)	 # SI load
	l.lwz   	r28,92(r1)	 # SI load
.L12948:
	l.lwz   	r5,68(r1)	 # SI load
	l.sflesi	r5,0
	l.bf	.L13193	# delay slot filled
	l.lwz   	r8,52(r1)	 # SI load
	l.lwz   	r6,116(r1)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L13194	# delay slot filled
	l.sfeqi	r8,0
	l.lwz   	r7,40(r1)	 # SI load
	l.lwz   	r7,8(r7)	 # SI load
	l.sw    	72(r1),r7	 # SI store
	l.lwz   	r8,52(r1)	 # SI load
.L13193:
	l.sfeqi	r8,0
.L13194:
	l.bf	.L12960	# delay slot filled
	l.lwz   	r11,40(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,117	 # move immediate I
	l.lwz   	r5,80(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r7,12(r11)	 # SI load
.L12960:
	l.lwz   	r15,12(r22)	 # SI load
	l.andi  	r15,r15,128
	l.sfeqi	r15,0
	l.bnf	.L13150	# delay slot filled
	l.sw    	92(r1),r15	 # SI store
	l.lwz   	r3,56(r1)	 # SI load
.L13183:
	l.sub   	r13,r0,r3
	l.or    	r13,r3,r13
	l.srli  	r13,r13,31
	l.sfnei	r13,0
	l.bnf	.L13151	# delay slot filled
	l.sw    	100(r1),r13	 # SI store
	l.addi  	r20,r0,0	 # move immediate I
	l.sw    	88(r1),r20	 # SI store
.L12962:
	l.lwz   	r5,76(r1)	 # SI load
.L13182:
	l.sfeqi	r5,0
	l.bnf	.L13152	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L13054	# delay slot filled
	l.addi  	r4,r0,60	 # move immediate I
	l.lwz   	r5,176(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,11	 # move immediate I
	l.lwz   	r5,60(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.sw    	112(r1),r11	 # SI store
	l.sw    	108(r1),r11	 # SI store
.L12965:
	l.lwz   	r11,40(r1)	 # SI load
	l.lwz   	r3,72(r28)	 # SI load
	l.lwz   	r19,12(r11)	 # SI load
	l.addi  	r4,r3,2
	l.add   	r19,r3,r19
	l.sw    	60(r1),r4	 # SI store
	l.addi  	r19,r19,2
	l.sw    	56(r1),r4	 # SI store
	l.sw    	72(r28),r19	 # SI store
	l.lbz   	r15,34(r11)	 # zero_extendqisi2
	l.andi  	r15,r15,16
	l.sfeqi	r15,0
	l.bf	.L12966	# delay slot filled
	l.addi  	r19,r19,1
	l.addi  	r3,r3,3
	l.sw    	72(r28),r19	 # SI store
	l.sw    	56(r1),r3	 # SI store
.L12966:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r19,192(r1)	 # SI load
	l.andi  	r15,r19,1
	l.sfeqi	r15,0
	l.bf	.L12967	# delay slot filled
	l.sw    	120(r1),r11	 # SI store
	l.lbz   	r19,21(r28)	 # zero_extendqisi2
	l.sfnei	r19,0
	l.bf	.L12968	# delay slot filled
	l.addi  	r15,r19,-1
	l.lwz   	r19,72(r28)	 # SI load
	l.addi  	r18,r19,1
	l.sw    	72(r28),r18	 # SI store
.L12969:
	l.lwz   	r5,72(r1)	 # SI load
	l.sfgesi	r5,0
	l.bnf	.L13153	# delay slot filled
	l.lwz   	r6,76(r1)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L12972	# delay slot filled
	l.lwz   	r7,72(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,3	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.lwz   	r6,72(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.addi  	r4,r0,72	 # move immediate I
.L13179:
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r5,r0,-1	 # move immediate I
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r6,r18,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,38	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r11,40(r1)	 # SI load
.L13184:
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.lwz   	r4,12(r11)	 # SI load
	l.lwz   	r3,40(r1)	 # SI load
	l.sw    	104(r1),r11	 # SI store
	l.lwz   	r24,12(r3)	 # SI load
	l.sflesi	r24,0
	l.bf	.L12974
	l.nop			# nop delay slot
	l.addi  	r16,r0,0	 # move immediate I
	l.sw    	128(r1),r2	 # SI store
	l.sw    	132(r1),r18	 # SI store
	l.ori   	r30,r11,0	 # move reg to reg
	l.ori   	r26,r16,0	 # move reg to reg
	l.lwz   	r2,116(r1)	 # SI load
	l.ori   	r18,r3,0	 # move reg to reg
	l.lwz   	r14,32(r1)	 # SI load
.L12981:
	l.sfnei	r2,0
	l.bf	.L12975	# delay slot filled
	l.ori   	r6,r26,0	 # move reg to reg
	l.lwz   	r11,4(r14)	 # SI load
	l.sflesi	r11,0
	l.bf	.L12975	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r8,0(r14)	 # SI load
	l.lwz   	r4,4(r8)	 # SI load
	l.sfeq 	r4,r26
	l.bf	.L13195	# delay slot filled
	l.sfeqi	r14,0
	l.j     	.L12976	# delay slot filled
	l.addi  	r8,r8,12
.L12977:
	l.lwz   	r3,0(r8)	 # SI load
	l.sfeq 	r3,r26
	l.bf	.L12975	# delay slot filled
	l.addi  	r8,r8,8
.L12976:
	l.addi  	r6,r6,1
	l.sfgts 	r11,r6
	l.bf	.L12977
	l.nop			# nop delay slot
.L12975:
	l.sfeqi	r14,0
.L13195:
	l.bf	.L13196	# delay slot filled
	l.lwz   	r4,76(r1)	 # SI load
	l.lwz   	r4,4(r14)	 # SI load
	l.sflts 	r6,r4
	l.bnf	.L13154	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,76(r1)	 # SI load
.L13196:
	l.sfeqi	r4,0
	l.bf	.L12980	# delay slot filled
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,3	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r30,0	 # move reg to reg
	l.addi  	r26,r26,1
.L13176:
	l.lwz   	r24,12(r18)	 # SI load
	l.addi  	r16,r16,20
	l.sfgts 	r24,r26
	l.bf	.L12981	# delay slot filled
	l.addi  	r30,r30,1
	l.lwz   	r2,128(r1)	 # SI load
	l.lwz   	r18,132(r1)	 # SI load
.L12974:
	l.lbz   	r21,21(r28)	 # zero_extendqisi2
	l.sfnei	r21,0
	l.bf	.L12982	# delay slot filled
	l.addi  	r15,r21,-1
	l.lwz   	r19,72(r28)	 # SI load
	l.addi  	r26,r19,1
	l.sw    	72(r28),r26	 # SI store
.L12983:
	l.ori   	r7,r26,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,79	 # move immediate I
	l.lwz   	r5,104(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.lwz   	r7,100(r1)	 # SI load
	l.sfnei	r7,0
	l.bf	.L13197	# delay slot filled
	l.lwz   	r5,80(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3TableAffinityStr	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.lwz   	r5,80(r1)	 # SI load
.L13197:
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,110	 # move immediate I
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r8,40(r1)	 # SI load
	l.lwz   	r19,56(r28)	 # SI load
	l.lwz   	r21,12(r8)	 # SI load
	l.sfles 	r21,r19
	l.bf	.L13198	# delay slot filled
	l.lwz   	r11,80(r1)	 # SI load
	l.lwz   	r11,104(r1)	 # SI load
	l.sw    	56(r28),r21	 # SI store
	l.sw    	60(r28),r11	 # SI store
	l.lwz   	r11,80(r1)	 # SI load
.L13198:
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r11,44(r1)	 # SI load
	l.addi  	r15,r0,-1	 # move immediate I
	l.sw    	8(r1),r11	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r11,120(r1)	 # SI load
	l.lwz   	r4,52(r1)	 # SI load
	l.addi  	r5,r0,107	 # move immediate I
	l.addi  	r7,r0,1	 # move immediate I
	l.lwz   	r8,40(r1)	 # SI load
	l.sw    	4(r1),r15	 # SI store
	l.sw    	12(r1),r11	 # SI store
	l.sw    	16(r1),r6	 # SI store
	l.jal   	sqlite3CodeRowTrigger	# delay slot filled
	l.sw    	20(r1),r6	 # SI store
	l.sfnei	r11,0
	l.bf	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L12967:
	l.lwz   	r3,100(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L12986	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.lbz   	r15,34(r4)	 # zero_extendqisi2
	l.andi  	r15,r15,16
	l.sfeqi	r15,0
	l.bf	.L13199	# delay slot filled
	l.lwz   	r5,72(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,119	 # move immediate I
	l.lwz   	r5,100(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,60(r1)	 # SI load
	l.lwz   	r5,72(r1)	 # SI load
.L13199:
	l.sfltsi	r5,0
	l.bf	.L12988	# delay slot filled
	l.lwz   	r6,76(r1)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L13155	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L12991	# delay slot filled
	l.lwz   	r8,72(r1)	 # SI load
	l.lwz   	r11,96(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,9	 # move immediate I
	l.add   	r5,r8,r11
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
.L12990:
	l.lwz   	r4,40(r1)	 # SI load
.L13186:
	l.lbz   	r15,34(r4)	 # zero_extendqisi2
	l.andi  	r15,r15,16
	l.sfnei	r15,0
	l.bnf	.L13123	# delay slot filled
	l.lwz   	r5,56(r1)	 # SI load
	l.lwz   	r5,48(r1)	 # SI load
	l.lwz   	r23,12(r5)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
.L13205:
	l.addi  	r4,r0,71	 # move immediate I
	l.lwz   	r5,56(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r23,2
	l.lwz   	r3,48(r1)	 # SI load
.L13185:
	l.addi  	r4,r0,38	 # move immediate I
	l.lwz   	r5,56(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
.L12993:
	l.lwz   	r7,84(r1)	 # SI load
.L13187:
	l.sflesi	r7,0
	l.bf	.L12996	# delay slot filled
	l.addi  	r4,r0,45	 # move immediate I
	l.lwz   	r3,12(r28)	 # SI load
	l.ori   	r5,r7,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
.L12996:
	l.lwz   	r8,40(r1)	 # SI load
	l.lwz   	r19,12(r8)	 # SI load
	l.sflesi	r19,0
	l.bf	.L12997	# delay slot filled
	l.lwz   	r3,68(r1)	 # SI load
	l.lwz   	r11,124(r1)	 # SI load
	l.lwz   	r4,56(r1)	 # SI load
	l.or    	r17,r11,r3
	l.addi  	r26,r0,0	 # move immediate I
	l.xori  	r17,r17,0xffff
	l.addi  	r4,r4,1
	l.srli  	r17,r17,31
	l.sw    	104(r1),r2	 # SI store
	l.ori   	r30,r26,0	 # move reg to reg
	l.sw    	68(r1),r17	 # SI store
	l.ori   	r24,r26,0	 # move reg to reg
	l.sw    	56(r1),r4	 # SI store
	l.ori   	r14,r8,0	 # move reg to reg
	l.lwz   	r2,116(r1)	 # SI load
	l.lwz   	r16,32(r1)	 # SI load
.L13009:
	l.lwz   	r4,8(r14)	 # SI load
	l.lwz   	r5,56(r1)	 # SI load
	l.sfne 	r4,r24
	l.bnf	.L13156	# delay slot filled
	l.add   	r7,r5,r24
	l.sfnei	r2,0
	l.bf	.L13000
	l.nop			# nop delay slot
	l.lwz   	r12,4(r16)	 # SI load
	l.sflesi	r12,0
	l.bf	.L13001	# delay slot filled
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r8,0(r16)	 # SI load
	l.lwz   	r4,4(r8)	 # SI load
	l.sfeq 	r4,r24
	l.bf	.L13200	# delay slot filled
	l.sfltsi	r11,0
	l.j     	.L13002	# delay slot filled
	l.addi  	r8,r8,12
.L13004:
	l.lwz   	r3,0(r8)	 # SI load
	l.sfeq 	r3,r24
	l.bf	.L13001	# delay slot filled
	l.addi  	r8,r8,8
.L13002:
	l.addi  	r11,r11,1
	l.sflts 	r11,r12
	l.bf	.L13004
	l.nop			# nop delay slot
.L13001:
	l.sfltsi	r11,0
.L13200:
	l.bf	.L13005
	l.nop			# nop delay slot
	l.lwz   	r6,68(r1)	 # SI load
	l.sfnei	r6,0
	l.bf	.L13005	# delay slot filled
	l.sfeqi	r16,0
	l.bf	.L13201	# delay slot filled
	l.lwz   	r8,76(r1)	 # SI load
	l.lwz   	r4,4(r16)	 # SI load
	l.sflts 	r11,r4
	l.bnf	.L13005
	l.nop			# nop delay slot
.L13201:
	l.sfeqi	r8,0
	l.bnf	.L13157	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13008	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r6,96(r1)	 # SI load
	l.add   	r5,r11,r6
	l.addi  	r4,r0,9	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r7,0	 # move reg to reg
	l.addi  	r24,r24,1
.L13175:
	l.lwz   	r4,12(r14)	 # SI load
	l.sfgts 	r4,r24
	l.bf	.L13009	# delay slot filled
	l.addi  	r26,r26,20
	l.lwz   	r2,104(r1)	 # SI load
.L12997:
	l.lwz   	r11,40(r1)	 # SI load
	l.lbz   	r13,34(r11)	 # zero_extendqisi2
	l.andi  	r13,r13,16
	l.sfeqi	r13,0
	l.bf	.L13010	# delay slot filled
	l.lwz   	r4,72(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3VtabMakeWritable	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r3,40(r1)	 # SI load
	l.addi  	r4,r0,125	 # move immediate I
	l.lwz   	r12,56(r3)	 # SI load
	l.lwz   	r13,12(r3)	 # SI load
	l.ori   	r8,r12,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r12,r0,-10	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r6,r13,2
	l.lwz   	r7,60(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r12	 # SI store
.L12986:
	l.lwz   	r12,12(r22)	 # SI load
.L13181:
	l.andi  	r12,r12,128
	l.sfeqi	r12,0
	l.bf	.L13202	# delay slot filled
	l.lwz   	r3,52(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,42	 # move immediate I
	l.lwz   	r5,92(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r3,52(r1)	 # SI load
.L13202:
	l.sfeqi	r3,0
	l.bf	.L13013	# delay slot filled
	l.lwz   	r11,80(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r11,44(r1)	 # SI load
	l.addi  	r12,r0,-1	 # move immediate I
	l.sw    	8(r1),r11	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r11,120(r1)	 # SI load
	l.lwz   	r4,52(r1)	 # SI load
	l.addi  	r5,r0,107	 # move immediate I
	l.addi  	r7,r0,2	 # move immediate I
	l.lwz   	r8,40(r1)	 # SI load
	l.sw    	4(r1),r12	 # SI store
	l.sw    	12(r1),r11	 # SI store
	l.sw    	16(r1),r6	 # SI store
	l.jal   	sqlite3CodeRowTrigger	# delay slot filled
	l.sw    	20(r1),r6	 # SI store
	l.sfnei	r11,0
	l.bf	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L13013:
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r12,32(r3)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L13014	# delay slot filled
	l.lwz   	r13,12(r3)	 # SI load
	l.lwz   	r4,120(r1)	 # SI load
	l.xori  	r14,r4,0xffff
	l.slli  	r14,r14,2
	l.add   	r12,r12,r14
	l.sw    	0(r12),r13	 # SI store
.L13014:
	l.lwz   	r5,76(r1)	 # SI load
	l.sfeqi	r5,0
	l.bnf	.L13158	# delay slot filled
	l.lwz   	r6,28(r1)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L13016	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,96	 # move immediate I
	l.lwz   	r5,76(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,112(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,108(r1)	 # SI load
.L13016:
	l.lwz   	r7,40(r1)	 # SI load
.L13180:
	l.lwz   	r11,100(r1)	 # SI load
	l.lbz   	r12,34(r7)	 # zero_extendqisi2
	l.andi  	r8,r12,16
	l.or    	r8,r8,r11
	l.sfnei	r8,0
	l.bnf	.L13159	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
.L13017:
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r5,r12,0	 # move reg to reg
	l.jal   	autoIncEnd.clone.146	# delay slot filled
	l.lwz   	r6,84(r1)	 # SI load
	l.lwz   	r2,12(r22)	 # SI load
	l.andi  	r2,r2,128
	l.sfeqi	r2,0
	l.bf	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lbz   	r2,19(r28)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L13174
	l.nop			# nop delay slot
	l.lwz   	r2,484(r28)	 # SI load
	l.sfnei	r2,0
	l.bf	.L13174	# delay slot filled
	l.lwz   	r5,92(r1)	 # SI load
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,90	 # move immediate I
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.movhi  	r6,hi(.LC343)
	l.lwz   	r3,48(r1)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC343)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.j     	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L13141:
	l.lwz   	r17,8(r22)	 # SI load
	l.ori   	r3,r3,51712
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.add   	r17,r17,r3
	l.j     	.L12893	# delay slot filled
	l.ori   	r2,r2,48576
.L13142:
	l.j     	.L12893	# delay slot filled
	l.lwz   	r17,8(r22)	 # SI load
.L13148:
	l.add   	r3,r22,r30
	l.lwz   	r20,0(r3)	 # SI load
.L12955:
	l.jal   	sqlite3IsRowid	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L13160	# delay slot filled
	l.movhi  	r4,hi(.LC342)
	l.j     	.L12956	# delay slot filled
	l.sw    	72(r1),r26	 # SI store
.L13149:
	l.j     	.L12953	# delay slot filled
	l.sw    	72(r1),r26	 # SI store
.L13005:
	l.lwz   	r4,16(r14)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.add   	r4,r4,r26
	l.ori   	r5,r7,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r4,4(r4)	 # SI load
	l.j     	.L13175	# delay slot filled
	l.addi  	r24,r24,1
.L12980:
	l.slli  	r6,r6,4
	l.lwz   	r4,12(r5)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.add   	r4,r4,r6
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeAndCache	# delay slot filled
	l.lwz   	r4,0(r4)	 # SI load
	l.j     	.L13176	# delay slot filled
	l.addi  	r26,r26,1
.L12931:
	l.addi  	r18,r1,136
	l.lwz   	r4,28(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,36	 # move immediate I
	l.lwz   	r8,36(r1)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L13043	# delay slot filled
	l.sw    	136(r1),r28	 # SI store
	l.lwz   	r11,0(r8)	 # SI load
	l.sflesi	r11,0
	l.bf	.L13044	# delay slot filled
	l.sw    	68(r1),r11	 # SI store
	l.lwz   	r16,28(r1)	 # SI load
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r14,r16,0	 # move reg to reg
	l.j     	.L12944	# delay slot filled
	l.ori   	r20,r8,0	 # move reg to reg
.L13162:
	l.bnf	.L13161	# delay slot filled
	l.addi  	r3,r0,-1	 # move immediate I
.L12944:
	l.lwz   	r4,12(r20)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.add   	r4,r4,r16
	l.addi  	r14,r14,1
	l.lwz   	r4,0(r4)	 # SI load
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.addi  	r16,r16,16
	l.sfnei	r11,0
	l.bnf	.L13162	# delay slot filled
	l.sfgts 	r24,r14
	l.j     	.L12891	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
.L13097:
	l.sfeqi	r4,0
	l.bf	.L13203	# delay slot filled
	l.lwz   	r5,40(r1)	 # SI load
	l.lwz   	r3,0(r28)	 # SI load
	l.jal   	sqlite3TriggerList.clone.90	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L13099	# delay slot filled
	l.lwz   	r7,40(r1)	 # SI load
	l.lwz   	r6,40(r1)	 # SI load
.L13210:
	l.lbz   	r12,34(r6)	 # zero_extendqisi2
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r6,4
.L13154:
	l.lwz   	r4,16(r18)	 # SI load
	l.add   	r4,r4,r16
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r4,4(r4)	 # SI load
	l.j     	.L13176	# delay slot filled
	l.addi  	r26,r26,1
.L13161:
	l.sw    	60(r1),r11	 # SI store
	l.sw    	64(r1),r3	 # SI store
	l.sw    	96(r1),r11	 # SI store
	l.j     	.L12933	# delay slot filled
	l.sw    	76(r1),r11	 # SI store
.L13147:
	l.movhi  	r4,hi(.LC341)
	l.lwz   	r5,68(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC341)
	l.sw    	0(r1),r5	 # SI store
	l.sw    	4(r1),r15	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
	l.j     	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L13157:
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,3	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.j     	.L13175	# delay slot filled
	l.addi  	r24,r24,1
.L13134:
	l.lwz   	r5,40(r1)	 # SI load
.L13203:
	l.lbz   	r12,34(r5)	 # zero_extendqisi2
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r5,4
.L13156:
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r7,0	 # move reg to reg
	l.j     	.L13175	# delay slot filled
	l.addi  	r24,r24,1
.L13000:
	l.lwz   	r4,16(r14)	 # SI load
	l.add   	r4,r4,r26
	l.lbz   	r4,19(r4)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L13001	# delay slot filled
	l.sub   	r11,r24,r30
	l.addi  	r30,r30,1
	l.j     	.L13001	# delay slot filled
	l.addi  	r11,r0,-1	 # move immediate I
.L13146:
	l.addi  	r8,r0,0	 # move immediate I
	l.lwz   	r7,24(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC340)
	l.sw    	0(r1),r7	 # SI store
	l.sw    	4(r1),r8	 # SI store
	l.sw    	8(r1),r15	 # SI store
	l.sw    	12(r1),r5	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r20,r8,0	 # move reg to reg
	l.j     	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L13145:
	l.addi  	r14,r13,-1
	l.andi  	r14,r14,0xff	 # zero_extendqisi2
	l.addi  	r15,r14,6
	l.ori   	r13,r14,0	 # move reg to reg
	l.slli  	r15,r15,2
	l.sb    	21(r28),r14	    # movqi
	l.sfnei	r14,0
	l.add   	r14,r28,r15
	l.bnf	.L13122	# delay slot filled
	l.lwz   	r16,0(r14)	 # SI load
	l.addi  	r13,r13,-1
	l.andi  	r13,r13,0xff	 # zero_extendqisi2
	l.addi  	r14,r13,6
	l.sb    	21(r28),r13	    # movqi
	l.slli  	r14,r14,2
	l.add   	r14,r28,r14
	l.j     	.L12943	# delay slot filled
	l.lwz   	r14,0(r14)	 # SI load
.L13144:
	l.lwz   	r5,48(r1)	 # SI load
	l.lwz   	r16,12(r5)	 # SI load
	l.sfges 	r14,r16
	l.bf	.L13040	# delay slot filled
	l.slli  	r17,r14,2
	l.slli  	r15,r14,4
	l.lwz   	r5,40(r1)	 # SI load
	l.lwz   	r6,48(r1)	 # SI load
	l.j     	.L12940	# delay slot filled
	l.add   	r15,r17,r15
.L12935:
	l.bnf	.L13163
	l.nop			# nop delay slot
.L12936:
	l.addi  	r14,r14,1
.L13177:
	l.sfgts 	r16,r14
	l.bnf	.L13164	# delay slot filled
	l.addi  	r15,r15,20
.L12940:
	l.addi  	r3,r0,0	 # move immediate I
	l.sflts 	r14,r3
	l.bf	.L12934	# delay slot filled
	l.sfles 	r16,r14
	l.bf	.L12934
	l.nop			# nop delay slot
	l.lwz   	r3,20(r6)	 # SI load
	l.add   	r3,r3,r15
.L12934:
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sfnei	r4,13
	l.bf	.L12935	# delay slot filled
	l.sfnei	r4,32
	l.lwz   	r4,12(r3)	 # SI load
	l.sfne 	r2,r4
	l.bf	.L12936
	l.nop			# nop delay slot
	l.lwz   	r4,8(r3)	 # SI load
	l.lwz   	r3,24(r5)	 # SI load
	l.sfeq 	r4,r3
	l.bf	.L12932
	l.nop			# nop delay slot
	l.lwz   	r3,20(r5)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L12939
	l.nop			# nop delay slot
	l.j     	.L13177	# delay slot filled
	l.addi  	r14,r14,1
.L13165:
	l.lwz   	r3,32(r3)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L12936
	l.nop			# nop delay slot
.L12939:
	l.lwz   	r7,20(r3)	 # SI load
	l.sfeq 	r4,r7
	l.bnf	.L13165
	l.nop			# nop delay slot
	l.j     	.L13178	# delay slot filled
	l.lwz   	r5,68(r28)	 # SI load
.L13163:
	l.lwz   	r3,16(r3)	 # SI load
	l.lwz   	r4,56(r5)	 # SI load
	l.sfeq 	r3,r4
	l.bnf	.L13177	# delay slot filled
	l.addi  	r14,r14,1
	l.j     	.L13178	# delay slot filled
	l.lwz   	r5,68(r28)	 # SI load
.L13099:
	l.lbz   	r12,34(r7)	 # zero_extendqisi2
	l.andi  	r15,r12,16
	l.sfnei	r15,0
	l.bf	.L13166	# delay slot filled
	l.lwz   	r11,44(r1)	 # SI load
	l.sfeqi	r11,99
	l.bf	.L13032	# delay slot filled
	l.addi  	r15,r11,-1
	l.sfgtui	r15,1
	l.bnf	.L13101	# delay slot filled
	l.lwz   	r4,44(r1)	 # SI load
	l.lwz   	r3,40(r1)	 # SI load
.L13204:
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r3,4
.L13048:
	l.addi  	r3,r0,-1	 # move immediate I
	l.j     	.L12948	# delay slot filled
	l.sw    	72(r1),r3	 # SI store
.L12982:
	l.andi  	r17,r15,0xff	 # zero_extendqisi2
	l.addi  	r19,r17,6
	l.sb    	21(r28),r17	    # movqi
	l.slli  	r19,r19,2
	l.lwz   	r6,40(r1)	 # SI load
	l.add   	r15,r28,r19
	l.lwz   	r24,12(r6)	 # SI load
	l.j     	.L12983	# delay slot filled
	l.lwz   	r26,0(r15)	 # SI load
.L12972:
	l.lwz   	r8,36(r1)	 # SI load
	l.slli  	r21,r7,4
	l.lwz   	r19,12(r8)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.add   	r19,r19,r21
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r4,0(r19)	 # SI load
	l.j     	.L13179	# delay slot filled
	l.addi  	r4,r0,72	 # move immediate I
.L13158:
	l.lwz   	r5,64(r1)	 # SI load
	l.lwz   	r6,112(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,106	 # move immediate I
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,108(r1)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,64(r1)	 # SI load
	l.j     	.L13180	# delay slot filled
	l.lwz   	r7,40(r1)	 # SI load
.L13159:
	l.lwz   	r5,88(r1)	 # SI load
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
	l.lwz   	r3,40(r1)	 # SI load
	l.j     	.L13018	# delay slot filled
	l.lwz   	r16,20(r3)	 # SI load
.L13019:
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r16,32(r16)	 # SI load
.L13018:
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,33	 # move immediate I
	l.sfnei	r16,0
	l.bf	.L13019	# delay slot filled
	l.addi  	r18,r18,1
	l.lwz   	r4,40(r1)	 # SI load
	l.j     	.L13017	# delay slot filled
	l.lbz   	r12,34(r4)	 # zero_extendqisi2
.L13008:
	l.lwz   	r8,36(r1)	 # SI load
	l.slli  	r11,r11,4
	l.lwz   	r4,12(r8)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.add   	r4,r4,r11
	l.ori   	r5,r7,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r4,0(r4)	 # SI load
	l.j     	.L13175	# delay slot filled
	l.addi  	r24,r24,1
.L12968:
	l.andi  	r17,r15,0xff	 # zero_extendqisi2
	l.addi  	r19,r17,6
	l.sb    	21(r28),r17	    # movqi
	l.slli  	r15,r19,2
	l.add   	r15,r28,r15
	l.j     	.L12969	# delay slot filled
	l.lwz   	r18,0(r15)	 # SI load
.L13043:
	l.lwz   	r5,36(r1)	 # SI load
	l.addi  	r6,r0,-1	 # move immediate I
	l.sw    	60(r1),r5	 # SI store
	l.sw    	96(r1),r5	 # SI store
	l.sw    	64(r1),r6	 # SI store
	l.sw    	76(r1),r5	 # SI store
	l.j     	.L12933	# delay slot filled
	l.sw    	68(r1),r5	 # SI store
.L13010:
	l.lwz   	r11,44(r1)	 # SI load
	l.xori  	r12,r4,0xffff
	l.sw    	4(r1),r11	 # SI store
	l.srli  	r8,r12,31
	l.lwz   	r11,120(r1)	 # SI load
	l.addi  	r12,r1,188
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,40(r1)	 # SI load
	l.lwz   	r5,88(r1)	 # SI load
	l.lwz   	r6,60(r1)	 # SI load
	l.ori   	r7,r20,0	 # move reg to reg
	l.sw    	12(r1),r12	 # SI store
	l.sw    	0(r1),r13	 # SI store
	l.jal   	sqlite3GenerateConstraintChecks	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.lwz   	r12,192(r1)	 # SI load
	l.andi  	r12,r12,2
	l.sfnei	r12,0
	l.bf	.L13011	# delay slot filled
	l.lwz   	r16,80(r1)	 # SI load
	l.addi  	r16,r0,-1	 # move immediate I
.L13011:
	l.lwz   	r12,188(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.sub   	r15,r0,r12
	l.lwz   	r4,40(r1)	 # SI load
	l.or    	r12,r15,r12
	l.lwz   	r5,88(r1)	 # SI load
	l.xori  	r12,r12,0xffff
	l.lwz   	r6,60(r1)	 # SI load
	l.srli  	r12,r12,31
	l.ori   	r7,r20,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.sw    	0(r1),r16	 # SI store
	l.sw    	4(r1),r18	 # SI store
	l.jal   	sqlite3CompleteInsertion	# delay slot filled
	l.sw    	8(r1),r12	 # SI store
	l.j     	.L13181	# delay slot filled
	l.lwz   	r12,12(r22)	 # SI load
.L13054:
	l.lwz   	r8,28(r1)	 # SI load
	l.sw    	112(r1),r8	 # SI store
	l.j     	.L12965	# delay slot filled
	l.sw    	108(r1),r8	 # SI store
.L13152:
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,122	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,64(r1)	 # SI load
	l.lwz   	r6,48(r1)	 # SI load
	l.sw    	108(r1),r11	 # SI store
	l.lwz   	r6,12(r6)	 # SI load
	l.j     	.L12965	# delay slot filled
	l.sw    	112(r1),r6	 # SI store
.L13151:
	l.lwz   	r4,68(r28)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.sw    	88(r1),r4	 # SI store
	l.addi  	r6,r0,10	 # move immediate I
	l.lwz   	r4,40(r1)	 # SI load
	l.jal   	sqlite3OpenTableAndIndices	# delay slot filled
	l.lwz   	r5,88(r1)	 # SI load
	l.addi  	r13,r11,1
	l.ori   	r3,r22,0	 # move reg to reg
	l.slli  	r4,r13,2
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L12891	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.sflesi	r24,0
	l.bf	.L12962	# delay slot filled
	l.ori   	r19,r11,0	 # move reg to reg
	l.lwz   	r17,100(r1)	 # SI load
.L12963:
	l.lwz   	r3,72(r28)	 # SI load
	l.addi  	r17,r17,1
	l.addi  	r3,r3,1
	l.sfne 	r17,r24
	l.sw    	72(r28),r3	 # SI store
	l.sw    	0(r19),r3	 # SI store
	l.bf	.L12963	# delay slot filled
	l.addi  	r19,r19,4
	l.j     	.L13182	# delay slot filled
	l.lwz   	r5,76(r1)	 # SI load
.L13150:
	l.lwz   	r15,72(r28)	 # SI load
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r15,r15,1
	l.addi  	r4,r0,48	 # move immediate I
	l.sw    	72(r28),r15	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r6,r15,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	92(r1),r15	 # SI store
	l.j     	.L13183	# delay slot filled
	l.lwz   	r3,56(r1)	 # SI load
.L13160:
	l.lwz   	r28,92(r1)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r11,24(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC342)
	l.sw    	8(r1),r20	 # SI store
	l.lwz   	r22,88(r1)	 # SI load
	l.sw    	0(r1),r11	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r14	 # SI store
	l.lwz   	r2,64(r28)	 # SI load
	l.ori   	r20,r14,0	 # move reg to reg
	l.addi  	r2,r2,1
	l.j     	.L12891	# delay slot filled
	l.sw    	64(r28),r2	 # SI store
.L13101:
	l.sw    	88(r1),r4	 # SI store
.L12901:
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r13,8(r6)	 # SI load
	l.lhs   	r15,0(r13)	 # extendhisi2_no_sext_mem
	l.sfnei	r15,1
	l.bnf	.L13102	# delay slot filled
	l.lwz   	r7,40(r1)	 # SI load
.L13206:
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r7,4
.L13049:
	l.addi  	r4,r0,-1	 # move immediate I
	l.j     	.L12948	# delay slot filled
	l.sw    	72(r1),r4	 # SI store
.L13102:
	l.lwz   	r7,20(r13)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L13103	# delay slot filled
	l.lwz   	r11,28(r1)	 # SI load
	l.lwz   	r8,40(r1)	 # SI load
.L13207:
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r8,4
.L13153:
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.j     	.L13184	# delay slot filled
	l.lwz   	r11,40(r1)	 # SI load
.L13044:
	l.lwz   	r7,28(r1)	 # SI load
	l.addi  	r8,r0,-1	 # move immediate I
	l.sw    	60(r1),r7	 # SI store
	l.sw    	96(r1),r7	 # SI store
	l.sw    	64(r1),r8	 # SI store
	l.j     	.L12933	# delay slot filled
	l.sw    	76(r1),r7	 # SI store
.L13103:
	l.lwz   	r7,12(r11)	 # SI load
	l.sfnei	r7,0
	l.bf	.L13204	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r7,24(r4)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L13105	# delay slot filled
	l.lwz   	r5,40(r1)	 # SI load
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r5,4
.L13032:
	l.addi  	r5,r0,2	 # move immediate I
	l.j     	.L12901	# delay slot filled
	l.sw    	88(r1),r5	 # SI store
.L13123:
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,72	 # move immediate I
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r5,88(r1)	 # SI load
	l.lwz   	r6,56(r1)	 # SI load
	l.lwz   	r7,84(r1)	 # SI load
	l.addi  	r4,r0,26	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.j     	.L13185	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
.L12991:
	l.lwz   	r3,72(r1)	 # SI load
	l.lwz   	r4,36(r1)	 # SI load
	l.slli  	r19,r3,4
	l.lwz   	r21,12(r4)	 # SI load
	l.lwz   	r5,56(r1)	 # SI load
	l.add   	r19,r21,r19
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r4,0(r19)	 # SI load
	l.lwz   	r5,48(r1)	 # SI load
	l.lwz   	r23,12(r5)	 # SI load
	l.addi  	r17,r23,-1
	l.sfltsi	r17,0
	l.bf	.L12990	# delay slot filled
	l.slli  	r19,r17,4
	l.slli  	r21,r17,2
	l.lwz   	r3,20(r5)	 # SI load
	l.add   	r15,r21,r19
	l.add   	r19,r3,r15
	l.sfeqi	r19,0
	l.bf	.L12990
	l.nop			# nop delay slot
	l.lbz   	r15,0(r19)	 # zero_extendqisi2
	l.sfnei	r15,119
	l.bf	.L12990	# delay slot filled
	l.lwz   	r6,40(r1)	 # SI load
	l.lbz   	r15,34(r6)	 # zero_extendqisi2
	l.andi  	r15,r15,16
	l.sfnei	r15,0
	l.bf	.L13205	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r7,r0,26	 # movqi: move immediate
	l.addi  	r18,r0,1	 # move immediate I
	l.sb    	0(r19),r7	    # movqi
	l.lwz   	r8,88(r1)	 # SI load
	l.lwz   	r11,56(r1)	 # SI load
	l.lwz   	r3,84(r1)	 # SI load
	l.sw    	4(r19),r8	 # SI store
	l.sw    	8(r19),r11	 # SI store
	l.j     	.L12993	# delay slot filled
	l.sw    	12(r19),r3	 # SI store
.L13155:
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r4,r0,3	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.lwz   	r6,72(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r7,56(r1)	 # SI load
	l.j     	.L13186	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
.L12988:
	l.lwz   	r6,40(r1)	 # SI load
	l.lbz   	r15,34(r6)	 # zero_extendqisi2
	l.andi  	r15,r15,16
	l.sfeqi	r15,0
	l.bf	.L12995	# delay slot filled
	l.lwz   	r3,48(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,119	 # move immediate I
	l.lwz   	r6,56(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r18,r5,0	 # move reg to reg
	l.j     	.L13187	# delay slot filled
	l.lwz   	r7,84(r1)	 # SI load
.L13040:
	l.lwz   	r4,52(r1)	 # SI load
	l.sw    	64(r1),r4	 # SI store
	l.j     	.L12933	# delay slot filled
	l.sw    	76(r1),r4	 # SI store
.L13166:
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r7,4
.L13105:
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r7,16(r6)	 # SI load
	l.sfnei	r7,0
	l.bf	.L13206	# delay slot filled
	l.lwz   	r7,40(r1)	 # SI load
	l.lwz   	r8,28(r1)	 # SI load
	l.lwz   	r7,40(r8)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L13107	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
	l.lwz   	r11,40(r1)	 # SI load
.L13208:
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r11,4
.L13164:
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	64(r1),r6	 # SI store
	l.j     	.L12933	# delay slot filled
	l.sw    	76(r1),r6	 # SI store
.L12995:
	l.addi  	r4,r0,26	 # move immediate I
	l.lwz   	r5,88(r1)	 # SI load
	l.lwz   	r6,56(r1)	 # SI load
	l.lwz   	r7,84(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r18,r0,1	 # move immediate I
	l.j     	.L13187	# delay slot filled
	l.lwz   	r7,84(r1)	 # SI load
.L13107:
	l.lwz   	r7,28(r3)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L13108	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r4,4
.L13108:
	l.lwz   	r5,28(r1)	 # SI load
	l.lhz   	r15,6(r5)	 # zero_extendqisi2
	l.andi  	r15,r15,1
	l.sfnei	r15,0
	l.bf	.L13167	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
	l.lwz   	r15,0(r7)	 # SI load
	l.lwz   	r7,0(r15)	 # SI load
	l.sfnei	r7,1
	l.bf	.L13207	# delay slot filled
	l.lwz   	r8,40(r1)	 # SI load
	l.lwz   	r15,12(r15)	 # SI load
	l.lwz   	r15,0(r15)	 # SI load
	l.lbz   	r15,0(r15)	 # zero_extendqisi2
	l.sfnei	r15,113
	l.bf	.L13208	# delay slot filled
	l.lwz   	r11,40(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r5,8(r13)	 # SI load
	l.jal   	sqlite3LocateTable	# delay slot filled
	l.lwz   	r6,4(r13)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L13133	# delay slot filled
	l.sw    	60(r1),r11	 # SI store
	l.lwz   	r4,40(r1)	 # SI load
	l.lwz   	r5,60(r1)	 # SI load
	l.sfeq 	r4,r5
	l.bf	.L13140	# delay slot filled
	l.lwz   	r7,60(r1)	 # SI load
	l.lbz   	r12,34(r7)	 # zero_extendqisi2
	l.andi  	r12,r12,16
	l.sfnei	r12,0
	l.bf	.L13168	# delay slot filled
	l.lwz   	r11,60(r1)	 # SI load
	l.lwz   	r18,28(r11)	 # SI load
	l.sfnei	r18,0
	l.bf	.L13209	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r4,40(r1)	 # SI load
	l.lwz   	r5,60(r1)	 # SI load
	l.lwz   	r30,12(r4)	 # SI load
	l.lwz   	r7,12(r5)	 # SI load
	l.sfne 	r30,r7
	l.bnf	.L13116	# delay slot filled
	l.lwz   	r7,40(r1)	 # SI load
.L13140:
	l.lbz   	r12,34(r4)	 # zero_extendqisi2
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r4,4
.L13167:
	l.lwz   	r6,40(r1)	 # SI load
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r6,4
.L13116:
	l.lwz   	r8,60(r1)	 # SI load
	l.lwz   	r12,8(r7)	 # SI load
	l.lwz   	r7,8(r8)	 # SI load
	l.sfne 	r12,r7
	l.bnf	.L13117	# delay slot filled
	l.lwz   	r11,40(r1)	 # SI load
	l.lbz   	r12,34(r11)	 # zero_extendqisi2
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r11,4
.L13168:
	l.lwz   	r8,40(r1)	 # SI load
	l.lbz   	r12,34(r8)	 # zero_extendqisi2
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r8,4
.L13117:
	l.ori   	r20,r18,0	 # move reg to reg
	l.sfgts 	r30,r20
.L13211:
	l.bnf	.L13169	# delay slot filled
	l.addi  	r20,r20,1
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r4,60(r1)	 # SI load
	l.lwz   	r26,16(r3)	 # SI load
	l.lwz   	r24,16(r4)	 # SI load
	l.add   	r26,r26,r18
	l.add   	r24,r24,r18
	l.lbs   	r4,18(r26)	 # extendqisi2_no_sext_mem
	l.lbs   	r3,18(r24)	 # extendqisi2_no_sext_mem
	l.sfne 	r4,r3
	l.bf	.L13134	# delay slot filled
	l.addi  	r18,r18,20
	l.lwz   	r3,12(r26)	 # SI load
	l.jal   	xferCompatibleCollation	# delay slot filled
	l.lwz   	r4,12(r24)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L13210	# delay slot filled
	l.lwz   	r6,40(r1)	 # SI load
	l.lbz   	r3,16(r26)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L13211	# delay slot filled
	l.sfgts 	r30,r20
	l.lbz   	r3,16(r24)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L13211	# delay slot filled
	l.sfgts 	r30,r20
	l.lwz   	r7,40(r1)	 # SI load
	l.lbz   	r12,34(r7)	 # zero_extendqisi2
	l.j     	.L12899	# delay slot filled
	l.addi  	r26,r7,4
.L13169:
	l.lwz   	r8,40(r1)	 # SI load
	l.addi  	r24,r0,0	 # move immediate I
	l.lwz   	r18,20(r8)	 # SI load
.L12905:
	l.sfnei	r18,0
	l.bnf	.L13170	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.lbz   	r3,24(r18)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L13212	# delay slot filled
	l.lwz   	r11,60(r1)	 # SI load
	l.addi  	r24,r0,1	 # move immediate I
.L13212:
	l.lwz   	r20,20(r11)	 # SI load
.L12907:
	l.ori   	r4,r20,0	 # move reg to reg
	l.sfnei	r20,0
	l.bnf	.L13133	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	xferCompatibleIndex
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L12908
	l.nop			# nop delay slot
	l.j     	.L12907	# delay slot filled
	l.lwz   	r20,32(r20)	 # SI load
.L13170:
	l.lwz   	r12,44(r4)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L12911	# delay slot filled
	l.lwz   	r5,60(r1)	 # SI load
	l.ori   	r4,r12,0	 # move reg to reg
	l.jal   	sqlite3ExprCompare	# delay slot filled
	l.lwz   	r3,44(r5)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L13210	# delay slot filled
	l.lwz   	r6,40(r1)	 # SI load
.L12911:
	l.lwz   	r7,60(r1)	 # SI load
	l.lwz   	r15,72(r7)	 # SI load
	l.sfeqi	r15,0
	l.bf	.L13034	# delay slot filled
	l.lwz   	r12,0(r28)	 # SI load
	l.addi  	r13,r0,0	 # move immediate I
	l.lwz   	r17,4(r12)	 # SI load
	l.sw    	72(r1),r13	 # SI store
	l.ori   	r3,r13,0	 # move reg to reg
.L12913:
	l.sflts 	r3,r17
	l.bnf	.L13126
	l.nop			# nop delay slot
	l.lwz   	r4,8(r12)	 # SI load
	l.add   	r4,r4,r13
	l.lwz   	r4,20(r4)	 # SI load
	l.sfeq 	r15,r4
	l.bf	.L13126	# delay slot filled
	l.addi  	r13,r13,24
	l.j     	.L12913	# delay slot filled
	l.addi  	r3,r3,1
.L12908:
	l.j     	.L12905	# delay slot filled
	l.lwz   	r18,32(r18)	 # SI load
.L13126:
	l.sw    	72(r1),r3	 # SI store
.L12912:
	l.lwz   	r8,40(r1)	 # SI load
	l.ori   	r3,r12,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r26,r8,4
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,72(r1)	 # SI load
	l.jal   	sqlite3CodeVerifySchema	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r11,68(r28)	 # SI load
	l.lwz   	r5,40(r1)	 # SI load
	l.addi  	r12,r11,2
	l.addi  	r4,r11,1
	l.sw    	68(r28),r12	 # SI store
	l.ori   	r3,r28,0	 # move reg to reg
	l.lbz   	r6,34(r5)	 # zero_extendqisi2
	l.sw    	68(r1),r4	 # SI store
	l.ori   	r5,r26,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	autoIncBegin.clone.145	# delay slot filled
	l.sw    	64(r1),r11	 # SI store
	l.lwz   	r6,40(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r4,68(r1)	 # SI load
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r7,r0,10	 # move immediate I
	l.jal   	sqlite3OpenTable	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r6,40(r1)	 # SI load
	l.lwz   	r12,8(r6)	 # SI load
	l.sfgesi	r12,0
	l.bnf	.L13171	# delay slot filled
	l.sfeqi	r24,0
.L13188:
	l.bf	.L12917	# delay slot filled
	l.sw    	84(r1),r24	 # SI store
	l.addi  	r4,r0,122	 # move immediate I
.L13215:
	l.lwz   	r5,68(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.sw    	84(r1),r11	 # SI store
.L12917:
	l.lwz   	r4,64(r1)	 # SI load
	l.lwz   	r5,72(r1)	 # SI load
	l.lwz   	r6,60(r1)	 # SI load
	l.addi  	r7,r0,13	 # move immediate I
	l.jal   	sqlite3OpenTable	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,122	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lbz   	r13,21(r28)	 # zero_extendqisi2
	l.sfnei	r13,0
	l.bf	.L12918	# delay slot filled
	l.sw    	96(r1),r11	 # SI store
	l.lwz   	r12,72(r28)	 # SI load
	l.addi  	r12,r12,1
	l.sw    	76(r1),r12	 # SI store
	l.sw    	72(r28),r12	 # SI store
.L13120:
	l.lwz   	r12,72(r28)	 # SI load
	l.addi  	r24,r12,1
	l.sw    	72(r28),r24	 # SI store
.L12921:
	l.lwz   	r7,40(r1)	 # SI load
	l.lwz   	r12,8(r7)	 # SI load
	l.sfltsi	r12,0
	l.bf	.L12922	# delay slot filled
	l.addi  	r4,r0,40	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.ori   	r6,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,46	 # move immediate I
	l.lwz   	r5,68(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r7,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.movhi  	r8,hi(.LC247)
	l.addi  	r12,r0,-2	 # move immediate I
	l.addi  	r5,r0,19	 # move immediate I
	l.lwz   	r6,88(r1)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r8,r8,lo(.LC247)
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,39	 # move immediate I
	l.ori   	r14,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r12	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sflesi	r30,0
	l.bf	.L12923	# delay slot filled
	l.addi  	r4,r0,45	 # move immediate I
	l.lwz   	r3,12(r28)	 # SI load
	l.ori   	r5,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
.L12923:
	l.addi  	r4,r0,44	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.lwz   	r6,76(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,110	 # move immediate I
	l.lwz   	r5,68(r1)	 # SI load
	l.lwz   	r6,76(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r24,0	 # move reg to reg
	l.sfeqi	r18,0
	l.bf	.L13213	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r17,20(r18)	 # SI load
	l.sfeqi	r17,0
	l.bf	.L13213	# delay slot filled
	l.addi  	r11,r0,11	 # movqi: move immediate
	l.lwz   	r14,12(r18)	 # SI load
	l.addi  	r14,r14,-1
	l.slli  	r8,r14,2
	l.slli  	r14,r14,4
	l.add   	r12,r8,r14
	l.add   	r12,r17,r12
	l.sb    	3(r12),r11	    # movqi
	l.lwz   	r3,40(r1)	 # SI load
.L13213:
	l.addi  	r4,r0,-1	 # move immediate I
	l.lwz   	r5,4(r3)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,106	 # move immediate I
	l.lwz   	r6,40(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.lbz   	r5,34(r6)	 # zero_extendqisi2
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	autoIncEnd.clone.146	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.lwz   	r7,40(r1)	 # SI load
	l.lwz   	r20,64(r1)	 # SI load
	l.lwz   	r30,20(r7)	 # SI load
.L12926:
	l.sfnei	r30,0
	l.bnf	.L13172	# delay slot filled
	l.lwz   	r8,60(r1)	 # SI load
	l.lwz   	r14,20(r8)	 # SI load
.L12927:
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfnei	r14,0
	l.bnf	.L12928	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	xferCompatibleIndex
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L13214	# delay slot filled
	l.addi  	r4,r0,33	 # move immediate I
	l.j     	.L12927	# delay slot filled
	l.lwz   	r14,32(r14)	 # SI load
.L12922:
	l.lwz   	r8,40(r1)	 # SI load
	l.lwz   	r12,20(r8)	 # SI load
	l.sfnei	r12,0
	l.bnf	.L13173	# delay slot filled
	l.lwz   	r5,64(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.j     	.L12923	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
.L12918:
	l.addi  	r12,r13,-1
	l.andi  	r12,r12,0xff	 # zero_extendqisi2
	l.addi  	r14,r12,6
	l.ori   	r13,r12,0	 # move reg to reg
	l.slli  	r14,r14,2
	l.sb    	21(r28),r12	    # movqi
	l.sfnei	r12,0
	l.add   	r12,r28,r14
	l.lwz   	r12,0(r12)	 # SI load
	l.bnf	.L13120	# delay slot filled
	l.sw    	76(r1),r12	 # SI store
	l.addi  	r12,r13,-1
	l.andi  	r12,r12,0xff	 # zero_extendqisi2
	l.addi  	r14,r12,6
	l.sb    	21(r28),r12	    # movqi
	l.slli  	r12,r14,2
	l.add   	r12,r28,r12
	l.j     	.L12921	# delay slot filled
	l.lwz   	r24,0(r12)	 # SI load
.L13173:
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.lwz   	r5,68(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.j     	.L12923	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
.L13171:
	l.lwz   	r12,20(r6)	 # SI load
	l.sfnei	r12,0
	l.bf	.L13215	# delay slot filled
	l.addi  	r4,r0,122	 # move immediate I
	l.j     	.L13188	# delay slot filled
	l.sfeqi	r24,0
.L13034:
	l.movhi 	r15,hi(-1048576)	 # move immediate M
	l.ori   	r15,r15,48576
	l.j     	.L12912	# delay slot filled
	l.sw    	72(r1),r15	 # SI store
.L12928:
	l.addi  	r4,r0,33	 # move immediate I
.L13214:
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r5,68(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,33	 # move immediate I
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3IndexKeyinfo	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r6,20(r14)	 # SI load
	l.ori   	r8,r11,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.lwz   	r7,72(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,13	 # move immediate I
	l.addi  	r11,r0,-16	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.ori   	r4,r30,0	 # move reg to reg
	l.jal   	sqlite3IndexKeyinfo	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r6,20(r30)	 # SI load
	l.ori   	r8,r11,0	 # move reg to reg
	l.ori   	r7,r2,0	 # move reg to reg
	l.addi  	r4,r0,10	 # move immediate I
	l.lwz   	r5,68(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r11,r0,-16	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,122	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,8	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.lwz   	r6,76(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r7,r0,1	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,108	 # move immediate I
	l.lwz   	r5,68(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r6,76(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.addi  	r6,r14,1
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,106	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L12926	# delay slot filled
	l.lwz   	r30,32(r30)	 # SI load
.L13172:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,96(r1)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.lwz   	r4,76(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.lwz   	r5,68(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.lwz   	r20,84(r1)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L13174	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r5,r30,0	 # move reg to reg
	l.ori   	r6,r30,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,39	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,84(r1)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.lwz   	r5,68(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.lwz   	r3,40(r1)	 # SI load
	l.j     	.L12899	# delay slot filled
	l.lbz   	r12,34(r3)	 # zero_extendqisi2
.LFE988:
	.size	sqlite3Insert, .-sqlite3Insert
	.section	.rodata.str1.1
.LC344:
	.string	"-- TRIGGER %s"
	.section .text
	.align	4
.proc	sqlite3CodeRowTrigger
	.type	sqlite3CodeRowTrigger, @function
sqlite3CodeRowTrigger:
.LFB1094:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4063:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4064:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-20(r1),r24	 # SI store
.LCFI4065:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4066:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4067:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4068:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4069:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4070:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4071:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4072:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4073:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-164
.LCFI4074:
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	84(r1),r2	 # SI store
	l.sw    	80(r1),r2	 # SI store
	l.sw    	4(r1),r5	 # SI store
	l.sw    	28(r1),r6	 # SI store
	l.sw    	16(r1),r7	 # SI store
	l.sw    	24(r1),r8	 # SI store
	l.sw    	12(r1),r3	 # SI store
	l.sfeq 	r4,r2
	l.bf	.L13218	# delay slot filled
	l.lwz   	r24,172(r1)	 # SI load
	l.j     	.L13236	# delay slot filled
	l.ori   	r16,r4,0	 # move reg to reg
.L13219:
	l.lwz   	r16,40(r16)	 # SI load
.L13252:
	l.sfnei	r16,0
	l.bnf	.L13257	# delay slot filled
	l.lwz   	r2,180(r1)	 # SI load
.L13236:
	l.lbz   	r2,8(r16)	 # zero_extendqisi2
	l.lwz   	r4,4(r1)	 # SI load
	l.sfne 	r2,r4
	l.bf	.L13219	# delay slot filled
	l.lwz   	r6,16(r1)	 # SI load
	l.lbz   	r2,9(r16)	 # zero_extendqisi2
	l.sfne 	r2,r6
	l.bf	.L13219
	l.nop			# nop delay slot
	l.lwz   	r2,28(r16)	 # SI load
	l.lwz   	r3,32(r16)	 # SI load
	l.sfeq 	r2,r3
	l.bf	.L13220	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r3,8(r4)	 # SI load
	l.lwz   	r3,44(r3)	 # SI load
	l.sfne 	r2,r3
	l.bf	.L13219
	l.nop			# nop delay slot
.L13220:
	l.lwz   	r6,4(r1)	 # SI load
	l.sfnei	r6,106
	l.bnf	.L13246
	l.nop			# nop delay slot
.L13221:
	l.lwz   	r2,484(r14)	 # SI load
.L13256:
	l.sfeqi	r2,0
	l.bf	.L13258	# delay slot filled
	l.movhi  	r4,hi(.LC344)
	l.lwz   	r3,28(r2)	 # SI load
	l.sfeq 	r3,r16
	l.bnf	.L13241
	l.nop			# nop delay slot
	l.j     	.L13252	# delay slot filled
	l.lwz   	r16,40(r16)	 # SI load
.L13247:
	l.lwz   	r3,28(r2)	 # SI load
	l.sfne 	r3,r16
	l.bnf	.L13219
	l.nop			# nop delay slot
.L13241:
	l.lwz   	r2,32(r2)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L13247	# delay slot filled
	l.movhi  	r4,hi(.LC344)
.L13258:
	l.lwz   	r5,0(r16)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC344)
	l.lwz   	r2,12(r14)	 # SI load
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r8,r11,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,21	 # move immediate I
	l.addi  	r2,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r4,488(r14)	 # SI load
	l.sw    	36(r1),r3	 # SI store
	l.sw    	40(r1),r3	 # SI store
	l.sw    	44(r1),r3	 # SI store
	l.sw    	48(r1),r3	 # SI store
	l.sw    	52(r1),r3	 # SI store
	l.sw    	56(r1),r3	 # SI store
	l.sw    	60(r1),r3	 # SI store
	l.sw    	64(r1),r3	 # SI store
	l.addi  	r6,r1,68
	l.lwz   	r3,0(r16)	 # SI load
	l.lwz   	r2,484(r14)	 # SI load
	l.sw    	20(r1),r4	 # SI store
	l.sw    	484(r14),r6	 # SI store
	l.lwz   	r4,164(r1)	 # SI load
	l.lwz   	r6,168(r1)	 # SI load
	l.sw    	488(r14),r3	 # SI store
	l.sw    	72(r1),r4	 # SI store
	l.lwz   	r3,12(r14)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.sw    	76(r1),r6	 # SI store
	l.lwz   	r6,176(r1)	 # SI load
	l.sw    	68(r1),r4	 # SI store
	l.sw    	100(r1),r2	 # SI store
	l.sw    	92(r1),r6	 # SI store
	l.sw    	32(r1),r14	 # SI store
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	96(r1),r16	 # SI store
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r4,12(r16)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.lwz   	r4,12(r1)	 # SI load
	l.lbz   	r3,30(r4)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L13224	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r3,r1,32
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L13224	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r5,8(r1)	 # SI load
	l.addi  	r6,r0,8	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprIfFalse	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r22,12(r14)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r4,r0,59	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.lwz   	r2,36(r16)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r20,0(r14)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L13240	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L13260	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L13250:
	l.bf	.L13248	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L13229:
	l.lwz   	r2,36(r2)	 # SI load
.L13254:
	l.sfnei	r2,0
	l.bnf	.L13253	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L13240:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprCacheClear	# delay slot filled
	l.ori   	r18,r24,0	 # move reg to reg
	l.sfnei	r24,99
	l.bnf	.L13249
	l.nop			# nop delay slot
	l.lwz   	r13,484(r14)	 # SI load
	l.lwz   	r12,0(r2)	 # SI load
	l.sfeqi	r12,106
	l.bf	.L13231	# delay slot filled
	l.sw    	20(r13),r18	 # SI store
.L13251:
	l.sfgtsi	r12,106
	l.bnf	.L13250	# delay slot filled
	l.sfeqi	r12,105
	l.sfeqi	r12,107
	l.bf	.L13232	# delay slot filled
	l.sfeqi	r12,116
	l.bnf	.L13229	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,12(r2)	 # SI load
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L13229	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r6,r0,4	 # movqi: move immediate
	l.ori   	r3,r14,0	 # move reg to reg
	l.sb    	104(r1),r6	    # movqi
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r1,104
	l.sw    	108(r1),r6	 # SI store
	l.sb    	105(r1),r6	    # movqi
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	112(r1),r6	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	116(r1),r6	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r2,36(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L13240	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L13253:
	l.ori   	r3,r22,0	 # move reg to reg
.L13260:
	l.addi  	r4,r0,105	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
	l.lwz   	r3,12(r14)	 # SI load
	l.lwz   	r5,100(r1)	 # SI load
	l.lwz   	r4,20(r1)	 # SI load
	l.lwz   	r2,32(r3)	 # SI load
	l.sw    	484(r14),r5	 # SI store
	l.sw    	488(r14),r4	 # SI store
	l.sfeqi	r2,0
	l.bf	.L13219	# delay slot filled
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r6,8(r1)	 # SI load
	l.lwz   	r16,40(r16)	 # SI load
	l.xori  	r11,r6,0xffff
	l.sfnei	r16,0
	l.slli  	r11,r11,2
	l.add   	r2,r2,r11
	l.bf	.L13236	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
.L13218:
	l.lwz   	r2,180(r1)	 # SI load
.L13257:
	l.sfeqi	r2,0
	l.bf	.L13259	# delay slot filled
	l.lwz   	r11,184(r1)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r2,84(r1)	 # SI load
	l.or    	r2,r3,r2
	l.lwz   	r3,180(r1)	 # SI load
	l.sw    	0(r3),r2	 # SI store
	l.lwz   	r11,184(r1)	 # SI load
.L13259:
	l.sfeqi	r11,0
	l.bf	.L13226	# delay slot filled
	l.lwz   	r2,80(r1)	 # SI load
	l.lwz   	r3,0(r11)	 # SI load
	l.or    	r2,r3,r2
	l.sw    	0(r11),r2	 # SI store
	l.addi  	r11,r0,0	 # move immediate I
.L13226:
	l.addi	r1,r1,164
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L13249:
	l.lwz   	r18,4(r2)	 # SI load
	l.lwz   	r13,484(r14)	 # SI load
	l.lwz   	r12,0(r2)	 # SI load
	l.sfeqi	r12,106
	l.bnf	.L13251	# delay slot filled
	l.sw    	20(r13),r18	 # SI store
.L13231:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	targetSrcList.clone.148	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r4,r0,58	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,28(r2)	 # SI load
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r5,r26,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	sqlite3Update	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
.L13255:
	l.addi  	r4,r0,58	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13254	# delay slot filled
	l.lwz   	r2,36(r2)	 # SI load
.L13232:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	targetSrcList.clone.148	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r4,r0,58	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,28(r2)	 # SI load
	l.jal   	sqlite3ExprListDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,12(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,32(r2)	 # SI load
	l.jal   	sqlite3IdListDup	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r30,0	 # move reg to reg
	l.ori   	r5,r28,0	 # move reg to reg
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r7,r11,0	 # move reg to reg
	l.jal   	sqlite3Insert	# delay slot filled
	l.ori   	r8,r18,0	 # move reg to reg
	l.j     	.L13255	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L13248:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,58	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	targetSrcList.clone.148	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,24(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3DeleteFrom	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.j     	.L13255	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L13224:
	l.lwz   	r4,100(r1)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
	l.sw    	484(r14),r4	 # SI store
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L13226	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
.L13246:
	l.lwz   	r3,16(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13221
	l.nop			# nop delay slot
	l.jal   	checkColumnOverLap	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L13219
	l.nop			# nop delay slot
	l.j     	.L13256	# delay slot filled
	l.lwz   	r2,484(r14)	 # SI load
.LFE1094:
	.size	sqlite3CodeRowTrigger, .-sqlite3CodeRowTrigger
	.section	.rodata.str1.1
.LC345:
	.string	"rows deleted"
	.section .text
	.align	4
.proc	sqlite3DeleteFrom
	.type	sqlite3DeleteFrom, @function
sqlite3DeleteFrom:
.LFB937:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4075:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4076:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4077:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4078:
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI4079:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4080:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4081:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4082:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4083:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4084:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4085:
	l.addi  	r1,r1,-156
.LCFI4086:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	108(r1),r6	 # SI store
	l.lwz   	r6,64(r3)	 # SI load
	l.ori   	r16,r4,0	 # move reg to reg
	l.ori   	r18,r5,0	 # move reg to reg
	l.sfnei	r6,0
	l.bf	.L13295	# delay slot filled
	l.lwz   	r14,0(r3)	 # SI load
	l.lbz   	r20,30(r14)	 # zero_extendqisi2
	l.sfnei	r20,0
	l.bnf	.L13309
	l.nop			# nop delay slot
.L13295:
	l.ori   	r3,r14,0	 # move reg to reg
.L13327:
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.addi	r1,r1,156
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L13309:
	l.jal   	sqlite3SrcListLookup
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bf	.L13295	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r7,r20,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3TriggersExist.clone.92	# delay slot filled
	l.addi  	r5,r0,105	 # move immediate I
	l.sub   	r5,r0,r11
	l.ori   	r3,r2,0	 # move reg to reg
	l.or    	r5,r11,r5
	l.ori   	r4,r22,0	 # move reg to reg
	l.srli  	r5,r5,31
	l.ori   	r26,r11,0	 # move reg to reg
	l.lwz   	r24,28(r22)	 # SI load
	l.jal   	sqlite3IsReadOnly	# delay slot filled
	l.sw    	24(r1),r5	 # SI store
	l.sfnei	r11,0
	l.bf	.L13295	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r7,72(r22)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L13310	# delay slot filled
	l.movhi 	r11,hi(-24051712)	 # move immediate M
	l.lwz   	r12,4(r14)	 # SI load
	l.sfgtsi	r12,0
	l.bnf	.L13311
	l.nop			# nop delay slot
	l.lwz   	r11,8(r14)	 # SI load
	l.lwz   	r3,20(r11)	 # SI load
	l.sfeq 	r7,r3
	l.bf	.L13264	# delay slot filled
	l.ori   	r8,r11,0	 # move reg to reg
	l.j     	.L13266	# delay slot filled
	l.addi  	r3,r11,24
.L13267:
	l.lwz   	r4,20(r3)	 # SI load
	l.sfeq 	r7,r4
	l.bf	.L13264	# delay slot filled
	l.addi  	r3,r3,24
.L13266:
	l.addi  	r20,r20,1
	l.sflts 	r20,r12
	l.bf	.L13267	# delay slot filled
	l.ori   	r8,r3,0	 # move reg to reg
	l.add   	r8,r20,r20
	l.add   	r8,r8,r20
	l.slli  	r8,r8,3
	l.add   	r8,r11,r8
.L13264:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.lwz   	r5,4(r22)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.lwz   	r7,0(r8)	 # SI load
	l.sfeqi	r11,1
	l.bf	.L13295	# delay slot filled
	l.sw    	28(r1),r11	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ViewGetColumnNames	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13327	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r26,0
	l.bnf	.L13312
	l.nop			# nop delay slot
	l.lwz   	r5,68(r2)	 # SI load
	l.addi  	r6,r5,1
	l.sw    	40(r1),r5	 # SI store
	l.sw    	32(r1),r6	 # SI store
.L13269:
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r11,r11,1
	l.sw    	28(r16),r3	 # SI store
	l.sw    	52(r1),r11	 # SI store
	l.lwz   	r3,20(r22)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13270	# delay slot filled
	l.sw    	68(r2),r11	 # SI store
	l.lwz   	r4,32(r1)	 # SI load
	l.addi  	r8,r4,2
.L13271:
	l.lwz   	r3,32(r3)	 # SI load
	l.ori   	r4,r8,0	 # move reg to reg
	l.sfnei	r3,0
	l.bf	.L13271	# delay slot filled
	l.addi  	r8,r8,1
	l.sw    	68(r2),r4	 # SI store
.L13270:
	l.sub   	r3,r0,r24
	l.or    	r24,r24,r3
	l.srli  	r24,r24,31
	l.sfeqi	r24,0
	l.bf	.L13272	# delay slot filled
	l.sw    	36(r1),r24	 # SI store
	l.lwz   	r3,4(r22)	 # SI load
	l.lwz   	r28,488(r2)	 # SI load
	l.ori   	r24,r2,0	 # move reg to reg
	l.sw    	488(r2),r3	 # SI store
.L13272:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r2,12
	l.sfeqi	r11,0
	l.bf	.L13273	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lbz   	r3,19(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L13328	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sb    	125(r11),r5	    # movqi
.L13328:
	l.lwz   	r4,24(r1)	 # SI load
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfeqi	r26,0
	l.bf	.L13300	# delay slot filled
	l.addi  	r6,r0,99	 # move immediate I
	l.lwz   	r3,484(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13276	# delay slot filled
	l.sw    	24(r1),r6	 # SI store
	l.lwz   	r3,20(r3)	 # SI load
	l.sw    	24(r1),r3	 # SI store
.L13276:
	l.addi  	r4,r0,96	 # move immediate I
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.sw    	48(r1),r11	 # SI store
	l.sw    	44(r1),r11	 # SI store
	l.lwz   	r11,12(r30)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	64(r1),r11	 # SI store
	l.addi  	r11,r0,-1	 # move immediate I
	l.ori   	r8,r22,0	 # move reg to reg
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r11,40(r1)	 # SI load
	l.addi  	r5,r0,105	 # move immediate I
	l.sw    	4(r1),r11	 # SI store
	l.lwz   	r11,24(r1)	 # SI load
	l.addi  	r7,r0,1	 # move immediate I
	l.sw    	8(r1),r11	 # SI store
	l.lwz   	r11,44(r1)	 # SI load
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	12(r1),r11	 # SI store
	l.addi  	r11,r1,108
	l.sw    	20(r1),r6	 # SI store
	l.jal   	sqlite3CodeRowTrigger	# delay slot filled
	l.sw    	16(r1),r11	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.addi  	r4,r0,96	 # move immediate I
	l.sw    	68(r1),r11	 # SI store
	l.lwz   	r11,12(r30)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	56(r1),r11	 # SI store
	l.addi  	r11,r0,-1	 # move immediate I
	l.ori   	r4,r26,0	 # move reg to reg
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r11,40(r1)	 # SI load
	l.addi  	r5,r0,105	 # move immediate I
	l.sw    	4(r1),r11	 # SI store
	l.lwz   	r11,24(r1)	 # SI load
	l.addi  	r7,r0,2	 # move immediate I
	l.sw    	8(r1),r11	 # SI store
	l.lwz   	r11,44(r1)	 # SI load
	l.ori   	r8,r22,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	12(r1),r11	 # SI store
	l.addi  	r11,r1,108
	l.sw    	20(r1),r6	 # SI store
	l.jal   	sqlite3CodeRowTrigger	# delay slot filled
	l.sw    	16(r1),r11	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,48(r1)	 # SI load
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.sw    	60(r1),r11	 # SI store
.L13275:
	l.lwz   	r3,36(r1)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L13313	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r8,r1,72
.L13320:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r8,0	 # move reg to reg
	l.sw    	8(r8),r5	 # SI store
	l.sw    	12(r8),r5	 # SI store
	l.sw    	16(r8),r5	 # SI store
	l.sw    	20(r8),r5	 # SI store
	l.sw    	24(r8),r5	 # SI store
	l.sw    	28(r8),r5	 # SI store
	l.sw    	32(r8),r5	 # SI store
	l.ori   	r4,r18,0	 # move reg to reg
	l.sw    	72(r1),r2	 # SI store
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.sw    	76(r1),r16	 # SI store
	l.sfnei	r11,0
	l.bf	.L13273	# delay slot filled
	l.ori   	r8,r11,0	 # move reg to reg
	l.lwz   	r3,12(r14)	 # SI load
	l.addi  	r6,r0,-1	 # move immediate I
	l.andi  	r3,r3,128
	l.sfeqi	r3,0
	l.bnf	.L13314	# delay slot filled
	l.sw    	48(r1),r6	 # SI store
	l.lwz   	r4,28(r1)	 # SI load
.L13321:
	l.sub   	r3,r0,r4
	l.or    	r3,r3,r4
	l.sfltsi	r3,0
	l.bf	.L13279	# delay slot filled
	l.sub   	r3,r0,r18
	l.or    	r3,r18,r3
	l.sfltsi	r3,0
	l.bf	.L13279	# delay slot filled
	l.sfnei	r26,0
	l.bnf	.L13315
	l.nop			# nop delay slot
.L13279:
	l.lwz   	r20,72(r2)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r5,r20,2
	l.addi  	r4,r0,119	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.sw    	24(r1),r5	 # SI store
	l.sw    	72(r2),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r20,r20,1
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3WhereBegin	# delay slot filled
	l.addi  	r7,r0,8	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L13273	# delay slot filled
	l.sw    	28(r1),r11	 # SI store
	l.ori   	r4,r22,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.lwz   	r6,32(r1)	 # SI load
	l.ori   	r7,r20,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.jal   	sqlite3ExprCodeGetColumn	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,51	 # move immediate I
	l.lwz   	r5,24(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r3,12(r14)	 # SI load
	l.andi  	r3,r3,128
	l.sfeqi	r3,0
	l.bnf	.L13316	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
.L13282:
	l.jal   	sqlite3WhereEnd	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
	l.sfeqi	r26,0
	l.bf	.L13283	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,117	 # move immediate I
	l.lwz   	r5,40(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r7,12(r22)	 # SI load
.L13283:
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r6,36(r1)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L13317	# delay slot filled
	l.sw    	28(r1),r11	 # SI store
	l.sfeqi	r26,0
.L13323:
	l.bf	.L13285	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r3,32(r30)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13286	# delay slot filled
	l.lwz   	r4,12(r30)	 # SI load
	l.lwz   	r11,44(r1)	 # SI load
	l.xori  	r5,r11,0xffff
	l.slli  	r5,r5,2
	l.add   	r3,r3,r5
	l.sw    	0(r3),r4	 # SI store
.L13286:
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,50	 # move immediate I
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r6,28(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.lwz   	r4,72(r2)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r4,1
	l.ori   	r6,r11,0	 # move reg to reg
	l.sw    	44(r1),r4	 # SI store
	l.ori   	r7,r20,0	 # move reg to reg
	l.lwz   	r5,44(r1)	 # SI load
	l.addi  	r4,r0,46	 # move immediate I
	l.sw    	72(r2),r5	 # SI store
	l.lwz   	r5,32(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.sw    	24(r1),r11	 # SI store
	l.lwz   	r5,108(r1)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L13318
	l.nop			# nop delay slot
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,44	 # move immediate I
	l.lwz   	r5,32(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
	l.addi  	r4,r0,110	 # move immediate I
.L13322:
	l.lwz   	r5,40(r1)	 # SI load
	l.lwz   	r6,44(r1)	 # SI load
	l.ori   	r7,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,64(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,68(r1)	 # SI load
.L13287:
	l.lwz   	r3,36(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L13324	# delay slot filled
	l.sfeqi	r26,0
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bf	.L13290	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,56(r22)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3VtabMakeWritable	# delay slot filled
	l.sw    	40(r1),r5	 # SI store
	l.addi  	r11,r0,-10	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,125	 # move immediate I
	l.lwz   	r5,36(r1)	 # SI load
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r20,0	 # move reg to reg
	l.lwz   	r8,40(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.sfeqi	r26,0
.L13324:
	l.bf	.L13291	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,56(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,60(r1)	 # SI load
.L13291:
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,24(r1)	 # SI load
	l.lwz   	r3,32(r30)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13292	# delay slot filled
	l.lwz   	r4,12(r30)	 # SI load
	l.lwz   	r6,28(r1)	 # SI load
	l.xori  	r5,r6,0xffff
	l.slli  	r5,r5,2
	l.add   	r3,r3,r5
	l.sw    	0(r3),r4	 # SI store
.L13292:
	l.lwz   	r11,36(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L13280
	l.nop			# nop delay slot
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfnei	r3,0
	l.bf	.L13280
	l.nop			# nop delay slot
	l.lwz   	r20,20(r22)	 # SI load
	l.sfeqi	r20,0
	l.bf	.L13329	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r22,52(r1)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
.L13330:
	l.lwz   	r6,20(r20)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r22,r22,1
	l.lwz   	r20,32(r20)	 # SI load
	l.sfnei	r20,0
	l.bf	.L13330	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
.L13329:
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,32(r1)	 # SI load
.L13280:
	l.lwz   	r3,12(r14)	 # SI load
.L13325:
	l.andi  	r3,r3,128
	l.sfeqi	r3,0
	l.bf	.L13326	# delay slot filled
	l.sfeqi	r24,0
	l.lbz   	r3,19(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L13326	# delay slot filled
	l.sfeqi	r24,0
	l.lwz   	r2,484(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L13319	# delay slot filled
	l.lwz   	r5,48(r1)	 # SI load
.L13273:
	l.sfeqi	r24,0
.L13326:
	l.bf	.L13327	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.j     	.L13327	# delay slot filled
	l.sw    	488(r24),r28	 # SI store
.L13310:
	l.lwz   	r8,8(r14)	 # SI load
	l.ori   	r11,r11,51712
	l.movhi 	r20,hi(-1048576)	 # move immediate M
	l.add   	r8,r8,r11
	l.j     	.L13264	# delay slot filled
	l.ori   	r20,r20,48576
.L13313:
	l.addi  	r4,r22,4
	l.lwz   	r5,28(r22)	 # SI load
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3MaterializeView.clone.163	# delay slot filled
	l.lwz   	r7,32(r1)	 # SI load
	l.j     	.L13320	# delay slot filled
	l.addi  	r8,r1,72
.L13312:
	l.lwz   	r3,68(r2)	 # SI load
	l.addi  	r4,r0,-1	 # move immediate I
	l.sw    	32(r1),r3	 # SI store
	l.j     	.L13269	# delay slot filled
	l.sw    	40(r1),r4	 # SI store
.L13311:
	l.j     	.L13264	# delay slot filled
	l.lwz   	r8,8(r14)	 # SI load
.L13300:
	l.sw    	68(r1),r26	 # SI store
	l.sw    	64(r1),r26	 # SI store
	l.sw    	60(r1),r26	 # SI store
	l.sw    	56(r1),r26	 # SI store
	l.j     	.L13275	# delay slot filled
	l.sw    	44(r1),r26	 # SI store
.L13314:
	l.lwz   	r4,72(r2)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r4,1
	l.ori   	r5,r8,0	 # move reg to reg
	l.sw    	48(r1),r4	 # SI store
	l.addi  	r4,r0,48	 # move immediate I
	l.lwz   	r11,48(r1)	 # SI load
	l.sw    	72(r2),r11	 # SI store
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.j     	.L13321	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
.L13318:
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,44(r1)	 # SI load
	l.j     	.L13322	# delay slot filled
	l.addi  	r4,r0,110	 # move immediate I
.L13317:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.lwz   	r5,32(r1)	 # SI load
	l.jal   	sqlite3OpenTableAndIndices	# delay slot filled
	l.addi  	r6,r0,10	 # move immediate I
	l.j     	.L13323	# delay slot filled
	l.sfeqi	r26,0
.L13316:
	l.addi  	r4,r0,42	 # move immediate I
	l.lwz   	r5,48(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.j     	.L13282
	l.nop			# nop delay slot
.L13290:
	l.lbz   	r8,19(r2)	 # zero_extendqisi2
	l.addi  	r8,r8,-1
	l.srli  	r8,r8,31
	l.addi  	r4,r22,4
	l.addi  	r5,r22,20
	l.lwz   	r6,32(r1)	 # SI load
	l.jal   	sqlite3GenerateRowDelete.clone.144	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.j     	.L13324	# delay slot filled
	l.sfeqi	r26,0
.L13285:
	l.addi  	r4,r0,50	 # move immediate I
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r6,28(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.j     	.L13287	# delay slot filled
	l.sw    	24(r1),r11	 # SI store
.L13315:
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfnei	r3,0
	l.bf	.L13279	# delay slot filled
	l.addi  	r11,r0,-2	 # move immediate I
	l.lwz   	r5,24(r22)	 # SI load
	l.lwz   	r8,4(r22)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,98	 # move immediate I
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r7,48(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r22,20(r22)	 # SI load
	l.sfeqi	r22,0
	l.bf	.L13280
	l.nop			# nop delay slot
.L13303:
	l.lwz   	r5,20(r22)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,98	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r22,32(r22)	 # SI load
	l.sfnei	r22,0
	l.bf	.L13303
	l.nop			# nop delay slot
	l.j     	.L13325	# delay slot filled
	l.lwz   	r3,12(r14)	 # SI load
.L13319:
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,90	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.movhi  	r6,hi(.LC345)
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC345)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.j     	.L13326	# delay slot filled
	l.sfeqi	r24,0
.LFE937:
	.size	sqlite3DeleteFrom, .-sqlite3DeleteFrom
	.section	.rodata.str1.1
.LC346:
	.string	"no such column: %s"
.LC347:
	.string	"_rowid_"
.LC348:
	.string	"rows updated"
	.section .text
	.align	4
.proc	sqlite3Update
	.type	sqlite3Update, @function
sqlite3Update:
.LFB1096:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4087:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4088:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI4089:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4090:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4091:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4092:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4093:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4094:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4095:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4096:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4097:
	l.addi  	r1,r1,-244
.LCFI4098:
	l.lwz   	r11,64(r3)	 # SI load
	l.sw    	196(r1),r2	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	24(r1),r3	 # SI store
	l.sw    	192(r1),r2	 # SI store
	l.sw    	36(r1),r4	 # SI store
	l.sw    	32(r1),r5	 # SI store
	l.sw    	40(r1),r6	 # SI store
	l.sw    	44(r1),r7	 # SI store
	l.sfne 	r11,r2
	l.bf	.L13425	# delay slot filled
	l.lwz   	r30,0(r3)	 # SI load
	l.lbz   	r2,30(r30)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L13462	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.j     	.L13424	# delay slot filled
	l.sw    	28(r1),r11	 # SI store
.L13425:
	l.addi  	r7,r0,0	 # move immediate I
	l.sw    	28(r1),r7	 # SI store
	l.ori   	r26,r7,0	 # move reg to reg
.L13424:
	l.ori   	r3,r30,0	 # move reg to reg
.L13484:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.lwz   	r4,36(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.lwz   	r4,32(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.addi	r1,r1,244
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L13462:
	l.jal   	sqlite3SrcListLookup
	l.nop			# nop delay slot
	l.sfeqi	r11,0
	l.bf	.L13427	# delay slot filled
	l.sw    	48(r1),r11	 # SI store
	l.lwz   	r13,72(r11)	 # SI load
	l.lwz   	r7,24(r1)	 # SI load
	l.sfeqi	r13,0
	l.bf	.L13428	# delay slot filled
	l.lwz   	r15,0(r7)	 # SI load
	l.lwz   	r14,4(r15)	 # SI load
	l.sflesi	r14,0
	l.bf	.L13333	# delay slot filled
	l.ori   	r28,r2,0	 # move reg to reg
	l.lwz   	r12,8(r15)	 # SI load
	l.lwz   	r16,20(r12)	 # SI load
	l.sfeq 	r13,r16
	l.bf	.L13333	# delay slot filled
	l.addi  	r2,r12,44
	l.j     	.L13505	# delay slot filled
	l.addi  	r28,r28,1
.L13335:
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeq 	r13,r3
	l.bf	.L13333	# delay slot filled
	l.addi  	r2,r2,24
	l.addi  	r28,r28,1
.L13505:
	l.sflts 	r28,r14
	l.bf	.L13335
	l.nop			# nop delay slot
.L13333:
	l.ori   	r3,r15,0	 # move reg to reg
	l.lwz   	r4,48(r1)	 # SI load
	l.addi  	r5,r0,106	 # move immediate I
	l.lwz   	r6,32(r1)	 # SI load
	l.jal   	sqlite3TriggersExist.clone.92	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sub   	r12,r0,r11
	l.lwz   	r4,48(r1)	 # SI load
	l.or    	r12,r11,r12
	l.lwz   	r2,28(r4)	 # SI load
	l.srli  	r5,r12,31
	l.lwz   	r3,24(r1)	 # SI load
	l.sw    	56(r1),r11	 # SI store
	l.jal   	sqlite3IsReadOnly	# delay slot filled
	l.sw    	64(r1),r2	 # SI store
	l.sfnei	r11,0
	l.bnf	.L13463	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	28(r1),r3	 # SI store
	l.j     	.L13424	# delay slot filled
	l.ori   	r26,r3,0	 # move reg to reg
.L13463:
	l.lwz   	r3,24(r1)	 # SI load
	l.jal   	sqlite3ViewGetColumnNames	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L13464	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sw    	28(r1),r14	 # SI store
	l.j     	.L13424	# delay slot filled
	l.ori   	r26,r14,0	 # move reg to reg
.L13427:
	l.lwz   	r2,48(r1)	 # SI load
	l.sw    	28(r1),r2	 # SI store
	l.j     	.L13424	# delay slot filled
	l.ori   	r26,r2,0	 # move reg to reg
.L13428:
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.j     	.L13333	# delay slot filled
	l.ori   	r28,r2,48576
.L13464:
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r2,12(r3)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.slli  	r4,r2,2
	l.sw    	28(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L13424	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r2,12(r4)	 # SI load
	l.sflesi	r2,0
	l.bf	.L13336	# delay slot filled
	l.ori   	r12,r16,0	 # move reg to reg
	l.ori   	r13,r11,0	 # move reg to reg
	l.addi  	r15,r0,-1	 # move immediate I
	l.ori   	r2,r4,0	 # move reg to reg
.L13337:
	l.sw    	0(r13),r15	 # SI store
	l.addi  	r12,r12,1
	l.lwz   	r3,12(r2)	 # SI load
	l.sfgts 	r3,r12
	l.bf	.L13337	# delay slot filled
	l.addi  	r13,r13,4
.L13336:
	l.lwz   	r5,56(r1)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L13465	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r3,68(r3)	 # SI load
	l.addi  	r4,r3,1
	l.addi  	r5,r3,2
	l.sw    	84(r1),r3	 # SI store
	l.sw    	96(r1),r4	 # SI store
	l.sw    	80(r1),r5	 # SI store
.L13339:
	l.lwz   	r7,80(r1)	 # SI load
	l.lwz   	r3,80(r1)	 # SI load
	l.lwz   	r2,36(r1)	 # SI load
	l.addi  	r7,r7,1
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r5,24(r1)	 # SI load
	l.sw    	28(r2),r3	 # SI store
	l.lwz   	r12,20(r4)	 # SI load
	l.sw    	88(r1),r7	 # SI store
	l.sfeqi	r12,0
	l.bf	.L13340	# delay slot filled
	l.sw    	68(r5),r7	 # SI store
	l.addi  	r13,r3,2
.L13341:
	l.lwz   	r12,32(r12)	 # SI load
	l.ori   	r15,r13,0	 # move reg to reg
	l.sfnei	r12,0
	l.bf	.L13341	# delay slot filled
	l.addi  	r13,r13,1
	l.lwz   	r7,24(r1)	 # SI load
	l.sw    	68(r7),r15	 # SI store
.L13340:
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r7,36(r1)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	148(r1),r4	 # SI store
	l.sw    	152(r1),r4	 # SI store
	l.sw    	156(r1),r4	 # SI store
	l.sw    	160(r1),r4	 # SI store
	l.sw    	164(r1),r4	 # SI store
	l.sw    	168(r1),r4	 # SI store
	l.sw    	172(r1),r4	 # SI store
	l.sw    	140(r1),r5	 # SI store
	l.sfles 	r2,r4
	l.bf	.L13434	# delay slot filled
	l.sw    	144(r1),r7	 # SI store
	l.add   	r2,r28,r28
	l.sw    	60(r1),r30	 # SI store
	l.add   	r2,r2,r28
	l.sw    	72(r1),r4	 # SI store
	l.slli  	r2,r2,3
	l.sw    	76(r1),r4	 # SI store
	l.ori   	r26,r4,0	 # move reg to reg
	l.sw    	68(r1),r2	 # SI store
	l.ori   	r30,r4,0	 # move reg to reg
	l.lwz   	r24,48(r1)	 # SI load
	l.sw    	92(r1),r28	 # SI store
	l.ori   	r20,r3,0	 # move reg to reg
.L13352:
	l.lwz   	r2,12(r20)	 # SI load
	l.addi  	r3,r1,140
	l.add   	r2,r2,r26
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L13436
	l.nop			# nop delay slot
	l.lwz   	r18,12(r24)	 # SI load
	l.sflesi	r18,0
	l.bf	.L13343
	l.nop			# nop delay slot
	l.lwz   	r2,12(r20)	 # SI load
	l.lwz   	r14,16(r24)	 # SI load
	l.add   	r28,r2,r26
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13348	# delay slot filled
	l.lwz   	r22,4(r28)	 # SI load
.L13344:
	l.sflts 	r2,r18
	l.bnf	.L13346
	l.nop			# nop delay slot
.L13348:
	l.lwz   	r16,0(r14)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r14,r14,20
	l.sfnei	r11,0
	l.bf	.L13344	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.lwz   	r4,8(r24)	 # SI load
	l.sfne 	r4,r2
	l.bnf	.L13466	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
.L13345:
	l.slli  	r14,r2,2
	l.lwz   	r5,28(r1)	 # SI load
	l.add   	r4,r5,r14
	l.sw    	0(r4),r30	 # SI store
	l.lwz   	r4,12(r24)	 # SI load
	l.sfles 	r4,r2
	l.bf	.L13346
	l.nop			# nop delay slot
.L13347:
	l.lwz   	r3,60(r1)	 # SI load
	l.lwz   	r4,68(r1)	 # SI load
	l.lwz   	r2,8(r3)	 # SI load
	l.lwz   	r5,4(r24)	 # SI load
	l.add   	r2,r2,r4
	l.lwz   	r3,24(r1)	 # SI load
	l.addi  	r4,r0,23	 # move immediate I
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.lwz   	r7,0(r2)	 # SI load
	l.sfeqi	r11,1
	l.bf	.L13436	# delay slot filled
	l.sfnei	r11,2
	l.bnf	.L13467	# delay slot filled
	l.lwz   	r5,28(r1)	 # SI load
.L13351:
	l.addi  	r30,r30,1
	l.lwz   	r2,0(r20)	 # SI load
	l.sfgts 	r2,r30
	l.bf	.L13352	# delay slot filled
	l.addi  	r26,r26,16
	l.lwz   	r30,60(r1)	 # SI load
	l.lwz   	r28,92(r1)	 # SI load
.L13342:
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r12,20(r3)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L13437	# delay slot filled
	l.addi  	r13,r0,0	 # move immediate I
.L13354:
	l.lwz   	r12,32(r12)	 # SI load
	l.sfnei	r12,0
	l.bf	.L13354	# delay slot filled
	l.addi  	r13,r13,1
	l.slli  	r4,r13,2
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13424	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r17,20(r4)	 # SI load
	l.sfeqi	r17,0
	l.bf	.L13353	# delay slot filled
	l.lwz   	r8,76(r1)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r7,24(r1)	 # SI load
.L13361:
	l.sfnei	r8,0
	l.bf	.L13357
	l.nop			# nop delay slot
	l.lwz   	r5,4(r17)	 # SI load
	l.sflesi	r5,0
	l.bf	.L13356	# delay slot filled
	l.ori   	r2,r8,0	 # move reg to reg
	l.lwz   	r3,8(r17)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.slli  	r2,r2,2
	l.add   	r2,r6,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.sfgesi	r2,0
	l.bf	.L13357
	l.nop			# nop delay slot
	l.addi  	r3,r3,4
	l.j     	.L13359	# delay slot filled
	l.ori   	r2,r8,0	 # move reg to reg
.L13360:
	l.lwz   	r4,0(r3)	 # SI load
	l.slli  	r4,r4,2
	l.add   	r4,r6,r4
	l.lwz   	r4,0(r4)	 # SI load
	l.sfltsi	r4,0
	l.bnf	.L13357	# delay slot filled
	l.addi  	r3,r3,4
.L13359:
	l.addi  	r2,r2,1
	l.sfgts 	r5,r2
	l.bf	.L13360
	l.nop			# nop delay slot
	l.addi  	r2,r0,0	 # move immediate I
.L13356:
	l.sw    	0(r18),r2	 # SI store
	l.lwz   	r17,32(r17)	 # SI load
	l.sfnei	r17,0
	l.bf	.L13361	# delay slot filled
	l.addi  	r18,r18,4
.L13353:
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r7,48(r1)	 # SI load
	l.lwz   	r2,72(r5)	 # SI load
	l.lwz   	r12,12(r7)	 # SI load
	l.addi  	r3,r2,1
	l.add   	r12,r2,r12
	l.lwz   	r4,76(r1)	 # SI load
	l.addi  	r13,r12,1
	l.sw    	60(r1),r3	 # SI store
	l.sw    	92(r1),r3	 # SI store
	l.sfeqi	r4,0
	l.bf	.L13362	# delay slot filled
	l.sw    	72(r5),r13	 # SI store
	l.addi  	r12,r12,2
	l.addi  	r2,r2,2
	l.sw    	72(r5),r12	 # SI store
	l.sw    	92(r1),r2	 # SI store
.L13362:
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r7,92(r1)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.addi  	r7,r7,1
	l.addi  	r4,r5,12
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.sw    	132(r1),r7	 # SI store
	l.sfeqi	r11,0
	l.bf	.L13424	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.lbz   	r2,19(r3)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L13494	# delay slot filled
	l.ori   	r5,r28,0	 # move reg to reg
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sb    	125(r11),r4	    # movqi
	l.lwz   	r3,24(r1)	 # SI load
.L13494:
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r5,48(r1)	 # SI load
	l.lbz   	r2,34(r5)	 # zero_extendqisi2
	l.andi  	r2,r2,16
	l.sfeqi	r2,0
	l.bnf	.L13468	# delay slot filled
	l.lwz   	r7,64(r1)	 # SI load
	l.sub   	r2,r0,r7
	l.or    	r2,r7,r2
	l.srli  	r2,r2,31
	l.sw    	108(r1),r2	 # SI store
	l.sfeqi	r2,0
	l.bf	.L13372	# delay slot filled
	l.ori   	r18,r2,0	 # move reg to reg
	l.lwz   	r2,48(r1)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r12,4(r2)	 # SI load
	l.lwz   	r3,488(r3)	 # SI load
	l.lwz   	r18,24(r1)	 # SI load
	l.sw    	52(r1),r3	 # SI store
	l.sw    	488(r18),r12	 # SI store
.L13372:
	l.lwz   	r4,56(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L13441	# delay slot filled
	l.lwz   	r2,48(r1)	 # SI load
	l.addi  	r4,r0,117	 # move immediate I
	l.lwz   	r7,12(r2)	 # SI load
	l.lwz   	r5,96(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r20,r1,196
	l.lwz   	r7,12(r2)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,117	 # move immediate I
	l.lwz   	r5,84(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r16,r1,192
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeMakeLabel	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r2,12(r22)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.sw    	124(r1),r2	 # SI store
	l.lwz   	r2,84(r1)	 # SI load
	l.lwz   	r4,56(r1)	 # SI load
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r2,96(r1)	 # SI load
	l.addi  	r5,r0,106	 # move immediate I
	l.sw    	4(r1),r2	 # SI store
	l.lwz   	r6,32(r1)	 # SI load
	l.lwz   	r2,44(r1)	 # SI load
	l.addi  	r7,r0,1	 # move immediate I
	l.lwz   	r8,48(r1)	 # SI load
	l.sw    	68(r1),r11	 # SI store
	l.sw    	8(r1),r2	 # SI store
	l.sw    	12(r1),r11	 # SI store
	l.sw    	16(r1),r20	 # SI store
	l.jal   	sqlite3CodeRowTrigger	# delay slot filled
	l.sw    	20(r1),r16	 # SI store
	l.sfnei	r11,0
	l.bnf	.L13469	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
.L13374:
	l.sfeqi	r18,0
.L13487:
	l.bf	.L13424	# delay slot filled
	l.lwz   	r5,52(r1)	 # SI load
	l.j     	.L13424	# delay slot filled
	l.sw    	488(r18),r5	 # SI store
.L13343:
	l.lwz   	r4,12(r20)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.add   	r28,r4,r26
	l.lwz   	r22,4(r28)	 # SI load
.L13346:
	l.jal   	sqlite3IsRowid	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13350	# delay slot filled
	l.slli  	r14,r2,2
	l.slli  	r2,r2,4
	l.lwz   	r4,16(r24)	 # SI load
	l.lwz   	r28,0(r28)	 # SI load
	l.add   	r2,r14,r2
	l.addi  	r7,r0,1	 # move immediate I
	l.add   	r2,r4,r2
	l.sw    	72(r1),r28	 # SI store
	l.sw    	76(r1),r7	 # SI store
	l.j     	.L13347	# delay slot filled
	l.lwz   	r16,0(r2)	 # SI load
.L13467:
	l.addi  	r7,r0,-1	 # move immediate I
	l.add   	r2,r5,r14
	l.j     	.L13351	# delay slot filled
	l.sw    	0(r2),r7	 # SI store
.L13357:
	l.lwz   	r2,72(r7)	 # SI load
	l.addi  	r2,r2,1
	l.j     	.L13356	# delay slot filled
	l.sw    	72(r7),r2	 # SI store
.L13466:
	l.lwz   	r3,0(r28)	 # SI load
	l.sw    	72(r1),r3	 # SI store
	l.j     	.L13345	# delay slot filled
	l.sw    	76(r1),r4	 # SI store
.L13436:
	l.lwz   	r30,60(r1)	 # SI load
	l.j     	.L13424	# delay slot filled
	l.addi  	r26,r0,0	 # move immediate I
.L13465:
	l.lwz   	r2,24(r1)	 # SI load
	l.addi  	r7,r0,-1	 # move immediate I
	l.lwz   	r2,68(r2)	 # SI load
	l.sw    	96(r1),r7	 # SI store
	l.sw    	80(r1),r2	 # SI store
	l.j     	.L13339	# delay slot filled
	l.sw    	84(r1),r7	 # SI store
.L13350:
	l.movhi  	r4,hi(.LC346)
	l.lwz   	r3,24(r1)	 # SI load
	l.ori   	r4,r4,lo(.LC346)
	l.lwz   	r30,60(r1)	 # SI load
	l.sw    	0(r1),r22	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.j     	.L13484	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
.L13468:
	l.movhi  	r4,hi(.LC347)
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r7,56(r5)	 # SI load
	l.ori   	r4,r4,lo(.LC347)
	l.lwz   	r16,12(r3)	 # SI load
	l.lwz   	r24,0(r3)	 # SI load
	l.jal   	sqlite3CreateIdExpr	# delay slot filled
	l.sw    	52(r1),r7	 # SI store
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r2,24(r1)	 # SI load
	l.lwz   	r7,32(r1)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r4,0	 # move reg to reg
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r28,r7,12
	l.lwz   	r2,72(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13365	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r4,24(r1)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r3,0(r4)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r18,r11,0	 # move reg to reg
.L13365:
	l.lwz   	r5,48(r1)	 # SI load
	l.lwz   	r2,12(r5)	 # SI load
	l.sflesi	r2,0
	l.bf	.L13366	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.addi  	r22,r0,0	 # move immediate I
	l.sw    	44(r1),r16	 # SI store
	l.lwz   	r2,28(r1)	 # SI load
	l.ori   	r20,r22,0	 # move reg to reg
	l.j     	.L13369	# delay slot filled
	l.lwz   	r16,24(r1)	 # SI load
.L13471:
	l.lwz   	r4,0(r28)	 # SI load
	l.add   	r6,r4,r6
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.lwz   	r4,0(r6)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
.L13368:
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r3,0(r16)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r20,r20,1
	l.lwz   	r4,12(r14)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r2,r2,4
	l.sflts 	r20,r4
	l.bnf	.L13470	# delay slot filled
	l.addi  	r22,r22,20
.L13369:
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.sflts 	r4,r5
	l.bnf	.L13471	# delay slot filled
	l.slli  	r6,r4,4
	l.lwz   	r4,16(r14)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.add   	r4,r4,r22
	l.jal   	sqlite3CreateIdExpr	# delay slot filled
	l.lwz   	r4,0(r4)	 # SI load
	l.j     	.L13368	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
.L13470:
	l.lwz   	r16,44(r1)	 # SI load
.L13366:
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r8,r7,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r5,36(r1)	 # SI load
	l.lwz   	r6,40(r1)	 # SI load
	l.sw    	0(r1),r7	 # SI store
	l.sw    	4(r1),r7	 # SI store
	l.sw    	8(r1),r7	 # SI store
	l.jal   	sqlite3SelectNew.clone.150	# delay slot filled
	l.sw    	12(r1),r7	 # SI store
	l.lwz   	r7,72(r1)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.sub   	r2,r0,r7
	l.lwz   	r4,48(r1)	 # SI load
	l.or    	r20,r7,r2
	l.lwz   	r18,68(r3)	 # SI load
	l.lwz   	r6,12(r4)	 # SI load
	l.srli  	r20,r20,31
	l.lwz   	r7,24(r1)	 # SI load
	l.addi  	r2,r18,1
	l.addi  	r6,r6,1
	l.sw    	68(r7),r2	 # SI store
	l.add   	r6,r6,r20
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r28,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r2,r0,8	 # movqi: move immediate
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.lwz   	r3,24(r1)	 # SI load
	l.ori   	r4,r28,0	 # move reg to reg
	l.addi  	r5,r1,176
	l.sb    	176(r1),r2	    # movqi
	l.addi  	r2,r0,0	 # move immediate I
	l.sb    	177(r1),r7	    # movqi
	l.sw    	184(r1),r2	 # SI store
	l.sw    	188(r1),r2	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	180(r1),r18	 # SI store
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r22,72(r3)	 # SI load
	l.lwz   	r2,12(r4)	 # SI load
	l.addi  	r14,r22,1
	l.addi  	r2,r2,1
	l.lwz   	r7,24(r1)	 # SI load
	l.add   	r2,r2,r14
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	72(r7),r2	 # SI store
	l.addi  	r4,r0,122	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r22,r22,2
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r2,12(r16)	 # SI load
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r7,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.sw    	44(r1),r2	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r2,12(r3)	 # SI load
	l.sflesi	r2,0
	l.bf	.L13370	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	36(r1),r14	 # SI store
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r2,r2,1
.L13495:
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.add   	r6,r2,r20
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.add   	r7,r22,r2
	l.lwz   	r4,12(r14)	 # SI load
	l.sflts 	r2,r4
	l.bf	.L13495	# delay slot filled
	l.addi  	r2,r2,1
	l.lwz   	r14,36(r1)	 # SI load
.L13370:
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,48(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r2,r0,-10	 # move immediate I
	l.jal   	sqlite3VtabMakeWritable	# delay slot filled
	l.sw    	40(r1),r5	 # SI store
	l.lwz   	r7,48(r1)	 # SI load
	l.lwz   	r8,52(r1)	 # SI load
	l.lwz   	r6,12(r7)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.addi  	r4,r0,125	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r6,r6,2
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r6,44(r1)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r2,40(r1)	 # SI load
	l.addi  	r4,r0,106	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	36(r1),r2	 # SI store
	l.lwz   	r5,44(r1)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.addi  	r4,r5,-1
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,33	 # move immediate I
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.j     	.L13484	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
.L13441:
	l.lwz   	r3,56(r1)	 # SI load
	l.sw    	128(r1),r3	 # SI store
	l.sw    	124(r1),r3	 # SI store
	l.sw    	120(r1),r3	 # SI store
	l.sw    	116(r1),r3	 # SI store
	l.sw    	68(r1),r3	 # SI store
	l.lwz   	r4,108(r1)	 # SI load
.L13485:
	l.sfeqi	r4,0
	l.bnf	.L13472	# delay slot filled
	l.lwz   	r5,48(r1)	 # SI load
	l.addi  	r3,r1,140
.L13488:
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.lwz   	r4,40(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L13374	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,60(r1)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,36(r1)	 # SI load
	l.lwz   	r5,40(r1)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3WhereBegin	# delay slot filled
	l.addi  	r7,r0,4	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L13374	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lbz   	r7,6(r11)	 # zero_extendqisi2
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,40	 # move immediate I
	l.lwz   	r5,80(r1)	 # SI load
	l.lwz   	r6,60(r1)	 # SI load
	l.sw    	104(r1),r7	 # SI store
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	100(r1),r16	 # SI store
	l.lwz   	r2,104(r1)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L13473	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
.L13376:
	l.jal   	sqlite3WhereEnd	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r13,12(r30)	 # SI load
	l.andi  	r13,r13,128
	l.sfeqi	r13,0
	l.bf	.L13377	# delay slot filled
	l.sw    	64(r1),r13	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r7,24(r1)	 # SI load
	l.sw    	64(r1),r2	 # SI store
	l.lwz   	r15,484(r7)	 # SI load
	l.sfne 	r15,r2
	l.bf	.L13496	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r13,72(r7)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r13,r13,1
	l.addi  	r4,r0,48	 # move immediate I
	l.sw    	72(r7),r13	 # SI store
	l.ori   	r5,r15,0	 # move reg to reg
	l.ori   	r6,r13,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	64(r1),r13	 # SI store
.L13377:
	l.addi  	r3,r0,0	 # move immediate I
.L13496:
	l.lwz   	r4,108(r1)	 # SI load
	l.sfne 	r4,r3
	l.bf	.L13378	# delay slot filled
	l.sw    	112(r1),r3	 # SI store
	l.lwz   	r5,104(r1)	 # SI load
	l.sfne 	r5,r3
	l.bf	.L13497	# delay slot filled
	l.lwz   	r7,44(r1)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,80(r1)	 # SI load
	l.ori   	r5,r28,0	 # move reg to reg
	l.lwz   	r6,48(r1)	 # SI load
	l.jal   	sqlite3OpenTable	# delay slot filled
	l.addi  	r7,r0,10	 # move immediate I
	l.lwz   	r7,44(r1)	 # SI load
.L13497:
	l.sfeqi	r7,5
	l.bf	.L13446	# delay slot filled
	l.lwz   	r2,48(r1)	 # SI load
	l.lwz   	r3,20(r2)	 # SI load
	l.j     	.L13381	# delay slot filled
	l.ori   	r15,r3,0	 # move reg to reg
.L13382:
	l.lbz   	r2,24(r15)	 # zero_extendqisi2
	l.sfeqi	r2,5
	l.bf	.L13447	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.lwz   	r15,32(r15)	 # SI load
.L13381:
	l.sfnei	r15,0
	l.bf	.L13382
	l.nop			# nop delay slot
	l.j     	.L13380	# delay slot filled
	l.sw    	112(r1),r15	 # SI store
.L13469:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,96	 # move immediate I
	l.lwz   	r2,12(r22)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.sw    	116(r1),r2	 # SI store
	l.lwz   	r2,84(r1)	 # SI load
	l.lwz   	r4,56(r1)	 # SI load
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r2,96(r1)	 # SI load
	l.addi  	r5,r0,106	 # move immediate I
	l.sw    	4(r1),r2	 # SI store
	l.lwz   	r2,44(r1)	 # SI load
	l.lwz   	r6,32(r1)	 # SI load
	l.sw    	8(r1),r2	 # SI store
	l.addi  	r7,r0,2	 # move immediate I
	l.lwz   	r2,68(r1)	 # SI load
	l.lwz   	r8,48(r1)	 # SI load
	l.sw    	128(r1),r11	 # SI store
	l.sw    	12(r1),r2	 # SI store
	l.sw    	16(r1),r20	 # SI store
	l.jal   	sqlite3CodeRowTrigger	# delay slot filled
	l.sw    	20(r1),r16	 # SI store
	l.sfnei	r11,0
	l.bf	.L13487	# delay slot filled
	l.sfeqi	r18,0
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,96	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.sw    	120(r1),r11	 # SI store
	l.j     	.L13485	# delay slot filled
	l.lwz   	r4,108(r1)	 # SI load
.L13437:
	l.j     	.L13353	# delay slot filled
	l.ori   	r26,r12,0	 # move reg to reg
.L13434:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	72(r1),r2	 # SI store
	l.j     	.L13342	# delay slot filled
	l.sw    	76(r1),r2	 # SI store
.L13378:
	l.lwz   	r2,56(r1)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13498	# delay slot filled
	l.lwz   	r5,104(r1)	 # SI load
	l.lwz   	r16,32(r22)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L13498	# delay slot filled
	l.lwz   	r3,12(r22)	 # SI load
	l.lwz   	r4,68(r1)	 # SI load
	l.xori  	r12,r4,0xffff
	l.slli  	r12,r12,2
	l.add   	r12,r16,r12
	l.sw    	0(r12),r3	 # SI store
	l.lwz   	r5,104(r1)	 # SI load
.L13498:
	l.sfeqi	r5,0
	l.bf	.L13388	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r5,60(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,72	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.sw    	68(r1),r11	 # SI store
.L13389:
	l.lwz   	r7,56(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L13390	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,46	 # move immediate I
	l.lwz   	r5,80(r1)	 # SI load
	l.lwz   	r6,68(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r7,60(r1)	 # SI load
	l.lwz   	r2,24(r1)	 # SI load
	l.lbz   	r12,21(r2)	 # zero_extendqisi2
	l.sfnei	r12,0
	l.bf	.L13391	# delay slot filled
	l.addi  	r12,r12,-1
	l.lwz   	r12,72(r2)	 # SI load
	l.addi  	r28,r12,1
	l.sw    	72(r2),r28	 # SI store
.L13459:
	l.lwz   	r4,24(r1)	 # SI load
	l.lwz   	r12,72(r4)	 # SI load
	l.addi  	r14,r12,1
	l.sw    	72(r4),r14	 # SI store
.L13394:
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,40	 # move immediate I
	l.lwz   	r5,80(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
	l.lwz   	r15,196(r1)	 # SI load
	l.sfnei	r15,0
	l.bf	.L13395	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.ori   	r5,r15,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r7,r28,0	 # move reg to reg
.L13489:
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,110	 # move immediate I
	l.lwz   	r5,96(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.lwz   	r7,76(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L13397	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,72(r1)	 # SI load
	l.ori   	r5,r28,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeAndCache	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,38	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r5,r28,0	 # move reg to reg
	l.lwz   	r2,48(r1)	 # SI load
.L13490:
	l.lwz   	r5,28(r1)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,12(r2)	 # SI load
	l.sw    	104(r1),r5	 # SI store
	l.jal   	sqlite3GetTempRange	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
	l.sw    	136(r1),r18	 # SI store
	l.sw    	100(r1),r11	 # SI store
	l.ori   	r18,r14,0	 # move reg to reg
	l.ori   	r24,r11,0	 # move reg to reg
	l.j     	.L13399	# delay slot filled
	l.lwz   	r14,48(r1)	 # SI load
.L13476:
	l.lwz   	r4,192(r1)	 # SI load
	l.sfnei	r4,-1
.L13499:
	l.bnf	.L13403	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r24,0	 # move reg to reg
	l.lwz   	r7,104(r1)	 # SI load
.L13486:
	l.addi  	r20,r20,1
	l.addi  	r7,r7,4
	l.addi  	r24,r24,1
	l.sw    	104(r1),r7	 # SI store
.L13399:
	l.lwz   	r16,12(r14)	 # SI load
	l.sflts 	r20,r16
	l.bnf	.L13474	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r2,8(r14)	 # SI load
	l.sfne 	r2,r20
	l.bnf	.L13475	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
	l.sfgtsi	r20,31
	l.bf	.L13476	# delay slot filled
	l.lwz   	r8,0(r2)	 # SI load
	l.addi  	r3,r0,1	 # move immediate I
	l.lwz   	r4,192(r1)	 # SI load
	l.sll   	r2,r3,r20
	l.and   	r2,r2,r4
	l.sfnei	r2,0
	l.bnf	.L13499	# delay slot filled
	l.sfnei	r4,-1
.L13403:
	l.sfgesi	r8,0
	l.bnf	.L13477	# delay slot filled
	l.lwz   	r5,32(r1)	 # SI load
	l.slli  	r2,r8,4
	l.lwz   	r4,12(r5)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.add   	r2,r4,r2
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	sqlite3ExprCodeAndCache	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.j     	.L13486	# delay slot filled
	l.lwz   	r7,104(r1)	 # SI load
.L13474:
	l.ori   	r14,r18,0	 # move reg to reg
	l.addi  	r4,r0,79	 # move immediate I
	l.lwz   	r5,100(r1)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r18,136(r1)	 # SI load
	l.lwz   	r2,108(r1)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L13478	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r2,48(r1)	 # SI load
.L13491:
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r16,12(r2)	 # SI load
	l.lwz   	r12,56(r3)	 # SI load
	l.sfles 	r16,r12
	l.bf	.L13500	# delay slot filled
	l.lwz   	r5,84(r1)	 # SI load
	l.lwz   	r4,100(r1)	 # SI load
	l.sw    	56(r3),r16	 # SI store
	l.sw    	60(r3),r4	 # SI store
	l.lwz   	r5,84(r1)	 # SI load
.L13500:
	l.ori   	r6,r14,0	 # move reg to reg
	l.ori   	r7,r28,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r4,r0,110	 # move immediate I
	l.lwz   	r3,24(r1)	 # SI load
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.lwz   	r3,24(r1)	 # SI load
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,124(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,128(r1)	 # SI load
.L13390:
	l.lwz   	r5,108(r1)	 # SI load
	l.sfnei	r5,0
	l.bnf	.L13479	# delay slot filled
	l.lwz   	r7,60(r1)	 # SI load
	l.lwz   	r2,12(r30)	 # SI load
.L13493:
	l.andi  	r2,r2,128
	l.sfeqi	r2,0
	l.bf	.L13501	# delay slot filled
	l.lwz   	r4,56(r1)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r2,484(r3)	 # SI load
	l.sfnei	r2,0
	l.bf	.L13502	# delay slot filled
	l.sfeqi	r4,0
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,42	 # move immediate I
	l.lwz   	r5,64(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r4,56(r1)	 # SI load
.L13501:
	l.sfeqi	r4,0
.L13502:
	l.bf	.L13418	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,116(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,120(r1)	 # SI load
.L13418:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r6,68(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r16,r26,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,68(r1)	 # SI load
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r14,88(r1)	 # SI load
	l.lwz   	r5,48(r1)	 # SI load
	l.lwz   	r2,20(r5)	 # SI load
.L13419:
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r14,r14,1
	l.sfne 	r2,r6
	l.bnf	.L13480	# delay slot filled
	l.addi  	r4,r0,33	 # move immediate I
	l.lwz   	r7,112(r1)	 # SI load
	l.sfnei	r7,0
	l.bf	.L13420
	l.nop			# nop delay slot
	l.lwz   	r7,0(r16)	 # SI load
	l.sflesi	r7,0
	l.bf	.L13421
	l.nop			# nop delay slot
.L13420:
	l.jal   	sqlite3VdbeAddOp2
	l.nop			# nop delay slot
.L13421:
	l.lwz   	r2,32(r2)	 # SI load
	l.j     	.L13419	# delay slot filled
	l.addi  	r16,r16,4
.L13480:
	l.lwz   	r5,80(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r3,56(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13423	# delay slot filled
	l.addi  	r4,r0,33	 # move immediate I
	l.lwz   	r5,84(r1)	 # SI load
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.lwz   	r5,96(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L13423:
	l.lwz   	r2,12(r30)	 # SI load
	l.andi  	r2,r2,128
	l.sfeqi	r2,0
	l.bf	.L13487	# delay slot filled
	l.sfeqi	r18,0
	l.lwz   	r4,24(r1)	 # SI load
	l.lwz   	r2,484(r4)	 # SI load
	l.sfnei	r2,0
	l.bf	.L13487	# delay slot filled
	l.sfeqi	r18,0
	l.lbz   	r2,19(r4)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L13374	# delay slot filled
	l.lwz   	r5,64(r1)	 # SI load
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,90	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.movhi  	r6,hi(.LC348)
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC348)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.j     	.L13487	# delay slot filled
	l.sfeqi	r18,0
.L13475:
	l.lwz   	r7,100(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.add   	r6,r7,r20
	l.j     	.L13486	# delay slot filled
	l.lwz   	r7,104(r1)	 # SI load
.L13477:
	l.lwz   	r5,80(r1)	 # SI load
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r24,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,16(r14)	 # SI load
	l.lwz   	r5,28(r14)	 # SI load
	l.jal   	sqlite3ColumnDefault.clone.135	# delay slot filled
	l.ori   	r6,r20,0	 # move reg to reg
	l.j     	.L13486	# delay slot filled
	l.lwz   	r7,104(r1)	 # SI load
.L13472:
	l.lwz   	r3,24(r1)	 # SI load
	l.addi  	r4,r5,4
	l.lwz   	r6,40(r1)	 # SI load
	l.lwz   	r5,28(r5)	 # SI load
	l.jal   	sqlite3MaterializeView.clone.163	# delay slot filled
	l.lwz   	r7,80(r1)	 # SI load
	l.j     	.L13488	# delay slot filled
	l.addi  	r3,r1,140
.L13395:
	l.addi  	r4,r0,44	 # move immediate I
	l.lwz   	r5,80(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.j     	.L13489	# delay slot filled
	l.ori   	r7,r28,0	 # move reg to reg
.L13391:
	l.lwz   	r3,24(r1)	 # SI load
	l.andi  	r15,r12,0xff	 # zero_extendqisi2
	l.addi  	r13,r15,6
	l.sb    	21(r3),r15	    # movqi
	l.slli  	r13,r13,2
	l.sfnei	r15,0
	l.add   	r13,r3,r13
	l.bnf	.L13459	# delay slot filled
	l.lwz   	r28,0(r13)	 # SI load
	l.addi  	r12,r15,-1
	l.lwz   	r5,24(r1)	 # SI load
	l.andi  	r12,r12,0xff	 # zero_extendqisi2
	l.addi  	r13,r12,6
	l.sb    	21(r5),r12	    # movqi
	l.slli  	r12,r13,2
	l.add   	r12,r5,r12
	l.j     	.L13394	# delay slot filled
	l.lwz   	r14,0(r12)	 # SI load
.L13397:
	l.addi  	r4,r0,40	 # move immediate I
	l.lwz   	r5,80(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r28,0	 # move reg to reg
	l.j     	.L13490	# delay slot filled
	l.lwz   	r2,48(r1)	 # SI load
.L13447:
	l.sw    	112(r1),r5	 # SI store
.L13380:
	l.ori   	r16,r3,0	 # move reg to reg
	l.ori   	r20,r26,0	 # move reg to reg
	l.lwz   	r24,88(r1)	 # SI load
	l.addi  	r14,r0,-16	 # move immediate I
.L13383:
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r16,0
	l.bnf	.L13378	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r7,112(r1)	 # SI load
	l.sfnei	r7,0
	l.bf	.L13384
	l.nop			# nop delay slot
	l.lwz   	r2,0(r20)	 # SI load
	l.sflesi	r2,0
	l.bf	.L13385
	l.nop			# nop delay slot
.L13384:
	l.jal   	sqlite3IndexKeyinfo
	l.nop			# nop delay slot
	l.lwz   	r6,20(r16)	 # SI load
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,10	 # move immediate I
	l.ori   	r7,r28,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r14	 # SI store
.L13385:
	l.lwz   	r16,32(r16)	 # SI load
	l.addi  	r20,r20,4
	l.j     	.L13383	# delay slot filled
	l.addi  	r24,r24,1
.L13446:
	l.addi  	r3,r0,1	 # move immediate I
	l.lwz   	r4,48(r1)	 # SI load
	l.sw    	112(r1),r3	 # SI store
	l.j     	.L13380	# delay slot filled
	l.lwz   	r3,20(r4)	 # SI load
.L13478:
	l.jal   	sqlite3TableAffinityStr	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r7,48(r1)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,100(r1)	 # SI load
	l.jal   	sqlite3ExprCacheAffinityChange	# delay slot filled
	l.lwz   	r5,12(r7)	 # SI load
	l.j     	.L13491	# delay slot filled
	l.lwz   	r2,48(r1)	 # SI load
.L13388:
	l.addi  	r4,r0,50	 # move immediate I
	l.lwz   	r5,100(r1)	 # SI load
	l.lwz   	r6,104(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r7,60(r1)	 # SI load
	l.j     	.L13389	# delay slot filled
	l.sw    	68(r1),r11	 # SI store
.L13479:
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,46	 # move immediate I
	l.lwz   	r5,80(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r6,68(r1)	 # SI load
	l.lwz   	r7,76(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L13503	# delay slot filled
	l.lwz   	r24,132(r1)	 # SI load
	l.lwz   	r4,72(r1)	 # SI load
	l.lwz   	r5,92(r1)	 # SI load
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,38	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.lwz   	r5,92(r1)	 # SI load
	l.lwz   	r24,132(r1)	 # SI load
.L13503:
	l.lwz   	r20,28(r1)	 # SI load
	l.addi  	r16,r0,0	 # move immediate I
	l.lwz   	r14,48(r1)	 # SI load
	l.lwz   	r28,32(r1)	 # SI load
.L13411:
	l.lwz   	r2,12(r14)	 # SI load
	l.ori   	r5,r24,0	 # move reg to reg
	l.sflts 	r16,r2
	l.bnf	.L13481	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r2,8(r14)	 # SI load
	l.sfne 	r2,r16
	l.bnf	.L13482	# delay slot filled
	l.lwz   	r2,132(r1)	 # SI load
	l.lwz   	r4,0(r20)	 # SI load
	l.sfgesi	r4,0
	l.bnf	.L13483	# delay slot filled
	l.slli  	r8,r4,4
	l.lwz   	r2,12(r28)	 # SI load
	l.add   	r2,r2,r8
	l.jal   	sqlite3ExprCode	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r16,r16,1
.L13492:
	l.addi  	r24,r24,1
	l.j     	.L13411	# delay slot filled
	l.addi  	r20,r20,4
.L13483:
	l.lwz   	r5,80(r1)	 # SI load
	l.ori   	r6,r16,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r24,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r4,16(r14)	 # SI load
	l.lwz   	r5,28(r14)	 # SI load
	l.jal   	sqlite3ColumnDefault.clone.135	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.j     	.L13492	# delay slot filled
	l.addi  	r16,r16,1
.L13482:
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.add   	r6,r2,r16
	l.j     	.L13492	# delay slot filled
	l.addi  	r16,r16,1
.L13481:
	l.addi  	r2,r0,1	 # move immediate I
	l.lwz   	r8,76(r1)	 # SI load
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r2,44(r1)	 # SI load
	l.lwz   	r4,48(r1)	 # SI load
	l.sw    	4(r1),r2	 # SI store
	l.lwz   	r2,68(r1)	 # SI load
	l.lwz   	r5,80(r1)	 # SI load
	l.lwz   	r6,92(r1)	 # SI load
	l.ori   	r7,r26,0	 # move reg to reg
	l.sw    	8(r1),r2	 # SI store
	l.addi  	r2,r0,0	 # move immediate I
	l.jal   	sqlite3GenerateConstraintChecks	# delay slot filled
	l.sw    	12(r1),r2	 # SI store
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r7,60(r1)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,46	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r5,80(r1)	 # SI load
	l.lwz   	r5,48(r1)	 # SI load
	l.lwz   	r3,24(r1)	 # SI load
	l.lwz   	r4,20(r5)	 # SI load
	l.ori   	r6,r26,0	 # move reg to reg
	l.lwz   	r5,80(r1)	 # SI load
	l.jal   	sqlite3GenerateRowIndexDelete.clone.143	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r7,76(r1)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L13504	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,91	 # move immediate I
	l.lwz   	r5,80(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
.L13504:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
	l.lwz   	r3,24(r1)	 # SI load
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r4,48(r1)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.lwz   	r5,80(r1)	 # SI load
	l.lwz   	r6,92(r1)	 # SI load
	l.ori   	r7,r26,0	 # move reg to reg
	l.addi  	r8,r0,1	 # move immediate I
	l.sw    	4(r1),r2	 # SI store
	l.jal   	sqlite3CompleteInsertion	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
	l.j     	.L13493	# delay slot filled
	l.lwz   	r2,12(r30)	 # SI load
.L13473:
	l.lwz   	r5,24(r1)	 # SI load
	l.lwz   	r13,72(r3)	 # SI load
	l.addi  	r4,r0,51	 # move immediate I
	l.addi  	r13,r13,1
	l.ori   	r3,r22,0	 # move reg to reg
	l.sw    	72(r5),r13	 # SI store
	l.lwz   	r6,60(r1)	 # SI load
	l.ori   	r5,r13,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	100(r1),r13	 # SI store
	l.j     	.L13376
	l.nop			# nop delay slot
.LFE1096:
	.size	sqlite3Update, .-sqlite3Update
	.section	.rodata.str1.1
.LC349:
	.string	"normal"
.LC350:
	.string	"exclusive"
.LC351:
	.string	"RESTRICT"
.LC352:
	.string	"-%T"
.LC353:
	.string	"default_cache_size"
.LC354:
	.string	"cache_size"
.LC355:
	.string	"page_size"
.LC356:
	.string	"max_page_count"
.LC357:
	.string	"page_count"
.LC358:
	.string	"locking_mode"
.LC359:
	.string	"journal_mode"
.LC360:
	.string	"journal_size_limit"
.LC361:
	.string	"auto_vacuum"
.LC362:
	.string	"none"
.LC363:
	.string	"full"
.LC364:
	.string	"incremental"
.LC365:
	.string	"incremental_vacuum"
.LC366:
	.string	"temp_store"
.LC367:
	.string	"file"
.LC368:
	.string	"memory"
.LC369:
	.string	"temp_store_directory"
.LC370:
	.string	"not a writable directory"
.LC371:
	.string	"synchronous"
.LC372:
	.string	"Safety level may not be changed inside a transaction"
.LC373:
	.string	"cid"
.LC374:
	.string	"name"
.LC375:
	.string	"type"
.LC376:
	.string	"notnull"
.LC377:
	.string	"dflt_value"
.LC378:
	.string	"pk"
.LC379:
	.string	"index_info"
.LC380:
	.string	"seqno"
.LC381:
	.string	"index_list"
.LC382:
	.string	"seq"
.LC383:
	.string	"unique"
.LC384:
	.string	"database_list"
.LC385:
	.string	"collation_list"
.LC386:
	.string	"foreign_key_list"
.LC387:
	.string	"id"
.LC388:
	.string	"table"
.LC389:
	.string	"from"
.LC390:
	.string	"to"
.LC391:
	.string	"on_update"
.LC392:
	.string	"on_delete"
.LC393:
	.string	"NONE"
.LC394:
	.string	"case_sensitive_like"
.LC395:
	.string	"like"
.LC396:
	.string	"glob"
.LC397:
	.string	"integrity_check"
.LC398:
	.string	"quick_check"
.LC399:
	.string	"*** in database %s ***\n"
.LC400:
	.string	"rowid "
.LC401:
	.string	" missing from index "
.LC402:
	.string	"wrong # of entries in index "
.LC403:
	.string	"ok"
.LC404:
	.string	"encoding"
.LC405:
	.string	"unsupported encoding: %s"
.LC406:
	.string	"schema_version"
.LC407:
	.string	"user_version"
.LC408:
	.string	"freelist_count"
.LC409:
	.string	"table_info"
	.section .text
	.align	4
.proc	sqlite3Pragma
	.type	sqlite3Pragma, @function
sqlite3Pragma:
.LFB1009:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4099:
	l.lwz   	r14,0(r3)	 # SI load
	l.sw    	-44(r1),r2	 # SI store
.LCFI4100:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4101:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4102:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4103:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4104:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4105:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4106:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4107:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4108:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4109:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-96
.LCFI4110:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r24,r5,0	 # move reg to reg
	l.ori   	r26,r6,0	 # move reg to reg
	l.jal   	sqlite3VdbeCreate	# delay slot filled
	l.ori   	r22,r7,0	 # move reg to reg
	l.sw    	12(r2),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L13506	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi  	r5,r0,2	 # move immediate I
	l.ori   	r4,r18,0	 # move reg to reg
	l.sw    	72(r2),r5	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	sqlite3TwoPartName	# delay slot filled
	l.addi  	r6,r1,48
	l.sfltsi	r11,0
	l.bf	.L13506	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfnei	r11,1
	l.bnf	.L13703	# delay slot filled
	l.lwz   	r30,8(r14)	 # SI load
.L13508:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L13506	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bnf	.L13704	# delay slot filled
	l.movhi  	r4,hi(.LC352)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r22,r11,0	 # move reg to reg
.L13510:
	l.add   	r28,r18,r18
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.add   	r28,r28,r18
	l.lwz   	r26,4(r24)	 # SI load
	l.ori   	r3,r3,65535
	l.slli  	r28,r28,3
	l.and   	r26,r26,r3
	l.sfeqi	r26,0
	l.bf	.L13511	# delay slot filled
	l.add   	r28,r30,r28
	l.lwz   	r26,0(r28)	 # SI load
.L13511:
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,19	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r26,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L13705	# delay slot filled
	l.movhi  	r4,hi(.LC353)
.L13512:
	l.ori   	r3,r14,0	 # move reg to reg
.L13733:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
.L13506:
	l.addi	r1,r1,96
.L13731:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L13704:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC352)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r26	 # SI store
	l.j     	.L13510	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
.L13703:
	l.jal   	sqlite3OpenTempDatabase	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L13508
	l.nop			# nop delay slot
	l.j     	.L13731	# delay slot filled
	l.addi	r1,r1,96
.L13705:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC353)
	l.sfnei	r11,0
	l.bf	.L13513	# delay slot filled
	l.movhi  	r4,hi(.LC355)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13733	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r3,144(r16)	 # SI load
	l.sll   	r4,r4,r18
	l.and   	r5,r4,r3
	l.sfnei	r5,0
	l.bf	.L13739	# delay slot filled
	l.sfnei	r22,0
	l.or    	r3,r4,r3
	l.sw    	144(r16),r3	 # SI store
.L13739:
	l.bnf	.L13706	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	atoi	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.srai  	r6,r11,31
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.xor   	r2,r6,r11
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.sub   	r2,r2,r6
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r6,r0,2	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.addi  	r4,r0,112	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,129	 # move immediate I
	l.addi  	r5,r0,2	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sub   	r5,r0,r2
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r6,r0,2	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.lwz   	r4,4(r28)	 # SI load
	l.lwz   	r6,20(r28)	 # SI load
	l.lwz   	r3,4(r4)	 # SI load
	l.lwz   	r5,0(r4)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.sw    	60(r6),r2	 # SI store
	l.lwz   	r4,160(r4)	 # SI load
	l.sw    	4(r3),r5	 # SI store
	l.sw    	16(r4),r2	 # SI store
	l.lwz   	r3,40(r4)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13517	# delay slot filled
	l.movhi  	r4,hi(sqlite3Config)
	l.ori   	r4,r4,lo(sqlite3Config)
	l.lwz   	r5,108(r4)	 # SI load
	l.jalr  	r5	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L13517:
	l.ori   	r3,r16,0	 # move reg to reg
.L13732:
.L13766:
.L13767:
.L13769:
.L13770:
.L13771:
	l.addi  	r4,r0,14	 # move immediate I
.L13741:
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lbz   	r2,28(r14)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L13733	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r2,4(r28)	 # SI load
	l.lbz   	r3,9(r28)	 # zero_extendqisi2
	l.lwz   	r4,4(r2)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.lwz   	r5,12(r14)	 # SI load
	l.sw    	4(r4),r2	 # SI store
	l.movhi 	r2,hi(65536)	 # move immediate M
	l.sfeqi	r3,1
	l.and   	r5,r5,r2
	l.bf	.L13658	# delay slot filled
	l.lwz   	r2,0(r4)	 # SI load
	l.lbz   	r6,11(r2)	 # zero_extendqisi2
	l.sub   	r4,r0,r6
	l.sfnei	r3,3
	l.srli  	r3,r4,31
	l.bnf	.L13707	# delay slot filled
	l.sb    	8(r2),r3	    # movqi
.L13659:
	l.addi  	r4,r0,0	 # move immediate I
.L13660:
	l.sb    	9(r2),r4	    # movqi
	l.sfeqi	r5,0
	l.bf	.L13661	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.addi  	r4,r0,3	 # move immediate I
.L13661:
	l.sfeqi	r3,0
	l.bf	.L13512	# delay slot filled
	l.sb    	10(r2),r4	    # movqi
	l.addi  	r3,r0,0	 # movqi: move immediate
	l.j     	.L13512	# delay slot filled
	l.sb    	16(r2),r3	    # movqi
.L13513:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC355)
	l.sfnei	r11,0
	l.bf	.L13518	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfnei	r22,0
	l.bnf	.L13708	# delay slot filled
	l.lwz   	r18,4(r28)	 # SI load
	l.jal   	atoi	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r3,0(r18)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.sw    	36(r14),r11	 # SI store
	l.lwz   	r4,4(r18)	 # SI load
	l.addi  	r6,r0,-1	 # move immediate I
	l.jal   	sqlite3BtreeSetPageSize.clone.103	# delay slot filled
	l.ori   	r7,r30,0	 # move reg to reg
	l.sfnei	r11,7
	l.bf	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.j     	.L13732	# delay slot filled
	l.sb    	30(r14),r4	    # movqi
.L13708:
	l.addi  	r5,r0,0	 # move immediate I
	l.sfeqi	r18,0
	l.bf	.L13520	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,4(r18)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.lhz   	r3,20(r3)	 # zero_extendqisi2
	l.ori   	r6,r3,0	 # move reg to reg
.L13520:
	l.movhi  	r4,hi(.LC355)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	returnSingleInt	# delay slot filled
	l.ori   	r4,r4,lo(.LC355)
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13707:
	l.sfeqi	r6,0
	l.bf	.L13660	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.j     	.L13660	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L13518:
	l.movhi  	r4,hi(.LC356)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC356)
	l.sfnei	r11,0
	l.bf	.L13521	# delay slot filled
	l.sfeqi	r22,0
	l.lwz   	r18,4(r28)	 # SI load
	l.bf	.L13522	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.jal   	atoi	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
.L13522:
	l.sfeqi	r18,0
	l.bf	.L13523	# delay slot filled
	l.sflesi	r6,0
	l.lwz   	r3,4(r18)	 # SI load
	l.lwz   	r4,0(r18)	 # SI load
	l.sw    	4(r3),r4	 # SI store
	l.bf	.L13524	# delay slot filled
	l.lwz   	r18,0(r3)	 # SI load
	l.sw    	124(r18),r6	 # SI store
.L13524:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3PagerPagecount	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r6,124(r18)	 # SI load
.L13523:
	l.movhi  	r4,hi(.LC356)
	l.srai  	r5,r6,31
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	returnSingleInt	# delay slot filled
	l.ori   	r4,r4,lo(.LC356)
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13658:
	l.j     	.L13659	# delay slot filled
	l.sb    	8(r2),r3	    # movqi
.L13521:
	l.movhi  	r4,hi(.LC357)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC357)
	l.sfnei	r11,0
	l.bf	.L13525	# delay slot filled
	l.movhi  	r4,hi(.LC358)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13512	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3CodeVerifySchema	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r3,72(r2)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r18,r3,1
	l.addi  	r4,r0,16	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	72(r2),r18	 # SI store
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,90	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.movhi  	r6,hi(.LC357)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC357)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r24,0	 # move reg to reg
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13525:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC358)
	l.sfnei	r11,0
	l.bf	.L13526	# delay slot filled
	l.sfeqi	r22,0
	l.bf	.L13527	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.movhi  	r4,hi(.LC350)
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC350)
	l.sfeqi	r11,0
	l.bnf	.L13709	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
.L13528:
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r2,4(r24)	 # SI load
	l.ori   	r4,r4,65535
	l.and   	r2,r2,r4
.L13529:
	l.sfnei	r2,0
	l.bf	.L13531
	l.nop			# nop delay slot
	l.lwz   	r2,4(r14)	 # SI load
	l.sflesi	r2,2
	l.bf	.L13532
	l.nop			# nop delay slot
	l.andi  	r8,r3,0xff	 # zero_extendqisi2
	l.addi  	r5,r0,48	 # move immediate I
	l.addi  	r4,r0,2	 # move immediate I
.L13534:
	l.lwz   	r6,8(r14)	 # SI load
	l.addi  	r4,r4,1
	l.add   	r6,r6,r5
	l.sfeqi	r3,-1
	l.lwz   	r6,4(r6)	 # SI load
	l.addi  	r5,r5,24
	l.lwz   	r6,4(r6)	 # SI load
	l.bf	.L13533	# delay slot filled
	l.lwz   	r6,0(r6)	 # SI load
	l.lbz   	r7,11(r6)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L13740	# delay slot filled
	l.sfgts 	r2,r4
	l.sb    	4(r6),r8	    # movqi
	l.lwz   	r2,4(r14)	 # SI load
.L13533:
	l.sfgts 	r2,r4
.L13740:
	l.bf	.L13534
	l.nop			# nop delay slot
.L13532:
	l.sb    	31(r14),r3	    # movqi
.L13531:
	l.lwz   	r2,4(r28)	 # SI load
	l.sfeqi	r3,-1
	l.lwz   	r2,4(r2)	 # SI load
	l.bf	.L13535	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
	l.lbz   	r4,11(r2)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L13535
	l.nop			# nop delay slot
	l.sb    	4(r2),r3	    # movqi
.L13535:
	l.lbz   	r3,4(r2)	 # zero_extendqisi2
.L13530:
	l.movhi  	r2,hi(.LC350)
	l.sfeqi	r3,1
	l.bf	.L13536	# delay slot filled
	l.ori   	r2,r2,lo(.LC350)
	l.movhi  	r2,hi(.LC349)
	l.ori   	r2,r2,lo(.LC349)
.L13536:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.movhi  	r6,hi(.LC358)
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r6,r6,lo(.LC358)
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r8,r2,0	 # move reg to reg
	l.sw    	0(r1),r5	 # SI store
.L13701:
	l.jal   	sqlite3VdbeAddOp4
	l.nop			# nop delay slot
	l.addi  	r5,r0,1	 # move immediate I
.L13737:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13706:
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.movhi  	r6,hi(.LC354)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC354)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.lwz   	r5,72(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r5,2
	l.addi  	r4,r0,7	 # move immediate I
	l.sw    	72(r2),r5	 # SI store
	l.movhi  	r5,hi(getCacheSize.18064)
	l.jal   	sqlite3VdbeAddOpList	# delay slot filled
	l.ori   	r5,r5,lo(getCacheSize.18064)
	l.sfltsi	r11,0
	l.bf	.L13516
	l.nop			# nop delay slot
	l.lwz   	r2,12(r16)	 # SI load
	l.sfges 	r11,r2
	l.bf	.L13516
	l.nop			# nop delay slot
	l.lwz   	r2,20(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13516	# delay slot filled
	l.slli  	r4,r11,2
	l.slli  	r3,r11,4
	l.add   	r3,r4,r3
	l.add   	r2,r2,r3
	l.sw    	4(r2),r18	 # SI store
.L13516:
	l.addi  	r11,r11,5
	l.sfltsi	r11,0
	l.bf	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r2,12(r16)	 # SI load
	l.sfges 	r11,r2
	l.bf	.L13741	# delay slot filled
	l.addi  	r4,r0,14	 # move immediate I
	l.lwz   	r2,20(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13517	# delay slot filled
	l.slli  	r3,r11,2
	l.slli  	r11,r11,4
	l.add   	r3,r3,r11
	l.add   	r2,r2,r3
	l.addi  	r3,r0,2000	 # move immediate I
	l.j     	.L13517	# delay slot filled
	l.sw    	4(r2),r3	 # SI store
.L13526:
	l.movhi  	r4,hi(.LC359)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC359)
	l.sfnei	r11,0
	l.bf	.L13537	# delay slot filled
	l.sfeqi	r22,0
	l.bf	.L13538	# delay slot filled
	l.addi  	r18,r0,-1	 # move immediate I
	l.lbs   	r3,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L13539	# delay slot filled
	l.ori   	r2,r22,0	 # move reg to reg
	l.addi  	r2,r2,1
.L13742:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L13742	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
.L13539:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r22
	l.movhi  	r26,hi(azModeName.18080+16)
	l.ori   	r6,r6,65535
	l.ori   	r26,r26,lo(azModeName.18080+16)
	l.and   	r2,r2,r6
	l.addi  	r18,r0,4	 # move immediate I
.L13541:
	l.lwz   	r4,0(r26)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.addi  	r26,r26,-4
	l.sfnei	r11,0
	l.bnf	.L13743	# delay slot filled
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.addi  	r18,r18,-1
	l.sfeqi	r18,-1
	l.bnf	.L13541
	l.nop			# nop delay slot
.L13538:
	l.movhi 	r7,hi(1073676288)	 # move immediate M
.L13743:
	l.lwz   	r2,4(r24)	 # SI load
	l.ori   	r7,r7,65535
	l.xori  	r3,r18,0xffff
	l.and   	r2,r2,r7
	l.sub   	r5,r0,r3
	l.sub   	r4,r0,r2
	l.or    	r3,r5,r3
	l.or    	r2,r4,r2
	l.sfltsi	r3,0
	l.xori  	r2,r2,0xffff
	l.bnf	.L13710	# delay slot filled
	l.srli  	r2,r2,31
	l.sfeqi	r2,0
	l.bf	.L13545
	l.nop			# nop delay slot
	l.lwz   	r2,4(r14)	 # SI load
	l.sflesi	r2,1
	l.bf	.L13546
	l.nop			# nop delay slot
	l.addi  	r26,r0,24	 # move immediate I
	l.addi  	r24,r0,1	 # move immediate I
.L13548:
	l.lwz   	r3,8(r14)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.add   	r3,r3,r26
	l.addi  	r24,r24,1
	l.lwz   	r3,4(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13547	# delay slot filled
	l.addi  	r26,r26,24
	l.lwz   	r2,4(r3)	 # SI load
	l.jal   	sqlite3PagerJournalMode	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r2,4(r14)	 # SI load
.L13547:
	l.sfgts 	r2,r24
	l.bf	.L13548
	l.nop			# nop delay slot
.L13546:
	l.sb    	32(r14),r18	    # movqi
.L13545:
	l.lwz   	r2,4(r28)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r2,4(r2)	 # SI load
	l.jal   	sqlite3PagerJournalMode	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
.L13544:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.slli  	r2,r2,2
	l.addi  	r4,r0,0	 # move immediate I
	l.movhi  	r6,hi(.LC359)
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r6,r6,lo(.LC359)
	l.movhi  	r8,hi(azModeName.18080)
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r8,r8,lo(azModeName.18080)
	l.ori   	r7,r5,0	 # move reg to reg
	l.add   	r2,r2,r8
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r8,0(r2)	 # SI load
	l.addi  	r2,r0,-2	 # move immediate I
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.j     	.L13701	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.L13709:
	l.movhi  	r4,hi(.LC349)
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC349)
	l.sfeqi	r11,0
	l.bf	.L13528	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
.L13527:
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.lwz   	r2,4(r24)	 # SI load
	l.ori   	r5,r5,65535
	l.and   	r2,r2,r5
	l.sfnei	r2,0
	l.bf	.L13670
	l.nop			# nop delay slot
	l.j     	.L13530	# delay slot filled
	l.lbz   	r3,31(r14)	 # zero_extendqisi2
.L13710:
	l.sfeqi	r2,0
	l.bf	.L13545
	l.nop			# nop delay slot
	l.j     	.L13544	# delay slot filled
	l.lbz   	r2,32(r14)	 # zero_extendqisi2
.L13537:
	l.movhi  	r4,hi(.LC360)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC360)
	l.sfnei	r11,0
	l.bf	.L13549	# delay slot filled
	l.addi  	r11,r0,-1	 # move immediate I
	l.lwz   	r3,4(r28)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.addi  	r12,r0,-2	 # move immediate I
	l.lwz   	r18,0(r3)	 # SI load
		l.sw    	36(r1), r11
		l.sw    	36+4(r1), r12
	l.sfeqi	r22,0
	l.bf	.L13744	# delay slot filled
	l.movhi  	r4,hi(.LC360)
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3Atoi64	# delay slot filled
	l.addi  	r4,r1,36
	l.lwz   	r3,36(r1)	 # SI load
	l.sfltsi	r3,-1
	l.bf	.L13693	# delay slot filled
	l.sfnei	r3,-1
	l.bnf	.L13711
	l.nop			# nop delay slot
.L13551:
		l.lwz   	r5, 36(r1)
		l.lwz   	r6, 36+4(r1)
		l.sw    	152(r18), r5
		l.sw    	152+4(r18), r6
	l.movhi  	r4,hi(.LC360)
.L13744:
	l.ori   	r3,r2,0	 # move reg to reg
		l.lwz   	r5, 152(r18)
		l.lwz   	r6, 152+4(r18)
		l.sw    	36(r1), r5
		l.sw    	36+4(r1), r6
	l.jal   	returnSingleInt	# delay slot filled
	l.ori   	r4,r4,lo(.LC360)
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13549:
	l.movhi  	r4,hi(.LC361)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC361)
	l.sfnei	r11,0
	l.bf	.L13553	# delay slot filled
	l.movhi  	r4,hi(.LC365)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.lwz   	r24,4(r28)	 # SI load
	l.sfnei	r11,0
	l.bf	.L13733	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r22,0
	l.bnf	.L13712	# delay slot filled
	l.movhi  	r4,hi(.LC362)
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC362)
	l.sfeqi	r11,0
	l.bnf	.L13713	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L13556:
	l.sb    	33(r14),r2	    # movqi
	l.andi  	r5,r2,0xff	 # zero_extendqisi2
	l.lwz   	r3,4(r24)	 # SI load
	l.lwz   	r4,0(r24)	 # SI load
	l.lbz   	r6,17(r3)	 # zero_extendqisi2
	l.sw    	4(r3),r4	 # SI store
	l.sfeqi	r6,0
	l.bf	.L13557	# delay slot filled
	l.sub   	r4,r0,r5
	l.srli  	r7,r4,31
	l.lbz   	r6,18(r3)	 # zero_extendqisi2
	l.sfne 	r7,r6
	l.bf	.L13517
	l.nop			# nop delay slot
.L13557:
	l.xori  	r5,r5,2
	l.srli  	r4,r4,31
	l.addi  	r5,r5,-1
	l.addi  	r2,r2,-1
	l.srli  	r5,r5,31
	l.sb    	18(r3),r4	    # movqi
	l.sfgtui	r2,1
	l.bf	.L13517	# delay slot filled
	l.sb    	19(r3),r5	    # movqi
	l.movhi  	r5,hi(setMeta6.18096)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,6	 # move immediate I
	l.jal   	sqlite3VdbeAddOpList	# delay slot filled
	l.ori   	r5,r5,lo(setMeta6.18096)
	l.sfltsi	r11,0
	l.bf	.L13745	# delay slot filled
	l.addi  	r3,r11,1
	l.lwz   	r3,12(r16)	 # SI load
	l.sfges 	r11,r3
	l.bf	.L13745	# delay slot filled
	l.addi  	r3,r11,1
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13558	# delay slot filled
	l.slli  	r5,r11,2
	l.slli  	r4,r11,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.sw    	4(r3),r18	 # SI store
.L13558:
	l.addi  	r3,r11,1
.L13745:
	l.sfltsi	r3,0
	l.bf	.L13746	# delay slot filled
	l.addi  	r4,r11,2
	l.lwz   	r4,12(r16)	 # SI load
	l.sfges 	r3,r4
	l.bf	.L13746	# delay slot filled
	l.addi  	r4,r11,2
	l.lwz   	r4,20(r16)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L13559	# delay slot filled
	l.slli  	r5,r3,2
	l.slli  	r3,r3,4
	l.add   	r3,r5,r3
	l.add   	r4,r4,r3
	l.sw    	4(r4),r18	 # SI store
.L13559:
	l.addi  	r4,r11,2
.L13746:
	l.sfltsi	r4,0
	l.bf	.L13560	# delay slot filled
	l.addi  	r3,r11,4
	l.lwz   	r5,12(r16)	 # SI load
	l.sfges 	r4,r5
	l.bf	.L13747	# delay slot filled
	l.sfltsi	r3,0
	l.lwz   	r5,20(r16)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L13560	# delay slot filled
	l.slli  	r6,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r6,r4
	l.add   	r5,r5,r4
	l.sw    	8(r5),r3	 # SI store
.L13560:
	l.sfltsi	r3,0
.L13747:
	l.bf	.L13561
	l.nop			# nop delay slot
	l.lwz   	r4,12(r16)	 # SI load
	l.sfges 	r3,r4
	l.bf	.L13561
	l.nop			# nop delay slot
	l.lwz   	r4,20(r16)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L13561	# delay slot filled
	l.slli  	r5,r3,2
	l.slli  	r3,r3,4
	l.add   	r3,r5,r3
	l.add   	r4,r4,r3
	l.sw    	4(r4),r2	 # SI store
.L13561:
	l.addi  	r11,r11,5
	l.sfltsi	r11,0
	l.bf	.L13748	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.lwz   	r2,12(r16)	 # SI load
	l.sfges 	r11,r2
	l.bf	.L13748
	l.nop			# nop delay slot
	l.lwz   	r2,20(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13562	# delay slot filled
	l.slli  	r3,r11,2
	l.slli  	r11,r11,4
	l.add   	r3,r3,r11
	l.add   	r2,r2,r3
	l.sw    	4(r2),r18	 # SI store
.L13562:
	l.addi  	r3,r0,1	 # move immediate I
.L13748:
	l.lwz   	r2,144(r16)	 # SI load
	l.sll   	r18,r3,r18
	l.and   	r3,r18,r2
	l.sfnei	r3,0
	l.bf	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.or    	r2,r18,r2
	l.j     	.L13766	# delay slot filled
	l.sw    	144(r16),r2	 # SI store
.L13713:
	l.movhi  	r4,hi(.LC363)
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC363)
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L13556	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.movhi  	r4,hi(.LC364)
	l.ori   	r4,r4,lo(.LC364)
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L13556	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	atoi	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.sfgtui	r11,2
	l.bf	.L13556
	l.nop			# nop delay slot
	l.j     	.L13556	# delay slot filled
	l.andi  	r2,r11,0xff	 # zero_extendqisi2
.L13712:
	l.sfeqi	r24,0
	l.bf	.L13555	# delay slot filled
	l.ori   	r6,r22,0	 # move reg to reg
	l.lwz   	r3,4(r24)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.lbz   	r4,18(r3)	 # zero_extendqisi2
	l.sfeqi	r4,0
	l.bf	.L13555	# delay slot filled
	l.sw    	4(r3),r5	 # SI store
	l.lbz   	r3,19(r3)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L13555	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
.L13555:
	l.movhi  	r4,hi(.LC361)
	l.srai  	r5,r6,31
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	returnSingleInt	# delay slot filled
	l.ori   	r4,r4,lo(.LC361)
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13553:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC365)
	l.sfnei	r11,0
	l.bf	.L13563	# delay slot filled
	l.movhi  	r4,hi(.LC354)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13733	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bf	.L13749	# delay slot filled
	l.movhi 	r3,hi(2147418112)	 # move immediate M
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3GetInt32	# delay slot filled
	l.addi  	r4,r1,44
	l.sfeqi	r11,0
	l.bf	.L13749	# delay slot filled
	l.movhi 	r3,hi(2147418112)	 # move immediate M
	l.lwz   	r3,44(r1)	 # SI load
	l.sfgtsi	r3,0
	l.bnf	.L13564
	l.nop			# nop delay slot
.L13565:
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r5,44(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,56	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,42	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,-1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,129	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13670:
	l.j     	.L13529	# delay slot filled
	l.addi  	r3,r0,-1	 # move immediate I
.L13564:
	l.movhi 	r3,hi(2147418112)	 # move immediate M
.L13749:
	l.ori   	r3,r3,65535
	l.j     	.L13565	# delay slot filled
	l.sw    	44(r1),r3	 # SI store
.L13563:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC354)
	l.sfnei	r11,0
	l.bf	.L13566	# delay slot filled
	l.movhi  	r4,hi(.LC366)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13733	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r22,0
	l.bnf	.L13714	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	atoi	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.srai  	r5,r11,31
	l.lwz   	r3,4(r28)	 # SI load
	l.lwz   	r7,20(r28)	 # SI load
	l.lwz   	r2,4(r3)	 # SI load
	l.xor   	r4,r5,r11
	l.lwz   	r6,0(r2)	 # SI load
	l.sub   	r4,r4,r5
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r5,160(r6)	 # SI load
	l.sw    	60(r7),r4	 # SI store
	l.sw    	4(r2),r3	 # SI store
	l.sw    	16(r5),r4	 # SI store
	l.lwz   	r3,40(r5)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13517	# delay slot filled
	l.movhi  	r2,hi(sqlite3Config)
	l.ori   	r2,r2,lo(sqlite3Config)
	l.lwz   	r2,108(r2)	 # SI load
	l.jalr  	r2
	l.nop			# nop delay slot
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13711:
	l.lwz   	r3,40(r1)	 # SI load
	l.sfltui	r3,-1
	l.bnf	.L13551
	l.nop			# nop delay slot
.L13693:
	l.addi  	r3,r0,-1	 # move immediate I
	l.addi  	r4,r0,-1	 # move immediate I
		l.sw    	36(r1), r3
		l.sw    	36+4(r1), r4
	l.j     	.L13551
	l.nop			# nop delay slot
.L13714:
	l.lwz   	r4,20(r28)	 # SI load
	l.lwz   	r6,60(r4)	 # SI load
	l.movhi  	r4,hi(.LC354)
	l.srai  	r5,r6,31
	l.jal   	returnSingleInt	# delay slot filled
	l.ori   	r4,r4,lo(.LC354)
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13566:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC366)
	l.sfnei	r11,0
	l.bf	.L13568	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.sfnei	r22,0
	l.bnf	.L13715	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbs   	r18,0(r22)	 # extendqisi2_no_sext_mem
	l.addi  	r18,r18,-48
	l.andi  	r3,r18,0xff	 # zero_extendqisi2
	l.sfgtui	r3,2
	l.bf	.L13716	# delay slot filled
	l.movhi  	r4,hi(.LC367)
.L13571:
	l.lwz   	r24,0(r2)	 # SI load
	l.lbz   	r3,29(r24)	 # zero_extendqisi2
	l.sfeq 	r3,r18
	l.bf	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	invalidateTempStorage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.j     	.L13767	# delay slot filled
	l.sb    	29(r24),r18	    # movqi
.L13568:
	l.movhi  	r4,hi(.LC369)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC369)
	l.sfnei	r11,0
	l.bf	.L13572	# delay slot filled
	l.sfnei	r22,0
	l.bnf	.L13717
	l.nop			# nop delay slot
	l.lbs   	r3,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bnf	.L13718	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
.L13574:
	l.lbz   	r3,29(r14)	 # zero_extendqisi2
	l.sfgtui	r3,1
	l.bf	.L13576
	l.nop			# nop delay slot
	l.jal   	invalidateTempStorage	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L13576:
	l.movhi  	r2,hi(sqlite3_temp_directory)
	l.ori   	r2,r2,lo(sqlite3_temp_directory)
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,0(r2)	 # SI load
	l.lbs   	r3,0(r22)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bnf	.L13719
	l.nop			# nop delay slot
	l.j     	.L13517	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
.L13718:
	l.lwz   	r3,0(r14)	 # SI load
	l.lwz   	r11,32(r3)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.jalr  	r11	# delay slot filled
	l.addi  	r6,r1,44
	l.sfnei	r11,0
	l.bf	.L13750	# delay slot filled
	l.movhi  	r4,hi(.LC370)
	l.lwz   	r3,44(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L13574
	l.nop			# nop delay slot
.L13750:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC370)
	l.j     	.L13733	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L13719:
	l.addi  	r3,r0,0	 # move immediate I
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.j     	.L13517	# delay slot filled
	l.sw    	0(r2),r11	 # SI store
.L13717:
	l.movhi  	r2,hi(sqlite3_temp_directory)
	l.ori   	r2,r2,lo(sqlite3_temp_directory)
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13517	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.movhi  	r6,hi(.LC369)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r7,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r6,r6,lo(.LC369)
	l.lwz   	r8,0(r2)	 # SI load
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r22,0	 # move reg to reg
	l.j     	.L13701	# delay slot filled
	l.sw    	0(r1),r22	 # SI store
.L13572:
	l.movhi  	r4,hi(.LC371)
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC371)
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.movhi  	r24,hi(aPragma.18031)
	l.sfnei	r11,0
	l.bf	.L13700	# delay slot filled
	l.ori   	r24,r24,lo(aPragma.18031)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13733	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r22,0
	l.bnf	.L13720	# delay slot filled
	l.movhi  	r4,hi(.LC371)
	l.lbz   	r3,28(r14)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L13580	# delay slot filled
	l.movhi  	r4,hi(.LC372)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC372)
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13716:
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC367)
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r18,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L13571	# delay slot filled
	l.movhi  	r4,hi(.LC368)
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC368)
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r18,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13571
	l.nop			# nop delay slot
	l.j     	.L13571	# delay slot filled
	l.addi  	r18,r0,2	 # move immediate I
.L13715:
	l.movhi  	r4,hi(.LC366)
	l.lbz   	r6,29(r14)	 # zero_extendqisi2
	l.ori   	r4,r4,lo(.LC366)
	l.jal   	returnSingleInt	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13580:
	l.jal   	getSafetyLevel	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r11,r11,1
	l.j     	.L13517	# delay slot filled
	l.sb    	9(r28),r11	    # movqi
.L13720:
	l.lbz   	r6,9(r28)	 # zero_extendqisi2
	l.addi  	r6,r6,-1
	l.srai  	r5,r6,31
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	returnSingleInt	# delay slot filled
	l.ori   	r4,r4,lo(.LC371)
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13700:
	l.lwz   	r4,0(r24)	 # SI load
.L13772:
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L13721	# delay slot filled
	l.movhi  	r5,hi(aPragma.18031+80)
	l.ori   	r5,r5,lo(aPragma.18031+80)
	l.sfeq 	r24,r5
	l.bf	.L13586	# delay slot filled
	l.addi  	r24,r24,8
	l.j     	.L13772	# delay slot filled
	l.lwz   	r4,0(r24)	 # SI load
.L13721:
	l.lwz   	r18,0(r2)	 # SI load
	l.addi  	r4,r2,12
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13517	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.sfnei	r22,0
	l.bnf	.L13722	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	getSafetyLevel	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.andi  	r11,r11,1
	l.sfeqi	r11,0
	l.bf	.L13584
	l.nop			# nop delay slot
	l.lwz   	r3,12(r18)	 # SI load
	l.lwz   	r2,4(r24)	 # SI load
	l.or    	r2,r3,r2
	l.sw    	12(r18),r2	 # SI store
.L13585:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r4,r0,14	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13586:
	l.movhi  	r4,hi(.LC409)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC409)
	l.sfeqi	r11,0
	l.bnf	.L13588	# delay slot filled
	l.sfeqi	r22,0
	l.bf	.L13751	# delay slot filled
	l.movhi  	r4,hi(.LC379)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13512	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13517	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,6	 # move immediate I
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.ori   	r30,r18,0	 # move reg to reg
	l.addi  	r3,r0,6	 # move immediate I
	l.movhi  	r6,hi(.LC373)
	l.sw    	72(r2),r3	 # SI store
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC373)
	l.ori   	r7,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r26,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC374)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC374)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC375)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,2	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC375)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC376)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC376)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC377)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC377)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC378)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC378)
	l.ori   	r7,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.addi  	r4,r0,5	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ViewGetColumnNames	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.lwz   	r2,16(r24)	 # SI load
	l.lwz   	r3,12(r24)	 # SI load
	l.addi  	r2,r2,17
.L13589:
	l.sflts 	r26,r3
	l.bnf	.L13517
	l.nop			# nop delay slot
	l.lbz   	r18,2(r2)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bf	.L13590	# delay slot filled
	l.sub   	r5,r26,r30
	l.addi  	r30,r30,1
.L13591:
	l.addi  	r26,r26,1
	l.j     	.L13589	# delay slot filled
	l.addi  	r2,r2,20
.L13584:
	l.lwz   	r2,4(r24)	 # SI load
	l.lwz   	r3,12(r18)	 # SI load
	l.xori  	r2,r2,0xffff
	l.and   	r2,r3,r2
	l.j     	.L13585	# delay slot filled
	l.sw    	12(r18),r2	 # SI store
.L13722:
	l.lwz   	r5,4(r24)	 # SI load
	l.lwz   	r4,12(r18)	 # SI load
	l.and   	r2,r5,r4
	l.lwz   	r4,0(r24)	 # SI load
	l.sub   	r6,r0,r2
	l.addi  	r5,r0,0	 # move immediate I
	l.or    	r6,r6,r2
	l.jal   	returnSingleInt	# delay slot filled
	l.srli  	r6,r6,31
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13590:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r8,-17(r2)	 # SI load
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r18,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,2	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r8,-9(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.sfeq 	r8,r5
	l.bnf	.L13592	# delay slot filled
	l.addi  	r6,r0,3	 # move immediate I
	l.movhi  	r8,hi(.LC15)
	l.ori   	r8,r8,lo(.LC15)
.L13592:
	l.addi  	r11,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lbz   	r5,-1(r2)	 # zero_extendqisi2
	l.sub   	r5,r0,r5
	l.ori   	r3,r16,0	 # move reg to reg
	l.srli  	r5,r5,31
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,4	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r11,-13(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,5	 # move immediate I
	l.sfeq 	r11,r5
	l.bf	.L13768	# delay slot filled
	l.ori   	r7,r5,0	 # move reg to reg
	l.movhi 	r12,hi(1073676288)	 # move immediate M
	l.lwz   	r8,12(r11)	 # SI load
	l.ori   	r12,r12,65535
	l.lwz   	r11,16(r11)	 # SI load
	l.and   	r11,r11,r12
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lbz   	r5,0(r2)	 # zero_extendqisi2
.L13735:
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r6,r0,6	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,6	 # move immediate I
	l.j     	.L13591	# delay slot filled
	l.lwz   	r3,12(r24)	 # SI load
.L13588:
	l.movhi  	r4,hi(.LC379)
.L13751:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC379)
	l.sfnei	r11,0
	l.bf	.L13596	# delay slot filled
	l.sfeqi	r22,0
	l.bf	.L13752	# delay slot filled
	l.movhi  	r4,hi(.LC381)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13512	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3FindIndex	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13517	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.lwz   	r30,16(r11)	 # SI load
	l.addi  	r3,r0,3	 # move immediate I
	l.movhi  	r6,hi(.LC380)
	l.sw    	72(r2),r3	 # SI store
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC380)
	l.ori   	r7,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r26,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC373)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC373)
	l.ori   	r7,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r2,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC374)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,2	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC374)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
.L13734:
	l.lwz   	r7,4(r24)	 # SI load
	l.ori   	r5,r2,0	 # move reg to reg
	l.sflts 	r2,r7
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.bnf	.L13769	# delay slot filled
	l.add   	r2,r2,r6
	l.lwz   	r7,8(r24)	 # SI load
	l.add   	r7,r7,r26
	l.addi  	r26,r26,4
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r18,0(r7)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
	l.slli  	r3,r18,2
	l.slli  	r18,r18,4
	l.lwz   	r4,16(r30)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.add   	r3,r3,r18
	l.sw    	0(r1),r5	 # SI store
	l.add   	r3,r4,r3
	l.ori   	r7,r5,0	 # move reg to reg
	l.lwz   	r8,0(r3)	 # SI load
	l.addi  	r4,r0,94	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.addi  	r6,r0,3	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,3	 # move immediate I
	l.j     	.L13734	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
.L13768:
	l.addi  	r4,r0,119	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,5	 # move immediate I
	l.j     	.L13735	# delay slot filled
	l.lbz   	r5,0(r2)	 # zero_extendqisi2
.L13596:
	l.movhi  	r4,hi(.LC381)
.L13752:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC381)
	l.sfnei	r11,0
	l.bf	.L13599	# delay slot filled
	l.sfeqi	r22,0
	l.bf	.L13753	# delay slot filled
	l.movhi  	r4,hi(.LC384)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13512	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13517	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r2,12
	l.lwz   	r24,20(r24)	 # SI load
	l.sfeqi	r24,0
	l.bf	.L13517	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.ori   	r26,r18,0	 # move reg to reg
	l.addi  	r3,r0,3	 # move immediate I
	l.movhi  	r6,hi(.LC382)
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC382)
	l.ori   	r7,r18,0	 # move reg to reg
	l.sw    	72(r2),r3	 # SI store
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.movhi  	r6,hi(.LC374)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC374)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC383)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,2	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC383)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.ori   	r5,r26,0	 # move reg to reg
.L13754:
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.add   	r26,r26,r6
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	0(r1),r5	 # SI store
	l.ori   	r7,r5,0	 # move reg to reg
	l.lwz   	r8,0(r24)	 # SI load
	l.addi  	r4,r0,94	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
	l.lbz   	r5,24(r24)	 # zero_extendqisi2
	l.sub   	r5,r0,r5
	l.addi  	r4,r0,48	 # move immediate I
	l.srli  	r5,r5,31
	l.addi  	r6,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,3	 # move immediate I
	l.lwz   	r24,32(r24)	 # SI load
	l.sfnei	r24,0
	l.bf	.L13754	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13599:
	l.movhi  	r4,hi(.LC384)
.L13753:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC384)
	l.sfnei	r11,0
	l.bf	.L13601	# delay slot filled
	l.movhi  	r4,hi(.LC385)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13512	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.addi  	r3,r0,3	 # move immediate I
	l.movhi  	r6,hi(.LC382)
	l.sw    	72(r2),r3	 # SI store
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC382)
	l.ori   	r7,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r26,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC374)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC374)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC367)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,2	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC367)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.lwz   	r2,4(r14)	 # SI load
.L13602:
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r5,r26,0	 # move reg to reg
	l.sflts 	r26,r2
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.bnf	.L13770	# delay slot filled
	l.add   	r26,r26,r6
	l.lwz   	r7,8(r14)	 # SI load
	l.add   	r7,r7,r24
	l.lwz   	r7,4(r7)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L13603
	l.nop			# nop delay slot
	l.jal   	sqlite3VdbeAddOp2
	l.nop			# nop delay slot
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r2,8(r14)	 # SI load
	l.sw    	0(r1),r5	 # SI store
	l.add   	r2,r2,r24
	l.ori   	r7,r5,0	 # move reg to reg
	l.lwz   	r8,0(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
	l.lwz   	r2,8(r14)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.add   	r2,r2,r24
	l.ori   	r7,r5,0	 # move reg to reg
	l.lwz   	r2,4(r2)	 # SI load
	l.addi  	r4,r0,94	 # move immediate I
	l.lwz   	r2,4(r2)	 # SI load
	l.addi  	r6,r0,3	 # move immediate I
	l.lwz   	r2,0(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r8,128(r2)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,3	 # move immediate I
	l.lwz   	r2,4(r14)	 # SI load
.L13603:
	l.j     	.L13602	# delay slot filled
	l.addi  	r24,r24,24
.L13601:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC385)
	l.sfnei	r11,0
	l.bf	.L13605	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.addi  	r3,r0,2	 # move immediate I
	l.movhi  	r6,hi(.LC382)
	l.sw    	72(r2),r3	 # SI store
	l.ori   	r4,r24,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC382)
	l.ori   	r7,r24,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.movhi  	r6,hi(.LC374)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC374)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r24,0	 # move reg to reg
	l.lwz   	r2,396(r14)	 # SI load
.L13606:
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.sfnei	r2,0
	l.bnf	.L13771	# delay slot filled
	l.add   	r24,r24,r6
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r18,8(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,94	 # move immediate I
	l.sw    	0(r1),r5	 # SI store
	l.ori   	r7,r5,0	 # move reg to reg
	l.addi  	r6,r0,2	 # move immediate I
	l.lwz   	r8,0(r18)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
	l.j     	.L13606	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13605:
	l.movhi  	r4,hi(.LC386)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC386)
	l.sfnei	r11,0
	l.bf	.L13608	# delay slot filled
	l.sfeqi	r22,0
	l.bf	.L13755	# delay slot filled
	l.movhi  	r4,hi(.LC394)
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13512	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13517	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r2,12
	l.lwz   	r24,36(r30)	 # SI load
	l.sfeqi	r24,0
	l.bf	.L13517	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,8	 # move immediate I
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.ori   	r26,r18,0	 # move reg to reg
	l.addi  	r3,r0,8	 # move immediate I
	l.movhi  	r6,hi(.LC387)
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC387)
	l.ori   	r7,r18,0	 # move reg to reg
	l.sw    	72(r2),r3	 # SI store
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.movhi  	r6,hi(.LC382)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC382)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC388)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,2	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC388)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC389)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC389)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC390)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC390)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC391)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,5	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC391)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC392)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,6	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC392)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.movhi  	r6,hi(.LC202)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,7	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC202)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
.L13609:
	l.addi  	r2,r24,20
	l.addi  	r18,r0,0	 # move immediate I
	l.movhi  	r8,hi(.LC351)
.L13736:
	l.lwz   	r7,12(r24)	 # SI load
	l.ori   	r8,r8,lo(.LC351)
	l.addi  	r4,r0,48	 # move immediate I
	l.sw    	8(r1),r8	 # SI store
	l.ori   	r5,r26,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.sflts 	r18,r7
	l.bnf	.L13723	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lbz   	r7,17(r24)	 # zero_extendqisi2
	l.movhi  	r11,hi(.LC351)
	l.lwz   	r8,4(r2)	 # SI load
	l.addi  	r7,r7,-7
	l.ori   	r11,r11,lo(.LC351)
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.sw    	12(r1),r8	 # SI store
	l.sw    	16(r1),r11	 # SI store
	l.sfgtui	r7,2
	l.bf	.L13610	# delay slot filled
	l.slli  	r8,r7,2
	l.movhi  	r12,hi(CSWTCH.1797)
	l.ori   	r12,r12,lo(CSWTCH.1797)
	l.add   	r7,r8,r12
	l.lwz   	r7,0(r7)	 # SI load
	l.sw    	8(r1),r7	 # SI store
.L13610:
	l.lbz   	r7,18(r24)	 # zero_extendqisi2
	l.addi  	r7,r7,-7
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.sfgtui	r7,2
	l.bf	.L13611	# delay slot filled
	l.slli  	r8,r7,2
	l.movhi  	r11,hi(CSWTCH.1797)
	l.ori   	r11,r11,lo(CSWTCH.1797)
	l.add   	r7,r8,r11
	l.lwz   	r7,0(r7)	 # SI load
	l.sw    	16(r1),r7	 # SI store
.L13611:
	l.jal   	sqlite3VdbeAddOp2
	l.nop			# nop delay slot
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r6,r0,2	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r18,r18,1
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r8,8(r24)	 # SI load
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.slli  	r4,r3,2
	l.slli  	r3,r3,4
	l.lwz   	r8,16(r30)	 # SI load
	l.sw    	0(r1),r5	 # SI store
	l.add   	r3,r4,r3
	l.ori   	r7,r5,0	 # move reg to reg
	l.add   	r8,r8,r3
	l.addi  	r4,r0,94	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r6,r0,4	 # move immediate I
	l.lwz   	r8,0(r8)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.addi  	r2,r2,8
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r8,12(r1)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.addi  	r6,r0,5	 # move immediate I
	l.sfeq 	r8,r5
	l.bf	.L13612	# delay slot filled
	l.addi  	r4,r0,119	 # move immediate I
	l.addi  	r4,r0,94	 # move immediate I
.L13612:
	l.addi  	r12,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r12	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.lwz   	r8,8(r1)	 # SI load
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,6	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.lwz   	r8,16(r1)	 # SI load
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,7	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.movhi  	r8,hi(.LC393)
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,8	 # move immediate I
	l.ori   	r8,r8,lo(.LC393)
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,90	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,8	 # move immediate I
	l.j     	.L13736	# delay slot filled
	l.movhi  	r8,hi(.LC351)
.L13723:
	l.lwz   	r24,4(r24)	 # SI load
	l.sfeqi	r24,0
	l.bf	.L13741	# delay slot filled
	l.addi  	r4,r0,14	 # move immediate I
	l.j     	.L13609	# delay slot filled
	l.add   	r26,r26,r6
.L13608:
	l.movhi  	r4,hi(.LC394)
.L13755:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC394)
	l.sfnei	r11,0
	l.bf	.L13615	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bf	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	getSafetyLevel	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.andi  	r2,r11,1
	l.sfeqi	r2,0
	l.bf	.L13616	# delay slot filled
	l.movhi  	r7,hi(likeInfoNorm)
	l.movhi  	r4,hi(.LC395)
	l.movhi  	r7,hi(likeInfoAlt)
	l.movhi  	r8,hi(likeFunc)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC395)
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r6,r0,5	 # move immediate I
	l.ori   	r7,r7,lo(likeInfoAlt)
	l.ori   	r8,r8,lo(likeFunc)
	l.sw    	0(r1),r24	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r24	 # SI store
	l.movhi  	r4,hi(.LC395)
	l.movhi  	r7,hi(likeInfoAlt)
	l.movhi  	r8,hi(likeFunc)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC395)
	l.addi  	r5,r0,3	 # move immediate I
	l.addi  	r6,r0,5	 # move immediate I
	l.ori   	r7,r7,lo(likeInfoAlt)
	l.ori   	r8,r8,lo(likeFunc)
	l.sw    	0(r1),r24	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r24	 # SI store
	l.movhi  	r4,hi(.LC396)
	l.movhi  	r7,hi(globInfo)
	l.movhi  	r8,hi(likeFunc)
	l.ori   	r4,r4,lo(.LC396)
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r6,r0,5	 # move immediate I
	l.ori   	r7,r7,lo(globInfo)
	l.ori   	r8,r8,lo(likeFunc)
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	0(r1),r24	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r24	 # SI store
	l.movhi  	r4,hi(.LC396)
	l.addi  	r5,r0,3	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	setLikeOptFlag	# delay slot filled
	l.ori   	r4,r4,lo(.LC396)
	l.addi  	r5,r0,3	 # move immediate I
.L13663:
	l.movhi  	r4,hi(.LC395)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	setLikeOptFlag	# delay slot filled
	l.ori   	r4,r4,lo(.LC395)
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13615:
	l.movhi  	r4,hi(.LC397)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC397)
	l.sfeqi	r11,0
	l.bf	.L13756	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.movhi  	r4,hi(.LC398)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC398)
	l.sfnei	r11,0
	l.bf	.L13618	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L13756:
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.lbs   	r26,0(r20)	 # extendqisi2_no_sext_mem
	l.sfnei	r11,0
	l.bf	.L13512	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r4,r0,6	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	72(r2),r4	 # SI store
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r24,r0,100	 # move immediate I
	l.movhi  	r6,hi(.LC397)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC397)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bf	.L13757	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	atoi	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sflesi	r11,0
	l.bnf	.L13619	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.addi  	r24,r0,100	 # move immediate I
.L13619:
	l.ori   	r3,r16,0	 # move reg to reg
.L13757:
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r30,r0,0	 # move immediate I
	l.xori  	r3,r26,113
	l.ori   	r26,r30,0	 # move reg to reg
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sub   	r3,r0,r3
	l.srli  	r3,r3,31
	l.sw    	32(r1),r3	 # SI store
.L13620:
	l.lwz   	r3,4(r14)	 # SI load
	l.sflts 	r26,r3
	l.bnf	.L13724	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3CodeVerifySchema	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,129	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r4,r0,39	 # move immediate I
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	12(r1),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
	l.lwz   	r3,8(r14)	 # SI load
	l.add   	r3,r3,r30
	l.lwz   	r3,20(r3)	 # SI load
	l.lwz   	r11,12(r3)	 # SI load
	l.sw    	16(r1),r3	 # SI store
	l.sw    	12(r1),r11	 # SI store
.L13621:
	l.lwz   	r3,12(r1)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L13725	# delay slot filled
	l.lwz   	r12,12(r1)	 # SI load
	l.addi  	r6,r18,2
	l.lwz   	r12,8(r12)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.lwz   	r5,24(r12)	 # SI load
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	8(r1),r12	 # SI store
	l.lwz   	r3,8(r1)	 # SI load
	l.addi  	r18,r18,1
	l.lwz   	r3,20(r3)	 # SI load
	l.sw    	8(r1),r3	 # SI store
.L13622:
	l.lwz   	r11,8(r1)	 # SI load
	l.addi  	r6,r18,2
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L13726	# delay slot filled
	l.addi  	r4,r0,48	 # move immediate I
	l.lwz   	r7,8(r1)	 # SI load
	l.addi  	r18,r18,1
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r5,20(r7)	 # SI load
	l.lwz   	r8,8(r1)	 # SI load
	l.lwz   	r8,32(r8)	 # SI load
	l.j     	.L13622	# delay slot filled
	l.sw    	8(r1),r8	 # SI store
.L13616:
	l.movhi  	r4,hi(.LC395)
	l.movhi  	r8,hi(likeFunc)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC395)
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r6,r0,5	 # move immediate I
	l.ori   	r7,r7,lo(likeInfoNorm)
	l.ori   	r8,r8,lo(likeFunc)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
	l.movhi  	r4,hi(.LC395)
	l.movhi  	r7,hi(likeInfoNorm)
	l.movhi  	r8,hi(likeFunc)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC395)
	l.addi  	r5,r0,3	 # move immediate I
	l.addi  	r6,r0,5	 # move immediate I
	l.ori   	r7,r7,lo(likeInfoNorm)
	l.ori   	r8,r8,lo(likeFunc)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
	l.movhi  	r4,hi(.LC396)
	l.movhi  	r7,hi(globInfo)
	l.movhi  	r8,hi(likeFunc)
	l.ori   	r4,r4,lo(.LC396)
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r6,r0,5	 # move immediate I
	l.ori   	r7,r7,lo(globInfo)
	l.ori   	r8,r8,lo(likeFunc)
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3CreateFunc	# delay slot filled
	l.sw    	4(r1),r2	 # SI store
	l.movhi  	r4,hi(.LC396)
	l.addi  	r5,r0,3	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	setLikeOptFlag	# delay slot filled
	l.ori   	r4,r4,lo(.LC396)
	l.j     	.L13663	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L13618:
	l.movhi  	r4,hi(.LC404)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC404)
	l.sfnei	r11,0
	l.bf	.L13641	# delay slot filled
	l.sfnei	r22,0
	l.bnf	.L13727
	l.nop			# nop delay slot
	l.lwz   	r3,8(r14)	 # SI load
	l.lwz   	r3,20(r3)	 # SI load
	l.lhz   	r3,58(r3)	 # zero_extendqisi2
	l.andi  	r3,r3,5
	l.sfeqi	r3,1
	l.bf	.L13517	# delay slot filled
	l.movhi  	r18,hi(encnames.18189)
	l.ori   	r18,r18,lo(encnames.18189)
.L13643:
	l.lwz   	r5,0(r18)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfnei	r5,0
	l.bnf	.L13646	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.jal   	sqlite3StrICmp
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L13728
	l.nop			# nop delay slot
	l.j     	.L13643	# delay slot filled
	l.addi  	r18,r18,8
.L13726:
	l.lwz   	r12,12(r1)	 # SI load
	l.lwz   	r12,0(r12)	 # SI load
	l.j     	.L13621	# delay slot filled
	l.sw    	12(r1),r12	 # SI store
.L13728:
	l.lwz   	r4,0(r2)	 # SI load
	l.lbz   	r3,4(r18)	 # zero_extendqisi2
	l.lwz   	r4,8(r4)	 # SI load
	l.sfnei	r3,0
	l.bf	.L13645	# delay slot filled
	l.lwz   	r4,20(r4)	 # SI load
	l.movhi  	r5,hi(sqlite3one)
	l.ori   	r5,r5,lo(sqlite3one)
	l.lbs   	r5,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L13645	# delay slot filled
	l.addi  	r3,r0,2	 # move immediate I
	l.addi  	r3,r0,3	 # move immediate I
.L13645:
	l.sb    	57(r4),r3	    # movqi
	l.lwz   	r3,0(r18)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L13517
	l.nop			# nop delay slot
.L13646:
	l.movhi  	r4,hi(.LC405)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC405)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r22	 # SI store
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13727:
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L13512	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.movhi  	r6,hi(.LC404)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r7,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r6,r6,lo(.LC404)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r2,0(r2)	 # SI load
	l.movhi  	r12,hi(encnames.18189)
	l.lwz   	r2,8(r2)	 # SI load
	l.ori   	r12,r12,lo(encnames.18189)
	l.lwz   	r2,20(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.lbz   	r2,57(r2)	 # zero_extendqisi2
	l.slli  	r2,r2,3
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r6,r0,-2	 # move immediate I
	l.add   	r2,r2,r12
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
	l.j     	.L13737	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L13641:
	l.movhi  	r4,hi(.LC406)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC406)
	l.sfeqi	r11,0
	l.bnf	.L13729	# delay slot filled
	l.movhi  	r4,hi(.LC407)
	l.addi  	r3,r0,1	 # move immediate I
.L13738:
	l.lwz   	r2,144(r16)	 # SI load
.L13773:
	l.sll   	r3,r3,r18
	l.and   	r4,r3,r2
	l.sfnei	r4,0
	l.bf	.L13649	# delay slot filled
	l.or    	r2,r3,r2
	l.sw    	144(r16),r2	 # SI store
.L13649:
	l.lbs   	r2,0(r20)	 # extendqisi2_no_sext_mem
	l.sfeqi	r2,83
	l.bf	.L13652	# delay slot filled
	l.sfgtsi	r2,83
	l.bf	.L13653	# delay slot filled
	l.sfeqi	r2,102
	l.sfeqi	r2,70
	l.bf	.L13651
	l.nop			# nop delay slot
.L13690:
	l.addi  	r24,r0,5	 # move immediate I
.L13650:
	l.sfltsi	r18,0
	l.bf	.L13758	# delay slot filled
	l.movhi  	r5,hi(readCookie.18203)
	l.sub   	r2,r0,r22
	l.or    	r2,r22,r2
	l.sfgesi	r2,0
	l.bf	.L13759	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.movhi  	r5,hi(setCookie.18201)
	l.addi  	r4,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeAddOpList	# delay slot filled
	l.ori   	r5,r5,lo(setCookie.18201)
	l.sfltsi	r11,0
	l.bf	.L13655	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,12(r16)	 # SI load
	l.sfges 	r11,r3
	l.bf	.L13760	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13655	# delay slot filled
	l.slli  	r5,r11,2
	l.slli  	r4,r11,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.sw    	4(r3),r18	 # SI store
.L13655:
	l.ori   	r3,r22,0	 # move reg to reg
.L13760:
	l.jal   	atoi	# delay slot filled
	l.addi  	r26,r2,1
	l.sfltsi	r26,0
	l.bf	.L13656
	l.nop			# nop delay slot
	l.lwz   	r3,12(r16)	 # SI load
	l.sfges 	r26,r3
	l.bf	.L13656
	l.nop			# nop delay slot
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13656	# delay slot filled
	l.slli  	r4,r26,2
	l.slli  	r26,r26,4
	l.add   	r4,r4,r26
	l.add   	r3,r3,r4
	l.sw    	4(r3),r11	 # SI store
.L13656:
	l.addi  	r2,r2,2
	l.sfltsi	r2,0
	l.bf	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,12(r16)	 # SI load
	l.sfges 	r2,r3
	l.bf	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13517	# delay slot filled
	l.slli  	r4,r2,2
	l.slli  	r2,r2,4
	l.add   	r2,r4,r2
	l.add   	r2,r3,r2
	l.sw    	4(r2),r18	 # SI store
	l.j     	.L13517	# delay slot filled
	l.sw    	8(r2),r24	 # SI store
.L13758:
	l.ori   	r3,r16,0	 # move reg to reg
.L13759:
	l.addi  	r4,r0,2	 # move immediate I
	l.jal   	sqlite3VdbeAddOpList	# delay slot filled
	l.ori   	r5,r5,lo(readCookie.18203)
	l.sfltsi	r11,0
	l.bf	.L13657
	l.nop			# nop delay slot
	l.lwz   	r2,12(r16)	 # SI load
	l.sfges 	r11,r2
	l.bf	.L13761	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r2,20(r16)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13761
	l.nop			# nop delay slot
	l.slli  	r3,r11,2
	l.slli  	r11,r11,4
	l.add   	r3,r3,r11
	l.add   	r2,r2,r3
	l.sw    	4(r2),r18	 # SI store
	l.sw    	12(r2),r24	 # SI store
.L13657:
	l.ori   	r3,r16,0	 # move reg to reg
.L13761:
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.addi  	r7,r0,-1	 # move immediate I
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13651:
	l.xori  	r18,r18,0xffff
	l.j     	.L13650	# delay slot filled
	l.addi  	r24,r0,1	 # move immediate I
.L13653:
	l.bf	.L13651	# delay slot filled
	l.sfeqi	r2,115
	l.bnf	.L13690
	l.nop			# nop delay slot
.L13652:
	l.j     	.L13650	# delay slot filled
	l.addi  	r24,r0,0	 # move immediate I
.L13729:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC407)
	l.sfeqi	r11,0
	l.bf	.L13738	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.movhi  	r4,hi(.LC408)
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC408)
	l.sfnei	r11,0
	l.bf	.L13517	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.j     	.L13773	# delay slot filled
	l.lwz   	r2,144(r16)	 # SI load
.L13725:
	l.addi  	r3,r18,3
	l.lwz   	r4,72(r2)	 # SI load
	l.sflts 	r3,r4
	l.bf	.L13762	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r3,r18,4
	l.sw    	72(r2),r3	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
.L13762:
	l.addi  	r4,r0,17	 # move immediate I
	l.addi  	r5,r0,2	 # move immediate I
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13763	# delay slot filled
	l.addi  	r5,r0,2	 # move immediate I
	l.lwz   	r4,12(r16)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.sb    	3(r3),r26	    # movqi
	l.addi  	r5,r0,2	 # move immediate I
.L13763:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,71	 # move immediate I
	l.lwz   	r5,8(r14)	 # SI load
	l.movhi  	r4,hi(.LC399)
	l.add   	r5,r5,r30
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,0(r5)	 # SI load
	l.ori   	r4,r4,lo(.LC399)
	l.ori   	r18,r11,0	 # move reg to reg
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r8,r11,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.addi  	r4,r0,94	 # move immediate I
	l.addi  	r6,r0,3	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r11,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,120	 # move immediate I
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r6,r0,4	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r7,r0,2	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,89	 # move immediate I
	l.addi  	r5,r0,4	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r6,r0,3	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,90	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r12,16(r1)	 # SI load
	l.lwz   	r12,12(r12)	 # SI load
	l.sw    	12(r1),r12	 # SI store
.L13627:
	l.lwz   	r8,12(r1)	 # SI load
	l.sub   	r3,r0,r8
	l.or    	r3,r8,r3
	l.sfgesi	r3,0
	l.bf	.L13694	# delay slot filled
	l.lwz   	r11,32(r1)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L13694	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
	l.lwz   	r18,8(r3)	 # SI load
	l.lwz   	r3,20(r18)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13628	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r4,r0,129	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.sw    	20(r1),r5	 # SI store
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r4,r0,39	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,8(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3OpenTableAndIndices	# delay slot filled
	l.addi  	r6,r0,13	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,48	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,122	 # move immediate I
	l.addi  	r5,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r4,r0,42	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r0,2	 # move immediate I
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	24(r1),r11	 # SI store
	l.lwz   	r4,20(r18)	 # SI load
	l.sw    	8(r1),r4	 # SI store
.L13629:
	l.addi  	r5,r0,1	 # move immediate I
	l.lwz   	r12,20(r1)	 # SI load
	l.lwz   	r4,8(r1)	 # SI load
	l.add   	r12,r12,r5
	l.ori   	r7,r5,0	 # move reg to reg
	l.sw    	20(r1),r12	 # SI store
	l.addi  	r6,r0,3	 # move immediate I
	l.sfnei	r4,0
	l.bnf	.L13730	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3GenerateIndexKey
	l.nop			# nop delay slot
	l.addi  	r7,r0,3	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,128	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.lwz   	r5,20(r1)	 # SI load
	l.movhi  	r5,hi(idxErr.18172)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,11	 # move immediate I
	l.ori   	r5,r5,lo(idxErr.18172)
	l.jal   	sqlite3VdbeAddOpList	# delay slot filled
	l.sw    	28(r1),r11	 # SI store
	l.movhi  	r5,hi(.LC400)
	l.addi  	r4,r11,1
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC400)
	l.addi  	r6,r0,-2	 # move immediate I
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.sw    	16(r1),r11	 # SI store
	l.lwz   	r5,16(r1)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r5,3
	l.movhi  	r5,hi(.LC401)
	l.addi  	r6,r0,-2	 # move immediate I
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.ori   	r5,r5,lo(.LC401)
	l.lwz   	r7,16(r1)	 # SI load
	l.lwz   	r6,8(r1)	 # SI load
	l.addi  	r4,r7,4
	l.lwz   	r5,0(r6)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-2	 # move immediate I
	l.lwz   	r8,16(r1)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.addi  	r4,r8,9
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
	l.lwz   	r11,8(r1)	 # SI load
	l.lwz   	r11,32(r11)	 # SI load
	l.j     	.L13629	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
.L13724:
	l.movhi  	r5,hi(endCode.18153)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.jal   	sqlite3VdbeAddOpList	# delay slot filled
	l.ori   	r5,r5,lo(endCode.18153)
	l.sfltsi	r11,0
	l.bf	.L13640	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,12(r16)	 # SI load
	l.sfges 	r11,r3
	l.bf	.L13764	# delay slot filled
	l.addi  	r4,r2,1
	l.lwz   	r3,20(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L13764	# delay slot filled
	l.slli  	r5,r11,2
	l.slli  	r4,r11,4
	l.sub   	r24,r0,r24
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.sw    	8(r3),r24	 # SI store
.L13640:
	l.addi  	r4,r2,1
.L13764:
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.movhi  	r5,hi(.LC403)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r2,2
	l.ori   	r5,r5,lo(.LC403)
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-2	 # move immediate I
	l.j     	.L13732	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L13730:
	l.lwz   	r3,24(r1)	 # SI load
	l.addi  	r7,r0,2	 # move immediate I
	l.add   	r6,r3,r5
	l.addi  	r4,r0,106	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.sw    	16(r1),r7	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
	l.lwz   	r18,20(r18)	 # SI load
	l.sw    	8(r1),r18	 # SI store
.L13631:
	l.lwz   	r6,8(r1)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L13628	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r4,r0,129	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r4,r0,39	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.movhi  	r5,hi(cntIdx.18176)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,10	 # move immediate I
	l.jal   	sqlite3VdbeAddOpList	# delay slot filled
	l.ori   	r5,r5,lo(cntIdx.18176)
	l.addi  	r3,r11,1
	l.sfltsi	r3,0
	l.bf	.L13634	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r4,12(r16)	 # SI load
	l.sfges 	r3,r4
	l.bf	.L13664	# delay slot filled
	l.addi  	r4,r18,4
	l.lwz   	r5,20(r16)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L13634	# delay slot filled
	l.slli  	r6,r3,2
	l.slli  	r3,r3,4
	l.addi  	r4,r11,4
	l.lwz   	r8,16(r1)	 # SI load
	l.add   	r3,r6,r3
	l.add   	r3,r5,r3
	l.sw    	4(r3),r8	 # SI store
	l.sw    	8(r3),r4	 # SI store
.L13664:
	l.addi  	r3,r18,3
	l.sfltsi	r3,0
	l.bf	.L13765	# delay slot filled
	l.lwz   	r12,16(r1)	 # SI load
	l.lwz   	r5,12(r16)	 # SI load
	l.sfges 	r3,r5
	l.bf	.L13765
	l.nop			# nop delay slot
	l.lwz   	r5,20(r16)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L13765	# delay slot filled
	l.slli  	r7,r3,2
	l.slli  	r3,r3,4
	l.addi  	r6,r18,2
	l.lwz   	r11,16(r1)	 # SI load
	l.add   	r3,r7,r3
	l.add   	r3,r5,r3
	l.sw    	4(r3),r11	 # SI store
	l.sw    	8(r3),r6	 # SI store
	l.lwz   	r12,16(r1)	 # SI load
.L13765:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r12,r12,1
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.sw    	16(r1),r12	 # SI store
	l.movhi  	r5,hi(.LC402)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r18,6
	l.ori   	r5,r5,lo(.LC402)
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-2	 # move immediate I
	l.lwz   	r4,8(r1)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r5,0(r4)	 # SI load
	l.addi  	r6,r0,-2	 # move immediate I
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r4,r18,7
	l.lwz   	r5,8(r1)	 # SI load
	l.lwz   	r5,32(r5)	 # SI load
	l.j     	.L13631	# delay slot filled
	l.sw    	8(r1),r5	 # SI store
.L13634:
	l.j     	.L13664	# delay slot filled
	l.addi  	r4,r18,4
.L13628:
	l.lwz   	r7,12(r1)	 # SI load
	l.lwz   	r7,0(r7)	 # SI load
	l.j     	.L13627	# delay slot filled
	l.sw    	12(r1),r7	 # SI store
.L13694:
	l.addi  	r26,r26,1
	l.j     	.L13620	# delay slot filled
	l.addi  	r30,r30,24
.LFE1009:
	.size	sqlite3Pragma, .-sqlite3Pragma
	.section	.rodata.str1.1
.LC410:
	.string	"unable to identify the object to be reindexed"
	.section .text
	.align	4
.proc	sqlite3Reindex
	.type	sqlite3Reindex, @function
sqlite3Reindex:
.LFB920:
	l.sw    	-28(r1),r2	 # SI store
.LCFI4111:
	l.sw    	-24(r1),r14	 # SI store
.LCFI4112:
	l.sw    	-20(r1),r16	 # SI store
.LCFI4113:
	l.sw    	-16(r1),r18	 # SI store
.LCFI4114:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4115:
	l.sw    	-12(r1),r20	 # SI store
.LCFI4116:
	l.sw    	-8(r1),r22	 # SI store
.LCFI4117:
	l.addi  	r1,r1,-32
.LCFI4118:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r16,r5,0	 # move reg to reg
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.lwz   	r18,0(r3)	 # SI load
	l.sfnei	r11,0
	l.bf	.L13774	# delay slot filled
	l.sfeqi	r14,0
	l.bf	.L13785	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L13776	# delay slot filled
	l.sfeqi	r16,0
	l.bf	.L13778
	l.nop			# nop delay slot
	l.lwz   	r3,0(r16)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L13778	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
.L13784:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3TwoPartName	# delay slot filled
	l.ori   	r6,r1,0	 # move reg to reg
	l.sfltsi	r11,0
	l.bf	.L13774	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.lwz   	r4,0(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L13774	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.add   	r5,r14,r14
	l.lwz   	r6,8(r18)	 # SI load
	l.add   	r5,r5,r14
	l.ori   	r3,r18,0	 # move reg to reg
	l.slli  	r5,r5,3
	l.ori   	r4,r11,0	 # move reg to reg
	l.add   	r5,r6,r5
	l.lwz   	r22,0(r5)	 # SI load
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13781	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r4,20(r11)	 # SI load
	l.addi  	r5,r11,72
	l.jal   	reindexTable.clone.158	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
.L13774:
	l.addi	r1,r1,32
.L13783:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L13778:
	l.lwz   	r3,0(r2)	 # SI load
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13774	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r4,8(r18)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r4,20(r4)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.lbz   	r4,57(r4)	 # zero_extendqisi2
	l.addi  	r6,r0,-1	 # move immediate I
	l.jal   	sqlite3FindCollSeq	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L13780	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	reindexDatabases	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L13783	# delay slot filled
	l.addi	r1,r1,32
.L13776:
	l.ori   	r3,r2,0	 # move reg to reg
.L13785:
	l.jal   	reindexDatabases	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L13783	# delay slot filled
	l.addi	r1,r1,32
.L13781:
	l.ori   	r5,r22,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3FindIndex	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bf	.L13782	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3RefillIndex	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
	l.j     	.L13783	# delay slot filled
	l.addi	r1,r1,32
.L13782:
	l.movhi  	r4,hi(.LC410)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC410)
	l.j     	.L13783	# delay slot filled
	l.addi	r1,r1,32
.L13780:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L13784	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
.LFE920:
	.size	sqlite3Reindex, .-sqlite3Reindex
	.section	.rodata.str1.1
.LC411:
	.string	"BEFORE"
.LC412:
	.string	"AFTER"
.LC413:
	.string	"parser stack overflow"
.LC414:
	.string	"BEGIN"
.LC415:
	.string	"COMMIT"
.LC416:
	.string	"ROLLBACK"
.LC417:
	.string	"too many columns on %s"
.LC418:
	.string	"duplicate column name: %s"
.LC419:
	.string	"set list"
.LC420:
	.string	"near \"%T\": syntax error"
.LC421:
	.string	"variable number must be between ?1 and ?%d"
.LC422:
	.string	"too many SQL variables"
.LC423:
	.string	"too many arguments on function %T"
.LC424:
	.string	"index"
.LC425:
	.string	"no such index: %S"
.LC426:
	.string	"index associated with UNIQUE or PRIMARY KEY constraint cannot be dropped"
.LC427:
	.string	"DELETE FROM %Q.%s WHERE name=%Q"
.LC428:
	.string	"DELETE FROM %Q.sqlite_stat1 WHERE idx=%Q"
.LC429:
	.string	"temporary trigger may not have qualified name"
.LC430:
	.string	"cannot create triggers on virtual tables"
.LC431:
	.string	"trigger %T already exists"
.LC432:
	.string	"cannot create trigger on system table"
.LC433:
	.string	"cannot create %s trigger on view: %S"
.LC434:
	.string	"cannot create INSTEAD OF trigger on table: %S"
.LC435:
	.string	"no such trigger: %S"
.LC436:
	.string	"virtual tables may not be altered"
.LC437:
	.string	"Cannot add a column to a view"
.LC438:
	.string	"sqlite_altertab_%s"
.LC439:
	.string	"Cannot use virtual tables in shared-cache mode"
	.section	.rodata.cst4
	.align	4
.LC440:
	.long	394758
	.align	4
.LC441:
	.long	-1000000
	.align	4
.LC442:
	.long	-24000000
	.section .text
	.align	4
.proc	sqlite3Parser
	.type	sqlite3Parser, @function
sqlite3Parser:
.LFB1178:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4119:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4120:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4121:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4122:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4123:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4124:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4125:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4126:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4127:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4128:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4129:
	l.addi  	r1,r1,-196
.LCFI4130:
	l.lwz   	r7,0(r3)	 # SI load
	l.sw    	24(r1),r4	 # SI store
	l.ori   	r24,r3,0	 # move reg to reg
	l.sfgesi	r7,0
		l.lwz   	r2, 0(r5)
		l.lwz   	r3, 4(r5)
	l.bnf	.L14276	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
.L13787:
	l.sw    	8(r24),r6	 # SI store
	l.lwz   	r6,24(r1)	 # SI load
		l.sw    	128(r1), r2
		l.sw    	128+4(r1), r3
	l.andi  	r6,r6,0xffff	 # zero_extendqisi2
	l.sw    	16(r1),r6	 # SI store
.L14163:
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	yy_find_shift_action	# delay slot filled
	l.lwz   	r4,16(r1)	 # SI load
	l.sfgtsi	r11,615
	l.bf	.L13788	# delay slot filled
	l.sfgtsi	r11,938
	l.lwz   	r2,0(r24)	 # SI load
	l.addi  	r5,r2,1
	l.sflesi	r5,99
	l.bf	.L13789	# delay slot filled
	l.sw    	0(r24),r5	 # SI store
	l.sw    	0(r24),r2	 # SI store
	l.sfltsi	r2,0
	l.bf	.L13790	# delay slot filled
	l.lwz   	r14,8(r24)	 # SI load
.L14239:
	l.jal   	yy_pop_parser_stack	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r2,0(r24)	 # SI load
	l.sfgesi	r2,0
	l.bf	.L14239
	l.nop			# nop delay slot
.L13790:
	l.movhi  	r4,hi(.LC413)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC413)
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.sb    	20(r14),r7	    # movqi
	l.sw    	8(r24),r14	 # SI store
.L13792:
	l.lwz   	r2,4(r24)	 # SI load
	l.addi  	r2,r2,-1
	l.sw    	4(r24),r2	 # SI store
.L13786:
	l.addi	r1,r1,196
.L14358:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L13788:
	l.bnf	.L14277	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r2,4(r24)	 # SI load
	l.sfgtsi	r2,0
	l.bnf	.L14278	# delay slot filled
	l.lwz   	r5,128(r1)	 # SI load
.L14160:
	l.addi  	r2,r0,3	 # move immediate I
	l.lwz   	r3,8(r24)	 # SI load
	l.sw    	4(r24),r2	 # SI store
	l.lwz   	r4,16(r1)	 # SI load
	l.addi  	r5,r1,128
	l.jal   	yy_destructor.clone.108	# delay slot filled
	l.addi  	r6,r1,132
	l.lwz   	r7,24(r1)	 # SI load
	l.sfnei	r7,0
	l.bf	.L13786
	l.nop			# nop delay slot
	l.lwz   	r2,0(r24)	 # SI load
	l.sfltsi	r2,0
	l.bf	.L14161	# delay slot filled
	l.lwz   	r14,8(r24)	 # SI load
.L14240:
	l.jal   	yy_pop_parser_stack	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r2,0(r24)	 # SI load
	l.sfgesi	r2,0
	l.bf	.L14240
	l.nop			# nop delay slot
.L14161:
	l.j     	.L13786	# delay slot filled
	l.sw    	8(r24),r14	 # SI store
.L13789:
	l.addi  	r2,r2,2
	l.slli  	r5,r5,4
	l.slli  	r2,r2,4
	l.lwz   	r3,128(r1)	 # SI load
	l.add   	r5,r24,r5
	l.add   	r2,r24,r2
	l.addi  	r5,r5,12
	l.sw    	0(r2),r3	 # SI store
	l.lwz   	r3,132(r1)	 # SI load
	l.lwz   	r8,16(r1)	 # SI load
	l.sw    	4(r2),r3	 # SI store
	l.lwz   	r3,136(r1)	 # SI load
	l.sh    	0(r5),r11	 # movhi
	l.sh    	2(r5),r8	 # movhi
	l.j     	.L13792	# delay slot filled
	l.sw    	8(r2),r3	 # SI store
.L14277:
	l.lwz   	r14,0(r24)	 # SI load
	l.slli  	r16,r14,4
	l.addi  	r2,r11,-621
	l.addi  	r11,r11,-616
	l.addi  	r6,r16,12
	l.sw    	104(r1),r3	 # SI store
	l.add   	r6,r24,r6
	l.sw    	108(r1),r3	 # SI store
	l.sw    	112(r1),r3	 # SI store
	l.sw    	28(r1),r11	 # SI store
	l.sw    	20(r1),r6	 # SI store
	l.lwz   	r30,8(r24)	 # SI load
	l.sfgtui	r2,317
	l.bnf	.L14279	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
.L14168:
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r2,r6,0	 # move reg to reg
.L13795:
	l.lwz   	r3,28(r1)	 # SI load
.L14387:
	l.movhi  	r4,hi(yyRuleInfo)
	l.slli  	r8,r3,2
	l.ori   	r4,r4,lo(yyRuleInfo)
	l.lwz   	r3,20(r1)	 # SI load
	l.add   	r8,r8,r4
	l.movhi  	r4,hi(yy_reduce_ofst)
	l.lbz   	r7,2(r8)	 # zero_extendqisi2
	l.slli  	r12,r7,4
	l.ori   	r4,r4,lo(yy_reduce_ofst)
	l.lhz   	r8,0(r8)	 # zero_extendqisi2
	l.sub   	r12,r0,r12
	l.sub   	r5,r5,r7
	l.add   	r11,r3,r12
	l.movhi  	r3,hi(yy_action)
	l.lhz   	r11,0(r11)	 # zero_extendqisi2
	l.add   	r11,r11,r11
	l.ori   	r3,r3,lo(yy_action)
	l.add   	r11,r11,r4
	l.lhs   	r11,0(r11)	 # extendhisi2_no_sext_mem
	l.add   	r11,r11,r8
	l.add   	r11,r11,r11
	l.add   	r11,r11,r3
	l.lhz   	r11,0(r11)	 # zero_extendqisi2
	l.sfgtsi	r11,615
	l.bf	.L14152	# delay slot filled
	l.sw    	0(r24),r5	 # SI store
	l.sfeqi	r7,0
	l.bnf	.L14280	# delay slot filled
	l.addi  	r7,r5,1
	l.sflesi	r7,99
	l.bf	.L14155	# delay slot filled
	l.sw    	0(r24),r7	 # SI store
	l.sw    	0(r24),r5	 # SI store
	l.sfltsi	r5,0
	l.bf	.L14156	# delay slot filled
	l.lwz   	r14,8(r24)	 # SI load
.L14241:
	l.jal   	yy_pop_parser_stack	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r2,0(r24)	 # SI load
	l.sfgesi	r2,0
	l.bf	.L14241
	l.nop			# nop delay slot
.L14156:
	l.movhi  	r4,hi(.LC413)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC413)
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sb    	20(r14),r5	    # movqi
	l.j     	.L14154	# delay slot filled
	l.sw    	8(r24),r14	 # SI store
.L14279:
	l.movhi  	r4,hi(.L13969)
	l.slli  	r2,r2,2
	l.ori   	r4,r4,lo(.L13969)
	l.add   	r2,r2,r4
	l.lwz   	r2,0(r2)	 # SI load
	l.jr    	r2
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L13969:
	.word	.L13796
	.word	.L13797
	.word	.L13798
	.word	.L13799
	.word	.L13800
	.word	.L14168
	.word	.L14168
	.word	.L14168
	.word	.L13801
	.word	.L13802
	.word	.L13802
	.word	.L13802
	.word	.L13803
	.word	.L13803
	.word	.L13804
	.word	.L14168
	.word	.L14168
	.word	.L13805
	.word	.L13806
	.word	.L13807
	.word	.L14168
	.word	.L13808
	.word	.L13809
	.word	.L14168
	.word	.L13810
	.word	.L13810
	.word	.L14168
	.word	.L13811
	.word	.L13812
	.word	.L14168
	.word	.L14168
	.word	.L13813
	.word	.L13814
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L14168
	.word	.L13816
	.word	.L13815
	.word	.L13817
	.word	.L13818
	.word	.L13815
	.word	.L13819
	.word	.L14168
	.word	.L14168
	.word	.L14168
	.word	.L14168
	.word	.L14168
	.word	.L14168
	.word	.L13820
	.word	.L13821
	.word	.L13820
	.word	.L13822
	.word	.L13823
	.word	.L14168
	.word	.L13824
	.word	.L13825
	.word	.L13826
	.word	.L13827
	.word	.L13828
	.word	.L13829
	.word	.L13830
	.word	.L14168
	.word	.L13810
	.word	.L13831
	.word	.L13832
	.word	.L14168
	.word	.L13833
	.word	.L13834
	.word	.L13835
	.word	.L13801
	.word	.L13836
	.word	.L13837
	.word	.L13838
	.word	.L13839
	.word	.L13839
	.word	.L14168
	.word	.L13810
	.word	.L14168
	.word	.L14168
	.word	.L13840
	.word	.L14168
	.word	.L14168
	.word	.L14168
	.word	.L14168
	.word	.L13841
	.word	.L13842
	.word	.L13843
	.word	.L13844
	.word	.L14168
	.word	.L13839
	.word	.L13845
	.word	.L13839
	.word	.L13845
	.word	.L13839
	.word	.L13839
	.word	.L13846
	.word	.L13847
	.word	.L13848
	.word	.L13810
	.word	.L14168
	.word	.L13849
	.word	.L13850
	.word	.L13851
	.word	.L13852
	.word	.L13853
	.word	.L13802
	.word	.L13854
	.word	.L13802
	.word	.L13855
	.word	.L13810
	.word	.L14168
	.word	.L14168
	.word	.L13856
	.word	.L14168
	.word	.L13857
	.word	.L13858
	.word	.L13859
	.word	.L13815
	.word	.L13815
	.word	.L14168
	.word	.L13860
	.word	.L13861
	.word	.L13862
	.word	.L14168
	.word	.L13863
	.word	.L13864
	.word	.L13865
	.word	.L14168
	.word	.L13815
	.word	.L13866
	.word	.L13867
	.word	.L13868
	.word	.L13869
	.word	.L13870
	.word	.L13871
	.word	.L14168
	.word	.L14168
	.word	.L13815
	.word	.L13872
	.word	.L13873
	.word	.L14168
	.word	.L14168
	.word	.L13874
	.word	.L13875
	.word	.L13876
	.word	.L13871
	.word	.L14168
	.word	.L13877
	.word	.L14168
	.word	.L14168
	.word	.L13874
	.word	.L14168
	.word	.L13871
	.word	.L14168
	.word	.L13878
	.word	.L13879
	.word	.L13880
	.word	.L13881
	.word	.L14168
	.word	.L13871
	.word	.L13882
	.word	.L13883
	.word	.L13884
	.word	.L13885
	.word	.L13886
	.word	.L13887
	.word	.L13839
	.word	.L13847
	.word	.L13888
	.word	.L13889
	.word	.L14168
	.word	.L13873
	.word	.L13890
	.word	.L13891
	.word	.L13871
	.word	.L13892
	.word	.L13893
	.word	.L13894
	.word	.L13894
	.word	.L13895
	.word	.L13896
	.word	.L13893
	.word	.L13893
	.word	.L13897
	.word	.L13898
	.word	.L13899
	.word	.L13900
	.word	.L13901
	.word	.L13902
	.word	.L13903
	.word	.L13904
	.word	.L13904
	.word	.L13904
	.word	.L13904
	.word	.L13904
	.word	.L13904
	.word	.L13904
	.word	.L13904
	.word	.L13905
	.word	.L13906
	.word	.L13905
	.word	.L13906
	.word	.L13871
	.word	.L14168
	.word	.L13907
	.word	.L13908
	.word	.L13909
	.word	.L13910
	.word	.L13911
	.word	.L13912
	.word	.L13912
	.word	.L13913
	.word	.L13914
	.word	.L14168
	.word	.L13810
	.word	.L13915
	.word	.L14168
	.word	.L13810
	.word	.L13916
	.word	.L13917
	.word	.L13918
	.word	.L13919
	.word	.L13920
	.word	.L13921
	.word	.L13922
	.word	.L13923
	.word	.L13871
	.word	.L14168
	.word	.L13871
	.word	.L14168
	.word	.L13874
	.word	.L14168
	.word	.L13888
	.word	.L13889
	.word	.L13924
	.word	.L13925
	.word	.L14168
	.word	.L14168
	.word	.L13856
	.word	.L13926
	.word	.L13927
	.word	.L14168
	.word	.L13815
	.word	.L13928
	.word	.L13929
	.word	.L13929
	.word	.L13930
	.word	.L13931
	.word	.L13932
	.word	.L13933
	.word	.L13934
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L13815
	.word	.L14168
	.word	.L14168
	.word	.L13935
	.word	.L13936
	.word	.L13937
	.word	.L13938
	.word	.L13939
	.word	.L13937
	.word	.L13940
	.word	.L13940
	.word	.L13941
	.word	.L14168
	.word	.L14168
	.word	.L14168
	.word	.L13942
	.word	.L13943
	.word	.L13944
	.word	.L13945
	.word	.L13946
	.word	.L13947
	.word	.L13948
	.word	.L13949
	.word	.L13950
	.word	.L13951
	.word	.L13952
	.word	.L13925
	.word	.L13953
	.word	.L13954
	.word	.L13955
	.word	.L13956
	.word	.L14168
	.word	.L13942
	.word	.L14168
	.word	.L14168
	.word	.L13957
	.word	.L13958
	.word	.L13959
	.word	.L13960
	.word	.L13961
	.word	.L13962
	.word	.L13963
	.word	.L14168
	.word	.L14168
	.word	.L13964
	.word	.L13965
	.word	.L13966
	.word	.L14168
	.word	.L14168
	.word	.L13967
	.word	.L14168
	.word	.L13968
	.word	.L13968
	.word	.L13968
	.word	.L14168
	.word	.L13968
	.section .text
.L14152:
	l.sfltsi	r5,0
	l.bf	.L14158	# delay slot filled
	l.lwz   	r14,8(r24)	 # SI load
.L14242:
	l.jal   	yy_pop_parser_stack	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.lwz   	r2,0(r24)	 # SI load
	l.sfgesi	r2,0
	l.bf	.L14242
	l.nop			# nop delay slot
.L14158:
	l.sw    	8(r24),r14	 # SI store
.L14154:
	l.lwz   	r8,24(r1)	 # SI load
	l.sfeqi	r8,252
	l.bf	.L13786
	l.nop			# nop delay slot
	l.lwz   	r2,0(r24)	 # SI load
	l.sfgesi	r2,0
	l.bf	.L14163
	l.nop			# nop delay slot
	l.j     	.L14358	# delay slot filled
	l.addi	r1,r1,196
.L14278:
	l.lwz   	r2,8(r24)	 # SI load
	l.sw    	116(r1),r5	 # SI store
	l.lwz   	r5,132(r1)	 # SI load
	l.movhi  	r4,hi(.LC420)
	l.sw    	120(r1),r5	 # SI store
	l.lwz   	r5,136(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.sw    	124(r1),r5	 # SI store
	l.ori   	r4,r4,lo(.LC420)
	l.addi  	r5,r1,116
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.sb    	20(r2),r6	    # movqi
	l.j     	.L14160	# delay slot filled
	l.sw    	8(r24),r2	 # SI store
.L14280:
	l.addi  	r12,r12,16
	l.lwz   	r4,20(r1)	 # SI load
	l.addi  	r5,r5,1
	l.add   	r7,r4,r12
	l.lwz   	r3,108(r1)	 # SI load
	l.sw    	0(r24),r5	 # SI store
	l.sh    	0(r7),r11	 # movhi
	l.sh    	2(r7),r8	 # movhi
	l.sw    	8(r7),r3	 # SI store
	l.sw    	4(r7),r2	 # SI store
	l.j     	.L14154	# delay slot filled
	l.sw    	12(r7),r6	 # SI store
.L14276:
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	4(r24),r5	 # SI store
	l.addi  	r5,r0,0	 # movhi: move immediate
	l.sw    	0(r24),r4	 # SI store
	l.sh    	12(r24),r5	 # movhi
	l.j     	.L13787	# delay slot filled
	l.sh    	14(r24),r5	 # movhi
.L14155:
	l.addi  	r5,r5,2
	l.slli  	r3,r7,4
	l.slli  	r5,r5,4
	l.lwz   	r12,108(r1)	 # SI load
	l.add   	r3,r24,r3
	l.add   	r5,r24,r5
	l.addi  	r7,r3,12
	l.sw    	4(r5),r12	 # SI store
	l.lwz   	r12,112(r1)	 # SI load
	l.sw    	0(r5),r2	 # SI store
	l.sw    	8(r5),r12	 # SI store
	l.sh    	0(r7),r11	 # movhi
	l.sh    	2(r7),r8	 # movhi
	l.j     	.L14154	# delay slot filled
	l.sw    	24(r3),r6	 # SI store
.L13801:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,7	 # move immediate I
.L13821:
	l.lwz   	r11,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3AddDefaultValue	# delay slot filled
	l.lwz   	r4,-12(r11)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13820:
	l.addi  	r2,r14,1
	l.ori   	r3,r30,0	 # move reg to reg
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
	l.jal   	sqlite3AddDefaultValue	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13819:
	l.addi  	r6,r14,1
	l.add   	r16,r24,r16
	l.slli  	r6,r6,4
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r3,20(r16)	 # SI load
	l.ori   	r4,r4,65535
	l.add   	r6,r24,r6
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r6,0(r6)	 # SI load
	l.and   	r3,r3,r4
	l.lwz   	r2,-12(r11)	 # SI load
	l.add   	r3,r6,r3
	l.lwz   	r7,108(r1)	 # SI load
	l.movhi 	r6,hi(-1073741824)	 # move immediate M
	l.sub   	r3,r3,r2
	l.and   	r7,r7,r6
	l.and   	r3,r3,r4
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r7,r3
	l.j     	.L13795	# delay slot filled
	l.sw    	108(r1),r3	 # SI store
.L13818:
	l.addi  	r6,r14,1
	l.add   	r16,r24,r16
	l.slli  	r6,r6,4
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r3,20(r16)	 # SI load
	l.ori   	r4,r4,65535
	l.add   	r6,r24,r6
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r6,0(r6)	 # SI load
	l.and   	r3,r3,r4
	l.lwz   	r2,-76(r11)	 # SI load
	l.add   	r3,r6,r3
	l.lwz   	r7,108(r1)	 # SI load
	l.movhi 	r6,hi(-1073741824)	 # move immediate M
	l.sub   	r3,r3,r2
	l.and   	r7,r7,r6
	l.and   	r3,r3,r4
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r7,r3
	l.j     	.L13795	# delay slot filled
	l.sw    	108(r1),r3	 # SI store
.L13817:
	l.addi  	r6,r14,1
	l.add   	r16,r24,r16
	l.slli  	r6,r6,4
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r3,20(r16)	 # SI load
	l.ori   	r11,r11,65535
	l.add   	r6,r24,r6
	l.lwz   	r8,20(r1)	 # SI load
	l.lwz   	r6,0(r6)	 # SI load
	l.and   	r3,r3,r11
	l.lwz   	r2,-44(r8)	 # SI load
	l.add   	r3,r6,r3
	l.lwz   	r7,108(r1)	 # SI load
	l.movhi 	r4,hi(-1073741824)	 # move immediate M
	l.sub   	r3,r3,r2
	l.and   	r7,r7,r4
	l.and   	r3,r3,r11
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r7,r3
	l.j     	.L13795	# delay slot filled
	l.sw    	108(r1),r3	 # SI store
.L13816:
	l.lwz   	r2,476(r30)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L14188	# delay slot filled
	l.lwz   	r16,0(r30)	 # SI load
	l.lwz   	r12,12(r2)	 # SI load
	l.addi  	r12,r12,-1
	l.sfltsi	r12,0
	l.bf	.L14189
	l.nop			# nop delay slot
	l.slli  	r5,r12,2
	l.slli  	r12,r12,4
	l.lwz   	r3,16(r2)	 # SI load
	l.addi  	r14,r14,1
	l.add   	r2,r5,r12
	l.slli  	r14,r14,4
	l.add   	r2,r3,r2
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,8(r2)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.add   	r14,r24,r14
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3AffinityType	# delay slot filled
	l.sw    	8(r2),r11	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	18(r2),r11	    # movqi
	l.ori   	r2,r6,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13815:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
		l.lwz   	r7, 0(r2)
		l.lwz   	r8, 4(r2)
		l.sw    	104(r1), r7
		l.sw    	104+4(r1), r8
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
.L13814:
	l.lwz   	r18,476(r30)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L14281	# delay slot filled
	l.lwz   	r26,0(r30)	 # SI load
	l.lwz   	r3,12(r18)	 # SI load
	l.lwz   	r2,88(r26)	 # SI load
	l.sflts 	r3,r2
	l.bnf	.L14282	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r16,r14,1
	l.slli  	r2,r16,4
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.add   	r4,r24,r2
	l.sfeqi	r11,0
	l.bf	.L14272	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r14,12(r18)	 # SI load
	l.sflesi	r14,0
	l.bf	.L14283	# delay slot filled
	l.movhi  	r5,hi(sqlite3UpperToLower)
	l.lbz   	r2,0(r11)	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3UpperToLower)
	l.addi  	r22,r0,0	 # move immediate I
	l.add   	r2,r2,r5
	l.addi  	r6,r11,1
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.ori   	r28,r22,0	 # move reg to reg
	l.sw    	32(r1),r2	 # SI store
	l.sw    	36(r1),r6	 # SI store
	l.j     	.L13997	# delay slot filled
	l.lwz   	r2,16(r18)	 # SI load
.L13996:
	l.addi  	r28,r28,1
.L14374:
	l.sfgts 	r14,r28
	l.bnf	.L13995	# delay slot filled
	l.addi  	r22,r22,20
.L13997:
	l.add   	r4,r2,r22
	l.movhi  	r7,hi(sqlite3UpperToLower)
	l.lwz   	r4,0(r4)	 # SI load
	l.ori   	r7,r7,lo(sqlite3UpperToLower)
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.add   	r5,r5,r7
	l.lwz   	r8,32(r1)	 # SI load
	l.lbz   	r5,0(r5)	 # zero_extendqisi2
	l.sfne 	r5,r8
	l.bf	.L13996	# delay slot filled
	l.lwz   	r3,36(r1)	 # SI load
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r4,r4,1
	l.sfnei	r11,0
	l.bf	.L14374	# delay slot filled
	l.addi  	r28,r28,1
	l.addi  	r28,r28,-1
	l.movhi  	r4,hi(.LC418)
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC418)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r20	 # SI store
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
.L14272:
	l.lwz   	r14,0(r24)	 # SI load
.L13993:
	l.slli  	r2,r16,4
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r2,r24,r2
		l.lwz   	r3, 0(r2)
		l.lwz   	r4, 4(r2)
		l.sw    	104(r1), r3
		l.sw    	104+4(r1), r4
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
.L13813:
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.lwz   	r3,464(r30)	 # SI load
	l.ori   	r7,r7,65535
	l.lwz   	r6,460(r30)	 # SI load
	l.and   	r3,r3,r7
	l.lwz   	r8,20(r1)	 # SI load
	l.add   	r3,r6,r3
	l.lwz   	r2,-28(r8)	 # SI load
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r7,108(r1)	 # SI load
	l.sub   	r3,r3,r2
	l.movhi 	r11,hi(-1073741824)	 # move immediate M
	l.ori   	r4,r4,65535
	l.and   	r7,r7,r11
	l.and   	r3,r3,r4
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r7,r3
	l.j     	.L13795	# delay slot filled
	l.sw    	108(r1),r3	 # SI store
.L13812:
	l.addi  	r2,r14,1
	l.addi  	r4,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.add   	r2,r24,r2
	l.jal   	sqlite3EndTable	# delay slot filled
	l.lwz   	r6,0(r2)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13811:
	l.addi  	r5,r14,1
	l.lwz   	r6,20(r1)	 # SI load
	l.slli  	r5,r5,4
	l.addi  	r4,r6,-12
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3EndTable	# delay slot filled
	l.add   	r5,r24,r5
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13810:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L13967:
	l.jal   	addArgumentToVtab	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.movhi 	r5,hi(-1073741824)	 # move immediate M
	l.lwz   	r2,496(r30)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.and   	r2,r2,r5
	l.sw    	492(r30),r6	 # SI store
	l.sw    	496(r30),r2	 # SI store
	l.ori   	r2,r6,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13853:
	l.addi  	r16,r14,1
	l.slli  	r2,r16,4
	l.add   	r2,r24,r2
	l.lwz   	r3,0(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14008	# delay slot filled
	l.lwz   	r11,20(r1)	 # SI load
	l.lbz   	r11,-9(r11)	 # zero_extendqisi2
	l.sb    	4(r3),r11	    # movqi
	l.lwz   	r4,20(r1)	 # SI load
	l.lwz   	r2,0(r2)	 # SI load
	l.lwz   	r3,-28(r4)	 # SI load
	l.sw    	28(r2),r3	 # SI store
	l.slli  	r2,r16,4
.L14362:
	l.lwz   	r5,0(r24)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r2,r24,r2
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13852:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13839:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13838:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,6	 # move immediate I
.L13837:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,9	 # move immediate I
.L13836:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,8	 # move immediate I
.L13953:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,3	 # move immediate I
.L13835:
	l.addi  	r2,r14,1
	l.movhi 	r3,hi(16711680)	 # move immediate M
	l.slli  	r2,r2,4
	l.sw    	108(r1),r3	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r2,r24,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.slli  	r2,r2,16
.L13834:
	l.addi  	r2,r14,1
	l.ori   	r3,r0,65280	 # move immediate K
	l.slli  	r2,r2,4
	l.sw    	108(r1),r3	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r2,r24,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.slli  	r2,r2,8
.L13833:
	l.addi  	r2,r14,1
	l.addi  	r3,r0,255	 # move immediate I
	l.slli  	r2,r2,4
	l.sw    	108(r1),r3	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r2,r24,r2
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13966:
	l.lwz   	r2,0(r30)	 # SI load
	l.movhi 	r7,hi(524288)	 # move immediate M
	l.lwz   	r2,12(r2)	 # SI load
	l.and   	r2,r2,r7
	l.sfeqi	r2,0
	l.bnf	.L14284	# delay slot filled
	l.lwz   	r8,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r8,-44
	l.addi  	r5,r8,-28
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r7,r2,0	 # move reg to reg
	l.addi  	r8,r0,1	 # move immediate I
	l.jal   	sqlite3StartTable	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r20,476(r30)	 # SI load
	l.addi  	r11,r11,-48
	l.sfnei	r20,0
	l.bnf	.L14285	# delay slot filled
	l.sw    	32(r1),r11	 # SI store
	l.lwz   	r3,64(r30)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L14286	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.movhi  	r2,hi(.LC441)
	l.lwz   	r5,72(r20)	 # SI load
	l.ori   	r2,r2,lo(.LC441)
	l.lwz   	r22,0(r30)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L14147	# delay slot filled
	l.lwz   	r18,0(r2)	 # SI load
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,4(r22)	 # SI load
	l.j     	.L14148	# delay slot filled
	l.ori   	r18,r2,0	 # move reg to reg
.L14149:
	l.lwz   	r4,8(r22)	 # SI load
	l.add   	r4,r4,r2
	l.lwz   	r4,20(r4)	 # SI load
	l.sfeq 	r5,r4
	l.bf	.L14147	# delay slot filled
	l.addi  	r2,r2,24
	l.addi  	r18,r18,1
.L14148:
	l.sflts 	r18,r3
	l.bf	.L14149
	l.nop			# nop delay slot
.L14147:
	l.addi  	r5,r14,1
	l.lbz   	r2,34(r20)	 # zero_extendqisi2
	l.slli  	r5,r5,4
	l.ori   	r2,r2,16
	l.ori   	r3,r22,0	 # move reg to reg
	l.add   	r28,r24,r5
	l.addi  	r5,r0,0	 # move immediate I
	l.sb    	34(r20),r2	    # movqi
	l.ori   	r4,r28,0	 # move reg to reg
	l.sw    	60(r20),r5	 # SI store
	l.addi  	r26,r20,60
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.addi  	r14,r20,64
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	addModuleArgument.clone.151	# delay slot filled
	l.add   	r16,r24,r16
	l.add   	r3,r18,r18
	l.lwz   	r2,8(r22)	 # SI load
	l.add   	r18,r3,r18
	l.ori   	r3,r22,0	 # move reg to reg
	l.slli  	r18,r18,3
	l.add   	r2,r2,r18
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	addModuleArgument.clone.151	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.lwz   	r4,4(r20)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.jal   	addModuleArgument.clone.151	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.movhi 	r8,hi(1073676288)	 # move immediate M
	l.lwz   	r5,20(r16)	 # SI load
	l.ori   	r8,r8,65535
	l.lwz   	r6,0(r28)	 # SI load
	l.lwz   	r7,32(r1)	 # SI load
	l.and   	r5,r5,r8
	l.lwz   	r2,4(r7)	 # SI load
	l.add   	r5,r6,r5
	l.lwz   	r3,456(r30)	 # SI load
	l.movhi 	r11,hi(-1073741824)	 # move immediate M
	l.sub   	r2,r5,r2
	l.and   	r3,r3,r11
	l.and   	r2,r2,r8
	l.or    	r2,r3,r2
	l.sw    	456(r30),r2	 # SI store
	l.lwz   	r2,64(r20)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L14287	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r5,0(r30)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.lwz   	r5,8(r5)	 # SI load
	l.add   	r7,r5,r18
	l.addi  	r4,r0,29	 # move immediate I
	l.lwz   	r5,4(r20)	 # SI load
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.lwz   	r7,0(r7)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13832:
	l.addi  	r2,r14,1
	l.add   	r16,r24,r16
	l.slli  	r2,r2,4
	l.lwz   	r3,20(r16)	 # SI load
	l.lwz   	r4,20(r1)	 # SI load
	l.xori  	r3,r3,0xffff
	l.lwz   	r6,-12(r4)	 # SI load
	l.add   	r2,r24,r2
	l.and   	r3,r3,r6
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.or    	r2,r3,r2
.L13831:
	l.movhi  	r11,hi(.LC440)
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r11,r11,lo(.LC440)
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r11)	 # SI load
.L13830:
	l.lwz   	r2,476(r30)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r5,r14,1
	l.lwz   	r18,0(r30)	 # SI load
	l.slli  	r5,r5,4
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r20,12(r2)	 # SI load
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.add   	r4,r24,r5
	l.sfnei	r11,0
	l.bnf	.L14288	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3LocateCollSeq.clone.180	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14002	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi  	r3,r20,-1
	l.lwz   	r6,16(r2)	 # SI load
	l.slli  	r7,r3,2
	l.slli  	r5,r3,4
	l.lwz   	r2,20(r2)	 # SI load
	l.add   	r5,r7,r5
	l.sfnei	r2,0
	l.add   	r5,r6,r5
	l.bf	.L14243	# delay slot filled
	l.sw    	12(r5),r14	 # SI store
	l.j     	.L14357	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14004:
	l.lwz   	r2,32(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L14290	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14243:
	l.lwz   	r4,8(r2)	 # SI load
	l.lwz   	r4,0(r4)	 # SI load
	l.sfne 	r3,r4
	l.bf	.L14004
	l.nop			# nop delay slot
	l.lwz   	r4,44(r2)	 # SI load
	l.lwz   	r6,12(r5)	 # SI load
	l.j     	.L14004	# delay slot filled
	l.sw    	0(r4),r6	 # SI store
.L13829:
	l.addi  	r3,r14,1
	l.lwz   	r2,476(r30)	 # SI load
	l.slli  	r3,r3,4
	l.sfeqi	r2,0
	l.add   	r3,r24,r3
	l.bf	.L14192	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r2,36(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L14193
	l.nop			# nop delay slot
	l.sb    	16(r2),r3	    # movqi
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13828:
	l.addi  	r2,r14,1
	l.lwz   	r8,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.addi  	r5,r8,-28
	l.lwz   	r6,-12(r8)	 # SI load
	l.add   	r2,r24,r2
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r7,0(r2)	 # SI load
	l.jal   	sqlite3CreateForeignKey	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13846:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,4	 # move immediate I
.L13845:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,99	 # move immediate I
.L13844:
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,-92(r5)	 # SI load
	l.lwz   	r6,-28(r7)	 # SI load
	l.addi  	r5,r5,-44
	l.jal   	sqlite3CreateForeignKey	# delay slot filled
	l.lwz   	r7,-12(r7)	 # SI load
	l.addi  	r3,r14,1
	l.lwz   	r2,476(r30)	 # SI load
	l.slli  	r3,r3,4
	l.sfnei	r2,0
	l.add   	r3,r24,r3
	l.bnf	.L14291	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r2,36(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L14292
	l.nop			# nop delay slot
	l.sb    	16(r2),r3	    # movqi
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13843:
	l.lwz   	r2,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3AddCheckConstraint	# delay slot filled
	l.lwz   	r4,-28(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13842:
	l.addi  	r2,r14,1
	l.addi  	r4,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.lwz   	r11,20(r1)	 # SI load
	l.ori   	r5,r4,0	 # move reg to reg
	l.add   	r2,r24,r2
	l.lwz   	r7,-28(r11)	 # SI load
	l.lwz   	r8,0(r2)	 # SI load
	l.ori   	r6,r4,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.sw    	0(r1),r4	 # SI store
	l.sw    	4(r1),r4	 # SI store
	l.sw    	8(r1),r4	 # SI store
	l.jal   	sqlite3CreateIndex	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13841:
	l.addi  	r2,r14,1
	l.lwz   	r8,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r6,-28(r8)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.add   	r2,r24,r2
	l.lwz   	r4,-44(r8)	 # SI load
	l.lwz   	r5,0(r2)	 # SI load
	l.jal   	sqlite3AddPrimaryKey	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13840:
	l.lwz   	r7,20(r1)	 # SI load
		l.lwz   	r6, -12(r7)
		l.lwz   	r7, -12+4(r7)
		l.sw    	104(r1), r6
		l.sw    	104+4(r1), r7
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
.L13965:
	l.addi  	r2,r14,1
	l.ori   	r3,r30,0	 # move reg to reg
	l.slli  	r2,r2,4
	l.jal   	sqlite3VtabFinishParse	# delay slot filled
	l.add   	r4,r24,r2
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13850:
	l.addi  	r2,r14,1
	l.lwz   	r4,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r6,-12(r4)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.add   	r2,r24,r2
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DropTable	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13849:
	l.addi  	r7,r14,1
	l.lwz   	r11,20(r1)	 # SI load
	l.slli  	r7,r7,4
	l.lwz   	r2,-92(r11)	 # SI load
	l.lwz   	r12,-60(r11)	 # SI load
	l.add   	r7,r24,r7
	l.addi  	r5,r11,-44
	l.addi  	r6,r11,-28
	l.lwz   	r7,0(r7)	 # SI load
	l.ori   	r8,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r11,-108
	l.jal   	sqlite3CreateView.clone.175	# delay slot filled
	l.sw    	0(r1),r12	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13848:
	l.addi  	r2,r14,1
	l.lwz   	r8,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r6,-12(r8)	 # SI load
	l.add   	r2,r24,r2
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DropTable	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13847:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,5	 # move immediate I
.L13851:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,5	 # movqi: move immediate
	l.slli  	r2,r2,4
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.sb    	88(r1),r6	    # movqi
	l.add   	r2,r24,r2
	l.sb    	89(r1),r7	    # movqi
	l.addi  	r8,r0,0	 # move immediate I
	l.addi  	r5,r1,88
	l.lwz   	r4,0(r2)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.sw    	92(r1),r8	 # SI store
	l.sw    	96(r1),r8	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	100(r1),r8	 # SI store
	l.lwz   	r4,0(r2)	 # SI load
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13827:
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3AddCheckConstraint	# delay slot filled
	l.lwz   	r4,-12(r7)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13826:
	l.addi  	r2,r14,1
	l.addi  	r4,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r6,r4,0	 # move reg to reg
	l.add   	r2,r24,r2
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r8,0(r2)	 # SI load
	l.ori   	r7,r4,0	 # move reg to reg
	l.sw    	0(r1),r4	 # SI store
	l.sw    	4(r1),r4	 # SI store
	l.sw    	8(r1),r4	 # SI store
	l.jal   	sqlite3CreateIndex	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13825:
	l.addi  	r2,r14,1
	l.lwz   	r6,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r5,-12(r6)	 # SI load
	l.lwz   	r7,-28(r6)	 # SI load
	l.add   	r2,r24,r2
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r6,0(r2)	 # SI load
	l.jal   	sqlite3AddPrimaryKey	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13909:
	l.lwz   	r11,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r18,r11,-32
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,71	 # move immediate I
	l.lwz   	r5,4(r18)	 # SI load
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.lwz   	r3,4(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14293	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r5,r14,1
	l.lwz   	r6,12(r3)	 # SI load
	l.slli  	r5,r5,4
	l.sw    	12(r11),r6	 # SI store
	l.add   	r16,r24,r16
	l.add   	r5,r24,r5
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.movhi 	r4,hi(-1073741824)	 # move immediate M
	l.add   	r3,r6,r3
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r11)	 # SI load
	l.ori   	r6,r6,65535
	l.and   	r5,r5,r4
	l.and   	r3,r3,r6
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r11),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13908:
	l.lwz   	r5,20(r1)	 # SI load
	l.add   	r16,r24,r16
	l.addi  	r18,r5,-16
	l.addi  	r6,r0,0	 # move immediate I
	l.lhz   	r4,14(r16)	 # zero_extendqisi2
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r5,4(r18)	 # SI load
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.lwz   	r3,4(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14294	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r6,r14,1
	l.lwz   	r5,12(r3)	 # SI load
	l.slli  	r6,r6,4
	l.sw    	12(r11),r5	 # SI store
	l.movhi 	r8,hi(1073676288)	 # move immediate M
	l.add   	r6,r24,r6
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r7,0(r6)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r7,r3
	l.lwz   	r5,16(r11)	 # SI load
	l.add   	r3,r6,r3
	l.movhi 	r7,hi(-1073741824)	 # move immediate M
	l.ori   	r8,r8,65535
	l.and   	r5,r5,r7
	l.and   	r3,r3,r8
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r11),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13907:
	l.lwz   	r5,20(r1)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r16,r5,-16
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r6,r4,0	 # move reg to reg
	l.lwz   	r3,0(r30)	 # SI load
	l.lwz   	r5,4(r16)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r18,r7,-48
	l.lwz   	r3,0(r30)	 # SI load
	l.lwz   	r5,4(r18)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r3,r14,1
	l.slli  	r3,r3,4
	l.add   	r3,r24,r3
	l.lwz   	r5,0(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L14040	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r30)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r2,r11,0	 # move reg to reg
.L14040:
	l.lwz   	r8,20(r1)	 # SI load
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r14,r8,-32
	l.addi  	r5,r8,-28
	l.jal   	sqlite3ExprFunction	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r2,12(r14)	 # SI load
	l.sfnei	r2,0
	l.bf	.L14041	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
.L14042:
	l.lwz   	r3,4(r18)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L14295	# delay slot filled
	l.lwz   	r5,4(r16)	 # SI load
	l.lwz   	r7,12(r3)	 # SI load
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sw    	12(r2),r7	 # SI store
	l.lwz   	r6,16(r2)	 # SI load
	l.lwz   	r12,12(r5)	 # SI load
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r7,16(r5)	 # SI load
	l.sub   	r3,r12,r3
	l.movhi 	r11,hi(-1073741824)	 # move immediate M
	l.add   	r3,r7,r3
	l.ori   	r4,r4,65535
	l.and   	r6,r6,r11
	l.and   	r3,r3,r4
	l.lhz   	r5,2(r2)	 # zero_extendqisi2
	l.or    	r3,r6,r3
	l.ori   	r5,r5,128
	l.sw    	16(r2),r3	 # SI store
	l.sh    	2(r2),r5	 # movhi
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13906:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,1	 # move immediate I
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
		l.lwz   	r3, 0(r2)
		l.lwz   	r4, 4(r2)
		l.sw    	104(r1), r3
		l.sw    	104+4(r1), r4
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
.L13905:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
		l.lwz   	r7, 0(r2)
		l.lwz   	r8, 4(r2)
		l.sw    	104(r1), r7
		l.sw    	104+4(r1), r8
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
.L13927:
	l.lwz   	r8,20(r1)	 # SI load
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r2,-8(r8)	 # SI load
	l.ori   	r11,r11,65535
	l.and   	r2,r2,r11
	l.sfeqi	r2,0
	l.bf	.L14077	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r4,r0,151	 # move immediate I
	l.lwz   	r6,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r6,-12
	l.jal   	sqlite3ExprSetColl	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14077:
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r6,r7,-28
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.movhi  	r5,hi(.LC424)
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC424)
	l.jal   	sqlite3ExprListCheckLength	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r2,0
	l.bnf	.L14296
	l.nop			# nop delay slot
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r5,r14,1
	l.addi  	r3,r3,-1
	l.slli  	r5,r5,4
	l.slli  	r3,r3,4
	l.lwz   	r6,12(r2)	 # SI load
	l.add   	r5,r24,r5
	l.add   	r3,r6,r3
	l.lwz   	r5,0(r5)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	8(r3),r5	    # movqi
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13926:
	l.lwz   	r3,20(r1)	 # SI load
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r2,-8(r3)	 # SI load
	l.ori   	r4,r4,65535
	l.and   	r2,r2,r4
	l.sfeqi	r2,0
	l.bf	.L14075	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r4,r0,151	 # move immediate I
	l.lwz   	r6,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r5,r6,-12
	l.jal   	sqlite3ExprSetColl	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14075:
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r4,-60(r7)	 # SI load
	l.addi  	r6,r7,-28
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
	l.movhi  	r5,hi(.LC424)
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC424)
	l.jal   	sqlite3ExprListCheckLength	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r2,0
	l.bnf	.L14297
	l.nop			# nop delay slot
	l.lwz   	r3,0(r2)	 # SI load
	l.addi  	r5,r14,1
	l.addi  	r3,r3,-1
	l.slli  	r5,r5,4
	l.slli  	r3,r3,4
	l.lwz   	r6,12(r2)	 # SI load
	l.add   	r5,r24,r5
	l.add   	r3,r6,r3
	l.lwz   	r5,0(r5)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	8(r3),r5	    # movqi
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13956:
	l.addi  	r2,r14,1
	l.addi  	r7,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.movhi  	r5,hi(detach_func.15343)
	l.ori   	r3,r30,0	 # move reg to reg
	l.add   	r2,r24,r2
	l.ori   	r5,r5,lo(detach_func.15343)
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r4,r0,25	 # move immediate I
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r8,r7,0	 # move reg to reg
	l.jal   	codeAttach	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13912:
	l.addi  	r14,r14,1
	l.lwz   	r7,20(r1)	 # SI load
	l.slli  	r14,r14,4
	l.addi  	r16,r7,-16
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r14,r24,r14
	l.lhz   	r4,2(r16)	 # zero_extendqisi2
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r5,0(r14)	 # SI load
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.lwz   	r3,0(r14)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14298	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r6,4(r16)	 # SI load
	l.lwz   	r5,16(r11)	 # SI load
	l.sw    	12(r11),r6	 # SI store
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r6,4(r16)	 # SI load
	l.lwz   	r12,12(r3)	 # SI load
	l.lwz   	r7,16(r3)	 # SI load
	l.sub   	r3,r12,r6
	l.movhi 	r8,hi(-1073741824)	 # move immediate M
	l.add   	r3,r7,r3
	l.ori   	r11,r11,65535
	l.and   	r5,r5,r8
	l.and   	r3,r3,r11
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13911:
	l.lwz   	r2,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r18,r2,-48
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,72	 # move immediate I
	l.lwz   	r5,4(r18)	 # SI load
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.lwz   	r3,4(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14299	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r5,r14,1
	l.lwz   	r6,12(r3)	 # SI load
	l.slli  	r5,r5,4
	l.sw    	12(r11),r6	 # SI store
	l.add   	r16,r24,r16
	l.add   	r5,r24,r5
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.movhi 	r4,hi(-1073741824)	 # move immediate M
	l.add   	r3,r6,r3
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r11)	 # SI load
	l.ori   	r6,r6,65535
	l.and   	r5,r5,r4
	l.and   	r3,r3,r6
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r11),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13878:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13894:
	l.addi  	r7,r14,1
	l.addi  	r5,r0,0	 # move immediate I
	l.slli  	r7,r7,4
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.add   	r7,r24,r7
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13893:
	l.addi  	r7,r14,1
	l.add   	r16,r24,r16
	l.slli  	r7,r7,4
	l.addi  	r5,r0,0	 # move immediate I
	l.lhz   	r4,14(r16)	 # zero_extendqisi2
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.add   	r7,r24,r7
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13892:
	l.lwz   	r7,20(r1)	 # SI load
	l.lwz   	r2,-12(r7)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.addi  	r6,r14,1
	l.addi  	r3,r7,-32
	l.slli  	r6,r6,4
	l.lwz   	r7,4(r3)	 # SI load
	l.add   	r16,r24,r16
	l.sw    	12(r2),r7	 # SI store
	l.add   	r6,r24,r6
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r7,0(r6)	 # SI load
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r7,r3
	l.movhi 	r8,hi(-1073741824)	 # move immediate M
	l.lwz   	r7,16(r2)	 # SI load
	l.add   	r3,r6,r3
	l.ori   	r11,r11,65535
	l.and   	r7,r7,r8
	l.and   	r3,r3,r11
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r7,r3
	l.j     	.L13795	# delay slot filled
	l.sw    	16(r2),r3	 # SI store
.L13891:
	l.addi  	r5,r14,1
	l.lwz   	r3,0(r30)	 # SI load
	l.slli  	r5,r5,4
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3IdListAppend	# delay slot filled
	l.add   	r5,r24,r5
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13924:
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r8,20(r1)	 # SI load
	l.ori   	r6,r4,0	 # move reg to reg
	l.addi  	r5,r8,-44
	l.jal   	sqlite3SrcListAppend	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
	l.addi  	r13,r14,1
	l.lwz   	r2,20(r1)	 # SI load
	l.slli  	r13,r13,4
	l.lwz   	r7,-12(r2)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.lwz   	r2,-140(r2)	 # SI load
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r12,-108(r3)	 # SI load
	l.ori   	r6,r11,0	 # move reg to reg
	l.add   	r13,r24,r13
	l.addi  	r14,r3,-156
	l.addi  	r4,r5,-92
	l.ori   	r8,r2,0	 # move reg to reg
	l.addi  	r5,r5,-76
	l.addi  	r11,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.sw    	0(r1),r14	 # SI store
	l.sw    	4(r1),r13	 # SI store
	l.sw    	8(r1),r11	 # SI store
	l.jal   	sqlite3CreateIndex	# delay slot filled
	l.sw    	12(r1),r12	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13923:
	l.addi  	r2,r14,1
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r7,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.ori   	r6,r4,0	 # move reg to reg
	l.lwz   	r5,-28(r7)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.add   	r2,r24,r2
	l.lwz   	r5,0(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13922:
	l.addi  	r2,r14,1
	l.lwz   	r6,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r4,-60(r6)	 # SI load
	l.lwz   	r5,-28(r6)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.add   	r2,r24,r2
	l.lwz   	r5,0(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13921:
	l.lwz   	r6,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r5,-44(r6)	 # SI load
	l.addi  	r4,r0,134	 # move immediate I
	l.lwz   	r6,-12(r6)	 # SI load
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L14074	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r5,-28(r7)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.sw    	28(r11),r5	 # SI store
	l.jal   	sqlite3ExprSetHeight	# delay slot filled
	l.add   	r16,r24,r16
	l.lwz   	r8,20(r1)	 # SI load
	l.addi  	r5,r14,1
	l.addi  	r3,r8,-64
	l.slli  	r5,r5,4
	l.lwz   	r6,4(r3)	 # SI load
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sw    	12(r2),r6	 # SI store
	l.add   	r5,r24,r5
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.movhi 	r11,hi(-1073741824)	 # move immediate M
	l.lwz   	r5,16(r2)	 # SI load
	l.add   	r3,r6,r3
	l.ori   	r4,r4,65535
	l.and   	r5,r5,r11
	l.and   	r3,r3,r4
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13920:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,20	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14073	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhz   	r3,2(r11)	 # zero_extendqisi2
	l.lwz   	r8,20(r1)	 # SI load
	l.ori   	r3,r3,4096
	l.lwz   	r5,-12(r8)	 # SI load
	l.addi  	r6,r14,1
	l.sw    	28(r11),r5	 # SI store
	l.sh    	2(r11),r3	 # movhi
	l.addi  	r5,r8,-48
	l.slli  	r6,r6,4
	l.lwz   	r3,4(r5)	 # SI load
	l.add   	r16,r24,r16
	l.sw    	12(r11),r3	 # SI store
	l.add   	r6,r24,r6
	l.lwz   	r3,4(r5)	 # SI load
	l.lwz   	r6,0(r6)	 # SI load
	l.lwz   	r5,20(r16)	 # SI load
	l.sub   	r3,r6,r3
	l.lwz   	r6,16(r11)	 # SI load
	l.add   	r5,r5,r3
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.movhi 	r11,hi(-1073741824)	 # move immediate M
	l.ori   	r3,r3,65535
	l.and   	r6,r6,r11
	l.and   	r5,r5,r3
	l.ori   	r4,r2,0	 # move reg to reg
	l.or    	r5,r6,r5
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprSetHeight	# delay slot filled
	l.sw    	16(r2),r5	 # SI store
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13916:
	l.lwz   	r5,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r18,r5,-64
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,70	 # move immediate I
	l.lwz   	r5,4(r18)	 # SI load
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14056	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r6,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r5,-12(r6)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3ExprSetHeight	# delay slot filled
	l.sw    	28(r11),r5	 # SI store
	l.lwz   	r8,20(r1)	 # SI load
.L14371:
	l.lwz   	r3,-44(r8)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14375	# delay slot filled
	l.sfnei	r2,0
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,19	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r2,0
.L14375:
	l.bnf	.L14300	# delay slot filled
	l.lwz   	r3,4(r18)	 # SI load
	l.addi  	r5,r14,1
	l.lwz   	r6,12(r3)	 # SI load
	l.slli  	r5,r5,4
	l.sw    	12(r2),r6	 # SI store
	l.add   	r16,r24,r16
	l.add   	r5,r24,r5
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r2)	 # SI load
	l.add   	r3,r6,r3
	l.movhi 	r11,hi(-1073741824)	 # move immediate M
	l.ori   	r4,r4,65535
	l.and   	r5,r5,r11
	l.and   	r3,r3,r4
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13918:
	l.lwz   	r7,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r18,r7,-64
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,70	 # move immediate I
	l.lwz   	r5,4(r18)	 # SI load
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14062	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhz   	r3,2(r11)	 # zero_extendqisi2
	l.lwz   	r8,20(r1)	 # SI load
	l.ori   	r3,r3,4096
	l.lwz   	r5,-12(r8)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.sh    	2(r11),r3	 # movhi
	l.sw    	28(r11),r5	 # SI store
	l.jal   	sqlite3ExprSetHeight	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,20(r1)	 # SI load
.L14370:
	l.lwz   	r3,-44(r4)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14376	# delay slot filled
	l.sfnei	r2,0
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,19	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfnei	r2,0
.L14376:
	l.bnf	.L14301	# delay slot filled
	l.lwz   	r3,4(r18)	 # SI load
	l.addi  	r5,r14,1
	l.lwz   	r6,12(r3)	 # SI load
	l.slli  	r5,r5,4
	l.sw    	12(r2),r6	 # SI store
	l.add   	r16,r24,r16
	l.add   	r5,r24,r5
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r2)	 # SI load
	l.add   	r3,r6,r3
	l.ori   	r7,r7,65535
	l.movhi 	r6,hi(-1073741824)	 # move immediate M
	l.and   	r3,r3,r7
	l.and   	r5,r5,r6
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13914:
	l.addi  	r14,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r14,r14,4
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,92	 # move immediate I
	l.add   	r14,r24,r14
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r5,0(r14)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14302	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,20(r1)	 # SI load
	l.lwz   	r7,16(r11)	 # SI load
	l.addi  	r3,r4,-16
	l.movhi 	r8,hi(-1073741824)	 # move immediate M
	l.lwz   	r6,4(r3)	 # SI load
	l.and   	r7,r7,r8
	l.sw    	12(r11),r6	 # SI store
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r12,12(r5)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r5,16(r5)	 # SI load
	l.sub   	r3,r12,r3
	l.ori   	r11,r11,65535
	l.add   	r3,r5,r3
	l.addi  	r6,r0,0	 # move immediate I
	l.and   	r3,r3,r11
	l.or    	r3,r7,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13919:
	l.addi  	r16,r14,1
	l.lwz   	r8,20(r1)	 # SI load
	l.slli  	r18,r16,4
	l.addi  	r14,r8,-12
	l.lwz   	r3,0(r30)	 # SI load
	l.add   	r18,r24,r18
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3SrcListAppend	# delay slot filled
	l.addi  	r20,r8,-48
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,70	 # move immediate I
	l.lwz   	r5,4(r20)	 # SI load
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14067	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r6,r4,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.ori   	r8,r4,0	 # move reg to reg
	l.ori   	r5,r22,0	 # move reg to reg
	l.sw    	0(r1),r4	 # SI store
	l.sw    	4(r1),r4	 # SI store
	l.sw    	8(r1),r4	 # SI store
	l.jal   	sqlite3SelectNew.clone.150	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
	l.lhz   	r3,2(r2)	 # zero_extendqisi2
	l.ori   	r3,r3,4096
	l.sw    	28(r2),r11	 # SI store
	l.sh    	2(r2),r3	 # movhi
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ExprSetHeight	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r11,20(r1)	 # SI load
.L14369:
	l.lwz   	r3,-28(r11)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14377	# delay slot filled
	l.slli  	r5,r16,4
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,19	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.slli  	r5,r16,4
.L14377:
	l.add   	r5,r24,r5
	l.lwz   	r5,0(r5)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L14071	# delay slot filled
	l.lwz   	r3,4(r20)	 # SI load
	l.ori   	r14,r18,0	 # move reg to reg
.L14071:
	l.sfnei	r2,0
	l.bnf	.L14303	# delay slot filled
	l.movhi 	r4,hi(-1073741824)	 # move immediate M
	l.lwz   	r6,12(r3)	 # SI load
	l.lwz   	r5,16(r2)	 # SI load
	l.sw    	12(r2),r6	 # SI store
	l.lwz   	r6,0(r14)	 # SI load
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r7,4(r14)	 # SI load
	l.sub   	r3,r6,r3
	l.and   	r5,r5,r4
	l.add   	r3,r7,r3
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r7,r7,65535
	l.and   	r3,r3,r7
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13915:
	l.lwz   	r2,20(r1)	 # SI load
	l.addi  	r16,r14,1
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r5,-28(r2)	 # SI load
	l.slli  	r2,r16,4
	l.ori   	r6,r4,0	 # move reg to reg
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.add   	r2,r24,r2
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r7,20(r1)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r14,r7,-64
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,69	 # move immediate I
	l.lwz   	r5,4(r14)	 # SI load
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14051	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sw    	28(r11),r18	 # SI store
	l.lwz   	r8,20(r1)	 # SI load
.L14368:
	l.lwz   	r3,-44(r8)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14054	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,19	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
.L14054:
	l.slli  	r5,r16,4
	l.lwz   	r3,4(r14)	 # SI load
	l.sfnei	r2,0
	l.add   	r5,r24,r5
	l.bnf	.L14304	# delay slot filled
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,12(r3)	 # SI load
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sw    	12(r2),r6	 # SI store
	l.lwz   	r7,16(r2)	 # SI load
	l.lwz   	r6,12(r5)	 # SI load
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r5,16(r5)	 # SI load
	l.sub   	r3,r6,r3
	l.movhi 	r11,hi(-1073741824)	 # move immediate M
	l.add   	r3,r5,r3
	l.ori   	r4,r4,65535
	l.and   	r7,r7,r11
	l.and   	r3,r3,r4
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r7,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13917:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,116	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r5,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14061	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lhz   	r3,2(r11)	 # zero_extendqisi2
	l.lwz   	r6,20(r1)	 # SI load
	l.ori   	r3,r3,4096
	l.lwz   	r5,-12(r6)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.sw    	28(r11),r5	 # SI store
	l.sh    	2(r11),r3	 # movhi
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprSetHeight	# delay slot filled
	l.add   	r16,r24,r16
	l.lwz   	r7,20(r1)	 # SI load
	l.addi  	r5,r14,1
	l.addi  	r3,r7,-32
	l.slli  	r5,r5,4
	l.lwz   	r6,4(r3)	 # SI load
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.sw    	12(r2),r6	 # SI store
	l.add   	r5,r24,r5
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.movhi 	r8,hi(-1073741824)	 # move immediate M
	l.lwz   	r5,16(r2)	 # SI load
	l.add   	r3,r6,r3
	l.ori   	r11,r11,65535
	l.and   	r5,r5,r8
	l.and   	r3,r3,r11
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13913:
	l.addi  	r14,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r14,r14,4
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,91	 # move immediate I
	l.add   	r14,r24,r14
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r5,0(r14)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14305	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,20(r1)	 # SI load
	l.lwz   	r7,16(r11)	 # SI load
	l.addi  	r3,r4,-16
	l.movhi 	r8,hi(-1073741824)	 # move immediate M
	l.lwz   	r6,4(r3)	 # SI load
	l.and   	r7,r7,r8
	l.sw    	12(r11),r6	 # SI store
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r12,12(r5)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r5,16(r5)	 # SI load
	l.sub   	r3,r12,r3
	l.ori   	r11,r11,65535
	l.add   	r3,r5,r3
	l.addi  	r6,r0,0	 # move immediate I
	l.and   	r3,r3,r11
	l.or    	r3,r7,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13902:
	l.lwz   	r11,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r11,-44
	l.jal   	sqlite3ExprFunction	# delay slot filled
	l.addi  	r18,r11,-48
	l.sfnei	r11,0
	l.bnf	.L14306	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r5,r14,1
	l.lwz   	r3,4(r18)	 # SI load
	l.slli  	r5,r5,4
	l.sw    	12(r11),r3	 # SI store
	l.add   	r16,r24,r16
	l.add   	r5,r24,r5
	l.lwz   	r3,4(r18)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.movhi 	r4,hi(-1073741824)	 # move immediate M
	l.add   	r3,r6,r3
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r11)	 # SI load
	l.ori   	r6,r6,65535
	l.and   	r5,r5,r4
	l.and   	r3,r3,r6
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r11),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13796:
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	440(r30),r5	    # movqi
	l.sw    	412(r30),r6	 # SI store
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13940:
	l.add   	r16,r24,r16
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.lhz   	r2,14(r16)	 # zero_extendqisi2
.L13824:
	l.addi  	r3,r14,1
	l.lwz   	r2,476(r30)	 # SI load
	l.slli  	r3,r3,4
	l.sfeqi	r2,0
	l.add   	r3,r24,r3
	l.bf	.L14190	# delay slot filled
	l.lwz   	r7,0(r3)	 # SI load
	l.lwz   	r3,12(r2)	 # SI load
	l.addi  	r3,r3,-1
	l.sfltsi	r3,0
	l.bf	.L14191	# delay slot filled
	l.slli  	r12,r3,2
	l.slli  	r3,r3,4
	l.lwz   	r5,16(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r3,r12,r3
	l.ori   	r2,r6,0	 # move reg to reg
	l.add   	r3,r5,r3
	l.sb    	16(r3),r7	    # movqi
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13823:
	l.addi  	r7,r14,1
	l.addi  	r5,r0,0	 # move immediate I
	l.slli  	r7,r7,4
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.add   	r7,r24,r7
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r4,r0,94	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3AddDefaultValue	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13822:
	l.addi  	r14,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r14,r14,4
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,91	 # move immediate I
	l.add   	r14,r24,r14
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L14000	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,20(r1)	 # SI load
	l.lwz   	r6,16(r11)	 # SI load
	l.addi  	r5,r4,-16
	l.movhi 	r8,hi(-1073741824)	 # move immediate M
	l.lwz   	r7,4(r5)	 # SI load
	l.and   	r6,r6,r8
	l.sw    	12(r11),r7	 # SI store
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r7,4(r5)	 # SI load
	l.lwz   	r12,12(r3)	 # SI load
	l.lwz   	r5,16(r3)	 # SI load
	l.sub   	r3,r12,r7
	l.ori   	r11,r11,65535
	l.add   	r3,r5,r3
	l.and   	r3,r3,r11
	l.or    	r3,r6,r3
	l.sw    	16(r2),r3	 # SI store
.L14000:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3AddDefaultValue	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13938:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,29	 # move immediate I
.L13937:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,33	 # move immediate I
.L13936:
	l.addi  	r3,r14,1
	l.lwz   	r8,20(r1)	 # SI load
	l.slli  	r3,r3,4
	l.lwz   	r11,-156(r8)	 # SI load
	l.addi  	r2,r8,-64
	l.sw    	32(r1),r11	 # SI store
	l.addi  	r4,r8,-112
	l.addi  	r6,r8,-96
	l.lwz   	r7,-76(r8)	 # SI load
	l.lwz   	r11,20(r1)	 # SI load
	l.add   	r3,r24,r3
	l.addi  	r5,r8,-108
	l.lwz   	r8,4(r2)	 # SI load
	l.lwz   	r2,8(r2)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	48(r1),r2	 # SI store
	l.lwz   	r2,-124(r11)	 # SI load
	l.sw    	52(r1),r3	 # SI store
	l.sw    	64(r1),r4	 # SI store
	l.lwz   	r3,32(r1)	 # SI load
	l.sw    	36(r1),r6	 # SI store
	l.sw    	40(r1),r7	 # SI store
	l.sw    	68(r1),r8	 # SI store
	l.sw    	44(r1),r2	 # SI store
	l.lwz   	r26,-28(r11)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14092	# delay slot filled
	l.lwz   	r20,0(r30)	 # SI load
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r2,8(r6)	 # SI load
	l.ori   	r4,r4,65535
	l.and   	r2,r2,r4
	l.sfeqi	r2,0
	l.bf	.L14093	# delay slot filled
	l.movhi  	r4,hi(.LC429)
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC429)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
.L14094:
	l.ori   	r3,r20,0	 # move reg to reg
.L14372:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3IdListDelete	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.lwz   	r4,52(r1)	 # SI load
	l.lwz   	r2,480(r30)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L14307	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r2,36(r1)	 # SI load
.L14361:
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.lwz   	r6,8(r2)	 # SI load
	l.ori   	r3,r3,65535
	l.and   	r6,r6,r3
	l.sfnei	r6,0
	l.bf	.L14115	# delay slot filled
	l.lwz   	r7,36(r1)	 # SI load
	l.lwz   	r5,64(r1)	 # SI load
		l.lwz   	r4, 4(r5)
		l.lwz   	r5, 4+4(r5)
		l.sw    	104(r1), r4
		l.sw    	104+4(r1), r5
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
.L13935:
	l.lwz   	r11,20(r1)	 # SI load
	l.addi  	r5,r14,1
	l.lwz   	r2,-44(r11)	 # SI load
	l.slli  	r5,r5,4
	l.sw    	140(r1),r2	 # SI store
	l.add   	r16,r24,r16
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r3,20(r16)	 # SI load
	l.ori   	r4,r4,65535
	l.add   	r5,r24,r5
	l.and   	r3,r3,r4
	l.lwz   	r5,0(r5)	 # SI load
	l.movhi 	r6,hi(-1073741824)	 # move immediate M
	l.add   	r3,r5,r3
	l.lwz   	r5,144(r1)	 # SI load
	l.sub   	r2,r3,r2
	l.and   	r5,r5,r6
	l.and   	r2,r2,r4
	l.ori   	r3,r30,0	 # move reg to reg
	l.or    	r2,r5,r2
	l.lwz   	r4,-12(r11)	 # SI load
	l.addi  	r5,r1,140
	l.jal   	sqlite3FinishTrigger	# delay slot filled
	l.sw    	144(r1),r2	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13934:
	l.lwz   	r8,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r5,r8,-44
	l.addi  	r6,r8,-12
	l.addi  	r4,r8,-60
	l.jal   	sqlite3Pragma	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13933:
	l.addi  	r6,r14,1
	l.lwz   	r7,20(r1)	 # SI load
	l.slli  	r6,r6,4
	l.addi  	r5,r7,-28
	l.addi  	r4,r7,-44
	l.add   	r6,r24,r6
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3Pragma	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13932:
	l.lwz   	r6,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r5,r6,-44
	l.addi  	r4,r6,-60
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3Pragma	# delay slot filled
	l.addi  	r6,r6,-12
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13931:
	l.addi  	r6,r14,1
	l.lwz   	r5,20(r1)	 # SI load
	l.slli  	r6,r6,4
	l.addi  	r4,r5,-44
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r5,r5,-28
	l.add   	r6,r24,r6
	l.jal   	sqlite3Pragma	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13930:
	l.addi  	r5,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r5,r5,4
	l.lwz   	r2,20(r1)	 # SI load
	l.ori   	r7,r6,0	 # move reg to reg
	l.addi  	r4,r2,-12
	l.add   	r5,r24,r5
	l.jal   	sqlite3Pragma	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13929:
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r30,12
	l.sfnei	r11,0
	l.bnf	.L14308	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,65	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13928:
	l.addi  	r2,r14,1
	l.lwz   	r3,64(r30)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r8,20(r1)	 # SI load
	l.lwz   	r16,0(r30)	 # SI load
	l.add   	r2,r24,r2
	l.lwz   	r18,-12(r8)	 # SI load
	l.sfnei	r3,0
	l.bf	.L14079	# delay slot filled
	l.lwz   	r22,0(r2)	 # SI load
	l.lbz   	r2,30(r16)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L14309
	l.nop			# nop delay slot
.L14079:
	l.ori   	r3,r16,0	 # move reg to reg
.L14360:
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13955:
	l.addi  	r5,r14,1
	l.lwz   	r8,20(r1)	 # SI load
	l.slli  	r5,r5,4
	l.lwz   	r6,-44(r8)	 # SI load
	l.lwz   	r2,-12(r8)	 # SI load
	l.add   	r5,r24,r5
	l.ori   	r7,r6,0	 # move reg to reg
	l.lwz   	r12,0(r5)	 # SI load
	l.movhi  	r5,hi(attach_func.15350)
	l.ori   	r8,r2,0	 # move reg to reg
	l.ori   	r5,r5,lo(attach_func.15350)
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,24	 # move immediate I
	l.jal   	codeAttach	# delay slot filled
	l.sw    	0(r1),r12	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13947:
	l.addi  	r2,r14,1
	l.lwz   	r5,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r11,20(r1)	 # SI load
	l.addi  	r4,r5,-28
	l.add   	r2,r24,r2
	l.lwz   	r5,-12(r5)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r7,0(r2)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3TriggerInsertStep	# delay slot filled
	l.lwz   	r8,-60(r11)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13946:
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.lwz   	r5,-60(r11)	 # SI load
	l.lwz   	r6,-12(r11)	 # SI load
	l.addi  	r4,r11,-76
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3TriggerInsertStep	# delay slot filled
	l.lwz   	r8,-108(r11)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13945:
	l.addi  	r2,r14,1
	l.lwz   	r16,0(r30)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r5,20(r1)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.add   	r2,r24,r2
	l.addi  	r4,r0,44	 # move immediate I
	l.lwz   	r14,0(r2)	 # SI load
	l.lwz   	r18,-12(r5)	 # SI load
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.lwz   	r20,-60(r5)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14310	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r7,20(r1)	 # SI load
	l.addi  	r8,r0,106	 # move immediate I
		l.lwz   	r6, -44(r7)
		l.lwz   	r7, -44+4(r7)
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	0(r11),r8	 # SI store
	l.sw    	28(r11),r18	 # SI store
	l.sw    	24(r11),r14	 # SI store
	l.sw    	4(r11),r20	 # SI store
		l.sw    	16(r11), r6
		l.sw    	16+4(r11), r7
	l.jal   	sqlitePersistTriggerStep	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
.L14365:
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13944:
	l.lwz   	r11,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r2,-12(r11)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.sw    	40(r2),r2	 # SI store
.L13943:
	l.lwz   	r8,20(r1)	 # SI load
	l.lwz   	r3,-28(r8)	 # SI load
	l.lwz   	r6,-12(r8)	 # SI load
	l.lwz   	r7,40(r3)	 # SI load
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	36(r7),r6	 # SI store
	l.sw    	40(r3),r6	 # SI store
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13942:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13954:
	l.addi  	r5,r14,1
	l.lwz   	r8,20(r1)	 # SI load
	l.lwz   	r20,0(r30)	 # SI load
	l.slli  	r5,r5,4
	l.lwz   	r8,-12(r8)	 # SI load
	l.lbz   	r2,30(r20)	 # zero_extendqisi2
	l.add   	r5,r24,r5
	l.sw    	32(r1),r8	 # SI store
	l.sfnei	r2,0
	l.bnf	.L14311	# delay slot filled
	l.lwz   	r22,0(r5)	 # SI load
.L14124:
	l.ori   	r3,r20,0	 # move reg to reg
.L14364:
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13941:
	l.addi  	r3,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r3,r3,4
	l.addi  	r2,r0,106	 # move immediate I
	l.add   	r3,r24,r3
	l.lwz   	r3,0(r3)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.sw    	108(r1),r3	 # SI store
.L13951:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r8,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,54	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r7,r8,-12
	l.sfnei	r11,0
	l.bnf	.L14312	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r11,20(r1)	 # SI load
	l.addi  	r5,r14,1
	l.lbz   	r11,-41(r11)	 # zero_extendqisi2
	l.sb    	1(r2),r11	    # movqi
	l.slli  	r5,r5,4
	l.lwz   	r4,20(r1)	 # SI load
	l.add   	r16,r24,r16
	l.addi  	r3,r4,-80
	l.add   	r5,r24,r5
	l.lwz   	r6,4(r3)	 # SI load
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.sw    	12(r2),r6	 # SI store
	l.ori   	r7,r7,65535
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.lwz   	r5,16(r2)	 # SI load
	l.add   	r3,r6,r3
	l.movhi 	r6,hi(-1073741824)	 # move immediate M
	l.and   	r3,r3,r7
	l.and   	r5,r5,r6
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13950:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,54	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r5,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L14313	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r11,r0,4	 # movqi: move immediate
	l.addi  	r5,r14,1
	l.sb    	1(r2),r11	    # movqi
	l.slli  	r5,r5,4
	l.lwz   	r4,20(r1)	 # SI load
	l.add   	r16,r24,r16
	l.addi  	r3,r4,-48
	l.add   	r5,r24,r5
	l.lwz   	r6,4(r3)	 # SI load
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.sw    	12(r2),r6	 # SI store
	l.ori   	r7,r7,65535
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.lwz   	r5,16(r2)	 # SI load
	l.add   	r3,r6,r3
	l.movhi 	r6,hi(-1073741824)	 # move immediate M
	l.and   	r3,r3,r7
	l.and   	r5,r5,r6
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13949:
	l.addi  	r2,r14,1
	l.lwz   	r16,0(r30)	 # SI load
	l.slli  	r2,r2,4
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,44	 # move immediate I
	l.add   	r2,r24,r2
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.lwz   	r14,0(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14314	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r7,r0,116	 # move immediate I
	l.addi  	r8,r0,99	 # move immediate I
	l.sw    	0(r11),r7	 # SI store
	l.sw    	12(r11),r14	 # SI store
	l.sw    	4(r11),r8	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlitePersistTriggerStep	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
.L14366:
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13910:
	l.lwz   	r7,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r18,r7,-32
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,72	 # move immediate I
	l.lwz   	r5,4(r18)	 # SI load
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.lwz   	r3,4(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14315	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r5,r14,1
	l.lwz   	r6,12(r3)	 # SI load
	l.slli  	r5,r5,4
	l.sw    	12(r11),r6	 # SI store
	l.add   	r16,r24,r16
	l.add   	r5,r24,r5
	l.lwz   	r3,12(r3)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.lwz   	r5,16(r11)	 # SI load
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.add   	r3,r6,r3
	l.movhi 	r8,hi(-1073741824)	 # move immediate M
	l.ori   	r11,r11,65535
	l.and   	r5,r5,r8
	l.and   	r3,r3,r11
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13948:
	l.addi  	r2,r14,1
	l.lwz   	r16,0(r30)	 # SI load
	l.slli  	r2,r2,4
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,44	 # move immediate I
	l.add   	r2,r24,r2
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.lwz   	r14,0(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14316	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r4,20(r1)	 # SI load
	l.addi  	r5,r0,105	 # move immediate I
	l.addi  	r6,r0,99	 # move immediate I
		l.lwz   	r3, -12(r4)
		l.lwz   	r4, -12+4(r4)
	l.sw    	0(r11),r5	 # SI store
		l.sw    	16(r11), r3
		l.sw    	16+4(r11), r4
	l.sw    	24(r11),r14	 # SI store
	l.sw    	4(r11),r6	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlitePersistTriggerStep	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
.L14367:
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13952:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L13904:
	l.addi  	r2,r14,1
	l.lwz   	r5,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lhz   	r4,-14(r5)	 # zero_extendqisi2
	l.add   	r2,r24,r2
	l.lwz   	r5,-28(r5)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13903:
	l.addi  	r14,r14,1
	l.ori   	r3,r30,0	 # move reg to reg
	l.slli  	r14,r14,4
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r14,r24,r14
	l.jal   	sqlite3ExprFunction	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L14317	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r7,r0,-102	 # movqi: move immediate
	l.sb    	0(r11),r7	    # movqi
		l.lwz   	r3, 0(r14)
		l.lwz   	r4, 4(r14)
	l.lwz   	r5,0(r24)	 # SI load
		l.sw    	12(r11), r3
		l.sw    	12+4(r11), r4
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13898:
	l.addi  	r7,r14,1
	l.addi  	r5,r0,0	 # move immediate I
	l.slli  	r7,r7,4
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,133	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.add   	r7,r24,r7
	l.lwz   	r20,0(r30)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14318	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r22,8(r11)	 # SI load
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.ori   	r11,r11,65535
	l.and   	r22,r22,r11
	l.sfnei	r22,1
	l.bnf	.L14319
	l.nop			# nop delay slot
	l.lwz   	r28,4(r2)	 # SI load
	l.lbz   	r3,0(r28)	 # zero_extendqisi2
	l.sfnei	r3,63
	l.bnf	.L14320
	l.nop			# nop delay slot
	l.lwz   	r26,416(r30)	 # SI load
	l.sflesi	r26,0
	l.bf	.L14028	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L14030	# delay slot filled
	l.lwz   	r18,424(r30)	 # SI load
.L14029:
	l.addi  	r16,r16,1
.L14378:
	l.sfgts 	r26,r16
	l.bnf	.L14028	# delay slot filled
	l.addi  	r18,r18,4
.L14030:
	l.lwz   	r14,0(r18)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L14029	# delay slot filled
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r3,8(r14)	 # SI load
	l.ori   	r4,r4,65535
	l.and   	r3,r3,r4
	l.sfne 	r22,r3
	l.bf	.L14029	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.lwz   	r3,4(r14)	 # SI load
	l.jal   	memcmp	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14378	# delay slot filled
	l.addi  	r16,r16,1
	l.addi  	r16,r16,-1
	l.lwz   	r3,36(r14)	 # SI load
	l.sw    	36(r2),r3	 # SI store
.L14024:
	l.lwz   	r14,64(r30)	 # SI load
	l.sfeqi	r14,0
	l.bnf	.L14321
	l.nop			# nop delay slot
	l.lwz   	r5,412(r30)	 # SI load
	l.lwz   	r3,116(r20)	 # SI load
	l.sfgts 	r5,r3
	l.bf	.L14032	# delay slot filled
	l.movhi  	r4,hi(.LC422)
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
.L13900:
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r5,-44(r7)	 # SI load
	l.addi  	r4,r0,36	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r7,r7,-12
	l.sfnei	r11,0
	l.bnf	.L14322	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r8,20(r1)	 # SI load
	l.addi  	r5,r14,1
	l.addi  	r3,r8,-80
	l.slli  	r5,r5,4
	l.lwz   	r6,4(r3)	 # SI load
	l.add   	r16,r24,r16
	l.sw    	12(r11),r6	 # SI store
	l.add   	r5,r24,r5
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r5,0(r5)	 # SI load
	l.lwz   	r6,20(r16)	 # SI load
	l.sub   	r3,r5,r3
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r5,16(r11)	 # SI load
	l.add   	r3,r6,r3
	l.movhi 	r11,hi(-1073741824)	 # move immediate M
	l.ori   	r4,r4,65535
	l.and   	r5,r5,r11
	l.and   	r3,r3,r4
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r5,r3
	l.sw    	16(r2),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13899:
	l.addi  	r5,r14,1
	l.lwz   	r6,20(r1)	 # SI load
	l.slli  	r5,r5,4
	l.lwz   	r4,-28(r6)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprSetColl	# delay slot filled
	l.add   	r5,r24,r5
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13866:
	l.addi  	r6,r14,1
	l.lwz   	r11,20(r1)	 # SI load
	l.slli  	r6,r6,4
	l.addi  	r5,r11,-12
	l.lwz   	r3,0(r30)	 # SI load
	l.add   	r6,r24,r6
	l.jal   	sqlite3SrcListAppend	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13961:
	l.addi  	r5,r14,1
	l.lwz   	r6,20(r1)	 # SI load
	l.slli  	r5,r5,4
	l.lwz   	r4,-44(r6)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3AlterRenameTable	# delay slot filled
	l.add   	r5,r24,r5
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13865:
	l.lwz   	r11,20(r1)	 # SI load
	l.addi  	r18,r11,-96
	l.lwz   	r2,4(r18)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L14258	# delay slot filled
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r16,r14,1
.L14013:
	l.lwz   	r8,20(r1)	 # SI load
.L14381:
	l.addi  	r3,r8,-64
.L14382:
	l.lwz   	r5,4(r3)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L14379	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lhs   	r2,0(r5)	 # extendhisi2_no_sext_mem
	l.addi  	r12,r2,-1
	l.sflesi	r12,0
	l.bf	.L14015
	l.nop			# nop delay slot
	l.addi  	r2,r2,-2
	l.add   	r6,r2,r2
	l.add   	r6,r6,r2
	l.slli  	r7,r6,4
	l.add   	r6,r6,r7
	l.add   	r2,r6,r2
	l.add   	r2,r5,r2
	l.addi  	r2,r2,25
.L14016:
	l.lbz   	r11,0(r2)	 # zero_extendqisi2
	l.addi  	r12,r12,-1
	l.sb    	52(r2),r11	    # movqi
	l.sfnei	r12,0
	l.bf	.L14016	# delay slot filled
	l.addi  	r2,r2,-52
.L14015:
	l.addi  	r2,r0,0	 # movqi: move immediate
	l.sb    	25(r5),r2	    # movqi
	l.lwz   	r5,4(r3)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
.L14379:
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r6,r4,0	 # move reg to reg
	l.ori   	r7,r4,0	 # move reg to reg
	l.ori   	r8,r4,0	 # move reg to reg
	l.sw    	0(r1),r4	 # SI store
	l.sw    	4(r1),r4	 # SI store
	l.sw    	8(r1),r4	 # SI store
	l.jal   	sqlite3SelectNew.clone.150	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
	l.lwz   	r4,20(r1)	 # SI load
	l.slli  	r3,r16,4
	l.lwz   	r5,-12(r4)	 # SI load
	l.lwz   	r2,4(r18)	 # SI load
	l.add   	r3,r24,r3
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r8,20(r1)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	4(r1),r3	 # SI store
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r7,r8,-28
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3SrcListAppendFromTerm.clone.147	# delay slot filled
	l.ori   	r8,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13864:
	l.addi  	r3,r14,1
	l.lwz   	r2,20(r1)	 # SI load
	l.slli  	r3,r3,4
	l.lwz   	r5,-12(r2)	 # SI load
	l.lwz   	r12,-92(r2)	 # SI load
	l.add   	r3,r24,r3
	l.lwz   	r2,-60(r2)	 # SI load
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r8,20(r1)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	4(r1),r3	 # SI store
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r7,r8,-28
	l.ori   	r4,r12,0	 # move reg to reg
	l.ori   	r8,r2,0	 # move reg to reg
	l.jal   	sqlite3SrcListAppendFromTerm.clone.147	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13863:
	l.addi  	r3,r14,1
	l.lwz   	r7,20(r1)	 # SI load
	l.slli  	r3,r3,4
	l.lwz   	r5,-12(r7)	 # SI load
	l.lwz   	r2,-92(r7)	 # SI load
	l.add   	r3,r24,r3
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r6,r7,-60
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r5,r7,-76
	l.sw    	4(r1),r3	 # SI store
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r7,r7,-44
	l.addi  	r8,r0,0	 # move immediate I
	l.jal   	sqlite3SrcListAppendFromTerm.clone.147	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r11,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3SrcListIndexedBy.clone.98	# delay slot filled
	l.addi  	r5,r11,-28
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13962:
	l.addi  	r2,r14,1
	l.ori   	r3,r30,0	 # move reg to reg
	l.slli  	r2,r2,4
	l.jal   	sqlite3AlterFinishAddColumn	# delay slot filled
	l.add   	r4,r24,r2
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13862:
	l.lwz   	r6,20(r1)	 # SI load
	l.lwz   	r2,-12(r6)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lhs   	r3,0(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r6,r0,0	 # move immediate I
	l.sfles 	r3,r6
	l.bf	.L13795	# delay slot filled
	l.addi  	r3,r3,-1
	l.addi  	r7,r14,1
	l.add   	r5,r3,r3
	l.slli  	r7,r7,4
	l.add   	r5,r5,r3
	l.slli  	r12,r5,4
	l.add   	r7,r24,r7
	l.add   	r5,r5,r12
	l.lwz   	r7,0(r7)	 # SI load
	l.add   	r3,r5,r3
	l.add   	r3,r2,r3
	l.sb    	25(r3),r7	    # movqi
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13861:
	l.addi  	r2,r14,1
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lhs   	r3,0(r2)	 # extendhisi2_no_sext_mem
	l.addi  	r5,r3,-1
	l.sflesi	r5,0
	l.bf	.L14011	# delay slot filled
	l.addi  	r3,r3,-2
	l.add   	r6,r3,r3
	l.add   	r6,r6,r3
	l.slli  	r7,r6,4
	l.add   	r6,r6,r7
	l.add   	r3,r6,r3
	l.add   	r3,r2,r3
	l.addi  	r3,r3,25
.L14012:
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.addi  	r5,r5,-1
	l.sb    	52(r3),r4	    # movqi
	l.sfnei	r5,0
	l.bf	.L14012	# delay slot filled
	l.addi  	r3,r3,-52
.L14011:
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	25(r2),r5	    # movqi
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13860:
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r0,56	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13963:
	l.lwz   	r2,0(r30)	 # SI load
	l.addi  	r7,r0,0	 # movqi: move immediate
	l.addi  	r3,r14,1
	l.sb    	226(r2),r7	    # movqi
	l.slli  	r3,r3,4
	l.lwz   	r16,0(r30)	 # SI load
	l.lbz   	r2,30(r16)	 # zero_extendqisi2
	l.add   	r3,r24,r3
	l.sfnei	r2,0
	l.bnf	.L14323	# delay slot filled
	l.lwz   	r26,0(r3)	 # SI load
.L14134:
	l.ori   	r3,r16,0	 # move reg to reg
.L14359:
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13859:
	l.addi  	r7,r14,1
	l.addi  	r5,r0,0	 # move immediate I
	l.slli  	r7,r7,4
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r4,r0,113	 # move immediate I
	l.add   	r7,r24,r7
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r8,20(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r7,r8,-28
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.ori   	r5,r11,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r2,20(r1)	 # SI load
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r4,-44(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.lwz   	r3,0(r30)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13858:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r4,r0,113	 # move immediate I
	l.lwz   	r5,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r4,-12(r5)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13857:
	l.lwz   	r2,20(r1)	 # SI load
	l.add   	r16,r24,r16
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r12,-28(r2)	 # SI load
	l.ori   	r4,r4,65535
	l.lwz   	r2,20(r16)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.and   	r2,r2,r4
	l.sfeqi	r2,0
	l.bf	.L14010	# delay slot filled
	l.lwz   	r5,-12(r3)	 # SI load
	l.addi  	r2,r14,1
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
.L14010:
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.ori   	r4,r12,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13964:
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3VtabFinishParse	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13856:
	l.lwz   	r11,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,-12(r11)	 # SI load
.L13855:
	l.addi  	r2,r14,1
	l.lwz   	r6,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r14,-12(r6)	 # SI load
	l.lwz   	r7,20(r1)	 # SI load
	l.add   	r2,r24,r2
	l.lwz   	r6,-108(r6)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r8,20(r1)	 # SI load
	l.lwz   	r13,-92(r7)	 # SI load
	l.lwz   	r5,-76(r7)	 # SI load
	l.lwz   	r12,-60(r7)	 # SI load
	l.lwz   	r2,-28(r8)	 # SI load
	l.lwz   	r7,-44(r7)	 # SI load
	l.add   	r16,r24,r16
	l.sw    	4(r1),r6	 # SI store
	l.sw    	8(r1),r3	 # SI store
	l.sw    	0(r1),r14	 # SI store
	l.ori   	r6,r12,0	 # move reg to reg
	l.lwz   	r14,20(r16)	 # SI load
	l.ori   	r8,r2,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r13,0	 # move reg to reg
	l.jal   	sqlite3SelectNew.clone.150	# delay slot filled
	l.sw    	12(r1),r14	 # SI store
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13873:
	l.lwz   	r8,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,-12(r8)	 # SI load
.L13872:
	l.lwz   	r3,108(r1)	 # SI load
	l.movhi 	r7,hi(-1073741824)	 # move immediate M
	l.addi  	r6,r0,0	 # move immediate I
	l.and   	r3,r3,r7
	l.ori   	r2,r6,0	 # move reg to reg
	l.ori   	r3,r3,1
	l.j     	.L13795	# delay slot filled
	l.sw    	108(r1),r3	 # SI store
.L13960:
	l.addi  	r5,r14,1
	l.lwz   	r2,20(r1)	 # SI load
	l.slli  	r5,r5,4
	l.addi  	r4,r2,-12
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3Analyze	# delay slot filled
	l.add   	r5,r24,r5
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13871:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13870:
	l.lwz   	r6,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r5,r6,-28
	l.addi  	r4,r6,-44
	l.jal   	sqlite3JoinType	# delay slot filled
	l.addi  	r6,r6,-12
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13869:
	l.lwz   	r5,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r4,r5,-28
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3JoinType	# delay slot filled
	l.addi  	r5,r5,-12
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13868:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r2,20(r1)	 # SI load
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r4,r2,-12
	l.jal   	sqlite3JoinType	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13867:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L13876:
	l.lwz   	r2,20(r1)	 # SI load
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r5,-12(r2)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.ori   	r6,r4,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L14324	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,12(r11)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14325
	l.nop			# nop delay slot
	l.addi  	r5,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r5,r5,4
	l.add   	r5,r24,r5
	l.lwz   	r5,0(r5)	 # SI load
	l.sb    	8(r3),r5	    # movqi
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13875:
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.lwz   	r4,-44(r11)	 # SI load
	l.lwz   	r5,-12(r11)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L14326	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r11)	 # SI load
	l.addi  	r5,r14,1
	l.addi  	r3,r3,-1
	l.slli  	r5,r5,4
	l.slli  	r3,r3,4
	l.lwz   	r6,12(r11)	 # SI load
	l.add   	r5,r24,r5
	l.add   	r3,r6,r3
	l.lwz   	r5,0(r5)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	8(r3),r5	    # movqi
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13874:
	l.addi  	r2,r14,1
	l.addi  	r6,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.add   	r2,r24,r2
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13877:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,1	 # move immediate I
.L13958:
	l.addi  	r5,r14,1
	l.lwz   	r11,20(r1)	 # SI load
	l.slli  	r5,r5,4
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r11,-12
	l.jal   	sqlite3Reindex	# delay slot filled
	l.add   	r5,r24,r5
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13957:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3Reindex	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13959:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3Analyze	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13804:
	l.sfeqi	r30,0
	l.bf	.L14183	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.lwz   	r2,0(r30)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r6,4(r3)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L14185
	l.nop			# nop delay slot
	l.lwz   	r6,64(r30)	 # SI load
	l.sfnei	r6,0
	l.bf	.L14186
	l.nop			# nop delay slot
	l.lbz   	r2,30(r2)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L14327	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13803:
	l.sfeqi	r30,0
	l.bf	.L14178	# delay slot filled
	l.ori   	r6,r30,0	 # move reg to reg
	l.lwz   	r2,0(r30)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r6,4(r3)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L14180
	l.nop			# nop delay slot
	l.lwz   	r6,64(r30)	 # SI load
	l.sfnei	r6,0
	l.bf	.L14181
	l.nop			# nop delay slot
	l.lbz   	r2,30(r2)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L14328	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13802:
	l.add   	r16,r24,r16
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.lhz   	r2,14(r16)	 # zero_extendqisi2
.L13800:
	l.lwz   	r11,20(r1)	 # SI load
	l.sfeqi	r30,0
	l.bf	.L14172	# delay slot filled
	l.lwz   	r18,-12(r11)	 # SI load
	l.lwz   	r2,0(r30)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r6,4(r3)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L14174
	l.nop			# nop delay slot
	l.lwz   	r6,64(r30)	 # SI load
	l.sfnei	r6,0
	l.bf	.L14175
	l.nop			# nop delay slot
	l.lbz   	r14,30(r2)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bnf	.L14329	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13799:
	l.lwz   	r26,0(r30)	 # SI load
	l.lbz   	r6,30(r26)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bf	.L14169
	l.nop			# nop delay slot
	l.lbz   	r2,19(r30)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L14170
	l.nop			# nop delay slot
	l.lwz   	r16,64(r30)	 # SI load
	l.sfnei	r16,0
	l.bnf	.L14330	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.j     	.L14387	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
.L13798:
	l.addi  	r7,r0,2	 # movqi: move immediate
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	440(r30),r7	    # movqi
	l.sw    	412(r30),r6	 # SI store
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13809:
	l.addi  	r2,r14,1
	l.lwz   	r3,0(r30)	 # SI load
	l.slli  	r2,r2,4
	l.addi  	r11,r0,0	 # movqi: move immediate
	l.addi  	r6,r0,0	 # move immediate I
	l.sb    	226(r3),r11	    # movqi
	l.add   	r2,r24,r2
	l.lwz   	r5,0(r24)	 # SI load
		l.lwz   	r3, 0(r2)
		l.lwz   	r4, 4(r2)
		l.sw    	104(r1), r3
		l.sw    	104+4(r1), r4
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
.L13886:
	l.addi  	r2,r14,1
	l.lwz   	r11,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.add   	r2,r24,r2
	l.lwz   	r4,-28(r11)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.lwz   	r7,-12(r11)	 # SI load
	l.jal   	sqlite3Insert	# delay slot filled
	l.lwz   	r8,-60(r11)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13885:
	l.lwz   	r8,20(r1)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,-12(r8)	 # SI load
	l.lwz   	r4,-76(r8)	 # SI load
	l.lwz   	r7,-60(r8)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3Insert	# delay slot filled
	l.lwz   	r8,-108(r8)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13884:
	l.addi  	r2,r14,1
	l.lwz   	r7,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.addi  	r6,r7,-28
	l.lwz   	r3,0(r30)	 # SI load
	l.add   	r2,r24,r2
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13883:
	l.addi  	r2,r14,1
	l.lwz   	r5,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.addi  	r6,r5,-28
	l.lwz   	r4,-60(r5)	 # SI load
	l.add   	r2,r24,r2
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13882:
	l.lwz   	r8,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r16,r8,-64
	l.addi  	r5,r8,-44
	l.lwz   	r4,4(r16)	 # SI load
	l.jal   	sqlite3SrcListIndexedBy.clone.98	# delay slot filled
	l.addi  	r2,r8,-16
	l.movhi  	r5,hi(.LC419)
	l.lwz   	r4,4(r2)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ExprListCheckLength	# delay slot filled
	l.ori   	r5,r5,lo(.LC419)
	l.addi  	r6,r14,1
	l.lwz   	r5,4(r2)	 # SI load
	l.slli  	r6,r6,4
	l.lwz   	r11,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.add   	r2,r24,r6
	l.lwz   	r4,4(r16)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.jal   	sqlite3Update	# delay slot filled
	l.lwz   	r7,-76(r11)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13881:
	l.lwz   	r7,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r2,r7,-32
	l.addi  	r5,r7,-12
	l.jal   	sqlite3SrcListIndexedBy.clone.98	# delay slot filled
	l.lwz   	r4,4(r2)	 # SI load
	l.addi  	r5,r14,1
	l.lwz   	r4,4(r2)	 # SI load
	l.slli  	r5,r5,4
	l.ori   	r3,r30,0	 # move reg to reg
	l.add   	r2,r24,r5
	l.jal   	sqlite3DeleteFrom	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13880:
	l.addi  	r2,r14,1
	l.lwz   	r6,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r3,-28(r6)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r2,r24,r2
	l.sw    	108(r1),r3	 # SI store
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,0(r2)	 # SI load
.L13879:
	l.addi  	r3,r14,1
	l.lwz   	r4,20(r1)	 # SI load
	l.slli  	r3,r3,4
	l.lwz   	r2,-28(r4)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r3,r24,r3
	l.lwz   	r3,0(r3)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.sw    	108(r1),r3	 # SI store
.L13890:
	l.addi  	r5,r14,1
	l.lwz   	r6,20(r1)	 # SI load
	l.slli  	r5,r5,4
	l.lwz   	r4,-28(r6)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3IdListAppend	# delay slot filled
	l.add   	r5,r24,r5
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13889:
	l.addi  	r2,r14,1
	l.addi  	r4,r0,0	 # move immediate I
	l.slli  	r2,r2,4
	l.ori   	r6,r4,0	 # move reg to reg
	l.lwz   	r3,0(r30)	 # SI load
	l.add   	r2,r24,r2
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13888:
	l.addi  	r2,r14,1
	l.lwz   	r5,20(r1)	 # SI load
	l.slli  	r2,r2,4
	l.lwz   	r4,-28(r5)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r2,r24,r2
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.lwz   	r5,0(r2)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13887:
	l.lwz   	r2,20(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r4,-44(r2)	 # SI load
	l.ori   	r6,r5,0	 # move reg to reg
	l.lwz   	r7,-28(r2)	 # SI load
	l.lwz   	r8,-76(r2)	 # SI load
	l.jal   	sqlite3Insert	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13797:
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.sb    	440(r30),r6	    # movqi
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.sw    	412(r30),r6	 # SI store
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13854:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,113	 # move immediate I
.L13968:
	l.lwz   	r2,492(r30)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L14331	# delay slot filled
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.addi  	r6,r14,1
	l.add   	r16,r24,r16
	l.slli  	r6,r6,4
	l.lwz   	r3,20(r16)	 # SI load
	l.ori   	r4,r4,65535
	l.add   	r6,r24,r6
	l.and   	r3,r3,r4
	l.lwz   	r6,0(r6)	 # SI load
	l.lwz   	r7,496(r30)	 # SI load
	l.add   	r3,r6,r3
	l.movhi 	r8,hi(-1073741824)	 # move immediate M
	l.sub   	r3,r3,r2
	l.and   	r7,r7,r8
	l.and   	r3,r3,r4
	l.addi  	r6,r0,0	 # move immediate I
	l.or    	r3,r7,r3
	l.ori   	r2,r6,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.sw    	496(r30),r3	 # SI store
.L13808:
	l.addi  	r5,r14,1
	l.lwz   	r2,20(r1)	 # SI load
	l.slli  	r5,r5,4
	l.lwz   	r8,20(r1)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r6,-60(r2)	 # SI load
	l.addi  	r4,r8,-12
	l.lwz   	r2,-28(r2)	 # SI load
	l.add   	r5,r24,r5
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r8,r7,0	 # move reg to reg
	l.jal   	sqlite3StartTable	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13939:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,47	 # move immediate I
.L13925:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
.L13806:
	l.addi  	r5,r14,1
	l.ori   	r3,r30,0	 # move reg to reg
	l.slli  	r5,r5,4
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3Savepoint	# delay slot filled
	l.add   	r5,r24,r5
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13805:
	l.addi  	r5,r14,1
	l.ori   	r3,r30,0	 # move reg to reg
	l.slli  	r5,r5,4
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3Savepoint	# delay slot filled
	l.add   	r5,r24,r5
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13807:
	l.addi  	r5,r14,1
	l.ori   	r3,r30,0	 # move reg to reg
	l.slli  	r5,r5,4
	l.addi  	r4,r0,2	 # move immediate I
	l.jal   	sqlite3Savepoint	# delay slot filled
	l.add   	r5,r24,r5
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L13896:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,20(r1)	 # SI load
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r7,r3,-60
	l.addi  	r4,r0,26	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r8,20(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r7,r8,-28
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r7,r14,1
	l.addi  	r5,r0,0	 # move immediate I
	l.slli  	r7,r7,4
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.add   	r7,r24,r7
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13895:
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r2,20(r1)	 # SI load
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r7,r2,-28
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r4,r0,26	 # move immediate I
	l.addi  	r7,r14,1
	l.addi  	r5,r0,0	 # move immediate I
	l.slli  	r7,r7,4
	l.ori   	r6,r5,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.add   	r7,r24,r7
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r11,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,118	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r2,r11,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13897:
	l.addi  	r16,r14,1
	l.lbz   	r18,19(r30)	 # zero_extendqisi2
	l.slli  	r16,r16,4
	l.lwz   	r2,12(r30)	 # SI load
	l.sfnei	r18,0
	l.bnf	.L14332	# delay slot filled
	l.add   	r16,r24,r16
	l.sfeqi	r2,0
	l.bf	.L14021	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r4,r0,132	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14333	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r3,0(r16)	 # SI load
	l.jal   	atoi	# delay slot filled
	l.addi  	r3,r3,1
	l.lwz   	r14,0(r24)	 # SI load
	l.sw    	36(r2),r11	 # SI store
.L14021:
	l.ori   	r5,r14,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L13901:
	l.lwz   	r5,20(r1)	 # SI load
	l.addi  	r20,r5,-16
	l.lwz   	r2,4(r20)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L14034	# delay slot filled
	l.addi  	r18,r5,-60
	l.lwz   	r3,0(r2)	 # SI load
	l.sflesi	r3,127
	l.bnf	.L14264	# delay slot filled
	l.lwz   	r7,20(r1)	 # SI load
	l.addi  	r18,r7,-60
.L14034:
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r11,20(r1)	 # SI load
	l.jal   	sqlite3ExprFunction	# delay slot filled
	l.addi  	r18,r11,-64
	l.ori   	r3,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14035	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.addi  	r6,r14,1
	l.lwz   	r5,4(r18)	 # SI load
	l.slli  	r6,r6,4
	l.sw    	12(r11),r5	 # SI store
	l.add   	r16,r24,r16
	l.add   	r6,r24,r6
	l.lwz   	r5,4(r18)	 # SI load
	l.lwz   	r6,0(r6)	 # SI load
	l.lwz   	r7,20(r16)	 # SI load
	l.sub   	r5,r6,r5
	l.movhi 	r4,hi(-1073741824)	 # move immediate M
	l.add   	r5,r7,r5
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.lwz   	r6,16(r11)	 # SI load
	l.ori   	r7,r7,65535
	l.and   	r6,r6,r4
	l.and   	r5,r5,r7
	l.or    	r5,r6,r5
	l.sw    	16(r11),r5	 # SI store
.L14035:
	l.lwz   	r8,20(r1)	 # SI load
	l.lwz   	r6,-28(r8)	 # SI load
	l.sfnei	r6,0
	l.bnf	.L14335	# delay slot filled
	l.sfnei	r3,0
	l.bnf	.L14336
	l.nop			# nop delay slot
	l.lhz   	r6,2(r3)	 # zero_extendqisi2
	l.ori   	r6,r6,16
	l.lwz   	r5,0(r24)	 # SI load
	l.sh    	2(r3),r6	 # movhi
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L14335:
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14264:
	l.lwz   	r8,20(r1)	 # SI load
	l.movhi  	r4,hi(.LC423)
	l.addi  	r18,r8,-60
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC423)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.j     	.L14034	# delay slot filled
	l.lwz   	r2,4(r20)	 # SI load
.L14032:
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC422)
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
.L14321:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L14181:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14170:
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14169:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14175:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14186:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14323:
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r5,8(r26)	 # SI load
	l.jal   	sqlite3LocateTable	# delay slot filled
	l.lwz   	r6,4(r26)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L14134	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r2,34(r11)	 # zero_extendqisi2
	l.andi  	r2,r2,16
	l.sfeqi	r2,0
	l.bnf	.L14337	# delay slot filled
	l.movhi  	r4,hi(.LC436)
	l.lwz   	r2,28(r11)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L14136	# delay slot filled
	l.movhi  	r4,hi(.LC437)
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC437)
	l.j     	.L14359	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L14332:
	l.movhi  	r4,hi(.LC420)
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC420)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r4,r0,98	 # move immediate I
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.lwz   	r14,0(r24)	 # SI load
	l.j     	.L14021	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14093:
	l.sw    	148(r1),r5	 # SI store
	l.addi  	r18,r0,1	 # move immediate I
.L14095:
	l.sfeqi	r26,0
	l.bf	.L14207	# delay slot filled
	l.ori   	r16,r26,0	 # move reg to reg
	l.lbz   	r2,30(r20)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L14338	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
.L14210:
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L14094	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
.L14092:
	l.lwz   	r6,20(r1)	 # SI load
	l.ori   	r4,r5,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r5,r6,-92
	l.jal   	sqlite3TwoPartName	# delay slot filled
	l.addi  	r6,r1,148
	l.sfltsi	r11,0
	l.bnf	.L14095	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r16,32(r1)	 # SI load
	l.j     	.L14094	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
.L14191:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14311:
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14124
	l.nop			# nop delay slot
	l.lwz   	r26,8(r22)	 # SI load
	l.lwz   	r11,4(r22)	 # SI load
	l.ori   	r2,r26,0	 # move reg to reg
	l.sw    	36(r1),r11	 # SI store
.L14125:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L14125	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r26
	l.ori   	r3,r3,65535
	l.lwz   	r4,4(r20)	 # SI load
	l.ori   	r18,r5,0	 # move reg to reg
	l.and   	r28,r2,r3
	l.sw    	40(r1),r4	 # SI store
.L14127:
	l.lwz   	r6,40(r1)	 # SI load
	l.sflts 	r18,r6
	l.bnf	.L14339	# delay slot filled
	l.sfgtsi	r18,1
	l.bnf	.L14340	# delay slot filled
	l.ori   	r14,r18,0	 # move reg to reg
.L14128:
	l.lwz   	r5,36(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L14341	# delay slot filled
	l.lwz   	r4,36(r1)	 # SI load
	l.add   	r16,r14,r14
	l.lwz   	r2,8(r20)	 # SI load
	l.add   	r6,r16,r14
	l.slli  	r6,r6,3
	l.add   	r6,r2,r6
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.lwz   	r3,0(r6)	 # SI load
	l.sfnei	r11,0
	l.bf	.L14130
	l.nop			# nop delay slot
.L14129:
	l.add   	r3,r16,r14
	l.ori   	r4,r26,0	 # move reg to reg
	l.slli  	r3,r3,3
	l.ori   	r5,r28,0	 # move reg to reg
	l.add   	r2,r2,r3
	l.lwz   	r3,20(r2)	 # SI load
	l.jal   	sqlite3HashFind	# delay slot filled
	l.addi  	r3,r3,36
	l.sfnei	r11,0
	l.bf	.L14131
	l.nop			# nop delay slot
.L14130:
	l.j     	.L14127	# delay slot filled
	l.addi  	r18,r18,1
.L14341:
	l.lwz   	r2,8(r20)	 # SI load
	l.j     	.L14129	# delay slot filled
	l.add   	r16,r14,r14
.L14340:
	l.j     	.L14128	# delay slot filled
	l.xori  	r14,r18,1
.L14028:
	l.lwz   	r3,412(r30)	 # SI load
	l.lwz   	r5,420(r30)	 # SI load
	l.addi  	r3,r3,1
	l.addi  	r6,r5,-1
	l.sw    	412(r30),r3	 # SI store
	l.sfges 	r26,r6
	l.bf	.L14342	# delay slot filled
	l.sw    	36(r2),r3	 # SI store
.L14165:
	l.lbz   	r3,30(r20)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L14024
	l.nop			# nop delay slot
	l.lwz   	r3,416(r30)	 # SI load
	l.lwz   	r6,424(r30)	 # SI load
	l.slli  	r5,r3,2
	l.addi  	r3,r3,1
	l.add   	r5,r6,r5
	l.sw    	0(r5),r2	 # SI store
	l.j     	.L14024	# delay slot filled
	l.sw    	416(r30),r3	 # SI store
.L14320:
	l.jal   	atoi	# delay slot filled
	l.addi  	r3,r28,1
	l.sw    	36(r2),r11	 # SI store
	l.sflesi	r11,0
	l.bf	.L14343	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r5,116(r20)	 # SI load
	l.sfles 	r11,r5
	l.bf	.L14027
	l.nop			# nop delay slot
.L14026:
	l.movhi  	r4,hi(.LC421)
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC421)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
.L14027:
	l.lwz   	r3,412(r30)	 # SI load
	l.sfles 	r14,r3
	l.bf	.L14024
	l.nop			# nop delay slot
	l.j     	.L14024	# delay slot filled
	l.sw    	412(r30),r14	 # SI store
.L14319:
	l.lwz   	r3,412(r30)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	412(r30),r3	 # SI store
	l.j     	.L14024	# delay slot filled
	l.sw    	36(r2),r3	 # SI store
.L14041:
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,19	 # move immediate I
	l.jal   	sqlite3PExpr	# delay slot filled
	l.ori   	r7,r6,0	 # move reg to reg
	l.j     	.L14042	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14283:
	l.lwz   	r2,16(r18)	 # SI load
.L13995:
	l.andi  	r6,r14,7
	l.sfnei	r6,0
	l.bf	.L14380	# delay slot filled
	l.slli  	r6,r14,2
	l.addi  	r5,r14,8
	l.ori   	r4,r2,0	 # move reg to reg
	l.slli  	r6,r5,2
	l.slli  	r5,r5,4
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.add   	r5,r6,r5
	l.sfnei	r11,0
	l.bnf	.L14344	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.sw    	16(r18),r11	 # SI store
	l.lwz   	r14,12(r18)	 # SI load
	l.slli  	r6,r14,2
.L14380:
	l.slli  	r3,r14,4
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r5,r0,20	 # move immediate I
	l.add   	r3,r6,r3
	l.add   	r2,r2,r3
	l.jal   	memset	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r11,r0,98	 # movqi: move immediate
	l.sw    	0(r2),r20	 # SI store
	l.sb    	18(r2),r11	    # movqi
	l.lwz   	r2,12(r18)	 # SI load
	l.lwz   	r14,0(r24)	 # SI load
	l.addi  	r2,r2,1
	l.j     	.L13993	# delay slot filled
	l.sw    	12(r18),r2	 # SI store
.L14189:
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14288:
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14290:
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14286:
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14284:
	l.movhi  	r4,hi(.LC439)
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC439)
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14309:
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14079	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,8(r22)	 # SI load
	l.jal   	sqlite3FindIndex	# delay slot filled
	l.lwz   	r5,4(r22)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14345	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lbz   	r5,25(r11)	 # zero_extendqisi2
	l.sfeqi	r5,0
	l.bnf	.L14346	# delay slot filled
	l.movhi  	r4,hi(.LC426)
	l.lwz   	r6,36(r11)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L14083	# delay slot filled
	l.movhi  	r4,hi(.LC441)
	l.lwz   	r7,4(r16)	 # SI load
	l.ori   	r2,r5,0	 # move reg to reg
	l.j     	.L14084	# delay slot filled
	l.lwz   	r3,8(r16)	 # SI load
.L14086:
	l.lwz   	r4,20(r4)	 # SI load
	l.sfeq 	r6,r4
	l.bf	.L14085	# delay slot filled
	l.addi  	r5,r5,24
	l.addi  	r2,r2,1
.L14084:
	l.sflts 	r2,r7
	l.bf	.L14086	# delay slot filled
	l.add   	r4,r3,r5
.L14085:
	l.add   	r20,r2,r2
	l.movhi  	r5,hi(.LC199)
	l.add   	r20,r20,r2
	l.lwz   	r26,16(r14)	 # SI load
	l.slli  	r20,r20,3
	l.ori   	r5,r5,lo(.LC199)
	l.sfnei	r2,1
	l.add   	r3,r3,r20
	l.bf	.L14087	# delay slot filled
	l.lwz   	r18,0(r3)	 # SI load
	l.movhi  	r5,hi(.LC198)
	l.ori   	r5,r5,lo(.LC198)
.L14087:
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14079	# delay slot filled
	l.sfnei	r2,0
	l.bf	.L14088	# delay slot filled
	l.addi  	r5,r0,12	 # move immediate I
	l.addi  	r5,r0,10	 # move immediate I
.L14088:
	l.ori   	r4,r5,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r5,0(r14)	 # SI load
	l.lwz   	r6,4(r26)	 # SI load
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14360	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r30,12
	l.sfeqi	r11,0
	l.bf	.L14079	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r5,8(r16)	 # SI load
	l.movhi  	r3,hi(.LC199)
	l.add   	r5,r5,r20
	l.ori   	r3,r3,lo(.LC199)
	l.sfnei	r2,1
	l.bf	.L14089	# delay slot filled
	l.lwz   	r5,0(r5)	 # SI load
	l.movhi  	r3,hi(.LC198)
	l.ori   	r3,r3,lo(.LC198)
.L14089:
	l.sw    	4(r1),r3	 # SI store
	l.sw    	0(r1),r5	 # SI store
	l.movhi  	r4,hi(.LC427)
	l.lwz   	r5,0(r14)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC427)
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	8(r1),r5	 # SI store
	l.lwz   	r5,8(r16)	 # SI load
	l.movhi  	r4,hi(.LC321)
	l.add   	r20,r5,r20
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r20,0(r20)	 # SI load
	l.ori   	r4,r4,lo(.LC321)
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14090	# delay slot filled
	l.movhi  	r4,hi(.LC428)
	l.sw    	0(r1),r20	 # SI store
	l.lwz   	r5,0(r14)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC428)
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
.L14090:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ChangeCookie	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.lwz   	r4,20(r14)	 # SI load
	l.jal   	destroyRootPage	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.sw    	0(r1),r6	 # SI store
	l.addi  	r4,r0,62	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.lwz   	r8,0(r14)	 # SI load
	l.j     	.L14360	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L14308:
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14115:
	l.lwz   	r5,0(r24)	 # SI load
		l.lwz   	r6, 4(r7)
		l.lwz   	r7, 4+4(r7)
		l.sw    	104(r1), r6
		l.sw    	104+4(r1), r7
	l.addi  	r6,r0,0	 # move immediate I
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,104(r1)	 # SI load
.L14282:
	l.movhi  	r4,hi(.LC417)
	l.lwz   	r2,4(r18)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC417)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r16,r14,1
	l.j     	.L13993	# delay slot filled
	l.lwz   	r14,0(r24)	 # SI load
.L14287:
	l.ori   	r6,r2,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14285:
	l.ori   	r6,r20,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r20,0	 # move reg to reg
.L14307:
	l.jal   	sqlite3DeleteTrigger	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L14361	# delay slot filled
	l.lwz   	r2,36(r1)	 # SI load
.L14357:
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14008:
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r4,-28(r5)	 # SI load
	l.j     	.L14362	# delay slot filled
	l.slli  	r2,r16,4
.L14328:
	l.movhi  	r5,hi(.LC415)
	l.addi  	r4,r0,22	 # move immediate I
	l.ori   	r5,r5,lo(.LC415)
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13989	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14297:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L13989:
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r30,12
	l.sfnei	r11,0
	l.bnf	.L14347	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r6,r14,0	 # move reg to reg
	l.addi  	r4,r0,15	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14293:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14294:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14347:
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14331:
	l.addi  	r3,r14,1
	l.ori   	r6,r2,0	 # move reg to reg
	l.slli  	r3,r3,4
	l.add   	r16,r24,r16
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.add   	r2,r24,r3
	l.lwz   	r7,496(r30)	 # SI load
	l.lwz   	r3,0(r2)	 # SI load
	l.movhi 	r8,hi(-1073741824)	 # move immediate M
	l.sw    	492(r30),r3	 # SI store
	l.ori   	r11,r11,65535
	l.lwz   	r3,20(r16)	 # SI load
	l.and   	r7,r7,r8
	l.and   	r3,r3,r11
	l.ori   	r2,r6,0	 # move reg to reg
	l.or    	r3,r7,r3
	l.j     	.L13795	# delay slot filled
	l.sw    	496(r30),r3	 # SI store
.L14317:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14136:
	l.movhi  	r8,hi(.LC441)
	l.lwz   	r3,72(r11)	 # SI load
	l.ori   	r8,r8,lo(.LC441)
	l.sfeqi	r3,0
	l.bf	.L14137	# delay slot filled
	l.lwz   	r18,0(r8)	 # SI load
	l.lwz   	r5,4(r16)	 # SI load
	l.j     	.L14138	# delay slot filled
	l.ori   	r18,r2,0	 # move reg to reg
.L14139:
	l.lwz   	r4,8(r16)	 # SI load
	l.add   	r4,r4,r2
	l.lwz   	r4,20(r4)	 # SI load
	l.sfeq 	r3,r4
	l.bf	.L14137	# delay slot filled
	l.addi  	r2,r2,24
	l.addi  	r18,r18,1
.L14138:
	l.sflts 	r18,r5
	l.bf	.L14139
	l.nop			# nop delay slot
.L14137:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r0,80	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L14134	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r6,12(r14)	 # SI load
	l.lwz   	r12,0(r14)	 # SI load
	l.addi  	r5,r6,-1
	l.sw    	476(r30),r11	 # SI store
	l.srai  	r7,r5,31
	l.sw    	12(r2),r6	 # SI store
	l.addi  	r11,r0,1	 # movhi: move immediate
	l.andi  	r7,r7,7
	l.ori   	r3,r16,0	 # move reg to reg
	l.add   	r5,r7,r5
	l.sw    	0(r2),r12	 # SI store
	l.srai  	r5,r5,3
	l.sh    	32(r2),r11	 # movhi
	l.addi  	r5,r5,1
	l.slli  	r6,r5,5
	l.slli  	r5,r5,7
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.add   	r4,r6,r5
	l.movhi  	r4,hi(.LC438)
	l.lwz   	r5,4(r14)	 # SI load
	l.sw    	16(r2),r11	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC438)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.lwz   	r5,16(r2)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L14140	# delay slot filled
	l.sw    	4(r2),r11	 # SI store
	l.sfnei	r11,0
	l.bnf	.L14140	# delay slot filled
	l.ori   	r3,r5,0	 # move reg to reg
	l.lwz   	r7,12(r2)	 # SI load
	l.slli  	r6,r7,2
	l.slli  	r5,r7,4
	l.addi  	r22,r0,0	 # move immediate I
	l.lwz   	r4,16(r14)	 # SI load
	l.add   	r5,r6,r5
	l.jal   	memcpy	# delay slot filled
	l.ori   	r28,r22,0	 # move reg to reg
	l.j     	.L14363	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
.L14143:
	l.lwz   	r20,16(r2)	 # SI load
	l.add   	r20,r20,r22
	l.addi  	r28,r28,1
	l.lwz   	r4,0(r20)	 # SI load
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.addi  	r22,r22,20
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r20),r11	 # SI store
	l.sw    	12(r20),r3	 # SI store
	l.sw    	8(r20),r3	 # SI store
	l.sw    	4(r20),r3	 # SI store
	l.lwz   	r4,12(r2)	 # SI load
.L14363:
	l.sflts 	r28,r4
	l.bf	.L14143	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.add   	r5,r18,r18
	l.lwz   	r6,8(r16)	 # SI load
	l.add   	r5,r5,r18
	l.lwz   	r7,48(r14)	 # SI load
	l.slli  	r5,r5,3
	l.ori   	r3,r30,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.add   	r6,r6,r5
	l.ori   	r5,r18,0	 # move reg to reg
	l.lwz   	r6,20(r6)	 # SI load
	l.sw    	48(r2),r7	 # SI store
	l.sw    	72(r2),r6	 # SI store
	l.addi  	r6,r0,1	 # movhi: move immediate
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.sh    	32(r2),r6	 # movhi
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r30,12
	l.sfeqi	r11,0
	l.bf	.L14134	# delay slot filled
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ChangeCookie	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.j     	.L14359	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L14337:
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC436)
	l.j     	.L14359	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L14083:
	l.lwz   	r26,16(r11)	 # SI load
	l.movhi 	r11,hi(-24051712)	 # move immediate M
	l.lwz   	r2,8(r16)	 # SI load
	l.ori   	r11,r11,51712
	l.movhi  	r3,hi(.LC442)
	l.add   	r2,r2,r11
	l.ori   	r3,r3,lo(.LC442)
	l.ori   	r4,r4,lo(.LC441)
	l.movhi  	r5,hi(.LC199)
	l.lwz   	r18,0(r2)	 # SI load
	l.lwz   	r20,0(r3)	 # SI load
	l.lwz   	r2,0(r4)	 # SI load
	l.j     	.L14087	# delay slot filled
	l.ori   	r5,r5,lo(.LC199)
.L14318:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14295:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14312:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14322:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14343:
	l.j     	.L14026	# delay slot filled
	l.lwz   	r5,116(r20)	 # SI load
.L14342:
	l.add   	r5,r5,r5
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r6,r5,10
	l.lwz   	r4,424(r30)	 # SI load
	l.slli  	r5,r6,2
	l.jal   	sqlite3DbReallocOrFree	# delay slot filled
	l.sw    	420(r30),r6	 # SI store
	l.j     	.L14165	# delay slot filled
	l.sw    	424(r30),r11	 # SI store
.L14339:
	l.lwz   	r5,32(r1)	 # SI load
	l.sfeqi	r5,0
	l.bnf	.L14124	# delay slot filled
	l.movhi  	r4,hi(.LC435)
	l.lwz   	r7,32(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC435)
	l.sw    	0(r1),r22	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r7	 # SI store
	l.j     	.L14364	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L14131:
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3DropTriggerPtr	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L14364	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L14190:
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14310:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L14365	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14313:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14315:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14296:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14298:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14314:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L14366	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14316:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3ExprDelete	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L14367	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14338:
	l.jal   	sqlite3SrcListLookup	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.sub   	r2,r0,r11
	l.or    	r2,r11,r2
	l.sfgesi	r2,0
	l.bf	.L14096	# delay slot filled
	l.lwz   	r7,36(r1)	 # SI load
	l.movhi 	r8,hi(1073676288)	 # move immediate M
	l.lwz   	r2,8(r7)	 # SI load
	l.ori   	r8,r8,65535
	l.and   	r2,r2,r8
	l.sfnei	r2,0
	l.bf	.L14096
	l.nop			# nop delay slot
	l.lwz   	r6,8(r20)	 # SI load
	l.lwz   	r5,72(r11)	 # SI load
	l.lwz   	r2,44(r6)	 # SI load
	l.sfeq 	r5,r2
	l.bnf	.L14096
	l.nop			# nop delay slot
	l.addi  	r18,r0,1	 # move immediate I
.L14096:
	l.lbz   	r16,30(r20)	 # zero_extendqisi2
	l.sfnei	r16,0
	l.bf	.L14210	# delay slot filled
	l.sfeqi	r18,1
	l.bf	.L14097	# delay slot filled
	l.lwz   	r7,148(r1)	 # SI load
	l.add   	r5,r18,r18
	l.lwz   	r6,0(r30)	 # SI load
	l.add   	r5,r5,r18
	l.lwz   	r2,8(r6)	 # SI load
	l.slli  	r5,r5,3
	l.addi  	r3,r1,72
	l.ori   	r4,r26,0	 # move reg to reg
	l.add   	r2,r2,r5
	l.lwz   	r5,0(r2)	 # SI load
	l.movhi  	r2,hi(.LC114)
	l.sw    	72(r1),r30	 # SI store
	l.ori   	r2,r2,lo(.LC114)
	l.sw    	76(r1),r5	 # SI store
	l.sw    	80(r1),r2	 # SI store
	l.jal   	sqlite3FixSrcList	# delay slot filled
	l.sw    	84(r1),r7	 # SI store
	l.sfnei	r11,0
	l.bf	.L14094	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
.L14097:
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3SrcListLookup	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14212	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.lbz   	r2,34(r11)	 # zero_extendqisi2
	l.andi  	r2,r2,16
	l.sfeqi	r2,0
	l.bf	.L14098	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.movhi  	r4,hi(.LC430)
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC430)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L14094	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
.L14074:
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.lwz   	r4,-28(r5)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14302:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14051:
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.j     	.L14368	# delay slot filled
	l.lwz   	r8,20(r1)	 # SI load
.L14067:
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.j     	.L14369	# delay slot filled
	l.lwz   	r11,20(r1)	 # SI load
.L14062:
	l.lwz   	r11,20(r1)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r4,-12(r11)	 # SI load
	l.j     	.L14370	# delay slot filled
	l.lwz   	r4,20(r1)	 # SI load
.L14056:
	l.lwz   	r7,20(r1)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.lwz   	r4,-12(r7)	 # SI load
	l.j     	.L14371	# delay slot filled
	l.lwz   	r8,20(r1)	 # SI load
.L14258:
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r2,-24(r3)	 # SI load
	l.ori   	r4,r4,65535
	l.and   	r2,r2,r4
	l.sfnei	r2,0
	l.bf	.L14013	# delay slot filled
	l.addi  	r16,r14,1
	l.lwz   	r6,20(r1)	 # SI load
	l.lwz   	r2,-12(r6)	 # SI load
	l.sfnei	r2,0
	l.bf	.L14381	# delay slot filled
	l.lwz   	r8,20(r1)	 # SI load
	l.addi  	r16,r14,1
	l.slli  	r2,r16,4
	l.add   	r2,r24,r2
	l.lwz   	r6,0(r2)	 # SI load
	l.sfnei	r6,0
	l.bf	.L14382	# delay slot filled
	l.addi  	r3,r8,-64
	l.lwz   	r7,20(r1)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.lwz   	r2,-60(r7)	 # SI load
.L14333:
	l.j     	.L14021	# delay slot filled
	l.lwz   	r14,0(r24)	 # SI load
.L14207:
	l.j     	.L14094	# delay slot filled
	l.ori   	r14,r26,0	 # move reg to reg
.L14212:
	l.ori   	r16,r11,0	 # move reg to reg
	l.j     	.L14094	# delay slot filled
	l.ori   	r14,r16,0	 # move reg to reg
.L14073:
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r4,-12(r5)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14303:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14301:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14061:
	l.lwz   	r5,20(r1)	 # SI load
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.lwz   	r4,-12(r5)	 # SI load
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14300:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14304:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14098:
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.lwz   	r4,148(r1)	 # SI load
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14094	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3CheckObjectName	# delay slot filled
	l.ori   	r14,r2,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14372	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.add   	r2,r18,r18
	l.lwz   	r28,8(r20)	 # SI load
	l.add   	r2,r2,r18
	l.ori   	r5,r16,0	 # move reg to reg
	l.slli  	r2,r2,3
	l.add   	r6,r28,r2
	l.sw    	60(r1),r2	 # SI store
	l.lwz   	r6,20(r6)	 # SI load
	l.addi  	r6,r6,36
.L14099:
	l.lbs   	r14,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r14,0
	l.bnf	.L14348	# delay slot filled
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.j     	.L14099	# delay slot filled
	l.addi  	r5,r5,1
.L14348:
	l.sub   	r5,r5,r16
	l.ori   	r11,r11,65535
	l.ori   	r3,r6,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3HashFind	# delay slot filled
	l.and   	r5,r5,r11
	l.sfeqi	r11,0
	l.bf	.L14101	# delay slot filled
	l.lwz   	r2,44(r1)	 # SI load
	l.sfnei	r2,0
	l.bf	.L14094	# delay slot filled
	l.movhi  	r4,hi(.LC431)
	l.lwz   	r2,148(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC431)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.j     	.L14372	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L14305:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14327:
	l.movhi  	r5,hi(.LC416)
	l.addi  	r4,r0,22	 # move immediate I
	l.ori   	r5,r5,lo(.LC416)
	l.ori   	r6,r2,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13991	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14329:
	l.movhi  	r5,hi(.LC414)
	l.addi  	r4,r0,22	 # move immediate I
	l.ori   	r5,r5,lo(.LC414)
	l.ori   	r6,r14,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13982	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
.L13991:
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r30,12
	l.sfnei	r11,0
	l.bnf	.L14349	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r4,r0,15	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r2,r14,0	 # move reg to reg
	l.ori   	r6,r14,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L13982:
	l.lwz   	r3,0(r30)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r30,12
	l.sfnei	r11,0
	l.bnf	.L14350	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r18,7
	l.bf	.L13984	# delay slot filled
	l.addi  	r20,r0,1	 # move immediate I
.L13985:
	l.lwz   	r3,4(r2)	 # SI load
	l.sflts 	r16,r3
	l.bnf	.L13984	# delay slot filled
	l.sfnei	r18,9
	l.bnf	.L14351	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
.L13986:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,102	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.sll   	r4,r20,r16
	l.lwz   	r3,144(r14)	 # SI load
	l.and   	r5,r4,r3
	l.sfnei	r5,0
	l.bf	.L13987	# delay slot filled
	l.or    	r3,r4,r3
	l.sw    	144(r14),r3	 # SI store
.L13987:
	l.j     	.L13985	# delay slot filled
	l.addi  	r16,r16,1
.L14351:
	l.j     	.L13986	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
.L13984:
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,15	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14350:
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14349:
	l.ori   	r6,r11,0	 # move reg to reg
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14292:
	l.ori   	r6,r2,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14291:
	l.ori   	r6,r2,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14193:
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14192:
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14281:
	l.j     	.L13993	# delay slot filled
	l.addi  	r16,r14,1
.L14344:
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L13993	# delay slot filled
	l.lwz   	r14,0(r24)	 # SI load
.L14188:
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
.L14002:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.lwz   	r5,0(r24)	 # SI load
.L14346:
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC426)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.j     	.L14360	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L14345:
	l.sfnei	r18,0
	l.bf	.L14383	# delay slot filled
	l.addi  	r11,r0,1	 # movqi: move immediate
	l.movhi  	r4,hi(.LC425)
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC425)
	l.sw    	0(r1),r22	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r18	 # SI store
	l.addi  	r11,r0,1	 # movqi: move immediate
.L14383:
	l.j     	.L14079	# delay slot filled
	l.sb    	18(r30),r11	    # movqi
.L14140:
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.j     	.L14134	# delay slot filled
	l.sb    	30(r16),r2	    # movqi
.L14336:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r3,0	 # move reg to reg
.L14180:
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14178:
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r30,0	 # move reg to reg
.L14330:
	l.addi  	r28,r30,12
	l.ori   	r3,r26,0	 # move reg to reg
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13970	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.addi  	r4,r0,39	 # move immediate I
	l.lwz   	r2,344(r30)	 # SI load
	l.sflesi	r2,0
	l.bf	.L13971	# delay slot filled
	l.addi  	r4,r2,-1
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.addi  	r18,r30,348
	l.lwz   	r2,4(r26)	 # SI load
	l.ori   	r20,r14,0	 # move reg to reg
.L13972:
	l.sflts 	r16,r2
	l.bnf	.L14352
	l.nop			# nop delay slot
	l.lwz   	r3,340(r30)	 # SI load
	l.and   	r3,r14,r3
	l.sfeqi	r3,0
	l.bf	.L13973	# delay slot filled
	l.sll   	r3,r20,r16
	l.lwz   	r2,144(r22)	 # SI load
	l.and   	r4,r3,r2
	l.sfnei	r4,0
	l.bf	.L13974	# delay slot filled
	l.or    	r2,r3,r2
	l.sw    	144(r22),r2	 # SI store
.L13974:
	l.lwz   	r2,336(r30)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.and   	r2,r14,r2
	l.addi  	r4,r0,102	 # move immediate I
	l.sub   	r6,r0,r2
	l.ori   	r5,r16,0	 # move reg to reg
	l.or    	r6,r6,r2
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.srli  	r6,r6,31
	l.lbz   	r2,128(r26)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L14254	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r2,4(r26)	 # SI load
.L13973:
	l.add   	r14,r14,r14
	l.addi  	r16,r16,1
	l.j     	.L13972	# delay slot filled
	l.addi  	r18,r18,4
.L14352:
	l.addi  	r14,r0,0	 # move immediate I
	l.addi  	r18,r0,-10	 # move immediate I
	l.ori   	r16,r14,0	 # move reg to reg
	l.lwz   	r2,504(r30)	 # SI load
.L14373:
	l.sflts 	r16,r2
	l.bnf	.L14353	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r2,508(r30)	 # SI load
	l.add   	r2,r2,r14
	l.ori   	r3,r22,0	 # move reg to reg
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r4,r0,124	 # move immediate I
	l.lwz   	r8,56(r2)	 # SI load
	l.ori   	r6,r5,0	 # move reg to reg
	l.ori   	r7,r5,0	 # move reg to reg
	l.addi  	r16,r16,1
	l.addi  	r14,r14,4
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r18	 # SI store
	l.j     	.L14373	# delay slot filled
	l.lwz   	r2,504(r30)	 # SI load
.L14254:
	l.addi  	r4,r0,99	 # move immediate I
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,0(r18)	 # SI load
	l.j     	.L13973	# delay slot filled
	l.lwz   	r2,4(r26)	 # SI load
.L14353:
	l.addi  	r8,r0,0	 # move immediate I
	l.lwz   	r3,0(r30)	 # SI load
	l.sw    	504(r30),r8	 # SI store
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r4,r28,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L13978	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r14,r0,0	 # move immediate I
	l.addi  	r20,r0,-2	 # move immediate I
	l.j     	.L13979	# delay slot filled
	l.ori   	r16,r14,0	 # move reg to reg
.L13980:
	l.lwz   	r2,400(r30)	 # SI load
	l.add   	r2,r2,r14
	l.addi  	r4,r0,97	 # move immediate I
	l.lbz   	r7,8(r2)	 # zero_extendqisi2
	l.lwz   	r6,4(r2)	 # SI load
	l.lwz   	r8,12(r2)	 # SI load
	l.sw    	0(r1),r20	 # SI store
	l.addi  	r16,r16,1
	l.lwz   	r5,0(r2)	 # SI load
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.addi  	r14,r14,16
.L13979:
	l.lwz   	r2,396(r30)	 # SI load
	l.sflts 	r16,r2
	l.bf	.L13980	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L13978:
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,96	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.lwz   	r6,344(r30)	 # SI load
.L13971:
	l.lwz   	r2,64(r30)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L13970
	l.nop			# nop delay slot
	l.lbz   	r2,30(r26)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L14354	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L13970:
	l.lwz   	r2,4(r30)	 # SI load
	l.sfnei	r2,0
	l.bf	.L13981
	l.nop			# nop delay slot
	l.addi  	r2,r0,1	 # move immediate I
	l.sw    	4(r30),r2	 # SI store
.L13981:
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r5,0(r24)	 # SI load
	l.sw    	68(r30),r6	 # SI store
	l.sw    	72(r30),r6	 # SI store
	l.sw    	76(r30),r6	 # SI store
	l.sw    	412(r30),r6	 # SI store
	l.sw    	340(r30),r6	 # SI store
	l.sw    	344(r30),r6	 # SI store
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14325:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r3,0	 # move reg to reg
.L14306:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14354:
	l.lbz   	r7,440(r30)	 # zero_extendqisi2
	l.lwz   	r4,412(r30)	 # SI load
	l.lwz   	r5,72(r30)	 # SI load
	l.jal   	sqlite3VdbeMakeReady	# delay slot filled
	l.lwz   	r6,68(r30)	 # SI load
	l.sb    	16(r30),r2	    # movqi
	l.addi  	r2,r0,101	 # move immediate I
	l.j     	.L13981	# delay slot filled
	l.sw    	4(r30),r2	 # SI store
.L14324:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14174:
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14185:
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r6,0	 # move reg to reg
.L14183:
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r30,0	 # move reg to reg
.L14299:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14326:
	l.lwz   	r5,0(r24)	 # SI load
	l.j     	.L13795	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
.L14172:
	l.ori   	r6,r30,0	 # move reg to reg
	l.j     	.L13795	# delay slot filled
	l.ori   	r2,r30,0	 # move reg to reg
.L14101:
	l.movhi  	r4,hi(.LC49)
	l.lwz   	r3,4(r22)	 # SI load
	l.ori   	r4,r4,lo(.LC49)
	l.addi  	r5,r0,7	 # move immediate I
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.sw    	44(r1),r3	 # SI store
	l.sfnei	r11,0
	l.bnf	.L14355	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r4,40(r1)	 # SI load
	l.xori  	r15,r4,47
	l.sub   	r14,r0,r15
	l.or    	r14,r14,r15
	l.sfgesi	r14,0
	l.bf	.L14103	# delay slot filled
	l.lwz   	r5,28(r22)	 # SI load
	l.sub   	r14,r0,r5
	l.or    	r14,r5,r14
	l.sfgesi	r14,0
	l.bf	.L14384	# delay slot filled
	l.sub   	r13,r0,r15
	l.movhi  	r2,hi(.LC412)
	l.sfnei	r4,33
	l.bf	.L14104	# delay slot filled
	l.ori   	r2,r2,lo(.LC412)
	l.movhi  	r2,hi(.LC411)
	l.ori   	r2,r2,lo(.LC411)
.L14104:
	l.movhi  	r4,hi(.LC433)
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC433)
	l.sw    	0(r1),r2	 # SI store
	l.sw    	4(r1),r26	 # SI store
	l.sw    	8(r1),r5	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.j     	.L14372	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L14103:
	l.sub   	r13,r0,r15
.L14384:
	l.or    	r13,r13,r15
	l.xori  	r13,r13,0xffff
	l.srli  	r13,r13,31
	l.sfeqi	r13,0
	l.bnf	.L14356	# delay slot filled
	l.sw    	56(r1),r13	 # SI store
	l.movhi  	r8,hi(.LC441)
.L14386:
	l.lwz   	r7,72(r22)	 # SI load
	l.ori   	r8,r8,lo(.LC441)
	l.sfeqi	r7,0
	l.bf	.L14106	# delay slot filled
	l.lwz   	r14,0(r8)	 # SI load
	l.lwz   	r8,4(r20)	 # SI load
	l.addi  	r5,r28,20
	l.addi  	r14,r0,0	 # move immediate I
.L14107:
	l.sflts 	r14,r8
	l.bnf	.L14106
	l.nop			# nop delay slot
	l.lwz   	r2,0(r5)	 # SI load
	l.sfeq 	r7,r2
	l.bf	.L14106	# delay slot filled
	l.addi  	r5,r5,24
	l.j     	.L14107	# delay slot filled
	l.addi  	r14,r14,1
.L14355:
	l.movhi  	r4,hi(.LC432)
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC432)
	l.lwz   	r2,64(r30)	 # SI load
	l.addi  	r2,r2,1
	l.j     	.L14094	# delay slot filled
	l.sw    	64(r30),r2	 # SI store
.L14106:
	l.add   	r7,r14,r14
	l.lwz   	r11,32(r1)	 # SI load
	l.add   	r7,r7,r14
	l.sfeqi	r11,0
	l.slli  	r7,r7,3
	l.add   	r7,r28,r7
	l.lwz   	r2,0(r7)	 # SI load
	l.bf	.L14109	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.lwz   	r7,24(r28)	 # SI load
.L14109:
	l.xori  	r14,r14,1
	l.sub   	r13,r0,r14
	l.or    	r13,r13,r14
	l.xori  	r13,r13,0xffff
	l.srli  	r18,r13,31
	l.sfnei	r18,0
	l.bf	.L14110	# delay slot filled
	l.addi  	r12,r0,5	 # move immediate I
	l.lwz   	r3,32(r1)	 # SI load
	l.sub   	r12,r0,r3
	l.or    	r12,r12,r3
	l.sfltsi	r12,0
	l.bf	.L14110	# delay slot filled
	l.addi  	r12,r0,5	 # move immediate I
	l.addi  	r12,r0,7	 # move immediate I
.L14110:
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r12,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r6,44(r1)	 # SI load
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.sfne 	r11,r14
	l.bf	.L14372	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.movhi  	r5,hi(.LC199)
	l.sfeq 	r18,r14
	l.bf	.L14111	# delay slot filled
	l.ori   	r5,r5,lo(.LC199)
	l.movhi  	r5,hi(.LC198)
	l.ori   	r5,r5,lo(.LC198)
.L14111:
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r14,r6,0	 # move reg to reg
	l.addi  	r4,r0,18	 # move immediate I
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.sfne 	r11,r14
	l.bf	.L14372	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,56(r1)	 # SI load
	l.sfeq 	r4,r14
	l.bf	.L14385	# delay slot filled
	l.addi  	r5,r0,33	 # move immediate I
	l.sw    	40(r1),r5	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
.L14385:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.addi  	r4,r0,44	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L14094	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.sw    	0(r11),r16	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.lwz   	r4,8(r26)	 # SI load
	l.lwz   	r6,8(r20)	 # SI load
	l.lwz   	r7,60(r1)	 # SI load
	l.lwz   	r8,68(r1)	 # SI load
	l.add   	r2,r6,r7
	l.lwz   	r5,72(r22)	 # SI load
	l.lwz   	r2,20(r2)	 # SI load
	l.sb    	8(r14),r8	    # movqi
	l.sw    	4(r14),r11	 # SI store
	l.sw    	28(r14),r2	 # SI store
	l.lwz   	r11,40(r1)	 # SI load
	l.sw    	32(r14),r5	 # SI store
	l.sfnei	r11,33
	l.bf	.L14113	# delay slot filled
	l.addi  	r2,r0,2	 # move immediate I
	l.addi  	r2,r0,1	 # move immediate I
.L14113:
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,52(r1)	 # SI load
	l.sb    	9(r14),r2	    # movqi
	l.jal   	sqlite3ExprDup	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,48(r1)	 # SI load
	l.jal   	sqlite3IdListDup	# delay slot filled
	l.sw    	12(r14),r11	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
	l.sw    	16(r14),r11	 # SI store
	l.addi  	r4,r14,20
	l.jal   	sqlite3TokenCopy	# delay slot filled
	l.lwz   	r5,148(r1)	 # SI load
	l.j     	.L14094	# delay slot filled
	l.sw    	480(r30),r14	 # SI store
.L14356:
	l.sub   	r7,r0,r5
	l.or    	r7,r5,r7
	l.sfltsi	r7,0
	l.bf	.L14386	# delay slot filled
	l.movhi  	r8,hi(.LC441)
	l.movhi  	r4,hi(.LC434)
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC434)
	l.sw    	0(r1),r26	 # SI store
	l.sw    	4(r1),r6	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r14,r6,0	 # move reg to reg
	l.j     	.L14372	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.LFE1178:
	.size	sqlite3Parser, .-sqlite3Parser
	.section	.rodata.str1.1
.LC443:
	.string	"interrupt"
.LC444:
	.string	"unrecognized token: \"%T\""
	.section .text
	.align	4
.proc	sqlite3RunParser
	.type	sqlite3RunParser, @function
sqlite3RunParser:
.LFB1182:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4131:
	l.lwz   	r16,0(r3)	 # SI load
	l.sw    	-44(r1),r2	 # SI store
.LCFI4132:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4133:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4134:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4135:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4136:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4137:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4138:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4139:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4140:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4141:
	l.ori   	r2,r3,0	 # move reg to reg
	l.lwz   	r3,144(r16)	 # SI load
	l.addi  	r1,r1,-68
.LCFI4142:
	l.ori   	r24,r4,0	 # move reg to reg
	l.ori   	r26,r5,0	 # move reg to reg
	l.sfnei	r3,0
	l.bf	.L14389	# delay slot filled
	l.lwz   	r28,84(r16)	 # SI load
	l.sw    	216(r16),r3	 # SI store
.L14389:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	468(r2),r24	 # SI store
	l.sw    	4(r2),r3	 # SI store
	l.sw    	472(r2),r24	 # SI store
	l.jal   	sqlite3Malloc	# delay slot filled
	l.addi  	r3,r0,1612	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L14390	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r3,r0,-1	 # move immediate I
	l.lwz   	r4,240(r16)	 # SI load
	l.sw    	0(r11),r3	 # SI store
	l.sfnei	r4,0
	l.lbz   	r4,226(r16)	 # zero_extendqisi2
	l.bnf	.L14392	# delay slot filled
	l.sw    	8(r1),r4	 # SI store
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.sb    	226(r16),r7	    # movqi
.L14392:
	l.lwz   	r3,464(r2)	 # SI load
	l.movhi 	r4,hi(1073741824)	 # move immediate M
	l.addi  	r8,r0,-1	 # move immediate I
	l.or    	r3,r3,r4
	l.sw    	4(r1),r8	 # SI store
	l.addi  	r20,r0,0	 # move immediate I
	l.sw    	464(r2),r3	 # SI store
	l.ori   	r22,r24,0	 # move reg to reg
	l.addi  	r30,r1,20
.L14436:
	l.lbz   	r3,30(r16)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L14396	# delay slot filled
	l.ori   	r18,r22,0	 # move reg to reg
	l.lbs   	r3,0(r22)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bnf	.L14406	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sw    	460(r2),r18	 # SI store
	l.jal   	sqlite3GetToken	# delay slot filled
	l.ori   	r4,r30,0	 # move reg to reg
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.lwz   	r3,464(r2)	 # SI load
	l.ori   	r5,r5,65535
	l.movhi 	r7,hi(-1073741824)	 # move immediate M
	l.and   	r11,r11,r5
	l.and   	r3,r3,r7
	l.add   	r20,r20,r11
	l.or    	r11,r3,r11
	l.sfges 	r28,r20
	l.bnf	.L14440	# delay slot filled
	l.sw    	464(r2),r11	 # SI store
	l.lwz   	r6,20(r1)	 # SI load
	l.sfeqi	r6,147
	l.bf	.L14399	# delay slot filled
	l.sfeqi	r6,148
	l.bf	.L14400	# delay slot filled
	l.sfeqi	r6,1
	l.bf	.L14398	# delay slot filled
	l.add   	r22,r24,r20
	l.ori   	r18,r22,0	 # move reg to reg
.L14401:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r6,0	 # move reg to reg
	l.addi  	r5,r1,12
		l.lwz   	r7, 460(r2)
		l.lwz   	r8, 460+4(r2)
		l.sw    	12(r1), r7
		l.sw    	12+4(r1), r8
	l.jal   	sqlite3Parser	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.lwz   	r8,20(r1)	 # SI load
	l.lwz   	r3,4(r2)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14436	# delay slot filled
	l.sw    	4(r1),r8	 # SI store
.L14396:
	l.lbz   	r20,0(r18)	 # zero_extendqisi2
.L14451:
	l.addi  	r20,r20,-1
	l.srli  	r20,r20,31
	l.sfeqi	r20,0
	l.bf	.L14403
	l.nop			# nop delay slot
.L14406:
	l.lwz   	r3,4(r2)	 # SI load
	l.addi  	r20,r0,0	 # move immediate I
	l.sfne 	r3,r20
	l.bf	.L14403	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.sfeqi	r3,1
	l.bnf	.L14438	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r20,r1,12
.L14407:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r6,r2,0	 # move reg to reg
		l.lwz   	r7, 460(r2)
		l.lwz   	r8, 460+4(r2)
		l.sw    	12(r1), r7
		l.sw    	12+4(r1), r8
	l.jal   	sqlite3Parser	# delay slot filled
	l.ori   	r20,r4,0	 # move reg to reg
	l.j     	.L14447	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
.L14399:
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,0(r26)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r20,r0,1	 # move immediate I
	l.movhi  	r4,hi(.LC444)
	l.addi  	r5,r2,460
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC444)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.sw    	0(r26),r11	 # SI store
.L14403:
	l.lwz   	r3,0(r14)	 # SI load
.L14447:
	l.sfltsi	r3,0
	l.bf	.L14408
	l.nop			# nop delay slot
.L14433:
	l.jal   	yy_pop_parser_stack	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,0(r14)	 # SI load
	l.sfgesi	r4,0
	l.bf	.L14433
	l.nop			# nop delay slot
.L14408:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r8,8(r1)	 # SI load
	l.lbz   	r3,30(r16)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L14441	# delay slot filled
	l.sb    	226(r16),r8	    # movqi
	l.lwz   	r3,4(r2)	 # SI load
	l.xori  	r4,r3,101
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bnf	.L14442	# delay slot filled
	l.sub   	r4,r0,r3
.L14412:
	l.lwz   	r4,8(r2)	 # SI load
.L14448:
	l.sfeqi	r4,0
	l.bf	.L14415
	l.nop			# nop delay slot
.L14413:
	l.lwz   	r3,0(r26)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14443
	l.nop			# nop delay slot
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L14417:
	l.addi  	r7,r0,0	 # move immediate I
	l.addi  	r20,r20,1
	l.sw    	8(r2),r7	 # SI store
.L14415:
	l.lwz   	r3,12(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14418
	l.nop			# nop delay slot
	l.lwz   	r4,64(r2)	 # SI load
	l.sflesi	r4,0
	l.bf	.L14418
	l.nop			# nop delay slot
	l.lbz   	r14,19(r2)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bnf	.L14444
	l.nop			# nop delay slot
.L14419:
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,508(r2)	 # SI load
	l.lbz   	r3,500(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L14445
	l.nop			# nop delay slot
.L14420:
	l.lwz   	r4,480(r2)	 # SI load
.L14449:
	l.jal   	sqlite3DeleteTrigger	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,424(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,436(r2)	 # SI load
	l.lwz   	r3,516(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14453	# delay slot filled
	l.sfeqi	r20,0
.L14432:
	l.lwz   	r4,76(r3)	 # SI load
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.sw    	516(r2),r4	 # SI store
	l.lwz   	r3,516(r2)	 # SI load
	l.sfnei	r3,0
	l.bf	.L14432	# delay slot filled
	l.sfeqi	r20,0
.L14453:
	l.bf	.L14393
	l.nop			# nop delay slot
	l.lwz   	r3,4(r2)	 # SI load
	l.xori  	r4,r3,101
	l.sub   	r5,r0,r4
	l.or    	r4,r5,r4
	l.sfgesi	r4,0
	l.bnf	.L14446	# delay slot filled
	l.sub   	r4,r0,r3
	l.addi  	r3,r0,1	 # move immediate I
.L14455:
	l.sw    	4(r2),r3	 # SI store
.L14393:
	l.addi	r1,r1,68
.L14450:
	l.ori   	r11,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L14398:
	l.ori   	r18,r22,0	 # move reg to reg
	l.j     	.L14401	# delay slot filled
	l.sw    	472(r2),r22	 # SI store
.L14400:
	l.lwz   	r3,216(r16)	 # SI load
	l.sfeqi	r3,0
	l.bnf	.L14437	# delay slot filled
	l.addi  	r4,r0,9	 # move immediate I
	l.j     	.L14436	# delay slot filled
	l.add   	r22,r24,r20
.L14441:
	l.addi  	r3,r0,7	 # move immediate I
	l.sw    	4(r2),r3	 # SI store
	l.lwz   	r4,8(r2)	 # SI load
.L14452:
	l.sfnei	r4,0
	l.bf	.L14413	# delay slot filled
	l.movhi  	r6,hi(.LC124)
	l.andi  	r4,r3,255
	l.addi  	r3,r2,8
	l.sfgtui	r4,26
	l.bf	.L14414	# delay slot filled
	l.ori   	r6,r6,lo(.LC124)
	l.movhi  	r5,hi(aMsg.21565)
	l.slli  	r4,r4,2
	l.ori   	r5,r5,lo(aMsg.21565)
	l.add   	r4,r4,r5
	l.lwz   	r6,0(r4)	 # SI load
	l.sfeqi	r6,0
	l.bnf	.L14454	# delay slot filled
	l.movhi  	r5,hi(.LC78)
	l.movhi  	r6,hi(.LC124)
	l.ori   	r6,r6,lo(.LC124)
.L14414:
	l.movhi  	r5,hi(.LC78)
.L14454:
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3SetString	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.j     	.L14448	# delay slot filled
	l.lwz   	r4,8(r2)	 # SI load
.L14444:
	l.jal   	sqlite3VdbeDelete
	l.nop			# nop delay slot
	l.sw    	12(r2),r14	 # SI store
.L14418:
	l.lbz   	r14,19(r2)	 # zero_extendqisi2
	l.sfnei	r14,0
	l.bf	.L14419	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,400(r2)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.sw    	400(r2),r14	 # SI store
	l.sw    	396(r2),r14	 # SI store
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,508(r2)	 # SI load
	l.lbz   	r3,500(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L14420
	l.nop			# nop delay slot
.L14445:
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.lwz   	r3,476(r2)	 # SI load
	l.j     	.L14449	# delay slot filled
	l.lwz   	r4,480(r2)	 # SI load
.L14446:
	l.or    	r3,r4,r3
	l.sfltsi	r3,0
	l.bnf	.L14455	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.j     	.L14450	# delay slot filled
	l.addi	r1,r1,68
.L14443:
	l.j     	.L14417	# delay slot filled
	l.sw    	0(r26),r4	 # SI store
.L14390:
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.addi  	r20,r0,7	 # move immediate I
	l.j     	.L14393	# delay slot filled
	l.sb    	30(r16),r5	    # movqi
.L14438:
	l.addi  	r20,r1,12
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
		l.lwz   	r7, 460(r2)
		l.lwz   	r8, 460+4(r2)
		l.sw    	12(r1), r7
		l.sw    	12+4(r1), r8
	l.jal   	sqlite3Parser	# delay slot filled
	l.ori   	r6,r2,0	 # move reg to reg
	l.j     	.L14407	# delay slot filled
	l.sw    	472(r2),r18	 # SI store
.L14440:
	l.addi  	r3,r0,18	 # move immediate I
	l.add   	r18,r24,r20
	l.j     	.L14396	# delay slot filled
	l.sw    	4(r2),r3	 # SI store
.L14437:
	l.movhi  	r5,hi(.LC443)
	l.sw    	4(r2),r4	 # SI store
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC443)
	l.jal   	sqlite3SetString	# delay slot filled
	l.add   	r18,r24,r20
	l.j     	.L14451	# delay slot filled
	l.lbz   	r20,0(r18)	 # zero_extendqisi2
.L14442:
	l.or    	r4,r4,r3
	l.sfgesi	r4,0
	l.bf	.L14412
	l.nop			# nop delay slot
	l.j     	.L14452	# delay slot filled
	l.lwz   	r4,8(r2)	 # SI load
.LFE1182:
	.size	sqlite3RunParser, .-sqlite3RunParser
	.align	4
.proc	sqlite3_declare_vtab
	.global sqlite3_declare_vtab
	.type	sqlite3_declare_vtab, @function
sqlite3_declare_vtab:
.LFB1118:
	l.sw    	-20(r1),r2	 # SI store
.LCFI4143:
	l.sw    	-16(r1),r14	 # SI store
.LCFI4144:
	l.sw    	-12(r1),r16	 # SI store
.LCFI4145:
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI4146:
	l.sw    	-8(r1),r18	 # SI store
.LCFI4147:
	l.addi  	r1,r1,-544
.LCFI4148:
	l.lwz   	r16,284(r3)	 # SI load
	l.sw    	520(r1),r5	 # SI store
	l.ori   	r2,r3,0	 # move reg to reg
	l.sfne 	r16,r5
	l.bnf	.L14462	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r1,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,520	 # move immediate I
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.ori   	r3,r1,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r5,r1,520
	l.sb    	500(r1),r6	    # movqi
	l.jal   	sqlite3RunParser	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.sfnei	r11,0
	l.bf	.L14459	# delay slot filled
	l.lwz   	r3,476(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14464	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r4,28(r3)	 # SI load
	l.sfnei	r4,0
	l.bnf	.L14463
	l.nop			# nop delay slot
.L14459:
	l.addi  	r4,r0,1	 # move immediate I
.L14464:
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,520(r1)	 # SI load
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,520(r1)	 # SI load
.L14460:
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.lwz   	r3,12(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14461	# delay slot filled
	l.sb    	500(r1),r4	    # movqi
	l.jal   	sqlite3VdbeFinalize
	l.nop			# nop delay slot
.L14461:
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.lwz   	r3,476(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.sw    	476(r1),r5	 # SI store
	l.addi	r1,r1,544
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L14462:
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.addi  	r4,r0,21	 # move immediate I
	l.addi	r1,r1,544
	l.addi  	r11,r0,21	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L14463:
	l.lbz   	r14,34(r3)	 # zero_extendqisi2
	l.andi  	r14,r14,16
	l.sfnei	r14,0
	l.bf	.L14464	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r5,16(r3)	 # SI load
	l.lwz   	r4,12(r3)	 # SI load
	l.sw    	16(r16),r5	 # SI store
	l.sw    	12(r16),r4	 # SI store
	l.sw    	12(r3),r14	 # SI store
	l.sw    	16(r3),r14	 # SI store
	l.j     	.L14460	# delay slot filled
	l.sw    	284(r2),r14	 # SI store
.LFE1118:
	.size	sqlite3_declare_vtab, .-sqlite3_declare_vtab
	.align	4
.proc	sqlite3NestedParse
	.type	sqlite3NestedParse, @function
sqlite3NestedParse:
.LFB850:
	l.sw    	-28(r1),r2	 # SI store
.LCFI4149:
	l.sw    	-24(r1),r14	 # SI store
.LCFI4150:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-20(r1),r16	 # SI store
.LCFI4151:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI4152:
	l.sw    	-16(r1),r18	 # SI store
.LCFI4153:
	l.sw    	-12(r1),r20	 # SI store
.LCFI4154:
	l.sw    	-8(r1),r22	 # SI store
.LCFI4155:
	l.addi  	r1,r1,-140
.LCFI4156:
	l.lwz   	r16,64(r2)	 # SI load
	l.sw    	108(r1),r3	 # SI store
	l.sfne 	r16,r3
	l.bnf	.L14467	# delay slot filled
	l.lwz   	r14,0(r2)	 # SI load
.L14465:
	l.addi	r1,r1,140
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L14467:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3VMPrintf	# delay slot filled
	l.addi  	r5,r1,140
	l.sfeqi	r11,0
	l.bf	.L14465	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lbz   	r3,19(r2)	 # zero_extendqisi2
	l.addi  	r20,r2,412
	l.addi  	r3,r3,1
	l.addi  	r5,r0,108	 # move immediate I
	l.sb    	19(r2),r3	    # movqi
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r3,r1,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,108	 # move immediate I
	l.addi  	r5,r1,108
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3RunParser	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,108(r1)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r1,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.addi  	r5,r0,108	 # move immediate I
	l.lbz   	r3,19(r2)	 # zero_extendqisi2
	l.addi  	r3,r3,-1
	l.j     	.L14465	# delay slot filled
	l.sb    	19(r2),r3	    # movqi
.LFE850:
	.size	sqlite3NestedParse, .-sqlite3NestedParse
	.section	.rodata.str1.1
.LC445:
	.string	"TABLE"
.LC446:
	.string	"VIEW"
.LC447:
	.string	"view"
.LC448:
	.string	")"
.LC449:
	.string	"\n)"
.LC450:
	.string	",\n  "
.LC451:
	.string	"\n  "
.LC452:
	.string	"CREATE %s %.*s"
.LC453:
	.string	"CREATE TABLE "
.LC454:
	.string	"UPDATE %Q.%s SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q WHERE rowid=#%d"
.LC455:
	.string	"CREATE TABLE %Q.sqlite_sequence(name,seq)"
.LC456:
	.string	"tbl_name='%q'"
	.section .text
	.align	4
.proc	sqlite3EndTable
	.type	sqlite3EndTable, @function
sqlite3EndTable:
.LFB884:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4157:
	l.sub   	r2,r0,r6
	l.sw    	-40(r1),r14	 # SI store
.LCFI4158:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4159:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4160:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4161:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4162:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4163:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4164:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4165:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4166:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4167:
	l.or    	r2,r6,r2
	l.addi  	r1,r1,-208
.LCFI4168:
	l.ori   	r18,r6,0	 # move reg to reg
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r26,r4,0	 # move reg to reg
	l.ori   	r22,r5,0	 # move reg to reg
	l.sfltsi	r2,0
	l.bnf	.L14532	# delay slot filled
	l.lwz   	r20,0(r3)	 # SI load
.L14525:
	l.lwz   	r2,64(r14)	 # SI load
	l.sfnei	r2,0
	l.bf	.L14468
	l.nop			# nop delay slot
	l.lbz   	r2,30(r20)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L14468
	l.nop			# nop delay slot
	l.lwz   	r16,476(r14)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L14468
	l.nop			# nop delay slot
	l.lwz   	r6,72(r16)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L14511
	l.nop			# nop delay slot
	l.lwz   	r5,4(r20)	 # SI load
	l.sflesi	r5,0
	l.bf	.L14471
	l.nop			# nop delay slot
	l.lwz   	r7,8(r20)	 # SI load
	l.lwz   	r3,20(r7)	 # SI load
	l.sfeq 	r6,r3
	l.bf	.L14471
	l.nop			# nop delay slot
	l.j     	.L14472	# delay slot filled
	l.addi  	r7,r7,44
.L14473:
	l.lwz   	r3,0(r7)	 # SI load
	l.sfeq 	r6,r3
	l.bf	.L14471	# delay slot filled
	l.addi  	r7,r7,24
.L14472:
	l.addi  	r2,r2,1
	l.sflts 	r2,r5
	l.bf	.L14473
	l.nop			# nop delay slot
.L14471:
	l.lwz   	r3,44(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14474	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r6,r1,52
	l.addi  	r3,r1,108
	l.sw    	0(r6),r4	 # SI store
	l.sw    	8(r6),r4	 # SI store
	l.sw    	4(r6),r4	 # SI store
	l.sw    	16(r6),r4	 # SI store
	l.sw    	12(r6),r4	 # SI store
	l.sw    	20(r3),r4	 # SI store
	l.sw    	28(r6),r4	 # SI store
	l.sw    	0(r3),r4	 # SI store
	l.sw    	4(r3),r4	 # SI store
	l.sw    	20(r6),r4	 # SI store
	l.sw    	24(r6),r4	 # SI store
	l.sw    	12(r3),r4	 # SI store
	l.sw    	16(r3),r4	 # SI store
	l.sw    	24(r3),r4	 # SI store
	l.sw    	28(r3),r4	 # SI store
	l.sw    	32(r3),r4	 # SI store
	l.sw    	32(r6),r4	 # SI store
	l.sw    	36(r6),r4	 # SI store
	l.sw    	40(r6),r4	 # SI store
	l.sw    	44(r6),r4	 # SI store
	l.sw    	48(r6),r4	 # SI store
	l.sw    	52(r6),r4	 # SI store
	l.sw    	8(r3),r4	 # SI store
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.lwz   	r5,4(r16)	 # SI load
	l.sb    	130(r1),r7	    # movqi
	l.sw    	60(r1),r5	 # SI store
	l.addi  	r7,r0,1	 # movhi: move immediate
	l.addi  	r5,r0,-1	 # move immediate I
	l.lwz   	r4,44(r16)	 # SI load
	l.sh    	52(r1),r7	 # movhi
	l.sw    	68(r1),r16	 # SI store
	l.sw    	80(r1),r5	 # SI store
	l.sw    	108(r1),r14	 # SI store
	l.jal   	sqlite3ResolveExprNames	# delay slot filled
	l.sw    	112(r1),r6	 # SI store
	l.sfnei	r11,0
	l.bf	.L14468
	l.nop			# nop delay slot
.L14474:
	l.lbz   	r3,128(r20)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L14533
	l.nop			# nop delay slot
.L14475:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r14,12
	l.sfeqi	r11,0
	l.bf	.L14468	# delay slot filled
	l.sw    	40(r1),r11	 # SI store
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,33	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,28(r16)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14534	# delay slot filled
	l.movhi  	r4,hi(.LC447)
	l.movhi  	r5,hi(.LC446)
	l.ori   	r4,r4,lo(.LC447)
	l.ori   	r5,r5,lo(.LC446)
	l.sw    	44(r1),r4	 # SI store
.L14477:
	l.sfeqi	r18,0
	l.bf	.L14478	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r4,r0,10	 # move immediate I
	l.lwz   	r6,408(r14)	 # SI load
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.lwz   	r5,40(r1)	 # SI load
	l.lwz   	r3,20(r5)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14479	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.lwz   	r4,12(r5)	 # SI load
	l.addi  	r4,r4,-1
	l.slli  	r5,r4,2
	l.slli  	r4,r4,4
	l.add   	r4,r5,r4
	l.add   	r3,r3,r4
	l.sb    	3(r3),r6	    # movqi
.L14479:
	l.addi  	r3,r0,2	 # move immediate I
	l.addi  	r7,r0,8	 # movqi: move immediate
	l.addi  	r24,r0,1	 # move immediate I
	l.addi  	r6,r0,0	 # movqi: move immediate
	l.ori   	r4,r18,0	 # move reg to reg
	l.addi  	r5,r1,144
	l.sw    	68(r14),r3	 # SI store
	l.sb    	144(r1),r7	    # movqi
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.sw    	148(r1),r24	 # SI store
	l.sb    	145(r1),r6	    # movqi
	l.sw    	152(r1),r7	 # SI store
	l.jal   	sqlite3Select	# delay slot filled
	l.sw    	156(r1),r7	 # SI store
	l.ori   	r5,r24,0	 # move reg to reg
	l.lwz   	r3,40(r1)	 # SI load
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r4,r0,33	 # move immediate I
	l.lwz   	r24,64(r14)	 # SI load
	l.sfnei	r24,0
	l.bnf	.L14535	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L14543:
	l.lwz   	r15,12(r16)	 # SI load
	l.lwz   	r6,16(r16)	 # SI load
	l.sfles 	r15,r5
	l.bf	.L14509	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r12,0(r6)	 # SI load
.L14548:
	l.lbs   	r8,0(r12)	 # extendqisi2_no_sext_mem
	l.sfeqi	r8,0
	l.bf	.L14482	# delay slot filled
	l.ori   	r13,r8,0	 # move reg to reg
	l.j     	.L14484	# delay slot filled
	l.addi  	r13,r0,0	 # move immediate I
.L14483:
	l.lbs   	r8,0(r12)	 # extendqisi2_no_sext_mem
	l.sfnei	r8,0
	l.bnf	.L14482	# delay slot filled
	l.addi  	r13,r13,1
.L14484:
	l.sfnei	r8,34
	l.bf	.L14483	# delay slot filled
	l.addi  	r12,r12,1
	l.lbs   	r8,0(r12)	 # extendqisi2_no_sext_mem
	l.addi  	r13,r13,1
	l.sfnei	r8,0
	l.bf	.L14484	# delay slot filled
	l.addi  	r13,r13,1
.L14482:
	l.addi  	r5,r5,2
	l.lwz   	r8,8(r6)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L14485	# delay slot filled
	l.add   	r5,r5,r13
	l.lbs   	r12,0(r8)	 # extendqisi2_no_sext_mem
	l.sfeqi	r12,0
	l.bf	.L14486	# delay slot filled
	l.ori   	r7,r12,0	 # move reg to reg
	l.j     	.L14488	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L14487:
	l.lbs   	r12,0(r8)	 # extendqisi2_no_sext_mem
	l.sfnei	r12,0
	l.bnf	.L14486	# delay slot filled
	l.addi  	r7,r7,1
.L14488:
	l.sfnei	r12,34
	l.bf	.L14487	# delay slot filled
	l.addi  	r8,r8,1
	l.lbs   	r12,0(r8)	 # extendqisi2_no_sext_mem
	l.addi  	r7,r7,1
	l.sfnei	r12,0
	l.bf	.L14488	# delay slot filled
	l.addi  	r7,r7,1
.L14486:
	l.addi  	r5,r5,2
	l.add   	r5,r5,r7
.L14485:
	l.addi  	r4,r4,1
	l.sfne 	r4,r15
	l.bnf	.L14509	# delay slot filled
	l.addi  	r6,r6,20
	l.j     	.L14548	# delay slot filled
	l.lwz   	r12,0(r6)	 # SI load
.L14533:
	l.lwz   	r3,124(r20)	 # SI load
	l.sw    	24(r16),r3	 # SI store
	l.lbz   	r3,128(r20)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L14475
	l.nop			# nop delay slot
	l.lwz   	r2,64(r14)	 # SI load
.L14542:
	l.sfnei	r2,0
	l.bf	.L14468
	l.nop			# nop delay slot
	l.lwz   	r4,4(r16)	 # SI load
	l.lwz   	r3,72(r16)	 # SI load
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L14505	# delay slot filled
	l.addi  	r3,r3,4
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r2,r2,1
.L14545:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L14545	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r7,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r4
	l.ori   	r7,r7,65535
	l.and   	r5,r2,r7
.L14505:
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L14536	# delay slot filled
	l.addi  	r2,r0,1	 # movqi: move immediate
	l.lwz   	r3,40(r20)	 # SI load
	l.lwz   	r2,12(r20)	 # SI load
	l.addi  	r3,r3,1
	l.ori   	r2,r2,16
	l.sw    	476(r14),r11	 # SI store
	l.lwz   	r4,28(r16)	 # SI load
	l.sw    	40(r20),r3	 # SI store
	l.sfnei	r4,0
	l.bf	.L14468	# delay slot filled
	l.sw    	12(r20),r2	 # SI store
	l.lwz   	r2,0(r26)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L14537	# delay slot filled
	l.lwz   	r3,452(r14)	 # SI load
.L14508:
	l.lwz   	r4,0(r26)	 # SI load
	l.jal   	sqlite3Utf8CharLen	# delay slot filled
	l.sub   	r4,r4,r3
	l.addi  	r11,r11,13
	l.sw    	48(r16),r11	 # SI store
.L14468:
	l.addi	r1,r1,208
.L14541:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L14532:
	l.sub   	r2,r0,r5
	l.or    	r2,r5,r2
	l.sfgesi	r2,0
	l.bnf	.L14525
	l.nop			# nop delay slot
	l.j     	.L14541	# delay slot filled
	l.addi	r1,r1,208
.L14536:
	l.j     	.L14468	# delay slot filled
	l.sb    	30(r20),r2	    # movqi
.L14511:
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.j     	.L14471	# delay slot filled
	l.ori   	r2,r2,48576
.L14509:
	l.lwz   	r6,4(r16)	 # SI load
	l.lbs   	r4,0(r6)	 # extendqisi2_no_sext_mem
	l.sfeqi	r4,0
	l.bf	.L14490	# delay slot filled
	l.ori   	r7,r4,0	 # move reg to reg
	l.j     	.L14492	# delay slot filled
	l.addi  	r7,r0,0	 # move immediate I
.L14491:
	l.lbs   	r4,0(r6)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bnf	.L14490	# delay slot filled
	l.addi  	r7,r7,1
.L14492:
	l.sfnei	r4,34
	l.bf	.L14491	# delay slot filled
	l.addi  	r6,r6,1
	l.j     	.L14491	# delay slot filled
	l.addi  	r7,r7,1
.L14490:
	l.addi  	r5,r5,2
	l.add   	r7,r5,r7
	l.sfgtsi	r7,49
	l.bf	.L14518	# delay slot filled
	l.movhi  	r5,hi(.LC449)
	l.movhi  	r3,hi(.LC448)
	l.movhi  	r4,hi(.LC194)
	l.ori   	r3,r3,lo(.LC448)
	l.ori   	r4,r4,lo(.LC194)
	l.movhi  	r28,hi(.LC15)
	l.sw    	48(r1),r3	 # SI store
	l.sw    	36(r1),r4	 # SI store
	l.ori   	r28,r28,lo(.LC15)
.L14493:
	l.add   	r3,r15,r15
	l.add   	r15,r3,r15
	l.add   	r15,r15,r15
	l.addi  	r3,r15,35
	l.add   	r3,r3,r7
	l.jal   	sqlite3Malloc	# delay slot filled
	l.sw    	32(r1),r3	 # SI store
	l.sfnei	r11,0
	l.bnf	.L14538	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.movhi  	r5,hi(.LC453)
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r5,lo(.LC453)
	l.lbs   	r3,0(r18)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L14496	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.addi  	r4,r4,1
.L14546:
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L14546	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
.L14496:
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r4,r4,r18
	l.ori   	r3,r3,65535
	l.lwz   	r5,4(r16)	 # SI load
	l.and   	r7,r4,r3
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r1,160
	l.jal   	identPut	# delay slot filled
	l.sw    	160(r1),r7	 # SI store
	l.lwz   	r5,160(r1)	 # SI load
	l.addi  	r4,r0,40	 # movqi: move immediate
	l.add   	r3,r18,r5
	l.addi  	r5,r5,1
	l.sb    	0(r3),r4	    # movqi
	l.sw    	160(r1),r5	 # SI store
	l.lwz   	r3,12(r16)	 # SI load
	l.sflesi	r3,0
	l.bf	.L14498	# delay slot filled
	l.lwz   	r24,16(r16)	 # SI load
	l.addi  	r30,r0,0	 # move immediate I
.L14502:
	l.lwz   	r6,32(r1)	 # SI load
	l.add   	r4,r18,r5
	l.sub   	r3,r6,r5
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r28,0	 # move reg to reg
	l.lwz   	r7,160(r1)	 # SI load
	l.add   	r5,r18,r7
	l.lbs   	r8,0(r5)	 # extendqisi2_no_sext_mem
	l.sfeqi	r8,0
	l.bf	.L14499
	l.nop			# nop delay slot
	l.ori   	r8,r5,0	 # move reg to reg
	l.addi  	r8,r8,1
.L14547:
	l.lbs   	r6,0(r8)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L14547	# delay slot filled
	l.addi  	r8,r8,1
	l.addi  	r8,r8,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r8,r8,r5
	l.ori   	r3,r3,65535
	l.and   	r8,r8,r3
.L14499:
	l.lwz   	r5,0(r24)	 # SI load
	l.add   	r8,r8,r7
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r1,160
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	identPut	# delay slot filled
	l.sw    	160(r1),r8	 # SI store
	l.lwz   	r5,8(r24)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L14501	# delay slot filled
	l.lwz   	r7,160(r1)	 # SI load
	l.addi  	r6,r0,32	 # movqi: move immediate
	l.add   	r4,r18,r7
	l.ori   	r3,r18,0	 # move reg to reg
	l.sb    	0(r4),r6	    # movqi
	l.addi  	r7,r7,1
	l.addi  	r4,r1,160
	l.addi  	r6,r0,1	 # move immediate I
	l.jal   	identPut	# delay slot filled
	l.sw    	160(r1),r7	 # SI store
.L14501:
	l.addi  	r30,r30,1
	l.lwz   	r3,12(r16)	 # SI load
	l.sfges 	r30,r3
	l.bf	.L14498	# delay slot filled
	l.addi  	r24,r24,20
	l.lwz   	r5,160(r1)	 # SI load
	l.j     	.L14502	# delay slot filled
	l.lwz   	r28,36(r1)	 # SI load
.L14498:
	l.lwz   	r4,160(r1)	 # SI load
	l.movhi  	r5,hi(.LC78)
	l.lwz   	r7,32(r1)	 # SI load
	l.lwz   	r6,48(r1)	 # SI load
	l.sub   	r3,r7,r4
	l.ori   	r5,r5,lo(.LC78)
	l.add   	r4,r18,r4
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
.L14481:
	l.add   	r24,r2,r2
	l.lwz   	r3,8(r20)	 # SI load
	l.add   	r24,r24,r2
	l.movhi  	r6,hi(.LC199)
	l.slli  	r24,r24,3
	l.ori   	r6,r6,lo(.LC199)
	l.sfnei	r2,1
	l.add   	r3,r3,r24
	l.bnf	.L14539	# delay slot filled
	l.lwz   	r8,0(r3)	 # SI load
.L14503:
	l.movhi  	r4,hi(.LC454)
	l.lwz   	r5,4(r16)	 # SI load
	l.lwz   	r7,408(r14)	 # SI load
	l.lwz   	r11,404(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC454)
	l.sw    	4(r1),r6	 # SI store
	l.lwz   	r6,44(r1)	 # SI load
	l.sw    	0(r1),r8	 # SI store
	l.sw    	8(r1),r6	 # SI store
	l.sw    	12(r1),r5	 # SI store
	l.sw    	16(r1),r5	 # SI store
	l.sw    	20(r1),r7	 # SI store
	l.sw    	28(r1),r11	 # SI store
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	24(r1),r18	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ChangeCookie	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.lbz   	r3,34(r16)	 # zero_extendqisi2
	l.andi  	r3,r3,8
	l.sfeqi	r3,0
	l.bf	.L14544	# delay slot filled
	l.movhi  	r4,hi(.LC456)
	l.lwz   	r3,8(r20)	 # SI load
	l.add   	r24,r3,r24
	l.lwz   	r3,20(r24)	 # SI load
	l.lwz   	r3,52(r3)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14540	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L14544:
	l.lwz   	r5,4(r16)	 # SI load
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC456)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.lwz   	r3,40(r1)	 # SI load
	l.addi  	r2,r0,-1	 # move immediate I
	l.addi  	r4,r0,31	 # move immediate I
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lbz   	r2,128(r20)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L14468
	l.nop			# nop delay slot
	l.j     	.L14542	# delay slot filled
	l.lwz   	r2,64(r14)	 # SI load
.L14518:
	l.movhi  	r6,hi(.LC450)
	l.ori   	r5,r5,lo(.LC449)
	l.ori   	r6,r6,lo(.LC450)
	l.movhi  	r28,hi(.LC451)
	l.sw    	48(r1),r5	 # SI store
	l.sw    	36(r1),r6	 # SI store
	l.j     	.L14493	# delay slot filled
	l.ori   	r28,r28,lo(.LC451)
.L14478:
	l.lwz   	r7,0(r22)	 # SI load
	l.lwz   	r6,452(r14)	 # SI load
	l.addi  	r7,r7,1
	l.movhi  	r4,hi(.LC452)
	l.sub   	r7,r7,r6
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC452)
	l.sw    	0(r1),r5	 # SI store
	l.sw    	4(r1),r7	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	8(r1),r6	 # SI store
	l.j     	.L14481	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L14539:
	l.movhi  	r6,hi(.LC198)
	l.j     	.L14503	# delay slot filled
	l.ori   	r6,r6,lo(.LC198)
.L14535:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ResultSetOfSelect	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14468
	l.nop			# nop delay slot
	l.lwz   	r3,16(r11)	 # SI load
	l.lwz   	r4,12(r11)	 # SI load
	l.sw    	16(r16),r3	 # SI store
	l.sw    	12(r16),r4	 # SI store
	l.sw    	12(r11),r24	 # SI store
	l.sw    	16(r11),r24	 # SI store
	l.jal   	sqlite3DeleteTable	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.j     	.L14543	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.L14534:
	l.movhi  	r3,hi(.LC388)
	l.movhi  	r5,hi(.LC445)
	l.ori   	r3,r3,lo(.LC388)
	l.ori   	r5,r5,lo(.LC445)
	l.j     	.L14477	# delay slot filled
	l.sw    	44(r1),r3	 # SI store
.L14538:
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.j     	.L14481	# delay slot filled
	l.sb    	30(r20),r7	    # movqi
.L14540:
	l.movhi  	r4,hi(.LC455)
	l.lwz   	r5,0(r24)	 # SI load
	l.ori   	r4,r4,lo(.LC455)
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.j     	.L14544	# delay slot filled
	l.movhi  	r4,hi(.LC456)
.L14537:
	l.j     	.L14508	# delay slot filled
	l.ori   	r26,r22,0	 # move reg to reg
.LFE884:
	.size	sqlite3EndTable, .-sqlite3EndTable
	.section	.rodata.str1.1
.LC457:
	.string	"parameters are not allowed in views"
	.section .text
	.align	4
.proc	sqlite3CreateView.clone.175
	.type	sqlite3CreateView.clone.175, @function
sqlite3CreateView.clone.175:
.LFB1423:
	l.sw    	-36(r1),r2	 # SI store
.LCFI4169:
	l.sw    	-32(r1),r14	 # SI store
.LCFI4170:
	l.sw    	-28(r1),r16	 # SI store
.LCFI4171:
	l.sw    	-24(r1),r18	 # SI store
.LCFI4172:
	l.sw    	-20(r1),r20	 # SI store
.LCFI4173:
	l.sw    	-16(r1),r22	 # SI store
.LCFI4174:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4175:
	l.sw    	-12(r1),r24	 # SI store
.LCFI4176:
	l.sw    	-8(r1),r26	 # SI store
.LCFI4177:
	l.ori   	r22,r4,0	 # move reg to reg
	l.lwz   	r4,412(r3)	 # SI load
	l.addi  	r1,r1,-68
.LCFI4178:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r18,r6,0	 # move reg to reg
	l.ori   	r16,r7,0	 # move reg to reg
	l.sflesi	r4,0
	l.bf	.L14550	# delay slot filled
	l.lwz   	r14,0(r3)	 # SI load
	l.movhi  	r4,hi(.LC457)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC457)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
.L14549:
	l.addi	r1,r1,68
.L14575:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-36(r1)	 # SI load
	l.lwz   	r14,-32(r1)	 # SI load
	l.lwz   	r16,-28(r1)	 # SI load
	l.lwz   	r18,-24(r1)	 # SI load
	l.lwz   	r20,-20(r1)	 # SI load
	l.lwz   	r22,-16(r1)	 # SI load
	l.lwz   	r24,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r26,-8(r1)	 # SI load
.L14550:
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r11,68(r1)	 # SI load
	l.ori   	r5,r6,0	 # move reg to reg
	l.addi  	r7,r0,1	 # move immediate I
	l.ori   	r6,r8,0	 # move reg to reg
	l.addi  	r8,r0,0	 # move immediate I
	l.jal   	sqlite3StartTable	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r24,476(r2)	 # SI load
	l.sfeqi	r24,0
	l.bf	.L14576	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r26,64(r2)	 # SI load
	l.sfeqi	r26,0
	l.bf	.L14553	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
.L14576:
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.j     	.L14575	# delay slot filled
	l.addi	r1,r1,68
.L14553:
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3TwoPartName	# delay slot filled
	l.addi  	r6,r1,28
	l.lwz   	r7,72(r24)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L14577	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,4(r14)	 # SI load
	l.sflesi	r4,0
	l.bf	.L14578	# delay slot filled
	l.lwz   	r6,28(r1)	 # SI load
	l.lwz   	r6,8(r14)	 # SI load
	l.lwz   	r3,20(r6)	 # SI load
	l.sfeq 	r7,r3
	l.bf	.L14555
	l.nop			# nop delay slot
	l.addi  	r6,r6,44
	l.j     	.L14556	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
.L14558:
	l.lwz   	r3,0(r6)	 # SI load
	l.sfeq 	r7,r3
	l.bf	.L14557	# delay slot filled
	l.addi  	r6,r6,24
.L14556:
	l.addi  	r5,r5,1
	l.sflts 	r5,r4
	l.bf	.L14558
	l.nop			# nop delay slot
.L14557:
	l.sfeqi	r5,1
	l.bf	.L14554	# delay slot filled
	l.lwz   	r6,28(r1)	 # SI load
	l.add   	r3,r5,r5
	l.add   	r5,r3,r5
	l.slli  	r5,r5,3
.L14565:
	l.lwz   	r3,0(r2)	 # SI load
	l.lwz   	r4,8(r3)	 # SI load
	l.addi  	r3,r1,4
	l.add   	r5,r4,r5
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r5,0(r5)	 # SI load
	l.sw    	4(r1),r2	 # SI store
	l.sw    	8(r1),r5	 # SI store
	l.movhi  	r5,hi(.LC447)
	l.sw    	16(r1),r6	 # SI store
	l.ori   	r5,r5,lo(.LC447)
	l.jal   	sqlite3FixSelect	# delay slot filled
	l.sw    	12(r1),r5	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L14576	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L14554:
	l.ori   	r3,r14,0	 # move reg to reg
.L14577:
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3SelectDup	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.sw    	28(r24),r11	 # SI store
	l.jal   	sqlite3SelectDelete	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lbz   	r3,30(r14)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L14549
	l.nop			# nop delay slot
	l.lbz   	r3,128(r14)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L14574	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L14559:
		l.lwz   	r3, 460(r2)
		l.lwz   	r4, 460+4(r2)
		l.sw    	20(r1), r3
		l.sw    	20+4(r1), r4
	l.lwz   	r3,20(r1)	 # SI load
	l.lbz   	r4,0(r3)	 # zero_extendqisi2
	l.sfeqi	r4,59
	l.bnf	.L14569	# delay slot filled
	l.sfeqi	r4,0
.L14571:
	l.lwz   	r4,24(r1)	 # SI load
.L14560:
	l.movhi 	r7,hi(-1073741824)	 # move immediate M
	l.lwz   	r8,0(r22)	 # SI load
	l.and   	r11,r4,r7
	l.sub   	r3,r3,r8
	l.sfgtsi	r3,0
	l.bnf	.L14572	# delay slot filled
	l.sw    	24(r1),r11	 # SI store
	l.addi  	r4,r3,-1
	l.add   	r4,r8,r4
.L14563:
	l.movhi  	r7,hi(sqlite3CtypeMap)
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.ori   	r7,r7,lo(sqlite3CtypeMap)
	l.addi  	r3,r3,-1
	l.add   	r6,r5,r7
	l.sfeqi	r5,59
	l.bf	.L14564	# delay slot filled
	l.ori   	r7,r4,0	 # move reg to reg
	l.lbz   	r5,0(r6)	 # zero_extendqisi2
	l.andi  	r5,r5,1
	l.sfnei	r5,0
	l.bnf	.L14562
	l.nop			# nop delay slot
.L14564:
	l.sfgtsi	r3,0
	l.bf	.L14563	# delay slot filled
	l.addi  	r4,r4,-1
.L14572:
	l.addi  	r3,r3,-1
	l.add   	r7,r8,r3
.L14562:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r11,r11,1
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r5,r1,20
	l.ori   	r6,r4,0	 # move reg to reg
	l.sw    	20(r1),r7	 # SI store
	l.jal   	sqlite3EndTable	# delay slot filled
	l.sw    	24(r1),r11	 # SI store
	l.j     	.L14575	# delay slot filled
	l.addi	r1,r1,68
.L14569:
	l.bf	.L14571	# delay slot filled
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r4,24(r1)	 # SI load
	l.ori   	r6,r6,65535
	l.and   	r5,r4,r6
	l.add   	r3,r3,r5
	l.j     	.L14560	# delay slot filled
	l.sw    	20(r1),r3	 # SI store
.L14574:
	l.jal   	sqlite3ViewGetColumnNames	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.j     	.L14559
	l.nop			# nop delay slot
.L14555:
	l.lwz   	r6,28(r1)	 # SI load
.L14578:
	l.j     	.L14565	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
.LFE1423:
	.size	sqlite3CreateView.clone.175, .-sqlite3CreateView.clone.175
	.section	.rodata.str1.1
.LC458:
	.string	"UPDATE %Q.%s SET rootpage=%d WHERE #%d AND rootpage=#%d"
	.section .text
	.align	4
.proc	destroyRootPage
	.type	destroyRootPage, @function
destroyRootPage:
.LFB889:
	l.sw    	-20(r1),r2	 # SI store
.LCFI4179:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-16(r1),r14	 # SI store
.LCFI4180:
	l.sw    	-8(r1),r18	 # SI store
.LCFI4181:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4182:
	l.sw    	-12(r1),r16	 # SI store
.LCFI4183:
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r1,r1,-40
.LCFI4184:
	l.ori   	r18,r4,0	 # move reg to reg
	l.addi  	r4,r2,12
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r14,r5,0	 # move reg to reg
	l.lbz   	r4,21(r2)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L14580	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r16,72(r2)	 # SI load
	l.addi  	r16,r16,1
	l.sw    	72(r2),r16	 # SI store
.L14581:
	l.addi  	r4,r0,111	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.ori   	r6,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.add   	r3,r14,r14
	l.lwz   	r4,0(r2)	 # SI load
	l.add   	r3,r3,r14
	l.lwz   	r4,8(r4)	 # SI load
	l.slli  	r3,r3,3
	l.movhi  	r5,hi(.LC199)
	l.sfnei	r14,1
	l.add   	r3,r4,r3
	l.ori   	r5,r5,lo(.LC199)
	l.bnf	.L14584	# delay slot filled
	l.lwz   	r6,0(r3)	 # SI load
.L14582:
	l.movhi  	r4,hi(.LC458)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC458)
	l.sw    	8(r1),r18	 # SI store
	l.sw    	12(r1),r16	 # SI store
	l.sw    	16(r1),r16	 # SI store
	l.sw    	0(r1),r6	 # SI store
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
	l.addi	r1,r1,40
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3ReleaseTempReg	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L14580:
	l.addi  	r4,r4,-1
	l.andi  	r4,r4,0xff	 # zero_extendqisi2
	l.addi  	r5,r4,6
	l.sb    	21(r2),r4	    # movqi
	l.slli  	r4,r5,2
	l.add   	r4,r2,r4
	l.j     	.L14581	# delay slot filled
	l.lwz   	r16,0(r4)	 # SI load
.L14584:
	l.movhi  	r5,hi(.LC198)
	l.j     	.L14582	# delay slot filled
	l.ori   	r5,r5,lo(.LC198)
.LFE889:
	.size	destroyRootPage, .-destroyRootPage
	.section	.rodata.str1.1
.LC459:
	.string	"table %s may not be dropped"
.LC460:
	.string	"use DROP TABLE to delete table %s"
.LC461:
	.string	"use DROP VIEW to delete view %s"
.LC462:
	.string	"DELETE FROM %s.sqlite_sequence WHERE name=%Q"
.LC463:
	.string	"DELETE FROM %Q.%s WHERE tbl_name=%Q and type!='trigger'"
.LC464:
	.string	"DELETE FROM %Q.sqlite_stat1 WHERE tbl=%Q"
	.section	.rodata.cst4
	.align	4
.LC465:
	.long	-1000000
	.section .text
	.align	4
.proc	sqlite3DropTable
	.type	sqlite3DropTable, @function
sqlite3DropTable:
.LFB891:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4185:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4186:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4187:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4188:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4189:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4190:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4191:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4192:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4193:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4194:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4195:
	l.lwz   	r2,64(r3)	 # SI load
	l.addi  	r1,r1,-56
.LCFI4196:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r18,r4,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r24,r6,0	 # move reg to reg
	l.sfnei	r2,0
	l.bf	.L14586	# delay slot filled
	l.lwz   	r16,0(r3)	 # SI load
	l.lbz   	r2,30(r16)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bnf	.L14642	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
.L14586:
	l.addi	r1,r1,56
.L14654:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3SrcListDelete	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L14642:
	l.lwz   	r6,4(r18)	 # SI load
	l.jal   	sqlite3LocateTable	# delay slot filled
	l.lwz   	r5,8(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14643	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.lwz   	r4,72(r11)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L14624
	l.nop			# nop delay slot
	l.lwz   	r5,4(r16)	 # SI load
	l.sflesi	r5,0
	l.bf	.L14588
	l.nop			# nop delay slot
	l.lwz   	r6,8(r16)	 # SI load
	l.lwz   	r3,20(r6)	 # SI load
	l.sfeq 	r4,r3
	l.bf	.L14588
	l.nop			# nop delay slot
	l.j     	.L14589	# delay slot filled
	l.addi  	r6,r6,44
.L14590:
	l.lwz   	r3,0(r6)	 # SI load
	l.sfeq 	r4,r3
	l.bf	.L14588	# delay slot filled
	l.addi  	r6,r6,24
.L14589:
	l.addi  	r2,r2,1
	l.sflts 	r2,r5
	l.bf	.L14590
	l.nop			# nop delay slot
.L14588:
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bnf	.L14644	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.movhi  	r5,hi(.LC199)
.L14662:
	l.sfnei	r2,1
	l.bnf	.L14645	# delay slot filled
	l.ori   	r5,r5,lo(.LC199)
.L14592:
	l.add   	r26,r2,r2
	l.lwz   	r7,8(r16)	 # SI load
	l.add   	r26,r26,r2
	l.ori   	r3,r14,0	 # move reg to reg
	l.slli  	r26,r26,3
	l.addi  	r4,r0,9	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.add   	r7,r7,r26
	l.lwz   	r24,0(r7)	 # SI load
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14586	# delay slot filled
	l.sfeqi	r20,0
	l.bf	.L14593	# delay slot filled
	l.sfnei	r2,1
	l.bnf	.L14646	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.addi  	r4,r0,17	 # move immediate I
.L14594:
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r5,4(r22)	 # SI load
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14586	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,9	 # move immediate I
	l.lwz   	r5,4(r22)	 # SI load
	l.ori   	r6,r11,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14586	# delay slot filled
	l.movhi  	r4,hi(.LC49)
	l.lwz   	r24,4(r22)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC49)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.addi  	r5,r0,7	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L14647	# delay slot filled
	l.sfeqi	r20,0
	l.bf	.L14597
	l.nop			# nop delay slot
	l.lwz   	r3,28(r22)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14648	# delay slot filled
	l.movhi  	r4,hi(.LC460)
.L14598:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r14,12
	l.sfeqi	r11,0
	l.bf	.L14599	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.lwz   	r30,8(r16)	 # SI load
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bf	.L14600	# delay slot filled
	l.add   	r30,r30,r26
	l.ori   	r3,r28,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp0	# delay slot filled
	l.addi  	r4,r0,124	 # move immediate I
.L14600:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3TriggerList.clone.90	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14601	# delay slot filled
	l.ori   	r24,r11,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
.L14657:
	l.jal   	sqlite3DropTriggerPtr	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r24,40(r24)	 # SI load
	l.sfnei	r24,0
	l.bf	.L14657	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
.L14601:
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.andi  	r3,r3,8
	l.sfeqi	r3,0
	l.bnf	.L14649	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.movhi  	r3,hi(.LC199)
.L14656:
	l.lwz   	r4,0(r30)	 # SI load
	l.sfnei	r2,1
	l.bnf	.L14650	# delay slot filled
	l.ori   	r3,r3,lo(.LC199)
.L14604:
	l.sw    	0(r1),r4	 # SI store
	l.sw    	4(r1),r3	 # SI store
	l.movhi  	r4,hi(.LC463)
	l.lwz   	r5,4(r22)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC463)
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	8(r1),r5	 # SI store
	l.lwz   	r5,8(r16)	 # SI load
	l.movhi  	r4,hi(.LC321)
	l.add   	r5,r5,r26
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC321)
	l.jal   	sqlite3FindTable	# delay slot filled
	l.lwz   	r5,0(r5)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L14605	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,0(r30)	 # SI load
	l.sw    	0(r1),r4	 # SI store
	l.movhi  	r4,hi(.LC464)
	l.lwz   	r5,4(r22)	 # SI load
	l.ori   	r4,r4,lo(.LC464)
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
.L14605:
	l.sfnei	r20,0
	l.bf	.L14606
	l.nop			# nop delay slot
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfnei	r3,0
	l.bf	.L14658	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r30,24(r22)	 # SI load
	l.sub   	r4,r0,r20
.L14653:
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.or    	r4,r4,r20
	l.sflts 	r30,r20
	l.xori  	r4,r4,0xffff
	l.bf	.L14609	# delay slot filled
	l.srli  	r4,r4,31
	l.addi  	r5,r0,0	 # movqi: move immediate
.L14609:
	l.andi  	r5,r5,0xff	 # zero_extendqisi2
	l.sfnei	r5,0
	l.bf	.L14608	# delay slot filled
	l.ori   	r24,r30,0	 # move reg to reg
	l.sfnei	r4,0
	l.bf	.L14631	# delay slot filled
	l.ori   	r24,r4,0	 # move reg to reg
.L14608:
	l.lwz   	r5,20(r22)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L14659	# delay slot filled
	l.sfeqi	r24,0
.L14637:
	l.lwz   	r6,20(r5)	 # SI load
	l.sfgts 	r20,r6
	l.bf	.L14613	# delay slot filled
	l.addi  	r7,r0,1	 # movqi: move immediate
	l.addi  	r7,r0,0	 # movqi: move immediate
.L14613:
	l.andi  	r7,r7,0xff	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L14660	# delay slot filled
	l.sfges 	r24,r6
	l.sfeqi	r4,0
	l.bf	.L14611	# delay slot filled
	l.sfges 	r24,r6
.L14660:
	l.bf	.L14611
	l.nop			# nop delay slot
	l.ori   	r24,r6,0	 # move reg to reg
.L14611:
	l.lwz   	r5,32(r5)	 # SI load
	l.sfnei	r5,0
	l.bf	.L14637	# delay slot filled
	l.sfeqi	r24,0
.L14659:
	l.bf	.L14606	# delay slot filled
	l.movhi  	r3,hi(.LC465)
	l.lwz   	r7,72(r22)	 # SI load
	l.ori   	r3,r3,lo(.LC465)
	l.lwz   	r4,0(r14)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L14616	# delay slot filled
	l.lwz   	r5,0(r3)	 # SI load
	l.lwz   	r8,4(r4)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.sfles 	r8,r5
	l.bf	.L14661	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r6,8(r4)	 # SI load
	l.lwz   	r3,20(r6)	 # SI load
	l.sfeq 	r7,r3
	l.bf	.L14616	# delay slot filled
	l.addi  	r6,r6,44
	l.j     	.L14664	# delay slot filled
	l.addi  	r5,r5,1
.L14618:
	l.lwz   	r4,0(r6)	 # SI load
	l.sfeq 	r7,r4
	l.bf	.L14616	# delay slot filled
	l.addi  	r6,r6,24
	l.addi  	r5,r5,1
.L14664:
	l.sflts 	r5,r8
	l.bf	.L14618
	l.nop			# nop delay slot
.L14616:
	l.ori   	r3,r14,0	 # move reg to reg
.L14661:
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	destroyRootPage	# delay slot filled
	l.ori   	r20,r24,0	 # move reg to reg
	l.j     	.L14653	# delay slot filled
	l.sub   	r4,r0,r20
.L14644:
	l.jal   	sqlite3ViewGetColumnNames	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L14662	# delay slot filled
	l.movhi  	r5,hi(.LC199)
	l.j     	.L14654	# delay slot filled
	l.addi	r1,r1,56
.L14593:
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bnf	.L14651	# delay slot filled
	l.addi  	r4,r0,30	 # move immediate I
	l.sfnei	r2,1
	l.bnf	.L14652
	l.nop			# nop delay slot
	l.ori   	r6,r20,0	 # move reg to reg
	l.j     	.L14594	# delay slot filled
	l.addi  	r4,r0,11	 # move immediate I
.L14645:
	l.movhi  	r5,hi(.LC198)
	l.j     	.L14592	# delay slot filled
	l.ori   	r5,r5,lo(.LC198)
.L14624:
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.j     	.L14588	# delay slot filled
	l.ori   	r2,r2,48576
.L14651:
	l.lwz   	r3,52(r22)	 # SI load
	l.j     	.L14594	# delay slot filled
	l.lwz   	r6,4(r3)	 # SI load
.L14646:
	l.j     	.L14594	# delay slot filled
	l.addi  	r4,r0,15	 # move immediate I
.L14631:
	l.j     	.L14608	# delay slot filled
	l.ori   	r24,r30,0	 # move reg to reg
.L14643:
	l.sfeqi	r24,0
	l.bf	.L14586
	l.nop			# nop delay slot
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,8(r14)	 # SI load
	l.sw    	8(r14),r22	 # SI store
	l.j     	.L14586	# delay slot filled
	l.sw    	64(r14),r22	 # SI store
.L14597:
	l.lwz   	r3,28(r22)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14598	# delay slot filled
	l.movhi  	r4,hi(.LC461)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC461)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r24	 # SI store
	l.j     	.L14654	# delay slot filled
	l.addi	r1,r1,56
.L14606:
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bnf	.L14607	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L14655:
	l.lwz   	r8,4(r22)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,69	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ChangeCookie	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L14599:
	l.lwz   	r3,8(r16)	 # SI load
	l.add   	r2,r3,r26
	l.lwz   	r2,20(r2)	 # SI load
	l.lhz   	r4,58(r2)	 # zero_extendqisi2
	l.andi  	r4,r4,2
	l.sfeqi	r4,0
	l.bf	.L14586
	l.nop			# nop delay slot
	l.lwz   	r2,12(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L14663	# delay slot filled
	l.add   	r3,r3,r26
.L14636:
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r4,28(r3)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L14622
	l.nop			# nop delay slot
	l.jal   	sqliteResetColumnNames
	l.nop			# nop delay slot
.L14622:
	l.lwz   	r2,0(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L14636
	l.nop			# nop delay slot
	l.lwz   	r3,8(r16)	 # SI load
	l.add   	r3,r3,r26
.L14663:
	l.addi  	r4,r0,-3	 # move immediate I
	l.lwz   	r2,20(r3)	 # SI load
	l.lhz   	r3,58(r2)	 # zero_extendqisi2
	l.and   	r3,r3,r4
	l.j     	.L14586	# delay slot filled
	l.sh    	58(r2),r3	 # movhi
.L14652:
	l.ori   	r6,r20,0	 # move reg to reg
	l.j     	.L14594	# delay slot filled
	l.addi  	r4,r0,13	 # move immediate I
.L14647:
	l.movhi  	r4,hi(.LC459)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC459)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r24	 # SI store
	l.j     	.L14654	# delay slot filled
	l.addi	r1,r1,56
.L14607:
.L14658:
	l.lwz   	r8,4(r22)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,104	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.j     	.L14655	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
.L14650:
	l.movhi  	r3,hi(.LC198)
	l.j     	.L14604	# delay slot filled
	l.ori   	r3,r3,lo(.LC198)
.L14649:
	l.lwz   	r4,0(r30)	 # SI load
	l.sw    	0(r1),r4	 # SI store
	l.movhi  	r4,hi(.LC462)
	l.lwz   	r5,4(r22)	 # SI load
	l.ori   	r4,r4,lo(.LC462)
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
	l.j     	.L14656	# delay slot filled
	l.movhi  	r3,hi(.LC199)
.L14648:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC460)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r24	 # SI store
	l.j     	.L14654	# delay slot filled
	l.addi	r1,r1,56
.LFE891:
	.size	sqlite3DropTable, .-sqlite3DropTable
	.section	.rodata.str1.1
.LC466:
	.string	" UNIQUE"
.LC467:
	.string	"altertab_"
.LC468:
	.string	"table %s may not be indexed"
.LC469:
	.string	"views may not be indexed"
.LC470:
	.string	"virtual tables may not be indexed"
.LC471:
	.string	"there is already a table named %s"
.LC472:
	.string	"index %s already exists"
.LC473:
	.string	"sqlite_autoindex_%s_%d"
.LC474:
	.string	"table %s has no column named %s"
.LC475:
	.string	"conflicting ON CONFLICT clauses specified"
.LC476:
	.string	"CREATE%s INDEX %.*s"
.LC477:
	.string	"INSERT INTO %Q.%s VALUES('index',%Q,%Q,#%d,%Q);"
.LC478:
	.string	"name='%q'"
	.section .text
	.align	4
.proc	sqlite3CreateIndex
	.type	sqlite3CreateIndex, @function
sqlite3CreateIndex:
.LFB895:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4197:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4198:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4199:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4200:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4201:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4202:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4203:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI4204:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4205:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4206:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4207:
	l.addi  	r1,r1,-144
.LCFI4208:
	l.lwz   	r11,64(r3)	 # SI load
	l.sw    	96(r1),r2	 # SI store
	l.addi  	r16,r0,0	 # move immediate I
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r18,r6,0	 # move reg to reg
	l.ori   	r22,r7,0	 # move reg to reg
	l.ori   	r24,r8,0	 # move reg to reg
	l.sfne 	r11,r16
	l.bf	.L14732	# delay slot filled
	l.lwz   	r2,0(r3)	 # SI load
	l.lbz   	r6,30(r2)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bnf	.L14765	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L14732:
	l.ori   	r3,r2,0	 # move reg to reg
.L14776:
	l.jal   	sqlite3ExprListDelete	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi	r1,r1,144
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L14765:
	l.lbz   	r7,500(r3)	 # zero_extendqisi2
	l.sfnei	r7,0
	l.bf	.L14732	# delay slot filled
	l.ori   	r16,r6,0	 # move reg to reg
	l.sfeqi	r18,0
	l.bf	.L14667	# delay slot filled
	l.addi  	r6,r1,96
	l.jal   	sqlite3TwoPartName	# delay slot filled
	l.ori   	r16,r7,0	 # move reg to reg
	l.sfltsi	r11,0
	l.bf	.L14732	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.lbz   	r3,128(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L14766	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L14668:
	l.sfeqi	r26,1
.L14779:
	l.bf	.L14669	# delay slot filled
	l.lwz   	r5,96(r1)	 # SI load
	l.add   	r4,r26,r26
	l.lwz   	r3,0(r14)	 # SI load
	l.add   	r4,r4,r26
	l.lwz   	r6,8(r3)	 # SI load
	l.slli  	r4,r4,3
	l.addi  	r3,r1,72
	l.add   	r6,r6,r4
	l.ori   	r4,r18,0	 # move reg to reg
	l.lwz   	r6,0(r6)	 # SI load
	l.sw    	72(r1),r14	 # SI store
	l.sw    	76(r1),r6	 # SI store
	l.movhi  	r6,hi(.LC424)
	l.sw    	84(r1),r5	 # SI store
	l.ori   	r6,r6,lo(.LC424)
	l.jal   	sqlite3FixSrcList	# delay slot filled
	l.sw    	80(r1),r6	 # SI store
.L14670:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r5,8(r18)	 # SI load
	l.jal   	sqlite3LocateTable	# delay slot filled
	l.lwz   	r6,4(r18)	 # SI load
	l.ori   	r30,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14732	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.addi  	r16,r0,0	 # move immediate I
	l.sfne 	r3,r16
	l.bf	.L14732
	l.nop			# nop delay slot
	l.lwz   	r5,64(r14)	 # SI load
	l.lwz   	r4,8(r2)	 # SI load
	l.sfnei	r5,0
	l.bf	.L14732	# delay slot filled
	l.ori   	r16,r3,0	 # move reg to reg
	l.add   	r28,r26,r26
	l.add   	r28,r28,r26
	l.slli  	r28,r28,3
	l.add   	r4,r4,r28
	l.sw    	28(r1),r4	 # SI store
.L14733:
	l.lwz   	r20,4(r30)	 # SI load
	l.movhi  	r4,hi(.LC49)
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC49)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.addi  	r5,r0,7	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L14677	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC467)
	l.addi  	r3,r20,7
	l.ori   	r4,r4,lo(.LC467)
	l.jal   	memcmp	# delay slot filled
	l.addi  	r5,r0,9	 # move immediate I
	l.sfeqi	r11,0
	l.bnf	.L14767	# delay slot filled
	l.movhi  	r4,hi(.LC468)
.L14677:
	l.lwz   	r16,28(r30)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L14678	# delay slot filled
	l.movhi  	r4,hi(.LC469)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC469)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L14766:
	l.jal   	sqlite3SrcListLookup	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.sfeqi	r20,0
	l.bf	.L14668	# delay slot filled
	l.sub   	r3,r0,r11
	l.or    	r3,r11,r3
	l.sfgesi	r3,0
	l.bf	.L14779	# delay slot filled
	l.sfeqi	r26,1
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r3,4(r20)	 # SI load
	l.ori   	r4,r4,65535
	l.and   	r3,r3,r4
	l.sfnei	r3,0
	l.bf	.L14779	# delay slot filled
	l.sfeqi	r26,1
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r4,72(r11)	 # SI load
	l.lwz   	r3,44(r3)	 # SI load
	l.sfeq 	r4,r3
	l.bnf	.L14779	# delay slot filled
	l.sfeqi	r26,1
.L14669:
	l.j     	.L14670	# delay slot filled
	l.addi  	r26,r0,1	 # move immediate I
.L14667:
	l.lwz   	r30,476(r3)	 # SI load
	l.sfeqi	r30,0
	l.bf	.L14732	# delay slot filled
	l.ori   	r16,r18,0	 # move reg to reg
	l.lwz   	r4,72(r30)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L14672	# delay slot filled
	l.movhi 	r8,hi(-24051712)	 # move immediate M
	l.lwz   	r7,4(r2)	 # SI load
	l.sfgtsi	r7,0
	l.bnf	.L14768	# delay slot filled
	l.ori   	r28,r18,0	 # move reg to reg
	l.lwz   	r8,8(r2)	 # SI load
	l.lwz   	r3,20(r8)	 # SI load
	l.sfeq 	r4,r3
	l.bf	.L14741	# delay slot filled
	l.addi  	r3,r8,24
	l.addi  	r28,r0,24	 # move immediate I
	l.j     	.L14675	# delay slot filled
	l.ori   	r26,r18,0	 # move reg to reg
.L14676:
	l.lwz   	r5,20(r3)	 # SI load
	l.addi  	r6,r28,24
	l.sfeq 	r4,r5
	l.bf	.L14733	# delay slot filled
	l.addi  	r3,r3,24
	l.ori   	r28,r6,0	 # move reg to reg
.L14675:
	l.addi  	r26,r26,1
	l.sflts 	r26,r7
	l.bf	.L14676	# delay slot filled
	l.sw    	28(r1),r3	 # SI store
	l.add   	r28,r26,r26
	l.add   	r28,r28,r26
	l.slli  	r28,r28,3
	l.add   	r8,r8,r28
	l.j     	.L14733	# delay slot filled
	l.sw    	28(r1),r8	 # SI store
.L14678:
	l.lbz   	r3,34(r30)	 # zero_extendqisi2
	l.andi  	r3,r3,16
	l.sfeqi	r3,0
	l.bnf	.L14769	# delay slot filled
	l.movhi  	r4,hi(.LC470)
	l.lwz   	r4,96(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L14680
	l.nop			# nop delay slot
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r16,0
	l.bf	.L14732	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3CheckObjectName	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,128(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L14780	# delay slot filled
	l.lwz   	r6,28(r1)	 # SI load
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14732	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14681	# delay slot filled
	l.movhi  	r4,hi(.LC471)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC471)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.j     	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L14672:
	l.lwz   	r3,8(r2)	 # SI load
	l.ori   	r8,r8,51712
	l.movhi 	r28,hi(-24051712)	 # move immediate M
	l.add   	r8,r3,r8
	l.movhi 	r26,hi(-1048576)	 # move immediate M
	l.sw    	28(r1),r8	 # SI store
	l.ori   	r28,r28,51712
	l.j     	.L14733	# delay slot filled
	l.ori   	r26,r26,48576
.L14767:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC468)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r20	 # SI store
	l.j     	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L14769:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC470)
	l.j     	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L14680:
	l.lwz   	r3,20(r30)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14683	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
.L14684:
	l.lwz   	r3,32(r3)	 # SI load
	l.sfnei	r3,0
	l.bf	.L14684	# delay slot filled
	l.addi  	r5,r5,1
.L14683:
	l.movhi  	r4,hi(.LC473)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC473)
	l.sw    	0(r1),r20	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	4(r1),r5	 # SI store
	l.sfeqi	r11,0
	l.bf	.L14732	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
.L14682:
	l.lwz   	r7,28(r1)	 # SI load
	l.movhi  	r5,hi(.LC199)
	l.lwz   	r20,0(r7)	 # SI load
	l.sfnei	r26,1
	l.bnf	.L14770	# delay slot filled
	l.ori   	r5,r5,lo(.LC199)
.L14685:
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,18	 # move immediate I
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfeqi	r26,1
	l.bf	.L14686	# delay slot filled
	l.addi  	r4,r0,3	 # move immediate I
	l.addi  	r4,r0,1	 # move immediate I
.L14686:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r6,4(r30)	 # SI load
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sfnei	r22,0
	l.bnf	.L14771
	l.nop			# nop delay slot
.L14687:
	l.lwz   	r5,0(r22)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
	l.sw    	32(r1),r5	 # SI store
	l.sfles 	r5,r6
	l.bf	.L14690	# delay slot filled
	l.sw    	48(r1),r6	 # SI store
	l.lwz   	r7,12(r22)	 # SI load
.L14694:
	l.lwz   	r3,0(r7)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14691
	l.nop			# nop delay slot
	l.lwz   	r3,32(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14691
	l.nop			# nop delay slot
	l.lwz   	r8,0(r3)	 # SI load
	l.lbs   	r3,0(r8)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L14692	# delay slot filled
	l.ori   	r4,r8,0	 # move reg to reg
	l.addi  	r4,r4,1
.L14781:
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L14781	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
.L14692:
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.sub   	r3,r4,r8
	l.ori   	r11,r11,65535
	l.lwz   	r8,48(r1)	 # SI load
	l.and   	r3,r3,r11
	l.addi  	r5,r8,1
	l.add   	r3,r5,r3
	l.sw    	48(r1),r3	 # SI store
.L14691:
	l.addi  	r6,r6,1
	l.lwz   	r3,32(r1)	 # SI load
	l.sfne 	r6,r3
	l.bf	.L14694	# delay slot filled
	l.addi  	r7,r7,16
.L14690:
	l.lbs   	r3,0(r16)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L14695	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r4,r4,1
.L14782:
	l.lbs   	r3,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L14782	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
.L14695:
	l.lwz   	r6,32(r1)	 # SI load
	l.lwz   	r7,32(r1)	 # SI load
	l.add   	r5,r6,r6
	l.movhi 	r8,hi(1073676288)	 # move immediate M
	l.add   	r5,r5,r7
	l.addi  	r6,r6,53
	l.slli  	r5,r5,2
	l.sub   	r4,r4,r16
	l.ori   	r8,r8,65535
	l.lwz   	r11,48(r1)	 # SI load
	l.and   	r8,r4,r8
	l.add   	r4,r6,r5
	l.ori   	r3,r2,0	 # move reg to reg
	l.add   	r4,r4,r11
	l.sw    	36(r1),r8	 # SI store
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.add   	r4,r4,r8
	l.lbz   	r6,30(r2)	 # zero_extendqisi2
	l.sfnei	r6,0
	l.bnf	.L14772	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
.L14697:
	l.sfeqi	r20,0
.L14777:
	l.bf	.L14732
	l.nop			# nop delay slot
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,28(r20)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.j     	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L14741:
	l.sw    	28(r1),r8	 # SI store
	l.ori   	r28,r18,0	 # move reg to reg
	l.j     	.L14733	# delay slot filled
	l.ori   	r26,r18,0	 # move reg to reg
.L14768:
	l.lwz   	r5,8(r2)	 # SI load
	l.sw    	28(r1),r5	 # SI store
	l.j     	.L14733	# delay slot filled
	l.ori   	r26,r18,0	 # move reg to reg
.L14681:
	l.lwz   	r6,28(r1)	 # SI load
.L14780:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3FindIndex	# delay slot filled
	l.lwz   	r5,0(r6)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L14682	# delay slot filled
	l.lwz   	r3,156(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L14732	# delay slot filled
	l.movhi  	r4,hi(.LC472)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC472)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.j     	.L14776	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L14770:
	l.movhi  	r5,hi(.LC198)
	l.j     	.L14685	# delay slot filled
	l.ori   	r5,r5,lo(.LC198)
.L14772:
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r7,r11,48
	l.slli  	r4,r3,2
	l.addi  	r3,r3,1
	l.lwz   	r8,36(r1)	 # SI load
	l.add   	r5,r7,r4
	l.slli  	r3,r3,2
	l.add   	r4,r5,r4
	l.sw    	44(r11),r7	 # SI store
	l.add   	r3,r4,r3
	l.lwz   	r11,32(r1)	 # SI load
	l.addi  	r8,r8,1
	l.add   	r11,r3,r11
	l.sw    	8(r20),r5	 # SI store
	l.sw    	12(r20),r4	 # SI store
	l.sw    	40(r20),r3	 # SI store
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r5,r8,0	 # move reg to reg
	l.sw    	0(r20),r11	 # SI store
	l.sw    	36(r1),r8	 # SI store
	l.sw    	32(r1),r11	 # SI store
	l.jal   	memcpy	# delay slot filled
	l.sw    	64(r1),r6	 # SI store
	l.lwz   	r3,0(r22)	 # SI load
	l.sb    	24(r20),r24	    # movqi
	l.sw    	4(r20),r3	 # SI store
	l.lwz   	r4,96(r1)	 # SI load
	l.sw    	16(r20),r30	 # SI store
	l.sub   	r3,r0,r4
	l.or    	r3,r4,r3
	l.xori  	r3,r3,0xffff
	l.srli  	r3,r3,31
	l.sb    	25(r20),r3	    # movqi
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r5,28(r1)	 # SI load
	l.add   	r3,r3,r28
	l.lwz   	r4,20(r5)	 # SI load
	l.lwz   	r3,20(r3)	 # SI load
	l.sw    	36(r20),r3	 # SI store
	l.lbz   	r3,56(r4)	 # zero_extendqisi2
	l.sfleui	r3,3
	l.bf	.L14698	# delay slot filled
	l.addi  	r6,r0,-1	 # move immediate I
	l.sw    	64(r1),r6	 # SI store
.L14698:
	l.lwz   	r7,12(r22)	 # SI load
	l.lwz   	r3,0(r22)	 # SI load
	l.sflesi	r3,0
	l.bf	.L14699	# delay slot filled
	l.sw    	52(r1),r7	 # SI store
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r3,36(r1)	 # SI load
	l.addi  	r8,r0,0	 # move immediate I
	l.add   	r11,r11,r3
	l.sw    	56(r1),r8	 # SI store
	l.sw    	44(r1),r11	 # SI store
	l.sw    	60(r1),r8	 # SI store
.L14709:
	l.lwz   	r5,52(r1)	 # SI load
	l.lwz   	r4,12(r30)	 # SI load
	l.lwz   	r5,4(r5)	 # SI load
	l.lwz   	r6,16(r30)	 # SI load
	l.sw    	40(r1),r4	 # SI store
	l.sw    	36(r1),r5	 # SI store
	l.sflesi	r4,0
	l.bf	.L14700	# delay slot filled
	l.sw    	68(r1),r6	 # SI store
	l.addi  	r7,r0,0	 # move immediate I
	l.sw    	32(r1),r6	 # SI store
	l.j     	.L14702	# delay slot filled
	l.sw    	28(r1),r7	 # SI store
.L14773:
	l.lwz   	r11,28(r1)	 # SI load
	l.addi  	r11,r11,1
	l.sfges 	r11,r3
	l.bf	.L14700	# delay slot filled
	l.sw    	28(r1),r11	 # SI store
.L14702:
	l.lwz   	r8,32(r1)	 # SI load
	l.lwz   	r3,36(r1)	 # SI load
	l.lwz   	r4,0(r8)	 # SI load
	l.addi  	r8,r8,20
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.sw    	32(r1),r8	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L14773	# delay slot filled
	l.lwz   	r3,40(r1)	 # SI load
	l.lwz   	r4,8(r20)	 # SI load
	l.lwz   	r6,56(r1)	 # SI load
	l.lwz   	r5,52(r1)	 # SI load
	l.add   	r4,r4,r6
	l.lwz   	r7,28(r1)	 # SI load
	l.lwz   	r3,0(r5)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14704	# delay slot filled
	l.sw    	0(r4),r7	 # SI store
	l.lwz   	r3,32(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14704	# delay slot filled
	l.movhi  	r5,hi(.LC78)
	l.lwz   	r6,0(r3)	 # SI load
	l.ori   	r5,r5,lo(.LC78)
	l.lwz   	r3,48(r1)	 # SI load
	l.lwz   	r4,44(r1)	 # SI load
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.lwz   	r11,44(r1)	 # SI load
	l.lbs   	r3,0(r11)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L14705	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.addi  	r5,r5,1
.L14783:
	l.lbs   	r4,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L14783	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
.L14705:
	l.lwz   	r4,44(r1)	 # SI load
	l.sub   	r3,r5,r4
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.sw    	28(r1),r4	 # SI store
	l.ori   	r5,r5,65535
	l.and   	r3,r3,r5
	l.addi  	r3,r3,1
	l.add   	r6,r4,r3
	l.sw    	44(r1),r6	 # SI store
.L14707:
	l.lbz   	r3,128(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bnf	.L14774	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r11,56(r1)	 # SI load
.L14784:
	l.lwz   	r4,44(r20)	 # SI load
	l.lwz   	r5,60(r1)	 # SI load
	l.lwz   	r3,40(r20)	 # SI load
	l.add   	r4,r4,r11
	l.lwz   	r6,28(r1)	 # SI load
	l.add   	r3,r3,r5
	l.addi  	r5,r5,1
	l.sw    	0(r4),r6	 # SI store
	l.sw    	60(r1),r5	 # SI store
	l.lwz   	r7,52(r1)	 # SI load
	l.lwz   	r8,64(r1)	 # SI load
	l.lbz   	r4,8(r7)	 # zero_extendqisi2
	l.addi  	r11,r11,4
	l.and   	r4,r8,r4
	l.sw    	56(r1),r11	 # SI store
	l.sb    	0(r3),r4	    # movqi
	l.lwz   	r3,0(r22)	 # SI load
	l.sfles 	r3,r5
	l.bf	.L14699	# delay slot filled
	l.addi  	r7,r7,16
	l.j     	.L14709	# delay slot filled
	l.sw    	52(r1),r7	 # SI store
.L14704:
	l.lwz   	r7,28(r1)	 # SI load
	l.lwz   	r8,68(r1)	 # SI load
	l.slli  	r4,r7,2
	l.slli  	r3,r7,4
	l.add   	r3,r4,r3
	l.add   	r3,r8,r3
	l.lwz   	r3,12(r3)	 # SI load
	l.sfnei	r3,0
	l.bf	.L14707	# delay slot filled
	l.sw    	28(r1),r3	 # SI store
	l.lwz   	r3,44(r2)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.j     	.L14707	# delay slot filled
	l.sw    	28(r1),r3	 # SI store
.L14774:
	l.jal   	sqlite3LocateCollSeq.clone.180	# delay slot filled
	l.lwz   	r4,28(r1)	 # SI load
	l.sfeqi	r11,0
	l.bnf	.L14784	# delay slot filled
	l.lwz   	r11,56(r1)	 # SI load
	l.j     	.L14777	# delay slot filled
	l.sfeqi	r20,0
.L14700:
	l.movhi  	r4,hi(.LC474)
	l.lwz   	r5,4(r30)	 # SI load
	l.lwz   	r8,36(r1)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC474)
	l.sw    	0(r1),r5	 # SI store
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	4(r1),r8	 # SI store
	l.j     	.L14777	# delay slot filled
	l.sfeqi	r20,0
.L14699:
	l.jal   	sqlite3DefaultRowEst	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r3,476(r14)	 # SI load
	l.sfne 	r3,r30
	l.bnf	.L14775
	l.nop			# nop delay slot
.L14710:
	l.lbz   	r3,128(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L14719
	l.nop			# nop delay slot
	l.lwz   	r3,36(r20)	 # SI load
	l.lwz   	r4,0(r20)	 # SI load
	l.addi  	r3,r3,20
	l.ori   	r5,r4,0	 # move reg to reg
.L14720:
	l.lbs   	r6,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r6,0
	l.bf	.L14720	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r4
	l.ori   	r11,r11,65535
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.and   	r5,r5,r11
	l.sfeqi	r11,0
	l.bf	.L14722	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.j     	.L14697	# delay slot filled
	l.sb    	30(r2),r3	    # movqi
.L14771:
	l.lwz   	r3,12(r30)	 # SI load
	l.lwz   	r5,16(r30)	 # SI load
	l.addi  	r3,r3,-1
	l.slli  	r4,r3,2
	l.slli  	r3,r3,4
	l.add   	r3,r4,r3
	l.add   	r3,r5,r3
	l.lwz   	r5,0(r3)	 # SI load
	l.sw    	88(r1),r5	 # SI store
	l.ori   	r3,r5,0	 # move reg to reg
.L14688:
	l.lbs   	r4,0(r3)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L14688	# delay slot filled
	l.addi  	r3,r3,1
	l.addi  	r3,r3,-1
	l.movhi 	r11,hi(1073676288)	 # move immediate M
	l.lwz   	r7,92(r1)	 # SI load
	l.sub   	r3,r3,r5
	l.movhi 	r8,hi(-2147483648)	 # move immediate M
	l.ori   	r11,r11,65535
	l.and   	r7,r7,r8
	l.and   	r3,r3,r11
	l.ori   	r5,r4,0	 # move reg to reg
	l.or    	r7,r7,r3
	l.addi  	r6,r1,88
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3ExprListAppend.clone.149	# delay slot filled
	l.sw    	92(r1),r7	 # SI store
	l.sfeqi	r11,0
	l.bf	.L14732	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.lbz   	r4,155(r1)	 # zero_extendqisi2
	l.lwz   	r3,12(r11)	 # SI load
	l.j     	.L14687	# delay slot filled
	l.sb    	8(r3),r4	    # movqi
.L14722:
	l.lwz   	r3,12(r2)	 # SI load
	l.sfeqi	r18,0
	l.ori   	r3,r3,16
	l.bf	.L14723	# delay slot filled
	l.sw    	12(r2),r3	 # SI store
	l.lwz   	r3,124(r2)	 # SI load
	l.sw    	20(r20),r3	 # SI store
.L14723:
	l.sub   	r3,r0,r18
.L14778:
	l.or    	r3,r18,r3
	l.sfgesi	r3,0
	l.bf	.L14785	# delay slot filled
	l.sfnei	r24,5
	l.lbz   	r3,128(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L14777	# delay slot filled
	l.sfeqi	r20,0
	l.sfnei	r24,5
.L14785:
	l.bnf	.L14764
	l.nop			# nop delay slot
	l.lwz   	r3,20(r30)	 # SI load
.L14728:
	l.sw    	32(r20),r3	 # SI store
	l.j     	.L14732	# delay slot filled
	l.sw    	20(r30),r20	 # SI store
.L14719:
	l.lwz   	r4,72(r14)	 # SI load
	l.lwz   	r3,0(r14)	 # SI load
	l.addi  	r4,r4,1
	l.sw    	28(r1),r4	 # SI store
	l.addi  	r4,r14,12
	l.lwz   	r5,28(r1)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.sw    	72(r14),r5	 # SI store
	l.sfeqi	r11,0
	l.bf	.L14697	# delay slot filled
	l.sw    	32(r1),r11	 # SI store
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r26,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.lwz   	r6,28(r1)	 # SI load
	l.addi  	r4,r0,34	 # move immediate I
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r5,r26,0	 # move reg to reg
	l.lwz   	r6,148(r1)	 # SI load
	l.sub   	r3,r0,r6
	l.or    	r3,r6,r3
	l.sfgesi	r3,0
	l.bf	.L14786	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
	l.lwz   	r7,144(r1)	 # SI load
	l.sub   	r3,r0,r7
	l.or    	r3,r7,r3
	l.sfgesi	r3,0
	l.bf	.L14751	# delay slot filled
	l.movhi  	r5,hi(.LC466)
	l.sfnei	r24,0
	l.bf	.L14725	# delay slot filled
	l.ori   	r5,r5,lo(.LC466)
	l.movhi  	r5,hi(.LC15)
	l.ori   	r5,r5,lo(.LC15)
.L14725:
	l.lwz   	r8,148(r1)	 # SI load
	l.lwz   	r3,96(r1)	 # SI load
	l.lwz   	r7,0(r8)	 # SI load
	l.lwz   	r6,0(r3)	 # SI load
	l.addi  	r7,r7,1
	l.movhi  	r4,hi(.LC476)
	l.sub   	r7,r7,r6
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC476)
	l.sw    	0(r1),r5	 # SI store
	l.sw    	4(r1),r7	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	8(r1),r6	 # SI store
	l.sw    	24(r1),r11	 # SI store
.L14724:
	l.lwz   	r4,8(r2)	 # SI load
	l.movhi  	r3,hi(.LC199)
	l.add   	r28,r4,r28
	l.ori   	r3,r3,lo(.LC199)
	l.sfnei	r26,1
	l.bf	.L14726	# delay slot filled
	l.lwz   	r4,0(r28)	 # SI load
	l.movhi  	r3,hi(.LC198)
	l.ori   	r3,r3,lo(.LC198)
.L14726:
	l.sw    	0(r1),r4	 # SI store
	l.sw    	4(r1),r3	 # SI store
	l.movhi  	r4,hi(.LC477)
	l.lwz   	r5,0(r20)	 # SI load
	l.lwz   	r6,28(r1)	 # SI load
	l.sw    	8(r1),r5	 # SI store
	l.lwz   	r7,24(r1)	 # SI load
	l.lwz   	r5,4(r30)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC477)
	l.sw    	16(r1),r6	 # SI store
	l.sw    	12(r1),r5	 # SI store
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	20(r1),r7	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,24(r1)	 # SI load
	l.sfeqi	r18,0
	l.bf	.L14723	# delay slot filled
	l.lwz   	r5,28(r1)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3RefillIndex	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ChangeCookie	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.movhi  	r4,hi(.LC478)
	l.lwz   	r5,0(r20)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC478)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r5,r26,0	 # move reg to reg
	l.lwz   	r3,32(r1)	 # SI load
	l.ori   	r8,r11,0	 # move reg to reg
	l.addi  	r4,r0,31	 # move immediate I
	l.ori   	r7,r6,0	 # move reg to reg
	l.addi  	r11,r0,-1	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r3,32(r1)	 # SI load
	l.addi  	r4,r0,14	 # move immediate I
	l.jal   	sqlite3VdbeAddOp1	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L14778	# delay slot filled
	l.sub   	r3,r0,r18
.L14751:
.L14786:
	l.j     	.L14724	# delay slot filled
	l.sw    	24(r1),r11	 # SI store
.L14775:
	l.lwz   	r11,20(r30)	 # SI load
	l.j     	.L14711	# delay slot filled
	l.sw    	28(r1),r11	 # SI store
.L14712:
	l.lwz   	r7,28(r1)	 # SI load
.L14787:
	l.lwz   	r7,32(r7)	 # SI load
	l.sw    	28(r1),r7	 # SI store
.L14711:
	l.lwz   	r8,28(r1)	 # SI load
	l.sfnei	r8,0
	l.bnf	.L14710	# delay slot filled
	l.lwz   	r3,28(r1)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.sw    	40(r1),r3	 # SI store
	l.lwz   	r3,4(r20)	 # SI load
	l.lwz   	r4,40(r1)	 # SI load
	l.sfne 	r4,r3
	l.bf	.L14787	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	32(r1),r5	 # SI store
	l.j     	.L14713	# delay slot filled
	l.sw    	36(r1),r5	 # SI store
.L14716:
	l.lwz   	r8,32(r1)	 # SI load
	l.lwz   	r6,8(r7)	 # SI load
	l.lwz   	r4,44(r7)	 # SI load
	l.lwz   	r11,32(r1)	 # SI load
	l.lwz   	r5,8(r20)	 # SI load
	l.lwz   	r3,44(r20)	 # SI load
	l.add   	r5,r5,r8
	l.add   	r4,r4,r8
	l.add   	r3,r3,r8
	l.add   	r6,r6,r8
	l.addi  	r11,r11,4
	l.lwz   	r8,0(r6)	 # SI load
	l.lwz   	r7,0(r5)	 # SI load
	l.lwz   	r6,0(r4)	 # SI load
	l.lwz   	r5,0(r3)	 # SI load
	l.sw    	32(r1),r11	 # SI store
	l.ori   	r3,r6,0	 # move reg to reg
	l.sfne 	r8,r7
	l.bf	.L14714	# delay slot filled
	l.ori   	r4,r5,0	 # move reg to reg
	l.lwz   	r7,28(r1)	 # SI load
	l.lwz   	r11,36(r1)	 # SI load
	l.lwz   	r8,40(r7)	 # SI load
	l.lwz   	r7,40(r20)	 # SI load
	l.add   	r8,r8,r11
	l.add   	r7,r7,r11
	l.lbz   	r8,0(r8)	 # zero_extendqisi2
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.sfne 	r8,r7
	l.bf	.L14714	# delay slot filled
	l.sfeq 	r6,r5
	l.bf	.L14715
	l.nop			# nop delay slot
	l.jal   	sqlite3StrICmp
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bf	.L14788	# delay slot filled
	l.lwz   	r6,36(r1)	 # SI load
.L14715:
	l.lwz   	r3,36(r1)	 # SI load
	l.addi  	r3,r3,1
	l.sw    	36(r1),r3	 # SI store
.L14713:
	l.lwz   	r4,36(r1)	 # SI load
	l.lwz   	r5,40(r1)	 # SI load
	l.sflts 	r4,r5
	l.bf	.L14716	# delay slot filled
	l.lwz   	r7,28(r1)	 # SI load
.L14714:
	l.lwz   	r6,36(r1)	 # SI load
.L14788:
	l.lwz   	r7,40(r1)	 # SI load
	l.sfne 	r6,r7
	l.bf	.L14712	# delay slot filled
	l.lwz   	r8,28(r1)	 # SI load
	l.lbz   	r4,24(r20)	 # zero_extendqisi2
	l.lbz   	r3,24(r8)	 # zero_extendqisi2
	l.sfeq 	r3,r4
	l.bf	.L14697	# delay slot filled
	l.sfeqi	r3,99
	l.bf	.L14717	# delay slot filled
	l.sfeqi	r4,99
	l.bf	.L14717	# delay slot filled
	l.movhi  	r4,hi(.LC475)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC475)
	l.addi  	r11,r0,0	 # move immediate I
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r4,28(r1)	 # SI load
	l.lbz   	r3,24(r4)	 # zero_extendqisi2
.L14717:
	l.sfnei	r3,99
	l.bf	.L14777	# delay slot filled
	l.sfeqi	r20,0
	l.lbz   	r6,24(r20)	 # zero_extendqisi2
	l.lwz   	r5,28(r1)	 # SI load
	l.j     	.L14777	# delay slot filled
	l.sb    	24(r5),r6	    # movqi
.L14764:
	l.lwz   	r3,20(r30)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14728	# delay slot filled
	l.ori   	r4,r3,0	 # move reg to reg
	l.lbz   	r5,24(r3)	 # zero_extendqisi2
	l.sfnei	r5,5
	l.bnf	.L14728
	l.nop			# nop delay slot
.L14762:
	l.lwz   	r3,32(r4)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14730
	l.nop			# nop delay slot
	l.lbz   	r5,24(r3)	 # zero_extendqisi2
	l.sfnei	r5,5
	l.bnf	.L14730
	l.nop			# nop delay slot
	l.j     	.L14762	# delay slot filled
	l.ori   	r4,r3,0	 # move reg to reg
.L14730:
	l.sw    	32(r20),r3	 # SI store
	l.j     	.L14732	# delay slot filled
	l.sw    	32(r4),r20	 # SI store
.LFE895:
	.size	sqlite3CreateIndex, .-sqlite3CreateIndex
	.section	.rodata.str1.1
.LC479:
	.string	"table \"%s\" has more than one primary key"
.LC480:
	.string	"AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY"
	.section .text
	.align	4
.proc	sqlite3AddPrimaryKey
	.type	sqlite3AddPrimaryKey, @function
sqlite3AddPrimaryKey:
.LFB874:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4209:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4210:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4211:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4212:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4213:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4214:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4215:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4216:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4217:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4218:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4219:
	l.addi  	r1,r1,-72
.LCFI4220:
	l.lwz   	r22,476(r3)	 # SI load
	l.sw    	24(r1),r5	 # SI store
	l.sw    	16(r1),r6	 # SI store
	l.sw    	20(r1),r7	 # SI store
	l.ori   	r30,r3,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bf	.L14790	# delay slot filled
	l.ori   	r20,r4,0	 # move reg to reg
	l.lbz   	r2,500(r3)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L14790
	l.nop			# nop delay slot
	l.lbz   	r2,34(r22)	 # zero_extendqisi2
	l.andi  	r24,r2,4
	l.sfeqi	r24,0
	l.bnf	.L14808	# delay slot filled
	l.ori   	r2,r2,4
	l.sfeqi	r4,0
	l.bf	.L14792	# delay slot filled
	l.sb    	34(r22),r2	    # movqi
	l.lwz   	r28,0(r4)	 # SI load
	l.sfgtsi	r28,0
	l.bnf	.L14801	# delay slot filled
	l.ori   	r26,r24,0	 # move reg to reg
.L14799:
	l.lwz   	r16,12(r22)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.sfles 	r16,r2
	l.bf	.L14803
	l.nop			# nop delay slot
	l.lwz   	r11,12(r20)	 # SI load
	l.lwz   	r14,16(r22)	 # SI load
	l.add   	r11,r11,r24
	l.j     	.L14797	# delay slot filled
	l.lwz   	r18,4(r11)	 # SI load
.L14809:
	l.sflts 	r2,r16
	l.bnf	.L14803	# delay slot filled
	l.addi  	r14,r14,20
.L14797:
	l.lwz   	r4,0(r14)	 # SI load
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L14809	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.addi  	r5,r0,1	 # movqi: move immediate
	l.sb    	17(r14),r5	    # movqi
	l.lwz   	r28,0(r20)	 # SI load
.L14803:
	l.addi  	r26,r26,1
	l.sfgts 	r28,r26
	l.bf	.L14799	# delay slot filled
	l.addi  	r24,r24,16
	l.sfgtsi	r28,1
	l.bnf	.L14811	# delay slot filled
	l.sfltsi	r2,0
.L14801:
	l.lwz   	r3,16(r1)	 # SI load
.L14812:
	l.sfeqi	r3,0
	l.bnf	.L14810	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.lwz   	r4,16(r1)	 # SI load
	l.lwz   	r2,20(r1)	 # SI load
	l.ori   	r3,r30,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r6,r4,0	 # move reg to reg
	l.lwz   	r8,24(r1)	 # SI load
	l.ori   	r20,r4,0	 # move reg to reg
	l.sw    	0(r1),r4	 # SI store
	l.sw    	4(r1),r4	 # SI store
	l.sw    	8(r1),r2	 # SI store
	l.jal   	sqlite3CreateIndex	# delay slot filled
	l.sw    	12(r1),r4	 # SI store
.L14790:
	l.lwz   	r3,0(r30)	 # SI load
	l.addi	r1,r1,72
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3ExprListDelete	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L14808:
	l.movhi  	r4,hi(.LC479)
	l.lwz   	r2,4(r22)	 # SI load
	l.ori   	r4,r4,lo(.LC479)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r3,0(r30)	 # SI load
	l.addi	r1,r1,72
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3ExprListDelete	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L14810:
	l.movhi  	r4,hi(.LC480)
	l.ori   	r3,r30,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC480)
	l.lwz   	r3,0(r30)	 # SI load
	l.addi	r1,r1,72
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.j	sqlite3ExprListDelete	# delay slot filled	# sibcall s
	l.lwz   	r30,-8(r1)	 # SI load
.L14792:
	l.lwz   	r2,12(r22)	 # SI load
	l.lwz   	r5,16(r22)	 # SI load
	l.addi  	r2,r2,-1
	l.slli  	r4,r2,4
	l.slli  	r3,r2,2
	l.add   	r3,r3,r4
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.add   	r3,r5,r3
	l.sb    	17(r3),r4	    # movqi
	l.sfltsi	r2,0
.L14811:
	l.bf	.L14812	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r3,12(r22)	 # SI load
	l.sfges 	r2,r3
	l.bf	.L14812	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.slli  	r3,r2,2
	l.slli  	r4,r2,4
	l.lwz   	r5,16(r22)	 # SI load
	l.add   	r3,r3,r4
	l.add   	r3,r5,r3
	l.lwz   	r3,8(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14801	# delay slot filled
	l.movhi  	r4,hi(.LC19)
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.ori   	r4,r4,lo(.LC19)
	l.sfnei	r11,0
	l.bf	.L14812	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r3,20(r1)	 # SI load
	l.sfnei	r3,0
	l.bf	.L14812	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r5,16(r1)	 # SI load
	l.lbz   	r3,34(r22)	 # zero_extendqisi2
	l.slli  	r4,r5,3
	l.sw    	8(r22),r2	 # SI store
	l.lwz   	r2,24(r1)	 # SI load
	l.sb    	35(r22),r2	    # movqi
	l.or    	r2,r4,r3
	l.j     	.L14790	# delay slot filled
	l.sb    	34(r22),r2	    # movqi
.LFE874:
	.size	sqlite3AddPrimaryKey, .-sqlite3AddPrimaryKey
	.section	.rodata.str1.1
.LC481:
	.string	"INSERT INTO %Q.%s VALUES('trigger',%Q,%Q,0,'CREATE TRIGGER %q')"
.LC482:
	.string	"type='trigger' AND name='%q'"
	.section .text
	.align	4
.proc	sqlite3FinishTrigger
	.type	sqlite3FinishTrigger, @function
sqlite3FinishTrigger:
.LFB1079:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4221:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4222:
	l.lwz   	r16,480(r3)	 # SI load
	l.ori   	r22,r3,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	-44(r1),r2	 # SI store
.LCFI4223:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4224:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4225:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4226:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4227:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4228:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4229:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4230:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4231:
	l.sw    	480(r22),r3	 # SI store
	l.sub   	r3,r0,r16
	l.addi  	r1,r1,-84
.LCFI4232:
	l.or    	r3,r16,r3
	l.ori   	r2,r4,0	 # move reg to reg
	l.ori   	r28,r5,0	 # move reg to reg
	l.sfgesi	r3,0
	l.bf	.L14814	# delay slot filled
	l.lwz   	r20,0(r22)	 # SI load
	l.lwz   	r3,64(r22)	 # SI load
	l.sub   	r14,r0,r3
	l.or    	r14,r14,r3
	l.srli  	r14,r14,31
	l.sfnei	r14,0
	l.bf	.L14851	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r3,28(r16)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14830	# delay slot filled
	l.lwz   	r24,0(r16)	 # SI load
	l.lwz   	r8,4(r20)	 # SI load
	l.sflesi	r8,0
	l.bf	.L14852	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.lwz   	r6,8(r20)	 # SI load
	l.lwz   	r4,20(r6)	 # SI load
	l.sfeq 	r3,r4
	l.bf	.L14832	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L14816	# delay slot filled
	l.addi  	r6,r6,44
.L14817:
	l.lwz   	r7,0(r6)	 # SI load
	l.sfne 	r3,r7
	l.bnf	.L14845	# delay slot filled
	l.addi  	r6,r6,24
.L14816:
	l.addi  	r14,r14,1
	l.sflts 	r14,r8
	l.bf	.L14817
	l.nop			# nop delay slot
.L14845:
	l.xori  	r3,r14,1
	l.sub   	r26,r0,r3
	l.or    	r26,r26,r3
	l.xori  	r26,r26,0xffff
	l.srli  	r26,r26,31
	l.ori   	r4,r26,0	 # move reg to reg
.L14815:
	l.sfeqi	r2,0
	l.bf	.L14818	# delay slot filled
	l.sw    	36(r16),r2	 # SI store
	l.ori   	r7,r2,0	 # move reg to reg
.L14819:
	l.sw    	8(r7),r16	 # SI store
	l.lwz   	r7,36(r7)	 # SI load
	l.sfnei	r7,0
	l.bf	.L14819
	l.nop			# nop delay slot
.L14818:
	l.sfnei	r4,0
	l.bf	.L14820	# delay slot filled
	l.add   	r18,r14,r14
	l.lwz   	r3,8(r20)	 # SI load
	l.add   	r18,r18,r14
	l.addi  	r4,r16,20
	l.slli  	r18,r18,3
	l.sw    	24(r1),r22	 # SI store
	l.sfeqi	r2,0
	l.add   	r3,r3,r18
	l.lwz   	r5,0(r3)	 # SI load
	l.movhi  	r3,hi(.LC114)
	l.sw    	28(r1),r5	 # SI store
	l.ori   	r3,r3,lo(.LC114)
	l.sw    	36(r1),r4	 # SI store
	l.bf	.L14820	# delay slot filled
	l.sw    	32(r1),r3	 # SI store
	l.j     	.L14822	# delay slot filled
	l.addi  	r18,r1,24
.L14847:
	l.jal   	sqlite3FixExpr	# delay slot filled
	l.lwz   	r4,24(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L14846	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3FixExprList	# delay slot filled
	l.lwz   	r4,28(r2)	 # SI load
	l.sfnei	r11,0
	l.bf	.L14846
	l.nop			# nop delay slot
	l.lwz   	r2,36(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L14820
	l.nop			# nop delay slot
.L14822:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3FixSelect	# delay slot filled
	l.lwz   	r4,12(r2)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L14847	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
.L14846:
	l.addi  	r2,r0,0	 # move immediate I
.L14814:
	l.ori   	r3,r20,0	 # move reg to reg
.L14851:
	l.jal   	sqlite3DeleteTrigger	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3DeleteTriggerStep	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi	r1,r1,84
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L14820:
	l.lbz   	r30,128(r20)	 # zero_extendqisi2
	l.sfnei	r30,0
	l.bnf	.L14848	# delay slot filled
	l.add   	r18,r14,r14
	l.add   	r14,r18,r14
	l.lwz   	r3,8(r20)	 # SI load
.L14855:
	l.slli  	r14,r14,3
	l.lbs   	r5,0(r24)	 # extendqisi2_no_sext_mem
	l.add   	r3,r3,r14
	l.sfeqi	r5,0
	l.lwz   	r3,20(r3)	 # SI load
	l.bf	.L14825	# delay slot filled
	l.addi  	r3,r3,36
	l.ori   	r2,r24,0	 # move reg to reg
	l.addi  	r2,r2,1
.L14853:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L14853	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r24
	l.ori   	r4,r4,65535
	l.and   	r5,r2,r4
.L14825:
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.ori   	r6,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14827	# delay slot filled
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.ori   	r16,r11,0	 # move reg to reg
	l.sb    	30(r20),r6	    # movqi
	l.j     	.L14814	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L14848:
	l.lwz   	r3,0(r22)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r22,12
	l.sw    	20(r1),r11	 # SI store
	l.sfeqi	r11,0
	l.bf	.L14814	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r30,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,4(r28)	 # SI load
	l.ori   	r6,r6,65535
	l.ori   	r3,r20,0	 # move reg to reg
	l.lwz   	r4,0(r28)	 # SI load
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.and   	r5,r5,r6
	l.add   	r4,r18,r14
	l.lwz   	r5,8(r20)	 # SI load
	l.slli  	r4,r4,3
	l.movhi  	r3,hi(.LC198)
	l.ori   	r2,r11,0	 # move reg to reg
	l.add   	r4,r5,r4
	l.ori   	r3,r3,lo(.LC198)
	l.sfnei	r26,0
	l.bf	.L14824	# delay slot filled
	l.lwz   	r4,0(r4)	 # SI load
	l.movhi  	r3,hi(.LC199)
	l.ori   	r3,r3,lo(.LC199)
.L14824:
	l.sw    	0(r1),r4	 # SI store
	l.sw    	4(r1),r3	 # SI store
	l.sw    	8(r1),r24	 # SI store
	l.movhi  	r4,hi(.LC481)
	l.lwz   	r5,4(r16)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC481)
	l.sw    	12(r1),r5	 # SI store
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	16(r1),r2	 # SI store
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r2,r0,-1	 # move immediate I
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3ChangeCookie	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.movhi  	r4,hi(.LC482)
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC482)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r24	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,31	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lbz   	r2,128(r20)	 # zero_extendqisi2
	l.sfeqi	r2,0
	l.bf	.L14814	# delay slot filled
	l.add   	r14,r18,r14
	l.j     	.L14855	# delay slot filled
	l.lwz   	r3,8(r20)	 # SI load
.L14830:
	l.movhi 	r14,hi(-1048576)	 # move immediate M
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r26,r3,0	 # move reg to reg
	l.j     	.L14815	# delay slot filled
	l.ori   	r14,r14,48576
.L14827:
	l.lwz   	r3,28(r16)	 # SI load
	l.lwz   	r2,32(r16)	 # SI load
	l.sfne 	r3,r2
	l.bnf	.L14849
	l.nop			# nop delay slot
	l.ori   	r16,r11,0	 # move reg to reg
	l.j     	.L14814	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L14832:
.L14852:
	l.j     	.L14815	# delay slot filled
	l.ori   	r26,r14,0	 # move reg to reg
.L14849:
	l.lwz   	r4,4(r16)	 # SI load
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L14828	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r2,r2,1
.L14854:
	l.lbs   	r5,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L14854	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
.L14828:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r4
	l.ori   	r6,r6,65535
	l.addi  	r3,r3,4
	l.jal   	sqlite3HashFind	# delay slot filled
	l.and   	r5,r2,r6
	l.lwz   	r2,68(r11)	 # SI load
	l.sw    	40(r16),r2	 # SI store
	l.sw    	68(r11),r16	 # SI store
	l.addi  	r16,r0,0	 # move immediate I
	l.j     	.L14814	# delay slot filled
	l.ori   	r2,r16,0	 # move reg to reg
.LFE1079:
	.size	sqlite3FinishTrigger, .-sqlite3FinishTrigger
	.section	.rodata.str1.1
.LC483:
	.string	"CREATE TABLE %Q.sqlite_stat1(tbl,idx,stat)"
	.section .text
	.align	4
.proc	openStatTable
	.type	openStatTable, @function
openStatTable:
.LFB820:
	l.sw    	-20(r1),r18	 # SI store
.LCFI4233:
	l.lwz   	r18,0(r3)	 # SI load
	l.sw    	-32(r1),r2	 # SI store
.LCFI4234:
	l.sw    	-28(r1),r14	 # SI store
.LCFI4235:
	l.sw    	-24(r1),r16	 # SI store
.LCFI4236:
	l.sw    	-12(r1),r22	 # SI store
.LCFI4237:
	l.sw    	-8(r1),r24	 # SI store
.LCFI4238:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4239:
	l.sw    	-16(r1),r20	 # SI store
.LCFI4240:
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi  	r1,r1,-40
.LCFI4241:
	l.ori   	r14,r4,0	 # move reg to reg
	l.addi  	r4,r3,12
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r24,r5,0	 # move reg to reg
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.ori   	r22,r6,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14856	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.add   	r5,r14,r14
	l.lwz   	r6,8(r18)	 # SI load
	l.add   	r5,r5,r14
	l.movhi  	r4,hi(.LC321)
	l.slli  	r5,r5,3
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC321)
	l.add   	r5,r6,r5
	l.lwz   	r20,0(r5)	 # SI load
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L14862	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfeqi	r22,0
	l.bf	.L14860	# delay slot filled
	l.movhi  	r4,hi(.LC464)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC464)
	l.sw    	0(r1),r20	 # SI store
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	4(r1),r22	 # SI store
	l.lwz   	r18,24(r18)	 # SI load
	l.movhi  	r7,hi(.LC321)
.L14863:
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r7,lo(.LC321)
	l.jal   	sqlite3TableLock	# delay slot filled
	l.addi  	r20,r0,0	 # move immediate I
.L14859:
	l.addi  	r4,r0,10	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r5,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-14	 # move immediate I
	l.lwz   	r3,20(r2)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14856
	l.nop			# nop delay slot
	l.lwz   	r2,12(r2)	 # SI load
	l.addi  	r2,r2,-1
	l.slli  	r4,r2,2
	l.slli  	r2,r2,4
	l.add   	r2,r4,r2
	l.add   	r3,r3,r2
	l.sb    	3(r3),r20	    # movqi
.L14856:
	l.addi	r1,r1,40
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L14860:
	l.lwz   	r18,24(r11)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
	l.addi  	r4,r0,98	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.j     	.L14863	# delay slot filled
	l.movhi  	r7,hi(.LC321)
.L14862:
	l.movhi  	r4,hi(.LC483)
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC483)
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	0(r1),r20	 # SI store
	l.addi  	r20,r0,1	 # move immediate I
	l.j     	.L14859	# delay slot filled
	l.lwz   	r18,408(r16)	 # SI load
.LFE820:
	.size	openStatTable, .-openStatTable
	.align	4
.proc	analyzeDatabase
	.type	analyzeDatabase, @function
analyzeDatabase:
.LFB823:
	l.sw    	-24(r1),r2	 # SI store
.LCFI4242:
	l.sw    	-8(r1),r20	 # SI store
.LCFI4243:
	l.add   	r2,r4,r4
	l.ori   	r20,r4,0	 # move reg to reg
	l.lwz   	r4,0(r3)	 # SI load
	l.add   	r2,r2,r20
	l.lwz   	r6,8(r4)	 # SI load
	l.slli  	r2,r2,3
	l.sw    	-4(r1),r9	 # SI store
.LCFI4244:
	l.sw    	-20(r1),r14	 # SI store
.LCFI4245:
	l.sw    	-16(r1),r16	 # SI store
.LCFI4246:
	l.ori   	r14,r3,0	 # move reg to reg
	l.sw    	-12(r1),r18	 # SI store
.LCFI4247:
	l.add   	r2,r6,r2
	l.addi  	r1,r1,-24
.LCFI4248:
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.lwz   	r2,20(r2)	 # SI load
	l.lwz   	r16,68(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r5,r16,1
	l.ori   	r4,r20,0	 # move reg to reg
	l.sw    	68(r14),r5	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	openStatTable	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.lwz   	r18,72(r14)	 # SI load
	l.lwz   	r2,12(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L14865	# delay slot filled
	l.addi  	r18,r18,1
.L14867:
	l.lwz   	r4,8(r2)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	analyzeOneTable	# delay slot filled
	l.ori   	r6,r18,0	 # move reg to reg
	l.lwz   	r2,0(r2)	 # SI load
	l.sfnei	r2,0
	l.bf	.L14867
	l.nop			# nop delay slot
.L14865:
	l.addi	r1,r1,24
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.j	loadAnalysis	# delay slot filled	# sibcall s
	l.lwz   	r20,-8(r1)	 # SI load
.LFE823:
	.size	analyzeDatabase, .-analyzeDatabase
	.align	4
.proc	analyzeTable
	.type	analyzeTable, @function
analyzeTable:
.LFB824:
	l.sw    	-16(r1),r14	 # SI store
.LCFI4249:
	l.sw    	-8(r1),r18	 # SI store
.LCFI4250:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4251:
	l.sw    	-20(r1),r2	 # SI store
.LCFI4252:
	l.sw    	-12(r1),r16	 # SI store
.LCFI4253:
	l.lwz   	r6,72(r4)	 # SI load
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-20
.LCFI4254:
	l.ori   	r18,r4,0	 # move reg to reg
	l.sfeqi	r6,0
	l.bf	.L14873	# delay slot filled
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r7,4(r3)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.sfles 	r7,r2
	l.bf	.L14870
	l.nop			# nop delay slot
	l.lwz   	r5,8(r3)	 # SI load
	l.lwz   	r3,20(r5)	 # SI load
	l.sfeq 	r6,r3
	l.bf	.L14870	# delay slot filled
	l.addi  	r5,r5,44
	l.j     	.L14876	# delay slot filled
	l.addi  	r2,r2,1
.L14872:
	l.lwz   	r3,0(r5)	 # SI load
	l.sfeq 	r6,r3
	l.bf	.L14870	# delay slot filled
	l.addi  	r5,r5,24
	l.addi  	r2,r2,1
.L14876:
	l.sflts 	r2,r7
	l.bf	.L14872
	l.nop			# nop delay slot
.L14870:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r16,68(r14)	 # SI load
	l.lwz   	r6,4(r18)	 # SI load
	l.addi  	r7,r16,1
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	openStatTable	# delay slot filled
	l.sw    	68(r14),r7	 # SI store
	l.lwz   	r6,72(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r16,0	 # move reg to reg
	l.jal   	analyzeOneTable	# delay slot filled
	l.addi  	r6,r6,1
	l.addi	r1,r1,20
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	loadAnalysis	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L14873:
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.j     	.L14870	# delay slot filled
	l.ori   	r2,r2,48576
.LFE824:
	.size	analyzeTable, .-analyzeTable
	.align	4
.proc	sqlite3Analyze
	.type	sqlite3Analyze, @function
sqlite3Analyze:
.LFB825:
	l.sw    	-28(r1),r2	 # SI store
.LCFI4255:
	l.sw    	-24(r1),r14	 # SI store
.LCFI4256:
	l.sw    	-20(r1),r16	 # SI store
.LCFI4257:
	l.sw    	-16(r1),r18	 # SI store
.LCFI4258:
	l.sw    	-12(r1),r20	 # SI store
.LCFI4259:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4260:
	l.sw    	-8(r1),r22	 # SI store
.LCFI4261:
	l.addi  	r1,r1,-32
.LCFI4262:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r14,r4,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.jal   	sqlite3ReadSchema	# delay slot filled
	l.lwz   	r16,0(r3)	 # SI load
	l.sfnei	r11,0
	l.bf	.L14877	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfnei	r14,0
	l.bnf	.L14888	# delay slot filled
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.lwz   	r22,4(r20)	 # SI load
	l.ori   	r3,r3,65535
	l.and   	r22,r22,r3
	l.sfnei	r22,0
	l.bf	.L14882	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3FindDb	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfltsi	r11,0
	l.bf	.L14883	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	analyzeDatabase	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
.L14877:
	l.addi	r1,r1,32
.L14889:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L14882:
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.jal   	sqlite3TwoPartName	# delay slot filled
	l.ori   	r6,r1,0	 # move reg to reg
	l.sfltsi	r11,0
	l.bf	.L14877	# delay slot filled
	l.add   	r3,r11,r11
	l.lwz   	r5,8(r16)	 # SI load
	l.add   	r11,r3,r11
	l.lwz   	r4,0(r1)	 # SI load
	l.slli  	r11,r11,3
	l.ori   	r3,r16,0	 # move reg to reg
	l.add   	r11,r5,r11
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.lwz   	r20,0(r11)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L14877	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r18,0	 # move reg to reg
.L14887:
	l.jal   	sqlite3LocateTable
	l.nop			# nop delay slot
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.sfeqi	r18,0
	l.bf	.L14877	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	analyzeTable	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.j     	.L14889	# delay slot filled
	l.addi	r1,r1,32
.L14883:
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14877	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r11,0	 # move reg to reg
	l.ori   	r6,r22,0	 # move reg to reg
	l.j     	.L14887	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L14888:
	l.lwz   	r5,4(r16)	 # SI load
	l.sflesi	r5,0
	l.bf	.L14877
	l.nop			# nop delay slot
.L14881:
	l.ori   	r4,r14,0	 # move reg to reg
	l.sfeqi	r14,1
	l.ori   	r3,r2,0	 # move reg to reg
	l.bf	.L14880	# delay slot filled
	l.addi  	r14,r14,1
	l.jal   	analyzeDatabase
	l.nop			# nop delay slot
	l.lwz   	r5,4(r16)	 # SI load
.L14880:
	l.sfgts 	r5,r14
	l.bf	.L14881
	l.nop			# nop delay slot
	l.j     	.L14889	# delay slot filled
	l.addi	r1,r1,32
.LFE825:
	.size	sqlite3Analyze, .-sqlite3Analyze
	.section	.rodata.str1.1
.LC484:
	.string	"there is already another table or index with this name: %s"
.LC485:
	.string	"table %s may not be altered"
.LC486:
	.string	"view %s may not be altered"
.LC487:
	.ascii	"UPDATE %Q.%s SET sql = CASE WHEN type = 'trigger' THEN sqlit"
	.ascii	"e_rename_trigger(sql, %Q)ELSE sqlite_rename_table(sq"
	.string	"l, %Q) END, tbl_name = %Q, name = CASE WHEN type='table' THEN %Q WHEN name LIKE 'sqlite_autoindex%%' AND type='index' THEN 'sqlite_autoindex_' || %Q || substr(name,%d+18) ELSE name END WHERE tbl_name=%Q AND (type='table' OR type='index' OR type='trigger');"
.LC488:
	.string	"UPDATE \"%w\".sqlite_sequence set name = %Q WHERE name = %Q"
.LC489:
	.string	"UPDATE sqlite_temp_master SET sql = sqlite_rename_trigger(sql, %Q), tbl_name = %Q WHERE %s;"
	.section .text
	.align	4
.proc	sqlite3AlterRenameTable
	.type	sqlite3AlterRenameTable, @function
sqlite3AlterRenameTable:
.LFB817:
	l.sw    	-36(r1),r14	 # SI store
.LCFI4263:
	l.sw    	-32(r1),r16	 # SI store
.LCFI4264:
	l.sw    	-28(r1),r18	 # SI store
.LCFI4265:
	l.sw    	-24(r1),r20	 # SI store
.LCFI4266:
	l.sw    	-16(r1),r24	 # SI store
.LCFI4267:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4268:
	l.sw    	-40(r1),r2	 # SI store
.LCFI4269:
	l.sw    	-20(r1),r22	 # SI store
.LCFI4270:
	l.sw    	-12(r1),r26	 # SI store
.LCFI4271:
	l.sw    	-8(r1),r28	 # SI store
.LCFI4272:
	l.lwz   	r14,0(r3)	 # SI load
	l.addi  	r16,r0,0	 # move immediate I
	l.lbz   	r2,30(r14)	 # zero_extendqisi2
	l.addi  	r1,r1,-76
.LCFI4273:
	l.ori   	r18,r3,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.sfne 	r2,r16
	l.bnf	.L14915	# delay slot filled
	l.ori   	r24,r5,0	 # move reg to reg
.L14891:
	l.ori   	r3,r14,0	 # move reg to reg
.L14920:
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi	r1,r1,76
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r28,-8(r1)	 # SI load
.L14915:
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r5,8(r20)	 # SI load
	l.jal   	sqlite3LocateTable	# delay slot filled
	l.lwz   	r6,4(r20)	 # SI load
	l.ori   	r22,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14891	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r12,72(r11)	 # SI load
	l.sfeqi	r12,0
	l.bf	.L14908	# delay slot filled
	l.lwz   	r3,0(r18)	 # SI load
	l.lwz   	r11,4(r3)	 # SI load
	l.sflesi	r11,0
	l.bf	.L14892	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
	l.lwz   	r6,8(r3)	 # SI load
	l.lwz   	r3,20(r6)	 # SI load
	l.sfeq 	r12,r3
	l.bf	.L14910	# delay slot filled
	l.addi  	r6,r6,44
	l.j     	.L14893	# delay slot filled
	l.addi  	r7,r0,24	 # move immediate I
.L14894:
	l.lwz   	r8,0(r6)	 # SI load
	l.sfeq 	r12,r8
	l.bf	.L14892	# delay slot filled
	l.addi  	r6,r6,24
	l.ori   	r7,r3,0	 # move reg to reg
.L14893:
	l.addi  	r2,r2,1
	l.sflts 	r2,r11
	l.bf	.L14894	# delay slot filled
	l.addi  	r3,r7,24
	l.add   	r7,r2,r2
	l.add   	r7,r7,r2
	l.slli  	r7,r7,3
.L14892:
	l.lwz   	r4,8(r14)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.add   	r7,r4,r7
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3NameFromToken	# delay slot filled
	l.lwz   	r24,0(r7)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L14891	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L14916	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.movhi  	r4,hi(.LC484)
.L14922:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC484)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r16	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3SrcListDelete	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi	r1,r1,76
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.j	sqlite3DbFree	# delay slot filled	# sibcall s
	l.lwz   	r28,-8(r1)	 # SI load
.L14916:
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	sqlite3FindIndex	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L14922	# delay slot filled
	l.movhi  	r4,hi(.LC484)
	l.lwz   	r26,4(r22)	 # SI load
	l.lbs   	r3,0(r26)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L14897	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r4,r4,1
.L14923:
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L14923	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
.L14897:
	l.sub   	r3,r4,r26
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.ori   	r4,r4,65535
	l.and   	r3,r3,r4
	l.sflesi	r3,6
	l.bf	.L14899	# delay slot filled
	l.movhi  	r4,hi(.LC49)
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC49)
	l.jal   	sqlite3StrNICmp	# delay slot filled
	l.addi  	r5,r0,7	 # move immediate I
	l.sfnei	r11,0
	l.bnf	.L14917	# delay slot filled
	l.movhi  	r4,hi(.LC485)
.L14899:
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3CheckObjectName	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14920	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r7,28(r22)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L14900	# delay slot filled
	l.movhi  	r4,hi(.LC486)
	l.lwz   	r2,4(r22)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC486)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.j     	.L14920	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L14908:
	l.movhi 	r7,hi(-24051712)	 # move immediate M
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.ori   	r7,r7,51712
	l.j     	.L14892	# delay slot filled
	l.ori   	r2,r2,48576
.L14910:
	l.j     	.L14892	# delay slot filled
	l.ori   	r7,r2,0	 # move reg to reg
.L14917:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC485)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r26	 # SI store
	l.j     	.L14920	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L14900:
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.lwz   	r6,4(r22)	 # SI load
	l.sfnei	r11,0
	l.bf	.L14920	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3ViewGetColumnNames	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L14920	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.lbz   	r26,34(r22)	 # zero_extendqisi2
	l.andi  	r26,r26,16
	l.sfeqi	r26,0
	l.bf	.L14901
	l.nop			# nop delay slot
	l.lwz   	r3,52(r22)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r3,76(r3)	 # SI load
	l.sub   	r4,r0,r3
	l.or    	r3,r3,r4
	l.srli  	r26,r3,31
.L14901:
	l.lwz   	r3,0(r18)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r18,12
	l.sfeqi	r11,0
	l.bf	.L14891	# delay slot filled
	l.ori   	r28,r11,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3BeginWriteOperation	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3ChangeCookie	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.sfeqi	r26,0
	l.bnf	.L14918	# delay slot filled
	l.ori   	r3,r28,0	 # move reg to reg
	l.lwz   	r26,4(r22)	 # SI load
.L14921:
	l.addi  	r4,r0,-1	 # move immediate I
	l.jal   	sqlite3Utf8CharLen	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.movhi  	r5,hi(.LC199)
	l.sfnei	r2,1
	l.bnf	.L14919	# delay slot filled
	l.ori   	r5,r5,lo(.LC199)
.L14903:
	l.movhi  	r4,hi(.LC487)
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC487)
	l.sw    	4(r1),r5	 # SI store
	l.sw    	28(r1),r11	 # SI store
	l.sw    	0(r1),r24	 # SI store
	l.sw    	8(r1),r16	 # SI store
	l.sw    	12(r1),r16	 # SI store
	l.sw    	16(r1),r16	 # SI store
	l.sw    	20(r1),r16	 # SI store
	l.sw    	24(r1),r16	 # SI store
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	32(r1),r26	 # SI store
	l.movhi  	r4,hi(.LC330)
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC330)
	l.jal   	sqlite3FindTable	# delay slot filled
	l.ori   	r5,r24,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14904	# delay slot filled
	l.movhi  	r4,hi(.LC488)
	l.sw    	0(r1),r24	 # SI store
	l.sw    	4(r1),r16	 # SI store
	l.lwz   	r2,4(r22)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC488)
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
.L14904:
	l.lwz   	r3,0(r18)	 # SI load
	l.jal   	whereTempTriggers.clone.112	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14905	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC489)
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC489)
	l.sw    	0(r1),r16	 # SI store
	l.sw    	4(r1),r16	 # SI store
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	8(r1),r11	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
.L14905:
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	reloadTableSchema	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.j     	.L14920	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
.L14919:
	l.movhi  	r5,hi(.LC198)
	l.j     	.L14903	# delay slot filled
	l.ori   	r5,r5,lo(.LC198)
.L14918:
	l.lwz   	r26,72(r18)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.addi  	r26,r26,1
	l.ori   	r7,r5,0	 # move reg to reg
	l.ori   	r6,r26,0	 # move reg to reg
	l.ori   	r8,r16,0	 # move reg to reg
	l.sw    	72(r18),r26	 # SI store
	l.addi  	r4,r0,94	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r8,56(r22)	 # SI load
	l.ori   	r3,r28,0	 # move reg to reg
	l.addi  	r4,r0,30	 # move immediate I
	l.ori   	r5,r26,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.addi  	r11,r0,-10	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.j     	.L14921	# delay slot filled
	l.lwz   	r26,4(r22)	 # SI load
.LFE817:
	.size	sqlite3AlterRenameTable, .-sqlite3AlterRenameTable
	.section	.rodata.str1.1
.LC490:
	.string	"Cannot add a PRIMARY KEY column"
.LC491:
	.string	"Cannot add a UNIQUE column"
.LC492:
	.string	"Cannot add a NOT NULL column with default value NULL"
.LC493:
	.string	"Cannot add a column with non-constant default"
.LC494:
	.string	"UPDATE \"%w\".%s SET sql = substr(sql,1,%d) || ', ' || %Q || substr(sql,%d) WHERE type = 'table' AND name = %Q"
	.section .text
	.align	4
.proc	sqlite3AlterFinishAddColumn
	.type	sqlite3AlterFinishAddColumn, @function
sqlite3AlterFinishAddColumn:
.LFB818:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4274:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4275:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4276:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4277:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4278:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4279:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4280:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4281:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4282:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4283:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4284:
	l.lwz   	r2,64(r3)	 # SI load
	l.addi  	r1,r1,-72
.LCFI4285:
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r20,r4,0	 # move reg to reg
	l.sfnei	r2,0
	l.bf	.L14924	# delay slot filled
	l.lwz   	r16,0(r3)	 # SI load
	l.lbz   	r2,30(r16)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L14924
	l.nop			# nop delay slot
	l.lwz   	r18,476(r3)	 # SI load
	l.lwz   	r7,72(r18)	 # SI load
	l.sfnei	r7,0
	l.bnf	.L14957
	l.nop			# nop delay slot
	l.lwz   	r3,4(r16)	 # SI load
	l.sfgtsi	r3,0
	l.bnf	.L14958
	l.nop			# nop delay slot
	l.lwz   	r4,8(r16)	 # SI load
	l.lwz   	r5,20(r4)	 # SI load
	l.sfeq 	r7,r5
	l.bf	.L14927	# delay slot filled
	l.ori   	r8,r4,0	 # move reg to reg
	l.j     	.L14929	# delay slot filled
	l.addi  	r5,r4,24
.L14930:
	l.lwz   	r6,20(r5)	 # SI load
	l.sfeq 	r7,r6
	l.bf	.L14927	# delay slot filled
	l.addi  	r5,r5,24
.L14929:
	l.addi  	r2,r2,1
	l.sflts 	r2,r3
	l.bf	.L14930	# delay slot filled
	l.ori   	r8,r5,0	 # move reg to reg
	l.add   	r8,r2,r2
	l.add   	r8,r8,r2
	l.slli  	r8,r8,3
	l.add   	r8,r4,r8
.L14927:
	l.lwz   	r3,12(r18)	 # SI load
	l.lwz   	r30,4(r18)	 # SI load
	l.addi  	r3,r3,-1
	l.lwz   	r24,0(r8)	 # SI load
	l.slli  	r26,r3,2
	l.slli  	r3,r3,4
	l.addi  	r30,r30,16
	l.lwz   	r6,16(r18)	 # SI load
	l.add   	r26,r26,r3
	l.ori   	r4,r30,0	 # move reg to reg
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3FindTable	# delay slot filled
	l.add   	r26,r6,r26
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,26	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.lwz   	r6,4(r11)	 # SI load
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r28,r11,0	 # move reg to reg
	l.jal   	sqlite3AuthCheck	# delay slot filled
	l.lwz   	r22,4(r26)	 # SI load
	l.sfnei	r11,0
	l.bf	.L14924	# delay slot filled
	l.sfeqi	r22,0
	l.bf	.L14931
	l.nop			# nop delay slot
	l.lbz   	r4,0(r22)	 # zero_extendqisi2
	l.sfeqi	r4,98
	l.bnf	.L14931
	l.nop			# nop delay slot
	l.ori   	r22,r11,0	 # move reg to reg
.L14931:
	l.lbz   	r3,17(r26)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L14959	# delay slot filled
	l.movhi  	r4,hi(.LC490)
	l.lwz   	r3,20(r18)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14933	# delay slot filled
	l.movhi  	r4,hi(.LC491)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC491)
.L14924:
	l.addi	r1,r1,72
.L14965:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L14933:
	l.sub   	r3,r0,r22
	l.or    	r3,r22,r3
	l.sfltsi	r3,0
	l.bnf	.L14960	# delay slot filled
	l.sfeqi	r22,0
.L14967:
	l.bf	.L14935	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r6,r0,98	 # move immediate I
	l.jal   	sqlite3ValueFromExpr	# delay slot filled
	l.addi  	r7,r1,24
	l.sfeqi	r11,0
	l.bnf	.L14961	# delay slot filled
	l.lwz   	r3,24(r1)	 # SI load
	l.sfnei	r3,0
	l.bnf	.L14962	# delay slot filled
	l.movhi  	r4,hi(.LC493)
	l.jal   	sqlite3ValueFree
	l.nop			# nop delay slot
.L14935:
	l.movhi 	r6,hi(1073676288)	 # move immediate M
	l.lwz   	r5,4(r20)	 # SI load
	l.ori   	r6,r6,65535
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r4,0(r20)	 # SI load
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.and   	r5,r5,r6
	l.sfeqi	r11,0
	l.bf	.L14938	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.lwz   	r3,4(r20)	 # SI load
	l.ori   	r4,r4,65535
	l.and   	r3,r3,r4
	l.addi  	r3,r3,-1
	l.add   	r3,r11,r3
	l.sfltu 	r11,r3
	l.bnf	.L14966	# delay slot filled
	l.movhi  	r5,hi(.LC199)
.L14955:
	l.lbs   	r5,0(r3)	 # extendqisi2_no_sext_mem
	l.movhi  	r6,hi(sqlite3CtypeMap)
	l.andi  	r4,r5,0xff	 # zero_extendqisi2
	l.ori   	r6,r6,lo(sqlite3CtypeMap)
	l.sfeqi	r5,59
	l.bf	.L14942	# delay slot filled
	l.add   	r4,r4,r6
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.andi  	r4,r4,1
	l.sfnei	r4,0
	l.bnf	.L14966	# delay slot filled
	l.movhi  	r5,hi(.LC199)
.L14942:
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.sb    	0(r3),r5	    # movqi
	l.addi  	r3,r3,-1
	l.sfltu 	r26,r3
	l.bf	.L14955	# delay slot filled
	l.movhi  	r5,hi(.LC199)
.L14966:
	l.sfnei	r2,1
	l.bnf	.L14963	# delay slot filled
	l.ori   	r5,r5,lo(.LC199)
.L14943:
	l.lwz   	r7,48(r18)	 # SI load
	l.movhi  	r4,hi(.LC494)
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r6,r7,1
	l.ori   	r4,r4,lo(.LC494)
	l.sw    	0(r1),r24	 # SI store
	l.sw    	4(r1),r5	 # SI store
	l.sw    	8(r1),r7	 # SI store
	l.sw    	12(r1),r26	 # SI store
	l.sw    	16(r1),r6	 # SI store
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	20(r1),r30	 # SI store
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
.L14938:
	l.sfeqi	r22,0
	l.bf	.L14944	# delay slot filled
	l.addi  	r24,r0,2	 # move immediate I
	l.addi  	r24,r0,3	 # move immediate I
.L14944:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r14,12
	l.sfeqi	r11,0
	l.bf	.L14945	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lbz   	r3,21(r14)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L14946	# delay slot filled
	l.addi  	r3,r3,-1
	l.lwz   	r18,72(r14)	 # SI load
	l.addi  	r20,r18,1
	l.ori   	r18,r20,0	 # move reg to reg
	l.sw    	72(r14),r20	 # SI store
.L14947:
	l.addi  	r18,r18,1
	l.sw    	72(r14),r18	 # SI store
.L14949:
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,112	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r6,r20,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r4,r0,1	 # move immediate I
	l.lwz   	r3,144(r16)	 # SI load
	l.sll   	r4,r4,r2
	l.and   	r5,r4,r3
	l.sfnei	r5,0
	l.bf	.L14950	# delay slot filled
	l.or    	r3,r4,r3
	l.sw    	144(r16),r3	 # SI store
.L14950:
	l.addi  	r4,r0,48	 # move immediate I
	l.ori   	r5,r24,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,78	 # move immediate I
	l.ori   	r5,r18,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r7,r20,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.ori   	r7,r18,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,4	 # move immediate I
	l.jal   	sqlite3VdbeAddOp3	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeJumpHere	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ReleaseTempReg	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
.L14945:
	l.ori   	r4,r28,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	reloadTableSchema	# delay slot filled
	l.lwz   	r5,4(r28)	 # SI load
	l.j     	.L14965	# delay slot filled
	l.addi	r1,r1,72
.L14957:
	l.movhi 	r2,hi(-24051712)	 # move immediate M
	l.lwz   	r8,8(r16)	 # SI load
	l.ori   	r2,r2,51712
	l.add   	r8,r8,r2
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.j     	.L14927	# delay slot filled
	l.ori   	r2,r2,48576
.L14959:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC490)
	l.j     	.L14965	# delay slot filled
	l.addi	r1,r1,72
.L14961:
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.j     	.L14924	# delay slot filled
	l.sb    	30(r16),r4	    # movqi
.L14946:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r14),r3	    # movqi
	l.slli  	r4,r4,2
	l.sfnei	r3,0
	l.add   	r4,r14,r4
	l.bnf	.L14964	# delay slot filled
	l.lwz   	r20,0(r4)	 # SI load
	l.addi  	r3,r3,-1
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.addi  	r4,r3,6
	l.sb    	21(r14),r3	    # movqi
	l.slli  	r3,r4,2
	l.add   	r3,r14,r3
	l.j     	.L14949	# delay slot filled
	l.lwz   	r18,0(r3)	 # SI load
.L14960:
	l.lbz   	r3,16(r26)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L14967	# delay slot filled
	l.sfeqi	r22,0
	l.movhi  	r4,hi(.LC492)
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC492)
	l.j     	.L14965	# delay slot filled
	l.addi	r1,r1,72
.L14958:
	l.j     	.L14927	# delay slot filled
	l.lwz   	r8,8(r16)	 # SI load
.L14963:
	l.movhi  	r5,hi(.LC198)
	l.j     	.L14943	# delay slot filled
	l.ori   	r5,r5,lo(.LC198)
.L14962:
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.ori   	r4,r4,lo(.LC493)
	l.j     	.L14965	# delay slot filled
	l.addi	r1,r1,72
.L14964:
	l.j     	.L14947	# delay slot filled
	l.lwz   	r18,72(r14)	 # SI load
.LFE818:
	.size	sqlite3AlterFinishAddColumn, .-sqlite3AlterFinishAddColumn
	.section	.rodata.str1.1
.LC495:
	.string	"CREATE VIRTUAL TABLE %T"
.LC496:
	.string	"UPDATE %Q.%s SET type='table', name=%Q, tbl_name=%Q, rootpage=0, sql=%Q WHERE rowid=#%d"
	.section .text
	.align	4
.proc	sqlite3VtabFinishParse
	.type	sqlite3VtabFinishParse, @function
sqlite3VtabFinishParse:
.LFB1111:
	l.sw    	-24(r1),r2	 # SI store
.LCFI4286:
	l.sw    	-20(r1),r14	 # SI store
.LCFI4287:
	l.sw    	-16(r1),r16	 # SI store
.LCFI4288:
	l.sw    	-8(r1),r20	 # SI store
.LCFI4289:
	l.ori   	r16,r3,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI4290:
	l.sw    	-12(r1),r18	 # SI store
.LCFI4291:
	l.addi  	r2,r0,0	 # move immediate I
	l.addi  	r1,r1,-48
.LCFI4292:
	l.jal   	addArgumentToVtab	# delay slot filled
	l.ori   	r20,r4,0	 # move reg to reg
	l.lwz   	r14,476(r16)	 # SI load
	l.sfeq 	r14,r2
	l.bf	.L14968	# delay slot filled
	l.sw    	492(r16),r2	 # SI store
	l.lwz   	r2,60(r14)	 # SI load
	l.sflesi	r2,0
	l.bf	.L14968	# delay slot filled
	l.lwz   	r18,0(r16)	 # SI load
	l.lwz   	r2,64(r14)	 # SI load
	l.lwz   	r6,0(r2)	 # SI load
	l.lbs   	r5,0(r6)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L14970	# delay slot filled
	l.addi  	r3,r18,268
	l.ori   	r5,r6,0	 # move reg to reg
	l.addi  	r5,r5,1
.L14994:
	l.lbs   	r2,0(r5)	 # extendqisi2_no_sext_mem
	l.sfnei	r2,0
	l.bf	.L14994	# delay slot filled
	l.addi  	r5,r5,1
	l.addi  	r5,r5,-1
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.sub   	r5,r5,r6
	l.ori   	r4,r4,65535
	l.and   	r5,r5,r4
.L14970:
	l.jal   	sqlite3HashFind	# delay slot filled
	l.ori   	r4,r6,0	 # move reg to reg
	l.sw    	52(r14),r11	 # SI store
	l.lbz   	r2,128(r18)	 # zero_extendqisi2
	l.sfnei	r2,0
	l.bf	.L14972	# delay slot filled
	l.sfeqi	r20,0
	l.bf	.L14973	# delay slot filled
	l.movhi 	r2,hi(1073676288)	 # move immediate M
	l.lwz   	r3,4(r20)	 # SI load
	l.ori   	r2,r2,65535
	l.lwz   	r4,0(r20)	 # SI load
	l.and   	r3,r3,r2
	l.lwz   	r2,452(r16)	 # SI load
	l.add   	r4,r4,r3
	l.lwz   	r3,456(r16)	 # SI load
	l.sub   	r2,r4,r2
	l.movhi 	r4,hi(-1073741824)	 # move immediate M
	l.and   	r3,r3,r4
	l.movhi 	r4,hi(1073676288)	 # move immediate M
	l.ori   	r4,r4,65535
	l.and   	r2,r2,r4
	l.or    	r2,r3,r2
	l.sw    	456(r16),r2	 # SI store
.L14973:
	l.movhi  	r4,hi(.LC495)
	l.ori   	r3,r18,0	 # move reg to reg
	l.addi  	r2,r16,452
	l.ori   	r4,r4,lo(.LC495)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r3,72(r14)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L14974	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.lwz   	r7,4(r18)	 # SI load
	l.sflesi	r7,0
	l.bf	.L14975
	l.nop			# nop delay slot
	l.lwz   	r12,8(r18)	 # SI load
	l.lwz   	r2,20(r12)	 # SI load
	l.sfeq 	r3,r2
	l.bf	.L14976
	l.nop			# nop delay slot
	l.addi  	r5,r12,24
	l.j     	.L14977	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L14979:
	l.lwz   	r6,20(r5)	 # SI load
	l.sfeq 	r3,r6
	l.bf	.L14978	# delay slot filled
	l.addi  	r5,r5,24
.L14977:
	l.addi  	r2,r2,1
	l.sflts 	r2,r7
	l.bf	.L14979	# delay slot filled
	l.ori   	r8,r5,0	 # move reg to reg
	l.add   	r8,r2,r2
	l.add   	r8,r8,r2
	l.slli  	r8,r8,3
	l.add   	r8,r12,r8
.L14978:
	l.movhi  	r5,hi(.LC199)
	l.lwz   	r7,0(r8)	 # SI load
	l.sfnei	r2,1
	l.bnf	.L14993	# delay slot filled
	l.ori   	r5,r5,lo(.LC199)
.L14980:
	l.movhi  	r4,hi(.LC496)
	l.lwz   	r8,404(r16)	 # SI load
	l.lwz   	r6,4(r14)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC496)
	l.sw    	0(r1),r7	 # SI store
	l.sw    	20(r1),r8	 # SI store
	l.sw    	4(r1),r5	 # SI store
	l.sw    	8(r1),r6	 # SI store
	l.sw    	12(r1),r6	 # SI store
	l.jal   	sqlite3NestedParse	# delay slot filled
	l.sw    	16(r1),r20	 # SI store
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.lwz   	r3,0(r16)	 # SI load
	l.jal   	sqlite3GetVdbe.clone.136	# delay slot filled
	l.addi  	r4,r16,12
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3ChangeCookie	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp2	# delay slot filled
	l.addi  	r4,r0,14	 # move immediate I
	l.movhi  	r4,hi(.LC478)
	l.lwz   	r5,4(r14)	 # SI load
	l.ori   	r3,r18,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC478)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r5	 # SI store
	l.ori   	r3,r20,0	 # move reg to reg
	l.ori   	r8,r11,0	 # move reg to reg
	l.addi  	r4,r0,31	 # move immediate I
	l.addi  	r11,r0,-1	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.lwz   	r8,4(r14)	 # SI load
	l.lbs   	r3,0(r8)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L14981	# delay slot filled
	l.addi  	r11,r0,1	 # move immediate I
	l.ori   	r4,r8,0	 # move reg to reg
	l.addi  	r4,r4,1
.L14995:
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r5,0
	l.bf	.L14995	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r11,r4,r8
	l.ori   	r3,r3,65535
	l.and   	r11,r11,r3
	l.addi  	r11,r11,1
.L14981:
	l.addi  	r6,r0,0	 # move immediate I
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r4,r0,127	 # move immediate I
	l.ori   	r5,r2,0	 # move reg to reg
	l.ori   	r7,r6,0	 # move reg to reg
	l.jal   	sqlite3VdbeAddOp4	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
.L14968:
	l.addi	r1,r1,48
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L14972:
	l.lwz   	r4,4(r14)	 # SI load
	l.lbs   	r5,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r5,0
	l.bf	.L14983	# delay slot filled
	l.lwz   	r20,72(r14)	 # SI load
	l.ori   	r2,r4,0	 # move reg to reg
	l.addi  	r2,r2,1
.L14996:
	l.lbs   	r3,0(r2)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L14996	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.movhi 	r3,hi(1073676288)	 # move immediate M
	l.sub   	r2,r2,r4
	l.ori   	r3,r3,65535
	l.and   	r5,r2,r3
.L14983:
	l.addi  	r3,r20,4
	l.jal   	sqlite3HashInsert	# delay slot filled
	l.ori   	r6,r14,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L14985	# delay slot filled
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.sb    	30(r18),r4	    # movqi
	l.addi	r1,r1,48
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-24(r1)	 # SI load
	l.lwz   	r14,-20(r1)	 # SI load
	l.lwz   	r16,-16(r1)	 # SI load
	l.lwz   	r18,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r20,-8(r1)	 # SI load
.L14993:
	l.movhi  	r5,hi(.LC198)
	l.j     	.L14980	# delay slot filled
	l.ori   	r5,r5,lo(.LC198)
.L14985:
	l.lwz   	r2,0(r16)	 # SI load
	l.sw    	64(r20),r2	 # SI store
	l.j     	.L14968	# delay slot filled
	l.sw    	476(r16),r11	 # SI store
.L14974:
	l.movhi 	r2,hi(-24051712)	 # move immediate M
	l.lwz   	r3,8(r18)	 # SI load
	l.ori   	r2,r2,51712
	l.movhi  	r5,hi(.LC199)
	l.add   	r3,r3,r2
	l.movhi 	r2,hi(-1048576)	 # move immediate M
	l.lwz   	r7,0(r3)	 # SI load
	l.ori   	r2,r2,48576
	l.j     	.L14980	# delay slot filled
	l.ori   	r5,r5,lo(.LC199)
.L14975:
	l.lwz   	r12,8(r18)	 # SI load
.L14976:
	l.movhi  	r5,hi(.LC199)
	l.lwz   	r7,0(r12)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L14980	# delay slot filled
	l.ori   	r5,r5,lo(.LC199)
.LFE1111:
	.size	sqlite3VtabFinishParse, .-sqlite3VtabFinishParse
	.section	.rodata.str1.1
.LC497:
	.string	"database schema is locked: %s"
.LC498:
	.string	"statement too long"
.LC499:
	.string	"order"
.LC500:
	.string	"detail"
.LC501:
	.string	"addr"
.LC502:
	.string	"opcode"
.LC503:
	.string	"p1"
.LC504:
	.string	"p2"
.LC505:
	.string	"p3"
.LC506:
	.string	"p4"
.LC507:
	.string	"p5"
.LC508:
	.string	"comment"
	.section .text
	.align	4
.proc	sqlite3Prepare
	.type	sqlite3Prepare, @function
sqlite3Prepare:
.LFB1017:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4293:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4294:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4295:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4296:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4297:
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	-4(r1),r9	 # SI store
.LCFI4298:
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	-40(r1),r14	 # SI store
.LCFI4299:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4300:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4301:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4302:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4303:
	l.addi  	r1,r1,-580
.LCFI4304:
	l.lwz   	r12,4(r2)	 # SI load
	l.sw    	532(r1),r3	 # SI store
	l.sw    	4(r1),r7	 # SI store
	l.ori   	r24,r4,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r30,r6,0	 # move reg to reg
	l.sfles 	r12,r3
	l.bf	.L14998	# delay slot filled
	l.ori   	r28,r8,0	 # move reg to reg
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r16,r3,0	 # move reg to reg
.L15001:
	l.lwz   	r3,8(r2)	 # SI load
	l.addi  	r4,r0,1	 # move immediate I
	l.add   	r3,r3,r14
	l.ori   	r5,r4,0	 # move reg to reg
	l.lwz   	r11,4(r3)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L14999	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r12,4(r11)	 # SI load
	l.lwz   	r11,0(r11)	 # SI load
	l.jal   	querySharedCacheTableLock	# delay slot filled
	l.sw    	4(r12),r11	 # SI store
	l.sfeqi	r11,0
	l.bnf	.L15037	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lwz   	r12,4(r2)	 # SI load
.L14999:
	l.addi  	r16,r16,1
	l.sfgts 	r12,r16
	l.bf	.L15001	# delay slot filled
	l.addi  	r14,r14,24
.L14998:
	l.addi  	r14,r1,8
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,520	 # move immediate I
	l.sfltsi	r20,0
	l.bf	.L15002	# delay slot filled
	l.sw    	8(r1),r2	 # SI store
	l.sfeqi	r20,0
	l.bnf	.L15039	# delay slot filled
	l.add   	r3,r24,r20
.L15003:
	l.lwz   	r3,84(r2)	 # SI load
	l.sfles 	r20,r3
	l.bnf	.L15040	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.ori   	r5,r20,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L15005	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.addi  	r5,r1,532
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3RunParser	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,480(r1)	 # SI load
	l.sub   	r3,r3,r16
	l.add   	r3,r24,r3
	l.sw    	480(r1),r3	 # SI store
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L15041	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
.L15054:
	l.sfnei	r4,101
	l.bf	.L15008
	l.nop			# nop delay slot
	l.sw    	12(r1),r3	 # SI store
	l.lbz   	r3,26(r1)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L15051	# delay slot filled
	l.lwz   	r3,12(r1)	 # SI load
.L15043:
	l.jal   	sqlite3Malloc	# delay slot filled
	l.addi  	r3,r0,212	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L15010	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.addi  	r18,r0,0	 # move immediate I
	l.addi  	r26,r0,1	 # move immediate I
	l.j     	.L15011	# delay slot filled
	l.ori   	r20,r18,0	 # move reg to reg
.L15013:
	l.xori  	r3,r16,3082
.L15045:
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfgesi	r3,0
	l.bf	.L15052	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.xori  	r16,r16,7
	l.sub   	r3,r0,r16
	l.or    	r16,r3,r16
	l.sfltsi	r16,0
	l.bf	.L15053	# delay slot filled
	l.sfeqi	r26,0
	l.addi  	r3,r0,1	 # movqi: move immediate
.L15052:
	l.sb    	30(r2),r3	    # movqi
.L15012:
	l.sfeqi	r26,0
.L15053:
	l.bf	.L15016	# delay slot filled
	l.addi  	r18,r18,24
	l.addi  	r20,r20,1
.L15011:
	l.lwz   	r3,4(r2)	 # SI load
	l.sfgts 	r3,r20
	l.bnf	.L15042
	l.nop			# nop delay slot
	l.lwz   	r3,8(r2)	 # SI load
	l.add   	r3,r3,r18
	l.lwz   	r14,4(r3)	 # SI load
	l.sfeqi	r14,0
	l.bf	.L15012	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.addi  	r5,r0,212	 # move immediate I
	l.lwz   	r4,4(r14)	 # SI load
	l.lwz   	r6,0(r14)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	4(r4),r6	 # SI store
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r6,r5,0	 # move reg to reg
	l.jal   	btreeCursor	# delay slot filled
	l.ori   	r7,r22,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L15013	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	sqlite3BtreeGetMeta	# delay slot filled
	l.addi  	r5,r1,528
	l.sfnei	r11,0
	l.bf	.L15014	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r4,528(r1)	 # SI load
	l.add   	r3,r3,r18
	l.lwz   	r3,20(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.sfne 	r3,r4
	l.bnf	.L15014
	l.nop			# nop delay slot
	l.ori   	r26,r11,0	 # move reg to reg
.L15014:
	l.jal   	sqlite3BtreeCloseCursor	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.j     	.L15045	# delay slot filled
	l.xori  	r3,r16,3082
.L15039:
	l.lbs   	r3,-1(r3)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bnf	.L15003
	l.nop			# nop delay slot
.L15002:
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3RunParser	# delay slot filled
	l.addi  	r5,r1,532
.L15006:
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L15054	# delay slot filled
	l.lwz   	r4,12(r1)	 # SI load
.L15041:
	l.addi  	r3,r0,7	 # move immediate I
	l.sw    	12(r1),r3	 # SI store
.L15008:
	l.lbz   	r3,26(r1)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L15043
	l.nop			# nop delay slot
.L15009:
	l.lwz   	r3,12(r1)	 # SI load
.L15051:
	l.sfnei	r3,17
	l.bnf	.L15055	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
.L15049:
	l.sfnei	r3,0
	l.bf	.L15021	# delay slot filled
	l.addi  	r14,r0,7	 # move immediate I
	l.lwz   	r14,12(r1)	 # SI load
.L15022:
	l.sfeqi	r28,0
	l.bf	.L15023	# delay slot filled
	l.lwz   	r3,480(r1)	 # SI load
	l.sw    	0(r28),r3	 # SI store
.L15023:
	l.sfeqi	r14,0
	l.bnf	.L15025	# delay slot filled
	l.lwz   	r16,20(r1)	 # SI load
	l.sfeqi	r16,0
	l.bf	.L15025
	l.nop			# nop delay slot
	l.lbz   	r18,448(r1)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bf	.L15025	# delay slot filled
	l.sfnei	r18,2
	l.bnf	.L15044	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,8	 # move immediate I
	l.movhi  	r6,hi(.LC501)
	l.lwz   	r3,20(r1)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC501)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.movhi  	r6,hi(.LC502)
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC502)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.movhi  	r6,hi(.LC503)
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,2	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC503)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.movhi  	r6,hi(.LC504)
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,3	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC504)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.movhi  	r6,hi(.LC505)
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,4	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC505)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.movhi  	r6,hi(.LC506)
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,5	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC506)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.movhi  	r6,hi(.LC507)
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,6	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC507)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.movhi  	r6,hi(.LC508)
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,7	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC508)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.lwz   	r16,20(r1)	 # SI load
.L15025:
	l.lbz   	r3,128(r2)	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L15056	# delay slot filled
	l.sfeqi	r16,0
	l.bf	.L15028	# delay slot filled
	l.lwz   	r5,480(r1)	 # SI load
	l.lwz   	r3,0(r16)	 # SI load
	l.ori   	r4,r24,0	 # move reg to reg
	l.jal   	sqlite3DbStrNDup	# delay slot filled
	l.sub   	r5,r5,r24
	l.sub   	r3,r0,r30
	l.sw    	204(r16),r11	 # SI store
	l.or    	r3,r3,r30
	l.srli  	r3,r3,31
	l.sb    	131(r16),r3	    # movqi
	l.lwz   	r16,20(r1)	 # SI load
	l.sfeqi	r16,0
.L15056:
	l.bf	.L15028	# delay slot filled
	l.sfnei	r14,0
	l.bf	.L15029
	l.nop			# nop delay slot
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bnf	.L15029
	l.nop			# nop delay slot
.L15028:
	l.lwz   	r3,4(r1)	 # SI load
	l.sw    	0(r3),r16	 # SI store
	l.lwz   	r6,532(r1)	 # SI load
.L15047:
	l.sfeqi	r6,0
	l.bf	.L15031	# delay slot filled
	l.movhi  	r5,hi(.LC78)
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3Error	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,532(r1)	 # SI load
	l.ori   	r3,r2,0	 # move reg to reg
.L15048:
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi	r1,r1,580
.L15046:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L15037:
	l.lwz   	r3,8(r2)	 # SI load
	l.movhi  	r5,hi(.LC497)
	l.add   	r14,r3,r14
	l.ori   	r5,r5,lo(.LC497)
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r6,0(r14)	 # SI load
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
	l.j     	.L15046	# delay slot filled
	l.addi	r1,r1,580
.L15029:
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.j     	.L15047	# delay slot filled
	l.lwz   	r6,532(r1)	 # SI load
.L15021:
	l.j     	.L15022	# delay slot filled
	l.sw    	12(r1),r14	 # SI store
.L15005:
	l.add   	r20,r24,r20
	l.j     	.L15006	# delay slot filled
	l.sw    	480(r1),r20	 # SI store
.L15040:
	l.movhi  	r5,hi(.LC498)
	l.addi  	r4,r0,18	 # move immediate I
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r5,lo(.LC498)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.addi  	r4,r0,18	 # move immediate I
	l.j     	.L15046	# delay slot filled
	l.addi	r1,r1,580
.L15031:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r14,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r6,0	 # move reg to reg
	l.j     	.L15048	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
.L15016:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
.L15018:
	l.addi  	r3,r0,17	 # move immediate I
	l.sw    	12(r1),r3	 # SI store
.L15057:
	l.ori   	r3,r2,0	 # move reg to reg
.L15055:
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L15049	# delay slot filled
	l.lbz   	r3,30(r2)	 # zero_extendqisi2
.L15042:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r22,0	 # move reg to reg
	l.sfeqi	r26,0
	l.bnf	.L15009	# delay slot filled
	l.addi  	r3,r0,17	 # move immediate I
	l.j     	.L15057	# delay slot filled
	l.sw    	12(r1),r3	 # SI store
.L15044:
	l.jal   	sqlite3VdbeSetNumCols	# delay slot filled
	l.addi  	r4,r0,3	 # move immediate I
	l.movhi  	r6,hi(.LC499)
	l.lwz   	r3,20(r1)	 # SI load
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC499)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.movhi  	r6,hi(.LC389)
	l.lwz   	r3,20(r1)	 # SI load
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC389)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.movhi  	r6,hi(.LC500)
	l.lwz   	r3,20(r1)	 # SI load
	l.ori   	r4,r18,0	 # move reg to reg
	l.ori   	r5,r14,0	 # move reg to reg
	l.ori   	r6,r6,lo(.LC500)
	l.jal   	sqlite3VdbeSetColName	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.j     	.L15025	# delay slot filled
	l.lwz   	r16,20(r1)	 # SI load
.L15010:
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.j     	.L15018	# delay slot filled
	l.sb    	30(r2),r3	    # movqi
.LFE1017:
	.size	sqlite3Prepare, .-sqlite3Prepare
	.align	4
.proc	sqlite3LockAndPrepare
	.type	sqlite3LockAndPrepare, @function
sqlite3LockAndPrepare:
.LFB1018:
	l.sw    	-24(r1),r14	 # SI store
.LCFI4305:
	l.ori   	r14,r7,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.sw    	-28(r1),r2	 # SI store
.LCFI4306:
	l.sw    	-20(r1),r16	 # SI store
.LCFI4307:
	l.sw    	-16(r1),r18	 # SI store
.LCFI4308:
	l.sw    	-12(r1),r20	 # SI store
.LCFI4309:
	l.sw    	-8(r1),r22	 # SI store
.LCFI4310:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4311:
	l.sw    	0(r14),r7	 # SI store
	l.addi  	r1,r1,-28
.LCFI4312:
	l.ori   	r2,r3,0	 # move reg to reg
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r20,r5,0	 # move reg to reg
	l.ori   	r18,r6,0	 # move reg to reg
	l.sfeq 	r3,r7
	l.bf	.L15059	# delay slot filled
	l.ori   	r16,r8,0	 # move reg to reg
	l.movhi 	r5,hi(-1607925760)	 # move immediate M
	l.lwz   	r4,64(r3)	 # SI load
	l.ori   	r5,r5,42647
	l.sfeq 	r4,r5
	l.bf	.L15060
	l.nop			# nop delay slot
.L15059:
	l.addi	r1,r1,28
	l.addi  	r11,r0,21	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L15060:
	l.jal   	sqlite3BtreeEnterAll
	l.nop			# nop delay slot
	l.addi	r1,r1,28
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r8,r16,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.j	sqlite3Prepare	# delay slot filled	# sibcall s
	l.lwz   	r22,-8(r1)	 # SI load
.LFE1018:
	.size	sqlite3LockAndPrepare, .-sqlite3LockAndPrepare
	.align	4
.proc	sqlite3Prepare16
	.type	sqlite3Prepare16, @function
sqlite3Prepare16:
.LFB1022:
	l.sw    	-28(r1),r2	 # SI store
.LCFI4313:
	l.sw    	-24(r1),r14	 # SI store
.LCFI4314:
	l.sw    	-20(r1),r16	 # SI store
.LCFI4315:
	l.sw    	-16(r1),r18	 # SI store
.LCFI4316:
	l.sw    	-8(r1),r22	 # SI store
.LCFI4317:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4318:
	l.sw    	-12(r1),r20	 # SI store
.LCFI4319:
	l.ori   	r14,r7,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI4320:
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r2,r3,0	 # move reg to reg
	l.sw    	0(r1),r7	 # SI store
	l.sw    	0(r14),r7	 # SI store
	l.ori   	r22,r4,0	 # move reg to reg
	l.ori   	r18,r6,0	 # move reg to reg
	l.ori   	r16,r8,0	 # move reg to reg
	l.sfeq 	r3,r7
	l.bf	.L15063	# delay slot filled
	l.addi  	r11,r0,21	 # move immediate I
	l.movhi 	r7,hi(-1607925760)	 # move immediate M
	l.lwz   	r6,64(r3)	 # SI load
	l.ori   	r7,r7,42647
	l.sfne 	r6,r7
	l.bnf	.L15081
	l.nop			# nop delay slot
.L15063:
	l.addi	r1,r1,32
.L15084:
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L15081:
	l.jal   	sqlite3Utf16to8
	l.nop			# nop delay slot
	l.sfnei	r11,0
	l.bnf	.L15082	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.ori   	r7,r14,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r6,r18,0	 # move reg to reg
	l.jal   	sqlite3LockAndPrepare	# delay slot filled
	l.ori   	r8,r1,0	 # move reg to reg
	l.ori   	r14,r11,0	 # move reg to reg
.L15074:
	l.sub   	r3,r0,r16
	l.or    	r3,r16,r3
	l.sfgesi	r3,0
	l.bnf	.L15083	# delay slot filled
	l.lwz   	r5,0(r1)	 # SI load
.L15065:
	l.ori   	r3,r2,0	 # move reg to reg
.L15085:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.j     	.L15084	# delay slot filled
	l.addi	r1,r1,32
.L15082:
	l.j     	.L15074	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
.L15083:
	l.sub   	r3,r0,r5
	l.or    	r3,r5,r3
	l.sfgesi	r3,0
	l.bf	.L15085	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sub   	r4,r5,r20
	l.jal   	sqlite3Utf8CharLen	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.movhi  	r4,hi(sqlite3one)
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r4,lo(sqlite3one)
	l.lbs   	r6,0(r4)	 # extendqisi2_no_sext_mem
	l.sfeqi	r6,0
	l.bf	.L15066	# delay slot filled
	l.ori   	r5,r22,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.sfgts 	r11,r6
	l.bnf	.L15068	# delay slot filled
	l.addi  	r7,r5,1
.L15086:
	l.lbz   	r8,0(r5)	 # zero_extendqisi2
	l.lbz   	r7,0(r7)	 # zero_extendqisi2
	l.slli  	r7,r7,8
	l.movhi 	r4,hi(-65536)	 # move immediate M
	l.addi  	r6,r6,1
	l.add   	r7,r7,r8
	l.ori   	r4,r4,10240
	l.add   	r7,r7,r4
	l.sfgtui	r7,2047
	l.bf	.L15071	# delay slot filled
	l.addi  	r5,r5,2
	l.addi  	r5,r5,2
.L15071:
	l.sfne 	r6,r3
	l.bf	.L15086	# delay slot filled
	l.addi  	r7,r5,1
.L15068:
	l.j     	.L15065	# delay slot filled
	l.sw    	0(r16),r5	 # SI store
.L15066:
	l.sflesi	r11,0
	l.bf	.L15068
	l.nop			# nop delay slot
.L15070:
	l.lbz   	r7,0(r5)	 # zero_extendqisi2
	l.addi  	r8,r5,1
	l.slli  	r7,r7,8
	l.lbz   	r8,0(r8)	 # zero_extendqisi2
	l.movhi 	r4,hi(-65536)	 # move immediate M
	l.add   	r7,r8,r7
	l.ori   	r4,r4,10240
	l.addi  	r6,r6,1
	l.add   	r7,r7,r4
	l.sfgtui	r7,2047
	l.bf	.L15069	# delay slot filled
	l.addi  	r5,r5,2
	l.addi  	r5,r5,2
.L15069:
	l.sfne 	r6,r3
	l.bf	.L15070
	l.nop			# nop delay slot
	l.j     	.L15065	# delay slot filled
	l.sw    	0(r16),r5	 # SI store
.LFE1022:
	.size	sqlite3Prepare16, .-sqlite3Prepare16
	.align	4
.proc	sqlite3_prepare16_v2
	.global sqlite3_prepare16_v2
	.type	sqlite3_prepare16_v2, @function
sqlite3_prepare16_v2:
.LFB1024:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4321:
	l.addi  	r1,r1,-4
.LCFI4322:
	l.ori   	r12,r6,0	 # move reg to reg
	l.addi	r1,r1,4
	l.ori   	r8,r7,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3Prepare16	# delay slot filled	# sibcall s
	l.ori   	r7,r12,0	 # move reg to reg
.LFE1024:
	.size	sqlite3_prepare16_v2, .-sqlite3_prepare16_v2
	.align	4
.proc	sqlite3_prepare16
	.global sqlite3_prepare16
	.type	sqlite3_prepare16, @function
sqlite3_prepare16:
.LFB1023:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4323:
	l.addi  	r1,r1,-4
.LCFI4324:
	l.ori   	r12,r6,0	 # move reg to reg
	l.addi	r1,r1,4
	l.ori   	r8,r7,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3Prepare16	# delay slot filled	# sibcall s
	l.ori   	r7,r12,0	 # move reg to reg
.LFE1023:
	.size	sqlite3_prepare16, .-sqlite3_prepare16
	.align	4
.proc	sqlite3_prepare_v2
	.global sqlite3_prepare_v2
	.type	sqlite3_prepare_v2, @function
sqlite3_prepare_v2:
.LFB1021:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4325:
	l.addi  	r1,r1,-4
.LCFI4326:
	l.ori   	r12,r6,0	 # move reg to reg
	l.addi	r1,r1,4
	l.ori   	r8,r7,0	 # move reg to reg
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3LockAndPrepare	# delay slot filled	# sibcall s
	l.ori   	r7,r12,0	 # move reg to reg
.LFE1021:
	.size	sqlite3_prepare_v2, .-sqlite3_prepare_v2
	.align	4
.proc	sqlite3_prepare
	.global sqlite3_prepare
	.type	sqlite3_prepare, @function
sqlite3_prepare:
.LFB1020:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4327:
	l.addi  	r1,r1,-4
.LCFI4328:
	l.ori   	r12,r6,0	 # move reg to reg
	l.addi	r1,r1,4
	l.ori   	r8,r7,0	 # move reg to reg
	l.addi  	r6,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3LockAndPrepare	# delay slot filled	# sibcall s
	l.ori   	r7,r12,0	 # move reg to reg
.LFE1020:
	.size	sqlite3_prepare, .-sqlite3_prepare
	.section	.rodata.str1.1
.LC509:
	.string	"too many attached databases - max %d"
.LC510:
	.string	"cannot ATTACH database within transaction"
.LC511:
	.string	"database %s is already in use"
.LC512:
	.string	"database is already attached"
.LC513:
	.string	"unable to open database: %s"
	.section .text
	.align	4
.proc	attachFunc
	.type	attachFunc, @function
attachFunc:
.LFB829:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4329:
	l.sw    	-40(r1),r2	 # SI store
.LCFI4330:
	l.sw    	-36(r1),r14	 # SI store
.LCFI4331:
	l.sw    	-24(r1),r20	 # SI store
.LCFI4332:
	l.sw    	-16(r1),r24	 # SI store
.LCFI4333:
	l.sw    	-12(r1),r26	 # SI store
.LCFI4334:
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	-32(r1),r16	 # SI store
.LCFI4335:
	l.sw    	-28(r1),r18	 # SI store
.LCFI4336:
	l.sw    	-20(r1),r22	 # SI store
.LCFI4337:
	l.sw    	-8(r1),r28	 # SI store
.LCFI4338:
	l.ori   	r24,r3,0	 # move reg to reg
	l.addi  	r1,r1,-48
.LCFI4339:
	l.lwz   	r3,0(r5)	 # SI load
	l.ori   	r14,r5,0	 # move reg to reg
	l.sw    	4(r1),r4	 # SI store
	l.jal   	sqlite3_value_text	# delay slot filled
	l.lwz   	r2,24(r24)	 # SI load
	l.lwz   	r3,4(r14)	 # SI load
	l.jal   	sqlite3_value_text	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.sfeqi	r26,0
	l.bf	.L15120	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
.L15092:
	l.sfeqi	r20,0
	l.bf	.L15121
	l.nop			# nop delay slot
.L15093:
	l.lwz   	r5,108(r2)	 # SI load
	l.lwz   	r22,4(r2)	 # SI load
	l.addi  	r3,r5,1
	l.sfges 	r3,r22
	l.bnf	.L15122	# delay slot filled
	l.movhi  	r4,hi(.LC509)
	l.lbz   	r18,28(r2)	 # zero_extendqisi2
	l.sfeqi	r18,0
	l.bf	.L15096	# delay slot filled
	l.sfgtsi	r22,0
	l.bnf	.L15123	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.lwz   	r28,8(r2)	 # SI load
	l.j     	.L15100	# delay slot filled
	l.ori   	r14,r28,0	 # move reg to reg
.L15099:
	l.sfgts 	r22,r16
	l.bnf	.L15129	# delay slot filled
	l.addi  	r3,r2,420
.L15100:
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r4,r20,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r16,r16,1
	l.addi  	r14,r14,24
	l.sfnei	r11,0
	l.bf	.L15099	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.movhi  	r4,hi(.LC511)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC511)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r20	 # SI store
	l.ori   	r4,r11,0	 # move reg to reg
	l.sw    	4(r1),r11	 # SI store
.L15095:
	l.sfeqi	r4,0
	l.bf	.L15130	# delay slot filled
	l.sfeqi	r18,0
	l.ori   	r3,r24,0	 # move reg to reg
.L15131:
	l.jal   	sqlite3_result_error	# delay slot filled
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,4(r1)	 # SI load
	l.sfeqi	r18,0
.L15130:
	l.bf	.L15091	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3_result_error_code	# delay slot filled
	l.ori   	r4,r18,0	 # move reg to reg
.L15091:
	l.addi	r1,r1,48
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L15122:
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC509)
	l.sw    	0(r1),r5	 # SI store
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.addi  	r18,r0,0	 # move immediate I
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L15095	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
.L15123:
	l.lwz   	r28,8(r2)	 # SI load
	l.addi  	r3,r2,420
.L15129:
	l.sfne 	r28,r3
	l.bnf	.L15124	# delay slot filled
	l.addi  	r22,r22,1
	l.ori   	r3,r2,0	 # move reg to reg
	l.add   	r5,r22,r22
	l.ori   	r4,r28,0	 # move reg to reg
	l.add   	r22,r5,r22
	l.jal   	sqlite3DbRealloc	# delay slot filled
	l.slli  	r5,r22,3
	l.sfeqi	r11,0
	l.bf	.L15091	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
.L15103:
	l.lwz   	r4,4(r2)	 # SI load
	l.addi  	r5,r0,0	 # move immediate I
	l.add   	r14,r4,r4
	l.sw    	8(r2),r7	 # SI store
	l.add   	r14,r14,r4
	l.ori   	r3,r2,0	 # move reg to reg
	l.slli  	r14,r14,3
	l.ori   	r4,r26,0	 # move reg to reg
	l.addi  	r6,r0,2000	 # move immediate I
	l.add   	r14,r7,r14
	l.sw    	0(r14),r5	 # SI store
	l.sw    	4(r14),r5	 # SI store
	l.sw    	8(r14),r5	 # SI store
	l.sw    	12(r14),r5	 # SI store
	l.sw    	16(r14),r5	 # SI store
	l.sw    	20(r14),r5	 # SI store
	l.addi  	r8,r14,4
	l.lwz   	r7,16(r2)	 # SI load
	l.jal   	sqlite3BtreeFactory	# delay slot filled
	l.ori   	r7,r7,256
	l.lwz   	r3,4(r2)	 # SI load
	l.ori   	r18,r11,0	 # move reg to reg
	l.addi  	r3,r3,1
	l.sfnei	r11,19
	l.bnf	.L15125	# delay slot filled
	l.sw    	4(r2),r3	 # SI store
	l.sfnei	r11,0
	l.bnf	.L15126	# delay slot filled
	l.xori  	r4,r11,3082
	l.xori  	r3,r11,7
	l.sub   	r5,r0,r4
	l.sub   	r16,r0,r3
	l.or    	r4,r5,r4
	l.or    	r16,r16,r3
	l.and   	r16,r16,r4
	l.xori  	r16,r16,0xffff
	l.srli  	r16,r16,31
.L15105:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r7,r0,3	 # movqi: move immediate
	l.sw    	0(r14),r11	 # SI store
	l.sb    	9(r14),r7	    # movqi
.L15115:
	l.lwz   	r14,4(r2)	 # SI load
	l.lwz   	r3,8(r2)	 # SI load
	l.addi  	r14,r14,-1
	l.add   	r20,r14,r14
	l.add   	r20,r20,r14
	l.slli  	r20,r20,3
	l.add   	r3,r3,r20
	l.lwz   	r3,4(r3)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L15111
	l.nop			# nop delay slot
	l.jal   	sqlite3BtreeClose
	l.nop			# nop delay slot
	l.lwz   	r3,8(r2)	 # SI load
	l.add   	r20,r3,r20
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	4(r20),r3	 # SI store
	l.sw    	20(r20),r3	 # SI store
.L15111:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3ResetInternalSchema	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.sfeqi	r16,0
	l.bnf	.L15127	# delay slot filled
	l.sw    	4(r2),r14	 # SI store
	l.lwz   	r4,4(r1)	 # SI load
	l.sfnei	r4,0
	l.bf	.L15131	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.movhi  	r4,hi(.LC513)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC513)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.sw    	0(r1),r26	 # SI store
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L15095	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
.L15096:
	l.movhi  	r4,hi(.LC510)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.ori   	r4,r4,lo(.LC510)
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L15095	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
.L15121:
	l.movhi  	r20,hi(.LC15)
	l.j     	.L15093	# delay slot filled
	l.ori   	r20,r20,lo(.LC15)
.L15120:
	l.movhi  	r26,hi(.LC15)
	l.j     	.L15092	# delay slot filled
	l.ori   	r26,r26,lo(.LC15)
.L15126:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3SchemaGet	# delay slot filled
	l.lwz   	r4,4(r14)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L15118	# delay slot filled
	l.sw    	20(r14),r11	 # SI store
	l.lbz   	r3,56(r11)	 # zero_extendqisi2
	l.sfeqi	r3,0
	l.bf	.L15107
	l.nop			# nop delay slot
	l.lwz   	r3,8(r2)	 # SI load
	l.lbz   	r4,57(r11)	 # zero_extendqisi2
	l.lwz   	r3,20(r3)	 # SI load
	l.lbz   	r3,57(r3)	 # zero_extendqisi2
	l.sfeq 	r4,r3
	l.bf	.L15107	# delay slot filled
	l.movhi  	r4,hi(.LC324)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC324)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.addi  	r18,r0,1	 # move immediate I
	l.sw    	4(r1),r11	 # SI store
.L15107:
	l.lwz   	r3,4(r14)	 # SI load
	l.lwz   	r3,4(r3)	 # SI load
	l.lwz   	r3,0(r3)	 # SI load
	l.lbz   	r4,11(r3)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L15108	# delay slot filled
	l.lbz   	r5,31(r2)	 # zero_extendqisi2
	l.sb    	4(r3),r5	    # movqi
.L15108:
	l.jal   	sqlite3PagerJournalMode	# delay slot filled
	l.lbz   	r4,32(r2)	 # zero_extendqisi2
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbStrDup	# delay slot filled
	l.ori   	r4,r20,0	 # move reg to reg
	l.addi  	r7,r0,3	 # movqi: move immediate
	l.sw    	0(r14),r11	 # SI store
	l.sfeqi	r18,0
	l.bnf	.L15128	# delay slot filled
	l.sb    	9(r14),r7	    # movqi
	l.jal   	sqlite3BtreeEnterAll	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3Init	# delay slot filled
	l.addi  	r4,r1,4
	l.sfeqi	r11,0
	l.bf	.L15091	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.xori  	r4,r11,3082
	l.xori  	r3,r11,7
	l.sub   	r6,r0,r4
	l.sub   	r5,r0,r3
	l.or    	r4,r6,r4
	l.or    	r3,r5,r3
	l.and   	r16,r3,r4
	l.xori  	r16,r16,0xffff
	l.j     	.L15115	# delay slot filled
	l.srli  	r16,r16,31
.L15125:
	l.movhi  	r4,hi(.LC512)
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC512)
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
	l.addi  	r18,r0,1	 # move immediate I
	l.j     	.L15105	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
.L15118:
	l.j     	.L15107	# delay slot filled
	l.addi  	r18,r0,7	 # move immediate I
.L15127:
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.ori   	r3,r2,0	 # move reg to reg
	l.sb    	30(r2),r4	    # movqi
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,4(r1)	 # SI load
	l.movhi  	r4,hi(.LC189)
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3MPrintf	# delay slot filled
	l.ori   	r4,r4,lo(.LC189)
	l.ori   	r4,r11,0	 # move reg to reg
	l.j     	.L15095	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
.L15124:
	l.ori   	r3,r2,0	 # move reg to reg
	l.jal   	sqlite3DbMallocRaw	# delay slot filled
	l.addi  	r4,r0,72	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L15091	# delay slot filled
	l.ori   	r7,r11,0	 # move reg to reg
	l.lwz   	r3,8(r2)	 # SI load
	l.lwz   	r4,0(r3)	 # SI load
	l.sw    	0(r11),r4	 # SI store
	l.lwz   	r4,4(r3)	 # SI load
	l.sw    	4(r11),r4	 # SI store
	l.lwz   	r4,8(r3)	 # SI load
	l.sw    	8(r11),r4	 # SI store
	l.lwz   	r4,12(r3)	 # SI load
	l.sw    	12(r11),r4	 # SI store
	l.lwz   	r4,16(r3)	 # SI load
	l.sw    	16(r11),r4	 # SI store
	l.lwz   	r4,20(r3)	 # SI load
	l.sw    	20(r11),r4	 # SI store
	l.lwz   	r4,24(r3)	 # SI load
	l.sw    	24(r11),r4	 # SI store
	l.lwz   	r4,28(r3)	 # SI load
	l.sw    	28(r11),r4	 # SI store
	l.lwz   	r4,32(r3)	 # SI load
	l.sw    	32(r11),r4	 # SI store
	l.lwz   	r4,36(r3)	 # SI load
	l.sw    	36(r11),r4	 # SI store
	l.lwz   	r4,40(r3)	 # SI load
	l.sw    	40(r11),r4	 # SI store
	l.lwz   	r3,44(r3)	 # SI load
	l.j     	.L15103	# delay slot filled
	l.sw    	44(r11),r3	 # SI store
.L15128:
	l.xori  	r3,r18,7
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.xori  	r16,r3,0xffff
	l.j     	.L15115	# delay slot filled
	l.srli  	r16,r16,31
.LFE829:
	.size	attachFunc, .-attachFunc
	.align	4
.proc	sqlite3_get_table
	.global sqlite3_get_table
	.type	sqlite3_get_table, @function
sqlite3_get_table:
.LFB1074:
	l.sw    	-28(r1),r2	 # SI store
.LCFI4340:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-24(r1),r14	 # SI store
.LCFI4341:
	l.sw    	-20(r1),r16	 # SI store
.LCFI4342:
	l.sw    	-16(r1),r18	 # SI store
.LCFI4343:
	l.sw    	-12(r1),r20	 # SI store
.LCFI4344:
	l.sw    	-8(r1),r22	 # SI store
.LCFI4345:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4346:
	l.sw    	0(r5),r2	 # SI store
	l.addi  	r1,r1,-60
.LCFI4347:
	l.ori   	r22,r5,0	 # move reg to reg
	l.ori   	r18,r7,0	 # move reg to reg
	l.ori   	r20,r3,0	 # move reg to reg
	l.ori   	r2,r4,0	 # move reg to reg
	l.ori   	r16,r6,0	 # move reg to reg
	l.sfeqi	r7,0
	l.bf	.L15133	# delay slot filled
	l.ori   	r14,r8,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r7),r3	 # SI store
.L15133:
	l.sfeqi	r16,0
	l.bf	.L15134	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.sw    	0(r16),r4	 # SI store
.L15134:
	l.sfeqi	r14,0
	l.bf	.L15135	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	0(r14),r3	 # SI store
.L15135:
	l.addi  	r4,r0,0	 # move immediate I
	l.addi  	r3,r0,80	 # move immediate I
	l.sw    	8(r1),r4	 # SI store
	l.sw    	16(r1),r4	 # SI store
	l.sw    	20(r1),r4	 # SI store
	l.addi  	r4,r0,1	 # move immediate I
	l.sw    	24(r1),r4	 # SI store
	l.addi  	r4,r0,20	 # move immediate I
	l.sw    	12(r1),r4	 # SI store
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3_malloc	# delay slot filled
	l.sw    	28(r1),r4	 # SI store
	l.sfnei	r11,0
	l.bnf	.L15146	# delay slot filled
	l.sw    	4(r1),r11	 # SI store
	l.addi  	r3,r0,0	 # move immediate I
	l.movhi  	r5,hi(sqlite3_get_table_cb)
	l.ori   	r4,r2,0	 # move reg to reg
	l.sw    	0(r11),r3	 # SI store
	l.ori   	r5,r5,lo(sqlite3_get_table_cb)
	l.ori   	r3,r20,0	 # move reg to reg
	l.addi  	r6,r1,4
	l.jal   	sqlite3_exec	# delay slot filled
	l.ori   	r7,r14,0	 # move reg to reg
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r5,24(r1)	 # SI load
	l.andi  	r4,r11,255
	l.sw    	0(r3),r5	 # SI store
	l.sfnei	r4,4
	l.bnf	.L15147	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,8(r1)	 # SI load
	l.sfeqi	r2,0
	l.bnf	.L15148	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.lwz   	r4,24(r1)	 # SI load
	l.lwz   	r3,12(r1)	 # SI load
	l.sfgts 	r3,r4
	l.bf	.L15142	# delay slot filled
	l.lwz   	r11,4(r1)	 # SI load
	l.addi  	r11,r11,4
.L15150:
	l.sfeqi	r18,0
	l.bf	.L15145	# delay slot filled
	l.sw    	0(r22),r11	 # SI store
	l.lwz   	r3,20(r1)	 # SI load
	l.sw    	0(r18),r3	 # SI store
.L15145:
	l.sfeqi	r16,0
	l.bf	.L15137	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.sw    	0(r16),r3	 # SI store
.L15137:
	l.addi	r1,r1,60
.L15149:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r22,-8(r1)	 # SI load
.L15142:
	l.slli  	r4,r4,2
	l.jal   	sqlite3_realloc	# delay slot filled
	l.lwz   	r3,4(r1)	 # SI load
	l.sfnei	r11,0
	l.bf	.L15150	# delay slot filled
	l.addi  	r11,r11,4
	l.lwz   	r3,4(r1)	 # SI load
	l.jal   	sqlite3_free_table	# delay slot filled
	l.addi  	r3,r3,4
.L15146:
	l.addi  	r2,r0,7	 # move immediate I
	l.j     	.L15137	# delay slot filled
	l.sw    	20(r20),r2	 # SI store
.L15147:
	l.jal   	sqlite3_free_table	# delay slot filled
	l.addi  	r3,r3,4
	l.lwz   	r3,8(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L15139	# delay slot filled
	l.sfeqi	r14,0
	l.bf	.L15140
	l.nop			# nop delay slot
	l.jal   	sqlite3_free	# delay slot filled
	l.lwz   	r3,0(r14)	 # SI load
	l.movhi  	r3,hi(.LC78)
	l.lwz   	r2,8(r1)	 # SI load
	l.ori   	r3,r3,lo(.LC78)
	l.jal   	sqlite3_mprintf	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
	l.lwz   	r3,8(r1)	 # SI load
	l.sw    	0(r14),r11	 # SI store
.L15140:
	l.jal   	sqlite3_free
	l.nop			# nop delay slot
.L15139:
	l.lwz   	r2,28(r1)	 # SI load
	l.j     	.L15137	# delay slot filled
	l.sw    	20(r20),r2	 # SI store
.L15148:
	l.jal   	sqlite3_free_table	# delay slot filled
	l.addi  	r3,r3,4
	l.j     	.L15149	# delay slot filled
	l.addi	r1,r1,60
.LFE1074:
	.size	sqlite3_get_table, .-sqlite3_get_table
	.section	.rodata.str1.1
.LC514:
	.string	"integer"
.LC515:
	.string	"real"
.LC516:
	.string	"cannot open virtual table: %s"
.LC517:
	.string	"cannot open view: %s"
.LC518:
	.string	"no such column: \"%s\""
.LC519:
	.string	"cannot open indexed column for writing"
.LC520:
	.string	"cannot open value of type %s"
.LC521:
	.string	"no such rowid: %lld"
	.section	.rodata.cst4
	.align	4
.LC522:
	.long	-1000000
	.section .text
	.align	4
.proc	sqlite3_blob_open
	.global sqlite3_blob_open
	.type	sqlite3_blob_open, @function
sqlite3_blob_open:
.LFB692:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4348:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4349:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4350:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4351:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4352:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4353:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4354:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4355:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4356:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4357:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4358:
	l.addi  	r1,r1,-720
.LCFI4359:
	l.ori   	r20,r3,0	 # move reg to reg
	l.lwz   	r24,720(r1)	 # SI load
	l.sw    	8(r1),r4	 # SI store
	l.sub   	r2,r0,r24
	l.ori   	r28,r5,0	 # move reg to reg
	l.or    	r2,r2,r24
	l.ori   	r22,r6,0	 # move reg to reg
	l.srli  	r2,r2,31
	l.addi  	r30,r0,0	 # move immediate I
	l.addi  	r26,r1,28
	l.sw    	20(r1),r2	 # SI store
	l.addi  	r2,r0,0	 # movqi: move immediate
		l.sw    	12(r1), r7
		l.sw    	12+4(r1), r8
	l.sb    	548(r1),r2	    # movqi
	l.addi  	r4,r0,0	 # move immediate I
.L15239:
	l.addi  	r5,r0,520	 # move immediate I
	l.jal   	memset	# delay slot filled
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3BtreeEnterAll	# delay slot filled
	l.sw    	28(r1),r20	 # SI store
	l.ori   	r3,r26,0	 # move reg to reg
	l.addi  	r4,r0,0	 # move immediate I
	l.ori   	r5,r28,0	 # move reg to reg
	l.jal   	sqlite3LocateTable	# delay slot filled
	l.lwz   	r6,8(r1)	 # SI load
	l.sfeqi	r11,0
	l.bf	.L15154	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
	l.lbz   	r2,34(r11)	 # zero_extendqisi2
	l.andi  	r2,r2,16
	l.sfeqi	r2,0
	l.bnf	.L15221	# delay slot filled
	l.movhi  	r4,hi(.LC516)
	l.lwz   	r2,28(r11)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L15222	# delay slot filled
	l.movhi  	r4,hi(.LC517)
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC517)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r28	 # SI store
.L15154:
	l.lwz   	r6,36(r1)	 # SI load
.L15231:
	l.sfnei	r6,0
	l.bnf	.L15223
	l.nop			# nop delay slot
	l.addi  	r2,r1,548
	l.movhi  	r5,hi(.LC78)
	l.addi  	r3,r0,128	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC78)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r6	 # SI store
	l.lwz   	r6,36(r1)	 # SI load
.L15156:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r6,0	 # move reg to reg
	l.j     	.L15230	# delay slot filled
	l.addi  	r3,r0,0	 # movqi: move immediate
.L15222:
	l.lwz   	r16,12(r18)	 # SI load
	l.sfgtsi	r16,0
	l.bnf	.L15234	# delay slot filled
	l.sfne 	r2,r16
	l.j     	.L15161	# delay slot filled
	l.lwz   	r14,16(r18)	 # SI load
.L15224:
	l.sflts 	r2,r16
	l.bnf	.L15158	# delay slot filled
	l.sfne 	r2,r16
.L15161:
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3StrICmp	# delay slot filled
	l.addi  	r14,r14,20
	l.sfeqi	r11,0
	l.bnf	.L15224	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.sfeqi	r24,0
.L15238:
	l.bf	.L15162
	l.nop			# nop delay slot
	l.lwz   	r11,20(r18)	 # SI load
	l.sfnei	r11,0
	l.bnf	.L15162
	l.nop			# nop delay slot
.L15213:
	l.lwz   	r14,4(r11)	 # SI load
	l.sflesi	r14,0
	l.bf	.L15168
	l.nop			# nop delay slot
	l.lwz   	r12,8(r11)	 # SI load
	l.lwz   	r3,0(r12)	 # SI load
	l.sfeq 	r3,r2
	l.bf	.L15169	# delay slot filled
	l.addi  	r12,r12,4
	l.j     	.L15164	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
.L15166:
	l.lwz   	r13,0(r12)	 # SI load
	l.sfne 	r13,r2
	l.bnf	.L15169	# delay slot filled
	l.addi  	r12,r12,4
.L15164:
	l.addi  	r8,r8,1
	l.sflts 	r8,r14
	l.bf	.L15166
	l.nop			# nop delay slot
.L15168:
	l.lwz   	r11,32(r11)	 # SI load
	l.sfnei	r11,0
	l.bf	.L15213
	l.nop			# nop delay slot
.L15162:
	l.jal   	sqlite3VdbeCreate	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L15170	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r3,72(r18)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L15202	# delay slot filled
	l.movhi  	r5,hi(.LC522)
	l.lwz   	r12,4(r20)	 # SI load
	l.sflesi	r12,0
	l.bf	.L15203	# delay slot filled
	l.addi  	r6,r0,1	 # move immediate I
	l.lwz   	r8,8(r20)	 # SI load
	l.lwz   	r4,20(r8)	 # SI load
	l.sfeq 	r3,r4
	l.bf	.L15204	# delay slot filled
	l.addi  	r8,r8,44
	l.j     	.L15172	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L15173:
	l.lwz   	r11,0(r8)	 # SI load
	l.sfne 	r3,r11
	l.bnf	.L15225	# delay slot filled
	l.addi  	r8,r8,24
.L15172:
	l.addi  	r14,r14,1
	l.sflts 	r14,r12
	l.bf	.L15173	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sll   	r4,r4,r14
	l.sw    	24(r1),r4	 # SI store
.L15171:
	l.movhi  	r5,hi(openBlob.13734)
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,10	 # move immediate I
	l.jal   	sqlite3VdbeAddOpList	# delay slot filled
	l.ori   	r5,r5,lo(openBlob.13734)
	l.lwz   	r3,12(r16)	 # SI load
	l.sflesi	r3,0
	l.bf	.L15174
	l.nop			# nop delay slot
	l.lwz   	r6,20(r16)	 # SI load
	l.sfeqi	r6,0
	l.bf	.L15199	# delay slot filled
	l.lwz   	r4,20(r1)	 # SI load
	l.sw    	4(r6),r14	 # SI store
	l.sw    	8(r6),r4	 # SI store
.L15199:
	l.sflesi	r3,1
	l.bf	.L15174	# delay slot filled
	l.sfeqi	r6,0
	l.bf	.L15174
	l.nop			# nop delay slot
	l.lwz   	r3,72(r18)	 # SI load
	l.sw    	24(r6),r14	 # SI store
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	28(r6),r3	 # SI store
.L15174:
	l.lwz   	r3,144(r16)	 # SI load
	l.lwz   	r5,24(r1)	 # SI load
	l.and   	r4,r5,r3
	l.sfnei	r4,0
	l.bf	.L15235	# delay slot filled
	l.sfeqi	r24,0
	l.or    	r3,r5,r3
	l.sw    	144(r16),r3	 # SI store
.L15235:
	l.bf	.L15177	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r4,r0,2	 # move immediate I
	l.jal   	sqlite3VdbeChangeToNoop	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.addi  	r3,r0,3	 # move immediate I
.L15196:
	l.lwz   	r4,12(r16)	 # SI load
	l.sfges 	r3,r4
	l.bf	.L15178	# delay slot filled
	l.lwz   	r6,24(r18)	 # SI load
	l.lwz   	r8,20(r16)	 # SI load
	l.sfeqi	r8,0
	l.bf	.L15178	# delay slot filled
	l.slli  	r11,r3,2
	l.slli  	r3,r3,4
	l.add   	r3,r11,r3
	l.add   	r8,r8,r3
	l.sw    	8(r8),r6	 # SI store
.L15178:
	l.sfeqi	r24,0
	l.bf	.L15179	# delay slot filled
	l.addi  	r3,r0,2	 # move immediate I
	l.addi  	r3,r0,3	 # move immediate I
.L15179:
	l.sfges 	r3,r4
	l.bf	.L15236	# delay slot filled
	l.sfeqi	r24,0
	l.lwz   	r4,20(r16)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L15180	# delay slot filled
	l.slli  	r6,r3,2
	l.slli  	r3,r3,4
	l.add   	r3,r6,r3
	l.add   	r4,r4,r3
	l.sw    	12(r4),r14	 # SI store
.L15180:
	l.sfeqi	r24,0
.L15236:
	l.bf	.L15181	# delay slot filled
	l.addi  	r4,r0,2	 # move immediate I
	l.addi  	r4,r0,3	 # move immediate I
.L15181:
	l.lwz   	r6,12(r18)	 # SI load
	l.ori   	r3,r16,0	 # move reg to reg
	l.addi  	r5,r6,1
	l.jal   	sqlite3VdbeChangeP4	# delay slot filled
	l.addi  	r6,r0,-14	 # move immediate I
	l.lwz   	r4,12(r16)	 # SI load
	l.sflesi	r4,6
	l.bf	.L15182	# delay slot filled
	l.lwz   	r3,12(r18)	 # SI load
	l.lwz   	r4,20(r16)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L15182
	l.nop			# nop delay slot
	l.sw    	128(r4),r3	 # SI store
.L15182:
	l.lbz   	r18,30(r20)	 # zero_extendqisi2
	l.sfnei	r18,0
	l.bnf	.L15226	# delay slot filled
	l.addi  	r4,r0,0	 # movqi: move immediate
	l.addi  	r14,r0,0	 # move immediate I
	l.sb    	675(r1),r4	    # movqi
.L15220:
	l.addi  	r5,r0,0	 # move immediate I
	l.sfeq 	r18,r5
	l.bf	.L15237	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
.L15194:
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L15195	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.addi  	r2,r1,548
.L15200:
	l.ori   	r5,r2,0	 # move reg to reg
.L15195:
	l.ori   	r3,r20,0	 # move reg to reg
.L15237:
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.addi	r1,r1,720
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L15169:
	l.movhi  	r5,hi(.LC519)
	l.addi  	r3,r0,128	 # move immediate I
	l.addi  	r4,r1,548
	l.ori   	r5,r5,lo(.LC519)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
.L15165:
	l.addi  	r5,r0,0	 # movqi: move immediate
.L15232:
	l.sb    	675(r1),r5	    # movqi
.L15193:
	l.sfeqi	r14,0
	l.bf	.L15195	# delay slot filled
	l.ori   	r5,r14,0	 # move reg to reg
	l.j     	.L15200	# delay slot filled
	l.addi  	r2,r1,548
.L15158:
.L15234:
	l.bf	.L15238	# delay slot filled
	l.sfeqi	r24,0
	l.addi  	r2,r1,548
	l.movhi  	r5,hi(.LC518)
	l.addi  	r3,r0,128	 # move immediate I
	l.ori   	r4,r2,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC518)
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.sw    	0(r1),r22	 # SI store
	l.addi  	r3,r0,0	 # movqi: move immediate
.L15230:
	l.addi  	r14,r0,1	 # move immediate I
	l.sb    	675(r1),r3	    # movqi
	l.j     	.L15195	# delay slot filled
	l.ori   	r5,r2,0	 # move reg to reg
.L15221:
	l.ori   	r3,r26,0	 # move reg to reg
	l.ori   	r4,r4,lo(.LC516)
	l.jal   	sqlite3ErrorMsg	# delay slot filled
	l.sw    	0(r1),r28	 # SI store
	l.j     	.L15231	# delay slot filled
	l.lwz   	r6,36(r1)	 # SI load
.L15177:
	l.addi  	r4,r0,3	 # move immediate I
	l.jal   	sqlite3VdbeChangeToNoop	# delay slot filled
	l.addi  	r5,r0,1	 # move immediate I
	l.j     	.L15196	# delay slot filled
	l.addi  	r3,r0,2	 # move immediate I
.L15226:
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r3,r16,0	 # move reg to reg
	l.ori   	r5,r4,0	 # move reg to reg
	l.ori   	r6,r4,0	 # move reg to reg
	l.jal   	sqlite3VdbeMakeReady	# delay slot filled
	l.ori   	r7,r18,0	 # move reg to reg
.L15170:
	l.lbz   	r18,30(r20)	 # zero_extendqisi2
	l.sfnei	r18,0
	l.bf	.L15207	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
		l.lwz   	r5, 12(r1)
		l.lwz   	r6, 12+4(r1)
	l.jal   	sqlite3_bind_int64	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.jal   	sqlite3_step	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.sfeqi	r11,100
	l.bnf	.L15227	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
.L15185:
	l.lwz   	r3,48(r16)	 # SI load
	l.slli  	r2,r2,2
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r3,96(r3)	 # SI load
	l.add   	r3,r3,r2
	l.lwz   	r18,0(r3)	 # SI load
	l.sfgtui	r18,11
	l.bf	.L15190	# delay slot filled
	l.sfeqi	r18,0
	l.movhi  	r2,hi(.LC125)
	l.bf	.L15191	# delay slot filled
	l.ori   	r2,r2,lo(.LC125)
	l.movhi  	r2,hi(.LC514)
	l.sfnei	r18,7
	l.bf	.L15191	# delay slot filled
	l.ori   	r2,r2,lo(.LC514)
	l.movhi  	r2,hi(.LC515)
	l.ori   	r2,r2,lo(.LC515)
.L15191:
	l.movhi  	r5,hi(.LC520)
	l.addi  	r3,r0,128	 # move immediate I
	l.addi  	r4,r1,548
	l.ori   	r5,r5,lo(.LC520)
	l.sw    	0(r1),r2	 # SI store
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
.L15184:
	l.addi  	r7,r0,0	 # movqi: move immediate
.L15233:
	l.sfeqi	r16,0
	l.bf	.L15193	# delay slot filled
	l.sb    	675(r1),r7	    # movqi
	l.sfnei	r14,0
	l.bf	.L15194
	l.nop			# nop delay slot
	l.j     	.L15220	# delay slot filled
	l.lbz   	r18,30(r20)	 # zero_extendqisi2
.L15227:
	l.jal   	sqlite3_finalize	# delay slot filled
	l.addi  	r30,r30,1
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3_errmsg	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.addi  	r3,r0,128	 # move immediate I
	l.addi  	r4,r1,548
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.ori   	r5,r11,0	 # move reg to reg
	l.xori  	r3,r14,17
	l.sub   	r4,r0,r3
	l.or    	r3,r4,r3
	l.sfltsi	r3,0
	l.bf	.L15212	# delay slot filled
	l.sflesi	r30,4
	l.bf	.L15188	# delay slot filled
	l.addi  	r3,r0,1	 # movqi: move immediate
	l.ori   	r3,r18,0	  # movqi: move reg to reg
.L15188:
	l.andi  	r3,r3,0xff	 # zero_extendqisi2
	l.sfnei	r3,0
	l.bf	.L15239	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
.L15212:
	l.sfnei	r14,100
	l.bnf	.L15228	# delay slot filled
	l.sfnei	r14,0
	l.bf	.L15165	# delay slot filled
	l.addi  	r3,r0,128	 # move immediate I
	l.movhi  	r5,hi(.LC521)
	l.addi  	r4,r1,548
	l.ori   	r5,r5,lo(.LC521)
		l.lwz   	r6, 12(r1)
		l.lwz   	r7, 12+4(r1)
		l.sw    	0(r1), r6
		l.sw    	4(r1), r7
	l.jal   	sqlite3_snprintf	# delay slot filled
	l.addi  	r14,r0,1	 # move immediate I
	l.j     	.L15232	# delay slot filled
	l.addi  	r5,r0,0	 # movqi: move immediate
.L15225:
	l.addi  	r3,r0,1	 # move immediate I
	l.sll   	r3,r3,r14
	l.j     	.L15171	# delay slot filled
	l.sw    	24(r1),r3	 # SI store
.L15202:
	l.sw    	24(r1),r3	 # SI store
	l.ori   	r5,r5,lo(.LC522)
	l.j     	.L15171	# delay slot filled
	l.lwz   	r14,0(r5)	 # SI load
.L15190:
	l.addi  	r4,r0,24	 # move immediate I
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.ori   	r3,r20,0	 # move reg to reg
	l.lbz   	r14,30(r20)	 # zero_extendqisi2
	l.sfeqi	r14,0
	l.bnf	.L15229	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r3,48(r16)	 # SI load
	l.addi  	r6,r0,1	 # movqi: move immediate
	l.lwz   	r3,0(r3)	 # SI load
	l.sw    	0(r11),r24	 # SI store
	l.lwz   	r3,0(r3)	 # SI load
	l.addi  	r5,r18,-12
	l.sw    	12(r11),r3	 # SI store
	l.sb    	80(r3),r6	    # movqi
	l.srli  	r5,r5,1
	l.lwz   	r3,48(r16)	 # SI load
	l.sw    	16(r11),r16	 # SI store
	l.lwz   	r3,0(r3)	 # SI load
	l.lwz   	r3,100(r3)	 # SI load
	l.add   	r2,r3,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.sw    	4(r11),r5	 # SI store
	l.sw    	8(r11),r2	 # SI store
	l.lwz   	r2,724(r1)	 # SI load
	l.sw    	20(r11),r20	 # SI store
	l.j     	.L15184	# delay slot filled
	l.sw    	0(r2),r11	 # SI store
.L15203:
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L15171	# delay slot filled
	l.sw    	24(r1),r6	 # SI store
.L15204:
	l.addi  	r7,r0,1	 # move immediate I
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L15171	# delay slot filled
	l.sw    	24(r1),r7	 # SI store
.L15229:
	l.ori   	r3,r20,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.addi  	r14,r0,100	 # move immediate I
	l.j     	.L15233	# delay slot filled
	l.addi  	r7,r0,0	 # movqi: move immediate
.L15223:
	l.j     	.L15156	# delay slot filled
	l.addi  	r2,r1,548
.L15207:
	l.j     	.L15184	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
.L15228:
	l.j     	.L15185	# delay slot filled
	l.addi  	r16,r0,0	 # move immediate I
.LFE692:
	.size	sqlite3_blob_open, .-sqlite3_blob_open
	.align	4
.proc	execExecSql
	.type	execExecSql, @function
execExecSql:
.LFB1099:
	l.sw    	-12(r1),r2	 # SI store
.LCFI4360:
	l.sw    	-8(r1),r14	 # SI store
.LCFI4361:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4362:
	l.addi  	r1,r1,-16
.LCFI4363:
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r6,r1,0	 # move reg to reg
	l.addi  	r7,r0,0	 # move immediate I
	l.jal   	sqlite3_prepare	# delay slot filled
	l.ori   	r14,r3,0	 # move reg to reg
	l.sfnei	r11,0
	l.bf	.L15241	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L15244:
	l.jal   	sqlite3_step	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.sfeqi	r11,100
	l.bnf	.L15246	# delay slot filled
	l.addi  	r4,r0,0	 # move immediate I
	l.jal   	sqlite3_column_text	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	execSql	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L15244	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3_finalize	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
.L15241:
	l.addi	r1,r1,16
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.L15246:
	l.jal   	sqlite3_finalize	# delay slot filled
	l.lwz   	r3,0(r1)	 # SI load
	l.addi	r1,r1,16
	l.ori   	r2,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r14,-8(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-12(r1)	 # SI load
.LFE1099:
	.size	execExecSql, .-execExecSql
	.align	4
.proc	sqlite3_extended_errcode
	.global sqlite3_extended_errcode
	.type	sqlite3_extended_errcode, @function
sqlite3_extended_errcode:
.LFB1224:
	l.sw    	-4(r1),r2	 # SI store
.LCFI4364:
	l.addi  	r11,r0,7	 # move immediate I
	l.sfeqi	r3,0
.LCFI4365:
	l.bf	.L15248	# delay slot filled
	l.addi  	r1,r1,-4
	l.movhi 	r2,hi(-1607925760)	 # move immediate M
	l.lwz   	r4,64(r3)	 # SI load
	l.ori   	r2,r2,42647
	l.xor   	r5,r4,r2
	l.sub   	r6,r0,r5
	l.or    	r5,r6,r5
	l.sfgesi	r5,0
	l.bf	.L15249	# delay slot filled
	l.movhi 	r2,hi(1266089984)	 # move immediate M
	l.ori   	r2,r2,4752
	l.xor   	r5,r4,r2
	l.sub   	r6,r0,r5
	l.or    	r5,r6,r5
	l.sfgesi	r5,0
	l.bf	.L15249	# delay slot filled
	l.movhi 	r2,hi(-264568832)	 # move immediate M
	l.ori   	r2,r2,30982
	l.sfne 	r4,r2
	l.bnf	.L15249	# delay slot filled
	l.addi  	r11,r0,21	 # move immediate I
.L15248:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.L15249:
	l.lbz   	r4,30(r3)	 # zero_extendqisi2
	l.sfnei	r4,0
	l.bf	.L15248	# delay slot filled
	l.addi  	r11,r0,7	 # move immediate I
	l.addi	r1,r1,4
	l.lwz   	r11,20(r3)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1224:
	.size	sqlite3_extended_errcode, .-sqlite3_extended_errcode
	.align	4
.proc	sqlite3_limit
	.global sqlite3_limit
	.type	sqlite3_limit, @function
sqlite3_limit:
.LFB1226:
	l.sw    	-4(r1),r2	 # SI store
.LCFI4366:
	l.addi  	r11,r0,-1	 # move immediate I
	l.sfgtui	r4,9
.LCFI4367:
	l.bf	.L15254	# delay slot filled
	l.addi  	r1,r1,-4
	l.addi  	r6,r4,20
	l.sfltsi	r5,0
	l.slli  	r6,r6,2
	l.add   	r3,r3,r6
	l.bf	.L15254	# delay slot filled
	l.lwz   	r11,0(r3)	 # SI load
	l.movhi  	r2,hi(aHardLimit)
	l.slli  	r4,r4,2
	l.ori   	r2,r2,lo(aHardLimit)
	l.add   	r4,r4,r2
	l.lwz   	r4,0(r4)	 # SI load
	l.sfles 	r4,r5
	l.bf	.L15255
	l.nop			# nop delay slot
	l.ori   	r4,r5,0	 # move reg to reg
.L15255:
	l.sw    	0(r3),r4	 # SI store
.L15254:
	l.addi	r1,r1,4
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1226:
	.size	sqlite3_limit, .-sqlite3_limit
	.align	4
.proc	sqlite3_open
	.global sqlite3_open
	.type	sqlite3_open, @function
sqlite3_open:
.LFB1228:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4368:
	l.addi  	r1,r1,-4
.LCFI4369:
	l.addi  	r5,r0,6	 # move immediate I
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	openDatabase	# delay slot filled	# sibcall s
	l.addi  	r6,r0,0	 # move immediate I
.LFE1228:
	.size	sqlite3_open, .-sqlite3_open
	.align	4
.proc	sqlite3_open_v2
	.global sqlite3_open_v2
	.type	sqlite3_open_v2, @function
sqlite3_open_v2:
.LFB1229:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4370:
	l.addi  	r1,r1,-4
.LCFI4371:
	l.addi	r1,r1,4
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	openDatabase
	l.nop			# nop delay slot	# sibcall s
.LFE1229:
	.size	sqlite3_open_v2, .-sqlite3_open_v2
	.align	4
.proc	sqlite3_open16
	.global sqlite3_open16
	.type	sqlite3_open16, @function
sqlite3_open16:
.LFB1230:
	l.sw    	-12(r1),r16	 # SI store
.LCFI4372:
	l.ori   	r16,r3,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.sw    	-20(r1),r2	 # SI store
.LCFI4373:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4374:
	l.sw    	-16(r1),r14	 # SI store
.LCFI4375:
	l.sw    	-8(r1),r18	 # SI store
.LCFI4376:
	l.sw    	0(r4),r3	 # SI store
	l.addi  	r1,r1,-20
.LCFI4377:
	l.jal   	sqlite3_initialize	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
	l.sfnei	r11,0
	l.bnf	.L15267	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi	r1,r1,20
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r18,-8(r1)	 # SI load
.L15267:
	l.movhi  	r18,hi(sqlite3one)
	l.jal   	sqlite3ValueNew	# delay slot filled
	l.ori   	r18,r18,lo(sqlite3one)
	l.lbs   	r3,0(r18)	 # extendqisi2_no_sext_mem
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfnei	r3,0
	l.bnf	.L15268	# delay slot filled
	l.addi  	r6,r0,2	 # move immediate I
.L15261:
	l.ori   	r5,r16,0	 # move reg to reg
	l.addi  	r4,r0,-1	 # move immediate I
	l.addi  	r7,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ValueSetStr	# delay slot filled
	l.addi  	r16,r0,7	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.jal   	sqlite3ValueText	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L15262	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.addi  	r5,r0,6	 # move immediate I
	l.jal   	openDatabase	# delay slot filled
	l.addi  	r6,r0,0	 # move immediate I
	l.sfnei	r11,0
	l.bf	.L15262	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.lwz   	r2,0(r2)	 # SI load
	l.lwz   	r2,8(r2)	 # SI load
	l.lwz   	r2,20(r2)	 # SI load
	l.lhz   	r3,58(r2)	 # zero_extendqisi2
	l.andi  	r3,r3,1
	l.sfnei	r3,0
	l.bf	.L15262
	l.nop			# nop delay slot
	l.lbs   	r4,0(r18)	 # extendqisi2_no_sext_mem
	l.sfnei	r4,0
	l.bf	.L15263	# delay slot filled
	l.addi  	r3,r0,2	 # move immediate I
	l.addi  	r3,r0,3	 # move immediate I
.L15263:
	l.sb    	57(r2),r3	    # movqi
.L15262:
	l.jal   	sqlite3ValueFree	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.addi	r1,r1,20
	l.ori   	r4,r16,0	 # move reg to reg
	l.addi  	r3,r0,0	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-20(r1)	 # SI load
	l.lwz   	r14,-16(r1)	 # SI load
	l.lwz   	r16,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r18,-8(r1)	 # SI load
.L15268:
	l.j     	.L15261	# delay slot filled
	l.addi  	r6,r0,3	 # move immediate I
.LFE1230:
	.size	sqlite3_open16, .-sqlite3_open16
	.align	4
.proc	sqlite3_create_collation
	.global sqlite3_create_collation
	.type	sqlite3_create_collation, @function
sqlite3_create_collation:
.LFB1231:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4378:
	l.sw    	-8(r1),r2	 # SI store
.LCFI4379:
	l.addi  	r8,r0,0	 # move immediate I
	l.addi  	r1,r1,-8
.LCFI4380:
	l.jal   	createCollation	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1231:
	.size	sqlite3_create_collation, .-sqlite3_create_collation
	.align	4
.proc	sqlite3_create_collation_v2
	.global sqlite3_create_collation_v2
	.type	sqlite3_create_collation_v2, @function
sqlite3_create_collation_v2:
.LFB1232:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4381:
	l.sw    	-8(r1),r2	 # SI store
.LCFI4382:
	l.addi  	r1,r1,-8
.LCFI4383:
	l.jal   	createCollation	# delay slot filled
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi	r1,r1,8
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1232:
	.size	sqlite3_create_collation_v2, .-sqlite3_create_collation_v2
	.align	4
.proc	sqlite3_create_collation16
	.global sqlite3_create_collation16
	.type	sqlite3_create_collation16, @function
sqlite3_create_collation16:
.LFB1233:
	l.sw    	-28(r1),r2	 # SI store
.LCFI4384:
	l.sw    	-24(r1),r14	 # SI store
.LCFI4385:
	l.sw    	-20(r1),r16	 # SI store
.LCFI4386:
	l.sw    	-16(r1),r18	 # SI store
.LCFI4387:
	l.sw    	-12(r1),r20	 # SI store
.LCFI4388:
	l.sw    	-8(r1),r22	 # SI store
.LCFI4389:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4390:
	l.ori   	r20,r5,0	 # move reg to reg
	l.addi  	r1,r1,-28
.LCFI4391:
	l.addi  	r5,r0,-1	 # move immediate I
	l.ori   	r14,r3,0	 # move reg to reg
	l.ori   	r18,r6,0	 # move reg to reg
	l.jal   	sqlite3Utf16to8	# delay slot filled
	l.ori   	r16,r7,0	 # move reg to reg
	l.ori   	r2,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L15272	# delay slot filled
	l.ori   	r22,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.ori   	r5,r20,0	 # move reg to reg
	l.ori   	r6,r18,0	 # move reg to reg
	l.ori   	r7,r16,0	 # move reg to reg
	l.jal   	createCollation	# delay slot filled
	l.addi  	r8,r0,0	 # move immediate I
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
.L15272:
	l.addi	r1,r1,28
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-28(r1)	 # SI load
	l.lwz   	r14,-24(r1)	 # SI load
	l.lwz   	r16,-20(r1)	 # SI load
	l.lwz   	r18,-16(r1)	 # SI load
	l.lwz   	r20,-12(r1)	 # SI load
	l.j	sqlite3ApiExit	# delay slot filled	# sibcall s
	l.lwz   	r22,-8(r1)	 # SI load
.LFE1233:
	.size	sqlite3_create_collation16, .-sqlite3_create_collation16
	.align	4
.proc	sqlite3_collation_needed
	.global sqlite3_collation_needed
	.type	sqlite3_collation_needed, @function
sqlite3_collation_needed:
.LFB1234:
	l.sw    	-4(r1),r2	 # SI store
.LCFI4392:
	l.addi  	r1,r1,-4
.LCFI4393:
	l.addi  	r11,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.sw    	192(r3),r5	 # SI store
	l.sw    	196(r3),r11	 # SI store
	l.sw    	200(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1234:
	.size	sqlite3_collation_needed, .-sqlite3_collation_needed
	.align	4
.proc	sqlite3_collation_needed16
	.global sqlite3_collation_needed16
	.type	sqlite3_collation_needed16, @function
sqlite3_collation_needed16:
.LFB1235:
	l.sw    	-4(r1),r2	 # SI store
.LCFI4394:
	l.addi  	r1,r1,-4
.LCFI4395:
	l.addi  	r11,r0,0	 # move immediate I
	l.addi	r1,r1,4
	l.sw    	192(r3),r11	 # SI store
	l.sw    	196(r3),r5	 # SI store
	l.sw    	200(r3),r4	 # SI store
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-4(r1)	 # SI load
.LFE1235:
	.size	sqlite3_collation_needed16, .-sqlite3_collation_needed16
	.align	4
.proc	sqlite3_global_recover
	.global sqlite3_global_recover
	.type	sqlite3_global_recover, @function
sqlite3_global_recover:
.LFB1236:
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE1236:
	.size	sqlite3_global_recover, .-sqlite3_global_recover
	.align	4
.proc	sqlite3_get_autocommit
	.global sqlite3_get_autocommit
	.type	sqlite3_get_autocommit, @function
sqlite3_get_autocommit:
.LFB1237:
	l.jr    	r9	# delay slot filled
	l.lbz   	r11,28(r3)	 # zero_extendqisi2
.LFE1237:
	.size	sqlite3_get_autocommit, .-sqlite3_get_autocommit
	.align	4
.proc	sqlite3_thread_cleanup
	.global sqlite3_thread_cleanup
	.type	sqlite3_thread_cleanup, @function
sqlite3_thread_cleanup:
.LFB1238:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE1238:
	.size	sqlite3_thread_cleanup, .-sqlite3_thread_cleanup
	.align	4
.proc	sqlite3_sleep
	.global sqlite3_sleep
	.type	sqlite3_sleep, @function
sqlite3_sleep:
.LFB1239:
	l.sw    	-8(r1),r14	 # SI store
.LCFI4396:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4397:
	l.sw    	-12(r1),r2	 # SI store
.LCFI4398:
	l.ori   	r14,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI4399:
	l.jal   	sqlite3_vfs_find	# delay slot filled
	l.addi  	r3,r0,0	 # move immediate I
	l.sfeqi	r11,0
	l.bf	.L15280	# delay slot filled
	l.addi  	r2,r0,1000	 # move immediate I
	l.ori   	r3,r11,0	 # move reg to reg
	l.lwz   	r5,60(r11)	 # SI load
	l.jalr  	r5	# delay slot filled
	l.mul   	r4,r14,r2
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	__divsi3	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
.L15280:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1239:
	.size	sqlite3_sleep, .-sqlite3_sleep
	.align	4
.proc	sqlite3_extended_result_codes
	.global sqlite3_extended_result_codes
	.type	sqlite3_extended_result_codes, @function
sqlite3_extended_result_codes:
.LFB1240:
	l.sfeqi	r4,0
	l.bf	.L15283	# delay slot filled
	l.addi  	r5,r0,255	 # move immediate I
	l.addi  	r5,r0,-1	 # move immediate I
.L15283:
	l.sw    	24(r3),r5	 # SI store
	l.jr    	r9	# delay slot filled
	l.addi  	r11,r0,0	 # move immediate I
.LFE1240:
	.size	sqlite3_extended_result_codes, .-sqlite3_extended_result_codes
	.align	4
.proc	sqlite3_file_control
	.global sqlite3_file_control
	.type	sqlite3_file_control, @function
sqlite3_file_control:
.LFB1241:
	l.sw    	-24(r1),r16	 # SI store
.LCFI4400:
	l.sw    	-16(r1),r20	 # SI store
.LCFI4401:
	l.sw    	-12(r1),r22	 # SI store
.LCFI4402:
	l.sw    	-8(r1),r24	 # SI store
.LCFI4403:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4404:
	l.sw    	-32(r1),r2	 # SI store
.LCFI4405:
	l.sw    	-28(r1),r14	 # SI store
.LCFI4406:
	l.sw    	-20(r1),r18	 # SI store
.LCFI4407:
	l.ori   	r16,r4,0	 # move reg to reg
	l.addi  	r1,r1,-32
.LCFI4408:
	l.ori   	r20,r3,0	 # move reg to reg
	l.ori   	r24,r5,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L15286	# delay slot filled
	l.ori   	r22,r6,0	 # move reg to reg
	l.lwz   	r18,4(r3)	 # SI load
	l.sflesi	r18,0
	l.bf	.L15287	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.j     	.L15289	# delay slot filled
	l.lwz   	r14,8(r3)	 # SI load
.L15295:
	l.sflts 	r2,r18
	l.bnf	.L15287
	l.nop			# nop delay slot
.L15289:
	l.lwz   	r3,0(r14)	 # SI load
	l.ori   	r4,r16,0	 # move reg to reg
	l.jal   	strcmp	# delay slot filled
	l.addi  	r14,r14,24
	l.sfeqi	r11,0
	l.bnf	.L15295	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
.L15288:
	l.sfges 	r2,r18
	l.bf	.L15287	# delay slot filled
	l.add   	r4,r2,r2
	l.lwz   	r3,8(r20)	 # SI load
	l.add   	r2,r4,r2
	l.slli  	r2,r2,3
	l.add   	r2,r3,r2
	l.lwz   	r2,4(r2)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L15287
	l.nop			# nop delay slot
	l.lwz   	r3,4(r2)	 # SI load
	l.lwz   	r4,0(r2)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.sw    	4(r3),r4	 # SI store
	l.lwz   	r3,56(r2)	 # SI load
	l.lwz   	r2,0(r3)	 # SI load
	l.sfeqi	r2,0
	l.bf	.L15287	# delay slot filled
	l.ori   	r4,r24,0	 # move reg to reg
	l.lwz   	r2,40(r2)	 # SI load
	l.addi	r1,r1,32
	l.ori   	r5,r22,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.lwz   	r24,-8(r1)	 # SI load
	l.jr	r2		# sibcall r
	l.lwz	r2,-32(r1)

.L15287:
	l.addi	r1,r1,32
	l.addi  	r11,r0,1	 # move immediate I
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-32(r1)	 # SI load
	l.lwz   	r14,-28(r1)	 # SI load
	l.lwz   	r16,-24(r1)	 # SI load
	l.lwz   	r18,-20(r1)	 # SI load
	l.lwz   	r20,-16(r1)	 # SI load
	l.lwz   	r22,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r24,-8(r1)	 # SI load
.L15286:
	l.lwz   	r18,4(r3)	 # SI load
	l.j     	.L15288	# delay slot filled
	l.ori   	r2,r4,0	 # move reg to reg
.LFE1241:
	.size	sqlite3_file_control, .-sqlite3_file_control
	.align	4
.proc	sqlite3_test_control
	.global sqlite3_test_control
	.type	sqlite3_test_control, @function
sqlite3_test_control:
.LFB1242:
	l.sw    	-40(r1),r2	 # SI store
.LCFI4409:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4410:
	l.sw    	-36(r1),r14	 # SI store
.LCFI4411:
	l.sw    	-32(r1),r16	 # SI store
.LCFI4412:
	l.sw    	-28(r1),r18	 # SI store
.LCFI4413:
	l.sw    	-24(r1),r20	 # SI store
.LCFI4414:
	l.sw    	-20(r1),r22	 # SI store
.LCFI4415:
	l.sw    	-16(r1),r24	 # SI store
.LCFI4416:
	l.sw    	-12(r1),r26	 # SI store
.LCFI4417:
	l.sw    	-8(r1),r28	 # SI store
.LCFI4418:
	l.addi  	r3,r3,-5
	l.addi  	r1,r1,-44
.LCFI4419:
	l.sfgtui	r3,6
	l.bnf	.L15322	# delay slot filled
	l.addi  	r2,r1,44
.L15315:
	l.addi  	r14,r0,0	 # move immediate I
.L15297:
	l.addi	r1,r1,44
.L15328:
	l.ori   	r11,r14,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-40(r1)	 # SI load
	l.lwz   	r14,-36(r1)	 # SI load
	l.lwz   	r16,-32(r1)	 # SI load
	l.lwz   	r18,-28(r1)	 # SI load
	l.lwz   	r20,-24(r1)	 # SI load
	l.lwz   	r22,-20(r1)	 # SI load
	l.lwz   	r24,-16(r1)	 # SI load
	l.lwz   	r26,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r28,-8(r1)	 # SI load
.L15322:
	l.movhi  	r4,hi(.L15304)
	l.slli  	r3,r3,2
	l.ori   	r4,r4,lo(.L15304)
	l.add   	r3,r3,r4
	l.lwz   	r3,0(r3)	 # SI load
	l.jr    	r3
	l.nop			# nop delay slot
	.section	.rodata
	.align	4
	.align	4
.L15304:
	.word	.L15298
	.word	.L15299
	.word	.L15300
	.word	.L15301
	.word	.L15315
	.word	.L15302
	.word	.L15303
	.section .text
.L15298:
	l.movhi  	r3,hi(sqlite3SavedPrng)
	l.movhi  	r4,hi(sqlite3Prng)
	l.ori   	r3,r3,lo(sqlite3SavedPrng)
	l.ori   	r4,r4,lo(sqlite3Prng)
	l.addi  	r5,r0,260	 # move immediate I
	l.jal   	memcpy	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L15328	# delay slot filled
	l.addi	r1,r1,44
.L15299:
	l.movhi  	r3,hi(sqlite3Prng)
	l.movhi  	r4,hi(sqlite3SavedPrng)
	l.ori   	r3,r3,lo(sqlite3Prng)
	l.ori   	r4,r4,lo(sqlite3SavedPrng)
	l.addi  	r5,r0,260	 # move immediate I
	l.jal   	memcpy	# delay slot filled
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L15328	# delay slot filled
	l.addi	r1,r1,44
.L15300:
	l.movhi  	r2,hi(sqlite3Prng)
	l.addi  	r5,r0,0	 # movqi: move immediate
	l.ori   	r2,r2,lo(sqlite3Prng)
	l.addi  	r14,r0,0	 # move immediate I
	l.j     	.L15297	# delay slot filled
	l.sb    	0(r2),r5	    # movqi
.L15301:
	l.lwz   	r22,0(r2)	 # SI load
	l.lwz   	r16,4(r2)	 # SI load
	l.ori   	r3,r22,0	 # move reg to reg
	l.jal   	sqlite3BitvecCreate	# delay slot filled
	l.addi  	r2,r22,7
	l.srai  	r3,r2,31
	l.ori   	r24,r11,0	 # move reg to reg
	l.andi  	r3,r3,7
	l.add   	r2,r3,r2
	l.srai  	r2,r2,3
	l.addi  	r2,r2,1
	l.jal   	sqlite3_malloc	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.sub   	r3,r0,r11
	l.or    	r3,r11,r3
	l.sfgesi	r3,0
	l.bnf	.L15323	# delay slot filled
	l.ori   	r18,r11,0	 # move reg to reg
.L15318:
	l.addi  	r14,r0,-1	 # move immediate I
.L15305:
	l.jal   	sqlite3_free	# delay slot filled
	l.ori   	r3,r18,0	 # move reg to reg
	l.jal   	sqlite3BitvecDestroy	# delay slot filled
	l.ori   	r3,r24,0	 # move reg to reg
	l.j     	.L15328	# delay slot filled
	l.addi	r1,r1,44
.L15302:
	l.movhi  	r3,hi(sqlite3Hooks)
	l.lwz   	r4,4(r2)	 # SI load
	l.ori   	r3,r3,lo(sqlite3Hooks)
	l.lwz   	r2,0(r2)	 # SI load
	l.addi  	r14,r0,0	 # move immediate I
	l.sw    	4(r3),r4	 # SI store
	l.j     	.L15297	# delay slot filled
	l.sw    	0(r3),r2	 # SI store
.L15303:
	l.lwz   	r3,0(r2)	 # SI load
	l.movhi  	r2,hi(sqlite3PendingByte)
	l.sfeqi	r3,0
	l.ori   	r2,r2,lo(sqlite3PendingByte)
	l.bf	.L15297	# delay slot filled
	l.lwz   	r14,0(r2)	 # SI load
	l.j     	.L15297	# delay slot filled
	l.sw    	0(r2),r3	 # SI store
.L15323:
	l.sub   	r14,r0,r24
	l.or    	r14,r24,r14
	l.xori  	r14,r14,0xffff
	l.srli  	r14,r14,31
	l.sfnei	r14,0
	l.bf	.L15318	# delay slot filled
	l.ori   	r4,r14,0	 # move reg to reg
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r5,r2,0	 # move reg to reg
	l.jal   	memset	# delay slot filled
	l.addi  	r26,r0,1	 # move immediate I
.L15306:
	l.slli  	r2,r14,2
.L15329:
	l.add   	r2,r16,r2
	l.lwz   	r2,0(r2)	 # SI load
	l.sfnei	r2,0
	l.bnf	.L15324	# delay slot filled
	l.sfgtui	r2,5
	l.bnf	.L15325	# delay slot filled
	l.sll   	r3,r26,r2
	l.addi  	r3,r0,4	 # move immediate I
.L15330:
	l.ori   	r4,r1,0	 # move reg to reg
	l.jal   	sqlite3_randomness	# delay slot filled
	l.addi  	r20,r0,2	 # move immediate I
.L15309:
	l.addi  	r5,r14,1
	l.slli  	r5,r5,2
	l.add   	r5,r16,r5
	l.lwz   	r6,0(r5)	 # SI load
	l.addi  	r6,r6,-1
	l.sfgtsi	r6,0
	l.bnf	.L15310	# delay slot filled
	l.sw    	0(r5),r6	 # SI store
	l.addi  	r20,r0,0	 # move immediate I
.L15310:
	l.movhi 	r5,hi(2147418112)	 # move immediate M
	l.lwz   	r3,0(r1)	 # SI load
	l.ori   	r5,r5,65535
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	__modsi3	# delay slot filled
	l.and   	r3,r3,r5
	l.andi  	r3,r2,1
	l.sfeqi	r3,0
	l.bf	.L15311	# delay slot filled
	l.sw    	0(r1),r11	 # SI store
	l.addi  	r11,r11,1
	l.sfeqi	r2,5
	l.srai  	r2,r11,3
	l.andi  	r11,r11,7
	l.add   	r2,r18,r2
	l.sll   	r11,r26,r11
	l.lbz   	r3,0(r2)	 # zero_extendqisi2
	l.or    	r11,r3,r11
	l.bnf	.L15326	# delay slot filled
	l.sb    	0(r2),r11	    # movqi
	l.j     	.L15306	# delay slot filled
	l.add   	r14,r14,r20
.L15325:
	l.andi  	r3,r3,38
	l.sfnei	r3,0
	l.bnf	.L15330	# delay slot filled
	l.addi  	r3,r0,4	 # move immediate I
	l.addi  	r5,r14,2
	l.addi  	r6,r14,3
	l.slli  	r5,r5,2
	l.slli  	r6,r6,2
	l.addi  	r20,r0,4	 # move immediate I
	l.add   	r5,r16,r5
	l.add   	r6,r16,r6
	l.lwz   	r3,0(r5)	 # SI load
	l.addi  	r3,r3,-1
	l.sw    	0(r1),r3	 # SI store
	l.lwz   	r7,0(r5)	 # SI load
	l.lwz   	r3,0(r6)	 # SI load
	l.add   	r3,r7,r3
	l.j     	.L15309	# delay slot filled
	l.sw    	0(r5),r3	 # SI store
.L15311:
	l.addi  	r11,r11,1
	l.ori   	r3,r24,0	 # move reg to reg
	l.srai  	r2,r11,3
	l.andi  	r11,r11,7
	l.add   	r14,r14,r20
	l.add   	r2,r18,r2
	l.sll   	r11,r26,r11
	l.lbz   	r5,0(r2)	 # zero_extendqisi2
	l.xori  	r11,r11,0x00ff
	l.and   	r11,r5,r11
	l.sb    	0(r2),r11	    # movqi
	l.lwz   	r4,0(r1)	 # SI load
	l.jal   	sqlite3BitvecClear	# delay slot filled
	l.addi  	r4,r4,1
	l.j     	.L15329	# delay slot filled
	l.slli  	r2,r14,2
.L15324:
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.addi  	r4,r22,1
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.ori   	r3,r24,0	 # move reg to reg
	l.ori   	r4,r2,0	 # move reg to reg
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.ori   	r20,r11,0	 # move reg to reg
	l.add   	r3,r20,r16
	l.lwz   	r14,0(r24)	 # SI load
	l.addi  	r2,r0,1	 # move immediate I
	l.sub   	r14,r14,r22
	l.add   	r11,r3,r11
	l.sw    	0(r1),r2	 # SI store
	l.sflesi	r22,0
	l.bnf	.L15314	# delay slot filled
	l.add   	r14,r14,r11
	l.j     	.L15305
	l.nop			# nop delay slot
.L15327:
	l.sfges 	r22,r2
	l.bnf	.L15305	# delay slot filled
	l.sw    	0(r1),r2	 # SI store
.L15314:
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3BitvecTest	# delay slot filled
	l.ori   	r4,r2,0	 # move reg to reg
	l.srai  	r4,r2,3
	l.andi  	r3,r2,7
	l.add   	r4,r18,r4
	l.lbz   	r4,0(r4)	 # zero_extendqisi2
	l.sra   	r3,r4,r3
	l.andi  	r3,r3,1
	l.sfne 	r3,r11
	l.bnf	.L15327	# delay slot filled
	l.addi  	r2,r2,1
	l.addi  	r2,r2,-1
	l.j     	.L15305	# delay slot filled
	l.ori   	r14,r2,0	 # move reg to reg
.L15326:
	l.lwz   	r4,0(r1)	 # SI load
	l.ori   	r3,r24,0	 # move reg to reg
	l.jal   	sqlite3BitvecSet	# delay slot filled
	l.addi  	r4,r4,1
	l.sfnei	r11,0
	l.bf	.L15318
	l.nop			# nop delay slot
	l.j     	.L15306	# delay slot filled
	l.add   	r14,r14,r20
.LFE1242:
	.size	sqlite3_test_control, .-sqlite3_test_control
	.align	4
.proc	doubleToByte
	.global doubleToByte
	.type	doubleToByte, @function
doubleToByte:
.LFB1243:
	l.sfeqi	r5,0
	l.bf	.L15334
	l.nop			# nop delay slot
	l.addi  	r3,r3,7
.L15333:
	l.lbz   	r6,0(r4)	 # zero_extendqisi2
	l.addi  	r5,r5,-1
	l.sb    	0(r3),r6	    # movqi
	l.addi  	r4,r4,1
	l.sfnei	r5,0
	l.bf	.L15333	# delay slot filled
	l.addi  	r3,r3,-1
.L15334:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE1243:
	.size	doubleToByte, .-doubleToByte
	.align	4
.proc	BytesFromInt
	.global BytesFromInt
	.type	BytesFromInt, @function
BytesFromInt:
.LFB1244:
	l.sw    	-8(r1),r14	 # SI store
.LCFI4420:
	l.ori   	r14,r4,0	 # move reg to reg
	l.sw    	-12(r1),r2	 # SI store
.LCFI4421:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4422:
	l.ori   	r2,r3,0	 # move reg to reg
	l.addi  	r1,r1,-12
.LCFI4423:
	l.addi  	r4,r0,1	 # move immediate I
	l.jal   	calloc	# delay slot filled
	l.ori   	r3,r14,0	 # move reg to reg
	l.sfeqi	r14,0
	l.bf	.L15337
	l.nop			# nop delay slot
	l.addi  	r6,r0,0	 # move immediate I
	l.addi  	r4,r14,-1
	l.ori   	r5,r6,0	 # move reg to reg
.L15338:
	l.sub   	r6,r4,r6
	l.addi  	r5,r5,1
	l.add   	r3,r11,r6
	l.sfne 	r5,r14
	l.sb    	0(r3),r2	    # movqi
	l.ori   	r6,r5,0	 # move reg to reg
	l.bf	.L15338	# delay slot filled
	l.srli  	r2,r2,8
.L15337:
	l.addi	r1,r1,12
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r14,-8(r1)	 # SI load
.LFE1244:
	.size	BytesFromInt, .-BytesFromInt
	.align	4
.proc	BytesFromDouble
	.global BytesFromDouble
	.type	BytesFromDouble, @function
BytesFromDouble:
.LFB1245:
	l.sw    	-8(r1),r2	 # SI store
.LCFI4424:
	l.sw    	-4(r1),r9	 # SI store
.LCFI4425:
	l.addi  	r1,r1,-16
.LCFI4426:
	l.ori   	r2,r5,0	 # move reg to reg
		l.sw    	0(r1), r3
		l.sw    	4(r1), r4
	l.ori   	r3,r5,0	 # move reg to reg
	l.jal   	calloc	# delay slot filled
	l.addi  	r4,r0,1	 # move immediate I
	l.sfeqi	r2,0
	l.bf	.L15341
	l.nop			# nop delay slot
	l.ori   	r4,r1,0	 # move reg to reg
	l.addi  	r3,r11,7
.L15342:
	l.lbz   	r5,0(r4)	 # zero_extendqisi2
	l.addi  	r2,r2,-1
	l.sb    	0(r3),r5	    # movqi
	l.addi  	r4,r4,1
	l.sfnei	r2,0
	l.bf	.L15342	# delay slot filled
	l.addi  	r3,r3,-1
.L15341:
	l.addi	r1,r1,16
	l.lwz   	r9,-4(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r2,-8(r1)	 # SI load
.LFE1245:
	.size	BytesFromDouble, .-BytesFromDouble
	.align	4
.proc	smemcpy
	.global smemcpy
	.type	smemcpy, @function
smemcpy:
.LFB1246:
	l.sfeqi	r5,0
	l.bf	.L15347
	l.nop			# nop delay slot
	l.addi  	r6,r0,0	 # move immediate I
.L15346:
	l.add   	r8,r4,r6
	l.add   	r7,r3,r6
	l.lbz   	r8,0(r8)	 # zero_extendqisi2
	l.addi  	r6,r6,1
	l.sfne 	r6,r5
	l.bf	.L15346	# delay slot filled
	l.sb    	0(r7),r8	    # movqi
.L15347:
	l.jr    	r9
	l.nop			# nop delay slot
.LFE1246:
	.size	smemcpy, .-smemcpy
	.section	.rodata.str1.1
.LC523:
	.string	"value = %d \n"
.LC524:
	.string	"value = %f \n"
.LC525:
	.string	"value = "
.LC526:
	.string	"unknown data type \n"
	.section	.rodata.cst4
	.align	4
.LC527:
	.long	2147483647
	.section .text
	.align	4
.proc	sqlite3_sExec
	.global sqlite3_sExec
	.type	sqlite3_sExec, @function
sqlite3_sExec:
.LFB1247:
	l.sw    	-44(r1),r2	 # SI store
.LCFI4427:
	l.sw    	-12(r1),r28	 # SI store
.LCFI4428:
	l.addi  	r2,r0,0	 # move immediate I
	l.sw    	-4(r1),r9	 # SI store
.LCFI4429:
	l.sw    	-40(r1),r14	 # SI store
.LCFI4430:
	l.sw    	-36(r1),r16	 # SI store
.LCFI4431:
	l.sw    	-32(r1),r18	 # SI store
.LCFI4432:
	l.sw    	-28(r1),r20	 # SI store
.LCFI4433:
	l.sw    	-24(r1),r22	 # SI store
.LCFI4434:
	l.sw    	-20(r1),r24	 # SI store
.LCFI4435:
	l.sw    	-16(r1),r26	 # SI store
.LCFI4436:
	l.sw    	-8(r1),r30	 # SI store
.LCFI4437:
	l.addi  	r1,r1,-108
.LCFI4438:
	l.ori   	r28,r4,0	 # move reg to reg
	l.sw    	56(r1),r2	 # SI store
	l.sw    	16(r1),r3	 # SI store
	l.sw    	24(r1),r5	 # SI store
	l.sw    	44(r1),r6	 # SI store
	l.sfeq 	r4,r2
	l.bf	.L15415	# delay slot filled
	l.sw    	52(r1),r7	 # SI store
.L15350:
	l.addi  	r4,r0,0	 # move immediate I
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r26,r4,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.ori   	r5,r4,0	 # move reg to reg
	l.sw    	36(r1),r26	 # SI store
.L15409:
	l.lbs   	r12,0(r28)	 # extendqisi2_no_sext_mem
	l.sfnei	r12,0
	l.bnf	.L15416	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L15429:
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r28,0	 # move reg to reg
	l.addi  	r5,r0,-1	 # move immediate I
	l.addi  	r6,r1,56
	l.addi  	r7,r1,60
	l.jal   	sqlite3_prepare	# delay slot filled
	l.sw    	56(r1),r2	 # SI store
	l.sfne 	r11,r2
	l.bf	.L15352	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.lwz   	r3,56(r1)	 # SI load
	l.sfne 	r3,r2
	l.bnf	.L15417	# delay slot filled
	l.ori   	r30,r11,0	 # move reg to reg
	l.lwz   	r24,108(r3)	 # SI load
	l.sw    	28(r1),r11	 # SI store
	l.slli  	r6,r24,3
	l.slli  	r4,r24,2
	l.addi  	r6,r6,1
	l.sw    	40(r1),r4	 # SI store
	l.sw    	48(r1),r6	 # SI store
	l.sw    	20(r1),r11	 # SI store
.L15379:
	l.jal   	sqlite3_step
	l.nop			# nop delay slot
	l.lwz   	r5,24(r1)	 # SI load
	l.sfeqi	r5,0
	l.bf	.L15355	# delay slot filled
	l.ori   	r26,r11,0	 # move reg to reg
	l.sfeqi	r11,100
	l.bf	.L15356	# delay slot filled
	l.sub   	r2,r0,r30
	l.or    	r2,r2,r30
	l.sfltsi	r2,0
	l.bnf	.L15418	# delay slot filled
	l.xori  	r2,r11,101
.L15357:
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.lwz   	r3,56(r1)	 # SI load
	l.addi  	r3,r0,0	 # move immediate I
	l.ori   	r26,r11,0	 # move reg to reg
	l.sfeqi	r11,17
	l.bf	.L15380	# delay slot filled
	l.sw    	56(r1),r3	 # SI store
	l.lwz   	r28,60(r1)	 # SI load
	l.movhi  	r4,hi(sqlite3CtypeMap)
	l.lbz   	r2,0(r28)	 # zero_extendqisi2
	l.ori   	r4,r4,lo(sqlite3CtypeMap)
	l.add   	r2,r2,r4
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfeq 	r2,r3
	l.bf	.L15380	# delay slot filled
	l.sw    	36(r1),r2	 # SI store
	l.addi  	r28,r28,1
.L15427:
	l.movhi  	r5,hi(sqlite3CtypeMap)
	l.lbz   	r2,0(r28)	 # zero_extendqisi2
	l.ori   	r5,r5,lo(sqlite3CtypeMap)
	l.add   	r2,r2,r5
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.andi  	r2,r2,1
	l.sfnei	r2,0
	l.bf	.L15427	# delay slot filled
	l.addi  	r28,r28,1
	l.addi  	r28,r28,-1
	l.sw    	36(r1),r2	 # SI store
.L15380:
	l.sflesi	r24,0
	l.bf	.L15428	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r14,28(r1)	 # SI load
	l.addi  	r2,r0,0	 # move immediate I
.L15383:
	l.lwz   	r3,0(r14)	 # SI load
	l.jal   	free	# delay slot filled
	l.addi  	r2,r2,1
	l.sflts 	r2,r24
	l.bf	.L15383	# delay slot filled
	l.addi  	r14,r14,4
	l.lwz   	r3,16(r1)	 # SI load
.L15428:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.ori   	r4,r16,0	 # move reg to reg
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,20(r1)	 # SI load
	l.sfeqi	r26,0
	l.bf	.L15409
	l.nop			# nop delay slot
.L15352:
	l.sfnei	r26,17
	l.bf	.L15394	# delay slot filled
	l.lwz   	r2,36(r1)	 # SI load
	l.sfnei	r2,0
	l.bf	.L15395	# delay slot filled
	l.addi  	r3,r0,1	 # move immediate I
	l.sw    	36(r1),r3	 # SI store
	l.lbs   	r12,0(r28)	 # extendqisi2_no_sext_mem
	l.sfnei	r12,0
	l.bf	.L15429	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
.L15416:
	l.sw    	20(r1),r12	 # SI store
.L15360:
	l.lwz   	r2,56(r1)	 # SI load
.L15425:
	l.sfeqi	r2,0
	l.bf	.L15430	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r3,16(r1)	 # SI load
.L15430:
	l.jal   	sqlite3DbFree	# delay slot filled
	l.lwz   	r4,20(r1)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	sqlite3ApiExit	# delay slot filled
	l.ori   	r4,r26,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L15386	# delay slot filled
	l.ori   	r2,r11,0	 # move reg to reg
	l.jal   	sqlite3_errcode	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.sfne 	r11,r2
	l.bnf	.L15419
	l.nop			# nop delay slot
.L15386:
	l.lwz   	r4,52(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L15387	# delay slot filled
	l.addi  	r5,r0,0	 # move immediate I
	l.sw    	0(r4),r5	 # SI store
.L15387:
	l.addi	r1,r1,108
.L15426:
	l.ori   	r11,r2,0	 # move reg to reg
	l.lwz   	r9,-4(r1)	 # SI load
	l.lwz   	r2,-44(r1)	 # SI load
	l.lwz   	r14,-40(r1)	 # SI load
	l.lwz   	r16,-36(r1)	 # SI load
	l.lwz   	r18,-32(r1)	 # SI load
	l.lwz   	r20,-28(r1)	 # SI load
	l.lwz   	r22,-24(r1)	 # SI load
	l.lwz   	r24,-20(r1)	 # SI load
	l.lwz   	r26,-16(r1)	 # SI load
	l.lwz   	r28,-12(r1)	 # SI load
	l.jr    	r9	# delay slot filled
	l.lwz   	r30,-8(r1)	 # SI load
.L15418:
	l.sub   	r7,r0,r2
	l.or    	r2,r7,r2
	l.sfltsi	r2,0
	l.bf	.L15357	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lwz   	r2,12(r3)	 # SI load
	l.andi  	r2,r2,256
	l.sfnei	r2,0
	l.bnf	.L15357
	l.nop			# nop delay slot
.L15431:
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.lwz   	r4,48(r1)	 # SI load
	l.lwz   	r4,40(r1)	 # SI load
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	sqlite3DbMallocZero	# delay slot filled
	l.sw    	20(r1),r11	 # SI store
	l.lwz   	r4,20(r1)	 # SI load
	l.sfeqi	r4,0
	l.bf	.L15360	# delay slot filled
	l.ori   	r16,r11,0	 # move reg to reg
	l.sflesi	r24,0
	l.bf	.L15361	# delay slot filled
	l.addi  	r2,r0,0	 # move immediate I
	l.ori   	r14,r4,0	 # move reg to reg
.L15362:
	l.ori   	r4,r2,0	 # move reg to reg
	l.lwz   	r3,56(r1)	 # SI load
	l.jal   	sqlite3_column_name	# delay slot filled
	l.addi  	r2,r2,1
	l.sw    	0(r14),r11	 # SI store
	l.sflts 	r2,r24
	l.bf	.L15362	# delay slot filled
	l.addi  	r14,r14,4
.L15361:
	l.jal   	rand	# delay slot filled
	l.addi  	r30,r0,1	 # move immediate I
	l.movhi  	r5,hi(.LC527)
	l.ori   	r3,r11,0	 # move reg to reg
	l.ori   	r5,r5,lo(.LC527)
	l.jal   	__modsi3	# delay slot filled
	l.lwz   	r4,0(r5)	 # SI load
	l.sfnei	r26,100
	l.bnf	.L15390	# delay slot filled
	l.sw    	32(r1),r11	 # SI store
.L15363:
	l.lwz   	r3,44(r1)	 # SI load
	l.ori   	r4,r24,0	 # move reg to reg
	l.lwz   	r5,28(r1)	 # SI load
	l.lwz   	r6,20(r1)	 # SI load
	l.lwz   	r7,32(r1)	 # SI load
	l.lwz   	r2,24(r1)	 # SI load
	l.jalr  	r2	# delay slot filled
	l.ori   	r8,r16,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bnf	.L15420	# delay slot filled
	l.lwz   	r3,56(r1)	 # SI load
.L15355:
	l.sfnei	r26,100
	l.bf	.L15357	# delay slot filled
	l.lwz   	r3,56(r1)	 # SI load
	l.j     	.L15379
	l.nop			# nop delay slot
.L15356:
	l.sfnei	r30,0
	l.bnf	.L15431	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.jal   	rand	# delay slot filled
	l.movhi  	r2,hi(.LC527)
	l.ori   	r2,r2,lo(.LC527)
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	__modsi3	# delay slot filled
	l.lwz   	r4,0(r2)	 # SI load
	l.sw    	32(r1),r11	 # SI store
.L15390:
	l.lwz   	r2,20(r1)	 # SI load
	l.lwz   	r3,40(r1)	 # SI load
	l.sflesi	r24,0
	l.add   	r2,r2,r3
	l.bf	.L15363	# delay slot filled
	l.sw    	28(r1),r2	 # SI store
	l.ori   	r18,r2,0	 # move reg to reg
	l.ori   	r20,r16,0	 # move reg to reg
	l.j     	.L15378	# delay slot filled
	l.addi  	r22,r0,0	 # move immediate I
.L15423:
	l.bf	.L15367	# delay slot filled
	l.sfeqi	r11,1
	l.bf	.L15421	# delay slot filled
	l.movhi  	r2,hi(stderr)
	l.movhi  	r3,hi(.LC526)
	l.ori   	r2,r2,lo(stderr)
	l.ori   	r3,r3,lo(.LC526)
	l.addi  	r4,r0,1	 # move immediate I
	l.addi  	r5,r0,19	 # move immediate I
	l.jal   	fwrite	# delay slot filled
	l.lwz   	r6,0(r2)	 # SI load
	l.lwz   	r2,0(r18)	 # SI load
.L15424:
	l.sfnei	r2,0
	l.bnf	.L15432	# delay slot filled
	l.lwz   	r3,56(r1)	 # SI load
	l.addi  	r22,r22,1
.L15433:
	l.addi  	r18,r18,4
	l.sflts 	r22,r24
	l.bnf	.L15363	# delay slot filled
	l.addi  	r20,r20,4
.L15378:
	l.lwz   	r3,56(r1)	 # SI load
	l.jal   	sqlite3_column_type	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfeqi	r11,2
	l.bnf	.L15423	# delay slot filled
	l.sfeqi	r11,3
	l.addi  	r2,r0,8	 # move immediate I
	l.ori   	r4,r22,0	 # move reg to reg
	l.lwz   	r3,56(r1)	 # SI load
	l.jal   	sqlite3_column_double	# delay slot filled
	l.sw    	0(r20),r2	 # SI store
		l.sw    	8(r1), r11
		l.sw    	8+4(r1), r12
	l.jal   	malloc	# delay slot filled
	l.ori   	r3,r2,0	 # move reg to reg
	l.lwz   	r5,0(r20)	 # SI load
	l.sw    	0(r18),r11	 # SI store
		l.lwz   	r3, 8(r1)
		l.lwz   	r4, 8+4(r1)
	l.jal   	BytesFromDouble
	l.nop			# nop delay slot
	l.lwz   	r4,0(r20)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L15371	# delay slot filled
	l.lwz   	r7,0(r18)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
.L15372:
	l.add   	r2,r3,r6
	l.add   	r5,r7,r6
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.addi  	r6,r6,1
	l.sfne 	r6,r4
	l.bf	.L15372	# delay slot filled
	l.sb    	0(r5),r2	    # movqi
.L15371:
	l.jal   	free
	l.nop			# nop delay slot
	l.movhi  	r3,hi(.LC524)
		l.lwz   	r4, 8(r1)
		l.lwz   	r5, 8+4(r1)
		l.sw    	0(r1), r4
		l.sw    	4(r1), r5
	l.jal   	printf	# delay slot filled
	l.ori   	r3,r3,lo(.LC524)
	l.lwz   	r2,0(r18)	 # SI load
	l.sfnei	r2,0
	l.bf	.L15433	# delay slot filled
	l.addi  	r22,r22,1
	l.addi  	r22,r22,-1
	l.lwz   	r3,56(r1)	 # SI load
.L15432:
	l.jal   	sqlite3_column_type	# delay slot filled
	l.ori   	r4,r22,0	 # move reg to reg
	l.sfeqi	r11,5
	l.bf	.L15433	# delay slot filled
	l.addi  	r22,r22,1
	l.addi  	r22,r22,-1
	l.addi  	r4,r0,1	 # movqi: move immediate
	l.lwz   	r3,16(r1)	 # SI load
	l.addi  	r26,r0,100	 # move immediate I
	l.j     	.L15360	# delay slot filled
	l.sb    	30(r3),r4	    # movqi
.L15421:
	l.addi  	r5,r0,4	 # move immediate I
	l.ori   	r4,r22,0	 # move reg to reg
	l.sw    	0(r20),r5	 # SI store
	l.jal   	sqlite3_column_int	# delay slot filled
	l.lwz   	r3,56(r1)	 # SI load
	l.addi  	r3,r0,4	 # move immediate I
	l.jal   	malloc	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.ori   	r3,r14,0	 # move reg to reg
	l.lwz   	r4,0(r20)	 # SI load
	l.jal   	BytesFromInt	# delay slot filled
	l.sw    	0(r18),r11	 # SI store
	l.lwz   	r4,0(r20)	 # SI load
	l.ori   	r3,r11,0	 # move reg to reg
	l.sfeqi	r4,0
	l.bf	.L15368	# delay slot filled
	l.lwz   	r7,0(r18)	 # SI load
	l.addi  	r6,r0,0	 # move immediate I
.L15369:
	l.add   	r2,r3,r6
	l.add   	r5,r7,r6
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.addi  	r6,r6,1
	l.sfne 	r6,r4
	l.bf	.L15369	# delay slot filled
	l.sb    	0(r5),r2	    # movqi
.L15368:
	l.jal   	free
	l.nop			# nop delay slot
	l.movhi  	r3,hi(.LC523)
	l.sw    	0(r1),r14	 # SI store
	l.jal   	printf	# delay slot filled
	l.ori   	r3,r3,lo(.LC523)
	l.j     	.L15424	# delay slot filled
	l.lwz   	r2,0(r18)	 # SI load
.L15367:
	l.ori   	r4,r22,0	 # move reg to reg
	l.jal   	sqlite3_column_text	# delay slot filled
	l.lwz   	r3,56(r1)	 # SI load
	l.jal   	strlen	# delay slot filled
	l.ori   	r3,r11,0	 # move reg to reg
	l.addi  	r4,r0,1	 # move immediate I
	l.ori   	r3,r11,0	 # move reg to reg
	l.jal   	calloc	# delay slot filled
	l.sw    	0(r20),r11	 # SI store
	l.lwz   	r3,56(r1)	 # SI load
	l.ori   	r4,r22,0	 # move reg to reg
	l.sw    	0(r18),r11	 # SI store
	l.jal   	sqlite3_column_text	# delay slot filled
	l.ori   	r14,r11,0	 # move reg to reg
	l.lwz   	r7,0(r20)	 # SI load
	l.sfeqi	r7,0
	l.bf	.L15373	# delay slot filled
	l.ori   	r6,r11,0	 # move reg to reg
	l.addi  	r5,r0,0	 # move immediate I
.L15374:
	l.add   	r2,r6,r5
	l.add   	r3,r14,r5
	l.lbz   	r2,0(r2)	 # zero_extendqisi2
	l.addi  	r5,r5,1
	l.sfne 	r7,r5
	l.bf	.L15374	# delay slot filled
	l.sb    	0(r3),r2	    # movqi
.L15373:
	l.movhi  	r3,hi(.LC525)
	l.jal   	printf	# delay slot filled
	l.ori   	r3,r3,lo(.LC525)
	l.lwz   	r2,0(r20)	 # SI load
	l.sflesi	r2,0
	l.bf	.L15375
	l.nop			# nop delay slot
	l.addi  	r2,r0,0	 # move immediate I
.L15376:
	l.lwz   	r3,0(r18)	 # SI load
	l.add   	r3,r3,r2
	l.addi  	r2,r2,1
	l.jal   	putchar	# delay slot filled
	l.lbs   	r3,0(r3)	 # extendqisi2_no_sext_mem
	l.lwz   	r3,0(r20)	 # SI load
	l.sfgts 	r3,r2
	l.bf	.L15376
	l.nop			# nop delay slot
.L15375:
	l.jal   	putchar	# delay slot filled
	l.addi  	r3,r0,10	 # move immediate I
	l.j     	.L15424	# delay slot filled
	l.lwz   	r2,0(r18)	 # SI load
.L15417:
	l.j     	.L15409	# delay slot filled
	l.lwz   	r28,60(r1)	 # SI load
.L15420:
	l.jal   	sqlite3VdbeFinalize	# delay slot filled
	l.addi  	r26,r0,4	 # move immediate I
	l.addi  	r5,r0,0	 # move immediate I
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r4,r26,0	 # move reg to reg
	l.jal   	sqlite3Error	# delay slot filled
	l.sw    	56(r1),r5	 # SI store
	l.j     	.L15425	# delay slot filled
	l.lwz   	r2,56(r1)	 # SI load
.L15419:
	l.lwz   	r3,52(r1)	 # SI load
	l.sfeqi	r3,0
	l.bf	.L15387
	l.nop			# nop delay slot
	l.jal   	sqlite3_errmsg	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.lbs   	r3,0(r11)	 # extendqisi2_no_sext_mem
	l.sfeqi	r3,0
	l.bf	.L15388	# delay slot filled
	l.ori   	r4,r11,0	 # move reg to reg
	l.addi  	r4,r4,1
.L15434:
	l.lbs   	r3,0(r4)	 # extendqisi2_no_sext_mem
	l.sfnei	r3,0
	l.bf	.L15434	# delay slot filled
	l.addi  	r4,r4,1
	l.addi  	r4,r4,-1
.L15388:
	l.movhi 	r5,hi(1073676288)	 # move immediate M
	l.sub   	r4,r4,r11
	l.ori   	r5,r5,65535
	l.and   	r16,r4,r5
	l.addi  	r16,r16,1
	l.jal   	sqlite3Malloc	# delay slot filled
	l.ori   	r3,r16,0	 # move reg to reg
	l.lwz   	r3,52(r1)	 # SI load
	l.ori   	r14,r11,0	 # move reg to reg
	l.sfeqi	r11,0
	l.bf	.L15387	# delay slot filled
	l.sw    	0(r3),r11	 # SI store
	l.jal   	sqlite3_errmsg	# delay slot filled
	l.lwz   	r3,16(r1)	 # SI load
	l.ori   	r3,r14,0	 # move reg to reg
	l.ori   	r4,r11,0	 # move reg to reg
	l.jal   	memcpy	# delay slot filled
	l.ori   	r5,r16,0	 # move reg to reg
	l.j     	.L15426	# delay slot filled
	l.addi	r1,r1,108
.L15415:
	l.movhi  	r28,hi(.LC15)
	l.j     	.L15350	# delay slot filled
	l.ori   	r28,r28,lo(.LC15)
.L15395:
	l.addi  	r5,r0,0	 # move immediate I
	l.j     	.L15360	# delay slot filled
	l.sw    	20(r1),r5	 # SI store
.L15394:
	l.addi  	r4,r0,0	 # move immediate I
	l.j     	.L15360	# delay slot filled
	l.sw    	20(r1),r4	 # SI store
.LFE1247:
	.size	sqlite3_sExec, .-sqlite3_sExec
	.global sqlite3_version
	.section	.rodata
	.align	4
	.type	sqlite3_version, @object
	.size	sqlite3_version, 7
sqlite3_version:
	.string	"3.6.14"
	.global sqlite3_temp_directory
	.section .bss
	.align	4
	.type	sqlite3_temp_directory, @object
	.size	sqlite3_temp_directory, 4
sqlite3_temp_directory:
	.zero	4
	.section	.rodata
	.align	4
	.type	sqlite3CtypeMap, @object
	.size	sqlite3CtypeMap, 256
sqlite3CtypeMap:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	12
	.byte	12
	.byte	12
	.byte	12
	.byte	12
	.byte	12
	.byte	12
	.byte	12
	.byte	12
	.byte	12
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	10
	.byte	10
	.byte	10
	.byte	10
	.byte	10
	.byte	10
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	42
	.byte	42
	.byte	42
	.byte	42
	.byte	42
	.byte	42
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	34
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.align	4
	.type	fmtinfo, @object
	.size	fmtinfo, 184
fmtinfo:
	.byte	100
	.byte	10
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.zero	2
	.byte	115
	.byte	0
	.byte	4
	.byte	6
	.byte	0
	.byte	0
	.zero	2
	.byte	103
	.byte	0
	.byte	1
	.byte	4
	.byte	30
	.byte	0
	.zero	2
	.byte	122
	.byte	0
	.byte	4
	.byte	7
	.byte	0
	.byte	0
	.zero	2
	.byte	113
	.byte	0
	.byte	4
	.byte	10
	.byte	0
	.byte	0
	.zero	2
	.byte	81
	.byte	0
	.byte	4
	.byte	11
	.byte	0
	.byte	0
	.zero	2
	.byte	119
	.byte	0
	.byte	4
	.byte	15
	.byte	0
	.byte	0
	.zero	2
	.byte	99
	.byte	0
	.byte	0
	.byte	9
	.byte	0
	.byte	0
	.zero	2
	.byte	111
	.byte	8
	.byte	0
	.byte	1
	.byte	0
	.byte	2
	.zero	2
	.byte	117
	.byte	10
	.byte	0
	.byte	1
	.byte	0
	.byte	0
	.zero	2
	.byte	120
	.byte	16
	.byte	0
	.byte	1
	.byte	16
	.byte	1
	.zero	2
	.byte	88
	.byte	16
	.byte	0
	.byte	1
	.byte	0
	.byte	4
	.zero	2
	.byte	102
	.byte	0
	.byte	1
	.byte	2
	.byte	0
	.byte	0
	.zero	2
	.byte	101
	.byte	0
	.byte	1
	.byte	3
	.byte	30
	.byte	0
	.zero	2
	.byte	69
	.byte	0
	.byte	1
	.byte	3
	.byte	14
	.byte	0
	.zero	2
	.byte	71
	.byte	0
	.byte	1
	.byte	4
	.byte	14
	.byte	0
	.zero	2
	.byte	105
	.byte	10
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.zero	2
	.byte	110
	.byte	0
	.byte	0
	.byte	5
	.byte	0
	.byte	0
	.zero	2
	.byte	37
	.byte	0
	.byte	0
	.byte	8
	.byte	0
	.byte	0
	.zero	2
	.byte	112
	.byte	16
	.byte	0
	.byte	14
	.byte	0
	.byte	1
	.zero	2
	.byte	84
	.byte	0
	.byte	2
	.byte	12
	.byte	0
	.byte	0
	.zero	2
	.byte	83
	.byte	0
	.byte	2
	.byte	13
	.byte	0
	.byte	0
	.zero	2
	.byte	114
	.byte	10
	.byte	3
	.byte	16
	.byte	0
	.byte	0
	.zero	2
	.align	4
	.type	aDigits, @object
	.size	aDigits, 33
aDigits:
	.string	"0123456789ABCDEF0123456789abcdef"
	.align	4
	.type	aPrefix, @object
	.size	aPrefix, 7
aPrefix:
	.string	"-x0"
	.string	"X0"
	.align	4
	.type	zSpaces.6817, @object
	.size	zSpaces.6817, 30
zSpaces.6817:
	.string	"                             "
	.section .data
	.align	4
	.type	sqlite3Config, @object
	.size	sqlite3Config, 204
sqlite3Config:
	.long	1
	.long	1
	.long	0
	.long	2147483646
	.long	100
	.long	500
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.section	.rodata
	.align	4
	.type	aSize.12542, @object
	.size	aSize.12542, 12
aSize.12542:
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	4
	.byte	6
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	4
	.byte	8
	.section .data
	.align	4
	.type	MemJournalMethods, @object
	.size	MemJournalMethods, 52
MemJournalMethods:
	.long	1
	.long	memjrnlClose
	.long	memjrnlRead
	.long	memjrnlWrite
	.long	memjrnlTruncate
	.long	memjrnlSync
	.long	memjrnlFileSize
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.align	4
	.type	sqlite3PendingByte, @object
	.size	sqlite3PendingByte, 4
sqlite3PendingByte:
	.long	1073741824
	.section	.rodata
	.align	4
	.type	aJournalMagic, @object
	.size	aJournalMagic, 8
aJournalMagic:
	.byte	-39
	.byte	-43
	.byte	5
	.byte	-7
	.byte	32
	.byte	-95
	.byte	99
	.byte	-41
	.local	pcache1_g
	.comm	pcache1_g,40,4
	.local	sqlite3Stat
	.comm	sqlite3Stat,72,4
	.align	4
	.type	zeroHdr.9671, @object
	.size	zeroHdr.9671, 28
zeroHdr.9671:
	.zero	28
	.align	4
	.type	sqlite3Utf8Trans1, @object
	.size	sqlite3Utf8Trans1, 64
sqlite3Utf8Trans1:
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	8
	.byte	9
	.byte	10
	.byte	11
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.byte	16
	.byte	17
	.byte	18
	.byte	19
	.byte	20
	.byte	21
	.byte	22
	.byte	23
	.byte	24
	.byte	25
	.byte	26
	.byte	27
	.byte	28
	.byte	29
	.byte	30
	.byte	31
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	8
	.byte	9
	.byte	10
	.byte	11
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	0
	.byte	1
	.byte	0
	.byte	0
	.local	sqlite3SharedCacheList
	.comm	sqlite3SharedCacheList,4,4
	.type	zerobyte.9933, @object
	.size	zerobyte.9933, 1
zerobyte.9933:
	.zero	1
	.align	4
	.type	zMagicHeader, @object
	.size	zMagicHeader, 16
zMagicHeader:
	.string	"SQLite format 3"
	.align	4
	.type	sqlite3UpperToLower, @object
	.size	sqlite3UpperToLower, 256
sqlite3UpperToLower:
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	8
	.byte	9
	.byte	10
	.byte	11
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.byte	16
	.byte	17
	.byte	18
	.byte	19
	.byte	20
	.byte	21
	.byte	22
	.byte	23
	.byte	24
	.byte	25
	.byte	26
	.byte	27
	.byte	28
	.byte	29
	.byte	30
	.byte	31
	.byte	32
	.byte	33
	.byte	34
	.byte	35
	.byte	36
	.byte	37
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	42
	.byte	43
	.byte	44
	.byte	45
	.byte	46
	.byte	47
	.byte	48
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	58
	.byte	59
	.byte	60
	.byte	61
	.byte	62
	.byte	63
	.byte	64
	.byte	97
	.byte	98
	.byte	99
	.byte	100
	.byte	101
	.byte	102
	.byte	103
	.byte	104
	.byte	105
	.byte	106
	.byte	107
	.byte	108
	.byte	109
	.byte	110
	.byte	111
	.byte	112
	.byte	113
	.byte	114
	.byte	115
	.byte	116
	.byte	117
	.byte	118
	.byte	119
	.byte	120
	.byte	121
	.byte	122
	.byte	91
	.byte	92
	.byte	93
	.byte	94
	.byte	95
	.byte	96
	.byte	97
	.byte	98
	.byte	99
	.byte	100
	.byte	101
	.byte	102
	.byte	103
	.byte	104
	.byte	105
	.byte	106
	.byte	107
	.byte	108
	.byte	109
	.byte	110
	.byte	111
	.byte	112
	.byte	113
	.byte	114
	.byte	115
	.byte	116
	.byte	117
	.byte	118
	.byte	119
	.byte	120
	.byte	121
	.byte	122
	.byte	123
	.byte	124
	.byte	125
	.byte	126
	.byte	127
	.byte	-128
	.byte	-127
	.byte	-126
	.byte	-125
	.byte	-124
	.byte	-123
	.byte	-122
	.byte	-121
	.byte	-120
	.byte	-119
	.byte	-118
	.byte	-117
	.byte	-116
	.byte	-115
	.byte	-114
	.byte	-113
	.byte	-112
	.byte	-111
	.byte	-110
	.byte	-109
	.byte	-108
	.byte	-107
	.byte	-106
	.byte	-105
	.byte	-104
	.byte	-103
	.byte	-102
	.byte	-101
	.byte	-100
	.byte	-99
	.byte	-98
	.byte	-97
	.byte	-96
	.byte	-95
	.byte	-94
	.byte	-93
	.byte	-92
	.byte	-91
	.byte	-90
	.byte	-89
	.byte	-88
	.byte	-87
	.byte	-86
	.byte	-85
	.byte	-84
	.byte	-83
	.byte	-82
	.byte	-81
	.byte	-80
	.byte	-79
	.byte	-78
	.byte	-77
	.byte	-76
	.byte	-75
	.byte	-74
	.byte	-73
	.byte	-72
	.byte	-71
	.byte	-70
	.byte	-69
	.byte	-68
	.byte	-67
	.byte	-66
	.byte	-65
	.byte	-64
	.byte	-63
	.byte	-62
	.byte	-61
	.byte	-60
	.byte	-59
	.byte	-58
	.byte	-57
	.byte	-56
	.byte	-55
	.byte	-54
	.byte	-53
	.byte	-52
	.byte	-51
	.byte	-50
	.byte	-49
	.byte	-48
	.byte	-47
	.byte	-46
	.byte	-45
	.byte	-44
	.byte	-43
	.byte	-42
	.byte	-41
	.byte	-40
	.byte	-39
	.byte	-38
	.byte	-37
	.byte	-36
	.byte	-35
	.byte	-34
	.byte	-33
	.byte	-32
	.byte	-31
	.byte	-30
	.byte	-29
	.byte	-28
	.byte	-27
	.byte	-26
	.byte	-25
	.byte	-24
	.byte	-23
	.byte	-22
	.byte	-21
	.byte	-20
	.byte	-19
	.byte	-18
	.byte	-17
	.byte	-16
	.byte	-15
	.byte	-14
	.byte	-13
	.byte	-12
	.byte	-11
	.byte	-10
	.byte	-9
	.byte	-8
	.byte	-7
	.byte	-6
	.byte	-5
	.byte	-4
	.byte	-3
	.byte	-2
	.byte	-1
	.local	sqlite3Hooks
	.comm	sqlite3Hooks,8,4
	.section .data
	.align	4
	.type	mem0, @object
	.size	mem0, 40
mem0:
	.long	62560955
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.local	sqlite3Prng
	.comm	sqlite3Prng,260,4
	.local	sqlite3SavedPrng
	.comm	sqlite3SavedPrng,260,4
	.section	.rodata
	.align	4
	.type	sqlite3one, @object
	.size	sqlite3one, 4
sqlite3one:
	.long	1
	.local	sqlite3GlobalFunctions
	.comm	sqlite3GlobalFunctions,92,4
	.align	4
	.type	sqlite3IsAsciiIdChar, @object
	.size	sqlite3IsAsciiIdChar, 96
sqlite3IsAsciiIdChar:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.align	4
	.type	aCode.21227, @object
	.size	aCode.21227, 119
aCode.21227:
	.byte	62
	.byte	27
	.byte	-118
	.byte	40
	.byte	79
	.byte	42
	.byte	101
	.byte	50
	.byte	33
	.byte	110
	.byte	44
	.byte	45
	.byte	48
	.byte	2
	.byte	47
	.byte	-116
	.byte	39
	.byte	24
	.byte	116
	.byte	16
	.byte	95
	.byte	-120
	.byte	11
	.byte	109
	.byte	-119
	.byte	114
	.byte	6
	.byte	104
	.byte	95
	.byte	-117
	.byte	54
	.byte	9
	.byte	20
	.byte	13
	.byte	115
	.byte	58
	.byte	102
	.byte	96
	.byte	127
	.byte	52
	.byte	51
	.byte	108
	.byte	21
	.byte	21
	.byte	66
	.byte	100
	.byte	3
	.byte	32
	.byte	124
	.byte	123
	.byte	106
	.byte	5
	.byte	95
	.byte	14
	.byte	69
	.byte	72
	.byte	19
	.byte	98
	.byte	48
	.byte	35
	.byte	31
	.byte	105
	.byte	-122
	.byte	90
	.byte	17
	.byte	64
	.byte	41
	.byte	8
	.byte	120
	.byte	107
	.byte	49
	.byte	4
	.byte	30
	.byte	53
	.byte	28
	.byte	-128
	.byte	61
	.byte	125
	.byte	-121
	.byte	126
	.byte	63
	.byte	29
	.byte	55
	.byte	67
	.byte	97
	.byte	103
	.byte	15
	.byte	70
	.byte	36
	.byte	37
	.byte	10
	.byte	38
	.byte	95
	.byte	64
	.byte	64
	.byte	99
	.byte	7
	.byte	117
	.byte	68
	.byte	111
	.byte	43
	.byte	119
	.byte	95
	.byte	48
	.byte	34
	.byte	18
	.byte	71
	.byte	122
	.byte	56
	.byte	95
	.byte	95
	.byte	12
	.byte	57
	.byte	112
	.byte	121
	.byte	59
	.byte	60
	.byte	46
	.byte	113
	.align	4
	.type	aOffset.21226, @object
	.size	aOffset.21226, 238
aOffset.21226:
	.short	0
	.short	2
	.short	2
	.short	8
	.short	9
	.short	14
	.short	16
	.short	20
	.short	23
	.short	25
	.short	25
	.short	29
	.short	33
	.short	36
	.short	41
	.short	46
	.short	48
	.short	53
	.short	54
	.short	59
	.short	62
	.short	65
	.short	67
	.short	69
	.short	78
	.short	81
	.short	86
	.short	95
	.short	96
	.short	101
	.short	105
	.short	109
	.short	117
	.short	122
	.short	128
	.short	136
	.short	142
	.short	152
	.short	159
	.short	162
	.short	162
	.short	165
	.short	167
	.short	167
	.short	171
	.short	176
	.short	179
	.short	184
	.short	189
	.short	194
	.short	197
	.short	203
	.short	206
	.short	210
	.short	217
	.short	223
	.short	223
	.short	226
	.short	229
	.short	233
	.short	234
	.short	238
	.short	244
	.short	248
	.short	255
	.short	261
	.short	273
	.short	279
	.short	288
	.short	290
	.short	296
	.short	301
	.short	303
	.short	310
	.short	315
	.short	320
	.short	326
	.short	332
	.short	337
	.short	341
	.short	344
	.short	350
	.short	354
	.short	361
	.short	363
	.short	370
	.short	372
	.short	374
	.short	383
	.short	387
	.short	393
	.short	399
	.short	407
	.short	412
	.short	412
	.short	428
	.short	435
	.short	442
	.short	443
	.short	450
	.short	454
	.short	458
	.short	462
	.short	466
	.short	469
	.short	471
	.short	473
	.short	479
	.short	483
	.short	491
	.short	495
	.short	500
	.short	508
	.short	511
	.short	516
	.short	521
	.short	527
	.short	531
	.short	536
	.align	4
	.type	aLen.21225, @object
	.size	aLen.21225, 119
aLen.21225:
	.byte	7
	.byte	7
	.byte	5
	.byte	4
	.byte	6
	.byte	4
	.byte	5
	.byte	3
	.byte	6
	.byte	7
	.byte	3
	.byte	6
	.byte	6
	.byte	7
	.byte	7
	.byte	3
	.byte	8
	.byte	2
	.byte	6
	.byte	5
	.byte	4
	.byte	4
	.byte	3
	.byte	10
	.byte	4
	.byte	6
	.byte	11
	.byte	2
	.byte	7
	.byte	5
	.byte	5
	.byte	9
	.byte	6
	.byte	9
	.byte	9
	.byte	7
	.byte	10
	.byte	10
	.byte	4
	.byte	6
	.byte	2
	.byte	3
	.byte	4
	.byte	9
	.byte	2
	.byte	6
	.byte	5
	.byte	6
	.byte	6
	.byte	5
	.byte	6
	.byte	5
	.byte	5
	.byte	7
	.byte	7
	.byte	7
	.byte	3
	.byte	4
	.byte	4
	.byte	7
	.byte	3
	.byte	6
	.byte	4
	.byte	7
	.byte	6
	.byte	12
	.byte	6
	.byte	9
	.byte	4
	.byte	6
	.byte	5
	.byte	4
	.byte	7
	.byte	6
	.byte	5
	.byte	6
	.byte	7
	.byte	5
	.byte	4
	.byte	5
	.byte	6
	.byte	5
	.byte	7
	.byte	3
	.byte	7
	.byte	13
	.byte	2
	.byte	2
	.byte	4
	.byte	6
	.byte	6
	.byte	8
	.byte	5
	.byte	17
	.byte	12
	.byte	7
	.byte	8
	.byte	8
	.byte	2
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	2
	.byte	2
	.byte	6
	.byte	5
	.byte	8
	.byte	5
	.byte	5
	.byte	8
	.byte	3
	.byte	5
	.byte	5
	.byte	6
	.byte	4
	.byte	9
	.byte	3
	.align	4
	.type	aNext.21224, @object
	.size	aNext.21224, 119
aNext.21224:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	32
	.byte	21
	.byte	0
	.byte	0
	.byte	0
	.byte	42
	.byte	3
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	29
	.byte	0
	.byte	0
	.byte	37
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	60
	.byte	0
	.byte	0
	.byte	61
	.byte	0
	.byte	40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	59
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	30
	.byte	54
	.byte	16
	.byte	33
	.byte	10
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.byte	66
	.byte	73
	.byte	0
	.byte	8
	.byte	0
	.byte	98
	.byte	92
	.byte	0
	.byte	101
	.byte	0
	.byte	81
	.byte	0
	.byte	69
	.byte	0
	.byte	0
	.byte	108
	.byte	27
	.byte	36
	.byte	67
	.byte	77
	.byte	0
	.byte	34
	.byte	62
	.byte	0
	.byte	0
	.align	4
	.type	aHash.21223, @object
	.size	aHash.21223, 127
aHash.21223:
	.byte	70
	.byte	99
	.byte	112
	.byte	68
	.byte	0
	.byte	43
	.byte	0
	.byte	0
	.byte	76
	.byte	0
	.byte	71
	.byte	0
	.byte	0
	.byte	41
	.byte	12
	.byte	72
	.byte	15
	.byte	0
	.byte	111
	.byte	79
	.byte	49
	.byte	106
	.byte	0
	.byte	19
	.byte	0
	.byte	0
	.byte	116
	.byte	0
	.byte	114
	.byte	109
	.byte	0
	.byte	22
	.byte	87
	.byte	0
	.byte	9
	.byte	0
	.byte	0
	.byte	64
	.byte	65
	.byte	0
	.byte	63
	.byte	6
	.byte	0
	.byte	47
	.byte	84
	.byte	96
	.byte	0
	.byte	113
	.byte	95
	.byte	0
	.byte	0
	.byte	44
	.byte	0
	.byte	97
	.byte	24
	.byte	0
	.byte	17
	.byte	0
	.byte	117
	.byte	48
	.byte	23
	.byte	0
	.byte	5
	.byte	104
	.byte	25
	.byte	90
	.byte	0
	.byte	0
	.byte	119
	.byte	100
	.byte	55
	.byte	118
	.byte	52
	.byte	7
	.byte	50
	.byte	0
	.byte	85
	.byte	0
	.byte	94
	.byte	26
	.byte	0
	.byte	93
	.byte	0
	.byte	0
	.byte	0
	.byte	89
	.byte	86
	.byte	91
	.byte	82
	.byte	103
	.byte	14
	.byte	38
	.byte	102
	.byte	0
	.byte	75
	.byte	0
	.byte	18
	.byte	83
	.byte	105
	.byte	31
	.byte	0
	.byte	115
	.byte	74
	.byte	107
	.byte	57
	.byte	45
	.byte	78
	.byte	0
	.byte	0
	.byte	88
	.byte	39
	.byte	0
	.byte	110
	.byte	0
	.byte	35
	.byte	0
	.byte	0
	.byte	28
	.byte	0
	.byte	80
	.byte	53
	.byte	58
	.byte	0
	.byte	20
	.byte	56
	.byte	0
	.byte	51
	.align	4
	.type	zText.21222, @object
	.size	zText.21222, 540
zText.21222:
	.byte	82
	.byte	69
	.byte	73
	.byte	78
	.byte	68
	.byte	69
	.byte	88
	.byte	69
	.byte	68
	.byte	69
	.byte	83
	.byte	67
	.byte	65
	.byte	80
	.byte	69
	.byte	65
	.byte	67
	.byte	72
	.byte	69
	.byte	67
	.byte	75
	.byte	69
	.byte	89
	.byte	66
	.byte	69
	.byte	70
	.byte	79
	.byte	82
	.byte	69
	.byte	73
	.byte	71
	.byte	78
	.byte	79
	.byte	82
	.byte	69
	.byte	71
	.byte	69
	.byte	88
	.byte	80
	.byte	76
	.byte	65
	.byte	73
	.byte	78
	.byte	83
	.byte	84
	.byte	69
	.byte	65
	.byte	68
	.byte	68
	.byte	65
	.byte	84
	.byte	65
	.byte	66
	.byte	65
	.byte	83
	.byte	69
	.byte	76
	.byte	69
	.byte	67
	.byte	84
	.byte	65
	.byte	66
	.byte	76
	.byte	69
	.byte	70
	.byte	84
	.byte	72
	.byte	69
	.byte	78
	.byte	68
	.byte	69
	.byte	70
	.byte	69
	.byte	82
	.byte	82
	.byte	65
	.byte	66
	.byte	76
	.byte	69
	.byte	76
	.byte	83
	.byte	69
	.byte	88
	.byte	67
	.byte	69
	.byte	80
	.byte	84
	.byte	82
	.byte	65
	.byte	78
	.byte	83
	.byte	65
	.byte	67
	.byte	84
	.byte	73
	.byte	79
	.byte	78
	.byte	65
	.byte	84
	.byte	85
	.byte	82
	.byte	65
	.byte	76
	.byte	84
	.byte	69
	.byte	82
	.byte	65
	.byte	73
	.byte	83
	.byte	69
	.byte	88
	.byte	67
	.byte	76
	.byte	85
	.byte	83
	.byte	73
	.byte	86
	.byte	69
	.byte	88
	.byte	73
	.byte	83
	.byte	84
	.byte	83
	.byte	65
	.byte	86
	.byte	69
	.byte	80
	.byte	79
	.byte	73
	.byte	78
	.byte	84
	.byte	69
	.byte	82
	.byte	83
	.byte	69
	.byte	67
	.byte	84
	.byte	82
	.byte	73
	.byte	71
	.byte	71
	.byte	69
	.byte	82
	.byte	69
	.byte	70
	.byte	69
	.byte	82
	.byte	69
	.byte	78
	.byte	67
	.byte	69
	.byte	83
	.byte	67
	.byte	79
	.byte	78
	.byte	83
	.byte	84
	.byte	82
	.byte	65
	.byte	73
	.byte	78
	.byte	84
	.byte	79
	.byte	70
	.byte	70
	.byte	83
	.byte	69
	.byte	84
	.byte	69
	.byte	77
	.byte	80
	.byte	79
	.byte	82
	.byte	65
	.byte	82
	.byte	89
	.byte	85
	.byte	78
	.byte	73
	.byte	81
	.byte	85
	.byte	69
	.byte	82
	.byte	89
	.byte	65
	.byte	84
	.byte	84
	.byte	65
	.byte	67
	.byte	72
	.byte	65
	.byte	86
	.byte	73
	.byte	78
	.byte	71
	.byte	82
	.byte	79
	.byte	85
	.byte	80
	.byte	68
	.byte	65
	.byte	84
	.byte	69
	.byte	66
	.byte	69
	.byte	71
	.byte	73
	.byte	78
	.byte	78
	.byte	69
	.byte	82
	.byte	69
	.byte	76
	.byte	69
	.byte	65
	.byte	83
	.byte	69
	.byte	66
	.byte	69
	.byte	84
	.byte	87
	.byte	69
	.byte	69
	.byte	78
	.byte	79
	.byte	84
	.byte	78
	.byte	85
	.byte	76
	.byte	76
	.byte	73
	.byte	75
	.byte	69
	.byte	67
	.byte	65
	.byte	83
	.byte	67
	.byte	65
	.byte	68
	.byte	69
	.byte	76
	.byte	69
	.byte	84
	.byte	69
	.byte	67
	.byte	65
	.byte	83
	.byte	69
	.byte	67
	.byte	79
	.byte	76
	.byte	76
	.byte	65
	.byte	84
	.byte	69
	.byte	67
	.byte	82
	.byte	69
	.byte	65
	.byte	84
	.byte	69
	.byte	67
	.byte	85
	.byte	82
	.byte	82
	.byte	69
	.byte	78
	.byte	84
	.byte	95
	.byte	68
	.byte	65
	.byte	84
	.byte	69
	.byte	68
	.byte	69
	.byte	84
	.byte	65
	.byte	67
	.byte	72
	.byte	73
	.byte	77
	.byte	77
	.byte	69
	.byte	68
	.byte	73
	.byte	65
	.byte	84
	.byte	69
	.byte	74
	.byte	79
	.byte	73
	.byte	78
	.byte	83
	.byte	69
	.byte	82
	.byte	84
	.byte	77
	.byte	65
	.byte	84
	.byte	67
	.byte	72
	.byte	80
	.byte	76
	.byte	65
	.byte	78
	.byte	65
	.byte	76
	.byte	89
	.byte	90
	.byte	69
	.byte	80
	.byte	82
	.byte	65
	.byte	71
	.byte	77
	.byte	65
	.byte	66
	.byte	79
	.byte	82
	.byte	84
	.byte	86
	.byte	65
	.byte	76
	.byte	85
	.byte	69
	.byte	83
	.byte	86
	.byte	73
	.byte	82
	.byte	84
	.byte	85
	.byte	65
	.byte	76
	.byte	73
	.byte	77
	.byte	73
	.byte	84
	.byte	87
	.byte	72
	.byte	69
	.byte	78
	.byte	87
	.byte	72
	.byte	69
	.byte	82
	.byte	69
	.byte	78
	.byte	65
	.byte	77
	.byte	69
	.byte	65
	.byte	70
	.byte	84
	.byte	69
	.byte	82
	.byte	69
	.byte	80
	.byte	76
	.byte	65
	.byte	67
	.byte	69
	.byte	65
	.byte	78
	.byte	68
	.byte	69
	.byte	70
	.byte	65
	.byte	85
	.byte	76
	.byte	84
	.byte	65
	.byte	85
	.byte	84
	.byte	79
	.byte	73
	.byte	78
	.byte	67
	.byte	82
	.byte	69
	.byte	77
	.byte	69
	.byte	78
	.byte	84
	.byte	67
	.byte	65
	.byte	83
	.byte	84
	.byte	67
	.byte	79
	.byte	76
	.byte	85
	.byte	77
	.byte	78
	.byte	67
	.byte	79
	.byte	77
	.byte	77
	.byte	73
	.byte	84
	.byte	67
	.byte	79
	.byte	78
	.byte	70
	.byte	76
	.byte	73
	.byte	67
	.byte	84
	.byte	67
	.byte	82
	.byte	79
	.byte	83
	.byte	83
	.byte	67
	.byte	85
	.byte	82
	.byte	82
	.byte	69
	.byte	78
	.byte	84
	.byte	95
	.byte	84
	.byte	73
	.byte	77
	.byte	69
	.byte	83
	.byte	84
	.byte	65
	.byte	77
	.byte	80
	.byte	82
	.byte	73
	.byte	77
	.byte	65
	.byte	82
	.byte	89
	.byte	68
	.byte	69
	.byte	70
	.byte	69
	.byte	82
	.byte	82
	.byte	69
	.byte	68
	.byte	73
	.byte	83
	.byte	84
	.byte	73
	.byte	78
	.byte	67
	.byte	84
	.byte	68
	.byte	82
	.byte	79
	.byte	80
	.byte	70
	.byte	65
	.byte	73
	.byte	76
	.byte	70
	.byte	82
	.byte	79
	.byte	77
	.byte	70
	.byte	85
	.byte	76
	.byte	76
	.byte	71
	.byte	76
	.byte	79
	.byte	66
	.byte	89
	.byte	73
	.byte	70
	.byte	73
	.byte	83
	.byte	78
	.byte	85
	.byte	76
	.byte	76
	.byte	79
	.byte	82
	.byte	68
	.byte	69
	.byte	82
	.byte	69
	.byte	83
	.byte	84
	.byte	82
	.byte	73
	.byte	67
	.byte	84
	.byte	79
	.byte	85
	.byte	84
	.byte	69
	.byte	82
	.byte	73
	.byte	71
	.byte	72
	.byte	84
	.byte	82
	.byte	79
	.byte	76
	.byte	76
	.byte	66
	.byte	65
	.byte	67
	.byte	75
	.byte	82
	.byte	79
	.byte	87
	.byte	85
	.byte	78
	.byte	73
	.byte	79
	.byte	78
	.byte	85
	.byte	83
	.byte	73
	.byte	78
	.byte	71
	.byte	86
	.byte	65
	.byte	67
	.byte	85
	.byte	85
	.byte	77
	.byte	86
	.byte	73
	.byte	69
	.byte	87
	.byte	73
	.byte	78
	.byte	73
	.byte	84
	.byte	73
	.byte	65
	.byte	76
	.byte	76
	.byte	89
	.local	sqlite3Autoext
	.comm	sqlite3Autoext,8,4
	.align	4
	.type	sqlite3Apis, @object
	.size	sqlite3Apis, 624
sqlite3Apis:
	.zero	624
	.align	4
	.type	aHardLimit, @object
	.size	aHardLimit, 40
aHardLimit:
	.long	1000000000
	.long	1000000000
	.long	2000
	.long	1000
	.long	500
	.long	25000
	.long	127
	.long	10
	.long	50000
	.long	999
	.align	4
	.type	misuse.21724, @object
	.size	misuse.21724, 78
misuse.21724:
	.short	108
	.short	105
	.short	98
	.short	114
	.short	97
	.short	114
	.short	121
	.short	32
	.short	114
	.short	111
	.short	117
	.short	116
	.short	105
	.short	110
	.short	101
	.short	32
	.short	99
	.short	97
	.short	108
	.short	108
	.short	101
	.short	100
	.short	32
	.short	111
	.short	117
	.short	116
	.short	32
	.short	111
	.short	102
	.short	32
	.short	115
	.short	101
	.short	113
	.short	117
	.short	101
	.short	110
	.short	99
	.short	101
	.short	0
	.align	4
	.type	outOfMem.21723, @object
	.size	outOfMem.21723, 28
outOfMem.21723:
	.short	111
	.short	117
	.short	116
	.short	32
	.short	111
	.short	102
	.short	32
	.short	109
	.short	101
	.short	109
	.short	111
	.short	114
	.short	121
	.short	0
	.section	.rodata.str1.1
.LC528:
	.string	"not an error"
.LC529:
	.string	"SQL logic error or missing database"
.LC530:
	.string	"access permission denied"
.LC531:
	.string	"callback requested query abort"
.LC532:
	.string	"database is locked"
.LC533:
	.string	"database table is locked"
.LC534:
	.string	"attempt to write a readonly database"
.LC535:
	.string	"disk I/O error"
.LC536:
	.string	"database disk image is malformed"
.LC537:
	.string	"database or disk is full"
.LC538:
	.string	"unable to open database file"
.LC539:
	.string	"table contains no data"
.LC540:
	.string	"String or BLOB exceeded size limit"
.LC541:
	.string	"constraint failed"
.LC542:
	.string	"datatype mismatch"
.LC543:
	.string	"large file support is disabled"
.LC544:
	.string	"authorization denied"
.LC545:
	.string	"auxiliary database format error"
.LC546:
	.string	"bind or column index out of range"
.LC547:
	.string	"file is encrypted or is not a database"
	.section	.rodata
	.align	4
	.type	aMsg.21565, @object
	.size	aMsg.21565, 108
aMsg.21565:
	.long	.LC528
	.long	.LC529
	.long	0
	.long	.LC530
	.long	.LC531
	.long	.LC532
	.long	.LC533
	.long	.LC189
	.long	.LC534
	.long	.LC307
	.long	.LC535
	.long	.LC536
	.long	0
	.long	.LC537
	.long	.LC538
	.long	0
	.long	.LC539
	.long	.LC286
	.long	.LC540
	.long	.LC541
	.long	.LC542
	.long	.LC263
	.long	.LC543
	.long	.LC544
	.long	.LC545
	.long	.LC546
	.long	.LC547
	.align	4
	.type	defaultMethods.6608, @object
	.size	defaultMethods.6608, 32
defaultMethods.6608:
	.long	sqlite3MemMalloc
	.long	sqlite3MemFree
	.long	sqlite3MemRealloc
	.long	sqlite3MemSize
	.long	sqlite3MemRoundup
	.long	sqlite3MemInit
	.long	sqlite3MemShutdown
	.long	0
	.section .data
	.align	4
	.type	defaultMethods.9455, @object
	.size	defaultMethods.9455, 44
defaultMethods.9455:
	.long	0
	.long	pcache1Init
	.long	pcache1Shutdown
	.long	pcache1Create
	.long	pcache1Cachesize
	.long	pcache1Pagecount
	.long	pcache1Fetch
	.long	pcache1Unpin
	.long	pcache1Rekey
	.long	pcache1Truncate
	.long	pcache1Destroy
	.section	.rodata.str1.1
.LC548:
	.string	"ltrim"
.LC549:
	.string	"rtrim"
.LC550:
	.string	"trim"
.LC551:
	.string	"typeof"
.LC552:
	.string	"length"
.LC553:
	.string	"substr"
.LC554:
	.string	"abs"
.LC555:
	.string	"round"
.LC556:
	.string	"upper"
.LC557:
	.string	"lower"
.LC558:
	.string	"coalesce"
.LC559:
	.string	"hex"
.LC560:
	.string	"ifnull"
.LC561:
	.string	"random"
.LC562:
	.string	"randomblob"
.LC563:
	.string	"nullif"
.LC564:
	.string	"sqlite_version"
.LC565:
	.string	"quote"
.LC566:
	.string	"last_insert_rowid"
.LC567:
	.string	"changes"
.LC568:
	.string	"total_changes"
.LC569:
	.string	"replace"
.LC570:
	.string	"zeroblob"
.LC571:
	.string	"sum"
.LC572:
	.string	"total"
.LC573:
	.string	"avg"
.LC574:
	.string	"count"
.LC575:
	.string	"group_concat"
	.section .data
	.align	4
	.type	aBuiltinFunc.16983, @object
	.size	aBuiltinFunc.16983, 1472
aBuiltinFunc.16983:
	.short	1
	.byte	1
	.byte	0
	.long	1
	.long	0
	.long	trimFunc
	.long	0
	.long	0
	.long	.LC548
	.long	0
	.short	2
	.byte	1
	.byte	0
	.long	1
	.long	0
	.long	trimFunc
	.long	0
	.long	0
	.long	.LC548
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	2
	.long	0
	.long	trimFunc
	.long	0
	.long	0
	.long	.LC549
	.long	0
	.short	2
	.byte	1
	.byte	0
	.long	2
	.long	0
	.long	trimFunc
	.long	0
	.long	0
	.long	.LC549
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	3
	.long	0
	.long	trimFunc
	.long	0
	.long	0
	.long	.LC550
	.long	0
	.short	2
	.byte	1
	.byte	0
	.long	3
	.long	0
	.long	trimFunc
	.long	0
	.long	0
	.long	.LC550
	.long	0
	.short	-1
	.byte	1
	.byte	8
	.long	0
	.long	0
	.long	minmaxFunc
	.long	0
	.long	0
	.long	.LC237
	.long	0
	.short	0
	.byte	1
	.byte	8
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	.LC237
	.long	0
	.short	1
	.byte	1
	.byte	8
	.long	0
	.long	0
	.long	0
	.long	minmaxStep
	.long	minMaxFinalize
	.long	.LC237
	.long	0
	.short	-1
	.byte	1
	.byte	8
	.long	1
	.long	0
	.long	minmaxFunc
	.long	0
	.long	0
	.long	.LC238
	.long	0
	.short	0
	.byte	1
	.byte	8
	.long	1
	.long	0
	.long	0
	.long	0
	.long	0
	.long	.LC238
	.long	0
	.short	1
	.byte	1
	.byte	8
	.long	1
	.long	0
	.long	0
	.long	minmaxStep
	.long	minMaxFinalize
	.long	.LC238
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	typeofFunc
	.long	0
	.long	0
	.long	.LC551
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	lengthFunc
	.long	0
	.long	0
	.long	.LC552
	.long	0
	.short	2
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	substrFunc
	.long	0
	.long	0
	.long	.LC553
	.long	0
	.short	3
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	substrFunc
	.long	0
	.long	0
	.long	.LC553
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	absFunc
	.long	0
	.long	0
	.long	.LC554
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	roundFunc
	.long	0
	.long	0
	.long	.LC555
	.long	0
	.short	2
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	roundFunc
	.long	0
	.long	0
	.long	.LC555
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	upperFunc
	.long	0
	.long	0
	.long	.LC556
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	lowerFunc
	.long	0
	.long	0
	.long	.LC557
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	.LC558
	.long	0
	.short	-1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	ifnullFunc
	.long	0
	.long	0
	.long	.LC558
	.long	0
	.short	0
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	.LC558
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	hexFunc
	.long	0
	.long	0
	.long	.LC559
	.long	0
	.short	2
	.byte	1
	.byte	8
	.long	0
	.long	0
	.long	ifnullFunc
	.long	0
	.long	0
	.long	.LC560
	.long	0
	.short	0
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	randomFunc
	.long	0
	.long	0
	.long	.LC561
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	randomBlob
	.long	0
	.long	0
	.long	.LC562
	.long	0
	.short	2
	.byte	1
	.byte	8
	.long	0
	.long	0
	.long	nullifFunc
	.long	0
	.long	0
	.long	.LC563
	.long	0
	.short	0
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	versionFunc
	.long	0
	.long	0
	.long	.LC564
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	quoteFunc
	.long	0
	.long	0
	.long	.LC565
	.long	0
	.short	0
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	last_insert_rowid
	.long	0
	.long	0
	.long	.LC566
	.long	0
	.short	0
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	changes
	.long	0
	.long	0
	.long	.LC567
	.long	0
	.short	0
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	total_changes
	.long	0
	.long	0
	.long	.LC568
	.long	0
	.short	3
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	replaceFunc
	.long	0
	.long	0
	.long	.LC569
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	zeroblobFunc
	.long	0
	.long	0
	.long	.LC570
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	0
	.long	sumStep
	.long	sumFinalize
	.long	.LC571
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	0
	.long	sumStep
	.long	totalFinalize
	.long	.LC572
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	0
	.long	sumStep
	.long	avgFinalize
	.long	.LC573
	.long	0
	.short	0
	.byte	1
	.byte	32
	.long	0
	.long	0
	.long	0
	.long	countStep
	.long	countFinalize
	.long	.LC574
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	0
	.long	countStep
	.long	countFinalize
	.long	.LC574
	.long	0
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	0
	.long	groupConcatStep
	.long	groupConcatFinalize
	.long	.LC575
	.long	0
	.short	2
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	0
	.long	groupConcatStep
	.long	groupConcatFinalize
	.long	.LC575
	.long	0
	.short	2
	.byte	1
	.byte	3
	.long	globInfo
	.long	0
	.long	likeFunc
	.long	0
	.long	0
	.long	.LC396
	.long	0
	.short	2
	.byte	1
	.byte	1
	.long	likeInfoNorm
	.long	0
	.long	likeFunc
	.long	0
	.long	0
	.long	.LC395
	.long	0
	.short	3
	.byte	1
	.byte	1
	.long	likeInfoNorm
	.long	0
	.long	likeFunc
	.long	0
	.long	0
	.long	.LC395
	.long	0
	.section	.rodata
	.align	4
	.type	globInfo, @object
	.size	globInfo, 4
globInfo:
	.byte	42
	.byte	63
	.byte	91
	.byte	0
	.align	4
	.type	likeInfoNorm, @object
	.size	likeInfoNorm, 4
likeInfoNorm:
	.byte	37
	.byte	95
	.byte	0
	.byte	1
	.align	4
	.type	hexdigits, @object
	.size	hexdigits, 16
hexdigits:
	.byte	48
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	65
	.byte	66
	.byte	67
	.byte	68
	.byte	69
	.byte	70
	.align	4
	.type	azOne.16856, @object
	.size	azOne.16856, 4
azOne.16856:
	.long	.LC57
	.type	lenOne.16855, @object
	.size	lenOne.16855, 1
lenOne.16855:
	.byte	1
	.section	.rodata.str1.1
.LC576:
	.string	"julianday"
.LC577:
	.string	"date"
.LC578:
	.string	"time"
.LC579:
	.string	"datetime"
.LC580:
	.string	"strftime"
.LC581:
	.string	"current_time"
.LC582:
	.string	"current_timestamp"
.LC583:
	.string	"current_date"
	.section .data
	.align	4
	.type	aDateTimeFuncs.6424, @object
	.size	aDateTimeFuncs.6424, 256
aDateTimeFuncs.6424:
	.short	-1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	juliandayFunc
	.long	0
	.long	0
	.long	.LC576
	.long	0
	.short	-1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	dateFunc
	.long	0
	.long	0
	.long	.LC577
	.long	0
	.short	-1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	timeFunc
	.long	0
	.long	0
	.long	.LC578
	.long	0
	.short	-1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	datetimeFunc
	.long	0
	.long	0
	.long	.LC579
	.long	0
	.short	-1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	strftimeFunc
	.long	0
	.long	0
	.long	.LC580
	.long	0
	.short	0
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	ctimeFunc
	.long	0
	.long	0
	.long	.LC581
	.long	0
	.short	0
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	ctimestampFunc
	.long	0
	.long	0
	.long	.LC582
	.long	0
	.short	0
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	cdateFunc
	.long	0
	.long	0
	.long	.LC583
	.long	0
	.section	.rodata
	.align	4
	.type	trans.21367, @object
	.size	trans.21367, 56
trans.21367:
	.byte	0
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	2
	.byte	2
	.byte	1
	.byte	3
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	3
	.byte	1
	.byte	1
	.byte	1
	.byte	3
	.byte	4
	.byte	1
	.byte	5
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	5
	.byte	5
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	6
	.byte	0
	.byte	6
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.align	4
	.type	yy_shift_ofst, @object
	.size	yy_shift_ofst, 814
yy_shift_ofst:
	.short	187
	.short	1061
	.short	1170
	.short	1061
	.short	1194
	.short	1194
	.short	-2
	.short	64
	.short	64
	.short	-19
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	276
	.short	1
	.short	125
	.short	1076
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	1194
	.short	-48
	.short	409
	.short	1
	.short	1
	.short	141
	.short	281
	.short	281
	.short	-110
	.short	53
	.short	197
	.short	269
	.short	341
	.short	413
	.short	485
	.short	557
	.short	629
	.short	701
	.short	773
	.short	845
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	773
	.short	917
	.short	989
	.short	989
	.short	-67
	.short	-67
	.short	-1
	.short	-1
	.short	55
	.short	25
	.short	379
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	639
	.short	592
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	586
	.short	141
	.short	-17
	.short	-111
	.short	-111
	.short	-111
	.short	1209
	.short	81
	.short	376
	.short	415
	.short	426
	.short	496
	.short	90
	.short	565
	.short	565
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	1
	.short	809
	.short	949
	.short	455
	.short	641
	.short	641
	.short	641
	.short	769
	.short	101
	.short	-110
	.short	-110
	.short	-110
	.short	-111
	.short	-111
	.short	-111
	.short	232
	.short	232
	.short	268
	.short	428
	.short	213
	.short	575
	.short	645
	.short	785
	.short	788
	.short	412
	.short	968
	.short	502
	.short	491
	.short	52
	.short	183
	.short	183
	.short	183
	.short	614
	.short	614
	.short	711
	.short	912
	.short	614
	.short	614
	.short	614
	.short	614
	.short	229
	.short	546
	.short	-13
	.short	141
	.short	762
	.short	762
	.short	249
	.short	578
	.short	578
	.short	664
	.short	578
	.short	856
	.short	578
	.short	141
	.short	578
	.short	141
	.short	926
	.short	843
	.short	664
	.short	664
	.short	843
	.short	1043
	.short	1043
	.short	1043
	.short	1043
	.short	1087
	.short	1087
	.short	1089
	.short	-110
	.short	1007
	.short	1016
	.short	1033
	.short	1063
	.short	1073
	.short	1064
	.short	1099
	.short	1099
	.short	1122
	.short	1123
	.short	1122
	.short	1123
	.short	1122
	.short	1123
	.short	1157
	.short	1157
	.short	1222
	.short	1157
	.short	1187
	.short	1157
	.short	1307
	.short	1264
	.short	1264
	.short	1222
	.short	1157
	.short	1157
	.short	1157
	.short	1307
	.short	1354
	.short	1099
	.short	1354
	.short	1099
	.short	1354
	.short	1099
	.short	1099
	.short	1330
	.short	1245
	.short	1354
	.short	1099
	.short	1319
	.short	1319
	.short	1365
	.short	1007
	.short	1099
	.short	1373
	.short	1373
	.short	1373
	.short	1373
	.short	1007
	.short	1319
	.short	1365
	.short	1099
	.short	1356
	.short	1356
	.short	1099
	.short	1099
	.short	1370
	.short	-111
	.short	-111
	.short	-111
	.short	-111
	.short	-111
	.short	552
	.short	1066
	.short	1059
	.short	1069
	.short	712
	.short	631
	.short	915
	.short	801
	.short	946
	.short	866
	.short	1000
	.short	1022
	.short	1097
	.short	1153
	.short	1241
	.short	1247
	.short	1285
	.short	515
	.short	1337
	.short	440
	.short	1412
	.short	1399
	.short	1392
	.short	1394
	.short	1300
	.short	1301
	.short	1302
	.short	1303
	.short	1304
	.short	1325
	.short	1311
	.short	1403
	.short	1404
	.short	1405
	.short	1407
	.short	1415
	.short	1408
	.short	1409
	.short	1406
	.short	1410
	.short	1411
	.short	1413
	.short	1401
	.short	1414
	.short	1402
	.short	1413
	.short	1317
	.short	1418
	.short	1416
	.short	1417
	.short	1323
	.short	1419
	.short	1420
	.short	1421
	.short	1395
	.short	1424
	.short	1397
	.short	1426
	.short	1428
	.short	1427
	.short	1430
	.short	1422
	.short	1431
	.short	1352
	.short	1346
	.short	1437
	.short	1438
	.short	1433
	.short	1357
	.short	1423
	.short	1425
	.short	1429
	.short	1435
	.short	1432
	.short	1324
	.short	1359
	.short	1442
	.short	1461
	.short	1466
	.short	1360
	.short	1396
	.short	1400
	.short	1342
	.short	1449
	.short	1358
	.short	1472
	.short	1459
	.short	1355
	.short	1458
	.short	1362
	.short	1371
	.short	1361
	.short	1462
	.short	1363
	.short	1463
	.short	1464
	.short	1469
	.short	1434
	.short	1474
	.short	1350
	.short	1470
	.short	1490
	.short	1491
	.align	4
	.type	yy_default, @object
	.size	yy_default, 1232
yy_default:
	.short	621
	.short	856
	.short	939
	.short	939
	.short	856
	.short	939
	.short	939
	.short	885
	.short	885
	.short	744
	.short	854
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	914
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	828
	.short	939
	.short	939
	.short	939
	.short	660
	.short	885
	.short	885
	.short	748
	.short	779
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	780
	.short	939
	.short	858
	.short	853
	.short	849
	.short	851
	.short	850
	.short	857
	.short	781
	.short	770
	.short	777
	.short	784
	.short	759
	.short	898
	.short	786
	.short	787
	.short	793
	.short	794
	.short	915
	.short	913
	.short	816
	.short	815
	.short	834
	.short	818
	.short	840
	.short	817
	.short	827
	.short	652
	.short	819
	.short	820
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	713
	.short	647
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	821
	.short	939
	.short	822
	.short	835
	.short	836
	.short	837
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	627
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	869
	.short	939
	.short	918
	.short	920
	.short	939
	.short	939
	.short	939
	.short	621
	.short	744
	.short	744
	.short	744
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	738
	.short	748
	.short	932
	.short	939
	.short	939
	.short	704
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	629
	.short	736
	.short	662
	.short	746
	.short	939
	.short	939
	.short	939
	.short	649
	.short	725
	.short	891
	.short	939
	.short	905
	.short	903
	.short	727
	.short	789
	.short	939
	.short	736
	.short	745
	.short	939
	.short	939
	.short	939
	.short	852
	.short	773
	.short	773
	.short	761
	.short	773
	.short	683
	.short	773
	.short	939
	.short	773
	.short	939
	.short	686
	.short	783
	.short	761
	.short	761
	.short	783
	.short	626
	.short	626
	.short	626
	.short	626
	.short	637
	.short	637
	.short	703
	.short	939
	.short	783
	.short	774
	.short	776
	.short	766
	.short	778
	.short	939
	.short	752
	.short	752
	.short	760
	.short	765
	.short	760
	.short	765
	.short	760
	.short	765
	.short	715
	.short	715
	.short	700
	.short	715
	.short	686
	.short	715
	.short	862
	.short	866
	.short	866
	.short	700
	.short	715
	.short	715
	.short	715
	.short	862
	.short	644
	.short	752
	.short	644
	.short	752
	.short	644
	.short	752
	.short	752
	.short	895
	.short	897
	.short	644
	.short	752
	.short	717
	.short	717
	.short	795
	.short	783
	.short	752
	.short	724
	.short	724
	.short	724
	.short	724
	.short	783
	.short	717
	.short	795
	.short	752
	.short	917
	.short	917
	.short	752
	.short	752
	.short	925
	.short	670
	.short	688
	.short	688
	.short	932
	.short	937
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	871
	.short	939
	.short	939
	.short	939
	.short	635
	.short	939
	.short	654
	.short	802
	.short	807
	.short	803
	.short	939
	.short	804
	.short	939
	.short	730
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	855
	.short	939
	.short	767
	.short	939
	.short	775
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	893
	.short	894
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	939
	.short	924
	.short	939
	.short	939
	.short	927
	.short	622
	.short	939
	.short	617
	.short	619
	.short	620
	.short	624
	.short	625
	.short	628
	.short	654
	.short	655
	.short	657
	.short	658
	.short	659
	.short	630
	.short	631
	.short	632
	.short	633
	.short	634
	.short	636
	.short	640
	.short	638
	.short	639
	.short	641
	.short	648
	.short	650
	.short	669
	.short	671
	.short	673
	.short	734
	.short	735
	.short	799
	.short	728
	.short	729
	.short	733
	.short	656
	.short	810
	.short	801
	.short	805
	.short	806
	.short	808
	.short	809
	.short	823
	.short	824
	.short	826
	.short	832
	.short	839
	.short	842
	.short	825
	.short	830
	.short	831
	.short	833
	.short	838
	.short	841
	.short	731
	.short	732
	.short	845
	.short	663
	.short	664
	.short	667
	.short	668
	.short	881
	.short	883
	.short	882
	.short	884
	.short	666
	.short	665
	.short	811
	.short	814
	.short	847
	.short	848
	.short	906
	.short	907
	.short	908
	.short	909
	.short	910
	.short	843
	.short	753
	.short	846
	.short	829
	.short	768
	.short	771
	.short	772
	.short	769
	.short	737
	.short	747
	.short	755
	.short	756
	.short	757
	.short	758
	.short	742
	.short	743
	.short	749
	.short	764
	.short	797
	.short	798
	.short	762
	.short	763
	.short	750
	.short	751
	.short	739
	.short	740
	.short	741
	.short	844
	.short	800
	.short	812
	.short	813
	.short	674
	.short	675
	.short	807
	.short	676
	.short	677
	.short	678
	.short	716
	.short	719
	.short	720
	.short	721
	.short	679
	.short	698
	.short	701
	.short	702
	.short	680
	.short	687
	.short	681
	.short	682
	.short	689
	.short	690
	.short	691
	.short	694
	.short	695
	.short	696
	.short	697
	.short	692
	.short	693
	.short	863
	.short	864
	.short	867
	.short	865
	.short	684
	.short	685
	.short	699
	.short	672
	.short	661
	.short	653
	.short	705
	.short	708
	.short	709
	.short	710
	.short	711
	.short	712
	.short	714
	.short	706
	.short	707
	.short	651
	.short	642
	.short	645
	.short	754
	.short	887
	.short	896
	.short	892
	.short	888
	.short	889
	.short	890
	.short	646
	.short	859
	.short	860
	.short	718
	.short	791
	.short	792
	.short	886
	.short	899
	.short	901
	.short	796
	.short	902
	.short	904
	.short	900
	.short	929
	.short	643
	.short	722
	.short	723
	.short	726
	.short	868
	.short	911
	.short	782
	.short	785
	.short	788
	.short	790
	.short	870
	.short	872
	.short	874
	.short	876
	.short	877
	.short	878
	.short	879
	.short	880
	.short	873
	.short	875
	.short	912
	.short	916
	.short	919
	.short	921
	.short	922
	.short	923
	.short	926
	.short	928
	.short	933
	.short	934
	.short	935
	.short	938
	.short	936
	.short	623
	.short	618
	.align	4
	.type	yy_lookahead, @object
	.size	yy_lookahead, 2996
yy_lookahead:
	.short	19
	.short	142
	.short	143
	.short	144
	.short	145
	.short	24
	.short	116
	.short	26
	.short	75
	.short	76
	.short	77
	.short	78
	.short	25
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	26
	.short	27
	.short	160
	.short	26
	.short	27
	.short	48
	.short	49
	.short	79
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	222
	.short	223
	.short	224
	.short	225
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	194
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	90
	.short	19
	.short	94
	.short	174
	.short	25
	.short	25
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	26
	.short	27
	.short	94
	.short	95
	.short	96
	.short	94
	.short	95
	.short	99
	.short	100
	.short	101
	.short	19
	.short	48
	.short	49
	.short	150
	.short	174
	.short	52
	.short	119
	.short	166
	.short	110
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	26
	.short	27
	.short	165
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	186
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	90
	.short	205
	.short	95
	.short	84
	.short	85
	.short	186
	.short	96
	.short	97
	.short	98
	.short	99
	.short	100
	.short	101
	.short	102
	.short	94
	.short	95
	.short	195
	.short	97
	.short	150
	.short	222
	.short	109
	.short	224
	.short	225
	.short	26
	.short	104
	.short	105
	.short	217
	.short	90
	.short	120
	.short	48
	.short	49
	.short	50
	.short	86
	.short	165
	.short	97
	.short	98
	.short	99
	.short	100
	.short	101
	.short	102
	.short	94
	.short	95
	.short	174
	.short	175
	.short	1
	.short	2
	.short	109
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	191
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	116
	.short	35
	.short	150
	.short	155
	.short	24
	.short	208
	.short	150
	.short	222
	.short	150
	.short	224
	.short	225
	.short	216
	.short	128
	.short	161
	.short	162
	.short	150
	.short	221
	.short	165
	.short	94
	.short	23
	.short	150
	.short	165
	.short	56
	.short	165
	.short	197
	.short	160
	.short	170
	.short	171
	.short	48
	.short	49
	.short	165
	.short	204
	.short	174
	.short	175
	.short	22
	.short	165
	.short	24
	.short	185
	.short	186
	.short	174
	.short	175
	.short	169
	.short	170
	.short	171
	.short	174
	.short	175
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	194
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	214
	.short	215
	.short	108
	.short	150
	.short	25
	.short	229
	.short	150
	.short	64
	.short	148
	.short	216
	.short	234
	.short	146
	.short	147
	.short	215
	.short	221
	.short	231
	.short	232
	.short	152
	.short	165
	.short	154
	.short	150
	.short	165
	.short	196
	.short	170
	.short	171
	.short	160
	.short	181
	.short	182
	.short	48
	.short	49
	.short	174
	.short	175
	.short	232
	.short	188
	.short	165
	.short	165
	.short	112
	.short	94
	.short	114
	.short	115
	.short	166
	.short	98
	.short	55
	.short	174
	.short	174
	.short	175
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	194
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	129
	.short	130
	.short	131
	.short	96
	.short	84
	.short	85
	.short	99
	.short	100
	.short	101
	.short	150
	.short	226
	.short	218
	.short	231
	.short	232
	.short	216
	.short	150
	.short	222
	.short	110
	.short	224
	.short	225
	.short	105
	.short	106
	.short	107
	.short	135
	.short	165
	.short	137
	.short	172
	.short	173
	.short	48
	.short	49
	.short	165
	.short	116
	.short	183
	.short	174
	.short	175
	.short	181
	.short	242
	.short	22
	.short	245
	.short	174
	.short	175
	.short	26
	.short	27
	.short	166
	.short	136
	.short	183
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	11
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	150
	.short	150
	.short	23
	.short	23
	.short	25
	.short	160
	.short	150
	.short	220
	.short	26
	.short	27
	.short	205
	.short	160
	.short	150
	.short	220
	.short	158
	.short	165
	.short	165
	.short	161
	.short	162
	.short	26
	.short	27
	.short	165
	.short	0
	.short	1
	.short	2
	.short	174
	.short	175
	.short	165
	.short	48
	.short	49
	.short	23
	.short	55
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	94
	.short	95
	.short	194
	.short	169
	.short	170
	.short	171
	.short	193
	.short	136
	.short	194
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	166
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	65
	.short	160
	.short	95
	.short	23
	.short	94
	.short	95
	.short	173
	.short	217
	.short	22
	.short	105
	.short	106
	.short	107
	.short	26
	.short	22
	.short	181
	.short	94
	.short	95
	.short	26
	.short	27
	.short	96
	.short	116
	.short	243
	.short	99
	.short	100
	.short	101
	.short	150
	.short	205
	.short	120
	.short	48
	.short	49
	.short	120
	.short	232
	.short	22
	.short	110
	.short	166
	.short	194
	.short	161
	.short	162
	.short	183
	.short	163
	.short	165
	.short	120
	.short	166
	.short	167
	.short	168
	.short	160
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	218
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	12
	.short	205
	.short	150
	.short	23
	.short	235
	.short	190
	.short	191
	.short	194
	.short	94
	.short	240
	.short	150
	.short	86
	.short	74
	.short	94
	.short	95
	.short	150
	.short	28
	.short	165
	.short	236
	.short	206
	.short	207
	.short	23
	.short	150
	.short	48
	.short	49
	.short	165
	.short	174
	.short	175
	.short	48
	.short	49
	.short	165
	.short	43
	.short	31
	.short	45
	.short	174
	.short	175
	.short	21
	.short	165
	.short	113
	.short	174
	.short	175
	.short	40
	.short	117
	.short	55
	.short	69
	.short	70
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	150
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	150
	.short	98
	.short	165
	.short	23
	.short	61
	.short	23
	.short	150
	.short	25
	.short	150
	.short	19
	.short	113
	.short	174
	.short	175
	.short	213
	.short	117
	.short	165
	.short	24
	.short	153
	.short	26
	.short	23
	.short	150
	.short	165
	.short	150
	.short	165
	.short	174
	.short	175
	.short	89
	.short	90
	.short	48
	.short	49
	.short	174
	.short	175
	.short	174
	.short	175
	.short	19
	.short	165
	.short	237
	.short	165
	.short	112
	.short	49
	.short	114
	.short	115
	.short	27
	.short	100
	.short	174
	.short	175
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	150
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	150
	.short	150
	.short	165
	.short	150
	.short	24
	.short	112
	.short	150
	.short	114
	.short	115
	.short	138
	.short	19
	.short	174
	.short	175
	.short	213
	.short	94
	.short	165
	.short	165
	.short	150
	.short	165
	.short	29
	.short	150
	.short	165
	.short	104
	.short	33
	.short	174
	.short	175
	.short	196
	.short	109
	.short	48
	.short	49
	.short	174
	.short	175
	.short	165
	.short	190
	.short	191
	.short	165
	.short	112
	.short	47
	.short	114
	.short	115
	.short	187
	.short	174
	.short	175
	.short	160
	.short	174
	.short	175
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	150
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	150
	.short	150
	.short	165
	.short	198
	.short	12
	.short	194
	.short	150
	.short	150
	.short	150
	.short	248
	.short	249
	.short	174
	.short	175
	.short	206
	.short	207
	.short	165
	.short	165
	.short	98
	.short	23
	.short	150
	.short	28
	.short	165
	.short	165
	.short	165
	.short	174
	.short	175
	.short	166
	.short	150
	.short	48
	.short	49
	.short	174
	.short	175
	.short	174
	.short	175
	.short	165
	.short	43
	.short	233
	.short	45
	.short	22
	.short	23
	.short	177
	.short	25
	.short	165
	.short	174
	.short	175
	.short	233
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	150
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	150
	.short	97
	.short	165
	.short	25
	.short	150
	.short	160
	.short	150
	.short	150
	.short	150
	.short	65
	.short	228
	.short	174
	.short	175
	.short	144
	.short	145
	.short	165
	.short	246
	.short	247
	.short	150
	.short	165
	.short	116
	.short	165
	.short	165
	.short	165
	.short	174
	.short	175
	.short	129
	.short	130
	.short	48
	.short	49
	.short	174
	.short	175
	.short	128
	.short	165
	.short	98
	.short	112
	.short	177
	.short	114
	.short	115
	.short	194
	.short	49
	.short	187
	.short	174
	.short	175
	.short	187
	.short	109
	.short	66
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	150
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	150
	.short	23
	.short	165
	.short	25
	.short	150
	.short	150
	.short	150
	.short	150
	.short	166
	.short	167
	.short	168
	.short	174
	.short	175
	.short	209
	.short	25
	.short	165
	.short	7
	.short	8
	.short	150
	.short	165
	.short	165
	.short	165
	.short	165
	.short	104
	.short	174
	.short	175
	.short	97
	.short	98
	.short	48
	.short	49
	.short	174
	.short	175
	.short	126
	.short	165
	.short	22
	.short	23
	.short	177
	.short	25
	.short	7
	.short	8
	.short	9
	.short	187
	.short	174
	.short	175
	.short	187
	.short	160
	.short	177
	.short	67
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	150
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	150
	.short	160
	.short	165
	.short	182
	.short	166
	.short	65
	.short	150
	.short	194
	.short	105
	.short	106
	.short	107
	.short	174
	.short	175
	.short	178
	.short	23
	.short	165
	.short	25
	.short	177
	.short	150
	.short	150
	.short	103
	.short	165
	.short	150
	.short	199
	.short	174
	.short	175
	.short	150
	.short	166
	.short	48
	.short	49
	.short	174
	.short	175
	.short	209
	.short	165
	.short	165
	.short	194
	.short	23
	.short	165
	.short	25
	.short	209
	.short	6
	.short	165
	.short	174
	.short	175
	.short	199
	.short	149
	.short	174
	.short	175
	.short	68
	.short	69
	.short	70
	.short	71
	.short	72
	.short	73
	.short	74
	.short	75
	.short	76
	.short	77
	.short	78
	.short	218
	.short	80
	.short	81
	.short	82
	.short	83
	.short	84
	.short	85
	.short	86
	.short	87
	.short	88
	.short	89
	.short	90
	.short	19
	.short	20
	.short	16
	.short	22
	.short	150
	.short	16
	.short	150
	.short	26
	.short	27
	.short	149
	.short	240
	.short	213
	.short	150
	.short	149
	.short	149
	.short	19
	.short	20
	.short	36
	.short	22
	.short	165
	.short	13
	.short	165
	.short	26
	.short	27
	.short	151
	.short	151
	.short	150
	.short	165
	.short	174
	.short	175
	.short	174
	.short	175
	.short	36
	.short	150
	.short	25
	.short	54
	.short	150
	.short	150
	.short	159
	.short	150
	.short	23
	.short	165
	.short	25
	.short	194
	.short	58
	.short	64
	.short	60
	.short	58
	.short	165
	.short	60
	.short	54
	.short	165
	.short	165
	.short	126
	.short	165
	.short	193
	.short	150
	.short	174
	.short	175
	.short	123
	.short	64
	.short	174
	.short	175
	.short	174
	.short	175
	.short	84
	.short	85
	.short	199
	.short	150
	.short	193
	.short	200
	.short	165
	.short	150
	.short	150
	.short	93
	.short	94
	.short	95
	.short	124
	.short	201
	.short	98
	.short	84
	.short	85
	.short	86
	.short	165
	.short	105
	.short	106
	.short	107
	.short	165
	.short	165
	.short	93
	.short	94
	.short	95
	.short	174
	.short	175
	.short	98
	.short	5
	.short	23
	.short	116
	.short	25
	.short	193
	.short	10
	.short	11
	.short	12
	.short	13
	.short	14
	.short	122
	.short	150
	.short	17
	.short	203
	.short	202
	.short	129
	.short	130
	.short	131
	.short	132
	.short	133
	.short	134
	.short	193
	.short	150
	.short	125
	.short	135
	.short	30
	.short	165
	.short	32
	.short	150
	.short	138
	.short	129
	.short	130
	.short	131
	.short	132
	.short	133
	.short	134
	.short	41
	.short	165
	.short	19
	.short	20
	.short	227
	.short	22
	.short	118
	.short	165
	.short	157
	.short	26
	.short	27
	.short	150
	.short	53
	.short	150
	.short	55
	.short	104
	.short	174
	.short	175
	.short	59
	.short	36
	.short	22
	.short	62
	.short	210
	.short	150
	.short	26
	.short	27
	.short	165
	.short	150
	.short	165
	.short	193
	.short	150
	.short	150
	.short	157
	.short	121
	.short	211
	.short	174
	.short	175
	.short	54
	.short	165
	.short	150
	.short	210
	.short	210
	.short	165
	.short	150
	.short	211
	.short	165
	.short	165
	.short	64
	.short	150
	.short	211
	.short	104
	.short	174
	.short	175
	.short	23
	.short	165
	.short	25
	.short	193
	.short	46
	.short	165
	.short	23
	.short	176
	.short	25
	.short	64
	.short	165
	.short	105
	.short	106
	.short	107
	.short	84
	.short	85
	.short	150
	.short	111
	.short	176
	.short	174
	.short	175
	.short	193
	.short	116
	.short	93
	.short	94
	.short	95
	.short	103
	.short	150
	.short	98
	.short	84
	.short	85
	.short	165
	.short	150
	.short	193
	.short	184
	.short	150
	.short	150
	.short	176
	.short	150
	.short	94
	.short	150
	.short	150
	.short	165
	.short	98
	.short	23
	.short	139
	.short	25
	.short	165
	.short	178
	.short	176
	.short	165
	.short	165
	.short	150
	.short	165
	.short	150
	.short	165
	.short	165
	.short	150
	.short	150
	.short	129
	.short	130
	.short	131
	.short	132
	.short	133
	.short	134
	.short	22
	.short	150
	.short	165
	.short	150
	.short	165
	.short	150
	.short	150
	.short	165
	.short	165
	.short	129
	.short	130
	.short	131
	.short	150
	.short	150
	.short	150
	.short	179
	.short	165
	.short	150
	.short	165
	.short	150
	.short	165
	.short	165
	.short	150
	.short	150
	.short	150
	.short	90
	.short	176
	.short	165
	.short	165
	.short	165
	.short	230
	.short	23
	.short	165
	.short	25
	.short	165
	.short	176
	.short	230
	.short	165
	.short	165
	.short	165
	.short	179
	.short	184
	.short	176
	.short	18
	.short	156
	.short	44
	.short	157
	.short	156
	.short	238
	.short	157
	.short	156
	.short	135
	.short	157
	.short	157
	.short	239
	.short	156
	.short	66
	.short	157
	.short	22
	.short	189
	.short	189
	.short	157
	.short	18
	.short	219
	.short	219
	.short	157
	.short	39
	.short	199
	.short	192
	.short	192
	.short	192
	.short	192
	.short	189
	.short	241
	.short	199
	.short	241
	.short	157
	.short	157
	.short	37
	.short	244
	.short	247
	.short	164
	.short	180
	.short	180
	.short	1
	.short	15
	.short	23
	.short	22
	.short	250
	.short	118
	.short	118
	.short	118
	.short	118
	.short	118
	.short	98
	.short	113
	.short	22
	.short	11
	.short	23
	.short	23
	.short	22
	.short	22
	.short	25
	.short	23
	.short	23
	.short	23
	.short	34
	.short	34
	.short	120
	.short	25
	.short	25
	.short	22
	.short	118
	.short	23
	.short	23
	.short	27
	.short	50
	.short	22
	.short	50
	.short	22
	.short	22
	.short	34
	.short	23
	.short	22
	.short	22
	.short	102
	.short	109
	.short	19
	.short	24
	.short	20
	.short	38
	.short	25
	.short	104
	.short	138
	.short	104
	.short	22
	.short	42
	.short	5
	.short	1
	.short	108
	.short	127
	.short	74
	.short	22
	.short	50
	.short	1
	.short	74
	.short	16
	.short	121
	.short	119
	.short	20
	.short	108
	.short	51
	.short	119
	.short	57
	.short	51
	.short	22
	.short	16
	.short	23
	.short	23
	.short	127
	.short	15
	.short	140
	.short	128
	.short	22
	.short	3
	.short	251
	.short	4
	.short	251
	.short	63
	.align	4
	.type	yyFallback, @object
	.size	yyFallback, 282
yyFallback:
	.short	0
	.short	0
	.short	26
	.short	26
	.short	26
	.short	26
	.short	0
	.short	26
	.short	26
	.short	26
	.short	0
	.short	26
	.short	26
	.short	26
	.short	26
	.short	0
	.short	0
	.short	0
	.short	26
	.short	0
	.short	0
	.short	26
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	26
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.short	0
	.align	4
	.type	yy_action, @object
	.size	yy_action, 2996
yy_action:
	.short	304
	.short	940
	.short	176
	.short	615
	.short	2
	.short	150
	.short	214
	.short	439
	.short	24
	.short	24
	.short	24
	.short	24
	.short	488
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	413
	.short	414
	.short	212
	.short	413
	.short	414
	.short	446
	.short	452
	.short	31
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	30
	.short	483
	.short	32
	.short	134
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	436
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	216
	.short	311
	.short	439
	.short	512
	.short	490
	.short	45
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	413
	.short	414
	.short	416
	.short	417
	.short	156
	.short	416
	.short	417
	.short	360
	.short	363
	.short	364
	.short	311
	.short	446
	.short	452
	.short	385
	.short	514
	.short	21
	.short	186
	.short	495
	.short	365
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	413
	.short	414
	.short	415
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	555
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	228
	.short	504
	.short	135
	.short	468
	.short	218
	.short	548
	.short	145
	.short	132
	.short	256
	.short	358
	.short	261
	.short	359
	.short	153
	.short	416
	.short	417
	.short	241
	.short	598
	.short	331
	.short	30
	.short	265
	.short	32
	.short	134
	.short	439
	.short	596
	.short	597
	.short	230
	.short	228
	.short	490
	.short	446
	.short	452
	.short	57
	.short	506
	.short	328
	.short	132
	.short	256
	.short	358
	.short	261
	.short	359
	.short	153
	.short	416
	.short	417
	.short	435
	.short	78
	.short	408
	.short	405
	.short	265
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	342
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	214
	.short	534
	.short	547
	.short	307
	.short	127
	.short	489
	.short	595
	.short	30
	.short	331
	.short	32
	.short	134
	.short	345
	.short	387
	.short	429
	.short	63
	.short	331
	.short	355
	.short	415
	.short	439
	.short	507
	.short	331
	.short	415
	.short	535
	.short	328
	.short	215
	.short	193
	.short	594
	.short	593
	.short	446
	.short	452
	.short	328
	.short	18
	.short	435
	.short	85
	.short	16
	.short	328
	.short	183
	.short	190
	.short	556
	.short	435
	.short	78
	.short	309
	.short	463
	.short	464
	.short	435
	.short	85
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	436
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	347
	.short	221
	.short	313
	.short	595
	.short	191
	.short	378
	.short	331
	.short	472
	.short	234
	.short	345
	.short	381
	.short	324
	.short	410
	.short	220
	.short	344
	.short	592
	.short	217
	.short	213
	.short	415
	.short	112
	.short	331
	.short	328
	.short	4
	.short	594
	.short	399
	.short	211
	.short	554
	.short	529
	.short	446
	.short	452
	.short	435
	.short	79
	.short	217
	.short	553
	.short	515
	.short	328
	.short	334
	.short	513
	.short	459
	.short	459
	.short	469
	.short	441
	.short	572
	.short	432
	.short	435
	.short	78
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	436
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	443
	.short	443
	.short	443
	.short	156
	.short	468
	.short	218
	.short	360
	.short	363
	.short	364
	.short	331
	.short	247
	.short	395
	.short	398
	.short	217
	.short	349
	.short	331
	.short	30
	.short	365
	.short	32
	.short	134
	.short	388
	.short	282
	.short	281
	.short	39
	.short	328
	.short	41
	.short	430
	.short	545
	.short	446
	.short	452
	.short	328
	.short	214
	.short	531
	.short	435
	.short	93
	.short	542
	.short	601
	.short	1
	.short	404
	.short	435
	.short	93
	.short	413
	.short	414
	.short	495
	.short	40
	.short	536
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	573
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	276
	.short	331
	.short	179
	.short	508
	.short	490
	.short	210
	.short	547
	.short	319
	.short	413
	.short	414
	.short	222
	.short	192
	.short	385
	.short	320
	.short	240
	.short	415
	.short	328
	.short	557
	.short	63
	.short	413
	.short	414
	.short	415
	.short	616
	.short	408
	.short	405
	.short	435
	.short	71
	.short	415
	.short	446
	.short	452
	.short	611
	.short	572
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	416
	.short	417
	.short	436
	.short	336
	.short	463
	.short	464
	.short	401
	.short	43
	.short	436
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	495
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	612
	.short	209
	.short	135
	.short	511
	.short	416
	.short	417
	.short	431
	.short	233
	.short	64
	.short	388
	.short	282
	.short	281
	.short	439
	.short	66
	.short	542
	.short	416
	.short	417
	.short	413
	.short	414
	.short	156
	.short	214
	.short	403
	.short	360
	.short	363
	.short	364
	.short	547
	.short	252
	.short	490
	.short	446
	.short	452
	.short	491
	.short	217
	.short	8
	.short	365
	.short	495
	.short	436
	.short	606
	.short	63
	.short	537
	.short	299
	.short	415
	.short	492
	.short	470
	.short	546
	.short	200
	.short	196
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	386
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	477
	.short	254
	.short	354
	.short	528
	.short	60
	.short	517
	.short	518
	.short	436
	.short	439
	.short	389
	.short	331
	.short	356
	.short	7
	.short	416
	.short	417
	.short	331
	.short	478
	.short	328
	.short	208
	.short	197
	.short	137
	.short	460
	.short	499
	.short	447
	.short	448
	.short	328
	.short	435
	.short	9
	.short	446
	.short	452
	.short	328
	.short	479
	.short	485
	.short	519
	.short	435
	.short	72
	.short	567
	.short	415
	.short	434
	.short	435
	.short	67
	.short	486
	.short	433
	.short	520
	.short	450
	.short	451
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	331
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	331
	.short	449
	.short	328
	.short	268
	.short	390
	.short	461
	.short	331
	.short	65
	.short	331
	.short	368
	.short	434
	.short	435
	.short	76
	.short	310
	.short	433
	.short	328
	.short	150
	.short	427
	.short	439
	.short	473
	.short	331
	.short	328
	.short	499
	.short	328
	.short	435
	.short	97
	.short	29
	.short	216
	.short	446
	.short	452
	.short	435
	.short	96
	.short	435
	.short	101
	.short	353
	.short	328
	.short	372
	.short	415
	.short	334
	.short	154
	.short	459
	.short	459
	.short	352
	.short	569
	.short	435
	.short	99
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	331
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	331
	.short	248
	.short	328
	.short	264
	.short	56
	.short	334
	.short	331
	.short	459
	.short	459
	.short	861
	.short	333
	.short	435
	.short	104
	.short	376
	.short	439
	.short	328
	.short	415
	.short	331
	.short	415
	.short	565
	.short	331
	.short	328
	.short	306
	.short	564
	.short	435
	.short	105
	.short	185
	.short	265
	.short	446
	.short	452
	.short	435
	.short	126
	.short	328
	.short	570
	.short	518
	.short	328
	.short	334
	.short	377
	.short	459
	.short	459
	.short	314
	.short	435
	.short	128
	.short	194
	.short	435
	.short	59
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	331
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	331
	.short	136
	.short	328
	.short	242
	.short	477
	.short	436
	.short	331
	.short	350
	.short	331
	.short	609
	.short	303
	.short	435
	.short	102
	.short	201
	.short	137
	.short	328
	.short	415
	.short	454
	.short	178
	.short	331
	.short	478
	.short	328
	.short	415
	.short	328
	.short	435
	.short	77
	.short	440
	.short	249
	.short	446
	.short	452
	.short	435
	.short	100
	.short	435
	.short	68
	.short	328
	.short	479
	.short	465
	.short	341
	.short	613
	.short	931
	.short	484
	.short	931
	.short	415
	.short	435
	.short	98
	.short	467
	.short	23
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	331
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	331
	.short	397
	.short	328
	.short	164
	.short	264
	.short	205
	.short	331
	.short	264
	.short	332
	.short	610
	.short	339
	.short	435
	.short	129
	.short	407
	.short	2
	.short	328
	.short	322
	.short	175
	.short	331
	.short	415
	.short	214
	.short	328
	.short	415
	.short	415
	.short	435
	.short	130
	.short	466
	.short	466
	.short	446
	.short	452
	.short	435
	.short	131
	.short	396
	.short	328
	.short	257
	.short	334
	.short	487
	.short	459
	.short	459
	.short	436
	.short	154
	.short	229
	.short	435
	.short	69
	.short	315
	.short	258
	.short	23
	.short	33
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	331
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	331
	.short	497
	.short	328
	.short	151
	.short	264
	.short	412
	.short	331
	.short	264
	.short	470
	.short	337
	.short	200
	.short	435
	.short	80
	.short	250
	.short	155
	.short	328
	.short	523
	.short	524
	.short	331
	.short	415
	.short	415
	.short	328
	.short	415
	.short	306
	.short	435
	.short	81
	.short	533
	.short	532
	.short	446
	.short	452
	.short	435
	.short	70
	.short	47
	.short	328
	.short	613
	.short	930
	.short	259
	.short	930
	.short	418
	.short	419
	.short	420
	.short	316
	.short	435
	.short	82
	.short	317
	.short	206
	.short	539
	.short	22
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	331
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	304
	.short	331
	.short	209
	.short	328
	.short	529
	.short	540
	.short	610
	.short	331
	.short	436
	.short	563
	.short	375
	.short	563
	.short	435
	.short	83
	.short	362
	.short	538
	.short	328
	.short	155
	.short	541
	.short	331
	.short	499
	.short	526
	.short	328
	.short	331
	.short	575
	.short	435
	.short	84
	.short	424
	.short	543
	.short	446
	.short	452
	.short	435
	.short	86
	.short	290
	.short	328
	.short	415
	.short	436
	.short	267
	.short	328
	.short	155
	.short	394
	.short	141
	.short	415
	.short	435
	.short	87
	.short	588
	.short	411
	.short	435
	.short	88
	.short	308
	.short	456
	.short	457
	.short	453
	.short	453
	.short	25
	.short	25
	.short	24
	.short	24
	.short	24
	.short	24
	.short	386
	.short	26
	.short	26
	.short	26
	.short	26
	.short	27
	.short	27
	.short	28
	.short	28
	.short	28
	.short	29
	.short	216
	.short	35
	.short	338
	.short	286
	.short	3
	.short	331
	.short	270
	.short	331
	.short	327
	.short	414
	.short	421
	.short	382
	.short	318
	.short	276
	.short	422
	.short	325
	.short	35
	.short	338
	.short	335
	.short	3
	.short	328
	.short	423
	.short	328
	.short	327
	.short	414
	.short	142
	.short	144
	.short	276
	.short	415
	.short	435
	.short	73
	.short	435
	.short	74
	.short	335
	.short	331
	.short	6
	.short	340
	.short	425
	.short	331
	.short	326
	.short	331
	.short	367
	.short	415
	.short	155
	.short	437
	.short	289
	.short	472
	.short	287
	.short	274
	.short	328
	.short	272
	.short	340
	.short	415
	.short	328
	.short	47
	.short	328
	.short	277
	.short	276
	.short	435
	.short	89
	.short	348
	.short	472
	.short	435
	.short	90
	.short	435
	.short	91
	.short	38
	.short	37
	.short	243
	.short	331
	.short	582
	.short	244
	.short	415
	.short	426
	.short	276
	.short	36
	.short	329
	.short	330
	.short	46
	.short	245
	.short	441
	.short	38
	.short	37
	.short	505
	.short	328
	.short	202
	.short	203
	.short	204
	.short	415
	.short	415
	.short	36
	.short	329
	.short	330
	.short	435
	.short	92
	.short	441
	.short	198
	.short	568
	.short	214
	.short	155
	.short	584
	.short	235
	.short	236
	.short	237
	.short	143
	.short	239
	.short	346
	.short	133
	.short	581
	.short	438
	.short	246
	.short	443
	.short	443
	.short	443
	.short	444
	.short	445
	.short	10
	.short	585
	.short	276
	.short	20
	.short	42
	.short	172
	.short	415
	.short	294
	.short	331
	.short	288
	.short	443
	.short	443
	.short	443
	.short	444
	.short	445
	.short	10
	.short	295
	.short	415
	.short	35
	.short	338
	.short	219
	.short	3
	.short	149
	.short	328
	.short	482
	.short	327
	.short	414
	.short	331
	.short	170
	.short	276
	.short	572
	.short	48
	.short	435
	.short	75
	.short	169
	.short	335
	.short	19
	.short	171
	.short	251
	.short	442
	.short	413
	.short	414
	.short	328
	.short	331
	.short	415
	.short	586
	.short	343
	.short	276
	.short	177
	.short	351
	.short	496
	.short	435
	.short	17
	.short	340
	.short	415
	.short	481
	.short	253
	.short	255
	.short	328
	.short	276
	.short	502
	.short	415
	.short	415
	.short	472
	.short	331
	.short	503
	.short	357
	.short	435
	.short	94
	.short	576
	.short	415
	.short	151
	.short	231
	.short	312
	.short	415
	.short	577
	.short	516
	.short	54
	.short	472
	.short	328
	.short	393
	.short	291
	.short	281
	.short	38
	.short	37
	.short	494
	.short	305
	.short	521
	.short	435
	.short	95
	.short	232
	.short	214
	.short	36
	.short	329
	.short	330
	.short	526
	.short	498
	.short	441
	.short	188
	.short	189
	.short	415
	.short	500
	.short	292
	.short	522
	.short	262
	.short	530
	.short	260
	.short	263
	.short	513
	.short	549
	.short	269
	.short	415
	.short	441
	.short	589
	.short	400
	.short	54
	.short	415
	.short	525
	.short	527
	.short	415
	.short	415
	.short	271
	.short	415
	.short	273
	.short	415
	.short	415
	.short	275
	.short	280
	.short	443
	.short	443
	.short	443
	.short	444
	.short	445
	.short	10
	.short	107
	.short	380
	.short	415
	.short	383
	.short	415
	.short	384
	.short	283
	.short	415
	.short	415
	.short	443
	.short	443
	.short	443
	.short	284
	.short	285
	.short	580
	.short	300
	.short	415
	.short	591
	.short	415
	.short	293
	.short	415
	.short	415
	.short	296
	.short	297
	.short	605
	.short	226
	.short	550
	.short	415
	.short	415
	.short	415
	.short	225
	.short	608
	.short	415
	.short	302
	.short	415
	.short	551
	.short	227
	.short	415
	.short	415
	.short	415
	.short	301
	.short	544
	.short	552
	.short	369
	.short	158
	.short	373
	.short	558
	.short	159
	.short	278
	.short	371
	.short	160
	.short	51
	.short	207
	.short	560
	.short	561
	.short	161
	.short	140
	.short	379
	.short	117
	.short	571
	.short	163
	.short	391
	.short	392
	.short	181
	.short	180
	.short	321
	.short	602
	.short	578
	.short	118
	.short	119
	.short	120
	.short	121
	.short	123
	.short	55
	.short	587
	.short	58
	.short	603
	.short	604
	.short	607
	.short	62
	.short	174
	.short	103
	.short	224
	.short	111
	.short	409
	.short	238
	.short	428
	.short	199
	.short	323
	.short	657
	.short	658
	.short	659
	.short	146
	.short	147
	.short	455
	.short	458
	.short	34
	.short	474
	.short	462
	.short	471
	.short	182
	.short	195
	.short	148
	.short	475
	.short	476
	.short	480
	.short	5
	.short	12
	.short	493
	.short	44
	.short	11
	.short	106
	.short	138
	.short	509
	.short	510
	.short	501
	.short	223
	.short	49
	.short	361
	.short	108
	.short	109
	.short	152
	.short	266
	.short	50
	.short	110
	.short	157
	.short	258
	.short	370
	.short	184
	.short	559
	.short	139
	.short	151
	.short	113
	.short	279
	.short	162
	.short	115
	.short	374
	.short	15
	.short	574
	.short	116
	.short	165
	.short	52
	.short	13
	.short	366
	.short	579
	.short	53
	.short	167
	.short	168
	.short	166
	.short	583
	.short	124
	.short	114
	.short	122
	.short	562
	.short	566
	.short	14
	.short	61
	.short	599
	.short	600
	.short	125
	.short	173
	.short	298
	.short	590
	.short	187
	.short	406
	.short	941
	.short	614
	.short	941
	.short	402
	.align	4
	.type	yyRuleInfo, @object
	.size	yyRuleInfo, 1292
yyRuleInfo:
	.short	142
	.byte	1
	.zero	1
	.short	143
	.byte	2
	.zero	1
	.short	143
	.byte	1
	.zero	1
	.short	144
	.byte	1
	.zero	1
	.short	144
	.byte	3
	.zero	1
	.short	145
	.byte	0
	.zero	1
	.short	145
	.byte	1
	.zero	1
	.short	145
	.byte	3
	.zero	1
	.short	146
	.byte	1
	.zero	1
	.short	147
	.byte	3
	.zero	1
	.short	149
	.byte	0
	.zero	1
	.short	149
	.byte	1
	.zero	1
	.short	149
	.byte	2
	.zero	1
	.short	148
	.byte	0
	.zero	1
	.short	148
	.byte	1
	.zero	1
	.short	148
	.byte	1
	.zero	1
	.short	148
	.byte	1
	.zero	1
	.short	147
	.byte	2
	.zero	1
	.short	147
	.byte	2
	.zero	1
	.short	147
	.byte	2
	.zero	1
	.short	151
	.byte	1
	.zero	1
	.short	151
	.byte	0
	.zero	1
	.short	147
	.byte	2
	.zero	1
	.short	147
	.byte	3
	.zero	1
	.short	147
	.byte	5
	.zero	1
	.short	147
	.byte	2
	.zero	1
	.short	152
	.byte	6
	.zero	1
	.short	154
	.byte	1
	.zero	1
	.short	156
	.byte	0
	.zero	1
	.short	156
	.byte	3
	.zero	1
	.short	155
	.byte	1
	.zero	1
	.short	155
	.byte	0
	.zero	1
	.short	153
	.byte	4
	.zero	1
	.short	153
	.byte	2
	.zero	1
	.short	158
	.byte	3
	.zero	1
	.short	158
	.byte	1
	.zero	1
	.short	161
	.byte	3
	.zero	1
	.short	162
	.byte	1
	.zero	1
	.short	165
	.byte	1
	.zero	1
	.short	165
	.byte	1
	.zero	1
	.short	166
	.byte	1
	.zero	1
	.short	150
	.byte	1
	.zero	1
	.short	150
	.byte	1
	.zero	1
	.short	150
	.byte	1
	.zero	1
	.short	163
	.byte	0
	.zero	1
	.short	163
	.byte	1
	.zero	1
	.short	167
	.byte	1
	.zero	1
	.short	167
	.byte	4
	.zero	1
	.short	167
	.byte	6
	.zero	1
	.short	168
	.byte	1
	.zero	1
	.short	168
	.byte	2
	.zero	1
	.short	169
	.byte	1
	.zero	1
	.short	169
	.byte	1
	.zero	1
	.short	164
	.byte	2
	.zero	1
	.short	164
	.byte	0
	.zero	1
	.short	172
	.byte	3
	.zero	1
	.short	172
	.byte	1
	.zero	1
	.short	173
	.byte	2
	.zero	1
	.short	173
	.byte	4
	.zero	1
	.short	173
	.byte	3
	.zero	1
	.short	173
	.byte	3
	.zero	1
	.short	173
	.byte	2
	.zero	1
	.short	173
	.byte	2
	.zero	1
	.short	173
	.byte	3
	.zero	1
	.short	173
	.byte	5
	.zero	1
	.short	173
	.byte	2
	.zero	1
	.short	173
	.byte	4
	.zero	1
	.short	173
	.byte	4
	.zero	1
	.short	173
	.byte	1
	.zero	1
	.short	173
	.byte	2
	.zero	1
	.short	178
	.byte	0
	.zero	1
	.short	178
	.byte	1
	.zero	1
	.short	180
	.byte	0
	.zero	1
	.short	180
	.byte	2
	.zero	1
	.short	182
	.byte	2
	.zero	1
	.short	182
	.byte	3
	.zero	1
	.short	182
	.byte	3
	.zero	1
	.short	182
	.byte	3
	.zero	1
	.short	183
	.byte	2
	.zero	1
	.short	183
	.byte	2
	.zero	1
	.short	183
	.byte	1
	.zero	1
	.short	183
	.byte	1
	.zero	1
	.short	181
	.byte	3
	.zero	1
	.short	181
	.byte	2
	.zero	1
	.short	184
	.byte	0
	.zero	1
	.short	184
	.byte	2
	.zero	1
	.short	184
	.byte	2
	.zero	1
	.short	159
	.byte	0
	.zero	1
	.short	159
	.byte	2
	.zero	1
	.short	185
	.byte	3
	.zero	1
	.short	185
	.byte	2
	.zero	1
	.short	185
	.byte	1
	.zero	1
	.short	186
	.byte	2
	.zero	1
	.short	186
	.byte	7
	.zero	1
	.short	186
	.byte	5
	.zero	1
	.short	186
	.byte	5
	.zero	1
	.short	186
	.byte	10
	.zero	1
	.short	188
	.byte	0
	.zero	1
	.short	188
	.byte	1
	.zero	1
	.short	176
	.byte	0
	.zero	1
	.short	176
	.byte	3
	.zero	1
	.short	189
	.byte	0
	.zero	1
	.short	189
	.byte	2
	.zero	1
	.short	190
	.byte	1
	.zero	1
	.short	190
	.byte	1
	.zero	1
	.short	190
	.byte	1
	.zero	1
	.short	147
	.byte	4
	.zero	1
	.short	192
	.byte	2
	.zero	1
	.short	192
	.byte	0
	.zero	1
	.short	147
	.byte	8
	.zero	1
	.short	147
	.byte	4
	.zero	1
	.short	147
	.byte	1
	.zero	1
	.short	160
	.byte	1
	.zero	1
	.short	160
	.byte	3
	.zero	1
	.short	195
	.byte	1
	.zero	1
	.short	195
	.byte	2
	.zero	1
	.short	195
	.byte	1
	.zero	1
	.short	194
	.byte	9
	.zero	1
	.short	196
	.byte	1
	.zero	1
	.short	196
	.byte	1
	.zero	1
	.short	196
	.byte	0
	.zero	1
	.short	204
	.byte	2
	.zero	1
	.short	204
	.byte	0
	.zero	1
	.short	197
	.byte	3
	.zero	1
	.short	197
	.byte	2
	.zero	1
	.short	197
	.byte	4
	.zero	1
	.short	205
	.byte	2
	.zero	1
	.short	205
	.byte	1
	.zero	1
	.short	205
	.byte	0
	.zero	1
	.short	198
	.byte	0
	.zero	1
	.short	198
	.byte	2
	.zero	1
	.short	207
	.byte	2
	.zero	1
	.short	207
	.byte	0
	.zero	1
	.short	206
	.byte	7
	.zero	1
	.short	206
	.byte	7
	.zero	1
	.short	206
	.byte	7
	.zero	1
	.short	157
	.byte	0
	.zero	1
	.short	157
	.byte	2
	.zero	1
	.short	193
	.byte	2
	.zero	1
	.short	208
	.byte	1
	.zero	1
	.short	208
	.byte	2
	.zero	1
	.short	208
	.byte	3
	.zero	1
	.short	208
	.byte	4
	.zero	1
	.short	210
	.byte	2
	.zero	1
	.short	210
	.byte	0
	.zero	1
	.short	209
	.byte	0
	.zero	1
	.short	209
	.byte	3
	.zero	1
	.short	209
	.byte	2
	.zero	1
	.short	211
	.byte	4
	.zero	1
	.short	211
	.byte	0
	.zero	1
	.short	202
	.byte	0
	.zero	1
	.short	202
	.byte	3
	.zero	1
	.short	214
	.byte	4
	.zero	1
	.short	214
	.byte	2
	.zero	1
	.short	215
	.byte	1
	.zero	1
	.short	177
	.byte	1
	.zero	1
	.short	177
	.byte	1
	.zero	1
	.short	177
	.byte	0
	.zero	1
	.short	200
	.byte	0
	.zero	1
	.short	200
	.byte	3
	.zero	1
	.short	201
	.byte	0
	.zero	1
	.short	201
	.byte	2
	.zero	1
	.short	203
	.byte	0
	.zero	1
	.short	203
	.byte	2
	.zero	1
	.short	203
	.byte	4
	.zero	1
	.short	203
	.byte	4
	.zero	1
	.short	147
	.byte	5
	.zero	1
	.short	199
	.byte	0
	.zero	1
	.short	199
	.byte	2
	.zero	1
	.short	147
	.byte	7
	.zero	1
	.short	217
	.byte	5
	.zero	1
	.short	217
	.byte	3
	.zero	1
	.short	147
	.byte	8
	.zero	1
	.short	147
	.byte	5
	.zero	1
	.short	147
	.byte	6
	.zero	1
	.short	218
	.byte	2
	.zero	1
	.short	218
	.byte	1
	.zero	1
	.short	220
	.byte	3
	.zero	1
	.short	220
	.byte	1
	.zero	1
	.short	219
	.byte	0
	.zero	1
	.short	219
	.byte	3
	.zero	1
	.short	213
	.byte	3
	.zero	1
	.short	213
	.byte	1
	.zero	1
	.short	175
	.byte	1
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	174
	.byte	1
	.zero	1
	.short	175
	.byte	1
	.zero	1
	.short	175
	.byte	1
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	5
	.zero	1
	.short	174
	.byte	1
	.zero	1
	.short	174
	.byte	1
	.zero	1
	.short	175
	.byte	1
	.zero	1
	.short	175
	.byte	1
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	6
	.zero	1
	.short	175
	.byte	5
	.zero	1
	.short	175
	.byte	4
	.zero	1
	.short	174
	.byte	1
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	222
	.byte	1
	.zero	1
	.short	222
	.byte	2
	.zero	1
	.short	222
	.byte	1
	.zero	1
	.short	222
	.byte	2
	.zero	1
	.short	223
	.byte	2
	.zero	1
	.short	223
	.byte	0
	.zero	1
	.short	175
	.byte	4
	.zero	1
	.short	175
	.byte	2
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	4
	.zero	1
	.short	175
	.byte	2
	.zero	1
	.short	175
	.byte	2
	.zero	1
	.short	175
	.byte	2
	.zero	1
	.short	175
	.byte	2
	.zero	1
	.short	224
	.byte	1
	.zero	1
	.short	224
	.byte	2
	.zero	1
	.short	175
	.byte	5
	.zero	1
	.short	225
	.byte	1
	.zero	1
	.short	225
	.byte	2
	.zero	1
	.short	175
	.byte	5
	.zero	1
	.short	175
	.byte	3
	.zero	1
	.short	175
	.byte	5
	.zero	1
	.short	175
	.byte	4
	.zero	1
	.short	175
	.byte	4
	.zero	1
	.short	175
	.byte	5
	.zero	1
	.short	227
	.byte	5
	.zero	1
	.short	227
	.byte	4
	.zero	1
	.short	228
	.byte	2
	.zero	1
	.short	228
	.byte	0
	.zero	1
	.short	226
	.byte	1
	.zero	1
	.short	226
	.byte	0
	.zero	1
	.short	221
	.byte	1
	.zero	1
	.short	221
	.byte	0
	.zero	1
	.short	216
	.byte	3
	.zero	1
	.short	216
	.byte	1
	.zero	1
	.short	147
	.byte	11
	.zero	1
	.short	229
	.byte	1
	.zero	1
	.short	229
	.byte	0
	.zero	1
	.short	179
	.byte	0
	.zero	1
	.short	179
	.byte	3
	.zero	1
	.short	187
	.byte	5
	.zero	1
	.short	187
	.byte	3
	.zero	1
	.short	230
	.byte	0
	.zero	1
	.short	230
	.byte	2
	.zero	1
	.short	147
	.byte	4
	.zero	1
	.short	147
	.byte	1
	.zero	1
	.short	147
	.byte	2
	.zero	1
	.short	147
	.byte	3
	.zero	1
	.short	147
	.byte	5
	.zero	1
	.short	147
	.byte	6
	.zero	1
	.short	147
	.byte	5
	.zero	1
	.short	147
	.byte	6
	.zero	1
	.short	231
	.byte	1
	.zero	1
	.short	231
	.byte	1
	.zero	1
	.short	231
	.byte	1
	.zero	1
	.short	231
	.byte	1
	.zero	1
	.short	231
	.byte	1
	.zero	1
	.short	170
	.byte	2
	.zero	1
	.short	171
	.byte	2
	.zero	1
	.short	233
	.byte	1
	.zero	1
	.short	232
	.byte	1
	.zero	1
	.short	232
	.byte	0
	.zero	1
	.short	147
	.byte	5
	.zero	1
	.short	234
	.byte	11
	.zero	1
	.short	236
	.byte	1
	.zero	1
	.short	236
	.byte	1
	.zero	1
	.short	236
	.byte	2
	.zero	1
	.short	236
	.byte	0
	.zero	1
	.short	237
	.byte	1
	.zero	1
	.short	237
	.byte	1
	.zero	1
	.short	237
	.byte	3
	.zero	1
	.short	238
	.byte	0
	.zero	1
	.short	238
	.byte	3
	.zero	1
	.short	239
	.byte	0
	.zero	1
	.short	239
	.byte	2
	.zero	1
	.short	235
	.byte	3
	.zero	1
	.short	235
	.byte	2
	.zero	1
	.short	240
	.byte	6
	.zero	1
	.short	240
	.byte	8
	.zero	1
	.short	240
	.byte	5
	.zero	1
	.short	240
	.byte	4
	.zero	1
	.short	240
	.byte	1
	.zero	1
	.short	175
	.byte	4
	.zero	1
	.short	175
	.byte	6
	.zero	1
	.short	191
	.byte	1
	.zero	1
	.short	191
	.byte	1
	.zero	1
	.short	191
	.byte	1
	.zero	1
	.short	147
	.byte	4
	.zero	1
	.short	147
	.byte	6
	.zero	1
	.short	147
	.byte	3
	.zero	1
	.short	242
	.byte	0
	.zero	1
	.short	242
	.byte	2
	.zero	1
	.short	241
	.byte	1
	.zero	1
	.short	241
	.byte	0
	.zero	1
	.short	147
	.byte	1
	.zero	1
	.short	147
	.byte	3
	.zero	1
	.short	147
	.byte	1
	.zero	1
	.short	147
	.byte	3
	.zero	1
	.short	147
	.byte	6
	.zero	1
	.short	147
	.byte	6
	.zero	1
	.short	243
	.byte	1
	.zero	1
	.short	244
	.byte	0
	.zero	1
	.short	244
	.byte	1
	.zero	1
	.short	147
	.byte	1
	.zero	1
	.short	147
	.byte	4
	.zero	1
	.short	245
	.byte	7
	.zero	1
	.short	246
	.byte	1
	.zero	1
	.short	246
	.byte	3
	.zero	1
	.short	247
	.byte	0
	.zero	1
	.short	247
	.byte	2
	.zero	1
	.short	248
	.byte	1
	.zero	1
	.short	248
	.byte	3
	.zero	1
	.short	249
	.byte	1
	.zero	1
	.short	250
	.byte	0
	.zero	1
	.short	250
	.byte	2
	.zero	1
	.align	4
	.type	opcodeProperty, @object
	.size	opcodeProperty, 146
opcodeProperty:
	.byte	0
	.byte	1
	.byte	0
	.byte	0
	.byte	16
	.byte	8
	.byte	2
	.byte	0
	.byte	0
	.byte	4
	.byte	0
	.byte	5
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.byte	0
	.byte	1
	.byte	4
	.byte	4
	.byte	0
	.byte	0
	.byte	5
	.byte	0
	.byte	4
	.byte	2
	.byte	0
	.byte	2
	.byte	4
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.byte	17
	.byte	17
	.byte	2
	.byte	5
	.byte	0
	.byte	2
	.byte	17
	.byte	4
	.byte	0
	.byte	0
	.byte	12
	.byte	17
	.byte	1
	.byte	2
	.byte	1
	.byte	33
	.byte	8
	.byte	0
	.byte	2
	.byte	1
	.byte	17
	.byte	1
	.byte	2
	.byte	0
	.byte	0
	.byte	4
	.byte	0
	.byte	0
	.byte	17
	.byte	0
	.byte	0
	.byte	44
	.byte	44
	.byte	5
	.byte	0
	.byte	17
	.byte	5
	.byte	5
	.byte	21
	.byte	21
	.byte	21
	.byte	21
	.byte	21
	.byte	21
	.byte	0
	.byte	44
	.byte	44
	.byte	44
	.byte	44
	.byte	44
	.byte	44
	.byte	44
	.byte	44
	.byte	44
	.byte	44
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.byte	2
	.byte	0
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	0
	.byte	0
	.byte	1
	.byte	2
	.byte	8
	.byte	17
	.byte	0
	.byte	2
	.byte	2
	.byte	21
	.byte	0
	.byte	0
	.byte	16
	.byte	0
	.byte	0
	.byte	2
	.byte	0
	.byte	2
	.byte	1
	.byte	17
	.byte	0
	.byte	0
	.byte	5
	.byte	0
	.byte	17
	.byte	5
	.byte	2
	.byte	0
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.section	.rodata.str1.1
.LC584:
	.string	"RELEASE"
	.section	.rodata
	.align	4
	.type	az.16235, @object
	.size	az.16235, 12
az.16235:
	.long	.LC414
	.long	.LC584
	.long	.LC416
	.align	4
	.type	temp_master_schema.18240, @object
	.size	temp_master_schema.18240, 114
temp_master_schema.18240:
	.string	"CREATE TEMP TABLE sqlite_temp_master(\n  type text,\n  name text,\n  tbl_name text,\n  rootpage integer,\n  sql text\n)"
	.align	4
	.type	master_schema.18239, @object
	.size	master_schema.18239, 104
master_schema.18239:
	.string	"CREATE TABLE sqlite_master(\n  type text,\n  name text,\n  tbl_name text,\n  rootpage integer,\n  sql text\n)"
	.align	2
	.type	aEnc.16332, @object
	.size	aEnc.16332, 3
aEnc.16332:
	.byte	3
	.byte	2
	.byte	1
	.align	4
	.type	dropTrigger.19438, @object
	.size	dropTrigger.19438, 36
dropTrigger.19438:
	.byte	122
	.byte	0
	.byte	-10
	.byte	0
	.byte	94
	.byte	0
	.byte	1
	.byte	0
	.byte	3
	.byte	0
	.byte	1
	.byte	2
	.byte	73
	.byte	2
	.byte	-9
	.byte	1
	.byte	94
	.byte	0
	.byte	1
	.byte	0
	.byte	3
	.byte	0
	.byte	0
	.byte	2
	.byte	73
	.byte	2
	.byte	-9
	.byte	1
	.byte	91
	.byte	0
	.byte	0
	.byte	0
	.byte	106
	.byte	0
	.byte	-2
	.byte	0
	.align	2
	.type	nullRecord.14792, @object
	.size	nullRecord.14792, 2
nullRecord.14792:
	.byte	2
	.byte	0
	.align	4
	.type	one.14549, @object
	.size	one.14549, 8
one.14549:
	.long	.LC323
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.align	2
	.type	ops.20226, @object
	.size	ops.20226, 2
ops.20226:
	.byte	78
	.byte	76
	.align	2
	.type	aStart.20567, @object
	.size	aStart.20567, 2
aStart.20567:
	.byte	122
	.byte	54
	.align	2
	.type	aStep.20566, @object
	.size	aStep.20566, 2
aStep.20566:
	.byte	106
	.byte	49
	.align	4
	.type	keywords.18412, @object
	.size	keywords.18412, 84
keywords.18412:
	.string	"natural"
	.byte	7
	.byte	4
	.zero	2
	.string	"left"
	.zero	3
	.byte	4
	.byte	40
	.zero	2
	.string	"right"
	.zero	2
	.byte	5
	.byte	48
	.zero	2
	.string	"full"
	.zero	3
	.byte	4
	.byte	56
	.zero	2
	.string	"outer"
	.zero	2
	.byte	5
	.byte	32
	.zero	2
	.string	"inner"
	.zero	2
	.byte	5
	.byte	1
	.zero	2
	.string	"cross"
	.zero	2
	.byte	5
	.byte	3
	.zero	2
	.align	4
	.type	readCookie.18203, @object
	.size	readCookie.18203, 8
readCookie.18203:
	.byte	112
	.byte	0
	.byte	1
	.byte	0
	.byte	90
	.byte	1
	.byte	1
	.byte	0
	.align	4
	.type	setCookie.18201, @object
	.size	setCookie.18201, 12
setCookie.18201:
	.byte	102
	.byte	0
	.byte	1
	.byte	0
	.byte	48
	.byte	0
	.byte	1
	.byte	0
	.byte	4
	.byte	0
	.byte	0
	.byte	1
	.section	.rodata.str1.1
.LC585:
	.string	"UTF8"
.LC586:
	.string	"UTF-8"
.LC587:
	.string	"UTF-16le"
.LC588:
	.string	"UTF-16be"
.LC589:
	.string	"UTF16le"
.LC590:
	.string	"UTF16be"
.LC591:
	.string	"UTF-16"
.LC592:
	.string	"UTF16"
	.section	.rodata
	.align	4
	.type	encnames.18189, @object
	.size	encnames.18189, 72
encnames.18189:
	.long	.LC585
	.byte	1
	.zero	3
	.long	.LC586
	.byte	1
	.zero	3
	.long	.LC587
	.byte	2
	.zero	3
	.long	.LC588
	.byte	3
	.zero	3
	.long	.LC589
	.byte	2
	.zero	3
	.long	.LC590
	.byte	3
	.zero	3
	.long	.LC591
	.byte	0
	.zero	3
	.long	.LC592
	.byte	0
	.zero	3
	.long	0
	.byte	0
	.zero	3
	.align	4
	.type	cntIdx.18176, @object
	.size	cntIdx.18176, 40
cntIdx.18176:
	.byte	48
	.byte	0
	.byte	3
	.byte	0
	.byte	122
	.byte	0
	.byte	0
	.byte	0
	.byte	42
	.byte	3
	.byte	1
	.byte	0
	.byte	106
	.byte	0
	.byte	0
	.byte	0
	.byte	74
	.byte	2
	.byte	0
	.byte	3
	.byte	42
	.byte	1
	.byte	-1
	.byte	0
	.byte	94
	.byte	0
	.byte	2
	.byte	0
	.byte	94
	.byte	0
	.byte	3
	.byte	0
	.byte	89
	.byte	3
	.byte	2
	.byte	2
	.byte	90
	.byte	2
	.byte	1
	.byte	0
	.align	4
	.type	idxErr.18172, @object
	.size	idxErr.18172, 44
idxErr.18172:
	.byte	42
	.byte	1
	.byte	-1
	.byte	0
	.byte	94
	.byte	0
	.byte	3
	.byte	0
	.byte	40
	.byte	1
	.byte	4
	.byte	0
	.byte	94
	.byte	0
	.byte	5
	.byte	0
	.byte	94
	.byte	0
	.byte	6
	.byte	0
	.byte	89
	.byte	4
	.byte	3
	.byte	3
	.byte	89
	.byte	5
	.byte	3
	.byte	3
	.byte	89
	.byte	6
	.byte	3
	.byte	3
	.byte	90
	.byte	3
	.byte	1
	.byte	0
	.byte	-127
	.byte	1
	.byte	0
	.byte	0
	.byte	39
	.byte	0
	.byte	0
	.byte	0
	.align	4
	.type	endCode.18153, @object
	.size	endCode.18153, 16
endCode.18153:
	.byte	42
	.byte	1
	.byte	0
	.byte	0
	.byte	23
	.byte	1
	.byte	0
	.byte	0
	.byte	94
	.byte	0
	.byte	3
	.byte	0
	.byte	90
	.byte	3
	.byte	1
	.byte	0
	.align	4
	.type	setMeta6.18096, @object
	.size	setMeta6.18096, 24
setMeta6.18096:
	.byte	102
	.byte	0
	.byte	1
	.byte	0
	.byte	112
	.byte	0
	.byte	1
	.byte	3
	.byte	11
	.byte	1
	.byte	0
	.byte	0
	.byte	39
	.byte	0
	.byte	2
	.byte	0
	.byte	48
	.byte	0
	.byte	1
	.byte	0
	.byte	4
	.byte	0
	.byte	6
	.byte	1
	.section	.rodata.str1.1
.LC593:
	.string	"delete"
.LC594:
	.string	"persist"
.LC595:
	.string	"off"
.LC596:
	.string	"truncate"
	.section	.rodata
	.align	4
	.type	azModeName.18080, @object
	.size	azModeName.18080, 20
azModeName.18080:
	.long	.LC593
	.long	.LC594
	.long	.LC595
	.long	.LC596
	.long	.LC368
	.align	4
	.type	getCacheSize.18064, @object
	.size	getCacheSize.18064, 28
getCacheSize.18064:
	.byte	112
	.byte	0
	.byte	1
	.byte	2
	.byte	-127
	.byte	1
	.byte	6
	.byte	0
	.byte	48
	.byte	0
	.byte	2
	.byte	0
	.byte	85
	.byte	1
	.byte	2
	.byte	1
	.byte	-127
	.byte	1
	.byte	6
	.byte	0
	.byte	48
	.byte	0
	.byte	1
	.byte	0
	.byte	90
	.byte	1
	.byte	1
	.byte	0
	.align	4
	.type	iValue.17986, @object
	.size	iValue.17986, 7
iValue.17986:
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	1
	.byte	2
	.align	4
	.type	iLength.17985, @object
	.size	iLength.17985, 7
iLength.17985:
	.byte	2
	.byte	2
	.byte	3
	.byte	5
	.byte	3
	.byte	4
	.byte	4
	.align	4
	.type	iOffset.17984, @object
	.size	iOffset.17984, 7
iOffset.17984:
	.byte	0
	.byte	1
	.byte	2
	.byte	4
	.byte	9
	.byte	12
	.byte	16
	.align	4
	.type	zText.17983, @object
	.size	zText.17983, 21
zText.17983:
	.string	"onoffalseyestruefull"
	.section	.rodata.str1.1
.LC597:
	.string	"full_column_names"
.LC598:
	.string	"short_column_names"
.LC599:
	.string	"count_changes"
.LC600:
	.string	"empty_result_callbacks"
.LC601:
	.string	"legacy_file_format"
.LC602:
	.string	"fullfsync"
.LC603:
	.string	"reverse_unordered_selects"
.LC604:
	.string	"ignore_check_constraints"
.LC605:
	.string	"writable_schema"
.LC606:
	.string	"omit_readlock"
.LC607:
	.string	"read_uncommitted"
	.section	.rodata
	.align	4
	.type	aPragma.18031, @object
	.size	aPragma.18031, 88
aPragma.18031:
	.long	.LC597
	.long	32
	.long	.LC598
	.long	64
	.long	.LC599
	.long	128
	.long	.LC600
	.long	256
	.long	.LC601
	.long	32768
	.long	.LC602
	.long	65536
	.long	.LC603
	.long	4194304
	.long	.LC604
	.long	8192
	.long	.LC605
	.long	264192
	.long	.LC606
	.long	4096
	.long	.LC607
	.long	16384
	.align	4
	.type	likeInfoAlt, @object
	.size	likeInfoAlt, 4
likeInfoAlt:
	.byte	37
	.byte	95
	.byte	0
	.byte	0
	.section	.rodata.str1.1
.LC608:
	.string	"sqlite_attach"
	.section .data
	.align	4
	.type	attach_func.15350, @object
	.size	attach_func.15350, 32
attach_func.15350:
	.short	3
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	attachFunc
	.long	0
	.long	0
	.long	.LC608
	.long	0
	.section	.rodata.str1.1
.LC609:
	.string	"sqlite_detach"
	.section .data
	.align	4
	.type	detach_func.15343, @object
	.size	detach_func.15343, 32
detach_func.15343:
	.short	1
	.byte	1
	.byte	0
	.long	0
	.long	0
	.long	detachFunc
	.long	0
	.long	0
	.long	.LC609
	.long	0
	.section	.rodata
	.align	4
	.type	yy_reduce_ofst, @object
	.size	yy_reduce_ofst, 608
yy_reduce_ofst:
	.short	-141
	.short	82
	.short	154
	.short	284
	.short	12
	.short	75
	.short	69
	.short	73
	.short	142
	.short	-59
	.short	145
	.short	87
	.short	159
	.short	220
	.short	226
	.short	346
	.short	289
	.short	155
	.short	429
	.short	437
	.short	442
	.short	486
	.short	499
	.short	505
	.short	507
	.short	519
	.short	558
	.short	571
	.short	577
	.short	588
	.short	591
	.short	630
	.short	643
	.short	649
	.short	651
	.short	662
	.short	702
	.short	715
	.short	721
	.short	733
	.short	774
	.short	787
	.short	793
	.short	805
	.short	846
	.short	859
	.short	865
	.short	877
	.short	881
	.short	934
	.short	936
	.short	963
	.short	967
	.short	969
	.short	998
	.short	1053
	.short	1072
	.short	1088
	.short	1109
	.short	-179
	.short	850
	.short	283
	.short	380
	.short	381
	.short	89
	.short	304
	.short	390
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	2
	.short	215
	.short	2
	.short	2
	.short	449
	.short	574
	.short	719
	.short	722
	.short	791
	.short	134
	.short	65
	.short	942
	.short	521
	.short	794
	.short	-47
	.short	878
	.short	956
	.short	986
	.short	1003
	.short	1047
	.short	1074
	.short	1092
	.short	295
	.short	1104
	.short	2
	.short	779
	.short	2
	.short	2
	.short	2
	.short	2
	.short	158
	.short	338
	.short	572
	.short	644
	.short	650
	.short	670
	.short	723
	.short	392
	.short	564
	.short	792
	.short	885
	.short	966
	.short	1002
	.short	1036
	.short	723
	.short	1084
	.short	1091
	.short	1100
	.short	1130
	.short	1141
	.short	1146
	.short	1149
	.short	1150
	.short	1152
	.short	1154
	.short	1155
	.short	1166
	.short	1168
	.short	1171
	.short	1172
	.short	1180
	.short	1182
	.short	1184
	.short	1185
	.short	1191
	.short	1192
	.short	1193
	.short	1196
	.short	1198
	.short	1201
	.short	1202
	.short	1203
	.short	554
	.short	554
	.short	734
	.short	238
	.short	326
	.short	373
	.short	-134
	.short	278
	.short	604
	.short	710
	.short	822
	.short	44
	.short	600
	.short	635
	.short	-98
	.short	-70
	.short	-54
	.short	-36
	.short	-35
	.short	-35
	.short	-35
	.short	13
	.short	-35
	.short	14
	.short	149
	.short	115
	.short	163
	.short	14
	.short	210
	.short	223
	.short	360
	.short	-35
	.short	-35
	.short	359
	.short	448
	.short	-35
	.short	-35
	.short	-35
	.short	-35
	.short	513
	.short	551
	.short	598
	.short	653
	.short	596
	.short	605
	.short	647
	.short	656
	.short	724
	.short	741
	.short	796
	.short	830
	.short	806
	.short	847
	.short	849
	.short	870
	.short	844
	.short	833
	.short	832
	.short	839
	.short	854
	.short	905
	.short	940
	.short	944
	.short	945
	.short	953
	.short	954
	.short	959
	.short	929
	.short	948
	.short	950
	.short	957
	.short	987
	.short	985
	.short	988
	.short	1062
	.short	1086
	.short	1023
	.short	1034
	.short	1041
	.short	1044
	.short	1042
	.short	1049
	.short	1095
	.short	1106
	.short	1114
	.short	1125
	.short	1134
	.short	1137
	.short	1165
	.short	1129
	.short	1135
	.short	1186
	.short	1179
	.short	1188
	.short	1195
	.short	1190
	.short	1217
	.short	1218
	.short	1220
	.short	1221
	.short	1223
	.short	1224
	.short	1225
	.short	1139
	.short	1144
	.short	1228
	.short	1229
	.short	1199
	.short	1200
	.short	1173
	.short	1197
	.short	1233
	.short	1205
	.short	1206
	.short	1207
	.short	1208
	.short	1204
	.short	1212
	.short	1174
	.short	1237
	.short	1161
	.short	1163
	.short	1248
	.short	1249
	.short	1164
	.short	1246
	.short	1231
	.short	1232
	.short	1162
	.short	1167
	.align	4
	.type	openBlob.13734, @object
	.size	openBlob.13734, 40
openBlob.13734:
	.byte	102
	.byte	0
	.byte	0
	.byte	0
	.byte	99
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.byte	0
	.byte	0
	.byte	0
	.byte	10
	.byte	0
	.byte	0
	.byte	0
	.byte	27
	.byte	1
	.byte	1
	.byte	1
	.byte	46
	.byte	0
	.byte	8
	.byte	1
	.byte	3
	.byte	0
	.byte	0
	.byte	1
	.byte	90
	.byte	1
	.byte	0
	.byte	0
	.byte	33
	.byte	0
	.byte	0
	.byte	0
	.byte	39
	.byte	0
	.byte	0
	.byte	0
	.align	4
	.type	nullMem.12897, @object
	.size	nullMem.12897, 240
nullMem.12897:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	.LC15
	.long	0
	.short	1
	.byte	5
	.byte	0
	.long	0
	.long	0
	.zero	200
	.section	.rodata.str1.1
.LC610:
	.string	"VNext"
.LC611:
	.string	"Affinity"
.LC612:
	.string	"Column"
.LC613:
	.string	"SetCookie"
.LC614:
	.string	"Seek"
.LC615:
	.string	"Sequence"
.LC616:
	.string	"Savepoint"
.LC617:
	.string	"RowKey"
.LC618:
	.string	"SCopy"
.LC619:
	.string	"OpenWrite"
.LC620:
	.string	"If"
.LC621:
	.string	"CollSeq"
.LC622:
	.string	"OpenRead"
.LC623:
	.string	"Expire"
.LC624:
	.string	"AutoCommit"
.LC625:
	.string	"Pagecount"
.LC626:
	.string	"IntegrityCk"
.LC627:
	.string	"Sort"
.LC628:
	.string	"Not"
.LC629:
	.string	"Copy"
.LC630:
	.string	"Trace"
.LC631:
	.string	"Function"
.LC632:
	.string	"IfNeg"
.LC633:
	.string	"Noop"
.LC634:
	.string	"Return"
.LC635:
	.string	"NewRowid"
.LC636:
	.string	"Variable"
.LC637:
	.string	"String"
.LC638:
	.string	"RealAffinity"
.LC639:
	.string	"VRename"
.LC640:
	.string	"ParseSchema"
.LC641:
	.string	"VOpen"
.LC642:
	.string	"Close"
.LC643:
	.string	"CreateIndex"
.LC644:
	.string	"IsUnique"
.LC645:
	.string	"NotFound"
.LC646:
	.string	"Int64"
.LC647:
	.string	"MustBeInt"
.LC648:
	.string	"Halt"
.LC649:
	.string	"Rowid"
.LC650:
	.string	"IdxLT"
.LC651:
	.string	"AddImm"
.LC652:
	.string	"Statement"
.LC653:
	.string	"RowData"
.LC654:
	.string	"MemMax"
.LC655:
	.string	"NotExists"
.LC656:
	.string	"Gosub"
.LC657:
	.string	"Integer"
.LC658:
	.string	"Prev"
.LC659:
	.string	"RowSetRead"
.LC660:
	.string	"RowSetAdd"
.LC661:
	.string	"VColumn"
.LC662:
	.string	"CreateTable"
.LC663:
	.string	"Last"
.LC664:
	.string	"SeekLe"
.LC665:
	.string	"IncrVacuum"
.LC666:
	.string	"IdxRowid"
.LC667:
	.string	"ResetCount"
.LC668:
	.string	"ContextPush"
.LC669:
	.string	"Yield"
.LC670:
	.string	"DropTrigger"
.LC671:
	.string	"DropIndex"
.LC672:
	.string	"IdxGE"
.LC673:
	.string	"IdxDelete"
.LC674:
	.string	"Vacuum"
.LC675:
	.string	"Or"
.LC676:
	.string	"And"
.LC677:
	.string	"IfNot"
.LC678:
	.string	"DropTable"
.LC679:
	.string	"SeekLt"
.LC680:
	.string	"IsNull"
.LC681:
	.string	"NotNull"
.LC682:
	.string	"Ne"
.LC683:
	.string	"Eq"
.LC684:
	.string	"Gt"
.LC685:
	.string	"Le"
.LC686:
	.string	"Lt"
.LC687:
	.string	"Ge"
.LC688:
	.string	"MakeRecord"
.LC689:
	.string	"BitAnd"
.LC690:
	.string	"BitOr"
.LC691:
	.string	"ShiftLeft"
.LC692:
	.string	"ShiftRight"
.LC693:
	.string	"Add"
.LC694:
	.string	"Subtract"
.LC695:
	.string	"Multiply"
.LC696:
	.string	"Divide"
.LC697:
	.string	"Remainder"
.LC698:
	.string	"Concat"
.LC699:
	.string	"ResultRow"
.LC700:
	.string	"Delete"
.LC701:
	.string	"AggFinal"
.LC702:
	.string	"BitNot"
.LC703:
	.string	"String8"
.LC704:
	.string	"Compare"
.LC705:
	.string	"Goto"
.LC706:
	.string	"TableLock"
.LC707:
	.string	"Clear"
.LC708:
	.string	"VerifyCookie"
.LC709:
	.string	"AggStep"
.LC710:
	.string	"SetNumColumns"
.LC711:
	.string	"Transaction"
.LC712:
	.string	"VFilter"
.LC713:
	.string	"VDestroy"
.LC714:
	.string	"ContextPop"
.LC715:
	.string	"Next"
.LC716:
	.string	"Count"
.LC717:
	.string	"IdxInsert"
.LC718:
	.string	"SeekGe"
.LC719:
	.string	"Insert"
.LC720:
	.string	"Destroy"
.LC721:
	.string	"ReadCookie"
.LC722:
	.string	"RowSetTest"
.LC723:
	.string	"LoadAnalysis"
.LC724:
	.string	"Explain"
.LC725:
	.string	"HaltIfNull"
.LC726:
	.string	"OpenPseudo"
.LC727:
	.string	"OpenEphemeral"
.LC728:
	.string	"Null"
.LC729:
	.string	"Move"
.LC730:
	.string	"Blob"
.LC731:
	.string	"Rewind"
.LC732:
	.string	"SeekGt"
.LC733:
	.string	"VBegin"
.LC734:
	.string	"VUpdate"
.LC735:
	.string	"IfZero"
.LC736:
	.string	"VCreate"
.LC737:
	.string	"Found"
.LC738:
	.string	"IfPos"
.LC739:
	.string	"Real"
.LC740:
	.string	"NullRow"
.LC741:
	.string	"Jump"
.LC742:
	.string	"Permutation"
.LC743:
	.string	"NotUsed_134"
.LC744:
	.string	"NotUsed_135"
.LC745:
	.string	"NotUsed_136"
.LC746:
	.string	"NotUsed_137"
.LC747:
	.string	"NotUsed_138"
.LC748:
	.string	"NotUsed_139"
.LC749:
	.string	"NotUsed_140"
.LC750:
	.string	"ToText"
.LC751:
	.string	"ToBlob"
.LC752:
	.string	"ToNumeric"
.LC753:
	.string	"ToInt"
.LC754:
	.string	"ToReal"
	.section	.rodata
	.align	4
	.type	azName.7729, @object
	.size	azName.7729, 584
azName.7729:
	.long	.LC63
	.long	.LC610
	.long	.LC611
	.long	.LC612
	.long	.LC613
	.long	.LC614
	.long	.LC615
	.long	.LC616
	.long	.LC617
	.long	.LC618
	.long	.LC619
	.long	.LC620
	.long	.LC621
	.long	.LC622
	.long	.LC623
	.long	.LC624
	.long	.LC625
	.long	.LC626
	.long	.LC627
	.long	.LC628
	.long	.LC629
	.long	.LC630
	.long	.LC631
	.long	.LC632
	.long	.LC633
	.long	.LC634
	.long	.LC635
	.long	.LC636
	.long	.LC637
	.long	.LC638
	.long	.LC639
	.long	.LC640
	.long	.LC641
	.long	.LC642
	.long	.LC643
	.long	.LC644
	.long	.LC645
	.long	.LC646
	.long	.LC647
	.long	.LC648
	.long	.LC649
	.long	.LC650
	.long	.LC651
	.long	.LC652
	.long	.LC653
	.long	.LC654
	.long	.LC655
	.long	.LC656
	.long	.LC657
	.long	.LC658
	.long	.LC659
	.long	.LC660
	.long	.LC661
	.long	.LC662
	.long	.LC663
	.long	.LC664
	.long	.LC665
	.long	.LC666
	.long	.LC667
	.long	.LC668
	.long	.LC669
	.long	.LC670
	.long	.LC671
	.long	.LC672
	.long	.LC673
	.long	.LC674
	.long	.LC675
	.long	.LC676
	.long	.LC677
	.long	.LC678
	.long	.LC679
	.long	.LC680
	.long	.LC681
	.long	.LC682
	.long	.LC683
	.long	.LC684
	.long	.LC685
	.long	.LC686
	.long	.LC687
	.long	.LC688
	.long	.LC689
	.long	.LC690
	.long	.LC691
	.long	.LC692
	.long	.LC693
	.long	.LC694
	.long	.LC695
	.long	.LC696
	.long	.LC697
	.long	.LC698
	.long	.LC699
	.long	.LC700
	.long	.LC701
	.long	.LC702
	.long	.LC703
	.long	.LC704
	.long	.LC705
	.long	.LC706
	.long	.LC707
	.long	.LC708
	.long	.LC709
	.long	.LC710
	.long	.LC711
	.long	.LC712
	.long	.LC713
	.long	.LC714
	.long	.LC715
	.long	.LC716
	.long	.LC717
	.long	.LC718
	.long	.LC719
	.long	.LC720
	.long	.LC721
	.long	.LC722
	.long	.LC723
	.long	.LC724
	.long	.LC725
	.long	.LC726
	.long	.LC727
	.long	.LC728
	.long	.LC729
	.long	.LC730
	.long	.LC731
	.long	.LC732
	.long	.LC733
	.long	.LC734
	.long	.LC735
	.long	.LC736
	.long	.LC737
	.long	.LC738
	.long	.LC739
	.long	.LC740
	.long	.LC741
	.long	.LC742
	.long	.LC743
	.long	.LC744
	.long	.LC745
	.long	.LC746
	.long	.LC747
	.long	.LC748
	.long	.LC749
	.long	.LC750
	.long	.LC751
	.long	.LC752
	.long	.LC753
	.long	.LC754
	.align	4
	.type	or_logic.13319, @object
	.size	or_logic.13319, 9
or_logic.13319:
	.byte	0
	.byte	1
	.byte	2
	.byte	1
	.byte	1
	.byte	1
	.byte	2
	.byte	1
	.byte	2
	.align	4
	.type	and_logic.13318, @object
	.size	and_logic.13318, 9
and_logic.13318:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	2
	.byte	0
	.byte	2
	.byte	2
	.align	4
	.type	aCopy.19698, @object
	.size	aCopy.19698, 8
aCopy.19698:
	.byte	1
	.byte	1
	.byte	3
	.byte	0
	.byte	5
	.byte	0
	.byte	6
	.byte	0
	.section	.rodata.str1.1
.LC755:
	.string	"unix"
.LC756:
	.string	"unix-none"
.LC757:
	.string	"unix-dotfile"
	.section .data
	.align	4
	.type	aVfs.9005, @object
	.size	aVfs.9005, 216
aVfs.9005:
	.long	1
	.long	32
	.long	512
	.long	0
	.long	.LC755
	.long	posixIoFinder
	.long	unixOpen
	.long	unixDelete
	.long	unixAccess
	.long	unixFullPathname
	.long	0
	.long	0
	.long	0
	.long	0
	.long	unixRandomness
	.long	unixSleep
	.long	unixCurrentTime
	.long	unixGetLastError
	.long	1
	.long	32
	.long	512
	.long	0
	.long	.LC756
	.long	nolockIoFinder
	.long	unixOpen
	.long	unixDelete
	.long	unixAccess
	.long	unixFullPathname
	.long	0
	.long	0
	.long	0
	.long	0
	.long	unixRandomness
	.long	unixSleep
	.long	unixCurrentTime
	.long	unixGetLastError
	.long	1
	.long	32
	.long	512
	.long	0
	.long	.LC757
	.long	dotlockIoFinder
	.long	unixOpen
	.long	unixDelete
	.long	unixAccess
	.long	unixFullPathname
	.long	0
	.long	0
	.long	0
	.long	0
	.long	unixRandomness
	.long	unixSleep
	.long	unixCurrentTime
	.long	unixGetLastError
	.section	.rodata
	.align	4
	.type	dotlockIoMethods, @object
	.size	dotlockIoMethods, 52
dotlockIoMethods:
	.long	1
	.long	dotlockClose
	.long	unixRead
	.long	unixWrite
	.long	unixTruncate
	.long	unixSync
	.long	unixFileSize
	.long	dotlockLock
	.long	dotlockUnlock
	.long	dotlockCheckReservedLock
	.long	unixFileControl
	.long	unixSectorSize
	.long	unixDeviceCharacteristics
	.align	4
	.type	nolockIoMethods, @object
	.size	nolockIoMethods, 52
nolockIoMethods:
	.long	1
	.long	nolockClose
	.long	unixRead
	.long	unixWrite
	.long	unixTruncate
	.long	unixSync
	.long	unixFileSize
	.long	nolockLock
	.long	nolockUnlock
	.long	nolockCheckReservedLock
	.long	unixFileControl
	.long	unixSectorSize
	.long	unixDeviceCharacteristics
	.align	4
	.type	posixIoMethods, @object
	.size	posixIoMethods, 52
posixIoMethods:
	.long	1
	.long	unixClose
	.long	unixRead
	.long	unixWrite
	.long	unixTruncate
	.long	unixSync
	.long	unixFileSize
	.long	unixLock
	.long	unixUnlock
	.long	unixCheckReservedLock
	.long	unixFileControl
	.long	unixSectorSize
	.long	unixDeviceCharacteristics
	.local	lockList
	.comm	lockList,4,4
	.local	openList
	.comm	openList,4,4
	.section	.rodata.str1.1
.LC758:
	.string	"/var/tmp"
.LC759:
	.string	"/usr/tmp"
.LC760:
	.string	"/tmp"
	.section .data
	.align	4
	.type	azDirs.8917, @object
	.size	azDirs.8917, 24
azDirs.8917:
	.long	0
	.long	0
	.long	.LC758
	.long	.LC759
	.long	.LC760
	.long	.LC40
	.local	vfsList
	.comm	vfsList,4,4
	.section	.rodata.str1.1
.LC761:
	.string	"SET NULL"
.LC762:
	.string	"SET DEFAULT"
.LC763:
	.string	"CASCADE"
	.section	.rodata
	.align	4
	.type	CSWTCH.1797, @object
	.size	CSWTCH.1797, 12
CSWTCH.1797:
	.long	.LC761
	.long	.LC762
	.long	.LC763
	.section	.rodata.str1.1
.LC764:
	.string	"UNION ALL"
.LC765:
	.string	"EXCEPT"
.LC766:
	.string	"INTERSECT"
	.section	.rodata
	.align	4
	.type	CSWTCH.1802, @object
	.size	CSWTCH.1802, 12
CSWTCH.1802:
	.long	.LC764
	.long	.LC765
	.long	.LC766
	.align	4
	.type	CSWTCH.1864, @object
	.size	CSWTCH.1864, 12
CSWTCH.1864:
	.long	0
	.long	6
	.long	4
	.section	.rodata.str1.1
.LC767:
	.string	"text"
.LC768:
	.string	"blob"
	.section	.rodata
	.align	4
	.type	CSWTCH.1881, @object
	.size	CSWTCH.1881, 16
CSWTCH.1881:
	.long	.LC514
	.long	.LC515
	.long	.LC767
	.long	.LC768
	.align	4
	.type	posixIoFinder, @object
	.size	posixIoFinder, 4
posixIoFinder:
	.long	posixIoFinderImpl
	.align	4
	.type	nolockIoFinder, @object
	.size	nolockIoFinder, 4
nolockIoFinder:
	.long	nolockIoFinderImpl
	.align	4
	.type	dotlockIoFinder, @object
	.size	dotlockIoFinder, 4
dotlockIoFinder:
	.long	dotlockIoFinderImpl
	.section	.debug_frame,"",@progbits
.Lframe0:
	.4byte	.LECIE0-.LSCIE0
.LSCIE0:
	.4byte	0xffffffff
	.byte	0x1
	.string	""
	.uleb128 0x1
	.sleb128 -4
	.byte	0x9
	.byte	0xc
	.uleb128 0x1
	.uleb128 0x0
	.align	4
.LECIE0:
.LSFDE0:
	.4byte	.LEFDE0-.LASFDE0
.LASFDE0:
	.4byte	.Lframe0
	.4byte	.LFB11
	.4byte	.LFE11-.LFB11
	.byte	0x4
	.4byte	.LCFI4-.LFB11
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI5-.LCFI4
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE0:
.LSFDE2:
	.4byte	.LEFDE2-.LASFDE2
.LASFDE2:
	.4byte	.Lframe0
	.4byte	.LFB15
	.4byte	.LFE15-.LFB15
	.byte	0x4
	.4byte	.LCFI11-.LFB15
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI12-.LCFI11
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE2:
.LSFDE4:
	.4byte	.LEFDE4-.LASFDE4
.LASFDE4:
	.4byte	.Lframe0
	.4byte	.LFB17
	.4byte	.LFE17-.LFB17
	.byte	0x4
	.4byte	.LCFI19-.LFB17
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI20-.LCFI19
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE4:
.LSFDE6:
	.4byte	.LEFDE6-.LASFDE6
.LASFDE6:
	.4byte	.Lframe0
	.4byte	.LFB53
	.4byte	.LFE53-.LFB53
	.align	4
.LEFDE6:
.LSFDE8:
	.4byte	.LEFDE8-.LASFDE8
.LASFDE8:
	.4byte	.Lframe0
	.4byte	.LFB62
	.4byte	.LFE62-.LFB62
	.align	4
.LEFDE8:
.LSFDE10:
	.4byte	.LEFDE10-.LASFDE10
.LASFDE10:
	.4byte	.Lframe0
	.4byte	.LFB63
	.4byte	.LFE63-.LFB63
	.byte	0x4
	.4byte	.LCFI22-.LFB63
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE10:
.LSFDE12:
	.4byte	.LEFDE12-.LASFDE12
.LASFDE12:
	.4byte	.Lframe0
	.4byte	.LFB64
	.4byte	.LFE64-.LFB64
	.align	4
.LEFDE12:
.LSFDE14:
	.4byte	.LEFDE14-.LASFDE14
.LASFDE14:
	.4byte	.Lframe0
	.4byte	.LFB65
	.4byte	.LFE65-.LFB65
	.align	4
.LEFDE14:
.LSFDE16:
	.4byte	.LEFDE16-.LASFDE16
.LASFDE16:
	.4byte	.Lframe0
	.4byte	.LFB67
	.4byte	.LFE67-.LFB67
	.align	4
.LEFDE16:
.LSFDE18:
	.4byte	.LEFDE18-.LASFDE18
.LASFDE18:
	.4byte	.Lframe0
	.4byte	.LFB76
	.4byte	.LFE76-.LFB76
	.byte	0x4
	.4byte	.LCFI23-.LFB76
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI26-.LCFI23
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE18:
.LSFDE20:
	.4byte	.LEFDE20-.LASFDE20
.LASFDE20:
	.4byte	.Lframe0
	.4byte	.LFB77
	.4byte	.LFE77-.LFB77
	.byte	0x4
	.4byte	.LCFI27-.LFB77
	.byte	0x90
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI28-.LCFI27
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI34-.LCFI28
	.byte	0xe
	.uleb128 0x1c
	.byte	0x94
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x6
	.align	4
.LEFDE20:
.LSFDE22:
	.4byte	.LEFDE22-.LASFDE22
.LASFDE22:
	.4byte	.Lframe0
	.4byte	.LFB78
	.4byte	.LFE78-.LFB78
	.byte	0x4
	.4byte	.LCFI35-.LFB78
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI37-.LCFI35
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE22:
.LSFDE24:
	.4byte	.LEFDE24-.LASFDE24
.LASFDE24:
	.4byte	.Lframe0
	.4byte	.LFB81
	.4byte	.LFE81-.LFB81
	.byte	0x4
	.4byte	.LCFI42-.LFB81
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI43-.LCFI42
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE24:
.LSFDE26:
	.4byte	.LEFDE26-.LASFDE26
.LASFDE26:
	.4byte	.Lframe0
	.4byte	.LFB84
	.4byte	.LFE84-.LFB84
	.byte	0x4
	.4byte	.LCFI45-.LFB84
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE26:
.LSFDE28:
	.4byte	.LEFDE28-.LASFDE28
.LASFDE28:
	.4byte	.Lframe0
	.4byte	.LFB85
	.4byte	.LFE85-.LFB85
	.byte	0x4
	.4byte	.LCFI48-.LFB85
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI49-.LCFI48
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE28:
.LSFDE30:
	.4byte	.LEFDE30-.LASFDE30
.LASFDE30:
	.4byte	.Lframe0
	.4byte	.LFB51
	.4byte	.LFE51-.LFB51
	.byte	0x4
	.4byte	.LCFI52-.LFB51
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI53-.LCFI52
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE30:
.LSFDE32:
	.4byte	.LEFDE32-.LASFDE32
.LASFDE32:
	.4byte	.Lframe0
	.4byte	.LFB86
	.4byte	.LFE86-.LFB86
	.byte	0x4
	.4byte	.LCFI55-.LFB86
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE32:
.LSFDE34:
	.4byte	.LEFDE34-.LASFDE34
.LASFDE34:
	.4byte	.Lframe0
	.4byte	.LFB87
	.4byte	.LFE87-.LFB87
	.byte	0x4
	.4byte	.LCFI64-.LFB87
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI65-.LCFI64
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE34:
.LSFDE36:
	.4byte	.LEFDE36-.LASFDE36
.LASFDE36:
	.4byte	.Lframe0
	.4byte	.LFB91
	.4byte	.LFE91-.LFB91
	.byte	0x4
	.4byte	.LCFI67-.LFB91
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI68-.LCFI67
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE36:
.LSFDE38:
	.4byte	.LEFDE38-.LASFDE38
.LASFDE38:
	.4byte	.Lframe0
	.4byte	.LFB103
	.4byte	.LFE103-.LFB103
	.byte	0x4
	.4byte	.LCFI70-.LFB103
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI71-.LCFI70
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE38:
.LSFDE40:
	.4byte	.LEFDE40-.LASFDE40
.LASFDE40:
	.4byte	.Lframe0
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.byte	0x4
	.4byte	.LCFI73-.LFB116
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE40:
.LSFDE42:
	.4byte	.LEFDE42-.LASFDE42
.LASFDE42:
	.4byte	.Lframe0
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.align	4
.LEFDE42:
.LSFDE44:
	.4byte	.LEFDE44-.LASFDE44
.LASFDE44:
	.4byte	.Lframe0
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.byte	0x4
	.4byte	.LCFI75-.LFB127
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE44:
.LSFDE46:
	.4byte	.LEFDE46-.LASFDE46
.LASFDE46:
	.4byte	.Lframe0
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.byte	0x4
	.4byte	.LCFI77-.LFB128
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE46:
.LSFDE48:
	.4byte	.LEFDE48-.LASFDE48
.LASFDE48:
	.4byte	.Lframe0
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.byte	0x4
	.4byte	.LCFI79-.LFB129
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE48:
.LSFDE50:
	.4byte	.LEFDE50-.LASFDE50
.LASFDE50:
	.4byte	.Lframe0
	.4byte	.LFB130
	.4byte	.LFE130-.LFB130
	.byte	0x4
	.4byte	.LCFI81-.LFB130
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE50:
.LSFDE52:
	.4byte	.LEFDE52-.LASFDE52
.LASFDE52:
	.4byte	.Lframe0
	.4byte	.LFB131
	.4byte	.LFE131-.LFB131
	.byte	0x4
	.4byte	.LCFI92-.LFB131
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI93-.LCFI92
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE52:
.LSFDE54:
	.4byte	.LEFDE54-.LASFDE54
.LASFDE54:
	.4byte	.Lframe0
	.4byte	.LFB135
	.4byte	.LFE135-.LFB135
	.byte	0x4
	.4byte	.LCFI95-.LFB135
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE54:
.LSFDE56:
	.4byte	.LEFDE56-.LASFDE56
.LASFDE56:
	.4byte	.Lframe0
	.4byte	.LFB136
	.4byte	.LFE136-.LFB136
	.byte	0x4
	.4byte	.LCFI96-.LFB136
	.byte	0x82
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI97-.LCFI96
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE56:
.LSFDE58:
	.4byte	.LEFDE58-.LASFDE58
.LASFDE58:
	.4byte	.Lframe0
	.4byte	.LFB137
	.4byte	.LFE137-.LFB137
	.byte	0x4
	.4byte	.LCFI98-.LFB137
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI100-.LCFI98
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE58:
.LSFDE60:
	.4byte	.LEFDE60-.LASFDE60
.LASFDE60:
	.4byte	.Lframe0
	.4byte	.LFB138
	.4byte	.LFE138-.LFB138
	.byte	0x4
	.4byte	.LCFI102-.LFB138
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE60:
.LSFDE62:
	.4byte	.LEFDE62-.LASFDE62
.LASFDE62:
	.4byte	.Lframe0
	.4byte	.LFB139
	.4byte	.LFE139-.LFB139
	.byte	0x4
	.4byte	.LCFI104-.LFB139
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI105-.LCFI104
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE62:
.LSFDE64:
	.4byte	.LEFDE64-.LASFDE64
.LASFDE64:
	.4byte	.Lframe0
	.4byte	.LFB141
	.4byte	.LFE141-.LFB141
	.align	4
.LEFDE64:
.LSFDE66:
	.4byte	.LEFDE66-.LASFDE66
.LASFDE66:
	.4byte	.Lframe0
	.4byte	.LFB144
	.4byte	.LFE144-.LFB144
	.byte	0x4
	.4byte	.LCFI106-.LFB144
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI109-.LCFI106
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.align	4
.LEFDE66:
.LSFDE68:
	.4byte	.LEFDE68-.LASFDE68
.LASFDE68:
	.4byte	.Lframe0
	.4byte	.LFB148
	.4byte	.LFE148-.LFB148
	.byte	0x4
	.4byte	.LCFI110-.LFB148
	.byte	0x90
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI113-.LCFI110
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI114-.LCFI113
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE68:
.LSFDE70:
	.4byte	.LEFDE70-.LASFDE70
.LASFDE70:
	.4byte	.Lframe0
	.4byte	.LFB152
	.4byte	.LFE152-.LFB152
	.byte	0x4
	.4byte	.LCFI119-.LFB152
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI120-.LCFI119
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE70:
.LSFDE72:
	.4byte	.LEFDE72-.LASFDE72
.LASFDE72:
	.4byte	.Lframe0
	.4byte	.LFB154
	.4byte	.LFE154-.LFB154
	.byte	0x4
	.4byte	.LCFI125-.LFB154
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE72:
.LSFDE74:
	.4byte	.LEFDE74-.LASFDE74
.LASFDE74:
	.4byte	.Lframe0
	.4byte	.LFB159
	.4byte	.LFE159-.LFB159
	.align	4
.LEFDE74:
.LSFDE76:
	.4byte	.LEFDE76-.LASFDE76
.LASFDE76:
	.4byte	.Lframe0
	.4byte	.LFB168
	.4byte	.LFE168-.LFB168
	.byte	0x4
	.4byte	.LCFI127-.LFB168
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE76:
.LSFDE78:
	.4byte	.LEFDE78-.LASFDE78
.LASFDE78:
	.4byte	.Lframe0
	.4byte	.LFB169
	.4byte	.LFE169-.LFB169
	.align	4
.LEFDE78:
.LSFDE80:
	.4byte	.LEFDE80-.LASFDE80
.LASFDE80:
	.4byte	.Lframe0
	.4byte	.LFB170
	.4byte	.LFE170-.LFB170
	.align	4
.LEFDE80:
.LSFDE82:
	.4byte	.LEFDE82-.LASFDE82
.LASFDE82:
	.4byte	.Lframe0
	.4byte	.LFB184
	.4byte	.LFE184-.LFB184
	.align	4
.LEFDE82:
.LSFDE84:
	.4byte	.LEFDE84-.LASFDE84
.LASFDE84:
	.4byte	.Lframe0
	.4byte	.LFB185
	.4byte	.LFE185-.LFB185
	.align	4
.LEFDE84:
.LSFDE86:
	.4byte	.LEFDE86-.LASFDE86
.LASFDE86:
	.4byte	.Lframe0
	.4byte	.LFB186
	.4byte	.LFE186-.LFB186
	.align	4
.LEFDE86:
.LSFDE88:
	.4byte	.LEFDE88-.LASFDE88
.LASFDE88:
	.4byte	.Lframe0
	.4byte	.LFB187
	.4byte	.LFE187-.LFB187
	.align	4
.LEFDE88:
.LSFDE90:
	.4byte	.LEFDE90-.LASFDE90
.LASFDE90:
	.4byte	.Lframe0
	.4byte	.LFB188
	.4byte	.LFE188-.LFB188
	.align	4
.LEFDE90:
.LSFDE92:
	.4byte	.LEFDE92-.LASFDE92
.LASFDE92:
	.4byte	.Lframe0
	.4byte	.LFB189
	.4byte	.LFE189-.LFB189
	.align	4
.LEFDE92:
.LSFDE94:
	.4byte	.LEFDE94-.LASFDE94
.LASFDE94:
	.4byte	.Lframe0
	.4byte	.LFB200
	.4byte	.LFE200-.LFB200
	.align	4
.LEFDE94:
.LSFDE96:
	.4byte	.LEFDE96-.LASFDE96
.LASFDE96:
	.4byte	.Lframe0
	.4byte	.LFB204
	.4byte	.LFE204-.LFB204
	.byte	0x4
	.4byte	.LCFI131-.LFB204
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI132-.LCFI131
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE96:
.LSFDE98:
	.4byte	.LEFDE98-.LASFDE98
.LASFDE98:
	.4byte	.Lframe0
	.4byte	.LFB207
	.4byte	.LFE207-.LFB207
	.byte	0x4
	.4byte	.LCFI136-.LFB207
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI137-.LCFI136
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE98:
.LSFDE100:
	.4byte	.LEFDE100-.LASFDE100
.LASFDE100:
	.4byte	.Lframe0
	.4byte	.LFB210
	.4byte	.LFE210-.LFB210
	.byte	0x4
	.4byte	.LCFI139-.LFB210
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE100:
.LSFDE102:
	.4byte	.LEFDE102-.LASFDE102
.LASFDE102:
	.4byte	.Lframe0
	.4byte	.LFB211
	.4byte	.LFE211-.LFB211
	.align	4
.LEFDE102:
.LSFDE104:
	.4byte	.LEFDE104-.LASFDE104
.LASFDE104:
	.4byte	.Lframe0
	.4byte	.LFB219
	.4byte	.LFE219-.LFB219
	.byte	0x4
	.4byte	.LCFI141-.LFB219
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI142-.LCFI141
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE104:
.LSFDE106:
	.4byte	.LEFDE106-.LASFDE106
.LASFDE106:
	.4byte	.Lframe0
	.4byte	.LFB221
	.4byte	.LFE221-.LFB221
	.byte	0x4
	.4byte	.LCFI145-.LFB221
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE106:
.LSFDE108:
	.4byte	.LEFDE108-.LASFDE108
.LASFDE108:
	.4byte	.Lframe0
	.4byte	.LFB222
	.4byte	.LFE222-.LFB222
	.byte	0x4
	.4byte	.LCFI147-.LFB222
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE108:
.LSFDE110:
	.4byte	.LEFDE110-.LASFDE110
.LASFDE110:
	.4byte	.Lframe0
	.4byte	.LFB223
	.4byte	.LFE223-.LFB223
	.byte	0x4
	.4byte	.LCFI150-.LFB223
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE110:
.LSFDE112:
	.4byte	.LEFDE112-.LASFDE112
.LASFDE112:
	.4byte	.Lframe0
	.4byte	.LFB230
	.4byte	.LFE230-.LFB230
	.byte	0x4
	.4byte	.LCFI151-.LFB230
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE112:
.LSFDE114:
	.4byte	.LEFDE114-.LASFDE114
.LASFDE114:
	.4byte	.Lframe0
	.4byte	.LFB238
	.4byte	.LFE238-.LFB238
	.byte	0x4
	.4byte	.LCFI153-.LFB238
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI154-.LCFI153
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE114:
.LSFDE116:
	.4byte	.LEFDE116-.LASFDE116
.LASFDE116:
	.4byte	.Lframe0
	.4byte	.LFB239
	.4byte	.LFE239-.LFB239
	.byte	0x4
	.4byte	.LCFI156-.LFB239
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI157-.LCFI156
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE116:
.LSFDE118:
	.4byte	.LEFDE118-.LASFDE118
.LASFDE118:
	.4byte	.Lframe0
	.4byte	.LFB241
	.4byte	.LFE241-.LFB241
	.byte	0x4
	.4byte	.LCFI159-.LFB241
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE118:
.LSFDE120:
	.4byte	.LEFDE120-.LASFDE120
.LASFDE120:
	.4byte	.Lframe0
	.4byte	.LFB245
	.4byte	.LFE245-.LFB245
	.byte	0x4
	.4byte	.LCFI161-.LFB245
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE120:
.LSFDE122:
	.4byte	.LEFDE122-.LASFDE122
.LASFDE122:
	.4byte	.Lframe0
	.4byte	.LFB246
	.4byte	.LFE246-.LFB246
	.byte	0x4
	.4byte	.LCFI162-.LFB246
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI164-.LCFI162
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI165-.LCFI164
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE122:
.LSFDE124:
	.4byte	.LEFDE124-.LASFDE124
.LASFDE124:
	.4byte	.Lframe0
	.4byte	.LFB247
	.4byte	.LFE247-.LFB247
	.byte	0x4
	.4byte	.LCFI166-.LFB247
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI169-.LCFI166
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI170-.LCFI169
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE124:
.LSFDE126:
	.4byte	.LEFDE126-.LASFDE126
.LASFDE126:
	.4byte	.Lframe0
	.4byte	.LFB250
	.4byte	.LFE250-.LFB250
	.align	4
.LEFDE126:
.LSFDE128:
	.4byte	.LEFDE128-.LASFDE128
.LASFDE128:
	.4byte	.Lframe0
	.4byte	.LFB252
	.4byte	.LFE252-.LFB252
	.byte	0x4
	.4byte	.LCFI172-.LFB252
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE128:
.LSFDE130:
	.4byte	.LEFDE130-.LASFDE130
.LASFDE130:
	.4byte	.Lframe0
	.4byte	.LFB253
	.4byte	.LFE253-.LFB253
	.align	4
.LEFDE130:
.LSFDE132:
	.4byte	.LEFDE132-.LASFDE132
.LASFDE132:
	.4byte	.Lframe0
	.4byte	.LFB255
	.4byte	.LFE255-.LFB255
	.byte	0x4
	.4byte	.LCFI174-.LFB255
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI175-.LCFI174
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE132:
.LSFDE134:
	.4byte	.LEFDE134-.LASFDE134
.LASFDE134:
	.4byte	.Lframe0
	.4byte	.LFB256
	.4byte	.LFE256-.LFB256
	.byte	0x4
	.4byte	.LCFI176-.LFB256
	.byte	0x92
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI181-.LCFI176
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI182-.LCFI181
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE134:
.LSFDE136:
	.4byte	.LEFDE136-.LASFDE136
.LASFDE136:
	.4byte	.Lframe0
	.4byte	.LFB261
	.4byte	.LFE261-.LFB261
	.byte	0x4
	.4byte	.LCFI186-.LFB261
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE136:
.LSFDE138:
	.4byte	.LEFDE138-.LASFDE138
.LASFDE138:
	.4byte	.Lframe0
	.4byte	.LFB262
	.4byte	.LFE262-.LFB262
	.byte	0x4
	.4byte	.LCFI187-.LFB262
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI190-.LCFI187
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI191-.LCFI190
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE138:
.LSFDE140:
	.4byte	.LEFDE140-.LASFDE140
.LASFDE140:
	.4byte	.Lframe0
	.4byte	.LFB263
	.4byte	.LFE263-.LFB263
	.byte	0x4
	.4byte	.LCFI192-.LFB263
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE140:
.LSFDE142:
	.4byte	.LEFDE142-.LASFDE142
.LASFDE142:
	.4byte	.Lframe0
	.4byte	.LFB265
	.4byte	.LFE265-.LFB265
	.byte	0x4
	.4byte	.LCFI195-.LFB265
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI196-.LCFI195
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE142:
.LSFDE144:
	.4byte	.LEFDE144-.LASFDE144
.LASFDE144:
	.4byte	.Lframe0
	.4byte	.LFB266
	.4byte	.LFE266-.LFB266
	.byte	0x4
	.4byte	.LCFI200-.LFB266
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI201-.LCFI200
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE144:
.LSFDE146:
	.4byte	.LEFDE146-.LASFDE146
.LASFDE146:
	.4byte	.Lframe0
	.4byte	.LFB273
	.4byte	.LFE273-.LFB273
	.byte	0x4
	.4byte	.LCFI203-.LFB273
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI206-.LCFI203
	.byte	0xe
	.uleb128 0x14
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE146:
.LSFDE148:
	.4byte	.LEFDE148-.LASFDE148
.LASFDE148:
	.4byte	.Lframe0
	.4byte	.LFB274
	.4byte	.LFE274-.LFB274
	.byte	0x4
	.4byte	.LCFI208-.LFB274
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE148:
.LSFDE150:
	.4byte	.LEFDE150-.LASFDE150
.LASFDE150:
	.4byte	.Lframe0
	.4byte	.LFB284
	.4byte	.LFE284-.LFB284
	.byte	0x4
	.4byte	.LCFI212-.LFB284
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI213-.LCFI212
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE150:
.LSFDE152:
	.4byte	.LEFDE152-.LASFDE152
.LASFDE152:
	.4byte	.Lframe0
	.4byte	.LFB293
	.4byte	.LFE293-.LFB293
	.byte	0x4
	.4byte	.LCFI217-.LFB293
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI218-.LCFI217
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE152:
.LSFDE154:
	.4byte	.LEFDE154-.LASFDE154
.LASFDE154:
	.4byte	.Lframe0
	.4byte	.LFB294
	.4byte	.LFE294-.LFB294
	.byte	0x4
	.4byte	.LCFI220-.LFB294
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI221-.LCFI220
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE154:
.LSFDE156:
	.4byte	.LEFDE156-.LASFDE156
.LASFDE156:
	.4byte	.Lframe0
	.4byte	.LFB307
	.4byte	.LFE307-.LFB307
	.byte	0x4
	.4byte	.LCFI225-.LFB307
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI226-.LCFI225
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE156:
.LSFDE158:
	.4byte	.LEFDE158-.LASFDE158
.LASFDE158:
	.4byte	.Lframe0
	.4byte	.LFB350
	.4byte	.LFE350-.LFB350
	.byte	0x4
	.4byte	.LCFI231-.LFB350
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI232-.LCFI231
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE158:
.LSFDE160:
	.4byte	.LEFDE160-.LASFDE160
.LASFDE160:
	.4byte	.Lframe0
	.4byte	.LFB354
	.4byte	.LFE354-.LFB354
	.align	4
.LEFDE160:
.LSFDE162:
	.4byte	.LEFDE162-.LASFDE162
.LASFDE162:
	.4byte	.Lframe0
	.4byte	.LFB356
	.4byte	.LFE356-.LFB356
	.byte	0x4
	.4byte	.LCFI234-.LFB356
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE162:
.LSFDE164:
	.4byte	.LEFDE164-.LASFDE164
.LASFDE164:
	.4byte	.Lframe0
	.4byte	.LFB358
	.4byte	.LFE358-.LFB358
	.byte	0x4
	.4byte	.LCFI235-.LFB358
	.byte	0x90
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI238-.LCFI235
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI239-.LCFI238
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE164:
.LSFDE166:
	.4byte	.LEFDE166-.LASFDE166
.LASFDE166:
	.4byte	.Lframe0
	.4byte	.LFB372
	.4byte	.LFE372-.LFB372
	.align	4
.LEFDE166:
.LSFDE168:
	.4byte	.LEFDE168-.LASFDE168
.LASFDE168:
	.4byte	.Lframe0
	.4byte	.LFB373
	.4byte	.LFE373-.LFB373
	.byte	0x4
	.4byte	.LCFI240-.LFB373
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI244-.LCFI240
	.byte	0x92
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI245-.LCFI244
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE168:
.LSFDE170:
	.4byte	.LEFDE170-.LASFDE170
.LASFDE170:
	.4byte	.Lframe0
	.4byte	.LFB374
	.4byte	.LFE374-.LFB374
	.byte	0x4
	.4byte	.LCFI247-.LFB374
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE170:
.LSFDE172:
	.4byte	.LEFDE172-.LASFDE172
.LASFDE172:
	.4byte	.Lframe0
	.4byte	.LFB375
	.4byte	.LFE375-.LFB375
	.byte	0x4
	.4byte	.LCFI252-.LFB375
	.byte	0x92
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI253-.LCFI252
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE172:
.LSFDE174:
	.4byte	.LEFDE174-.LASFDE174
.LASFDE174:
	.4byte	.Lframe0
	.4byte	.LFB382
	.4byte	.LFE382-.LFB382
	.byte	0x4
	.4byte	.LCFI256-.LFB382
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI257-.LCFI256
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE174:
.LSFDE176:
	.4byte	.LEFDE176-.LASFDE176
.LASFDE176:
	.4byte	.Lframe0
	.4byte	.LFB390
	.4byte	.LFE390-.LFB390
	.byte	0x4
	.4byte	.LCFI260-.LFB390
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE176:
.LSFDE178:
	.4byte	.LEFDE178-.LASFDE178
.LASFDE178:
	.4byte	.Lframe0
	.4byte	.LFB391
	.4byte	.LFE391-.LFB391
	.byte	0x4
	.4byte	.LCFI261-.LFB391
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI263-.LCFI261
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE178:
.LSFDE180:
	.4byte	.LEFDE180-.LASFDE180
.LASFDE180:
	.4byte	.Lframe0
	.4byte	.LFB526
	.4byte	.LFE526-.LFB526
	.byte	0x4
	.4byte	.LCFI264-.LFB526
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI266-.LCFI264
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE180:
.LSFDE182:
	.4byte	.LEFDE182-.LASFDE182
.LASFDE182:
	.4byte	.Lframe0
	.4byte	.LFB563
	.4byte	.LFE563-.LFB563
	.align	4
.LEFDE182:
.LSFDE184:
	.4byte	.LEFDE184-.LASFDE184
.LASFDE184:
	.4byte	.Lframe0
	.4byte	.LFB564
	.4byte	.LFE564-.LFB564
	.byte	0x4
	.4byte	.LCFI268-.LFB564
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE184:
.LSFDE186:
	.4byte	.LEFDE186-.LASFDE186
.LASFDE186:
	.4byte	.Lframe0
	.4byte	.LFB591
	.4byte	.LFE591-.LFB591
	.byte	0x4
	.4byte	.LCFI270-.LFB591
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE186:
.LSFDE188:
	.4byte	.LEFDE188-.LASFDE188
.LASFDE188:
	.4byte	.Lframe0
	.4byte	.LFB594
	.4byte	.LFE594-.LFB594
	.byte	0x4
	.4byte	.LCFI272-.LFB594
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI273-.LCFI272
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE188:
.LSFDE190:
	.4byte	.LEFDE190-.LASFDE190
.LASFDE190:
	.4byte	.Lframe0
	.4byte	.LFB595
	.4byte	.LFE595-.LFB595
	.byte	0x4
	.4byte	.LCFI275-.LFB595
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI276-.LCFI275
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE190:
.LSFDE192:
	.4byte	.LEFDE192-.LASFDE192
.LASFDE192:
	.4byte	.Lframe0
	.4byte	.LFB596
	.4byte	.LFE596-.LFB596
	.byte	0x4
	.4byte	.LCFI277-.LFB596
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI278-.LCFI277
	.byte	0x94
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI279-.LCFI278
	.byte	0x98
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI280-.LCFI279
	.byte	0x9c
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI288-.LCFI280
	.byte	0xe
	.uleb128 0x34
	.byte	0x9e
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.align	4
.LEFDE192:
.LSFDE194:
	.4byte	.LEFDE194-.LASFDE194
.LASFDE194:
	.4byte	.Lframe0
	.4byte	.LFB659
	.4byte	.LFE659-.LFB659
	.byte	0x4
	.4byte	.LCFI290-.LFB659
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI291-.LCFI290
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE194:
.LSFDE196:
	.4byte	.LEFDE196-.LASFDE196
.LASFDE196:
	.4byte	.Lframe0
	.4byte	.LFB702
	.4byte	.LFE702-.LFB702
	.align	4
.LEFDE196:
.LSFDE198:
	.4byte	.LEFDE198-.LASFDE198
.LASFDE198:
	.4byte	.Lframe0
	.4byte	.LFB703
	.4byte	.LFE703-.LFB703
	.align	4
.LEFDE198:
.LSFDE200:
	.4byte	.LEFDE200-.LASFDE200
.LASFDE200:
	.4byte	.Lframe0
	.4byte	.LFB736
	.4byte	.LFE736-.LFB736
	.align	4
.LEFDE200:
.LSFDE202:
	.4byte	.LEFDE202-.LASFDE202
.LASFDE202:
	.4byte	.Lframe0
	.4byte	.LFB737
	.4byte	.LFE737-.LFB737
	.byte	0x4
	.4byte	.LCFI294-.LFB737
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI295-.LCFI294
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE202:
.LSFDE204:
	.4byte	.LEFDE204-.LASFDE204
.LASFDE204:
	.4byte	.Lframe0
	.4byte	.LFB738
	.4byte	.LFE738-.LFB738
	.byte	0x4
	.4byte	.LCFI297-.LFB738
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI298-.LCFI297
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE204:
.LSFDE206:
	.4byte	.LEFDE206-.LASFDE206
.LASFDE206:
	.4byte	.Lframe0
	.4byte	.LFB752
	.4byte	.LFE752-.LFB752
	.byte	0x4
	.4byte	.LCFI300-.LFB752
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE206:
.LSFDE208:
	.4byte	.LEFDE208-.LASFDE208
.LASFDE208:
	.4byte	.Lframe0
	.4byte	.LFB753
	.4byte	.LFE753-.LFB753
	.byte	0x4
	.4byte	.LCFI306-.LFB753
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI307-.LCFI306
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE208:
.LSFDE210:
	.4byte	.LEFDE210-.LASFDE210
.LASFDE210:
	.4byte	.Lframe0
	.4byte	.LFB764
	.4byte	.LFE764-.LFB764
	.byte	0x4
	.4byte	.LCFI309-.LFB764
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE210:
.LSFDE212:
	.4byte	.LEFDE212-.LASFDE212
.LASFDE212:
	.4byte	.Lframe0
	.4byte	.LFB765
	.4byte	.LFE765-.LFB765
	.byte	0x4
	.4byte	.LCFI310-.LFB765
	.byte	0x82
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI311-.LCFI310
	.byte	0xe
	.uleb128 0x4
	.align	4
.LEFDE212:
.LSFDE214:
	.4byte	.LEFDE214-.LASFDE214
.LASFDE214:
	.4byte	.Lframe0
	.4byte	.LFB770
	.4byte	.LFE770-.LFB770
	.byte	0x4
	.4byte	.LCFI315-.LFB770
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE214:
.LSFDE216:
	.4byte	.LEFDE216-.LASFDE216
.LASFDE216:
	.4byte	.Lframe0
	.4byte	.LFB771
	.4byte	.LFE771-.LFB771
	.byte	0x4
	.4byte	.LCFI319-.LFB771
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE216:
.LSFDE218:
	.4byte	.LEFDE218-.LASFDE218
.LASFDE218:
	.4byte	.Lframe0
	.4byte	.LFB779
	.4byte	.LFE779-.LFB779
	.byte	0x4
	.4byte	.LCFI321-.LFB779
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE218:
.LSFDE220:
	.4byte	.LEFDE220-.LASFDE220
.LASFDE220:
	.4byte	.Lframe0
	.4byte	.LFB784
	.4byte	.LFE784-.LFB784
	.byte	0x4
	.4byte	.LCFI323-.LFB784
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE220:
.LSFDE222:
	.4byte	.LEFDE222-.LASFDE222
.LASFDE222:
	.4byte	.Lframe0
	.4byte	.LFB785
	.4byte	.LFE785-.LFB785
	.byte	0x4
	.4byte	.LCFI325-.LFB785
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE222:
.LSFDE224:
	.4byte	.LEFDE224-.LASFDE224
.LASFDE224:
	.4byte	.Lframe0
	.4byte	.LFB801
	.4byte	.LFE801-.LFB801
	.byte	0x4
	.4byte	.LCFI326-.LFB801
	.byte	0x8e
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI335-.LCFI326
	.byte	0xe
	.uleb128 0x24
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x9
	.align	4
.LEFDE224:
.LSFDE226:
	.4byte	.LEFDE226-.LASFDE226
.LASFDE226:
	.4byte	.Lframe0
	.4byte	.LFB809
	.4byte	.LFE809-.LFB809
	.byte	0x4
	.4byte	.LCFI337-.LFB809
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE226:
.LSFDE228:
	.4byte	.LEFDE228-.LASFDE228
.LASFDE228:
	.4byte	.Lframe0
	.4byte	.LFB810
	.4byte	.LFE810-.LFB810
	.align	4
.LEFDE228:
.LSFDE230:
	.4byte	.LEFDE230-.LASFDE230
.LASFDE230:
	.4byte	.Lframe0
	.4byte	.LFB851
	.4byte	.LFE851-.LFB851
	.byte	0x4
	.4byte	.LCFI345-.LFB851
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI346-.LCFI345
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE230:
.LSFDE232:
	.4byte	.LEFDE232-.LASFDE232
.LASFDE232:
	.4byte	.Lframe0
	.4byte	.LFB853
	.4byte	.LFE853-.LFB853
	.byte	0x4
	.4byte	.LCFI354-.LFB853
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI355-.LCFI354
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE232:
.LSFDE234:
	.4byte	.LEFDE234-.LASFDE234
.LASFDE234:
	.4byte	.Lframe0
	.4byte	.LFB826
	.4byte	.LFE826-.LFB826
	.byte	0x4
	.4byte	.LCFI358-.LFB826
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE234:
.LSFDE236:
	.4byte	.LEFDE236-.LASFDE236
.LASFDE236:
	.4byte	.Lframe0
	.4byte	.LFB854
	.4byte	.LFE854-.LFB854
	.byte	0x4
	.4byte	.LCFI359-.LFB854
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI360-.LCFI359
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI362-.LCFI360
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE236:
.LSFDE238:
	.4byte	.LEFDE238-.LASFDE238
.LASFDE238:
	.4byte	.Lframe0
	.4byte	.LFB864
	.4byte	.LFE864-.LFB864
	.byte	0x4
	.4byte	.LCFI367-.LFB864
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI368-.LCFI367
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE238:
.LSFDE240:
	.4byte	.LEFDE240-.LASFDE240
.LASFDE240:
	.4byte	.Lframe0
	.4byte	.LFB871
	.4byte	.LFE871-.LFB871
	.byte	0x4
	.4byte	.LCFI369-.LFB871
	.byte	0x82
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI370-.LCFI369
	.byte	0xe
	.uleb128 0x4
	.align	4
.LEFDE240:
.LSFDE242:
	.4byte	.LEFDE242-.LASFDE242
.LASFDE242:
	.4byte	.Lframe0
	.4byte	.LFB724
	.4byte	.LFE724-.LFB724
	.byte	0x4
	.4byte	.LCFI372-.LFB724
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE242:
.LSFDE244:
	.4byte	.LEFDE244-.LASFDE244
.LASFDE244:
	.4byte	.Lframe0
	.4byte	.LFB727
	.4byte	.LFE727-.LFB727
	.byte	0x4
	.4byte	.LCFI375-.LFB727
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE244:
.LSFDE246:
	.4byte	.LEFDE246-.LASFDE246
.LASFDE246:
	.4byte	.Lframe0
	.4byte	.LFB728
	.4byte	.LFE728-.LFB728
	.byte	0x4
	.4byte	.LCFI377-.LFB728
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI378-.LCFI377
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE246:
.LSFDE248:
	.4byte	.LEFDE248-.LASFDE248
.LASFDE248:
	.4byte	.Lframe0
	.4byte	.LFB897
	.4byte	.LFE897-.LFB897
	.align	4
.LEFDE248:
.LSFDE250:
	.4byte	.LEFDE250-.LASFDE250
.LASFDE250:
	.4byte	.Lframe0
	.4byte	.LFB901
	.4byte	.LFE901-.LFB901
	.byte	0x4
	.4byte	.LCFI383-.LFB901
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI384-.LCFI383
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE250:
.LSFDE252:
	.4byte	.LEFDE252-.LASFDE252
.LASFDE252:
	.4byte	.Lframe0
	.4byte	.LFB902
	.4byte	.LFE902-.LFB902
	.byte	0x4
	.4byte	.LCFI389-.LFB902
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI390-.LCFI389
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE252:
.LSFDE254:
	.4byte	.LEFDE254-.LASFDE254
.LASFDE254:
	.4byte	.Lframe0
	.4byte	.LFB905
	.4byte	.LFE905-.LFB905
	.byte	0x4
	.4byte	.LCFI396-.LFB905
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI397-.LCFI396
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE254:
.LSFDE256:
	.4byte	.LEFDE256-.LASFDE256
.LASFDE256:
	.4byte	.Lframe0
	.4byte	.LFB928
	.4byte	.LFE928-.LFB928
	.align	4
.LEFDE256:
.LSFDE258:
	.4byte	.LEFDE258-.LASFDE258
.LASFDE258:
	.4byte	.Lframe0
	.4byte	.LFB929
	.4byte	.LFE929-.LFB929
	.byte	0x4
	.4byte	.LCFI402-.LFB929
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI403-.LCFI402
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE258:
.LSFDE260:
	.4byte	.LEFDE260-.LASFDE260
.LASFDE260:
	.4byte	.Lframe0
	.4byte	.LFB930
	.4byte	.LFE930-.LFB930
	.byte	0x4
	.4byte	.LCFI409-.LFB930
	.byte	0x94
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI410-.LCFI409
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE260:
.LSFDE262:
	.4byte	.LEFDE262-.LASFDE262
.LASFDE262:
	.4byte	.Lframe0
	.4byte	.LFB957
	.4byte	.LFE957-.LFB957
	.byte	0x4
	.4byte	.LCFI422-.LFB957
	.byte	0xe
	.uleb128 0x40
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.align	4
.LEFDE262:
.LSFDE264:
	.4byte	.LEFDE264-.LASFDE264
.LASFDE264:
	.4byte	.Lframe0
	.4byte	.LFB992
	.4byte	.LFE992-.LFB992
	.byte	0x4
	.4byte	.LCFI424-.LFB992
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE264:
.LSFDE266:
	.4byte	.LEFDE266-.LASFDE266
.LASFDE266:
	.4byte	.Lframe0
	.4byte	.LFB993
	.4byte	.LFE993-.LFB993
	.byte	0x4
	.4byte	.LCFI434-.LFB993
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x8
	.byte	0x82
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI435-.LCFI434
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE266:
.LSFDE268:
	.4byte	.LEFDE268-.LASFDE268
.LASFDE268:
	.4byte	.Lframe0
	.4byte	.LFB1034
	.4byte	.LFE1034-.LFB1034
	.byte	0x4
	.4byte	.LCFI438-.LFB1034
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI439-.LCFI438
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE268:
.LSFDE270:
	.4byte	.LEFDE270-.LASFDE270
.LASFDE270:
	.4byte	.Lframe0
	.4byte	.LFB1043
	.4byte	.LFE1043-.LFB1043
	.byte	0x4
	.4byte	.LCFI441-.LFB1043
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI444-.LCFI441
	.byte	0xe
	.uleb128 0x40
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.align	4
.LEFDE270:
.LSFDE272:
	.4byte	.LEFDE272-.LASFDE272
.LASFDE272:
	.4byte	.Lframe0
	.4byte	.LFB1064
	.4byte	.LFE1064-.LFB1064
	.align	4
.LEFDE272:
.LSFDE274:
	.4byte	.LEFDE274-.LASFDE274
.LASFDE274:
	.4byte	.Lframe0
	.4byte	.LFB1090
	.4byte	.LFE1090-.LFB1090
	.byte	0x4
	.4byte	.LCFI445-.LFB1090
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI450-.LCFI445
	.byte	0xe
	.uleb128 0x14
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.align	4
.LEFDE274:
.LSFDE276:
	.4byte	.LEFDE276-.LASFDE276
.LASFDE276:
	.4byte	.Lframe0
	.4byte	.LFB1106
	.4byte	.LFE1106-.LFB1106
	.byte	0x4
	.4byte	.LCFI453-.LFB1106
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE276:
.LSFDE278:
	.4byte	.LEFDE278-.LASFDE278
.LASFDE278:
	.4byte	.Lframe0
	.4byte	.LFB1120
	.4byte	.LFE1120-.LFB1120
	.byte	0x4
	.4byte	.LCFI460-.LFB1120
	.byte	0xe
	.uleb128 0x18
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x5
	.align	4
.LEFDE278:
.LSFDE280:
	.4byte	.LEFDE280-.LASFDE280
.LASFDE280:
	.4byte	.Lframe0
	.4byte	.LFB1137
	.4byte	.LFE1137-.LFB1137
	.byte	0x4
	.4byte	.LCFI462-.LFB1137
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI472-.LCFI462
	.byte	0xe
	.uleb128 0x34
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE280:
.LSFDE282:
	.4byte	.LEFDE282-.LASFDE282
.LASFDE282:
	.4byte	.Lframe0
	.4byte	.LFB1135
	.4byte	.LFE1135-.LFB1135
	.byte	0x4
	.4byte	.LCFI474-.LFB1135
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI478-.LCFI474
	.byte	0xe
	.uleb128 0x1c
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE282:
.LSFDE284:
	.4byte	.LEFDE284-.LASFDE284
.LASFDE284:
	.4byte	.Lframe0
	.4byte	.LFB1136
	.4byte	.LFE1136-.LFB1136
	.byte	0x4
	.4byte	.LCFI484-.LFB1136
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI485-.LCFI484
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE284:
.LSFDE286:
	.4byte	.LEFDE286-.LASFDE286
.LASFDE286:
	.4byte	.Lframe0
	.4byte	.LFB1158
	.4byte	.LFE1158-.LFB1158
	.align	4
.LEFDE286:
.LSFDE288:
	.4byte	.LEFDE288-.LASFDE288
.LASFDE288:
	.4byte	.Lframe0
	.4byte	.LFB1170
	.4byte	.LFE1170-.LFB1170
	.byte	0x4
	.4byte	.LCFI488-.LFB1170
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE288:
.LSFDE290:
	.4byte	.LEFDE290-.LASFDE290
.LASFDE290:
	.4byte	.Lframe0
	.4byte	.LFB1179
	.4byte	.LFE1179-.LFB1179
	.byte	0x4
	.4byte	.LCFI493-.LFB1179
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI494-.LCFI493
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE290:
.LSFDE292:
	.4byte	.LEFDE292-.LASFDE292
.LASFDE292:
	.4byte	.Lframe0
	.4byte	.LFB1181
	.4byte	.LFE1181-.LFB1181
	.byte	0x4
	.4byte	.LCFI497-.LFB1181
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI498-.LCFI497
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE292:
.LSFDE294:
	.4byte	.LEFDE294-.LASFDE294
.LASFDE294:
	.4byte	.Lframe0
	.4byte	.LFB880
	.4byte	.LFE880-.LFB880
	.byte	0x4
	.4byte	.LCFI500-.LFB880
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI501-.LCFI500
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE294:
.LSFDE296:
	.4byte	.LEFDE296-.LASFDE296
.LASFDE296:
	.4byte	.Lframe0
	.4byte	.LFB882
	.4byte	.LFE882-.LFB882
	.byte	0x4
	.4byte	.LCFI512-.LFB882
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI513-.LCFI512
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE296:
.LSFDE298:
	.4byte	.LEFDE298-.LASFDE298
.LASFDE298:
	.4byte	.Lframe0
	.4byte	.LFB1191
	.4byte	.LFE1191-.LFB1191
	.byte	0x4
	.4byte	.LCFI520-.LFB1191
	.byte	0x96
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI521-.LCFI520
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE298:
.LSFDE300:
	.4byte	.LEFDE300-.LASFDE300
.LASFDE300:
	.4byte	.Lframe0
	.4byte	.LFB1196
	.4byte	.LFE1196-.LFB1196
	.byte	0x4
	.4byte	.LCFI524-.LFB1196
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI525-.LCFI524
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE300:
.LSFDE302:
	.4byte	.LEFDE302-.LASFDE302
.LASFDE302:
	.4byte	.Lframe0
	.4byte	.LFB1200
	.4byte	.LFE1200-.LFB1200
	.byte	0x4
	.4byte	.LCFI528-.LFB1200
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE302:
.LSFDE304:
	.4byte	.LEFDE304-.LASFDE304
.LASFDE304:
	.4byte	.Lframe0
	.4byte	.LFB1204
	.4byte	.LFE1204-.LFB1204
	.byte	0x4
	.4byte	.LCFI530-.LFB1204
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE304:
.LSFDE306:
	.4byte	.LEFDE306-.LASFDE306
.LASFDE306:
	.4byte	.Lframe0
	.4byte	.LFB59
	.4byte	.LFE59-.LFB59
	.byte	0x4
	.4byte	.LCFI531-.LFB59
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI533-.LCFI531
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE306:
.LSFDE308:
	.4byte	.LEFDE308-.LASFDE308
.LASFDE308:
	.4byte	.Lframe0
	.4byte	.LFB60
	.4byte	.LFE60-.LFB60
	.byte	0x4
	.4byte	.LCFI535-.LFB60
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE308:
.LSFDE310:
	.4byte	.LEFDE310-.LASFDE310
.LASFDE310:
	.4byte	.Lframe0
	.4byte	.LFB101
	.4byte	.LFE101-.LFB101
	.byte	0x4
	.4byte	.LCFI540-.LFB101
	.byte	0x92
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI541-.LCFI540
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE310:
.LSFDE312:
	.4byte	.LEFDE312-.LASFDE312
.LASFDE312:
	.4byte	.Lframe0
	.4byte	.LFB99
	.4byte	.LFE99-.LFB99
	.byte	0x4
	.4byte	.LCFI544-.LFB99
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI545-.LCFI544
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE312:
.LSFDE314:
	.4byte	.LEFDE314-.LASFDE314
.LASFDE314:
	.4byte	.Lframe0
	.4byte	.LFB100
	.4byte	.LFE100-.LFB100
	.byte	0x4
	.4byte	.LCFI557-.LFB100
	.byte	0xe
	.uleb128 0x1d8
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE314:
.LSFDE316:
	.4byte	.LEFDE316-.LASFDE316
.LASFDE316:
	.4byte	.Lframe0
	.4byte	.LFB102
	.4byte	.LFE102-.LFB102
	.byte	0x4
	.4byte	.LCFI560-.LFB102
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE316:
.LSFDE318:
	.4byte	.LEFDE318-.LASFDE318
.LASFDE318:
	.4byte	.Lframe0
	.4byte	.LFB105
	.4byte	.LFE105-.LFB105
	.byte	0x4
	.4byte	.LCFI564-.LFB105
	.byte	0xe
	.uleb128 0x188
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE318:
.LSFDE320:
	.4byte	.LEFDE320-.LASFDE320
.LASFDE320:
	.4byte	.Lframe0
	.4byte	.LFB698
	.4byte	.LFE698-.LFB698
	.byte	0x4
	.4byte	.LCFI565-.LFB698
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI566-.LCFI565
	.byte	0x94
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI574-.LCFI566
	.byte	0xe
	.uleb128 0x24
	.byte	0x9a
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.align	4
.LEFDE320:
.LSFDE322:
	.4byte	.LEFDE322-.LASFDE322
.LASFDE322:
	.4byte	.Lframe0
	.4byte	.LFB94
	.4byte	.LFE94-.LFB94
	.byte	0x4
	.4byte	.LCFI578-.LFB94
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI579-.LCFI578
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE322:
.LSFDE324:
	.4byte	.LEFDE324-.LASFDE324
.LASFDE324:
	.4byte	.Lframe0
	.4byte	.LFB759
	.4byte	.LFE759-.LFB759
	.byte	0x4
	.4byte	.LCFI587-.LFB759
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI588-.LCFI587
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE324:
.LSFDE326:
	.4byte	.LEFDE326-.LASFDE326
.LASFDE326:
	.4byte	.Lframe0
	.4byte	.LFB95
	.4byte	.LFE95-.LFB95
	.byte	0x4
	.4byte	.LCFI592-.LFB95
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI593-.LCFI592
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE326:
.LSFDE328:
	.4byte	.LEFDE328-.LASFDE328
.LASFDE328:
	.4byte	.Lframe0
	.4byte	.LFB862
	.4byte	.LFE862-.LFB862
	.byte	0x4
	.4byte	.LCFI596-.LFB862
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI597-.LCFI596
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE328:
.LSFDE330:
	.4byte	.LEFDE330-.LASFDE330
.LASFDE330:
	.4byte	.Lframe0
	.4byte	.LFB865
	.4byte	.LFE865-.LFB865
	.byte	0x4
	.4byte	.LCFI602-.LFB865
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE330:
.LSFDE332:
	.4byte	.LEFDE332-.LASFDE332
.LASFDE332:
	.4byte	.Lframe0
	.4byte	.LFB756
	.4byte	.LFE756-.LFB756
	.byte	0x4
	.4byte	.LCFI606-.LFB756
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI607-.LCFI606
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE332:
.LSFDE334:
	.4byte	.LEFDE334-.LASFDE334
.LASFDE334:
	.4byte	.Lframe0
	.4byte	.LFB460
	.4byte	.LFE460-.LFB460
	.byte	0x4
	.4byte	.LCFI609-.LFB460
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE334:
.LSFDE336:
	.4byte	.LEFDE336-.LASFDE336
.LASFDE336:
	.4byte	.Lframe0
	.4byte	.LFB462
	.4byte	.LFE462-.LFB462
	.byte	0x4
	.4byte	.LCFI620-.LFB462
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI621-.LCFI620
	.byte	0xe
	.uleb128 0x38
	.align	4
.LEFDE336:
.LSFDE338:
	.4byte	.LEFDE338-.LASFDE338
.LASFDE338:
	.4byte	.Lframe0
	.4byte	.LFB90
	.4byte	.LFE90-.LFB90
	.byte	0x4
	.4byte	.LCFI625-.LFB90
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE338:
.LSFDE340:
	.4byte	.LEFDE340-.LASFDE340
.LASFDE340:
	.4byte	.Lframe0
	.4byte	.LFB539
	.4byte	.LFE539-.LFB539
	.byte	0x4
	.4byte	.LCFI628-.LFB539
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE340:
.LSFDE342:
	.4byte	.LEFDE342-.LASFDE342
.LASFDE342:
	.4byte	.Lframe0
	.4byte	.LFB931
	.4byte	.LFE931-.LFB931
	.byte	0x4
	.4byte	.LCFI639-.LFB931
	.byte	0x9e
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI640-.LCFI639
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE342:
.LSFDE344:
	.4byte	.LEFDE344-.LASFDE344
.LASFDE344:
	.4byte	.Lframe0
	.4byte	.LFB977
	.4byte	.LFE977-.LFB977
	.byte	0x4
	.4byte	.LCFI642-.LFB977
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI643-.LCFI642
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE344:
.LSFDE346:
	.4byte	.LEFDE346-.LASFDE346
.LASFDE346:
	.4byte	.Lframe0
	.4byte	.LFB544
	.4byte	.LFE544-.LFB544
	.byte	0x4
	.4byte	.LCFI646-.LFB544
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE346:
.LSFDE348:
	.4byte	.LEFDE348-.LASFDE348
.LASFDE348:
	.4byte	.Lframe0
	.4byte	.LFB516
	.4byte	.LFE516-.LFB516
	.byte	0x4
	.4byte	.LCFI651-.LFB516
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI652-.LCFI651
	.byte	0xe
	.uleb128 0x118
	.align	4
.LEFDE348:
.LSFDE350:
	.4byte	.LEFDE350-.LASFDE350
.LASFDE350:
	.4byte	.Lframe0
	.4byte	.LFB517
	.4byte	.LFE517-.LFB517
	.byte	0x4
	.4byte	.LCFI656-.LFB517
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE350:
.LSFDE352:
	.4byte	.LEFDE352-.LASFDE352
.LASFDE352:
	.4byte	.Lframe0
	.4byte	.LFB518
	.4byte	.LFE518-.LFB518
	.byte	0x4
	.4byte	.LCFI659-.LFB518
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE352:
.LSFDE354:
	.4byte	.LEFDE354-.LASFDE354
.LASFDE354:
	.4byte	.Lframe0
	.4byte	.LFB597
	.4byte	.LFE597-.LFB597
	.byte	0x4
	.4byte	.LCFI663-.LFB597
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI664-.LCFI663
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE354:
.LSFDE356:
	.4byte	.LEFDE356-.LASFDE356
.LASFDE356:
	.4byte	.Lframe0
	.4byte	.LFB571
	.4byte	.LFE571-.LFB571
	.byte	0x4
	.4byte	.LCFI665-.LFB571
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI673-.LCFI665
	.byte	0xe
	.uleb128 0x20
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE356:
.LSFDE358:
	.4byte	.LEFDE358-.LASFDE358
.LASFDE358:
	.4byte	.Lframe0
	.4byte	.LFB578
	.4byte	.LFE578-.LFB578
	.byte	0x4
	.4byte	.LCFI674-.LFB578
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI677-.LCFI674
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI678-.LCFI677
	.byte	0x92
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI679-.LCFI678
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE358:
.LSFDE360:
	.4byte	.LEFDE360-.LASFDE360
.LASFDE360:
	.4byte	.Lframe0
	.4byte	.LFB542
	.4byte	.LFE542-.LFB542
	.byte	0x4
	.4byte	.LCFI681-.LFB542
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI682-.LCFI681
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE360:
.LSFDE362:
	.4byte	.LEFDE362-.LASFDE362
.LASFDE362:
	.4byte	.Lframe0
	.4byte	.LFB565
	.4byte	.LFE565-.LFB565
	.byte	0x4
	.4byte	.LCFI687-.LFB565
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI688-.LCFI687
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE362:
.LSFDE364:
	.4byte	.LEFDE364-.LASFDE364
.LASFDE364:
	.4byte	.Lframe0
	.4byte	.LFB589
	.4byte	.LFE589-.LFB589
	.byte	0x4
	.4byte	.LCFI693-.LFB589
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI694-.LCFI693
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE364:
.LSFDE366:
	.4byte	.LEFDE366-.LASFDE366
.LASFDE366:
	.4byte	.Lframe0
	.4byte	.LFB567
	.4byte	.LFE567-.LFB567
	.byte	0x4
	.4byte	.LCFI701-.LFB567
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI702-.LCFI701
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE366:
.LSFDE368:
	.4byte	.LEFDE368-.LASFDE368
.LASFDE368:
	.4byte	.Lframe0
	.4byte	.LFB982
	.4byte	.LFE982-.LFB982
	.byte	0x4
	.4byte	.LCFI708-.LFB982
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI709-.LCFI708
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE368:
.LSFDE370:
	.4byte	.LEFDE370-.LASFDE370
.LASFDE370:
	.4byte	.Lframe0
	.4byte	.LFB983
	.4byte	.LFE983-.LFB983
	.byte	0x4
	.4byte	.LCFI714-.LFB983
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE370:
.LSFDE372:
	.4byte	.LEFDE372-.LASFDE372
.LASFDE372:
	.4byte	.Lframe0
	.4byte	.LFB534
	.4byte	.LFE534-.LFB534
	.byte	0x4
	.4byte	.LCFI718-.LFB534
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE372:
.LSFDE374:
	.4byte	.LEFDE374-.LASFDE374
.LASFDE374:
	.4byte	.Lframe0
	.4byte	.LFB679
	.4byte	.LFE679-.LFB679
	.byte	0x4
	.4byte	.LCFI723-.LFB679
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI724-.LCFI723
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE374:
.LSFDE376:
	.4byte	.LEFDE376-.LASFDE376
.LASFDE376:
	.4byte	.Lframe0
	.4byte	.LFB529
	.4byte	.LFE529-.LFB529
	.byte	0x4
	.4byte	.LCFI727-.LFB529
	.byte	0xe
	.uleb128 0x20
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE376:
.LSFDE378:
	.4byte	.LEFDE378-.LASFDE378
.LASFDE378:
	.4byte	.Lframe0
	.4byte	.LFB530
	.4byte	.LFE530-.LFB530
	.byte	0x4
	.4byte	.LCFI733-.LFB530
	.byte	0xe
	.uleb128 0x14
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x5
	.align	4
.LEFDE378:
.LSFDE380:
	.4byte	.LEFDE380-.LASFDE380
.LASFDE380:
	.4byte	.Lframe0
	.4byte	.LFB954
	.4byte	.LFE954-.LFB954
	.byte	0x4
	.4byte	.LCFI735-.LFB954
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI736-.LCFI735
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE380:
.LSFDE382:
	.4byte	.LEFDE382-.LASFDE382
.LASFDE382:
	.4byte	.Lframe0
	.4byte	.LFB955
	.4byte	.LFE955-.LFB955
	.byte	0x4
	.4byte	.LCFI739-.LFB955
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI740-.LCFI739
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE382:
.LSFDE384:
	.4byte	.LEFDE384-.LASFDE384
.LASFDE384:
	.4byte	.Lframe0
	.4byte	.LFB956
	.4byte	.LFE956-.LFB956
	.byte	0x4
	.4byte	.LCFI743-.LFB956
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI744-.LCFI743
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE384:
.LSFDE386:
	.4byte	.LEFDE386-.LASFDE386
.LASFDE386:
	.4byte	.Lframe0
	.4byte	.LFB532
	.4byte	.LFE532-.LFB532
	.byte	0x4
	.4byte	.LCFI749-.LFB532
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE386:
.LSFDE388:
	.4byte	.LEFDE388-.LASFDE388
.LASFDE388:
	.4byte	.Lframe0
	.4byte	.LFB218
	.4byte	.LFE218-.LFB218
	.byte	0x4
	.4byte	.LCFI750-.LFB218
	.byte	0x92
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI756-.LCFI750
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI757-.LCFI756
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE388:
.LSFDE390:
	.4byte	.LEFDE390-.LASFDE390
.LASFDE390:
	.4byte	.Lframe0
	.4byte	.LFB386
	.4byte	.LFE386-.LFB386
	.byte	0x4
	.4byte	.LCFI760-.LFB386
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI761-.LCFI760
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE390:
.LSFDE392:
	.4byte	.LEFDE392-.LASFDE392
.LASFDE392:
	.4byte	.Lframe0
	.4byte	.LFB704
	.4byte	.LFE704-.LFB704
	.byte	0x4
	.4byte	.LCFI763-.LFB704
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE392:
.LSFDE394:
	.4byte	.LEFDE394-.LASFDE394
.LASFDE394:
	.4byte	.Lframe0
	.4byte	.LFB700
	.4byte	.LFE700-.LFB700
	.byte	0x4
	.4byte	.LCFI767-.LFB700
	.byte	0xe
	.uleb128 0xc
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.align	4
.LEFDE394:
.LSFDE396:
	.4byte	.LEFDE396-.LASFDE396
.LASFDE396:
	.4byte	.Lframe0
	.4byte	.LFB701
	.4byte	.LFE701-.LFB701
	.byte	0x4
	.4byte	.LCFI769-.LFB701
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE396:
.LSFDE398:
	.4byte	.LEFDE398-.LASFDE398
.LASFDE398:
	.4byte	.Lframe0
	.4byte	.LFB324
	.4byte	.LFE324-.LFB324
	.byte	0x4
	.4byte	.LCFI771-.LFB324
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE398:
.LSFDE400:
	.4byte	.LEFDE400-.LASFDE400
.LASFDE400:
	.4byte	.Lframe0
	.4byte	.LFB227
	.4byte	.LFE227-.LFB227
	.byte	0x4
	.4byte	.LCFI775-.LFB227
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI776-.LCFI775
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE400:
.LSFDE402:
	.4byte	.LEFDE402-.LASFDE402
.LASFDE402:
	.4byte	.Lframe0
	.4byte	.LFB283
	.4byte	.LFE283-.LFB283
	.byte	0x4
	.4byte	.LCFI778-.LFB283
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI779-.LCFI778
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE402:
.LSFDE404:
	.4byte	.LEFDE404-.LASFDE404
.LASFDE404:
	.4byte	.Lframe0
	.4byte	.LFB286
	.4byte	.LFE286-.LFB286
	.byte	0x4
	.4byte	.LCFI783-.LFB286
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI784-.LCFI783
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE404:
.LSFDE406:
	.4byte	.LEFDE406-.LASFDE406
.LASFDE406:
	.4byte	.Lframe0
	.4byte	.LFB287
	.4byte	.LFE287-.LFB287
	.byte	0x4
	.4byte	.LCFI786-.LFB287
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI787-.LCFI786
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE406:
.LSFDE408:
	.4byte	.LEFDE408-.LASFDE408
.LASFDE408:
	.4byte	.Lframe0
	.4byte	.LFB306
	.4byte	.LFE306-.LFB306
	.byte	0x4
	.4byte	.LCFI791-.LFB306
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI792-.LCFI791
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE408:
.LSFDE410:
	.4byte	.LEFDE410-.LASFDE410
.LASFDE410:
	.4byte	.Lframe0
	.4byte	.LFB302
	.4byte	.LFE302-.LFB302
	.byte	0x4
	.4byte	.LCFI800-.LFB302
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI801-.LCFI800
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE410:
.LSFDE412:
	.4byte	.LEFDE412-.LASFDE412
.LASFDE412:
	.4byte	.Lframe0
	.4byte	.LFB289
	.4byte	.LFE289-.LFB289
	.byte	0x4
	.4byte	.LCFI808-.LFB289
	.byte	0x96
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI809-.LCFI808
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE412:
.LSFDE414:
	.4byte	.LEFDE414-.LASFDE414
.LASFDE414:
	.4byte	.Lframe0
	.4byte	.LFB89
	.4byte	.LFE89-.LFB89
	.byte	0x4
	.4byte	.LCFI813-.LFB89
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE414:
.LSFDE416:
	.4byte	.LEFDE416-.LASFDE416
.LASFDE416:
	.4byte	.Lframe0
	.4byte	.LFB203
	.4byte	.LFE203-.LFB203
	.byte	0x4
	.4byte	.LCFI815-.LFB203
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI816-.LCFI815
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE416:
.LSFDE418:
	.4byte	.LEFDE418-.LASFDE418
.LASFDE418:
	.4byte	.Lframe0
	.4byte	.LFB357
	.4byte	.LFE357-.LFB357
	.byte	0x4
	.4byte	.LCFI821-.LFB357
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI822-.LCFI821
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE418:
.LSFDE420:
	.4byte	.LEFDE420-.LASFDE420
.LASFDE420:
	.4byte	.Lframe0
	.4byte	.LFB205
	.4byte	.LFE205-.LFB205
	.byte	0x4
	.4byte	.LCFI828-.LFB205
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI829-.LCFI828
	.byte	0xe
	.uleb128 0x20c
	.align	4
.LEFDE420:
.LSFDE422:
	.4byte	.LEFDE422-.LASFDE422
.LASFDE422:
	.4byte	.Lframe0
	.4byte	.LFB206
	.4byte	.LFE206-.LFB206
	.byte	0x4
	.4byte	.LCFI835-.LFB206
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI836-.LCFI835
	.byte	0xe
	.uleb128 0x20c
	.align	4
.LEFDE422:
.LSFDE424:
	.4byte	.LEFDE424-.LASFDE424
.LASFDE424:
	.4byte	.Lframe0
	.4byte	.LFB383
	.4byte	.LFE383-.LFB383
	.byte	0x4
	.4byte	.LCFI838-.LFB383
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE424:
.LSFDE426:
	.4byte	.LEFDE426-.LASFDE426
.LASFDE426:
	.4byte	.Lframe0
	.4byte	.LFB155
	.4byte	.LFE155-.LFB155
	.byte	0x4
	.4byte	.LCFI849-.LFB155
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI850-.LCFI849
	.byte	0xe
	.uleb128 0x2c
	.align	4
.LEFDE426:
.LSFDE428:
	.4byte	.LEFDE428-.LASFDE428
.LASFDE428:
	.4byte	.Lframe0
	.4byte	.LFB860
	.4byte	.LFE860-.LFB860
	.byte	0x4
	.4byte	.LCFI856-.LFB860
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI857-.LCFI856
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE428:
.LSFDE430:
	.4byte	.LEFDE430-.LASFDE430
.LASFDE430:
	.4byte	.Lframe0
	.4byte	.LFB906
	.4byte	.LFE906-.LFB906
	.byte	0x4
	.4byte	.LCFI862-.LFB906
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI863-.LCFI862
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE430:
.LSFDE432:
	.4byte	.LEFDE432-.LASFDE432
.LASFDE432:
	.4byte	.Lframe0
	.4byte	.LFB1025
	.4byte	.LFE1025-.LFB1025
	.byte	0x4
	.4byte	.LCFI866-.LFB1025
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI867-.LCFI866
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE432:
.LSFDE434:
	.4byte	.LEFDE434-.LASFDE434
.LASFDE434:
	.4byte	.Lframe0
	.4byte	.LFB1028
	.4byte	.LFE1028-.LFB1028
	.byte	0x4
	.4byte	.LCFI870-.LFB1028
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI871-.LCFI870
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE434:
.LSFDE436:
	.4byte	.LEFDE436-.LASFDE436
.LASFDE436:
	.4byte	.Lframe0
	.4byte	.LFB748
	.4byte	.LFE748-.LFB748
	.byte	0x4
	.4byte	.LCFI874-.LFB748
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI875-.LCFI874
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE436:
.LSFDE438:
	.4byte	.LEFDE438-.LASFDE438
.LASFDE438:
	.4byte	.Lframe0
	.4byte	.LFB749
	.4byte	.LFE749-.LFB749
	.byte	0x4
	.4byte	.LCFI878-.LFB749
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI879-.LCFI878
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE438:
.LSFDE440:
	.4byte	.LEFDE440-.LASFDE440
.LASFDE440:
	.4byte	.Lframe0
	.4byte	.LFB763
	.4byte	.LFE763-.LFB763
	.byte	0x4
	.4byte	.LCFI884-.LFB763
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI885-.LCFI884
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE440:
.LSFDE442:
	.4byte	.LEFDE442-.LASFDE442
.LASFDE442:
	.4byte	.Lframe0
	.4byte	.LFB859
	.4byte	.LFE859-.LFB859
	.byte	0x4
	.4byte	.LCFI890-.LFB859
	.byte	0x92
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI891-.LCFI890
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE442:
.LSFDE444:
	.4byte	.LEFDE444-.LASFDE444
.LASFDE444:
	.4byte	.Lframe0
	.4byte	.LFB741
	.4byte	.LFE741-.LFB741
	.byte	0x4
	.4byte	.LCFI898-.LFB741
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI899-.LCFI898
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE444:
.LSFDE446:
	.4byte	.LEFDE446-.LASFDE446
.LASFDE446:
	.4byte	.Lframe0
	.4byte	.LFB744
	.4byte	.LFE744-.LFB744
	.byte	0x4
	.4byte	.LCFI901-.LFB744
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE446:
.LSFDE448:
	.4byte	.LEFDE448-.LASFDE448
.LASFDE448:
	.4byte	.Lframe0
	.4byte	.LFB1131
	.4byte	.LFE1131-.LFB1131
	.byte	0x4
	.4byte	.LCFI902-.LFB1131
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI908-.LCFI902
	.byte	0xe
	.uleb128 0x18
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.align	4
.LEFDE448:
.LSFDE450:
	.4byte	.LEFDE450-.LASFDE450
.LASFDE450:
	.4byte	.Lframe0
	.4byte	.LFB1132
	.4byte	.LFE1132-.LFB1132
	.byte	0x4
	.4byte	.LCFI913-.LFB1132
	.byte	0xe
	.uleb128 0x10
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE450:
.LSFDE452:
	.4byte	.LEFDE452-.LASFDE452
.LASFDE452:
	.4byte	.Lframe0
	.4byte	.LFB1130
	.4byte	.LFE1130-.LFB1130
	.byte	0x4
	.4byte	.LCFI914-.LFB1130
	.byte	0x8e
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI920-.LCFI914
	.byte	0x96
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI921-.LCFI920
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE452:
.LSFDE454:
	.4byte	.LEFDE454-.LASFDE454
.LASFDE454:
	.4byte	.Lframe0
	.4byte	.LFB1163
	.4byte	.LFE1163-.LFB1163
	.byte	0x4
	.4byte	.LCFI927-.LFB1163
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI928-.LCFI927
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE454:
.LSFDE456:
	.4byte	.LEFDE456-.LASFDE456
.LASFDE456:
	.4byte	.Lframe0
	.4byte	.LFB1076
	.4byte	.LFE1076-.LFB1076
	.byte	0x4
	.4byte	.LCFI932-.LFB1076
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI933-.LCFI932
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE456:
.LSFDE458:
	.4byte	.LEFDE458-.LASFDE458
.LASFDE458:
	.4byte	.Lframe0
	.4byte	.LFB1085
	.4byte	.LFE1085-.LFB1085
	.byte	0x4
	.4byte	.LCFI936-.LFB1085
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI937-.LCFI936
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE458:
.LSFDE460:
	.4byte	.LEFDE460-.LASFDE460
.LASFDE460:
	.4byte	.Lframe0
	.4byte	.LFB932
	.4byte	.LFE932-.LFB932
	.byte	0x4
	.4byte	.LCFI938-.LFB932
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI941-.LCFI938
	.byte	0xe
	.uleb128 0x2c
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.align	4
.LEFDE460:
.LSFDE462:
	.4byte	.LEFDE462-.LASFDE462
.LASFDE462:
	.4byte	.Lframe0
	.4byte	.LFB927
	.4byte	.LFE927-.LFB927
	.byte	0x4
	.4byte	.LCFI949-.LFB927
	.byte	0x98
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI950-.LCFI949
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE462:
.LSFDE464:
	.4byte	.LEFDE464-.LASFDE464
.LASFDE464:
	.4byte	.Lframe0
	.4byte	.LFB857
	.4byte	.LFE857-.LFB857
	.byte	0x4
	.4byte	.LCFI957-.LFB857
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI958-.LCFI957
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE464:
.LSFDE466:
	.4byte	.LEFDE466-.LASFDE466
.LASFDE466:
	.4byte	.Lframe0
	.4byte	.LFB249
	.4byte	.LFE249-.LFB249
	.byte	0x4
	.4byte	.LCFI959-.LFB249
	.byte	0x82
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI960-.LCFI959
	.byte	0xe
	.uleb128 0x4
	.align	4
.LEFDE466:
.LSFDE468:
	.4byte	.LEFDE468-.LASFDE468
.LASFDE468:
	.4byte	.Lframe0
	.4byte	.LFB574
	.4byte	.LFE574-.LFB574
	.byte	0x4
	.4byte	.LCFI961-.LFB574
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI972-.LCFI961
	.byte	0xe
	.uleb128 0x54
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.align	4
.LEFDE468:
.LSFDE470:
	.4byte	.LEFDE470-.LASFDE470
.LASFDE470:
	.4byte	.Lframe0
	.4byte	.LFB339
	.4byte	.LFE339-.LFB339
	.byte	0x4
	.4byte	.LCFI978-.LFB339
	.byte	0x94
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI979-.LCFI978
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE470:
.LSFDE472:
	.4byte	.LEFDE472-.LASFDE472
.LASFDE472:
	.4byte	.Lframe0
	.4byte	.LFB754
	.4byte	.LFE754-.LFB754
	.byte	0x4
	.4byte	.LCFI990-.LFB754
	.byte	0x9a
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI991-.LCFI990
	.byte	0xe
	.uleb128 0x38
	.align	4
.LEFDE472:
.LSFDE474:
	.4byte	.LEFDE474-.LASFDE474
.LASFDE474:
	.4byte	.Lframe0
	.4byte	.LFB755
	.4byte	.LFE755-.LFB755
	.byte	0x4
	.4byte	.LCFI993-.LFB755
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE474:
.LSFDE476:
	.4byte	.LEFDE476-.LASFDE476
.LASFDE476:
	.4byte	.Lframe0
	.4byte	.LFB757
	.4byte	.LFE757-.LFB757
	.byte	0x4
	.4byte	.LCFI1001-.LFB757
	.byte	0x94
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI1002-.LCFI1001
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE476:
.LSFDE478:
	.4byte	.LEFDE478-.LASFDE478
.LASFDE478:
	.4byte	.Lframe0
	.4byte	.LFB760
	.4byte	.LFE760-.LFB760
	.byte	0x4
	.4byte	.LCFI1012-.LFB760
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI1013-.LCFI1012
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE478:
.LSFDE480:
	.4byte	.LEFDE480-.LASFDE480
.LASFDE480:
	.4byte	.Lframe0
	.4byte	.LFB875
	.4byte	.LFE875-.LFB875
	.byte	0x4
	.4byte	.LCFI1018-.LFB875
	.byte	0x92
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1019-.LCFI1018
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE480:
.LSFDE482:
	.4byte	.LEFDE482-.LASFDE482
.LASFDE482:
	.4byte	.Lframe0
	.4byte	.LFB1056
	.4byte	.LFE1056-.LFB1056
	.byte	0x4
	.4byte	.LCFI1024-.LFB1056
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1025-.LCFI1024
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE482:
.LSFDE484:
	.4byte	.LEFDE484-.LASFDE484
.LASFDE484:
	.4byte	.Lframe0
	.4byte	.LFB1057
	.4byte	.LFE1057-.LFB1057
	.byte	0x4
	.4byte	.LCFI1032-.LFB1057
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI1033-.LCFI1032
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE484:
.LSFDE486:
	.4byte	.LEFDE486-.LASFDE486
.LASFDE486:
	.4byte	.Lframe0
	.4byte	.LFB1058
	.4byte	.LFE1058-.LFB1058
	.byte	0x4
	.4byte	.LCFI1039-.LFB1058
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI1040-.LCFI1039
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE486:
.LSFDE488:
	.4byte	.LEFDE488-.LASFDE488
.LASFDE488:
	.4byte	.Lframe0
	.4byte	.LFB1080
	.4byte	.LFE1080-.LFB1080
	.byte	0x4
	.4byte	.LCFI1044-.LFB1080
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1045-.LCFI1044
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE488:
.LSFDE490:
	.4byte	.LEFDE490-.LASFDE490
.LASFDE490:
	.4byte	.Lframe0
	.4byte	.LFB1082
	.4byte	.LFE1082-.LFB1082
	.byte	0x4
	.4byte	.LCFI1053-.LFB1082
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI1054-.LCFI1053
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE490:
.LSFDE492:
	.4byte	.LEFDE492-.LASFDE492
.LASFDE492:
	.4byte	.Lframe0
	.4byte	.LFB566
	.4byte	.LFE566-.LFB566
	.byte	0x4
	.4byte	.LCFI1059-.LFB566
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE492:
.LSFDE494:
	.4byte	.LEFDE494-.LASFDE494
.LASFDE494:
	.4byte	.Lframe0
	.4byte	.LFB378
	.4byte	.LFE378-.LFB378
	.byte	0x4
	.4byte	.LCFI1071-.LFB378
	.byte	0xe
	.uleb128 0x48
	.byte	0x9e
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.align	4
.LEFDE494:
.LSFDE496:
	.4byte	.LEFDE496-.LASFDE496
.LASFDE496:
	.4byte	.Lframe0
	.4byte	.LFB268
	.4byte	.LFE268-.LFB268
	.byte	0x4
	.4byte	.LCFI1076-.LFB268
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1077-.LCFI1076
	.byte	0xe
	.uleb128 0xbc
	.align	4
.LEFDE496:
.LSFDE498:
	.4byte	.LEFDE498-.LASFDE498
.LASFDE498:
	.4byte	.Lframe0
	.4byte	.LFB106
	.4byte	.LFE106-.LFB106
	.byte	0x4
	.4byte	.LCFI1079-.LFB106
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE498:
.LSFDE500:
	.4byte	.LEFDE500-.LASFDE500
.LASFDE500:
	.4byte	.Lframe0
	.4byte	.LFB8
	.4byte	.LFE8-.LFB8
	.byte	0x4
	.4byte	.LCFI1081-.LFB8
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE500:
.LSFDE502:
	.4byte	.LEFDE502-.LASFDE502
.LASFDE502:
	.4byte	.Lframe0
	.4byte	.LFB10
	.4byte	.LFE10-.LFB10
	.byte	0x4
	.4byte	.LCFI1092-.LFB10
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI1093-.LCFI1092
	.byte	0xe
	.uleb128 0x74
	.align	4
.LEFDE502:
.LSFDE504:
	.4byte	.LEFDE504-.LASFDE504
.LASFDE504:
	.4byte	.Lframe0
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.byte	0x4
	.4byte	.LCFI1094-.LFB125
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1096-.LCFI1094
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1098-.LCFI1096
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE504:
.LSFDE506:
	.4byte	.LEFDE506-.LASFDE506
.LASFDE506:
	.4byte	.Lframe0
	.4byte	.LFB843
	.4byte	.LFE843-.LFB843
	.byte	0x4
	.4byte	.LCFI1101-.LFB843
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1102-.LCFI1101
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE506:
.LSFDE508:
	.4byte	.LEFDE508-.LASFDE508
.LASFDE508:
	.4byte	.Lframe0
	.4byte	.LFB866
	.4byte	.LFE866-.LFB866
	.byte	0x4
	.4byte	.LCFI1105-.LFB866
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1106-.LCFI1105
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE508:
.LSFDE510:
	.4byte	.LEFDE510-.LASFDE510
.LASFDE510:
	.4byte	.Lframe0
	.4byte	.LFB867
	.4byte	.LFE867-.LFB867
	.byte	0x4
	.4byte	.LCFI1110-.LFB867
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1111-.LCFI1110
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE510:
.LSFDE512:
	.4byte	.LEFDE512-.LASFDE512
.LASFDE512:
	.4byte	.Lframe0
	.4byte	.LFB739
	.4byte	.LFE739-.LFB739
	.byte	0x4
	.4byte	.LCFI1114-.LFB739
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1115-.LCFI1114
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE512:
.LSFDE514:
	.4byte	.LEFDE514-.LASFDE514
.LASFDE514:
	.4byte	.Lframe0
	.4byte	.LFB746
	.4byte	.LFE746-.LFB746
	.byte	0x4
	.4byte	.LCFI1116-.LFB746
	.byte	0x8e
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1121-.LCFI1116
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI1122-.LCFI1121
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE514:
.LSFDE516:
	.4byte	.LEFDE516-.LASFDE516
.LASFDE516:
	.4byte	.Lframe0
	.4byte	.LFB742
	.4byte	.LFE742-.LFB742
	.byte	0x4
	.4byte	.LCFI1125-.LFB742
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1126-.LCFI1125
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE516:
.LSFDE518:
	.4byte	.LEFDE518-.LASFDE518
.LASFDE518:
	.4byte	.Lframe0
	.4byte	.LFB1032
	.4byte	.LFE1032-.LFB1032
	.byte	0x4
	.4byte	.LCFI1129-.LFB1032
	.byte	0xe
	.uleb128 0x10
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE518:
.LSFDE520:
	.4byte	.LEFDE520-.LASFDE520
.LASFDE520:
	.4byte	.Lframe0
	.4byte	.LFB1062
	.4byte	.LFE1062-.LFB1062
	.byte	0x4
	.4byte	.LCFI1132-.LFB1062
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1135-.LCFI1132
	.byte	0xe
	.uleb128 0x1c
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE520:
.LSFDE522:
	.4byte	.LEFDE522-.LASFDE522
.LASFDE522:
	.4byte	.Lframe0
	.4byte	.LFB892
	.4byte	.LFE892-.LFB892
	.byte	0x4
	.4byte	.LCFI1141-.LFB892
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI1147-.LCFI1141
	.byte	0xe
	.uleb128 0x58
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE522:
.LSFDE524:
	.4byte	.LEFDE524-.LASFDE524
.LASFDE524:
	.4byte	.Lframe0
	.4byte	.LFB835
	.4byte	.LFE835-.LFB835
	.byte	0x4
	.4byte	.LCFI1154-.LFB835
	.byte	0x96
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI1155-.LCFI1154
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE524:
.LSFDE526:
	.4byte	.LEFDE526-.LASFDE526
.LASFDE526:
	.4byte	.Lframe0
	.4byte	.LFB836
	.4byte	.LFE836-.LFB836
	.byte	0x4
	.4byte	.LCFI1158-.LFB836
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1159-.LCFI1158
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE526:
.LSFDE528:
	.4byte	.LEFDE528-.LASFDE528
.LASFDE528:
	.4byte	.Lframe0
	.4byte	.LFB837
	.4byte	.LFE837-.LFB837
	.byte	0x4
	.4byte	.LCFI1162-.LFB837
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1163-.LCFI1162
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE528:
.LSFDE530:
	.4byte	.LEFDE530-.LASFDE530
.LASFDE530:
	.4byte	.Lframe0
	.4byte	.LFB838
	.4byte	.LFE838-.LFB838
	.byte	0x4
	.4byte	.LCFI1168-.LFB838
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1169-.LCFI1168
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE530:
.LSFDE532:
	.4byte	.LEFDE532-.LASFDE532
.LASFDE532:
	.4byte	.Lframe0
	.4byte	.LFB1029
	.4byte	.LFE1029-.LFB1029
	.byte	0x4
	.4byte	.LCFI1181-.LFB1029
	.byte	0xe
	.uleb128 0x50
	.byte	0x98
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.align	4
.LEFDE532:
.LSFDE534:
	.4byte	.LEFDE534-.LASFDE534
.LASFDE534:
	.4byte	.Lframe0
	.4byte	.LFB935
	.4byte	.LFE935-.LFB935
	.byte	0x4
	.4byte	.LCFI1183-.LFB935
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE534:
.LSFDE536:
	.4byte	.LEFDE536-.LASFDE536
.LASFDE536:
	.4byte	.Lframe0
	.4byte	.LFB762
	.4byte	.LFE762-.LFB762
	.byte	0x4
	.4byte	.LCFI1185-.LFB762
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE536:
.LSFDE538:
	.4byte	.LEFDE538-.LASFDE538
.LASFDE538:
	.4byte	.Lframe0
	.4byte	.LFB107
	.4byte	.LFE107-.LFB107
	.byte	0x4
	.4byte	.LCFI1190-.LFB107
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE538:
.LSFDE540:
	.4byte	.LEFDE540-.LASFDE540
.LASFDE540:
	.4byte	.Lframe0
	.4byte	.LFB96
	.4byte	.LFE96-.LFB96
	.byte	0x4
	.4byte	.LCFI1193-.LFB96
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1195-.LCFI1193
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.align	4
.LEFDE540:
.LSFDE542:
	.4byte	.LEFDE542-.LASFDE542
.LASFDE542:
	.4byte	.Lframe0
	.4byte	.LFB1010
	.4byte	.LFE1010-.LFB1010
	.byte	0x4
	.4byte	.LCFI1199-.LFB1010
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1200-.LCFI1199
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE542:
.LSFDE544:
	.4byte	.LEFDE544-.LASFDE544
.LASFDE544:
	.4byte	.Lframe0
	.4byte	.LFB482
	.4byte	.LFE482-.LFB482
	.byte	0x4
	.4byte	.LCFI1205-.LFB482
	.byte	0x92
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1206-.LCFI1205
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE544:
.LSFDE546:
	.4byte	.LEFDE546-.LASFDE546
.LASFDE546:
	.4byte	.Lframe0
	.4byte	.LFB483
	.4byte	.LFE483-.LFB483
	.byte	0x4
	.4byte	.LCFI1209-.LFB483
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE546:
.LSFDE548:
	.4byte	.LEFDE548-.LASFDE548
.LASFDE548:
	.4byte	.Lframe0
	.4byte	.LFB280
	.4byte	.LFE280-.LFB280
	.byte	0x4
	.4byte	.LCFI1217-.LFB280
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI1218-.LCFI1217
	.byte	0xe
	.uleb128 0x3c
	.align	4
.LEFDE548:
.LSFDE550:
	.4byte	.LEFDE550-.LASFDE550
.LASFDE550:
	.4byte	.Lframe0
	.4byte	.LFB276
	.4byte	.LFE276-.LFB276
	.byte	0x4
	.4byte	.LCFI1219-.LFB276
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1224-.LCFI1219
	.byte	0xe
	.uleb128 0x2c
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.align	4
.LEFDE550:
.LSFDE552:
	.4byte	.LEFDE552-.LASFDE552
.LASFDE552:
	.4byte	.Lframe0
	.4byte	.LFB311
	.4byte	.LFE311-.LFB311
	.byte	0x4
	.4byte	.LCFI1230-.LFB311
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI1231-.LCFI1230
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE552:
.LSFDE554:
	.4byte	.LEFDE554-.LASFDE554
.LASFDE554:
	.4byte	.Lframe0
	.4byte	.LFB1195
	.4byte	.LFE1195-.LFB1195
	.byte	0x4
	.4byte	.LCFI1238-.LFB1195
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI1239-.LCFI1238
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE554:
.LSFDE556:
	.4byte	.LEFDE556-.LASFDE556
.LASFDE556:
	.4byte	.Lframe0
	.4byte	.LFB132
	.4byte	.LFE132-.LFB132
	.byte	0x4
	.4byte	.LCFI1242-.LFB132
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE556:
.LSFDE558:
	.4byte	.LEFDE558-.LASFDE558
.LASFDE558:
	.4byte	.Lframe0
	.4byte	.LFB133
	.4byte	.LFE133-.LFB133
	.byte	0x4
	.4byte	.LCFI1245-.LFB133
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1246-.LCFI1245
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE558:
.LSFDE560:
	.4byte	.LEFDE560-.LASFDE560
.LASFDE560:
	.4byte	.Lframe0
	.4byte	.LFB61
	.4byte	.LFE61-.LFB61
	.byte	0x4
	.4byte	.LCFI1247-.LFB61
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1249-.LCFI1247
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE560:
.LSFDE562:
	.4byte	.LEFDE562-.LASFDE562
.LASFDE562:
	.4byte	.Lframe0
	.4byte	.LFB19
	.4byte	.LFE19-.LFB19
	.byte	0x4
	.4byte	.LCFI1252-.LFB19
	.byte	0xe
	.uleb128 0x64
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE562:
.LSFDE564:
	.4byte	.LEFDE564-.LASFDE564
.LASFDE564:
	.4byte	.Lframe0
	.4byte	.LFB999
	.4byte	.LFE999-.LFB999
	.byte	0x4
	.4byte	.LCFI1256-.LFB999
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1257-.LCFI1256
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE564:
.LSFDE566:
	.4byte	.LEFDE566-.LASFDE566
.LASFDE566:
	.4byte	.Lframe0
	.4byte	.LFB172
	.4byte	.LFE172-.LFB172
	.byte	0x4
	.4byte	.LCFI1259-.LFB172
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1260-.LCFI1259
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE566:
.LSFDE568:
	.4byte	.LEFDE568-.LASFDE568
.LASFDE568:
	.4byte	.Lframe0
	.4byte	.LFB195
	.4byte	.LFE195-.LFB195
	.byte	0x4
	.4byte	.LCFI1263-.LFB195
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE568:
.LSFDE570:
	.4byte	.LEFDE570-.LASFDE570
.LASFDE570:
	.4byte	.Lframe0
	.4byte	.LFB174
	.4byte	.LFE174-.LFB174
	.byte	0x4
	.4byte	.LCFI1267-.LFB174
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1268-.LCFI1267
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE570:
.LSFDE572:
	.4byte	.LEFDE572-.LASFDE572
.LASFDE572:
	.4byte	.Lframe0
	.4byte	.LFB173
	.4byte	.LFE173-.LFB173
	.byte	0x4
	.4byte	.LCFI1271-.LFB173
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1272-.LCFI1271
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE572:
.LSFDE574:
	.4byte	.LEFDE574-.LASFDE574
.LASFDE574:
	.4byte	.Lframe0
	.4byte	.LFB166
	.4byte	.LFE166-.LFB166
	.byte	0x4
	.4byte	.LCFI1275-.LFB166
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1276-.LCFI1275
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE574:
.LSFDE576:
	.4byte	.LEFDE576-.LASFDE576
.LASFDE576:
	.4byte	.Lframe0
	.4byte	.LFB175
	.4byte	.LFE175-.LFB175
	.byte	0x4
	.4byte	.LCFI1278-.LFB175
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1279-.LCFI1278
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE576:
.LSFDE578:
	.4byte	.LEFDE578-.LASFDE578
.LASFDE578:
	.4byte	.Lframe0
	.4byte	.LFB171
	.4byte	.LFE171-.LFB171
	.byte	0x4
	.4byte	.LCFI1281-.LFB171
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE578:
.LSFDE580:
	.4byte	.LEFDE580-.LASFDE580
.LASFDE580:
	.4byte	.Lframe0
	.4byte	.LFB183
	.4byte	.LFE183-.LFB183
	.byte	0x4
	.4byte	.LCFI1285-.LFB183
	.byte	0xe
	.uleb128 0x6c
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE580:
.LSFDE582:
	.4byte	.LEFDE582-.LASFDE582
.LASFDE582:
	.4byte	.Lframe0
	.4byte	.LFB181
	.4byte	.LFE181-.LFB181
	.byte	0x4
	.4byte	.LCFI1288-.LFB181
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1289-.LCFI1288
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE582:
.LSFDE584:
	.4byte	.LEFDE584-.LASFDE584
.LASFDE584:
	.4byte	.Lframe0
	.4byte	.LFB182
	.4byte	.LFE182-.LFB182
	.byte	0x4
	.4byte	.LCFI1291-.LFB182
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1292-.LCFI1291
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE584:
.LSFDE586:
	.4byte	.LEFDE586-.LASFDE586
.LASFDE586:
	.4byte	.Lframe0
	.4byte	.LFB179
	.4byte	.LFE179-.LFB179
	.byte	0x4
	.4byte	.LCFI1299-.LFB179
	.byte	0xe
	.uleb128 0x18
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.align	4
.LEFDE586:
.LSFDE588:
	.4byte	.LEFDE588-.LASFDE588
.LASFDE588:
	.4byte	.Lframe0
	.4byte	.LFB177
	.4byte	.LFE177-.LFB177
	.byte	0x4
	.4byte	.LCFI1306-.LFB177
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI1307-.LCFI1306
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE588:
.LSFDE590:
	.4byte	.LEFDE590-.LASFDE590
.LASFDE590:
	.4byte	.Lframe0
	.4byte	.LFB163
	.4byte	.LFE163-.LFB163
	.byte	0x4
	.4byte	.LCFI1308-.LFB163
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1312-.LCFI1308
	.byte	0xe
	.uleb128 0x2c
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.align	4
.LEFDE590:
.LSFDE592:
	.4byte	.LEFDE592-.LASFDE592
.LASFDE592:
	.4byte	.Lframe0
	.4byte	.LFB165
	.4byte	.LFE165-.LFB165
	.byte	0x4
	.4byte	.LCFI1321-.LFB165
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI1322-.LCFI1321
	.byte	0xe
	.uleb128 0x40
	.align	4
.LEFDE592:
.LSFDE594:
	.4byte	.LEFDE594-.LASFDE594
.LASFDE594:
	.4byte	.Lframe0
	.4byte	.LFB164
	.4byte	.LFE164-.LFB164
	.byte	0x4
	.4byte	.LCFI1330-.LFB164
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI1331-.LCFI1330
	.byte	0xe
	.uleb128 0x3c
	.align	4
.LEFDE594:
.LSFDE596:
	.4byte	.LEFDE596-.LASFDE596
.LASFDE596:
	.4byte	.Lframe0
	.4byte	.LFB199
	.4byte	.LFE199-.LFB199
	.byte	0x4
	.4byte	.LCFI1334-.LFB199
	.byte	0xe
	.uleb128 0x18
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE596:
.LSFDE598:
	.4byte	.LEFDE598-.LASFDE598
.LASFDE598:
	.4byte	.Lframe0
	.4byte	.LFB198
	.4byte	.LFE198-.LFB198
	.byte	0x4
	.4byte	.LCFI1335-.LFB198
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1336-.LCFI1335
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1338-.LCFI1336
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE598:
.LSFDE600:
	.4byte	.LEFDE600-.LASFDE600
.LASFDE600:
	.4byte	.Lframe0
	.4byte	.LFB197
	.4byte	.LFE197-.LFB197
	.byte	0x4
	.4byte	.LCFI1339-.LFB197
	.byte	0x90
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1343-.LCFI1339
	.byte	0xe
	.uleb128 0x18
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE600:
.LSFDE602:
	.4byte	.LEFDE602-.LASFDE602
.LASFDE602:
	.4byte	.Lframe0
	.4byte	.LFB1259
	.4byte	.LFE1259-.LFB1259
	.byte	0x4
	.4byte	.LCFI1351-.LFB1259
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI1352-.LCFI1351
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE602:
.LSFDE604:
	.4byte	.LEFDE604-.LASFDE604
.LASFDE604:
	.4byte	.Lframe0
	.4byte	.LFB257
	.4byte	.LFE257-.LFB257
	.byte	0x4
	.4byte	.LCFI1355-.LFB257
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1356-.LCFI1355
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE604:
.LSFDE606:
	.4byte	.LEFDE606-.LASFDE606
.LASFDE606:
	.4byte	.Lframe0
	.4byte	.LFB258
	.4byte	.LFE258-.LFB258
	.byte	0x4
	.4byte	.LCFI1357-.LFB258
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1359-.LCFI1357
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE606:
.LSFDE608:
	.4byte	.LEFDE608-.LASFDE608
.LASFDE608:
	.4byte	.Lframe0
	.4byte	.LFB1260
	.4byte	.LFE1260-.LFB1260
	.byte	0x4
	.4byte	.LCFI1364-.LFB1260
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1365-.LCFI1364
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE608:
.LSFDE610:
	.4byte	.LEFDE610-.LASFDE610
.LASFDE610:
	.4byte	.Lframe0
	.4byte	.LFB1287
	.4byte	.LFE1287-.LFB1287
	.byte	0x4
	.4byte	.LCFI1367-.LFB1287
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1368-.LCFI1367
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE610:
.LSFDE612:
	.4byte	.LEFDE612-.LASFDE612
.LASFDE612:
	.4byte	.Lframe0
	.4byte	.LFB1305
	.4byte	.LFE1305-.LFB1305
	.byte	0x4
	.4byte	.LCFI1370-.LFB1305
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE612:
.LSFDE614:
	.4byte	.LEFDE614-.LASFDE614
.LASFDE614:
	.4byte	.Lframe0
	.4byte	.LFB1320
	.4byte	.LFE1320-.LFB1320
	.byte	0x4
	.4byte	.LCFI1372-.LFB1320
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE614:
.LSFDE616:
	.4byte	.LEFDE616-.LASFDE616
.LASFDE616:
	.4byte	.Lframe0
	.4byte	.LFB711
	.4byte	.LFE711-.LFB711
	.byte	0x4
	.4byte	.LCFI1378-.LFB711
	.byte	0x94
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1379-.LCFI1378
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE616:
.LSFDE618:
	.4byte	.LEFDE618-.LASFDE618
.LASFDE618:
	.4byte	.Lframe0
	.4byte	.LFB707
	.4byte	.LFE707-.LFB707
	.byte	0x4
	.4byte	.LCFI1384-.LFB707
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1385-.LCFI1384
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE618:
.LSFDE620:
	.4byte	.LEFDE620-.LASFDE620
.LASFDE620:
	.4byte	.Lframe0
	.4byte	.LFB708
	.4byte	.LFE708-.LFB708
	.byte	0x4
	.4byte	.LCFI1390-.LFB708
	.byte	0xe
	.uleb128 0x10
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.align	4
.LEFDE620:
.LSFDE622:
	.4byte	.LEFDE622-.LASFDE622
.LASFDE622:
	.4byte	.Lframe0
	.4byte	.LFB766
	.4byte	.LFE766-.LFB766
	.byte	0x4
	.4byte	.LCFI1392-.LFB766
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE622:
.LSFDE624:
	.4byte	.LEFDE624-.LASFDE624
.LASFDE624:
	.4byte	.Lframe0
	.4byte	.LFB873
	.4byte	.LFE873-.LFB873
	.byte	0x4
	.4byte	.LCFI1397-.LFB873
	.byte	0x92
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1398-.LCFI1397
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE624:
.LSFDE626:
	.4byte	.LEFDE626-.LASFDE626
.LASFDE626:
	.4byte	.Lframe0
	.4byte	.LFB806
	.4byte	.LFE806-.LFB806
	.byte	0x4
	.4byte	.LCFI1400-.LFB806
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE626:
.LSFDE628:
	.4byte	.LEFDE628-.LASFDE628
.LASFDE628:
	.4byte	.Lframe0
	.4byte	.LFB807
	.4byte	.LFE807-.LFB807
	.byte	0x4
	.4byte	.LCFI1405-.LFB807
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1406-.LCFI1405
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE628:
.LSFDE630:
	.4byte	.LEFDE630-.LASFDE630
.LASFDE630:
	.4byte	.Lframe0
	.4byte	.LFB722
	.4byte	.LFE722-.LFB722
	.byte	0x4
	.4byte	.LCFI1411-.LFB722
	.byte	0xe
	.uleb128 0x24
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE630:
.LSFDE632:
	.4byte	.LEFDE632-.LASFDE632
.LASFDE632:
	.4byte	.Lframe0
	.4byte	.LFB828
	.4byte	.LFE828-.LFB828
	.byte	0x4
	.4byte	.LCFI1415-.LFB828
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1416-.LCFI1415
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE632:
.LSFDE634:
	.4byte	.LEFDE634-.LASFDE634
.LASFDE634:
	.4byte	.Lframe0
	.4byte	.LFB805
	.4byte	.LFE805-.LFB805
	.byte	0x4
	.4byte	.LCFI1419-.LFB805
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1420-.LCFI1419
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE634:
.LSFDE636:
	.4byte	.LEFDE636-.LASFDE636
.LASFDE636:
	.4byte	.Lframe0
	.4byte	.LFB1068
	.4byte	.LFE1068-.LFB1068
	.byte	0x4
	.4byte	.LCFI1426-.LFB1068
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI1427-.LCFI1426
	.byte	0xe
	.uleb128 0x48
	.align	4
.LEFDE636:
.LSFDE638:
	.4byte	.LEFDE638-.LASFDE638
.LASFDE638:
	.4byte	.Lframe0
	.4byte	.LFB1335
	.4byte	.LFE1335-.LFB1335
	.byte	0x4
	.4byte	.LCFI1432-.LFB1335
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1433-.LCFI1432
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE638:
.LSFDE640:
	.4byte	.LEFDE640-.LASFDE640
.LASFDE640:
	.4byte	.Lframe0
	.4byte	.LFB1338
	.4byte	.LFE1338-.LFB1338
	.byte	0x4
	.4byte	.LCFI1434-.LFB1338
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI1439-.LCFI1434
	.byte	0x92
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1440-.LCFI1439
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE640:
.LSFDE642:
	.4byte	.LEFDE642-.LASFDE642
.LASFDE642:
	.4byte	.Lframe0
	.4byte	.LFB1339
	.4byte	.LFE1339-.LFB1339
	.byte	0x4
	.4byte	.LCFI1443-.LFB1339
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE642:
.LSFDE644:
	.4byte	.LEFDE644-.LASFDE644
.LASFDE644:
	.4byte	.Lframe0
	.4byte	.LFB1340
	.4byte	.LFE1340-.LFB1340
	.byte	0x4
	.4byte	.LCFI1451-.LFB1340
	.byte	0xe
	.uleb128 0x1c
	.byte	0x82
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.align	4
.LEFDE644:
.LSFDE646:
	.4byte	.LEFDE646-.LASFDE646
.LASFDE646:
	.4byte	.Lframe0
	.4byte	.LFB1343
	.4byte	.LFE1343-.LFB1343
	.byte	0x4
	.4byte	.LCFI1458-.LFB1343
	.byte	0xe
	.uleb128 0x20
	.byte	0x94
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.align	4
.LEFDE646:
.LSFDE648:
	.4byte	.LEFDE648-.LASFDE648
.LASFDE648:
	.4byte	.Lframe0
	.4byte	.LFB1150
	.4byte	.LFE1150-.LFB1150
	.byte	0x4
	.4byte	.LCFI1459-.LFB1150
	.byte	0x90
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1462-.LCFI1459
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1463-.LCFI1462
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE648:
.LSFDE650:
	.4byte	.LEFDE650-.LASFDE650
.LASFDE650:
	.4byte	.Lframe0
	.4byte	.LFB1344
	.4byte	.LFE1344-.LFB1344
	.byte	0x4
	.4byte	.LCFI1469-.LFB1344
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI1470-.LCFI1469
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE650:
.LSFDE652:
	.4byte	.LEFDE652-.LASFDE652
.LASFDE652:
	.4byte	.Lframe0
	.4byte	.LFB1346
	.4byte	.LFE1346-.LFB1346
	.byte	0x4
	.4byte	.LCFI1473-.LFB1346
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1474-.LCFI1473
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE652:
.LSFDE654:
	.4byte	.LEFDE654-.LASFDE654
.LASFDE654:
	.4byte	.Lframe0
	.4byte	.LFB1347
	.4byte	.LFE1347-.LFB1347
	.byte	0x4
	.4byte	.LCFI1476-.LFB1347
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1477-.LCFI1476
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE654:
.LSFDE656:
	.4byte	.LEFDE656-.LASFDE656
.LASFDE656:
	.4byte	.Lframe0
	.4byte	.LFB1348
	.4byte	.LFE1348-.LFB1348
	.byte	0x4
	.4byte	.LCFI1479-.LFB1348
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE656:
.LSFDE658:
	.4byte	.LEFDE658-.LASFDE658
.LASFDE658:
	.4byte	.Lframe0
	.4byte	.LFB1349
	.4byte	.LFE1349-.LFB1349
	.byte	0x4
	.4byte	.LCFI1481-.LFB1349
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE658:
.LSFDE660:
	.4byte	.LEFDE660-.LASFDE660
.LASFDE660:
	.4byte	.Lframe0
	.4byte	.LFB1351
	.4byte	.LFE1351-.LFB1351
	.byte	0x4
	.4byte	.LCFI1486-.LFB1351
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1487-.LCFI1486
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE660:
.LSFDE662:
	.4byte	.LEFDE662-.LASFDE662
.LASFDE662:
	.4byte	.Lframe0
	.4byte	.LFB1352
	.4byte	.LFE1352-.LFB1352
	.byte	0x4
	.4byte	.LCFI1488-.LFB1352
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1491-.LCFI1488
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.align	4
.LEFDE662:
.LSFDE664:
	.4byte	.LEFDE664-.LASFDE664
.LASFDE664:
	.4byte	.Lframe0
	.4byte	.LFB933
	.4byte	.LFE933-.LFB933
	.byte	0x4
	.4byte	.LCFI1493-.LFB933
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1494-.LCFI1493
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE664:
.LSFDE666:
	.4byte	.LEFDE666-.LASFDE666
.LASFDE666:
	.4byte	.Lframe0
	.4byte	.LFB1353
	.4byte	.LFE1353-.LFB1353
	.byte	0x4
	.4byte	.LCFI1501-.LFB1353
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1502-.LCFI1501
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE666:
.LSFDE668:
	.4byte	.LEFDE668-.LASFDE668
.LASFDE668:
	.4byte	.Lframe0
	.4byte	.LFB313
	.4byte	.LFE313-.LFB313
	.byte	0x4
	.4byte	.LCFI1503-.LFB313
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1504-.LCFI1503
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1508-.LCFI1504
	.byte	0xe
	.uleb128 0x14
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE668:
.LSFDE670:
	.4byte	.LEFDE670-.LASFDE670
.LASFDE670:
	.4byte	.Lframe0
	.4byte	.LFB1356
	.4byte	.LFE1356-.LFB1356
	.byte	0x4
	.4byte	.LCFI1511-.LFB1356
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE670:
.LSFDE672:
	.4byte	.LEFDE672-.LASFDE672
.LASFDE672:
	.4byte	.Lframe0
	.4byte	.LFB1168
	.4byte	.LFE1168-.LFB1168
	.byte	0x4
	.4byte	.LCFI1514-.LFB1168
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1515-.LCFI1514
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE672:
.LSFDE674:
	.4byte	.LEFDE674-.LASFDE674
.LASFDE674:
	.4byte	.Lframe0
	.4byte	.LFB1358
	.4byte	.LFE1358-.LFB1358
	.byte	0x4
	.4byte	.LCFI1527-.LFB1358
	.byte	0xe
	.uleb128 0x48
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE674:
.LSFDE676:
	.4byte	.LEFDE676-.LASFDE676
.LASFDE676:
	.4byte	.Lframe0
	.4byte	.LFB1359
	.4byte	.LFE1359-.LFB1359
	.byte	0x4
	.4byte	.LCFI1528-.LFB1359
	.byte	0x94
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI1539-.LCFI1528
	.byte	0xe
	.uleb128 0x38
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE676:
.LSFDE678:
	.4byte	.LEFDE678-.LASFDE678
.LASFDE678:
	.4byte	.Lframe0
	.4byte	.LFB1360
	.4byte	.LFE1360-.LFB1360
	.byte	0x4
	.4byte	.LCFI1544-.LFB1360
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1545-.LCFI1544
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE678:
.LSFDE680:
	.4byte	.LEFDE680-.LASFDE680
.LASFDE680:
	.4byte	.Lframe0
	.4byte	.LFB1364
	.4byte	.LFE1364-.LFB1364
	.byte	0x4
	.4byte	.LCFI1556-.LFB1364
	.byte	0xe
	.uleb128 0x28
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE680:
.LSFDE682:
	.4byte	.LEFDE682-.LASFDE682
.LASFDE682:
	.4byte	.Lframe0
	.4byte	.LFB1365
	.4byte	.LFE1365-.LFB1365
	.byte	0x4
	.4byte	.LCFI1557-.LFB1365
	.byte	0x98
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1558-.LCFI1557
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI1560-.LCFI1558
	.byte	0x96
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI1565-.LCFI1560
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI1566-.LCFI1565
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE682:
.LSFDE684:
	.4byte	.LEFDE684-.LASFDE684
.LASFDE684:
	.4byte	.Lframe0
	.4byte	.LFB713
	.4byte	.LFE713-.LFB713
	.byte	0x4
	.4byte	.LCFI1573-.LFB713
	.byte	0x90
	.uleb128 0x9
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1578-.LCFI1573
	.byte	0xe
	.uleb128 0x6c
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.align	4
.LEFDE684:
.LSFDE686:
	.4byte	.LEFDE686-.LASFDE686
.LASFDE686:
	.4byte	.Lframe0
	.4byte	.LFB714
	.4byte	.LFE714-.LFB714
	.byte	0x4
	.4byte	.LCFI1579-.LFB714
	.byte	0x92
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI1589-.LCFI1579
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI1590-.LCFI1589
	.byte	0xe
	.uleb128 0x34
	.align	4
.LEFDE686:
.LSFDE688:
	.4byte	.LEFDE688-.LASFDE688
.LASFDE688:
	.4byte	.Lframe0
	.4byte	.LFB1366
	.4byte	.LFE1366-.LFB1366
	.byte	0x4
	.4byte	.LCFI1598-.LFB1366
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI1599-.LCFI1598
	.byte	0xe
	.uleb128 0x2c
	.align	4
.LEFDE688:
.LSFDE690:
	.4byte	.LEFDE690-.LASFDE690
.LASFDE690:
	.4byte	.Lframe0
	.4byte	.LFB720
	.4byte	.LFE720-.LFB720
	.byte	0x4
	.4byte	.LCFI1610-.LFB720
	.byte	0x9e
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI1611-.LCFI1610
	.byte	0xe
	.uleb128 0x3c
	.align	4
.LEFDE690:
.LSFDE692:
	.4byte	.LEFDE692-.LASFDE692
.LASFDE692:
	.4byte	.Lframe0
	.4byte	.LFB721
	.4byte	.LFE721-.LFB721
	.byte	0x4
	.4byte	.LCFI1622-.LFB721
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI1623-.LCFI1622
	.byte	0xe
	.uleb128 0xac
	.align	4
.LEFDE692:
.LSFDE694:
	.4byte	.LEFDE694-.LASFDE694
.LASFDE694:
	.4byte	.Lframe0
	.4byte	.LFB1428
	.4byte	.LFE1428-.LFB1428
	.byte	0x4
	.4byte	.LCFI1625-.LFB1428
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE694:
.LSFDE696:
	.4byte	.LEFDE696-.LASFDE696
.LASFDE696:
	.4byte	.Lframe0
	.4byte	.LFB6
	.4byte	.LFE6-.LFB6
	.byte	0x4
	.4byte	.LCFI1627-.LFB6
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE696:
.LSFDE698:
	.4byte	.LEFDE698-.LASFDE698
.LASFDE698:
	.4byte	.Lframe0
	.4byte	.LFB7
	.4byte	.LFE7-.LFB7
	.align	4
.LEFDE698:
.LSFDE700:
	.4byte	.LEFDE700-.LASFDE700
.LASFDE700:
	.4byte	.Lframe0
	.4byte	.LFB55
	.4byte	.LFE55-.LFB55
	.byte	0x4
	.4byte	.LCFI1629-.LFB55
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE700:
.LSFDE702:
	.4byte	.LEFDE702-.LASFDE702
.LASFDE702:
	.4byte	.Lframe0
	.4byte	.LFB69
	.4byte	.LFE69-.LFB69
	.align	4
.LEFDE702:
.LSFDE704:
	.4byte	.LEFDE704-.LASFDE704
.LASFDE704:
	.4byte	.Lframe0
	.4byte	.LFB72
	.4byte	.LFE72-.LFB72
	.align	4
.LEFDE704:
.LSFDE706:
	.4byte	.LEFDE706-.LASFDE706
.LASFDE706:
	.4byte	.Lframe0
	.4byte	.LFB73
	.4byte	.LFE73-.LFB73
	.align	4
.LEFDE706:
.LSFDE708:
	.4byte	.LEFDE708-.LASFDE708
.LASFDE708:
	.4byte	.Lframe0
	.4byte	.LFB75
	.4byte	.LFE75-.LFB75
	.align	4
.LEFDE708:
.LSFDE710:
	.4byte	.LEFDE710-.LASFDE710
.LASFDE710:
	.4byte	.Lframe0
	.4byte	.LFB110
	.4byte	.LFE110-.LFB110
	.byte	0x4
	.4byte	.LCFI1632-.LFB110
	.byte	0xe
	.uleb128 0x24
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE710:
.LSFDE712:
	.4byte	.LEFDE712-.LASFDE712
.LASFDE712:
	.4byte	.Lframe0
	.4byte	.LFB196
	.4byte	.LFE196-.LFB196
	.byte	0x4
	.4byte	.LCFI1633-.LFB196
	.byte	0x90
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1637-.LCFI1633
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE712:
.LSFDE714:
	.4byte	.LEFDE714-.LASFDE714
.LASFDE714:
	.4byte	.Lframe0
	.4byte	.LFB191
	.4byte	.LFE191-.LFB191
	.byte	0x4
	.4byte	.LCFI1642-.LFB191
	.byte	0xe
	.uleb128 0x218
	.byte	0x8e
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE714:
.LSFDE716:
	.4byte	.LEFDE716-.LASFDE716
.LASFDE716:
	.4byte	.Lframe0
	.4byte	.LFB194
	.4byte	.LFE194-.LFB194
	.byte	0x4
	.4byte	.LCFI1646-.LFB194
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE716:
.LSFDE718:
	.4byte	.LEFDE718-.LASFDE718
.LASFDE718:
	.4byte	.Lframe0
	.4byte	.LFB202
	.4byte	.LFE202-.LFB202
	.align	4
.LEFDE718:
.LSFDE720:
	.4byte	.LEFDE720-.LASFDE720
.LASFDE720:
	.4byte	.Lframe0
	.4byte	.LFB355
	.4byte	.LFE355-.LFB355
	.align	4
.LEFDE720:
.LSFDE722:
	.4byte	.LEFDE722-.LASFDE722
.LASFDE722:
	.4byte	.Lframe0
	.4byte	.LFB505
	.4byte	.LFE505-.LFB505
	.align	4
.LEFDE722:
.LSFDE724:
	.4byte	.LEFDE724-.LASFDE724
.LASFDE724:
	.4byte	.Lframe0
	.4byte	.LFB506
	.4byte	.LFE506-.LFB506
	.align	4
.LEFDE724:
.LSFDE726:
	.4byte	.LEFDE726-.LASFDE726
.LASFDE726:
	.4byte	.Lframe0
	.4byte	.LFB546
	.4byte	.LFE546-.LFB546
	.align	4
.LEFDE726:
.LSFDE728:
	.4byte	.LEFDE728-.LASFDE728
.LASFDE728:
	.4byte	.Lframe0
	.4byte	.LFB605
	.4byte	.LFE605-.LFB605
	.align	4
.LEFDE728:
.LSFDE730:
	.4byte	.LEFDE730-.LASFDE730
.LASFDE730:
	.4byte	.Lframe0
	.4byte	.LFB608
	.4byte	.LFE608-.LFB608
	.byte	0x4
	.4byte	.LCFI1650-.LFB608
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1651-.LCFI1650
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE730:
.LSFDE732:
	.4byte	.LEFDE732-.LASFDE732
.LASFDE732:
	.4byte	.Lframe0
	.4byte	.LFB619
	.4byte	.LFE619-.LFB619
	.align	4
.LEFDE732:
.LSFDE734:
	.4byte	.LEFDE734-.LASFDE734
.LASFDE734:
	.4byte	.Lframe0
	.4byte	.LFB621
	.4byte	.LFE621-.LFB621
	.byte	0x4
	.4byte	.LCFI1653-.LFB621
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE734:
.LSFDE736:
	.4byte	.LEFDE736-.LASFDE736
.LASFDE736:
	.4byte	.Lframe0
	.4byte	.LFB624
	.4byte	.LFE624-.LFB624
	.byte	0x4
	.4byte	.LCFI1656-.LFB624
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1657-.LCFI1656
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE736:
.LSFDE738:
	.4byte	.LEFDE738-.LASFDE738
.LASFDE738:
	.4byte	.Lframe0
	.4byte	.LFB625
	.4byte	.LFE625-.LFB625
	.byte	0x4
	.4byte	.LCFI1659-.LFB625
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1660-.LCFI1659
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE738:
.LSFDE740:
	.4byte	.LEFDE740-.LASFDE740
.LASFDE740:
	.4byte	.Lframe0
	.4byte	.LFB626
	.4byte	.LFE626-.LFB626
	.byte	0x4
	.4byte	.LCFI1662-.LFB626
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE740:
.LSFDE742:
	.4byte	.LEFDE742-.LASFDE742
.LASFDE742:
	.4byte	.Lframe0
	.4byte	.LFB632
	.4byte	.LFE632-.LFB632
	.byte	0x4
	.4byte	.LCFI1665-.LFB632
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1666-.LCFI1665
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE742:
.LSFDE744:
	.4byte	.LEFDE744-.LASFDE744
.LASFDE744:
	.4byte	.Lframe0
	.4byte	.LFB635
	.4byte	.LFE635-.LFB635
	.byte	0x4
	.4byte	.LCFI1668-.LFB635
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1669-.LCFI1668
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE744:
.LSFDE746:
	.4byte	.LEFDE746-.LASFDE746
.LASFDE746:
	.4byte	.Lframe0
	.4byte	.LFB638
	.4byte	.LFE638-.LFB638
	.align	4
.LEFDE746:
.LSFDE748:
	.4byte	.LEFDE748-.LASFDE748
.LASFDE748:
	.4byte	.Lframe0
	.4byte	.LFB639
	.4byte	.LFE639-.LFB639
	.align	4
.LEFDE748:
.LSFDE750:
	.4byte	.LEFDE750-.LASFDE750
.LASFDE750:
	.4byte	.Lframe0
	.4byte	.LFB642
	.4byte	.LFE642-.LFB642
	.align	4
.LEFDE750:
.LSFDE752:
	.4byte	.LEFDE752-.LASFDE752
.LASFDE752:
	.4byte	.Lframe0
	.4byte	.LFB644
	.4byte	.LFE644-.LFB644
	.align	4
.LEFDE752:
.LSFDE754:
	.4byte	.LEFDE754-.LASFDE754
.LASFDE754:
	.4byte	.Lframe0
	.4byte	.LFB645
	.4byte	.LFE645-.LFB645
	.align	4
.LEFDE754:
.LSFDE756:
	.4byte	.LEFDE756-.LASFDE756
.LASFDE756:
	.4byte	.Lframe0
	.4byte	.LFB646
	.4byte	.LFE646-.LFB646
	.align	4
.LEFDE756:
.LSFDE758:
	.4byte	.LEFDE758-.LASFDE758
.LASFDE758:
	.4byte	.Lframe0
	.4byte	.LFB660
	.4byte	.LFE660-.LFB660
	.byte	0x4
	.4byte	.LCFI1671-.LFB660
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE758:
.LSFDE760:
	.4byte	.LEFDE760-.LASFDE760
.LASFDE760:
	.4byte	.Lframe0
	.4byte	.LFB661
	.4byte	.LFE661-.LFB661
	.byte	0x4
	.4byte	.LCFI1673-.LFB661
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE760:
.LSFDE762:
	.4byte	.LEFDE762-.LASFDE762
.LASFDE762:
	.4byte	.Lframe0
	.4byte	.LFB662
	.4byte	.LFE662-.LFB662
	.byte	0x4
	.4byte	.LCFI1675-.LFB662
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE762:
.LSFDE764:
	.4byte	.LEFDE764-.LASFDE764
.LASFDE764:
	.4byte	.Lframe0
	.4byte	.LFB663
	.4byte	.LFE663-.LFB663
	.byte	0x4
	.4byte	.LCFI1677-.LFB663
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE764:
.LSFDE766:
	.4byte	.LEFDE766-.LASFDE766
.LASFDE766:
	.4byte	.Lframe0
	.4byte	.LFB675
	.4byte	.LFE675-.LFB675
	.align	4
.LEFDE766:
.LSFDE768:
	.4byte	.LEFDE768-.LASFDE768
.LASFDE768:
	.4byte	.Lframe0
	.4byte	.LFB677
	.4byte	.LFE677-.LFB677
	.align	4
.LEFDE768:
.LSFDE770:
	.4byte	.LEFDE770-.LASFDE770
.LASFDE770:
	.4byte	.Lframe0
	.4byte	.LFB678
	.4byte	.LFE678-.LFB678
	.byte	0x4
	.4byte	.LCFI1682-.LFB678
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1683-.LCFI1682
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE770:
.LSFDE772:
	.4byte	.LEFDE772-.LASFDE772
.LASFDE772:
	.4byte	.Lframe0
	.4byte	.LFB680
	.4byte	.LFE680-.LFB680
	.byte	0x4
	.4byte	.LCFI1685-.LFB680
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE772:
.LSFDE774:
	.4byte	.LEFDE774-.LASFDE774
.LASFDE774:
	.4byte	.Lframe0
	.4byte	.LFB681
	.4byte	.LFE681-.LFB681
	.align	4
.LEFDE774:
.LSFDE776:
	.4byte	.LEFDE776-.LASFDE776
.LASFDE776:
	.4byte	.Lframe0
	.4byte	.LFB682
	.4byte	.LFE682-.LFB682
	.align	4
.LEFDE776:
.LSFDE778:
	.4byte	.LEFDE778-.LASFDE778
.LASFDE778:
	.4byte	.Lframe0
	.4byte	.LFB683
	.4byte	.LFE683-.LFB683
	.byte	0x4
	.4byte	.LCFI1687-.LFB683
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE778:
.LSFDE780:
	.4byte	.LEFDE780-.LASFDE780
.LASFDE780:
	.4byte	.Lframe0
	.4byte	.LFB697
	.4byte	.LFE697-.LFB697
	.align	4
.LEFDE780:
.LSFDE782:
	.4byte	.LEFDE782-.LASFDE782
.LASFDE782:
	.4byte	.Lframe0
	.4byte	.LFB840
	.4byte	.LFE840-.LFB840
	.byte	0x4
	.4byte	.LCFI1689-.LFB840
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE782:
.LSFDE784:
	.4byte	.LEFDE784-.LASFDE784
.LASFDE784:
	.4byte	.Lframe0
	.4byte	.LFB1075
	.4byte	.LFE1075-.LFB1075
	.byte	0x4
	.4byte	.LCFI1694-.LFB1075
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI1695-.LCFI1694
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE784:
.LSFDE786:
	.4byte	.LEFDE786-.LASFDE786
.LASFDE786:
	.4byte	.Lframe0
	.4byte	.LFB1183
	.4byte	.LFE1183-.LFB1183
	.byte	0x4
	.4byte	.LCFI1699-.LFB1183
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1700-.LCFI1699
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE786:
.LSFDE788:
	.4byte	.LEFDE788-.LASFDE788
.LASFDE788:
	.4byte	.Lframe0
	.4byte	.LFB1185
	.4byte	.LFE1185-.LFB1185
	.align	4
.LEFDE788:
.LSFDE790:
	.4byte	.LEFDE790-.LASFDE790
.LASFDE790:
	.4byte	.Lframe0
	.4byte	.LFB1186
	.4byte	.LFE1186-.LFB1186
	.align	4
.LEFDE790:
.LSFDE792:
	.4byte	.LEFDE792-.LASFDE792
.LASFDE792:
	.4byte	.Lframe0
	.4byte	.LFB1187
	.4byte	.LFE1187-.LFB1187
	.align	4
.LEFDE792:
.LSFDE794:
	.4byte	.LEFDE794-.LASFDE794
.LASFDE794:
	.4byte	.Lframe0
	.4byte	.LFB1190
	.4byte	.LFE1190-.LFB1190
	.byte	0x4
	.4byte	.LCFI1701-.LFB1190
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1704-.LCFI1701
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE794:
.LSFDE796:
	.4byte	.LEFDE796-.LASFDE796
.LASFDE796:
	.4byte	.Lframe0
	.4byte	.LFB66
	.4byte	.LFE66-.LFB66
	.byte	0x4
	.4byte	.LCFI1706-.LFB66
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE796:
.LSFDE798:
	.4byte	.LEFDE798-.LASFDE798
.LASFDE798:
	.4byte	.Lframe0
	.4byte	.LFB259
	.4byte	.LFE259-.LFB259
	.byte	0x4
	.4byte	.LCFI1708-.LFB259
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE798:
.LSFDE800:
	.4byte	.LEFDE800-.LASFDE800
.LASFDE800:
	.4byte	.Lframe0
	.4byte	.LFB1188
	.4byte	.LFE1188-.LFB1188
	.byte	0x4
	.4byte	.LCFI1709-.LFB1188
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI1715-.LCFI1709
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI1716-.LCFI1715
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE800:
.LSFDE802:
	.4byte	.LEFDE802-.LASFDE802
.LASFDE802:
	.4byte	.Lframe0
	.4byte	.LFB997
	.4byte	.LFE997-.LFB997
	.byte	0x4
	.4byte	.LCFI1720-.LFB997
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE802:
.LSFDE804:
	.4byte	.LEFDE804-.LASFDE804
.LASFDE804:
	.4byte	.Lframe0
	.4byte	.LFB1189
	.4byte	.LFE1189-.LFB1189
	.byte	0x4
	.4byte	.LCFI1721-.LFB1189
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1723-.LCFI1721
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE804:
.LSFDE806:
	.4byte	.LEFDE806-.LASFDE806
.LASFDE806:
	.4byte	.Lframe0
	.4byte	.LFB108
	.4byte	.LFE108-.LFB108
	.byte	0x4
	.4byte	.LCFI1728-.LFB108
	.byte	0xe
	.uleb128 0x18c
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.align	4
.LEFDE806:
.LSFDE808:
	.4byte	.LEFDE808-.LASFDE808
.LASFDE808:
	.4byte	.Lframe0
	.4byte	.LFB109
	.4byte	.LFE109-.LFB109
	.byte	0x4
	.4byte	.LCFI1731-.LFB109
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE808:
.LSFDE810:
	.4byte	.LEFDE810-.LASFDE810
.LASFDE810:
	.4byte	.Lframe0
	.4byte	.LFB88
	.4byte	.LFE88-.LFB88
	.byte	0x4
	.4byte	.LCFI1735-.LFB88
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE810:
.LSFDE812:
	.4byte	.LEFDE812-.LASFDE812
.LASFDE812:
	.4byte	.Lframe0
	.4byte	.LFB92
	.4byte	.LFE92-.LFB92
	.byte	0x4
	.4byte	.LCFI1739-.LFB92
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1740-.LCFI1739
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE812:
.LSFDE814:
	.4byte	.LEFDE814-.LASFDE814
.LASFDE814:
	.4byte	.Lframe0
	.4byte	.LFB93
	.4byte	.LFE93-.LFB93
	.byte	0x4
	.4byte	.LCFI1745-.LFB93
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE814:
.LSFDE816:
	.4byte	.LEFDE816-.LASFDE816
.LASFDE816:
	.4byte	.Lframe0
	.4byte	.LFB511
	.4byte	.LFE511-.LFB511
	.byte	0x4
	.4byte	.LCFI1749-.LFB511
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1750-.LCFI1749
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE816:
.LSFDE818:
	.4byte	.LEFDE818-.LASFDE818
.LASFDE818:
	.4byte	.Lframe0
	.4byte	.LFB513
	.4byte	.LFE513-.LFB513
	.byte	0x4
	.4byte	.LCFI1754-.LFB513
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE818:
.LSFDE820:
	.4byte	.LEFDE820-.LASFDE820
.LASFDE820:
	.4byte	.Lframe0
	.4byte	.LFB512
	.4byte	.LFE512-.LFB512
	.byte	0x4
	.4byte	.LCFI1757-.LFB512
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE820:
.LSFDE822:
	.4byte	.LEFDE822-.LASFDE822
.LASFDE822:
	.4byte	.Lframe0
	.4byte	.LFB510
	.4byte	.LFE510-.LFB510
	.byte	0x4
	.4byte	.LCFI1764-.LFB510
	.byte	0xe
	.uleb128 0x18
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x6
	.align	4
.LEFDE822:
.LSFDE824:
	.4byte	.LEFDE824-.LASFDE824
.LASFDE824:
	.4byte	.Lframe0
	.4byte	.LFB533
	.4byte	.LFE533-.LFB533
	.byte	0x4
	.4byte	.LCFI1768-.LFB533
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE824:
.LSFDE826:
	.4byte	.LEFDE826-.LASFDE826
.LASFDE826:
	.4byte	.Lframe0
	.4byte	.LFB631
	.4byte	.LFE631-.LFB631
	.byte	0x4
	.4byte	.LCFI1770-.LFB631
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE826:
.LSFDE828:
	.4byte	.LEFDE828-.LASFDE828
.LASFDE828:
	.4byte	.Lframe0
	.4byte	.LFB951
	.4byte	.LFE951-.LFB951
	.byte	0x4
	.4byte	.LCFI1772-.LFB951
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE828:
.LSFDE830:
	.4byte	.LEFDE830-.LASFDE830
.LASFDE830:
	.4byte	.Lframe0
	.4byte	.LFB535
	.4byte	.LFE535-.LFB535
	.byte	0x4
	.4byte	.LCFI1780-.LFB535
	.byte	0x94
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI1781-.LCFI1780
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE830:
.LSFDE832:
	.4byte	.LEFDE832-.LASFDE832
.LASFDE832:
	.4byte	.Lframe0
	.4byte	.LFB541
	.4byte	.LFE541-.LFB541
	.byte	0x4
	.4byte	.LCFI1783-.LFB541
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE832:
.LSFDE834:
	.4byte	.LEFDE834-.LASFDE834
.LASFDE834:
	.4byte	.Lframe0
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.byte	0x4
	.4byte	.LCFI1787-.LFB124
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1788-.LCFI1787
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE834:
.LSFDE836:
	.4byte	.LEFDE836-.LASFDE836
.LASFDE836:
	.4byte	.Lframe0
	.4byte	.LFB97
	.4byte	.LFE97-.LFB97
	.byte	0x4
	.4byte	.LCFI1790-.LFB97
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1791-.LCFI1790
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE836:
.LSFDE838:
	.4byte	.LEFDE838-.LASFDE838
.LASFDE838:
	.4byte	.Lframe0
	.4byte	.LFB1102
	.4byte	.LFE1102-.LFB1102
	.byte	0x4
	.4byte	.LCFI1800-.LFB1102
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI1801-.LCFI1800
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE838:
.LSFDE840:
	.4byte	.LEFDE840-.LASFDE840
.LASFDE840:
	.4byte	.Lframe0
	.4byte	.LFB1104
	.4byte	.LFE1104-.LFB1104
	.byte	0x4
	.4byte	.LCFI1803-.LFB1104
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE840:
.LSFDE842:
	.4byte	.LEFDE842-.LASFDE842
.LASFDE842:
	.4byte	.Lframe0
	.4byte	.LFB1103
	.4byte	.LFE1103-.LFB1103
	.byte	0x4
	.4byte	.LCFI1805-.LFB1103
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE842:
.LSFDE844:
	.4byte	.LEFDE844-.LASFDE844
.LASFDE844:
	.4byte	.Lframe0
	.4byte	.LFB648
	.4byte	.LFE648-.LFB648
	.byte	0x4
	.4byte	.LCFI1807-.LFB648
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1808-.LCFI1807
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE844:
.LSFDE846:
	.4byte	.LEFDE846-.LASFDE846
.LASFDE846:
	.4byte	.Lframe0
	.4byte	.LFB1225
	.4byte	.LFE1225-.LFB1225
	.byte	0x4
	.4byte	.LCFI1809-.LFB1225
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI1819-.LCFI1809
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI1820-.LCFI1819
	.byte	0xe
	.uleb128 0x38
	.align	4
.LEFDE846:
.LSFDE848:
	.4byte	.LEFDE848-.LASFDE848
.LASFDE848:
	.4byte	.Lframe0
	.4byte	.LFB1210
	.4byte	.LFE1210-.LFB1210
	.byte	0x4
	.4byte	.LCFI1832-.LFB1210
	.byte	0xe
	.uleb128 0x34
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE848:
.LSFDE850:
	.4byte	.LEFDE850-.LASFDE850
.LASFDE850:
	.4byte	.Lframe0
	.4byte	.LFB1125
	.4byte	.LFE1125-.LFB1125
	.byte	0x4
	.4byte	.LCFI1834-.LFB1125
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI1840-.LCFI1834
	.byte	0xe
	.uleb128 0x28
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x5
	.align	4
.LEFDE850:
.LSFDE852:
	.4byte	.LEFDE852-.LASFDE852
.LASFDE852:
	.4byte	.Lframe0
	.4byte	.LFB664
	.4byte	.LFE664-.LFB664
	.byte	0x4
	.4byte	.LCFI1843-.LFB664
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1844-.LCFI1843
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE852:
.LSFDE854:
	.4byte	.LEFDE854-.LASFDE854
.LASFDE854:
	.4byte	.Lframe0
	.4byte	.LFB674
	.4byte	.LFE674-.LFB674
	.byte	0x4
	.4byte	.LCFI1850-.LFB674
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.align	4
.LEFDE854:
.LSFDE856:
	.4byte	.LEFDE856-.LASFDE856
.LASFDE856:
	.4byte	.Lframe0
	.4byte	.LFB670
	.4byte	.LFE670-.LFB670
	.byte	0x4
	.4byte	.LCFI1852-.LFB670
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE856:
.LSFDE858:
	.4byte	.LEFDE858-.LASFDE858
.LASFDE858:
	.4byte	.Lframe0
	.4byte	.LFB669
	.4byte	.LFE669-.LFB669
	.byte	0x4
	.4byte	.LCFI1857-.LFB669
	.byte	0xe
	.uleb128 0x18
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE858:
.LSFDE860:
	.4byte	.LEFDE860-.LASFDE860
.LASFDE860:
	.4byte	.Lframe0
	.4byte	.LFB668
	.4byte	.LFE668-.LFB668
	.byte	0x4
	.4byte	.LCFI1859-.LFB668
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE860:
.LSFDE862:
	.4byte	.LEFDE862-.LASFDE862
.LASFDE862:
	.4byte	.Lframe0
	.4byte	.LFB667
	.4byte	.LFE667-.LFB667
	.byte	0x4
	.4byte	.LCFI1864-.LFB667
	.byte	0xe
	.uleb128 0x18
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE862:
.LSFDE864:
	.4byte	.LEFDE864-.LASFDE864
.LASFDE864:
	.4byte	.Lframe0
	.4byte	.LFB647
	.4byte	.LFE647-.LFB647
	.byte	0x4
	.4byte	.LCFI1866-.LFB647
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1867-.LCFI1866
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE864:
.LSFDE866:
	.4byte	.LEFDE866-.LASFDE866
.LASFDE866:
	.4byte	.Lframe0
	.4byte	.LFB658
	.4byte	.LFE658-.LFB658
	.byte	0x4
	.4byte	.LCFI1871-.LFB658
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE866:
.LSFDE868:
	.4byte	.LEFDE868-.LASFDE868
.LASFDE868:
	.4byte	.Lframe0
	.4byte	.LFB656
	.4byte	.LFE656-.LFB656
	.byte	0x4
	.4byte	.LCFI1875-.LFB656
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE868:
.LSFDE870:
	.4byte	.LEFDE870-.LASFDE870
.LASFDE870:
	.4byte	.Lframe0
	.4byte	.LFB579
	.4byte	.LFE579-.LFB579
	.byte	0x4
	.4byte	.LCFI1877-.LFB579
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE870:
.LSFDE872:
	.4byte	.LEFDE872-.LASFDE872
.LASFDE872:
	.4byte	.Lframe0
	.4byte	.LFB1379
	.4byte	.LFE1379-.LFB1379
	.byte	0x4
	.4byte	.LCFI1888-.LFB1379
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI1889-.LCFI1888
	.byte	0xe
	.uleb128 0x5c
	.align	4
.LEFDE872:
.LSFDE874:
	.4byte	.LEFDE874-.LASFDE874
.LASFDE874:
	.4byte	.Lframe0
	.4byte	.LFB634
	.4byte	.LFE634-.LFB634
	.byte	0x4
	.4byte	.LCFI1891-.LFB634
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE874:
.LSFDE876:
	.4byte	.LEFDE876-.LASFDE876
.LASFDE876:
	.4byte	.Lframe0
	.4byte	.LFB948
	.4byte	.LFE948-.LFB948
	.byte	0x4
	.4byte	.LCFI1892-.LFB948
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1893-.LCFI1892
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI1895-.LCFI1893
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE876:
.LSFDE878:
	.4byte	.LEFDE878-.LASFDE878
.LASFDE878:
	.4byte	.Lframe0
	.4byte	.LFB633
	.4byte	.LFE633-.LFB633
	.byte	0x4
	.4byte	.LCFI1898-.LFB633
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE878:
.LSFDE880:
	.4byte	.LEFDE880-.LASFDE880
.LASFDE880:
	.4byte	.Lframe0
	.4byte	.LFB630
	.4byte	.LFE630-.LFB630
	.byte	0x4
	.4byte	.LCFI1900-.LFB630
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE880:
.LSFDE882:
	.4byte	.LEFDE882-.LASFDE882
.LASFDE882:
	.4byte	.Lframe0
	.4byte	.LFB629
	.4byte	.LFE629-.LFB629
	.byte	0x4
	.4byte	.LCFI1902-.LFB629
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE882:
.LSFDE884:
	.4byte	.LEFDE884-.LASFDE884
.LASFDE884:
	.4byte	.Lframe0
	.4byte	.LFB628
	.4byte	.LFE628-.LFB628
	.byte	0x4
	.4byte	.LCFI1904-.LFB628
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE884:
.LSFDE886:
	.4byte	.LEFDE886-.LASFDE886
.LASFDE886:
	.4byte	.Lframe0
	.4byte	.LFB627
	.4byte	.LFE627-.LFB627
	.byte	0x4
	.4byte	.LCFI1906-.LFB627
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE886:
.LSFDE888:
	.4byte	.LEFDE888-.LASFDE888
.LASFDE888:
	.4byte	.Lframe0
	.4byte	.LFB960
	.4byte	.LFE960-.LFB960
	.byte	0x4
	.4byte	.LCFI1908-.LFB960
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE888:
.LSFDE890:
	.4byte	.LEFDE890-.LASFDE890
.LASFDE890:
	.4byte	.Lframe0
	.4byte	.LFB943
	.4byte	.LFE943-.LFB943
	.byte	0x4
	.4byte	.LCFI1911-.LFB943
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE890:
.LSFDE892:
	.4byte	.LEFDE892-.LASFDE892
.LASFDE892:
	.4byte	.Lframe0
	.4byte	.LFB623
	.4byte	.LFE623-.LFB623
	.byte	0x4
	.4byte	.LCFI1913-.LFB623
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE892:
.LSFDE894:
	.4byte	.LEFDE894-.LASFDE894
.LASFDE894:
	.4byte	.Lframe0
	.4byte	.LFB622
	.4byte	.LFE622-.LFB622
	.byte	0x4
	.4byte	.LCFI1915-.LFB622
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE894:
.LSFDE896:
	.4byte	.LEFDE896-.LASFDE896
.LASFDE896:
	.4byte	.Lframe0
	.4byte	.LFB640
	.4byte	.LFE640-.LFB640
	.byte	0x4
	.4byte	.LCFI1916-.LFB640
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1919-.LCFI1916
	.byte	0xe
	.uleb128 0x10
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE896:
.LSFDE898:
	.4byte	.LEFDE898-.LASFDE898
.LASFDE898:
	.4byte	.Lframe0
	.4byte	.LFB620
	.4byte	.LFE620-.LFB620
	.byte	0x4
	.4byte	.LCFI1921-.LFB620
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE898:
.LSFDE900:
	.4byte	.LEFDE900-.LASFDE900
.LASFDE900:
	.4byte	.Lframe0
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.byte	0x4
	.4byte	.LCFI1927-.LFB120
	.byte	0xe
	.uleb128 0x104
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.align	4
.LEFDE900:
.LSFDE902:
	.4byte	.LEFDE902-.LASFDE902
.LASFDE902:
	.4byte	.Lframe0
	.4byte	.LFB665
	.4byte	.LFE665-.LFB665
	.byte	0x4
	.4byte	.LCFI1935-.LFB665
	.byte	0xe
	.uleb128 0x1c
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.align	4
.LEFDE902:
.LSFDE904:
	.4byte	.LEFDE904-.LASFDE904
.LASFDE904:
	.4byte	.Lframe0
	.4byte	.LFB672
	.4byte	.LFE672-.LFB672
	.byte	0x4
	.4byte	.LCFI1937-.LFB672
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE904:
.LSFDE906:
	.4byte	.LEFDE906-.LASFDE906
.LASFDE906:
	.4byte	.Lframe0
	.4byte	.LFB671
	.4byte	.LFE671-.LFB671
	.byte	0x4
	.4byte	.LCFI1939-.LFB671
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE906:
.LSFDE908:
	.4byte	.LEFDE908-.LASFDE908
.LASFDE908:
	.4byte	.Lframe0
	.4byte	.LFB666
	.4byte	.LFE666-.LFB666
	.byte	0x4
	.4byte	.LCFI1941-.LFB666
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE908:
.LSFDE910:
	.4byte	.LEFDE910-.LASFDE910
.LASFDE910:
	.4byte	.Lframe0
	.4byte	.LFB673
	.4byte	.LFE673-.LFB673
	.byte	0x4
	.4byte	.LCFI1943-.LFB673
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE910:
.LSFDE912:
	.4byte	.LEFDE912-.LASFDE912
.LASFDE912:
	.4byte	.Lframe0
	.4byte	.LFB514
	.4byte	.LFE514-.LFB514
	.byte	0x4
	.4byte	.LCFI1946-.LFB514
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE912:
.LSFDE914:
	.4byte	.LEFDE914-.LASFDE914
.LASFDE914:
	.4byte	.Lframe0
	.4byte	.LFB521
	.4byte	.LFE521-.LFB521
	.byte	0x4
	.4byte	.LCFI1951-.LFB521
	.byte	0xe
	.uleb128 0x18
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE914:
.LSFDE916:
	.4byte	.LEFDE916-.LASFDE916
.LASFDE916:
	.4byte	.Lframe0
	.4byte	.LFB612
	.4byte	.LFE612-.LFB612
	.byte	0x4
	.4byte	.LCFI1953-.LFB612
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE916:
.LSFDE918:
	.4byte	.LEFDE918-.LASFDE918
.LASFDE918:
	.4byte	.Lframe0
	.4byte	.LFB652
	.4byte	.LFE652-.LFB652
	.byte	0x4
	.4byte	.LCFI1958-.LFB652
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE918:
.LSFDE920:
	.4byte	.LEFDE920-.LASFDE920
.LASFDE920:
	.4byte	.Lframe0
	.4byte	.LFB687
	.4byte	.LFE687-.LFB687
	.byte	0x4
	.4byte	.LCFI1961-.LFB687
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE920:
.LSFDE922:
	.4byte	.LEFDE922-.LASFDE922
.LASFDE922:
	.4byte	.Lframe0
	.4byte	.LFB689
	.4byte	.LFE689-.LFB689
	.byte	0x4
	.4byte	.LCFI1964-.LFB689
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE922:
.LSFDE924:
	.4byte	.LEFDE924-.LASFDE924
.LASFDE924:
	.4byte	.Lframe0
	.4byte	.LFB520
	.4byte	.LFE520-.LFB520
	.byte	0x4
	.4byte	.LCFI1967-.LFB520
	.byte	0xe
	.uleb128 0x20
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE924:
.LSFDE926:
	.4byte	.LEFDE926-.LASFDE926
.LASFDE926:
	.4byte	.Lframe0
	.4byte	.LFB523
	.4byte	.LFE523-.LFB523
	.byte	0x4
	.4byte	.LCFI1970-.LFB523
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE926:
.LSFDE928:
	.4byte	.LEFDE928-.LASFDE928
.LASFDE928:
	.4byte	.Lframe0
	.4byte	.LFB614
	.4byte	.LFE614-.LFB614
	.byte	0x4
	.4byte	.LCFI1972-.LFB614
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE928:
.LSFDE930:
	.4byte	.LEFDE930-.LASFDE930
.LASFDE930:
	.4byte	.Lframe0
	.4byte	.LFB963
	.4byte	.LFE963-.LFB963
	.byte	0x4
	.4byte	.LCFI1973-.LFB963
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI1976-.LCFI1973
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.align	4
.LEFDE930:
.LSFDE932:
	.4byte	.LEFDE932-.LASFDE932
.LASFDE932:
	.4byte	.Lframe0
	.4byte	.LFB945
	.4byte	.LFE945-.LFB945
	.byte	0x4
	.4byte	.LCFI1982-.LFB945
	.byte	0xe
	.uleb128 0x14
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x5
	.align	4
.LEFDE932:
.LSFDE934:
	.4byte	.LEFDE934-.LASFDE934
.LASFDE934:
	.4byte	.Lframe0
	.4byte	.LFB654
	.4byte	.LFE654-.LFB654
	.byte	0x4
	.4byte	.LCFI1987-.LFB654
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE934:
.LSFDE936:
	.4byte	.LEFDE936-.LASFDE936
.LASFDE936:
	.4byte	.Lframe0
	.4byte	.LFB613
	.4byte	.LFE613-.LFB613
	.byte	0x4
	.4byte	.LCFI1989-.LFB613
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE936:
.LSFDE938:
	.4byte	.LEFDE938-.LASFDE938
.LASFDE938:
	.4byte	.Lframe0
	.4byte	.LFB947
	.4byte	.LFE947-.LFB947
	.byte	0x4
	.4byte	.LCFI1993-.LFB947
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI1994-.LCFI1993
	.byte	0xe
	.uleb128 0x218
	.align	4
.LEFDE938:
.LSFDE940:
	.4byte	.LEFDE940-.LASFDE940
.LASFDE940:
	.4byte	.Lframe0
	.4byte	.LFB653
	.4byte	.LFE653-.LFB653
	.byte	0x4
	.4byte	.LCFI1998-.LFB653
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE940:
.LSFDE942:
	.4byte	.LEFDE942-.LASFDE942
.LASFDE942:
	.4byte	.Lframe0
	.4byte	.LFB515
	.4byte	.LFE515-.LFB515
	.byte	0x4
	.4byte	.LCFI2002-.LFB515
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2003-.LCFI2002
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE942:
.LSFDE944:
	.4byte	.LEFDE944-.LASFDE944
.LASFDE944:
	.4byte	.Lframe0
	.4byte	.LFB538
	.4byte	.LFE538-.LFB538
	.byte	0x4
	.4byte	.LCFI2007-.LFB538
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2008-.LCFI2007
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE944:
.LSFDE946:
	.4byte	.LEFDE946-.LASFDE946
.LASFDE946:
	.4byte	.Lframe0
	.4byte	.LFB536
	.4byte	.LFE536-.LFB536
	.byte	0x4
	.4byte	.LCFI2009-.LFB536
	.byte	0x94
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2010-.LCFI2009
	.byte	0x8e
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2016-.LCFI2010
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2017-.LCFI2016
	.byte	0xe
	.uleb128 0x200
	.align	4
.LEFDE946:
.LSFDE948:
	.4byte	.LEFDE948-.LASFDE948
.LASFDE948:
	.4byte	.Lframe0
	.4byte	.LFB598
	.4byte	.LFE598-.LFB598
	.byte	0x4
	.4byte	.LCFI2028-.LFB598
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x8
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2029-.LCFI2028
	.byte	0xe
	.uleb128 0x130
	.align	4
.LEFDE948:
.LSFDE950:
	.4byte	.LEFDE950-.LASFDE950
.LASFDE950:
	.4byte	.Lframe0
	.4byte	.LFB959
	.4byte	.LFE959-.LFB959
	.byte	0x4
	.4byte	.LCFI2030-.LFB959
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2033-.LCFI2030
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE950:
.LSFDE952:
	.4byte	.LEFDE952-.LASFDE952
.LASFDE952:
	.4byte	.Lframe0
	.4byte	.LFB942
	.4byte	.LFE942-.LFB942
	.byte	0x4
	.4byte	.LCFI2034-.LFB942
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI2043-.LCFI2034
	.byte	0xe
	.uleb128 0x24
	.byte	0x98
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.align	4
.LEFDE952:
.LSFDE954:
	.4byte	.LEFDE954-.LASFDE954
.LASFDE954:
	.4byte	.Lframe0
	.4byte	.LFB618
	.4byte	.LFE618-.LFB618
	.byte	0x4
	.4byte	.LCFI2045-.LFB618
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE954:
.LSFDE956:
	.4byte	.LEFDE956-.LASFDE956
.LASFDE956:
	.4byte	.Lframe0
	.4byte	.LFB617
	.4byte	.LFE617-.LFB617
	.byte	0x4
	.4byte	.LCFI2047-.LFB617
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE956:
.LSFDE958:
	.4byte	.LEFDE958-.LASFDE958
.LASFDE958:
	.4byte	.Lframe0
	.4byte	.LFB616
	.4byte	.LFE616-.LFB616
	.byte	0x4
	.4byte	.LCFI2049-.LFB616
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE958:
.LSFDE960:
	.4byte	.LEFDE960-.LASFDE960
.LASFDE960:
	.4byte	.Lframe0
	.4byte	.LFB657
	.4byte	.LFE657-.LFB657
	.byte	0x4
	.4byte	.LCFI2053-.LFB657
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE960:
.LSFDE962:
	.4byte	.LEFDE962-.LASFDE962
.LASFDE962:
	.4byte	.Lframe0
	.4byte	.LFB615
	.4byte	.LFE615-.LFB615
	.byte	0x4
	.4byte	.LCFI2055-.LFB615
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE962:
.LSFDE964:
	.4byte	.LEFDE964-.LASFDE964
.LASFDE964:
	.4byte	.Lframe0
	.4byte	.LFB813
	.4byte	.LFE813-.LFB813
	.byte	0x4
	.4byte	.LCFI2065-.LFB813
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0x9
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x5
	.byte	0x82
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI2066-.LCFI2065
	.byte	0xe
	.uleb128 0x3c
	.align	4
.LEFDE964:
.LSFDE966:
	.4byte	.LEFDE966-.LASFDE966
.LASFDE966:
	.4byte	.Lframe0
	.4byte	.LFB812
	.4byte	.LFE812-.LFB812
	.byte	0x4
	.4byte	.LCFI2075-.LFB812
	.byte	0x94
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI2076-.LCFI2075
	.byte	0xe
	.uleb128 0x38
	.align	4
.LEFDE966:
.LSFDE968:
	.4byte	.LEFDE968-.LASFDE968
.LASFDE968:
	.4byte	.Lframe0
	.4byte	.LFB21
	.4byte	.LFE21-.LFB21
	.byte	0x4
	.4byte	.LCFI2077-.LFB21
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2088-.LCFI2077
	.byte	0xe
	.uleb128 0xe4
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.align	4
.LEFDE968:
.LSFDE970:
	.4byte	.LEFDE970-.LASFDE970
.LASFDE970:
	.4byte	.Lframe0
	.4byte	.LFB23
	.4byte	.LFE23-.LFB23
	.byte	0x4
	.4byte	.LCFI2092-.LFB23
	.byte	0xe
	.uleb128 0xb4
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE970:
.LSFDE972:
	.4byte	.LEFDE972-.LASFDE972
.LASFDE972:
	.4byte	.Lframe0
	.4byte	.LFB29
	.4byte	.LFE29-.LFB29
	.byte	0x4
	.4byte	.LCFI2094-.LFB29
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE972:
.LSFDE974:
	.4byte	.LEFDE974-.LASFDE974
.LASFDE974:
	.4byte	.Lframe0
	.4byte	.LFB24
	.4byte	.LFE24-.LFB24
	.byte	0x4
	.4byte	.LCFI2103-.LFB24
	.byte	0xe
	.uleb128 0xc4
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x8
	.align	4
.LEFDE974:
.LSFDE976:
	.4byte	.LEFDE976-.LASFDE976
.LASFDE976:
	.4byte	.Lframe0
	.4byte	.LFB27
	.4byte	.LFE27-.LFB27
	.byte	0x4
	.4byte	.LCFI2105-.LFB27
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE976:
.LSFDE978:
	.4byte	.LEFDE978-.LASFDE978
.LASFDE978:
	.4byte	.Lframe0
	.4byte	.LFB25
	.4byte	.LFE25-.LFB25
	.byte	0x4
	.4byte	.LCFI2109-.LFB25
	.byte	0xe
	.uleb128 0xa8
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE978:
.LSFDE980:
	.4byte	.LEFDE980-.LASFDE980
.LASFDE980:
	.4byte	.Lframe0
	.4byte	.LFB28
	.4byte	.LFE28-.LFB28
	.byte	0x4
	.4byte	.LCFI2111-.LFB28
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE980:
.LSFDE982:
	.4byte	.LEFDE982-.LASFDE982
.LASFDE982:
	.4byte	.Lframe0
	.4byte	.LFB22
	.4byte	.LFE22-.LFB22
	.byte	0x4
	.4byte	.LCFI2115-.LFB22
	.byte	0xe
	.uleb128 0x38
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.align	4
.LEFDE982:
.LSFDE984:
	.4byte	.LEFDE984-.LASFDE984
.LASFDE984:
	.4byte	.Lframe0
	.4byte	.LFB26
	.4byte	.LFE26-.LFB26
	.byte	0x4
	.4byte	.LCFI2126-.LFB26
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2127-.LCFI2126
	.byte	0xe
	.uleb128 0xf8
	.align	4
.LEFDE984:
.LSFDE986:
	.4byte	.LEFDE986-.LASFDE986
.LASFDE986:
	.4byte	.Lframe0
	.4byte	.LFB655
	.4byte	.LFE655-.LFB655
	.byte	0x4
	.4byte	.LCFI2131-.LFB655
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE986:
.LSFDE988:
	.4byte	.LEFDE988-.LASFDE988
.LASFDE988:
	.4byte	.Lframe0
	.4byte	.LFB609
	.4byte	.LFE609-.LFB609
	.byte	0x4
	.4byte	.LCFI2134-.LFB609
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE988:
.LSFDE990:
	.4byte	.LEFDE990-.LASFDE990
.LASFDE990:
	.4byte	.Lframe0
	.4byte	.LFB649
	.4byte	.LFE649-.LFB649
	.byte	0x4
	.4byte	.LCFI2138-.LFB649
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE990:
.LSFDE992:
	.4byte	.LEFDE992-.LASFDE992
.LASFDE992:
	.4byte	.Lframe0
	.4byte	.LFB611
	.4byte	.LFE611-.LFB611
	.byte	0x4
	.4byte	.LCFI2139-.LFB611
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2141-.LCFI2139
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE992:
.LSFDE994:
	.4byte	.LEFDE994-.LASFDE994
.LASFDE994:
	.4byte	.Lframe0
	.4byte	.LFB651
	.4byte	.LFE651-.LFB651
	.byte	0x4
	.4byte	.LCFI2145-.LFB651
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE994:
.LSFDE996:
	.4byte	.LEFDE996-.LASFDE996
.LASFDE996:
	.4byte	.Lframe0
	.4byte	.LFB610
	.4byte	.LFE610-.LFB610
	.byte	0x4
	.4byte	.LCFI2148-.LFB610
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE996:
.LSFDE998:
	.4byte	.LEFDE998-.LASFDE998
.LASFDE998:
	.4byte	.Lframe0
	.4byte	.LFB958
	.4byte	.LFE958-.LFB958
	.byte	0x4
	.4byte	.LCFI2155-.LFB958
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI2156-.LCFI2155
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE998:
.LSFDE1000:
	.4byte	.LEFDE1000-.LASFDE1000
.LASFDE1000:
	.4byte	.Lframe0
	.4byte	.LFB961
	.4byte	.LFE961-.LFB961
	.byte	0x4
	.4byte	.LCFI2163-.LFB961
	.byte	0xe
	.uleb128 0x18
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.align	4
.LEFDE1000:
.LSFDE1002:
	.4byte	.LEFDE1002-.LASFDE1002
.LASFDE1002:
	.4byte	.Lframe0
	.4byte	.LFB962
	.4byte	.LFE962-.LFB962
	.byte	0x4
	.4byte	.LCFI2168-.LFB962
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI2169-.LCFI2168
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1002:
.LSFDE1004:
	.4byte	.LEFDE1004-.LASFDE1004
.LASFDE1004:
	.4byte	.Lframe0
	.4byte	.LFB950
	.4byte	.LFE950-.LFB950
	.byte	0x4
	.4byte	.LCFI2174-.LFB950
	.byte	0x8e
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI2175-.LCFI2174
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1004:
.LSFDE1006:
	.4byte	.LEFDE1006-.LASFDE1006
.LASFDE1006:
	.4byte	.Lframe0
	.4byte	.LFB949
	.4byte	.LFE949-.LFB949
	.byte	0x4
	.4byte	.LCFI2180-.LFB949
	.byte	0x8e
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI2181-.LCFI2180
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1006:
.LSFDE1008:
	.4byte	.LEFDE1008-.LASFDE1008
.LASFDE1008:
	.4byte	.Lframe0
	.4byte	.LFB946
	.4byte	.LFE946-.LFB946
	.byte	0x4
	.4byte	.LCFI2182-.LFB946
	.byte	0x92
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2189-.LCFI2182
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2190-.LCFI2189
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE1008:
.LSFDE1010:
	.4byte	.LEFDE1010-.LASFDE1010
.LASFDE1010:
	.4byte	.Lframe0
	.4byte	.LFB944
	.4byte	.LFE944-.LFB944
	.byte	0x4
	.4byte	.LCFI2193-.LFB944
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2194-.LCFI2193
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1010:
.LSFDE1012:
	.4byte	.LEFDE1012-.LASFDE1012
.LASFDE1012:
	.4byte	.Lframe0
	.4byte	.LFB965
	.4byte	.LFE965-.LFB965
	.byte	0x4
	.4byte	.LCFI2205-.LFB965
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2206-.LCFI2205
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE1012:
.LSFDE1014:
	.4byte	.LEFDE1014-.LASFDE1014
.LASFDE1014:
	.4byte	.Lframe0
	.4byte	.LFB650
	.4byte	.LFE650-.LFB650
	.byte	0x4
	.4byte	.LCFI2210-.LFB650
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1014:
.LSFDE1016:
	.4byte	.LEFDE1016-.LASFDE1016
.LASFDE1016:
	.4byte	.Lframe0
	.4byte	.LFB1425
	.4byte	.LFE1425-.LFB1425
	.byte	0x4
	.4byte	.LCFI2216-.LFB1425
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2217-.LCFI2216
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1016:
.LSFDE1018:
	.4byte	.LEFDE1018-.LASFDE1018
.LASFDE1018:
	.4byte	.Lframe0
	.4byte	.LFB1427
	.4byte	.LFE1427-.LFB1427
	.byte	0x4
	.4byte	.LCFI2218-.LFB1427
	.byte	0x8e
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2223-.LCFI2218
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2224-.LCFI2223
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1018:
.LSFDE1020:
	.4byte	.LEFDE1020-.LASFDE1020
.LASFDE1020:
	.4byte	.Lframe0
	.4byte	.LFB725
	.4byte	.LFE725-.LFB725
	.byte	0x4
	.4byte	.LCFI2225-.LFB725
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2229-.LCFI2225
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2230-.LCFI2229
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1020:
.LSFDE1022:
	.4byte	.LEFDE1022-.LASFDE1022
.LASFDE1022:
	.4byte	.Lframe0
	.4byte	.LFB921
	.4byte	.LFE921-.LFB921
	.byte	0x4
	.4byte	.LCFI2231-.LFB921
	.byte	0x96
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2232-.LCFI2231
	.byte	0x8e
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2233-.LCFI2232
	.byte	0x9a
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2239-.LCFI2233
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2240-.LCFI2239
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE1022:
.LSFDE1024:
	.4byte	.LEFDE1024-.LASFDE1024
.LASFDE1024:
	.4byte	.Lframe0
	.4byte	.LFB726
	.4byte	.LFE726-.LFB726
	.byte	0x4
	.4byte	.LCFI2244-.LFB726
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2245-.LCFI2244
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1024:
.LSFDE1026:
	.4byte	.LEFDE1026-.LASFDE1026
.LASFDE1026:
	.4byte	.Lframe0
	.4byte	.LFB1380
	.4byte	.LFE1380-.LFB1380
	.byte	0x4
	.4byte	.LCFI2254-.LFB1380
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2255-.LCFI2254
	.byte	0xe
	.uleb128 0x48
	.align	4
.LEFDE1026:
.LSFDE1028:
	.4byte	.LEFDE1028-.LASFDE1028
.LASFDE1028:
	.4byte	.Lframe0
	.4byte	.LFB1066
	.4byte	.LFE1066-.LFB1066
	.byte	0x4
	.4byte	.LCFI2256-.LFB1066
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2260-.LCFI2256
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2261-.LCFI2260
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1028:
.LSFDE1030:
	.4byte	.LEFDE1030-.LASFDE1030
.LASFDE1030:
	.4byte	.Lframe0
	.4byte	.LFB1049
	.4byte	.LFE1049-.LFB1049
	.byte	0x4
	.4byte	.LCFI2262-.LFB1049
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2263-.LCFI2262
	.byte	0x94
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2268-.LCFI2263
	.byte	0xe
	.uleb128 0x18
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.align	4
.LEFDE1030:
.LSFDE1032:
	.4byte	.LEFDE1032-.LASFDE1032
.LASFDE1032:
	.4byte	.Lframe0
	.4byte	.LFB886
	.4byte	.LFE886-.LFB886
	.byte	0x4
	.4byte	.LCFI2278-.LFB886
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x8
	.byte	0x82
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI2279-.LCFI2278
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE1032:
.LSFDE1034:
	.4byte	.LEFDE1034-.LASFDE1034
.LASFDE1034:
	.4byte	.Lframe0
	.4byte	.LFB1381
	.4byte	.LFE1381-.LFB1381
	.byte	0x4
	.4byte	.LCFI2283-.LFB1381
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2284-.LCFI2283
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1034:
.LSFDE1036:
	.4byte	.LEFDE1036-.LASFDE1036
.LASFDE1036:
	.4byte	.Lframe0
	.4byte	.LFB1382
	.4byte	.LFE1382-.LFB1382
	.byte	0x4
	.4byte	.LCFI2285-.LFB1382
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2287-.LCFI2285
	.byte	0x98
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2292-.LCFI2287
	.byte	0x92
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2293-.LCFI2292
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1036:
.LSFDE1038:
	.4byte	.LEFDE1038-.LASFDE1038
.LASFDE1038:
	.4byte	.Lframe0
	.4byte	.LFB731
	.4byte	.LFE731-.LFB731
	.byte	0x4
	.4byte	.LCFI2294-.LFB731
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2297-.LCFI2294
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE1038:
.LSFDE1040:
	.4byte	.LEFDE1040-.LASFDE1040
.LASFDE1040:
	.4byte	.Lframe0
	.4byte	.LFB1141
	.4byte	.LFE1141-.LFB1141
	.byte	0x4
	.4byte	.LCFI2308-.LFB1141
	.byte	0x94
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2309-.LCFI2308
	.byte	0xe
	.uleb128 0x38
	.align	4
.LEFDE1040:
.LSFDE1042:
	.4byte	.LEFDE1042-.LASFDE1042
.LASFDE1042:
	.4byte	.Lframe0
	.4byte	.LFB1156
	.4byte	.LFE1156-.LFB1156
	.byte	0x4
	.4byte	.LCFI2321-.LFB1156
	.byte	0xe
	.uleb128 0x98
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0xa
	.align	4
.LEFDE1042:
.LSFDE1044:
	.4byte	.LEFDE1044-.LASFDE1044
.LASFDE1044:
	.4byte	.Lframe0
	.4byte	.LFB1426
	.4byte	.LFE1426-.LFB1426
	.byte	0x4
	.4byte	.LCFI2324-.LFB1426
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE1044:
.LSFDE1046:
	.4byte	.LEFDE1046-.LASFDE1046
.LASFDE1046:
	.4byte	.Lframe0
	.4byte	.LFB1152
	.4byte	.LFE1152-.LFB1152
	.byte	0x4
	.4byte	.LCFI2336-.LFB1152
	.byte	0xe
	.uleb128 0x140
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1046:
.LSFDE1048:
	.4byte	.LEFDE1048-.LASFDE1048
.LASFDE1048:
	.4byte	.Lframe0
	.4byte	.LFB1155
	.4byte	.LFE1155-.LFB1155
	.byte	0x4
	.4byte	.LCFI2348-.LFB1155
	.byte	0xe
	.uleb128 0x48
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1048:
.LSFDE1050:
	.4byte	.LEFDE1050-.LASFDE1050
.LASFDE1050:
	.4byte	.Lframe0
	.4byte	.LFB688
	.4byte	.LFE688-.LFB688
	.byte	0x4
	.4byte	.LCFI2352-.LFB688
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2353-.LCFI2352
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1050:
.LSFDE1052:
	.4byte	.LEFDE1052-.LASFDE1052
.LASFDE1052:
	.4byte	.Lframe0
	.4byte	.LFB540
	.4byte	.LFE540-.LFB540
	.byte	0x4
	.4byte	.LCFI2358-.LFB540
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2362-.LCFI2358
	.byte	0xe
	.uleb128 0x24
	.byte	0x98
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1052:
.LSFDE1054:
	.4byte	.LEFDE1054-.LASFDE1054
.LASFDE1054:
	.4byte	.Lframe0
	.4byte	.LFB1383
	.4byte	.LFE1383-.LFB1383
	.byte	0x4
	.4byte	.LCFI2364-.LFB1383
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2365-.LCFI2364
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1054:
.LSFDE1056:
	.4byte	.LEFDE1056-.LASFDE1056
.LASFDE1056:
	.4byte	.Lframe0
	.4byte	.LFB641
	.4byte	.LFE641-.LFB641
	.byte	0x4
	.4byte	.LCFI2366-.LFB641
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2367-.LCFI2366
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2371-.LCFI2367
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.align	4
.LEFDE1056:
.LSFDE1058:
	.4byte	.LEFDE1058-.LASFDE1058
.LASFDE1058:
	.4byte	.Lframe0
	.4byte	.LFB975
	.4byte	.LFE975-.LFB975
	.byte	0x4
	.4byte	.LCFI2374-.LFB975
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE1058:
.LSFDE1060:
	.4byte	.LEFDE1060-.LASFDE1060
.LASFDE1060:
	.4byte	.Lframe0
	.4byte	.LFB974
	.4byte	.LFE974-.LFB974
	.byte	0x4
	.4byte	.LCFI2379-.LFB974
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2380-.LCFI2379
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1060:
.LSFDE1062:
	.4byte	.LEFDE1062-.LASFDE1062
.LASFDE1062:
	.4byte	.Lframe0
	.4byte	.LFB971
	.4byte	.LFE971-.LFB971
	.byte	0x4
	.4byte	.LCFI2383-.LFB971
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE1062:
.LSFDE1064:
	.4byte	.LEFDE1064-.LASFDE1064
.LASFDE1064:
	.4byte	.Lframe0
	.4byte	.LFB970
	.4byte	.LFE970-.LFB970
	.byte	0x4
	.4byte	.LCFI2386-.LFB970
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2387-.LCFI2386
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1064:
.LSFDE1066:
	.4byte	.LEFDE1066-.LASFDE1066
.LASFDE1066:
	.4byte	.Lframe0
	.4byte	.LFB968
	.4byte	.LFE968-.LFB968
	.byte	0x4
	.4byte	.LCFI2391-.LFB968
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE1066:
.LSFDE1068:
	.4byte	.LEFDE1068-.LASFDE1068
.LASFDE1068:
	.4byte	.Lframe0
	.4byte	.LFB969
	.4byte	.LFE969-.LFB969
	.byte	0x4
	.4byte	.LCFI2394-.LFB969
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE1068:
.LSFDE1070:
	.4byte	.LEFDE1070-.LASFDE1070
.LASFDE1070:
	.4byte	.Lframe0
	.4byte	.LFB967
	.4byte	.LFE967-.LFB967
	.byte	0x4
	.4byte	.LCFI2397-.LFB967
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE1070:
.LSFDE1072:
	.4byte	.LEFDE1072-.LASFDE1072
.LASFDE1072:
	.4byte	.Lframe0
	.4byte	.LFB966
	.4byte	.LFE966-.LFB966
	.byte	0x4
	.4byte	.LCFI2403-.LFB966
	.byte	0xe
	.uleb128 0x1c
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1072:
.LSFDE1074:
	.4byte	.LEFDE1074-.LASFDE1074
.LASFDE1074:
	.4byte	.Lframe0
	.4byte	.LFB973
	.4byte	.LFE973-.LFB973
	.byte	0x4
	.4byte	.LCFI2407-.LFB973
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE1074:
.LSFDE1076:
	.4byte	.LEFDE1076-.LASFDE1076
.LASFDE1076:
	.4byte	.Lframe0
	.4byte	.LFB972
	.4byte	.LFE972-.LFB972
	.byte	0x4
	.4byte	.LCFI2411-.LFB972
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2412-.LCFI2411
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1076:
.LSFDE1078:
	.4byte	.LEFDE1078-.LASFDE1078
.LASFDE1078:
	.4byte	.Lframe0
	.4byte	.LFB847
	.4byte	.LFE847-.LFB847
	.byte	0x4
	.4byte	.LCFI2418-.LFB847
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2419-.LCFI2418
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1078:
.LSFDE1080:
	.4byte	.LEFDE1080-.LASFDE1080
.LASFDE1080:
	.4byte	.Lframe0
	.4byte	.LFB554
	.4byte	.LFE554-.LFB554
	.byte	0x4
	.4byte	.LCFI2420-.LFB554
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2421-.LCFI2420
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2423-.LCFI2421
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1080:
.LSFDE1082:
	.4byte	.LEFDE1082-.LASFDE1082
.LASFDE1082:
	.4byte	.Lframe0
	.4byte	.LFB548
	.4byte	.LFE548-.LFB548
	.byte	0x4
	.4byte	.LCFI2426-.LFB548
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2427-.LCFI2426
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1082:
.LSFDE1084:
	.4byte	.LEFDE1084-.LASFDE1084
.LASFDE1084:
	.4byte	.Lframe0
	.4byte	.LFB549
	.4byte	.LFE549-.LFB549
	.byte	0x4
	.4byte	.LCFI2433-.LFB549
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2435-.LCFI2433
	.byte	0xe
	.uleb128 0x1c
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1084:
.LSFDE1086:
	.4byte	.LEFDE1086-.LASFDE1086
.LASFDE1086:
	.4byte	.Lframe0
	.4byte	.LFB550
	.4byte	.LFE550-.LFB550
	.byte	0x4
	.4byte	.LCFI2437-.LFB550
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1086:
.LSFDE1088:
	.4byte	.LEFDE1088-.LASFDE1088
.LASFDE1088:
	.4byte	.Lframe0
	.4byte	.LFB1384
	.4byte	.LFE1384-.LFB1384
	.byte	0x4
	.4byte	.LCFI2440-.LFB1384
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2441-.LCFI2440
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1088:
.LSFDE1090:
	.4byte	.LEFDE1090-.LASFDE1090
.LASFDE1090:
	.4byte	.Lframe0
	.4byte	.LFB553
	.4byte	.LFE553-.LFB553
	.byte	0x4
	.4byte	.LCFI2446-.LFB553
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1090:
.LSFDE1092:
	.4byte	.LEFDE1092-.LASFDE1092
.LASFDE1092:
	.4byte	.Lframe0
	.4byte	.LFB913
	.4byte	.LFE913-.LFB913
	.byte	0x4
	.4byte	.LCFI2451-.LFB913
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2452-.LCFI2451
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1092:
.LSFDE1094:
	.4byte	.LEFDE1094-.LASFDE1094
.LASFDE1094:
	.4byte	.Lframe0
	.4byte	.LFB733
	.4byte	.LFE733-.LFB733
	.byte	0x4
	.4byte	.LCFI2461-.LFB733
	.byte	0xe
	.uleb128 0x24
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1094:
.LSFDE1096:
	.4byte	.LEFDE1096-.LASFDE1096
.LASFDE1096:
	.4byte	.Lframe0
	.4byte	.LFB1385
	.4byte	.LFE1385-.LFB1385
	.byte	0x4
	.4byte	.LCFI2467-.LFB1385
	.byte	0x94
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2468-.LCFI2467
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1096:
.LSFDE1098:
	.4byte	.LEFDE1098-.LASFDE1098
.LASFDE1098:
	.4byte	.Lframe0
	.4byte	.LFB816
	.4byte	.LFE816-.LFB816
	.byte	0x4
	.4byte	.LCFI2469-.LFB816
	.byte	0x90
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2476-.LCFI2469
	.byte	0x94
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2477-.LCFI2476
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE1098:
.LSFDE1100:
	.4byte	.LEFDE1100-.LASFDE1100
.LASFDE1100:
	.4byte	.Lframe0
	.4byte	.LFB552
	.4byte	.LFE552-.LFB552
	.byte	0x4
	.4byte	.LCFI2479-.LFB552
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1100:
.LSFDE1102:
	.4byte	.LEFDE1102-.LASFDE1102
.LASFDE1102:
	.4byte	.Lframe0
	.4byte	.LFB1387
	.4byte	.LFE1387-.LFB1387
	.byte	0x4
	.4byte	.LCFI2485-.LFB1387
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2486-.LCFI2485
	.byte	0xe
	.uleb128 0x3c
	.align	4
.LEFDE1102:
.LSFDE1104:
	.4byte	.LEFDE1104-.LASFDE1104
.LASFDE1104:
	.4byte	.Lframe0
	.4byte	.LFB777
	.4byte	.LFE777-.LFB777
	.byte	0x4
	.4byte	.LCFI2487-.LFB777
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2493-.LCFI2487
	.byte	0xe
	.uleb128 0x28
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.align	4
.LEFDE1104:
.LSFDE1106:
	.4byte	.LEFDE1106-.LASFDE1106
.LASFDE1106:
	.4byte	.Lframe0
	.4byte	.LFB1069
	.4byte	.LFE1069-.LFB1069
	.byte	0x4
	.4byte	.LCFI2495-.LFB1069
	.byte	0x94
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2501-.LCFI2495
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2502-.LCFI2501
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE1106:
.LSFDE1108:
	.4byte	.LEFDE1108-.LASFDE1108
.LASFDE1108:
	.4byte	.Lframe0
	.4byte	.LFB1159
	.4byte	.LFE1159-.LFB1159
	.byte	0x4
	.4byte	.LCFI2508-.LFB1159
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2509-.LCFI2508
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1108:
.LSFDE1110:
	.4byte	.LEFDE1110-.LASFDE1110
.LASFDE1110:
	.4byte	.Lframe0
	.4byte	.LFB1006
	.4byte	.LFE1006-.LFB1006
	.byte	0x4
	.4byte	.LCFI2510-.LFB1006
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2515-.LCFI2510
	.byte	0xe
	.uleb128 0x20
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1110:
.LSFDE1112:
	.4byte	.LEFDE1112-.LASFDE1112
.LASFDE1112:
	.4byte	.Lframe0
	.4byte	.LFB551
	.4byte	.LFE551-.LFB551
	.byte	0x4
	.4byte	.LCFI2517-.LFB551
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1112:
.LSFDE1114:
	.4byte	.LEFDE1114-.LASFDE1114
.LASFDE1114:
	.4byte	.Lframe0
	.4byte	.LFB1389
	.4byte	.LFE1389-.LFB1389
	.byte	0x4
	.4byte	.LCFI2518-.LFB1389
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2521-.LCFI2518
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2522-.LCFI2521
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1114:
.LSFDE1116:
	.4byte	.LEFDE1116-.LASFDE1116
.LASFDE1116:
	.4byte	.Lframe0
	.4byte	.LFB1165
	.4byte	.LFE1165-.LFB1165
	.byte	0x4
	.4byte	.LCFI2524-.LFB1165
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2534-.LCFI2524
	.byte	0xe
	.uleb128 0x40
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1116:
.LSFDE1118:
	.4byte	.LEFDE1118-.LASFDE1118
.LASFDE1118:
	.4byte	.Lframe0
	.4byte	.LFB822
	.4byte	.LFE822-.LFB822
	.byte	0x4
	.4byte	.LCFI2536-.LFB822
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2537-.LCFI2536
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE1118:
.LSFDE1120:
	.4byte	.LEFDE1120-.LASFDE1120
.LASFDE1120:
	.4byte	.Lframe0
	.4byte	.LFB863
	.4byte	.LFE863-.LFB863
	.byte	0x4
	.4byte	.LCFI2538-.LFB863
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2541-.LCFI2538
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2542-.LCFI2541
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1120:
.LSFDE1122:
	.4byte	.LEFDE1122-.LASFDE1122
.LASFDE1122:
	.4byte	.Lframe0
	.4byte	.LFB878
	.4byte	.LFE878-.LFB878
	.byte	0x4
	.4byte	.LCFI2547-.LFB878
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2548-.LCFI2547
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1122:
.LSFDE1124:
	.4byte	.LEFDE1124-.LASFDE1124
.LASFDE1124:
	.4byte	.Lframe0
	.4byte	.LFB981
	.4byte	.LFE981-.LFB981
	.byte	0x4
	.4byte	.LCFI2555-.LFB981
	.byte	0x96
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2556-.LCFI2555
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1124:
.LSFDE1126:
	.4byte	.LEFDE1126-.LASFDE1126
.LASFDE1126:
	.4byte	.Lframe0
	.4byte	.LFB991
	.4byte	.LFE991-.LFB991
	.byte	0x4
	.4byte	.LCFI2565-.LFB991
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2566-.LCFI2565
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE1126:
.LSFDE1128:
	.4byte	.LEFDE1128-.LASFDE1128
.LASFDE1128:
	.4byte	.Lframe0
	.4byte	.LFB783
	.4byte	.LFE783-.LFB783
	.byte	0x4
	.4byte	.LCFI2567-.LFB783
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2574-.LCFI2567
	.byte	0xe
	.uleb128 0x1c
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.align	4
.LEFDE1128:
.LSFDE1130:
	.4byte	.LEFDE1130-.LASFDE1130
.LASFDE1130:
	.4byte	.Lframe0
	.4byte	.LFB786
	.4byte	.LFE786-.LFB786
	.byte	0x4
	.4byte	.LCFI2579-.LFB786
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2580-.LCFI2579
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1130:
.LSFDE1132:
	.4byte	.LEFDE1132-.LASFDE1132
.LASFDE1132:
	.4byte	.Lframe0
	.4byte	.LFB1390
	.4byte	.LFE1390-.LFB1390
	.byte	0x4
	.4byte	.LCFI2581-.LFB1390
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI2592-.LCFI2581
	.byte	0xe
	.uleb128 0x40
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1132:
.LSFDE1134:
	.4byte	.LEFDE1134-.LASFDE1134
.LASFDE1134:
	.4byte	.Lframe0
	.4byte	.LFB1038
	.4byte	.LFE1038-.LFB1038
	.byte	0x4
	.4byte	.LCFI2598-.LFB1038
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2599-.LCFI2598
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1134:
.LSFDE1136:
	.4byte	.LEFDE1136-.LASFDE1136
.LASFDE1136:
	.4byte	.Lframe0
	.4byte	.LFB940
	.4byte	.LFE940-.LFB940
	.byte	0x4
	.4byte	.LCFI2600-.LFB940
	.byte	0x9a
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2601-.LCFI2600
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2610-.LCFI2601
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI2611-.LCFI2610
	.byte	0xe
	.uleb128 0x40
	.align	4
.LEFDE1136:
.LSFDE1138:
	.4byte	.LEFDE1138-.LASFDE1138
.LASFDE1138:
	.4byte	.Lframe0
	.4byte	.LFB894
	.4byte	.LFE894-.LFB894
	.byte	0x4
	.4byte	.LCFI2612-.LFB894
	.byte	0x94
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2613-.LCFI2612
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI2620-.LCFI2613
	.byte	0x90
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2621-.LCFI2620
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE1138:
.LSFDE1140:
	.4byte	.LEFDE1140-.LASFDE1140
.LASFDE1140:
	.4byte	.Lframe0
	.4byte	.LFB1391
	.4byte	.LFE1391-.LFB1391
	.byte	0x4
	.4byte	.LCFI2628-.LFB1391
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2629-.LCFI2628
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1140:
.LSFDE1142:
	.4byte	.LEFDE1142-.LASFDE1142
.LASFDE1142:
	.4byte	.Lframe0
	.4byte	.LFB1392
	.4byte	.LFE1392-.LFB1392
	.byte	0x4
	.4byte	.LCFI2631-.LFB1392
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2637-.LCFI2631
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI2638-.LCFI2637
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1142:
.LSFDE1144:
	.4byte	.LEFDE1144-.LASFDE1144
.LASFDE1144:
	.4byte	.Lframe0
	.4byte	.LFB990
	.4byte	.LFE990-.LFB990
	.byte	0x4
	.4byte	.LCFI2639-.LFB990
	.byte	0x92
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2649-.LCFI2639
	.byte	0x9a
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2650-.LCFI2649
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE1144:
.LSFDE1146:
	.4byte	.LEFDE1146-.LASFDE1146
.LASFDE1146:
	.4byte	.Lframe0
	.4byte	.LFB1393
	.4byte	.LFE1393-.LFB1393
	.byte	0x4
	.4byte	.LCFI2658-.LFB1393
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2659-.LCFI2658
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE1146:
.LSFDE1148:
	.4byte	.LEFDE1148-.LASFDE1148
.LASFDE1148:
	.4byte	.Lframe0
	.4byte	.LFB1394
	.4byte	.LFE1394-.LFB1394
	.byte	0x4
	.4byte	.LCFI2667-.LFB1394
	.byte	0xe
	.uleb128 0x1c
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x5
	.align	4
.LEFDE1148:
.LSFDE1150:
	.4byte	.LEFDE1150-.LASFDE1150
.LASFDE1150:
	.4byte	.Lframe0
	.4byte	.LFB821
	.4byte	.LFE821-.LFB821
	.byte	0x4
	.4byte	.LCFI2679-.LFB821
	.byte	0xe
	.uleb128 0x54
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1150:
.LSFDE1152:
	.4byte	.LEFDE1152-.LASFDE1152
.LASFDE1152:
	.4byte	.Lframe0
	.4byte	.LFB558
	.4byte	.LFE558-.LFB558
	.byte	0x4
	.4byte	.LCFI2683-.LFB558
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2684-.LCFI2683
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1152:
.LSFDE1154:
	.4byte	.LEFDE1154-.LASFDE1154
.LASFDE1154:
	.4byte	.Lframe0
	.4byte	.LFB903
	.4byte	.LFE903-.LFB903
	.byte	0x4
	.4byte	.LCFI2690-.LFB903
	.byte	0x94
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2691-.LCFI2690
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1154:
.LSFDE1156:
	.4byte	.LEFDE1156-.LASFDE1156
.LASFDE1156:
	.4byte	.Lframe0
	.4byte	.LFB904
	.4byte	.LFE904-.LFB904
	.byte	0x4
	.4byte	.LCFI2697-.LFB904
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2698-.LCFI2697
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1156:
.LSFDE1158:
	.4byte	.LEFDE1158-.LASFDE1158
.LASFDE1158:
	.4byte	.Lframe0
	.4byte	.LFB1395
	.4byte	.LFE1395-.LFB1395
	.byte	0x4
	.4byte	.LCFI2708-.LFB1395
	.byte	0xe
	.uleb128 0x24
	.byte	0x96
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x9
	.align	4
.LEFDE1158:
.LSFDE1160:
	.4byte	.LEFDE1160-.LASFDE1160
.LASFDE1160:
	.4byte	.Lframe0
	.4byte	.LFB1396
	.4byte	.LFE1396-.LFB1396
	.byte	0x4
	.4byte	.LCFI2711-.LFB1396
	.byte	0xe
	.uleb128 0x10
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1160:
.LSFDE1162:
	.4byte	.LEFDE1162-.LASFDE1162
.LASFDE1162:
	.4byte	.Lframe0
	.4byte	.LFB899
	.4byte	.LFE899-.LFB899
	.byte	0x4
	.4byte	.LCFI2718-.LFB899
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2719-.LCFI2718
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1162:
.LSFDE1164:
	.4byte	.LEFDE1164-.LASFDE1164
.LASFDE1164:
	.4byte	.Lframe0
	.4byte	.LFB804
	.4byte	.LFE804-.LFB804
	.byte	0x4
	.4byte	.LCFI2727-.LFB804
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2728-.LCFI2727
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE1164:
.LSFDE1166:
	.4byte	.LEFDE1166-.LASFDE1166
.LASFDE1166:
	.4byte	.Lframe0
	.4byte	.LFB900
	.4byte	.LFE900-.LFB900
	.byte	0x4
	.4byte	.LCFI2734-.LFB900
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2735-.LCFI2734
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1166:
.LSFDE1168:
	.4byte	.LEFDE1168-.LASFDE1168
.LASFDE1168:
	.4byte	.Lframe0
	.4byte	.LFB1397
	.4byte	.LFE1397-.LFB1397
	.byte	0x4
	.4byte	.LCFI2741-.LFB1397
	.byte	0x90
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2742-.LCFI2741
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1168:
.LSFDE1170:
	.4byte	.LEFDE1170-.LASFDE1170
.LASFDE1170:
	.4byte	.Lframe0
	.4byte	.LFB1147
	.4byte	.LFE1147-.LFB1147
	.byte	0x4
	.4byte	.LCFI2743-.LFB1147
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2753-.LCFI2743
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2754-.LCFI2753
	.byte	0xe
	.uleb128 0x9c
	.align	4
.LEFDE1170:
.LSFDE1172:
	.4byte	.LEFDE1172-.LASFDE1172
.LASFDE1172:
	.4byte	.Lframe0
	.4byte	.LFB1142
	.4byte	.LFE1142-.LFB1142
	.byte	0x4
	.4byte	.LCFI2755-.LFB1142
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2759-.LCFI2755
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.align	4
.LEFDE1172:
.LSFDE1174:
	.4byte	.LEFDE1174-.LASFDE1174
.LASFDE1174:
	.4byte	.Lframe0
	.4byte	.LFB1398
	.4byte	.LFE1398-.LFB1398
	.byte	0x4
	.4byte	.LCFI2760-.LFB1398
	.byte	0x90
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2769-.LCFI2760
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI2770-.LCFI2769
	.byte	0xe
	.uleb128 0x6c
	.align	4
.LEFDE1174:
.LSFDE1176:
	.4byte	.LEFDE1176-.LASFDE1176
.LASFDE1176:
	.4byte	.Lframe0
	.4byte	.LFB1399
	.4byte	.LFE1399-.LFB1399
	.byte	0x4
	.4byte	.LCFI2771-.LFB1399
	.byte	0x8e
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2773-.LCFI2771
	.byte	0x96
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI2774-.LCFI2773
	.byte	0x92
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2780-.LCFI2774
	.byte	0xe
	.uleb128 0x24
	.byte	0x94
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x7
	.align	4
.LEFDE1176:
.LSFDE1178:
	.4byte	.LEFDE1178-.LASFDE1178
.LASFDE1178:
	.4byte	.Lframe0
	.4byte	.LFB1110
	.4byte	.LFE1110-.LFB1110
	.byte	0x4
	.4byte	.LCFI2784-.LFB1110
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1178:
.LSFDE1180:
	.4byte	.LEFDE1180-.LASFDE1180
.LASFDE1180:
	.4byte	.Lframe0
	.4byte	.LFB643
	.4byte	.LFE643-.LFB643
	.byte	0x4
	.4byte	.LCFI2792-.LFB643
	.byte	0x96
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2793-.LCFI2792
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1180:
.LSFDE1182:
	.4byte	.LEFDE1182-.LASFDE1182
.LASFDE1182:
	.4byte	.Lframe0
	.4byte	.LFB1116
	.4byte	.LFE1116-.LFB1116
	.byte	0x4
	.4byte	.LCFI2794-.LFB1116
	.byte	0x8e
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2799-.LCFI2794
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2800-.LCFI2799
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1182:
.LSFDE1184:
	.4byte	.LEFDE1184-.LASFDE1184
.LASFDE1184:
	.4byte	.Lframe0
	.4byte	.LFB964
	.4byte	.LFE964-.LFB964
	.byte	0x4
	.4byte	.LCFI2812-.LFB964
	.byte	0xe
	.uleb128 0x48
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0xa
	.align	4
.LEFDE1184:
.LSFDE1186:
	.4byte	.LEFDE1186-.LASFDE1186
.LASFDE1186:
	.4byte	.Lframe0
	.4byte	.LFB1126
	.4byte	.LFE1126-.LFB1126
	.byte	0x4
	.4byte	.LCFI2816-.LFB1126
	.byte	0xe
	.uleb128 0xc
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE1186:
.LSFDE1188:
	.4byte	.LEFDE1188-.LASFDE1188
.LASFDE1188:
	.4byte	.Lframe0
	.4byte	.LFB167
	.4byte	.LFE167-.LFB167
	.byte	0x4
	.4byte	.LCFI2819-.LFB167
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2820-.LCFI2819
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1188:
.LSFDE1190:
	.4byte	.LEFDE1190-.LASFDE1190
.LASFDE1190:
	.4byte	.Lframe0
	.4byte	.LFB1184
	.4byte	.LFE1184-.LFB1184
	.byte	0x4
	.4byte	.LCFI2824-.LFB1184
	.byte	0xe
	.uleb128 0xc
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.align	4
.LEFDE1190:
.LSFDE1192:
	.4byte	.LEFDE1192-.LASFDE1192
.LASFDE1192:
	.4byte	.Lframe0
	.4byte	.LFB996
	.4byte	.LFE996-.LFB996
	.byte	0x4
	.4byte	.LCFI2829-.LFB996
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE1192:
.LSFDE1194:
	.4byte	.LEFDE1194-.LASFDE1194
.LASFDE1194:
	.4byte	.Lframe0
	.4byte	.LFB79
	.4byte	.LFE79-.LFB79
	.byte	0x4
	.4byte	.LCFI2832-.LFB79
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE1194:
.LSFDE1196:
	.4byte	.LEFDE1196-.LASFDE1196
.LASFDE1196:
	.4byte	.Lframe0
	.4byte	.LFB699
	.4byte	.LFE699-.LFB699
	.byte	0x4
	.4byte	.LCFI2841-.LFB699
	.byte	0xe
	.uleb128 0x20
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x7
	.align	4
.LEFDE1196:
.LSFDE1198:
	.4byte	.LEFDE1198-.LASFDE1198
.LASFDE1198:
	.4byte	.Lframe0
	.4byte	.LFB254
	.4byte	.LFE254-.LFB254
	.byte	0x4
	.4byte	.LCFI2852-.LFB254
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI2853-.LCFI2852
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE1198:
.LSFDE1200:
	.4byte	.LEFDE1200-.LASFDE1200
.LASFDE1200:
	.4byte	.Lframe0
	.4byte	.LFB251
	.4byte	.LFE251-.LFB251
	.byte	0x4
	.4byte	.LCFI2856-.LFB251
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2857-.LCFI2856
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1200:
.LSFDE1202:
	.4byte	.LEFDE1202-.LASFDE1202
.LASFDE1202:
	.4byte	.Lframe0
	.4byte	.LFB1073
	.4byte	.LFE1073-.LFB1073
	.byte	0x4
	.4byte	.LCFI2858-.LFB1073
	.byte	0x96
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2864-.LCFI2858
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2865-.LCFI2864
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1202:
.LSFDE1204:
	.4byte	.LEFDE1204-.LASFDE1204
.LASFDE1204:
	.4byte	.Lframe0
	.4byte	.LFB68
	.4byte	.LFE68-.LFB68
	.byte	0x4
	.4byte	.LCFI2868-.LFB68
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2869-.LCFI2868
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1204:
.LSFDE1206:
	.4byte	.LEFDE1206-.LASFDE1206
.LASFDE1206:
	.4byte	.Lframe0
	.4byte	.LFB54
	.4byte	.LFE54-.LFB54
	.byte	0x4
	.4byte	.LCFI2874-.LFB54
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE1206:
.LSFDE1208:
	.4byte	.LEFDE1208-.LASFDE1208
.LASFDE1208:
	.4byte	.Lframe0
	.4byte	.LFB201
	.4byte	.LFE201-.LFB201
	.byte	0x4
	.4byte	.LCFI2875-.LFB201
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2877-.LCFI2875
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1208:
.LSFDE1210:
	.4byte	.LEFDE1210-.LASFDE1210
.LASFDE1210:
	.4byte	.Lframe0
	.4byte	.LFB52
	.4byte	.LFE52-.LFB52
	.byte	0x4
	.4byte	.LCFI2880-.LFB52
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2881-.LCFI2880
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1210:
.LSFDE1212:
	.4byte	.LEFDE1212-.LASFDE1212
.LASFDE1212:
	.4byte	.Lframe0
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.byte	0x4
	.4byte	.LCFI2889-.LFB112
	.byte	0x98
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2890-.LCFI2889
	.byte	0xe
	.uleb128 0x120
	.align	4
.LEFDE1212:
.LSFDE1214:
	.4byte	.LEFDE1214-.LASFDE1214
.LASFDE1214:
	.4byte	.Lframe0
	.4byte	.LFB279
	.4byte	.LFE279-.LFB279
	.byte	0x4
	.4byte	.LCFI2895-.LFB279
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI2896-.LCFI2895
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1214:
.LSFDE1216:
	.4byte	.LEFDE1216-.LASFDE1216
.LASFDE1216:
	.4byte	.Lframe0
	.4byte	.LFB325
	.4byte	.LFE325-.LFB325
	.byte	0x4
	.4byte	.LCFI2900-.LFB325
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2901-.LCFI2900
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1216:
.LSFDE1218:
	.4byte	.LEFDE1218-.LASFDE1218
.LASFDE1218:
	.4byte	.Lframe0
	.4byte	.LFB326
	.4byte	.LFE326-.LFB326
	.byte	0x4
	.4byte	.LCFI2905-.LFB326
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI2906-.LCFI2905
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1218:
.LSFDE1220:
	.4byte	.LEFDE1220-.LASFDE1220
.LASFDE1220:
	.4byte	.Lframe0
	.4byte	.LFB327
	.4byte	.LFE327-.LFB327
	.byte	0x4
	.4byte	.LCFI2907-.LFB327
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI2913-.LCFI2907
	.byte	0x96
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2914-.LCFI2913
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1220:
.LSFDE1222:
	.4byte	.LEFDE1222-.LASFDE1222
.LASFDE1222:
	.4byte	.Lframe0
	.4byte	.LFB328
	.4byte	.LFE328-.LFB328
	.byte	0x4
	.4byte	.LCFI2915-.LFB328
	.byte	0x82
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI2924-.LCFI2915
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI2925-.LCFI2924
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE1222:
.LSFDE1224:
	.4byte	.LEFDE1224-.LASFDE1224
.LASFDE1224:
	.4byte	.Lframe0
	.4byte	.LFB1403
	.4byte	.LFE1403-.LFB1403
	.byte	0x4
	.4byte	.LCFI2927-.LFB1403
	.byte	0x9c
	.uleb128 0x3
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2928-.LCFI2927
	.byte	0x9e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2929-.LCFI2928
	.byte	0x92
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI2937-.LCFI2929
	.byte	0xe
	.uleb128 0x48
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.align	4
.LEFDE1224:
.LSFDE1226:
	.4byte	.LEFDE1226-.LASFDE1226
.LASFDE1226:
	.4byte	.Lframe0
	.4byte	.LFB507
	.4byte	.LFE507-.LFB507
	.byte	0x4
	.4byte	.LCFI2941-.LFB507
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2942-.LCFI2941
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1226:
.LSFDE1228:
	.4byte	.LEFDE1228-.LASFDE1228
.LASFDE1228:
	.4byte	.Lframe0
	.4byte	.LFB291
	.4byte	.LFE291-.LFB291
	.byte	0x4
	.4byte	.LCFI2954-.LFB291
	.byte	0xe
	.uleb128 0x40
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x8
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.align	4
.LEFDE1228:
.LSFDE1230:
	.4byte	.LEFDE1230-.LASFDE1230
.LASFDE1230:
	.4byte	.Lframe0
	.4byte	.LFB295
	.4byte	.LFE295-.LFB295
	.byte	0x4
	.4byte	.LCFI2965-.LFB295
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI2966-.LCFI2965
	.byte	0xe
	.uleb128 0x50
	.align	4
.LEFDE1230:
.LSFDE1232:
	.4byte	.LEFDE1232-.LASFDE1232
.LASFDE1232:
	.4byte	.Lframe0
	.4byte	.LFB334
	.4byte	.LFE334-.LFB334
	.byte	0x4
	.4byte	.LCFI2969-.LFB334
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2970-.LCFI2969
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1232:
.LSFDE1234:
	.4byte	.LEFDE1234-.LASFDE1234
.LASFDE1234:
	.4byte	.Lframe0
	.4byte	.LFB288
	.4byte	.LFE288-.LFB288
	.byte	0x4
	.4byte	.LCFI2973-.LFB288
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2974-.LCFI2973
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1234:
.LSFDE1236:
	.4byte	.LEFDE1236-.LASFDE1236
.LASFDE1236:
	.4byte	.Lframe0
	.4byte	.LFB319
	.4byte	.LFE319-.LFB319
	.byte	0x4
	.4byte	.LCFI2976-.LFB319
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1236:
.LSFDE1238:
	.4byte	.LEFDE1238-.LASFDE1238
.LASFDE1238:
	.4byte	.Lframe0
	.4byte	.LFB323
	.4byte	.LFE323-.LFB323
	.byte	0x4
	.4byte	.LCFI2979-.LFB323
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1238:
.LSFDE1240:
	.4byte	.LEFDE1240-.LASFDE1240
.LASFDE1240:
	.4byte	.Lframe0
	.4byte	.LFB389
	.4byte	.LFE389-.LFB389
	.byte	0x4
	.4byte	.LCFI2981-.LFB389
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1240:
.LSFDE1242:
	.4byte	.LEFDE1242-.LASFDE1242
.LASFDE1242:
	.4byte	.Lframe0
	.4byte	.LFB1405
	.4byte	.LFE1405-.LFB1405
	.byte	0x4
	.4byte	.LCFI2986-.LFB1405
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI2987-.LCFI2986
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1242:
.LSFDE1244:
	.4byte	.LEFDE1244-.LASFDE1244
.LASFDE1244:
	.4byte	.Lframe0
	.4byte	.LFB581
	.4byte	.LFE581-.LFB581
	.byte	0x4
	.4byte	.LCFI2991-.LFB581
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2992-.LCFI2991
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1244:
.LSFDE1246:
	.4byte	.LEFDE1246-.LASFDE1246
.LASFDE1246:
	.4byte	.Lframe0
	.4byte	.LFB408
	.4byte	.LFE408-.LFB408
	.byte	0x4
	.4byte	.LCFI2994-.LFB408
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI2995-.LCFI2994
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE1246:
.LSFDE1248:
	.4byte	.LEFDE1248-.LASFDE1248
.LASFDE1248:
	.4byte	.Lframe0
	.4byte	.LFB418
	.4byte	.LFE418-.LFB418
	.byte	0x4
	.4byte	.LCFI2997-.LFB418
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3000-.LCFI2997
	.byte	0xe
	.uleb128 0x10
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1248:
.LSFDE1250:
	.4byte	.LEFDE1250-.LASFDE1250
.LASFDE1250:
	.4byte	.Lframe0
	.4byte	.LFB429
	.4byte	.LFE429-.LFB429
	.byte	0x4
	.4byte	.LCFI3005-.LFB429
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3006-.LCFI3005
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1250:
.LSFDE1252:
	.4byte	.LEFDE1252-.LASFDE1252
.LASFDE1252:
	.4byte	.Lframe0
	.4byte	.LFB321
	.4byte	.LFE321-.LFB321
	.byte	0x4
	.4byte	.LCFI3011-.LFB321
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI3016-.LCFI3011
	.byte	0xe
	.uleb128 0x4c
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1252:
.LSFDE1254:
	.4byte	.LEFDE1254-.LASFDE1254
.LASFDE1254:
	.4byte	.Lframe0
	.4byte	.LFB1404
	.4byte	.LFE1404-.LFB1404
	.byte	0x4
	.4byte	.LCFI3023-.LFB1404
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI3024-.LCFI3023
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1254:
.LSFDE1256:
	.4byte	.LEFDE1256-.LASFDE1256
.LASFDE1256:
	.4byte	.Lframe0
	.4byte	.LFB484
	.4byte	.LFE484-.LFB484
	.byte	0x4
	.4byte	.LCFI3025-.LFB484
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3030-.LCFI3025
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3031-.LCFI3030
	.byte	0xe
	.uleb128 0x34
	.align	4
.LEFDE1256:
.LSFDE1258:
	.4byte	.LEFDE1258-.LASFDE1258
.LASFDE1258:
	.4byte	.Lframe0
	.4byte	.LFB385
	.4byte	.LFE385-.LFB385
	.byte	0x4
	.4byte	.LCFI3036-.LFB385
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE1258:
.LSFDE1260:
	.4byte	.LEFDE1260-.LASFDE1260
.LASFDE1260:
	.4byte	.Lframe0
	.4byte	.LFB388
	.4byte	.LFE388-.LFB388
	.byte	0x4
	.4byte	.LCFI3042-.LFB388
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3043-.LCFI3042
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1260:
.LSFDE1262:
	.4byte	.LEFDE1262-.LASFDE1262
.LASFDE1262:
	.4byte	.Lframe0
	.4byte	.LFB442
	.4byte	.LFE442-.LFB442
	.byte	0x4
	.4byte	.LCFI3044-.LFB442
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI3046-.LCFI3044
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3047-.LCFI3046
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1262:
.LSFDE1264:
	.4byte	.LEFDE1264-.LASFDE1264
.LASFDE1264:
	.4byte	.Lframe0
	.4byte	.LFB446
	.4byte	.LFE446-.LFB446
	.byte	0x4
	.4byte	.LCFI3051-.LFB446
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3052-.LCFI3051
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1264:
.LSFDE1266:
	.4byte	.LEFDE1266-.LASFDE1266
.LASFDE1266:
	.4byte	.Lframe0
	.4byte	.LFB445
	.4byte	.LFE445-.LFB445
	.byte	0x4
	.4byte	.LCFI3054-.LFB445
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI3055-.LCFI3054
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE1266:
.LSFDE1268:
	.4byte	.LEFDE1268-.LASFDE1268
.LASFDE1268:
	.4byte	.Lframe0
	.4byte	.LFB444
	.4byte	.LFE444-.LFB444
	.byte	0x4
	.4byte	.LCFI3059-.LFB444
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3060-.LCFI3059
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1268:
.LSFDE1270:
	.4byte	.LEFDE1270-.LASFDE1270
.LASFDE1270:
	.4byte	.Lframe0
	.4byte	.LFB448
	.4byte	.LFE448-.LFB448
	.byte	0x4
	.4byte	.LCFI3063-.LFB448
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3064-.LCFI3063
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1270:
.LSFDE1272:
	.4byte	.LEFDE1272-.LASFDE1272
.LASFDE1272:
	.4byte	.Lframe0
	.4byte	.LFB434
	.4byte	.LFE434-.LFB434
	.byte	0x4
	.4byte	.LCFI3072-.LFB434
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI3073-.LCFI3072
	.byte	0xe
	.uleb128 0x2c
	.align	4
.LEFDE1272:
.LSFDE1274:
	.4byte	.LEFDE1274-.LASFDE1274
.LASFDE1274:
	.4byte	.Lframe0
	.4byte	.LFB477
	.4byte	.LFE477-.LFB477
	.byte	0x4
	.4byte	.LCFI3076-.LFB477
	.byte	0x94
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3081-.LCFI3076
	.byte	0xe
	.uleb128 0x20
	.byte	0x96
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x6
	.align	4
.LEFDE1274:
.LSFDE1276:
	.4byte	.LEFDE1276-.LASFDE1276
.LASFDE1276:
	.4byte	.Lframe0
	.4byte	.LFB485
	.4byte	.LFE485-.LFB485
	.byte	0x4
	.4byte	.LCFI3093-.LFB485
	.byte	0xe
	.uleb128 0x48
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x6
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1276:
.LSFDE1278:
	.4byte	.LEFDE1278-.LASFDE1278
.LASFDE1278:
	.4byte	.Lframe0
	.4byte	.LFB486
	.4byte	.LFE486-.LFB486
	.byte	0x4
	.4byte	.LCFI3105-.LFB486
	.byte	0xe
	.uleb128 0xc4
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1278:
.LSFDE1280:
	.4byte	.LEFDE1280-.LASFDE1280
.LASFDE1280:
	.4byte	.Lframe0
	.4byte	.LFB309
	.4byte	.LFE309-.LFB309
	.byte	0x4
	.4byte	.LCFI3106-.LFB309
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI3108-.LCFI3106
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3109-.LCFI3108
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1280:
.LSFDE1282:
	.4byte	.LEFDE1282-.LASFDE1282
.LASFDE1282:
	.4byte	.Lframe0
	.4byte	.LFB1220
	.4byte	.LFE1220-.LFB1220
	.byte	0x4
	.4byte	.LCFI3120-.LFB1220
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3121-.LCFI3120
	.byte	0xe
	.uleb128 0xb0
	.align	4
.LEFDE1282:
.LSFDE1284:
	.4byte	.LEFDE1284-.LASFDE1284
.LASFDE1284:
	.4byte	.Lframe0
	.4byte	.LFB914
	.4byte	.LFE914-.LFB914
	.byte	0x4
	.4byte	.LCFI3122-.LFB914
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3126-.LCFI3122
	.byte	0x92
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3127-.LCFI3126
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1284:
.LSFDE1286:
	.4byte	.LEFDE1286-.LASFDE1286
.LASFDE1286:
	.4byte	.Lframe0
	.4byte	.LFB915
	.4byte	.LFE915-.LFB915
	.byte	0x4
	.4byte	.LCFI3128-.LFB915
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3131-.LCFI3128
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3132-.LCFI3131
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1286:
.LSFDE1288:
	.4byte	.LEFDE1288-.LASFDE1288
.LASFDE1288:
	.4byte	.Lframe0
	.4byte	.LFB916
	.4byte	.LFE916-.LFB916
	.byte	0x4
	.4byte	.LCFI3133-.LFB916
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3137-.LCFI3133
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3138-.LCFI3137
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1288:
.LSFDE1290:
	.4byte	.LEFDE1290-.LASFDE1290
.LASFDE1290:
	.4byte	.Lframe0
	.4byte	.LFB1088
	.4byte	.LFE1088-.LFB1088
	.byte	0x4
	.4byte	.LCFI3146-.LFB1088
	.byte	0xe
	.uleb128 0x20
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.align	4
.LEFDE1290:
.LSFDE1292:
	.4byte	.LEFDE1292-.LASFDE1292
.LASFDE1292:
	.4byte	.Lframe0
	.4byte	.LFB1406
	.4byte	.LFE1406-.LFB1406
	.byte	0x4
	.4byte	.LCFI3155-.LFB1406
	.byte	0x98
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3156-.LCFI3155
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE1292:
.LSFDE1294:
	.4byte	.LEFDE1294-.LASFDE1294
.LASFDE1294:
	.4byte	.Lframe0
	.4byte	.LFB919
	.4byte	.LFE919-.LFB919
	.byte	0x4
	.4byte	.LCFI3157-.LFB919
	.byte	0x96
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI3163-.LCFI3157
	.byte	0x94
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3164-.LCFI3163
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1294:
.LSFDE1296:
	.4byte	.LEFDE1296-.LASFDE1296
.LASFDE1296:
	.4byte	.Lframe0
	.4byte	.LFB773
	.4byte	.LFE773-.LFB773
	.byte	0x4
	.4byte	.LCFI3165-.LFB773
	.byte	0x96
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3166-.LCFI3165
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3167-.LCFI3166
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3176-.LCFI3167
	.byte	0xe
	.uleb128 0x38
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.align	4
.LEFDE1296:
.LSFDE1298:
	.4byte	.LEFDE1298-.LASFDE1298
.LASFDE1298:
	.4byte	.Lframe0
	.4byte	.LFB1160
	.4byte	.LFE1160-.LFB1160
	.byte	0x4
	.4byte	.LCFI3184-.LFB1160
	.byte	0x98
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI3185-.LCFI3184
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1298:
.LSFDE1300:
	.4byte	.LEFDE1300-.LASFDE1300
.LASFDE1300:
	.4byte	.Lframe0
	.4byte	.LFB1164
	.4byte	.LFE1164-.LFB1164
	.byte	0x4
	.4byte	.LCFI3197-.LFB1164
	.byte	0xe
	.uleb128 0x184
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1300:
.LSFDE1302:
	.4byte	.LEFDE1302-.LASFDE1302
.LASFDE1302:
	.4byte	.Lframe0
	.4byte	.LFB1072
	.4byte	.LFE1072-.LFB1072
	.byte	0x4
	.4byte	.LCFI3200-.LFB1072
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3209-.LCFI3200
	.byte	0xe
	.uleb128 0x11c
	.byte	0x9e
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1302:
.LSFDE1304:
	.4byte	.LEFDE1304-.LASFDE1304
.LASFDE1304:
	.4byte	.Lframe0
	.4byte	.LFB774
	.4byte	.LFE774-.LFB774
	.byte	0x4
	.4byte	.LCFI3210-.LFB774
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3220-.LCFI3210
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3221-.LCFI3220
	.byte	0xe
	.uleb128 0x5c
	.align	4
.LEFDE1304:
.LSFDE1306:
	.4byte	.LEFDE1306-.LASFDE1306
.LASFDE1306:
	.4byte	.Lframe0
	.4byte	.LFB791
	.4byte	.LFE791-.LFB791
	.byte	0x4
	.4byte	.LCFI3223-.LFB791
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3233-.LCFI3223
	.byte	0xe
	.uleb128 0xd4
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.align	4
.LEFDE1306:
.LSFDE1308:
	.4byte	.LEFDE1308-.LASFDE1308
.LASFDE1308:
	.4byte	.Lframe0
	.4byte	.LFB792
	.4byte	.LFE792-.LFB792
	.byte	0x4
	.4byte	.LCFI3238-.LFB792
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3239-.LCFI3238
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1308:
.LSFDE1310:
	.4byte	.LEFDE1310-.LASFDE1310
.LASFDE1310:
	.4byte	.Lframe0
	.4byte	.LFB732
	.4byte	.LFE732-.LFB732
	.byte	0x4
	.4byte	.LCFI3244-.LFB732
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3245-.LCFI3244
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1310:
.LSFDE1312:
	.4byte	.LEFDE1312-.LASFDE1312
.LASFDE1312:
	.4byte	.Lframe0
	.4byte	.LFB800
	.4byte	.LFE800-.LFB800
	.byte	0x4
	.4byte	.LCFI3250-.LFB800
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3253-.LCFI3250
	.byte	0xe
	.uleb128 0x134
	.byte	0x96
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1312:
.LSFDE1314:
	.4byte	.LEFDE1314-.LASFDE1314
.LASFDE1314:
	.4byte	.Lframe0
	.4byte	.LFB799
	.4byte	.LFE799-.LFB799
	.byte	0x4
	.4byte	.LCFI3258-.LFB799
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3261-.LCFI3258
	.byte	0xe
	.uleb128 0x134
	.byte	0x96
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1314:
.LSFDE1316:
	.4byte	.LEFDE1316-.LASFDE1316
.LASFDE1316:
	.4byte	.Lframe0
	.4byte	.LFB793
	.4byte	.LFE793-.LFB793
	.byte	0x4
	.4byte	.LCFI3264-.LFB793
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3265-.LCFI3264
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1316:
.LSFDE1318:
	.4byte	.LEFDE1318-.LASFDE1318
.LASFDE1318:
	.4byte	.Lframe0
	.4byte	.LFB1051
	.4byte	.LFE1051-.LFB1051
	.byte	0x4
	.4byte	.LCFI3271-.LFB1051
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3272-.LCFI3271
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1318:
.LSFDE1320:
	.4byte	.LEFDE1320-.LASFDE1320
.LASFDE1320:
	.4byte	.Lframe0
	.4byte	.LFB794
	.4byte	.LFE794-.LFB794
	.byte	0x4
	.4byte	.LCFI3279-.LFB794
	.byte	0xe
	.uleb128 0x18
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.align	4
.LEFDE1320:
.LSFDE1322:
	.4byte	.LEFDE1322-.LASFDE1322
.LASFDE1322:
	.4byte	.Lframe0
	.4byte	.LFB989
	.4byte	.LFE989-.LFB989
	.byte	0x4
	.4byte	.LCFI3291-.LFB989
	.byte	0xe
	.uleb128 0x78
	.byte	0x9e
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1322:
.LSFDE1324:
	.4byte	.LEFDE1324-.LASFDE1324
.LASFDE1324:
	.4byte	.Lframe0
	.4byte	.LFB831
	.4byte	.LFE831-.LFB831
	.byte	0x4
	.4byte	.LCFI3303-.LFB831
	.byte	0xe
	.uleb128 0x50
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.align	4
.LEFDE1324:
.LSFDE1326:
	.4byte	.LEFDE1326-.LASFDE1326
.LASFDE1326:
	.4byte	.Lframe0
	.4byte	.LFB1408
	.4byte	.LFE1408-.LFB1408
	.byte	0x4
	.4byte	.LCFI3314-.LFB1408
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI3315-.LCFI3314
	.byte	0xe
	.uleb128 0x2c
	.align	4
.LEFDE1326:
.LSFDE1328:
	.4byte	.LEFDE1328-.LASFDE1328
.LASFDE1328:
	.4byte	.Lframe0
	.4byte	.LFB1409
	.4byte	.LFE1409-.LFB1409
	.byte	0x4
	.4byte	.LCFI3316-.LFB1409
	.byte	0x98
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3317-.LCFI3316
	.byte	0x94
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3326-.LCFI3317
	.byte	0x96
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3327-.LCFI3326
	.byte	0xe
	.uleb128 0x2c
	.align	4
.LEFDE1328:
.LSFDE1330:
	.4byte	.LEFDE1330-.LASFDE1330
.LASFDE1330:
	.4byte	.Lframe0
	.4byte	.LFB1410
	.4byte	.LFE1410-.LFB1410
	.byte	0x4
	.4byte	.LCFI3339-.LFB1410
	.byte	0xe
	.uleb128 0x54
	.byte	0x9c
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1330:
.LSFDE1332:
	.4byte	.LEFDE1332-.LASFDE1332
.LASFDE1332:
	.4byte	.Lframe0
	.4byte	.LFB1071
	.4byte	.LFE1071-.LFB1071
	.byte	0x4
	.4byte	.LCFI3340-.LFB1071
	.byte	0x98
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3350-.LCFI3340
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3351-.LCFI3350
	.byte	0xe
	.uleb128 0x38
	.align	4
.LEFDE1332:
.LSFDE1334:
	.4byte	.LEFDE1334-.LASFDE1334
.LASFDE1334:
	.4byte	.Lframe0
	.4byte	.LFB796
	.4byte	.LFE796-.LFB796
	.byte	0x4
	.4byte	.LCFI3356-.LFB796
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3357-.LCFI3356
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1334:
.LSFDE1336:
	.4byte	.LEFDE1336-.LASFDE1336
.LASFDE1336:
	.4byte	.Lframe0
	.4byte	.LFB1411
	.4byte	.LFE1411-.LFB1411
	.byte	0x4
	.4byte	.LCFI3358-.LFB1411
	.byte	0x90
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3364-.LCFI3358
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3365-.LCFI3364
	.byte	0xe
	.uleb128 0x44
	.align	4
.LEFDE1336:
.LSFDE1338:
	.4byte	.LEFDE1338-.LASFDE1338
.LASFDE1338:
	.4byte	.Lframe0
	.4byte	.LFB498
	.4byte	.LFE498-.LFB498
	.byte	0x4
	.4byte	.LCFI3366-.LFB498
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3370-.LCFI3366
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3371-.LCFI3370
	.byte	0xe
	.uleb128 0x220
	.align	4
.LEFDE1338:
.LSFDE1340:
	.4byte	.LEFDE1340-.LASFDE1340
.LASFDE1340:
	.4byte	.Lframe0
	.4byte	.LFB499
	.4byte	.LFE499-.LFB499
	.byte	0x4
	.4byte	.LCFI3377-.LFB499
	.byte	0x82
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3378-.LCFI3377
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1340:
.LSFDE1342:
	.4byte	.LEFDE1342-.LASFDE1342
.LASFDE1342:
	.4byte	.Lframe0
	.4byte	.LFB312
	.4byte	.LFE312-.LFB312
	.byte	0x4
	.4byte	.LCFI3387-.LFB312
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI3388-.LCFI3387
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE1342:
.LSFDE1344:
	.4byte	.LEFDE1344-.LASFDE1344
.LASFDE1344:
	.4byte	.Lframe0
	.4byte	.LFB435
	.4byte	.LFE435-.LFB435
	.byte	0x4
	.4byte	.LCFI3393-.LFB435
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3394-.LCFI3393
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1344:
.LSFDE1346:
	.4byte	.LEFDE1346-.LASFDE1346
.LASFDE1346:
	.4byte	.Lframe0
	.4byte	.LFB436
	.4byte	.LFE436-.LFB436
	.byte	0x4
	.4byte	.LCFI3395-.LFB436
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3396-.LCFI3395
	.byte	0x90
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI3397-.LCFI3396
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3406-.LCFI3397
	.byte	0xe
	.uleb128 0x3c
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.align	4
.LEFDE1346:
.LSFDE1348:
	.4byte	.LEFDE1348-.LASFDE1348
.LASFDE1348:
	.4byte	.Lframe0
	.4byte	.LFB449
	.4byte	.LFE449-.LFB449
	.byte	0x4
	.4byte	.LCFI3418-.LFB449
	.byte	0xe
	.uleb128 0x50
	.byte	0x9e
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0xa
	.align	4
.LEFDE1348:
.LSFDE1350:
	.4byte	.LEFDE1350-.LASFDE1350
.LASFDE1350:
	.4byte	.Lframe0
	.4byte	.LFB450
	.4byte	.LFE450-.LFB450
	.byte	0x4
	.4byte	.LCFI3426-.LFB450
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI3427-.LCFI3426
	.byte	0xe
	.uleb128 0xb8
	.align	4
.LEFDE1350:
.LSFDE1352:
	.4byte	.LEFDE1352-.LASFDE1352
.LASFDE1352:
	.4byte	.Lframe0
	.4byte	.LFB367
	.4byte	.LFE367-.LFB367
	.byte	0x4
	.4byte	.LCFI3430-.LFB367
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3431-.LCFI3430
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1352:
.LSFDE1354:
	.4byte	.LEFDE1354-.LASFDE1354
.LASFDE1354:
	.4byte	.Lframe0
	.4byte	.LFB432
	.4byte	.LFE432-.LFB432
	.byte	0x4
	.4byte	.LCFI3434-.LFB432
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3435-.LCFI3434
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1354:
.LSFDE1356:
	.4byte	.LEFDE1356-.LASFDE1356
.LASFDE1356:
	.4byte	.Lframe0
	.4byte	.LFB453
	.4byte	.LFE453-.LFB453
	.byte	0x4
	.4byte	.LCFI3439-.LFB453
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3440-.LCFI3439
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1356:
.LSFDE1358:
	.4byte	.LEFDE1358-.LASFDE1358
.LASFDE1358:
	.4byte	.Lframe0
	.4byte	.LFB454
	.4byte	.LFE454-.LFB454
	.byte	0x4
	.4byte	.LCFI3443-.LFB454
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3444-.LCFI3443
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1358:
.LSFDE1360:
	.4byte	.LEFDE1360-.LASFDE1360
.LASFDE1360:
	.4byte	.Lframe0
	.4byte	.LFB590
	.4byte	.LFE590-.LFB590
	.byte	0x4
	.4byte	.LCFI3448-.LFB590
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3449-.LCFI3448
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1360:
.LSFDE1362:
	.4byte	.LEFDE1362-.LASFDE1362
.LASFDE1362:
	.4byte	.Lframe0
	.4byte	.LFB437
	.4byte	.LFE437-.LFB437
	.byte	0x4
	.4byte	.LCFI3454-.LFB437
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3455-.LCFI3454
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1362:
.LSFDE1364:
	.4byte	.LEFDE1364-.LASFDE1364
.LASFDE1364:
	.4byte	.Lframe0
	.4byte	.LFB364
	.4byte	.LFE364-.LFB364
	.byte	0x4
	.4byte	.LCFI3461-.LFB364
	.byte	0xe
	.uleb128 0x14
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.align	4
.LEFDE1364:
.LSFDE1366:
	.4byte	.LEFDE1366-.LASFDE1366
.LASFDE1366:
	.4byte	.Lframe0
	.4byte	.LFB1413
	.4byte	.LFE1413-.LFB1413
	.byte	0x4
	.4byte	.LCFI3465-.LFB1413
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3466-.LCFI3465
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1366:
.LSFDE1368:
	.4byte	.LEFDE1368-.LASFDE1368
.LASFDE1368:
	.4byte	.Lframe0
	.4byte	.LFB421
	.4byte	.LFE421-.LFB421
	.byte	0x4
	.4byte	.LCFI3467-.LFB421
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3471-.LCFI3467
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.align	4
.LEFDE1368:
.LSFDE1370:
	.4byte	.LEFDE1370-.LASFDE1370
.LASFDE1370:
	.4byte	.Lframe0
	.4byte	.LFB396
	.4byte	.LFE396-.LFB396
	.byte	0x4
	.4byte	.LCFI3473-.LFB396
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3476-.LCFI3473
	.byte	0xe
	.uleb128 0x10
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1370:
.LSFDE1372:
	.4byte	.LEFDE1372-.LASFDE1372
.LASFDE1372:
	.4byte	.Lframe0
	.4byte	.LFB1414
	.4byte	.LFE1414-.LFB1414
	.byte	0x4
	.4byte	.LCFI3480-.LFB1414
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3481-.LCFI3480
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1372:
.LSFDE1374:
	.4byte	.LEFDE1374-.LASFDE1374
.LASFDE1374:
	.4byte	.Lframe0
	.4byte	.LFB576
	.4byte	.LFE576-.LFB576
	.byte	0x4
	.4byte	.LCFI3486-.LFB576
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3487-.LCFI3486
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1374:
.LSFDE1376:
	.4byte	.LEFDE1376-.LASFDE1376
.LASFDE1376:
	.4byte	.Lframe0
	.4byte	.LFB686
	.4byte	.LFE686-.LFB686
	.byte	0x4
	.4byte	.LCFI3488-.LFB686
	.byte	0x82
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3489-.LCFI3488
	.byte	0x96
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3497-.LCFI3489
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3498-.LCFI3497
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE1376:
.LSFDE1378:
	.4byte	.LEFDE1378-.LASFDE1378
.LASFDE1378:
	.4byte	.Lframe0
	.4byte	.LFB1004
	.4byte	.LFE1004-.LFB1004
	.byte	0x4
	.4byte	.LCFI3499-.LFB1004
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3502-.LCFI3499
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1378:
.LSFDE1380:
	.4byte	.LEFDE1380-.LASFDE1380
.LASFDE1380:
	.4byte	.Lframe0
	.4byte	.LFB830
	.4byte	.LFE830-.LFB830
	.byte	0x4
	.4byte	.LCFI3510-.LFB830
	.byte	0x94
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3511-.LCFI3510
	.byte	0xe
	.uleb128 0xa4
	.align	4
.LEFDE1380:
.LSFDE1382:
	.4byte	.LEFDE1382-.LASFDE1382
.LASFDE1382:
	.4byte	.Lframe0
	.4byte	.LFB1202
	.4byte	.LFE1202-.LFB1202
	.byte	0x4
	.4byte	.LCFI3512-.LFB1202
	.byte	0x94
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI3517-.LCFI3512
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3518-.LCFI3517
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1382:
.LSFDE1384:
	.4byte	.LEFDE1384-.LASFDE1384
.LASFDE1384:
	.4byte	.Lframe0
	.4byte	.LFB504
	.4byte	.LFE504-.LFB504
	.byte	0x4
	.4byte	.LCFI3519-.LFB504
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3522-.LCFI3519
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1384:
.LSFDE1386:
	.4byte	.LEFDE1386-.LASFDE1386
.LASFDE1386:
	.4byte	.Lframe0
	.4byte	.LFB496
	.4byte	.LFE496-.LFB496
	.byte	0x4
	.4byte	.LCFI3528-.LFB496
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3529-.LCFI3528
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1386:
.LSFDE1388:
	.4byte	.LEFDE1388-.LASFDE1388
.LASFDE1388:
	.4byte	.Lframe0
	.4byte	.LFB438
	.4byte	.LFE438-.LFB438
	.byte	0x4
	.4byte	.LCFI3534-.LFB438
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3535-.LCFI3534
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1388:
.LSFDE1390:
	.4byte	.LEFDE1390-.LASFDE1390
.LASFDE1390:
	.4byte	.Lframe0
	.4byte	.LFB537
	.4byte	.LFE537-.LFB537
	.byte	0x4
	.4byte	.LCFI3544-.LFB537
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI3545-.LCFI3544
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE1390:
.LSFDE1392:
	.4byte	.LEFDE1392-.LASFDE1392
.LASFDE1392:
	.4byte	.Lframe0
	.4byte	.LFB455
	.4byte	.LFE455-.LFB455
	.byte	0x4
	.4byte	.LCFI3546-.LFB455
	.byte	0x9a
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3547-.LCFI3546
	.byte	0x92
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI3556-.LCFI3547
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3557-.LCFI3556
	.byte	0xe
	.uleb128 0x48
	.align	4
.LEFDE1392:
.LSFDE1394:
	.4byte	.LEFDE1394-.LASFDE1394
.LASFDE1394:
	.4byte	.Lframe0
	.4byte	.LFB370
	.4byte	.LFE370-.LFB370
	.byte	0x4
	.4byte	.LCFI3566-.LFB370
	.byte	0x9a
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI3567-.LCFI3566
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE1394:
.LSFDE1396:
	.4byte	.LEFDE1396-.LASFDE1396
.LASFDE1396:
	.4byte	.Lframe0
	.4byte	.LFB376
	.4byte	.LFE376-.LFB376
	.byte	0x4
	.4byte	.LCFI3572-.LFB376
	.byte	0xe
	.uleb128 0x2c
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE1396:
.LSFDE1398:
	.4byte	.LEFDE1398-.LASFDE1398
.LASFDE1398:
	.4byte	.Lframe0
	.4byte	.LFB377
	.4byte	.LFE377-.LFB377
	.byte	0x4
	.4byte	.LCFI3575-.LFB377
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1398:
.LSFDE1400:
	.4byte	.LEFDE1400-.LASFDE1400
.LASFDE1400:
	.4byte	.Lframe0
	.4byte	.LFB411
	.4byte	.LFE411-.LFB411
	.byte	0x4
	.4byte	.LCFI3585-.LFB411
	.byte	0xe
	.uleb128 0x24
	.byte	0x9a
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x9
	.align	4
.LEFDE1400:
.LSFDE1402:
	.4byte	.LEFDE1402-.LASFDE1402
.LASFDE1402:
	.4byte	.Lframe0
	.4byte	.LFB459
	.4byte	.LFE459-.LFB459
	.byte	0x4
	.4byte	.LCFI3591-.LFB459
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3597-.LCFI3591
	.byte	0xe
	.uleb128 0x54
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1402:
.LSFDE1404:
	.4byte	.LEFDE1404-.LASFDE1404
.LASFDE1404:
	.4byte	.Lframe0
	.4byte	.LFB413
	.4byte	.LFE413-.LFB413
	.byte	0x4
	.4byte	.LCFI3598-.LFB413
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3599-.LCFI3598
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3609-.LCFI3599
	.byte	0xe
	.uleb128 0x54
	.byte	0x9c
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.align	4
.LEFDE1404:
.LSFDE1406:
	.4byte	.LEFDE1406-.LASFDE1406
.LASFDE1406:
	.4byte	.Lframe0
	.4byte	.LFB414
	.4byte	.LFE414-.LFB414
	.byte	0x4
	.4byte	.LCFI3610-.LFB414
	.byte	0x96
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3620-.LCFI3610
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x9
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI3621-.LCFI3620
	.byte	0xe
	.uleb128 0x40
	.align	4
.LEFDE1406:
.LSFDE1408:
	.4byte	.LEFDE1408-.LASFDE1408
.LASFDE1408:
	.4byte	.Lframe0
	.4byte	.LFB332
	.4byte	.LFE332-.LFB332
	.byte	0x4
	.4byte	.LCFI3631-.LFB332
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3632-.LCFI3631
	.byte	0xe
	.uleb128 0xa0
	.align	4
.LEFDE1408:
.LSFDE1410:
	.4byte	.LEFDE1410-.LASFDE1410
.LASFDE1410:
	.4byte	.Lframe0
	.4byte	.LFB417
	.4byte	.LFE417-.LFB417
	.byte	0x4
	.4byte	.LCFI3642-.LFB417
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x4
	.byte	0x82
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3643-.LCFI3642
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE1410:
.LSFDE1412:
	.4byte	.LEFDE1412-.LASFDE1412
.LASFDE1412:
	.4byte	.Lframe0
	.4byte	.LFB409
	.4byte	.LFE409-.LFB409
	.byte	0x4
	.4byte	.LCFI3649-.LFB409
	.byte	0xe
	.uleb128 0x18
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.align	4
.LEFDE1412:
.LSFDE1414:
	.4byte	.LEFDE1414-.LASFDE1414
.LASFDE1414:
	.4byte	.Lframe0
	.4byte	.LFB423
	.4byte	.LFE423-.LFB423
	.byte	0x4
	.4byte	.LCFI3660-.LFB423
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3661-.LCFI3660
	.byte	0xe
	.uleb128 0x48
	.align	4
.LEFDE1414:
.LSFDE1416:
	.4byte	.LEFDE1416-.LASFDE1416
.LASFDE1416:
	.4byte	.Lframe0
	.4byte	.LFB1418
	.4byte	.LFE1418-.LFB1418
	.byte	0x4
	.4byte	.LCFI3666-.LFB1418
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI3671-.LCFI3666
	.byte	0xe
	.uleb128 0x24
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1416:
.LSFDE1418:
	.4byte	.LEFDE1418-.LASFDE1418
.LASFDE1418:
	.4byte	.Lframe0
	.4byte	.LFB410
	.4byte	.LFE410-.LFB410
	.byte	0x4
	.4byte	.LCFI3673-.LFB410
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3682-.LCFI3673
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3683-.LCFI3682
	.byte	0xe
	.uleb128 0x40
	.align	4
.LEFDE1418:
.LSFDE1420:
	.4byte	.LEFDE1420-.LASFDE1420
.LASFDE1420:
	.4byte	.Lframe0
	.4byte	.LFB407
	.4byte	.LFE407-.LFB407
	.byte	0x4
	.4byte	.LCFI3687-.LFB407
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3688-.LCFI3687
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1420:
.LSFDE1422:
	.4byte	.LEFDE1422-.LASFDE1422
.LASFDE1422:
	.4byte	.Lframe0
	.4byte	.LFB424
	.4byte	.LFE424-.LFB424
	.byte	0x4
	.4byte	.LCFI3696-.LFB424
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3697-.LCFI3696
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE1422:
.LSFDE1424:
	.4byte	.LEFDE1424-.LASFDE1424
.LASFDE1424:
	.4byte	.Lframe0
	.4byte	.LFB1419
	.4byte	.LFE1419-.LFB1419
	.byte	0x4
	.4byte	.LCFI3698-.LFB1419
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3703-.LCFI3698
	.byte	0xe
	.uleb128 0x14
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.align	4
.LEFDE1424:
.LSFDE1426:
	.4byte	.LEFDE1426-.LASFDE1426
.LASFDE1426:
	.4byte	.Lframe0
	.4byte	.LFB503
	.4byte	.LFE503-.LFB503
	.byte	0x4
	.4byte	.LCFI3704-.LFB503
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3705-.LCFI3704
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3706-.LCFI3705
	.byte	0x94
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3715-.LCFI3706
	.byte	0xe
	.uleb128 0x48
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1426:
.LSFDE1428:
	.4byte	.LEFDE1428-.LASFDE1428
.LASFDE1428:
	.4byte	.Lframe0
	.4byte	.LFB456
	.4byte	.LFE456-.LFB456
	.byte	0x4
	.4byte	.LCFI3719-.LFB456
	.byte	0x94
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI3724-.LCFI3719
	.byte	0xe
	.uleb128 0x2c
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1428:
.LSFDE1430:
	.4byte	.LEFDE1430-.LASFDE1430
.LASFDE1430:
	.4byte	.Lframe0
	.4byte	.LFB458
	.4byte	.LFE458-.LFB458
	.byte	0x4
	.4byte	.LCFI3732-.LFB458
	.byte	0xe
	.uleb128 0x40
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.align	4
.LEFDE1430:
.LSFDE1432:
	.4byte	.LEFDE1432-.LASFDE1432
.LASFDE1432:
	.4byte	.Lframe0
	.4byte	.LFB457
	.4byte	.LFE457-.LFB457
	.byte	0x4
	.4byte	.LCFI3734-.LFB457
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1432:
.LSFDE1434:
	.4byte	.LEFDE1434-.LASFDE1434
.LASFDE1434:
	.4byte	.Lframe0
	.4byte	.LFB461
	.4byte	.LFE461-.LFB461
	.byte	0x4
	.4byte	.LCFI3745-.LFB461
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3746-.LCFI3745
	.byte	0xe
	.uleb128 0x50
	.align	4
.LEFDE1434:
.LSFDE1436:
	.4byte	.LEFDE1436-.LASFDE1436
.LASFDE1436:
	.4byte	.Lframe0
	.4byte	.LFB467
	.4byte	.LFE467-.LFB467
	.byte	0x4
	.4byte	.LCFI3747-.LFB467
	.byte	0x82
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI3748-.LCFI3747
	.byte	0x8e
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI3757-.LCFI3748
	.byte	0xe
	.uleb128 0x30
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x8
	.align	4
.LEFDE1436:
.LSFDE1438:
	.4byte	.LEFDE1438-.LASFDE1438
.LASFDE1438:
	.4byte	.Lframe0
	.4byte	.LFB464
	.4byte	.LFE464-.LFB464
	.byte	0x4
	.4byte	.LCFI3758-.LFB464
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3769-.LCFI3758
	.byte	0xe
	.uleb128 0x194
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.align	4
.LEFDE1438:
.LSFDE1440:
	.4byte	.LEFDE1440-.LASFDE1440
.LASFDE1440:
	.4byte	.Lframe0
	.4byte	.LFB469
	.4byte	.LFE469-.LFB469
	.byte	0x4
	.4byte	.LCFI3770-.LFB469
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI3775-.LCFI3770
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI3779-.LCFI3775
	.byte	0xe
	.uleb128 0x40
	.byte	0x9a
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1440:
.LSFDE1442:
	.4byte	.LEFDE1442-.LASFDE1442
.LASFDE1442:
	.4byte	.Lframe0
	.4byte	.LFB470
	.4byte	.LFE470-.LFB470
	.byte	0x4
	.4byte	.LCFI3780-.LFB470
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3791-.LCFI3780
	.byte	0xe
	.uleb128 0x10c
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.align	4
.LEFDE1442:
.LSFDE1444:
	.4byte	.LEFDE1444-.LASFDE1444
.LASFDE1444:
	.4byte	.Lframe0
	.4byte	.LFB473
	.4byte	.LFE473-.LFB473
	.byte	0x4
	.4byte	.LCFI3798-.LFB473
	.byte	0x90
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3799-.LCFI3798
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1444:
.LSFDE1446:
	.4byte	.LEFDE1446-.LASFDE1446
.LASFDE1446:
	.4byte	.Lframe0
	.4byte	.LFB1421
	.4byte	.LFE1421-.LFB1421
	.byte	0x4
	.4byte	.LCFI3803-.LFB1421
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3804-.LCFI3803
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1446:
.LSFDE1448:
	.4byte	.LEFDE1448-.LASFDE1448
.LASFDE1448:
	.4byte	.Lframe0
	.4byte	.LFB471
	.4byte	.LFE471-.LFB471
	.byte	0x4
	.4byte	.LCFI3813-.LFB471
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3814-.LCFI3813
	.byte	0xe
	.uleb128 0x3c
	.align	4
.LEFDE1448:
.LSFDE1450:
	.4byte	.LEFDE1450-.LASFDE1450
.LASFDE1450:
	.4byte	.Lframe0
	.4byte	.LFB314
	.4byte	.LFE314-.LFB314
	.byte	0x4
	.4byte	.LCFI3818-.LFB314
	.byte	0x90
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3819-.LCFI3818
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1450:
.LSFDE1452:
	.4byte	.LEFDE1452-.LASFDE1452
.LASFDE1452:
	.4byte	.Lframe0
	.4byte	.LFB584
	.4byte	.LFE584-.LFB584
	.byte	0x4
	.4byte	.LCFI3830-.LFB584
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3831-.LCFI3830
	.byte	0xe
	.uleb128 0x48
	.align	4
.LEFDE1452:
.LSFDE1454:
	.4byte	.LEFDE1454-.LASFDE1454
.LASFDE1454:
	.4byte	.Lframe0
	.4byte	.LFB586
	.4byte	.LFE586-.LFB586
	.byte	0x4
	.4byte	.LCFI3837-.LFB586
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3838-.LCFI3837
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1454:
.LSFDE1456:
	.4byte	.LEFDE1456-.LASFDE1456
.LASFDE1456:
	.4byte	.Lframe0
	.4byte	.LFB587
	.4byte	.LFE587-.LFB587
	.byte	0x4
	.4byte	.LCFI3839-.LFB587
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3842-.LCFI3839
	.byte	0xe
	.uleb128 0xc
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1456:
.LSFDE1458:
	.4byte	.LEFDE1458-.LASFDE1458
.LASFDE1458:
	.4byte	.Lframe0
	.4byte	.LFB694
	.4byte	.LFE694-.LFB694
	.byte	0x4
	.4byte	.LCFI3848-.LFB694
	.byte	0x94
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3849-.LCFI3848
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1458:
.LSFDE1460:
	.4byte	.LEFDE1460-.LASFDE1460
.LASFDE1460:
	.4byte	.Lframe0
	.4byte	.LFB696
	.4byte	.LFE696-.LFB696
	.byte	0x4
	.4byte	.LCFI3851-.LFB696
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1460:
.LSFDE1462:
	.4byte	.LEFDE1462-.LASFDE1462
.LASFDE1462:
	.4byte	.Lframe0
	.4byte	.LFB695
	.4byte	.LFE695-.LFB695
	.byte	0x4
	.4byte	.LCFI3853-.LFB695
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1462:
.LSFDE1464:
	.4byte	.LEFDE1464-.LASFDE1464
.LASFDE1464:
	.4byte	.Lframe0
	.4byte	.LFB606
	.4byte	.LFE606-.LFB606
	.byte	0x4
	.4byte	.LCFI3856-.LFB606
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1464:
.LSFDE1466:
	.4byte	.LEFDE1466-.LASFDE1466
.LASFDE1466:
	.4byte	.Lframe0
	.4byte	.LFB693
	.4byte	.LFE693-.LFB693
	.byte	0x4
	.4byte	.LCFI3860-.LFB693
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI3861-.LCFI3860
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1466:
.LSFDE1468:
	.4byte	.LEFDE1468-.LASFDE1468
.LASFDE1468:
	.4byte	.Lframe0
	.4byte	.LFB607
	.4byte	.LFE607-.LFB607
	.byte	0x4
	.4byte	.LCFI3864-.LFB607
	.byte	0x8e
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3865-.LCFI3864
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1468:
.LSFDE1470:
	.4byte	.LEFDE1470-.LASFDE1470
.LASFDE1470:
	.4byte	.Lframe0
	.4byte	.LFB953
	.4byte	.LFE953-.LFB953
	.byte	0x4
	.4byte	.LCFI3869-.LFB953
	.byte	0x8e
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3870-.LCFI3869
	.byte	0xe
	.uleb128 0x10
	.align	4
.LEFDE1470:
.LSFDE1472:
	.4byte	.LEFDE1472-.LASFDE1472
.LASFDE1472:
	.4byte	.Lframe0
	.4byte	.LFB952
	.4byte	.LFE952-.LFB952
	.byte	0x4
	.4byte	.LCFI3875-.LFB952
	.byte	0xe
	.uleb128 0x18
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.align	4
.LEFDE1472:
.LSFDE1474:
	.4byte	.LEFDE1474-.LASFDE1474
.LASFDE1474:
	.4byte	.Lframe0
	.4byte	.LFB193
	.4byte	.LFE193-.LFB193
	.byte	0x4
	.4byte	.LCFI3882-.LFB193
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3887-.LCFI3882
	.byte	0xe
	.uleb128 0x2c4
	.byte	0x9a
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1474:
.LSFDE1476:
	.4byte	.LEFDE1476-.LASFDE1476
.LASFDE1476:
	.4byte	.Lframe0
	.4byte	.LFB1192
	.4byte	.LFE1192-.LFB1192
	.align	4
.LEFDE1476:
.LSFDE1478:
	.4byte	.LEFDE1478-.LASFDE1478
.LASFDE1478:
	.4byte	.Lframe0
	.4byte	.LFB1193
	.4byte	.LFE1193-.LFB1193
	.byte	0x4
	.4byte	.LCFI3889-.LFB1193
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1478:
.LSFDE1480:
	.4byte	.LEFDE1480-.LASFDE1480
.LASFDE1480:
	.4byte	.Lframe0
	.4byte	.LFB1197
	.4byte	.LFE1197-.LFB1197
	.align	4
.LEFDE1480:
.LSFDE1482:
	.4byte	.LEFDE1482-.LASFDE1482
.LASFDE1482:
	.4byte	.Lframe0
	.4byte	.LFB1198
	.4byte	.LFE1198-.LFB1198
	.align	4
.LEFDE1482:
.LSFDE1484:
	.4byte	.LEFDE1484-.LASFDE1484
.LASFDE1484:
	.4byte	.Lframe0
	.4byte	.LFB1199
	.4byte	.LFE1199-.LFB1199
	.align	4
.LEFDE1484:
.LSFDE1486:
	.4byte	.LEFDE1486-.LASFDE1486
.LASFDE1486:
	.4byte	.Lframe0
	.4byte	.LFB1201
	.4byte	.LFE1201-.LFB1201
	.byte	0x4
	.4byte	.LCFI3896-.LFB1201
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3897-.LCFI3896
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1486:
.LSFDE1488:
	.4byte	.LEFDE1488-.LASFDE1488
.LASFDE1488:
	.4byte	.Lframe0
	.4byte	.LFB1206
	.4byte	.LFE1206-.LFB1206
	.byte	0x4
	.4byte	.LCFI3899-.LFB1206
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE1488:
.LSFDE1490:
	.4byte	.LEFDE1490-.LASFDE1490
.LASFDE1490:
	.4byte	.Lframe0
	.4byte	.LFB1207
	.4byte	.LFE1207-.LFB1207
	.byte	0x4
	.4byte	.LCFI3901-.LFB1207
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE1490:
.LSFDE1492:
	.4byte	.LEFDE1492-.LASFDE1492
.LASFDE1492:
	.4byte	.Lframe0
	.4byte	.LFB1208
	.4byte	.LFE1208-.LFB1208
	.byte	0x4
	.4byte	.LCFI3903-.LFB1208
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE1492:
.LSFDE1494:
	.4byte	.LEFDE1494-.LASFDE1494
.LASFDE1494:
	.4byte	.Lframe0
	.4byte	.LFB1209
	.4byte	.LFE1209-.LFB1209
	.align	4
.LEFDE1494:
.LSFDE1496:
	.4byte	.LEFDE1496-.LASFDE1496
.LASFDE1496:
	.4byte	.Lframe0
	.4byte	.LFB1211
	.4byte	.LFE1211-.LFB1211
	.byte	0x4
	.4byte	.LCFI3906-.LFB1211
	.byte	0xe
	.uleb128 0x10
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1496:
.LSFDE1498:
	.4byte	.LEFDE1498-.LASFDE1498
.LASFDE1498:
	.4byte	.Lframe0
	.4byte	.LFB1212
	.4byte	.LFE1212-.LFB1212
	.byte	0x4
	.4byte	.LCFI3915-.LFB1212
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI3916-.LCFI3915
	.byte	0xe
	.uleb128 0x2c
	.align	4
.LEFDE1498:
.LSFDE1500:
	.4byte	.LEFDE1500-.LASFDE1500
.LASFDE1500:
	.4byte	.Lframe0
	.4byte	.LFB1213
	.4byte	.LFE1213-.LFB1213
	.byte	0x4
	.4byte	.LCFI3920-.LFB1213
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3921-.LCFI3920
	.byte	0xe
	.uleb128 0x18
	.align	4
.LEFDE1500:
.LSFDE1502:
	.4byte	.LEFDE1502-.LASFDE1502
.LASFDE1502:
	.4byte	.Lframe0
	.4byte	.LFB1214
	.4byte	.LFE1214-.LFB1214
	.align	4
.LEFDE1502:
.LSFDE1504:
	.4byte	.LEFDE1504-.LASFDE1504
.LASFDE1504:
	.4byte	.Lframe0
	.4byte	.LFB1215
	.4byte	.LFE1215-.LFB1215
	.align	4
.LEFDE1504:
.LSFDE1506:
	.4byte	.LEFDE1506-.LASFDE1506
.LASFDE1506:
	.4byte	.Lframe0
	.4byte	.LFB1216
	.4byte	.LFE1216-.LFB1216
	.align	4
.LEFDE1506:
.LSFDE1508:
	.4byte	.LEFDE1508-.LASFDE1508
.LASFDE1508:
	.4byte	.Lframe0
	.4byte	.LFB1217
	.4byte	.LFE1217-.LFB1217
	.align	4
.LEFDE1508:
.LSFDE1510:
	.4byte	.LEFDE1510-.LASFDE1510
.LASFDE1510:
	.4byte	.Lframe0
	.4byte	.LFB1218
	.4byte	.LFE1218-.LFB1218
	.align	4
.LEFDE1510:
.LSFDE1512:
	.4byte	.LEFDE1512-.LASFDE1512
.LASFDE1512:
	.4byte	.Lframe0
	.4byte	.LFB1221
	.4byte	.LFE1221-.LFB1221
	.byte	0x4
	.4byte	.LCFI3924-.LFB1221
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE1512:
.LSFDE1514:
	.4byte	.LEFDE1514-.LASFDE1514
.LASFDE1514:
	.4byte	.Lframe0
	.4byte	.LFB1222
	.4byte	.LFE1222-.LFB1222
	.byte	0x4
	.4byte	.LCFI3927-.LFB1222
	.byte	0xe
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE1514:
.LSFDE1516:
	.4byte	.LEFDE1516-.LASFDE1516
.LASFDE1516:
	.4byte	.Lframe0
	.4byte	.LFB1223
	.4byte	.LFE1223-.LFB1223
	.byte	0x4
	.4byte	.LCFI3929-.LFB1223
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE1516:
.LSFDE1518:
	.4byte	.LEFDE1518-.LASFDE1518
.LASFDE1518:
	.4byte	.Lframe0
	.4byte	.LFB1227
	.4byte	.LFE1227-.LFB1227
	.byte	0x4
	.4byte	.LCFI3930-.LFB1227
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI3938-.LCFI3930
	.byte	0xe
	.uleb128 0x2c
	.byte	0x96
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x6
	.align	4
.LEFDE1518:
.LSFDE1520:
	.4byte	.LEFDE1520-.LASFDE1520
.LASFDE1520:
	.4byte	.Lframe0
	.4byte	.LFB1098
	.4byte	.LFE1098-.LFB1098
	.byte	0x4
	.4byte	.LCFI3940-.LFB1098
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI3941-.LCFI3940
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1520:
.LSFDE1522:
	.4byte	.LEFDE1522-.LASFDE1522
.LASFDE1522:
	.4byte	.Lframe0
	.4byte	.LFB691
	.4byte	.LFE691-.LFB691
	.byte	0x4
	.4byte	.LCFI3943-.LFB691
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3953-.LCFI3943
	.byte	0xe
	.uleb128 0xb54
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.align	4
.LEFDE1522:
.LSFDE1524:
	.4byte	.LEFDE1524-.LASFDE1524
.LASFDE1524:
	.4byte	.Lframe0
	.4byte	.LFB637
	.4byte	.LFE637-.LFB637
	.byte	0x4
	.4byte	.LCFI3964-.LFB637
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3965-.LCFI3964
	.byte	0xe
	.uleb128 0x130
	.align	4
.LEFDE1524:
.LSFDE1526:
	.4byte	.LEFDE1526-.LASFDE1526
.LASFDE1526:
	.4byte	.Lframe0
	.4byte	.LFB995
	.4byte	.LFE995-.LFB995
	.byte	0x4
	.4byte	.LCFI3969-.LFB995
	.byte	0x9e
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI3977-.LCFI3969
	.byte	0xe
	.uleb128 0x48
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1526:
.LSFDE1528:
	.4byte	.LEFDE1528-.LASFDE1528
.LASFDE1528:
	.4byte	.Lframe0
	.4byte	.LFB827
	.4byte	.LFE827-.LFB827
	.byte	0x4
	.4byte	.LCFI3978-.LFB827
	.byte	0x90
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI3979-.LCFI3978
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI3981-.LCFI3979
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI3982-.LCFI3981
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1528:
.LSFDE1530:
	.4byte	.LEFDE1530-.LASFDE1530
.LASFDE1530:
	.4byte	.Lframe0
	.4byte	.LFB1011
	.4byte	.LFE1011-.LFB1011
	.byte	0x4
	.4byte	.LCFI3983-.LFB1011
	.byte	0x8e
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI3984-.LCFI3983
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI3985-.LCFI3984
	.byte	0x90
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI3990-.LCFI3985
	.byte	0xe
	.uleb128 0x20
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x4
	.align	4
.LEFDE1530:
.LSFDE1532:
	.4byte	.LEFDE1532-.LASFDE1532
.LASFDE1532:
	.4byte	.Lframe0
	.4byte	.LFB1012
	.4byte	.LFE1012-.LFB1012
	.byte	0x4
	.4byte	.LCFI4001-.LFB1012
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI4002-.LCFI4001
	.byte	0xe
	.uleb128 0x80
	.align	4
.LEFDE1532:
.LSFDE1534:
	.4byte	.LEFDE1534-.LASFDE1534
.LASFDE1534:
	.4byte	.Lframe0
	.4byte	.LFB1013
	.4byte	.LFE1013-.LFB1013
	.byte	0x4
	.4byte	.LCFI4009-.LFB1013
	.byte	0x92
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI4010-.LCFI4009
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1534:
.LSFDE1536:
	.4byte	.LEFDE1536-.LASFDE1536
.LASFDE1536:
	.4byte	.Lframe0
	.4byte	.LFB1014
	.4byte	.LFE1014-.LFB1014
	.byte	0x4
	.4byte	.LCFI4012-.LFB1014
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI4013-.LCFI4012
	.byte	0xe
	.uleb128 0x8
	.align	4
.LEFDE1536:
.LSFDE1538:
	.4byte	.LEFDE1538-.LASFDE1538
.LASFDE1538:
	.4byte	.Lframe0
	.4byte	.LFB868
	.4byte	.LFE868-.LFB868
	.byte	0x4
	.4byte	.LCFI4025-.LFB868
	.byte	0xe
	.uleb128 0x34
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x92
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1538:
.LSFDE1540:
	.4byte	.LEFDE1540-.LASFDE1540
.LASFDE1540:
	.4byte	.Lframe0
	.4byte	.LFB852
	.4byte	.LFE852-.LFB852
	.byte	0x4
	.4byte	.LCFI4031-.LFB852
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI4032-.LCFI4031
	.byte	0xe
	.uleb128 0x24
	.align	4
.LEFDE1540:
.LSFDE1542:
	.4byte	.LEFDE1542-.LASFDE1542
.LASFDE1542:
	.4byte	.Lframe0
	.4byte	.LFB1063
	.4byte	.LFE1063-.LFB1063
	.byte	0x4
	.4byte	.LCFI4034-.LFB1063
	.byte	0x98
	.uleb128 0x5
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4044-.LCFI4034
	.byte	0xe
	.uleb128 0x88
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1542:
.LSFDE1544:
	.4byte	.LEFDE1544-.LASFDE1544
.LASFDE1544:
	.4byte	.Lframe0
	.4byte	.LFB934
	.4byte	.LFE934-.LFB934
	.byte	0x4
	.4byte	.LCFI4045-.LFB934
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI4050-.LCFI4045
	.byte	0xe
	.uleb128 0x14
	.byte	0x92
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1544:
.LSFDE1546:
	.4byte	.LEFDE1546-.LASFDE1546
.LASFDE1546:
	.4byte	.Lframe0
	.4byte	.LFB988
	.4byte	.LFE988-.LFB988
	.byte	0x4
	.4byte	.LCFI4062-.LFB988
	.byte	0xe
	.uleb128 0xf0
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1546:
.LSFDE1548:
	.4byte	.LEFDE1548-.LASFDE1548
.LASFDE1548:
	.4byte	.Lframe0
	.4byte	.LFB1094
	.4byte	.LFE1094-.LFB1094
	.byte	0x4
	.4byte	.LCFI4064-.LFB1094
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4074-.LCFI4064
	.byte	0xe
	.uleb128 0xa4
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.align	4
.LEFDE1548:
.LSFDE1550:
	.4byte	.LEFDE1550-.LASFDE1550
.LASFDE1550:
	.4byte	.Lframe0
	.4byte	.LFB937
	.4byte	.LFE937-.LFB937
	.byte	0x4
	.4byte	.LCFI4086-.LFB937
	.byte	0xe
	.uleb128 0x9c
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1550:
.LSFDE1552:
	.4byte	.LEFDE1552-.LASFDE1552
.LASFDE1552:
	.4byte	.Lframe0
	.4byte	.LFB1096
	.4byte	.LFE1096-.LFB1096
	.byte	0x4
	.4byte	.LCFI4088-.LFB1096
	.byte	0x9e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4098-.LCFI4088
	.byte	0xe
	.uleb128 0xf4
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1552:
.LSFDE1554:
	.4byte	.LEFDE1554-.LASFDE1554
.LASFDE1554:
	.4byte	.Lframe0
	.4byte	.LFB1009
	.4byte	.LFE1009-.LFB1009
	.byte	0x4
	.4byte	.LCFI4099-.LFB1009
	.byte	0x8e
	.uleb128 0xa
	.byte	0x4
	.4byte	.LCFI4109-.LCFI4099
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x7
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4110-.LCFI4109
	.byte	0xe
	.uleb128 0x60
	.align	4
.LEFDE1554:
.LSFDE1556:
	.4byte	.LEFDE1556-.LASFDE1556
.LASFDE1556:
	.4byte	.Lframe0
	.4byte	.LFB920
	.4byte	.LFE920-.LFB920
	.byte	0x4
	.4byte	.LCFI4118-.LFB920
	.byte	0xe
	.uleb128 0x20
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.align	4
.LEFDE1556:
.LSFDE1558:
	.4byte	.LEFDE1558-.LASFDE1558
.LASFDE1558:
	.4byte	.Lframe0
	.4byte	.LFB1178
	.4byte	.LFE1178-.LFB1178
	.byte	0x4
	.4byte	.LCFI4130-.LFB1178
	.byte	0xe
	.uleb128 0xc4
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1558:
.LSFDE1560:
	.4byte	.LEFDE1560-.LASFDE1560
.LASFDE1560:
	.4byte	.Lframe0
	.4byte	.LFB1182
	.4byte	.LFE1182-.LFB1182
	.byte	0x4
	.4byte	.LCFI4131-.LFB1182
	.byte	0x90
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI4141-.LCFI4131
	.byte	0x9e
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4142-.LCFI4141
	.byte	0xe
	.uleb128 0x44
	.align	4
.LEFDE1560:
.LSFDE1562:
	.4byte	.LEFDE1562-.LASFDE1562
.LASFDE1562:
	.4byte	.Lframe0
	.4byte	.LFB1118
	.4byte	.LFE1118-.LFB1118
	.byte	0x4
	.4byte	.LCFI4148-.LFB1118
	.byte	0xe
	.uleb128 0x220
	.byte	0x92
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x5
	.align	4
.LEFDE1562:
.LSFDE1564:
	.4byte	.LEFDE1564-.LASFDE1564
.LASFDE1564:
	.4byte	.Lframe0
	.4byte	.LFB850
	.4byte	.LFE850-.LFB850
	.byte	0x4
	.4byte	.LCFI4150-.LFB850
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI4156-.LCFI4150
	.byte	0xe
	.uleb128 0x8c
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x90
	.uleb128 0x5
	.align	4
.LEFDE1564:
.LSFDE1566:
	.4byte	.LEFDE1566-.LASFDE1566
.LASFDE1566:
	.4byte	.Lframe0
	.4byte	.LFB884
	.4byte	.LFE884-.LFB884
	.byte	0x4
	.4byte	.LCFI4157-.LFB884
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4168-.LCFI4157
	.byte	0xe
	.uleb128 0xd0
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x90
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.align	4
.LEFDE1566:
.LSFDE1568:
	.4byte	.LEFDE1568-.LASFDE1568
.LASFDE1568:
	.4byte	.Lframe0
	.4byte	.LFB1423
	.4byte	.LFE1423-.LFB1423
	.byte	0x4
	.4byte	.LCFI4177-.LFB1423
	.byte	0x9a
	.uleb128 0x2
	.byte	0x98
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x7
	.byte	0x8e
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI4178-.LCFI4177
	.byte	0xe
	.uleb128 0x44
	.align	4
.LEFDE1568:
.LSFDE1570:
	.4byte	.LEFDE1570-.LASFDE1570
.LASFDE1570:
	.4byte	.Lframe0
	.4byte	.LFB889
	.4byte	.LFE889-.LFB889
	.byte	0x4
	.4byte	.LCFI4179-.LFB889
	.byte	0x82
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI4184-.LCFI4179
	.byte	0xe
	.uleb128 0x28
	.byte	0x90
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.align	4
.LEFDE1570:
.LSFDE1572:
	.4byte	.LEFDE1572-.LASFDE1572
.LASFDE1572:
	.4byte	.Lframe0
	.4byte	.LFB891
	.4byte	.LFE891-.LFB891
	.byte	0x4
	.4byte	.LCFI4195-.LFB891
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4196-.LCFI4195
	.byte	0xe
	.uleb128 0x38
	.align	4
.LEFDE1572:
.LSFDE1574:
	.4byte	.LEFDE1574-.LASFDE1574
.LASFDE1574:
	.4byte	.Lframe0
	.4byte	.LFB895
	.4byte	.LFE895-.LFB895
	.byte	0x4
	.4byte	.LCFI4203-.LFB895
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4208-.LCFI4203
	.byte	0xe
	.uleb128 0x90
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1574:
.LSFDE1576:
	.4byte	.LEFDE1576-.LASFDE1576
.LASFDE1576:
	.4byte	.Lframe0
	.4byte	.LFB874
	.4byte	.LFE874-.LFB874
	.byte	0x4
	.4byte	.LCFI4220-.LFB874
	.byte	0xe
	.uleb128 0x48
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.align	4
.LEFDE1576:
.LSFDE1578:
	.4byte	.LEFDE1578-.LASFDE1578
.LASFDE1578:
	.4byte	.Lframe0
	.4byte	.LFB1079
	.4byte	.LFE1079-.LFB1079
	.byte	0x4
	.4byte	.LCFI4222-.LFB1079
	.byte	0x96
	.uleb128 0x6
	.byte	0x90
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI4232-.LCFI4222
	.byte	0xe
	.uleb128 0x54
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1578:
.LSFDE1580:
	.4byte	.LEFDE1580-.LASFDE1580
.LASFDE1580:
	.4byte	.Lframe0
	.4byte	.LFB820
	.4byte	.LFE820-.LFB820
	.byte	0x4
	.4byte	.LCFI4233-.LFB820
	.byte	0x92
	.uleb128 0x5
	.byte	0x4
	.4byte	.LCFI4240-.LCFI4233
	.byte	0x94
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x90
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x4
	.4byte	.LCFI4241-.LCFI4240
	.byte	0xe
	.uleb128 0x28
	.align	4
.LEFDE1580:
.LSFDE1582:
	.4byte	.LEFDE1582-.LASFDE1582
.LASFDE1582:
	.4byte	.Lframe0
	.4byte	.LFB823
	.4byte	.LFE823-.LFB823
	.byte	0x4
	.4byte	.LCFI4243-.LFB823
	.byte	0x94
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI4246-.LCFI4243
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI4248-.LCFI4246
	.byte	0xe
	.uleb128 0x18
	.byte	0x92
	.uleb128 0x3
	.align	4
.LEFDE1582:
.LSFDE1584:
	.4byte	.LEFDE1584-.LASFDE1584
.LASFDE1584:
	.4byte	.Lframe0
	.4byte	.LFB824
	.4byte	.LFE824-.LFB824
	.byte	0x4
	.4byte	.LCFI4253-.LFB824
	.byte	0x90
	.uleb128 0x3
	.byte	0x82
	.uleb128 0x5
	.byte	0x89
	.uleb128 0x1
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x4
	.4byte	.LCFI4254-.LCFI4253
	.byte	0xe
	.uleb128 0x14
	.align	4
.LEFDE1584:
.LSFDE1586:
	.4byte	.LEFDE1586-.LASFDE1586
.LASFDE1586:
	.4byte	.Lframe0
	.4byte	.LFB825
	.4byte	.LFE825-.LFB825
	.byte	0x4
	.4byte	.LCFI4262-.LFB825
	.byte	0xe
	.uleb128 0x20
	.byte	0x96
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.align	4
.LEFDE1586:
.LSFDE1588:
	.4byte	.LEFDE1588-.LASFDE1588
.LASFDE1588:
	.4byte	.Lframe0
	.4byte	.LFB817
	.4byte	.LFE817-.LFB817
	.byte	0x4
	.4byte	.LCFI4272-.LFB817
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x96
	.uleb128 0x5
	.byte	0x82
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0x9
	.byte	0x4
	.4byte	.LCFI4273-.LCFI4272
	.byte	0xe
	.uleb128 0x4c
	.align	4
.LEFDE1588:
.LSFDE1590:
	.4byte	.LEFDE1590-.LASFDE1590
.LASFDE1590:
	.4byte	.Lframe0
	.4byte	.LFB818
	.4byte	.LFE818-.LFB818
	.byte	0x4
	.4byte	.LCFI4284-.LFB818
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x94
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4285-.LCFI4284
	.byte	0xe
	.uleb128 0x48
	.align	4
.LEFDE1590:
.LSFDE1592:
	.4byte	.LEFDE1592-.LASFDE1592
.LASFDE1592:
	.4byte	.Lframe0
	.4byte	.LFB1111
	.4byte	.LFE1111-.LFB1111
	.byte	0x4
	.4byte	.LCFI4289-.LFB1111
	.byte	0x94
	.uleb128 0x2
	.byte	0x90
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI4292-.LCFI4289
	.byte	0xe
	.uleb128 0x30
	.byte	0x92
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1592:
.LSFDE1594:
	.4byte	.LEFDE1594-.LASFDE1594
.LASFDE1594:
	.4byte	.Lframe0
	.4byte	.LFB1017
	.4byte	.LFE1017-.LFB1017
	.byte	0x4
	.4byte	.LCFI4297-.LFB1017
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4304-.LCFI4297
	.byte	0xe
	.uleb128 0x244
	.byte	0x9a
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1594:
.LSFDE1596:
	.4byte	.LEFDE1596-.LASFDE1596
.LASFDE1596:
	.4byte	.Lframe0
	.4byte	.LFB1018
	.4byte	.LFE1018-.LFB1018
	.byte	0x4
	.4byte	.LCFI4305-.LFB1018
	.byte	0x8e
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI4312-.LCFI4305
	.byte	0xe
	.uleb128 0x1c
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x82
	.uleb128 0x7
	.align	4
.LEFDE1596:
.LSFDE1598:
	.4byte	.LEFDE1598-.LASFDE1598
.LASFDE1598:
	.4byte	.Lframe0
	.4byte	.LFB1022
	.4byte	.LFE1022-.LFB1022
	.byte	0x4
	.4byte	.LCFI4319-.LFB1022
	.byte	0x94
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI4320-.LCFI4319
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1598:
.LSFDE1600:
	.4byte	.LEFDE1600-.LASFDE1600
.LASFDE1600:
	.4byte	.Lframe0
	.4byte	.LFB1024
	.4byte	.LFE1024-.LFB1024
	.byte	0x4
	.4byte	.LCFI4322-.LFB1024
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1600:
.LSFDE1602:
	.4byte	.LEFDE1602-.LASFDE1602
.LASFDE1602:
	.4byte	.Lframe0
	.4byte	.LFB1023
	.4byte	.LFE1023-.LFB1023
	.byte	0x4
	.4byte	.LCFI4324-.LFB1023
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1602:
.LSFDE1604:
	.4byte	.LEFDE1604-.LASFDE1604
.LASFDE1604:
	.4byte	.Lframe0
	.4byte	.LFB1021
	.4byte	.LFE1021-.LFB1021
	.byte	0x4
	.4byte	.LCFI4326-.LFB1021
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1604:
.LSFDE1606:
	.4byte	.LEFDE1606-.LASFDE1606
.LASFDE1606:
	.4byte	.Lframe0
	.4byte	.LFB1020
	.4byte	.LFE1020-.LFB1020
	.byte	0x4
	.4byte	.LCFI4328-.LFB1020
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1606:
.LSFDE1608:
	.4byte	.LEFDE1608-.LASFDE1608
.LASFDE1608:
	.4byte	.Lframe0
	.4byte	.LFB829
	.4byte	.LFE829-.LFB829
	.byte	0x4
	.4byte	.LCFI4338-.LFB829
	.byte	0x9c
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x5
	.byte	0x92
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x8
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x94
	.uleb128 0x6
	.byte	0x8e
	.uleb128 0x9
	.byte	0x82
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI4339-.LCFI4338
	.byte	0xe
	.uleb128 0x30
	.align	4
.LEFDE1608:
.LSFDE1610:
	.4byte	.LEFDE1610-.LASFDE1610
.LASFDE1610:
	.4byte	.Lframe0
	.4byte	.LFB1074
	.4byte	.LFE1074-.LFB1074
	.byte	0x4
	.4byte	.LCFI4340-.LFB1074
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI4347-.LCFI4340
	.byte	0xe
	.uleb128 0x3c
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.align	4
.LEFDE1610:
.LSFDE1612:
	.4byte	.LEFDE1612-.LASFDE1612
.LASFDE1612:
	.4byte	.Lframe0
	.4byte	.LFB692
	.4byte	.LFE692-.LFB692
	.byte	0x4
	.4byte	.LCFI4359-.LFB692
	.byte	0xe
	.uleb128 0x2d0
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9c
	.uleb128 0x3
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x82
	.uleb128 0xb
	.align	4
.LEFDE1612:
.LSFDE1614:
	.4byte	.LEFDE1614-.LASFDE1614
.LASFDE1614:
	.4byte	.Lframe0
	.4byte	.LFB1099
	.4byte	.LFE1099-.LFB1099
	.byte	0x4
	.4byte	.LCFI4363-.LFB1099
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x82
	.uleb128 0x3
	.align	4
.LEFDE1614:
.LSFDE1616:
	.4byte	.LEFDE1616-.LASFDE1616
.LASFDE1616:
	.4byte	.Lframe0
	.4byte	.LFB1224
	.4byte	.LFE1224-.LFB1224
	.byte	0x4
	.4byte	.LCFI4365-.LFB1224
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE1616:
.LSFDE1618:
	.4byte	.LEFDE1618-.LASFDE1618
.LASFDE1618:
	.4byte	.Lframe0
	.4byte	.LFB1226
	.4byte	.LFE1226-.LFB1226
	.byte	0x4
	.4byte	.LCFI4367-.LFB1226
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE1618:
.LSFDE1620:
	.4byte	.LEFDE1620-.LASFDE1620
.LASFDE1620:
	.4byte	.Lframe0
	.4byte	.LFB1228
	.4byte	.LFE1228-.LFB1228
	.byte	0x4
	.4byte	.LCFI4369-.LFB1228
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1620:
.LSFDE1622:
	.4byte	.LEFDE1622-.LASFDE1622
.LASFDE1622:
	.4byte	.Lframe0
	.4byte	.LFB1229
	.4byte	.LFE1229-.LFB1229
	.byte	0x4
	.4byte	.LCFI4371-.LFB1229
	.byte	0xe
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1622:
.LSFDE1624:
	.4byte	.LEFDE1624-.LASFDE1624
.LASFDE1624:
	.4byte	.Lframe0
	.4byte	.LFB1230
	.4byte	.LFE1230-.LFB1230
	.byte	0x4
	.4byte	.LCFI4372-.LFB1230
	.byte	0x90
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI4377-.LCFI4372
	.byte	0xe
	.uleb128 0x14
	.byte	0x92
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x4
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x5
	.align	4
.LEFDE1624:
.LSFDE1626:
	.4byte	.LEFDE1626-.LASFDE1626
.LASFDE1626:
	.4byte	.Lframe0
	.4byte	.LFB1231
	.4byte	.LFE1231-.LFB1231
	.byte	0x4
	.4byte	.LCFI4380-.LFB1231
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1626:
.LSFDE1628:
	.4byte	.LEFDE1628-.LASFDE1628
.LASFDE1628:
	.4byte	.Lframe0
	.4byte	.LFB1232
	.4byte	.LFE1232-.LFB1232
	.byte	0x4
	.4byte	.LCFI4383-.LFB1232
	.byte	0xe
	.uleb128 0x8
	.byte	0x82
	.uleb128 0x2
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1628:
.LSFDE1630:
	.4byte	.LEFDE1630-.LASFDE1630
.LASFDE1630:
	.4byte	.Lframe0
	.4byte	.LFB1233
	.4byte	.LFE1233-.LFB1233
	.byte	0x4
	.4byte	.LCFI4390-.LFB1233
	.byte	0x89
	.uleb128 0x1
	.byte	0x96
	.uleb128 0x2
	.byte	0x94
	.uleb128 0x3
	.byte	0x92
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x6
	.byte	0x82
	.uleb128 0x7
	.byte	0x4
	.4byte	.LCFI4391-.LCFI4390
	.byte	0xe
	.uleb128 0x1c
	.align	4
.LEFDE1630:
.LSFDE1632:
	.4byte	.LEFDE1632-.LASFDE1632
.LASFDE1632:
	.4byte	.Lframe0
	.4byte	.LFB1234
	.4byte	.LFE1234-.LFB1234
	.byte	0x4
	.4byte	.LCFI4393-.LFB1234
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE1632:
.LSFDE1634:
	.4byte	.LEFDE1634-.LASFDE1634
.LASFDE1634:
	.4byte	.Lframe0
	.4byte	.LFB1235
	.4byte	.LFE1235-.LFB1235
	.byte	0x4
	.4byte	.LCFI4395-.LFB1235
	.byte	0xe
	.uleb128 0x4
	.byte	0x82
	.uleb128 0x1
	.align	4
.LEFDE1634:
.LSFDE1636:
	.4byte	.LEFDE1636-.LASFDE1636
.LASFDE1636:
	.4byte	.Lframe0
	.4byte	.LFB1236
	.4byte	.LFE1236-.LFB1236
	.align	4
.LEFDE1636:
.LSFDE1638:
	.4byte	.LEFDE1638-.LASFDE1638
.LASFDE1638:
	.4byte	.Lframe0
	.4byte	.LFB1237
	.4byte	.LFE1237-.LFB1237
	.align	4
.LEFDE1638:
.LSFDE1640:
	.4byte	.LEFDE1640-.LASFDE1640
.LASFDE1640:
	.4byte	.Lframe0
	.4byte	.LFB1238
	.4byte	.LFE1238-.LFB1238
	.align	4
.LEFDE1640:
.LSFDE1642:
	.4byte	.LEFDE1642-.LASFDE1642
.LASFDE1642:
	.4byte	.Lframe0
	.4byte	.LFB1239
	.4byte	.LFE1239-.LFB1239
	.byte	0x4
	.4byte	.LCFI4398-.LFB1239
	.byte	0x82
	.uleb128 0x3
	.byte	0x89
	.uleb128 0x1
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI4399-.LCFI4398
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1642:
.LSFDE1644:
	.4byte	.LEFDE1644-.LASFDE1644
.LASFDE1644:
	.4byte	.Lframe0
	.4byte	.LFB1240
	.4byte	.LFE1240-.LFB1240
	.align	4
.LEFDE1644:
.LSFDE1646:
	.4byte	.LEFDE1646-.LASFDE1646
.LASFDE1646:
	.4byte	.Lframe0
	.4byte	.LFB1241
	.4byte	.LFE1241-.LFB1241
	.byte	0x4
	.4byte	.LCFI4407-.LFB1241
	.byte	0x92
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x7
	.byte	0x82
	.uleb128 0x8
	.byte	0x89
	.uleb128 0x1
	.byte	0x98
	.uleb128 0x2
	.byte	0x96
	.uleb128 0x3
	.byte	0x94
	.uleb128 0x4
	.byte	0x90
	.uleb128 0x6
	.byte	0x4
	.4byte	.LCFI4408-.LCFI4407
	.byte	0xe
	.uleb128 0x20
	.align	4
.LEFDE1646:
.LSFDE1648:
	.4byte	.LEFDE1648-.LASFDE1648
.LASFDE1648:
	.4byte	.Lframe0
	.4byte	.LFB1242
	.4byte	.LFE1242-.LFB1242
	.byte	0x4
	.4byte	.LCFI4419-.LFB1242
	.byte	0xe
	.uleb128 0x2c
	.byte	0x9c
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x3
	.byte	0x98
	.uleb128 0x4
	.byte	0x96
	.uleb128 0x5
	.byte	0x94
	.uleb128 0x6
	.byte	0x92
	.uleb128 0x7
	.byte	0x90
	.uleb128 0x8
	.byte	0x8e
	.uleb128 0x9
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0xa
	.align	4
.LEFDE1648:
.LSFDE1650:
	.4byte	.LEFDE1650-.LASFDE1650
.LASFDE1650:
	.4byte	.Lframe0
	.4byte	.LFB1243
	.4byte	.LFE1243-.LFB1243
	.align	4
.LEFDE1650:
.LSFDE1652:
	.4byte	.LEFDE1652-.LASFDE1652
.LASFDE1652:
	.4byte	.Lframe0
	.4byte	.LFB1244
	.4byte	.LFE1244-.LFB1244
	.byte	0x4
	.4byte	.LCFI4420-.LFB1244
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.4byte	.LCFI4422-.LCFI4420
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x3
	.byte	0x4
	.4byte	.LCFI4423-.LCFI4422
	.byte	0xe
	.uleb128 0xc
	.align	4
.LEFDE1652:
.LSFDE1654:
	.4byte	.LEFDE1654-.LASFDE1654
.LASFDE1654:
	.4byte	.Lframe0
	.4byte	.LFB1245
	.4byte	.LFE1245-.LFB1245
	.byte	0x4
	.4byte	.LCFI4426-.LFB1245
	.byte	0xe
	.uleb128 0x10
	.byte	0x89
	.uleb128 0x1
	.byte	0x82
	.uleb128 0x2
	.align	4
.LEFDE1654:
.LSFDE1656:
	.4byte	.LEFDE1656-.LASFDE1656
.LASFDE1656:
	.4byte	.Lframe0
	.4byte	.LFB1246
	.4byte	.LFE1246-.LFB1246
	.align	4
.LEFDE1656:
.LSFDE1658:
	.4byte	.LEFDE1658-.LASFDE1658
.LASFDE1658:
	.4byte	.Lframe0
	.4byte	.LFB1247
	.4byte	.LFE1247-.LFB1247
	.byte	0x4
	.4byte	.LCFI4428-.LFB1247
	.byte	0x9c
	.uleb128 0x3
	.byte	0x82
	.uleb128 0xb
	.byte	0x4
	.4byte	.LCFI4438-.LCFI4428
	.byte	0xe
	.uleb128 0x6c
	.byte	0x9e
	.uleb128 0x2
	.byte	0x9a
	.uleb128 0x4
	.byte	0x98
	.uleb128 0x5
	.byte	0x96
	.uleb128 0x6
	.byte	0x94
	.uleb128 0x7
	.byte	0x92
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x9
	.byte	0x8e
	.uleb128 0xa
	.byte	0x89
	.uleb128 0x1
	.align	4
.LEFDE1658:
	.ident	"GCC: (OpenRISC 32-bit toolchain for or32-linux (built 20150904)) 4.5.1-or32-1.0rc4"
